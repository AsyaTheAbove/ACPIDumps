
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20190509
Copyright (c) 2000 - 2019 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x0000148F  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 02)  MCFG  0x0000003C  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 03)  ASF!  0x000000A5  0x20  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 04)  APIC  0x00000090  0x03  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 05)  SSDT  0x0000489D  0x02  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 06)  VFCT  0x0000EC84  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 07)  BOOT  0x00000028  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 08)  UEFI  0x00000236  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 09)  DSDT  0x00007291  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 10)  SSDT  0x00000FB4  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 11)  SSDT  0x0000008C  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 12)  SSDT  0x00000418  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 13)  FACP  0x0000010C  0x05  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 14)  FPDT  0x00000044  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 15)  SSDT  0x00000B10  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 16)  MSDM  0x00000055  0x03  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 17)  HPET  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 18)  SSDT  0x00001138  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000
 19)  FACS  0x00000040  0x02
 20)  BGRT  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000001  "ACPI"   0x00040000

Found 20 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000090
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 91
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 01
[037h 0055   1]                Local Apic ID : 01
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 02
[03Fh 0063   1]                Local Apic ID : 02
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 03
[047h 0071   1]                Local Apic ID : 03
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 01 [I/O APIC]
[04Dh 0077   1]                       Length : 0C
[04Eh 0078   1]                  I/O Apic ID : 04
[04Fh 0079   1]                     Reserved : 00
[050h 0080   4]                      Address : FEC00000
[054h 0084   4]                    Interrupt : 00000000

[058h 0088   1]                Subtable Type : 01 [I/O APIC]
[059h 0089   1]                       Length : 0C
[05Ah 0090   1]                  I/O Apic ID : 05
[05Bh 0091   1]                     Reserved : 00
[05Ch 0092   4]                      Address : FEC01000
[060h 0096   4]                    Interrupt : 00000018

[064h 0100   1]                Subtable Type : 02 [Interrupt Source Override]
[065h 0101   1]                       Length : 0A
[066h 0102   1]                          Bus : 00
[067h 0103   1]                       Source : 00
[068h 0104   4]                    Interrupt : 00000002
[06Ch 0108   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[06Eh 0110   1]                Subtable Type : 02 [Interrupt Source Override]
[06Fh 0111   1]                       Length : 0A
[070h 0112   1]                          Bus : 00
[071h 0113   1]                       Source : 09
[072h 0114   4]                    Interrupt : 00000009
[076h 0118   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[078h 0120   1]                Subtable Type : 04 [Local APIC NMI]
[079h 0121   1]                       Length : 06
[07Ah 0122   1]                 Processor ID : 00
[07Bh 0123   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[07Dh 0125   1]         Interrupt Input LINT : 01

[07Eh 0126   1]                Subtable Type : 04 [Local APIC NMI]
[07Fh 0127   1]                       Length : 06
[080h 0128   1]                 Processor ID : 01
[081h 0129   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[083h 0131   1]         Interrupt Input LINT : 01

[084h 0132   1]                Subtable Type : 04 [Local APIC NMI]
[085h 0133   1]                       Length : 06
[086h 0134   1]                 Processor ID : 02
[087h 0135   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[089h 0137   1]         Interrupt Input LINT : 01

[08Ah 0138   1]                Subtable Type : 04 [Local APIC NMI]
[08Bh 0139   1]                       Length : 06
[08Ch 0140   1]                 Processor ID : 03
[08Dh 0141   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[08Fh 0143   1]         Interrupt Input LINT : 01

Raw Table Data: Length 144 (0x90)

    0000: 41 50 49 43 90 00 00 00 03 91 4C 45 4E 4F 56 4F  // APIC......LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 01 01 01 00 00 00 00 08 02 02  // ................
    0040: 01 00 00 00 00 08 03 03 01 00 00 00 01 0C 04 00  // ................
    0050: 00 00 C0 FE 00 00 00 00 01 0C 05 00 00 10 C0 FE  // ................
    0060: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    0070: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    0080: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................


ASF!
----
[000h 0000   4]                    Signature : "ASF!"    [Alert Standard Format table]
[004h 0004   4]                 Table Length : 000000A5
[008h 0008   1]                     Revision : 20
[009h 0009   1]                     Checksum : 3F
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]                Subtable Type : 00 [ASF Information]
[025h 0037   1]                     Reserved : 00
[026h 0038   2]                       Length : 0010
[028h 0040   1]          Minimum Reset Value : 00
[029h 0041   1]     Minimum Polling Interval : FF
[02Ah 0042   2]                    System ID : 0001
[02Ch 0044   4]              Manufacturer ID : 57010000
[030h 0048   1]                        Flags : 00
[031h 0049   3]                     Reserved : 000000

[034h 0052   1]                Subtable Type : 01 [ASF Alerts]
[035h 0053   1]                     Reserved : 00
[036h 0054   2]                       Length : 002C
[038h 0056   1]                   AssertMask : 00
[039h 0057   1]                 DeassertMask : 00
[03Ah 0058   1]                  Alert Count : 03
[03Bh 0059   1]            Alert Data Length : 0C

[03Ch 0060   1]                      Address : 80
[03Dh 0061   1]                      Command : 23
[03Eh 0062   1]                         Mask : 01
[03Fh 0063   1]                        Value : 01
[040h 0064   1]                   SensorType : 01
[041h 0065   1]                         Type : 01
[042h 0066   1]                       Offset : 00
[043h 0067   1]                   SourceType : 39
[044h 0068   1]                     Severity : 10
[045h 0069   1]                 SensorNumber : 00
[046h 0070   1]                       Entity : 07
[047h 0071   1]                     Instance : 00

[048h 0072   1]                      Address : 80
[049h 0073   1]                      Command : 23
[04Ah 0074   1]                         Mask : 02
[04Bh 0075   1]                        Value : 02
[04Ch 0076   1]                   SensorType : 01
[04Dh 0077   1]                         Type : 01
[04Eh 0078   1]                       Offset : 00
[04Fh 0079   1]                   SourceType : 39
[050h 0080   1]                     Severity : 10
[051h 0081   1]                 SensorNumber : 01
[052h 0082   1]                       Entity : 07
[053h 0083   1]                     Instance : 00

[054h 0084   1]                      Address : 80
[055h 0085   1]                      Command : 23
[056h 0086   1]                         Mask : 04
[057h 0087   1]                        Value : 04
[058h 0088   1]                   SensorType : 01
[059h 0089   1]                         Type : 01
[05Ah 0090   1]                       Offset : 00
[05Bh 0091   1]                   SourceType : 39
[05Ch 0092   1]                     Severity : 10
[05Dh 0093   1]                 SensorNumber : 02
[05Eh 0094   1]                       Entity : 07
[05Fh 0095   1]                     Instance : 00

[060h 0096   1]                Subtable Type : 02 [ASF Remote Control]
[061h 0097   1]                     Reserved : 00
[062h 0098   2]                       Length : 0018
[064h 0100   1]                Control Count : 04
[065h 0101   1]          Control Data Length : 04
[066h 0102   2]                     Reserved : 0000

[068h 0104   1]                     Function : 00
[069h 0105   1]                      Address : 71
[06Ah 0106   1]                      Command : 00
[06Bh 0107   1]                        Value : 00

[06Ch 0108   1]                     Function : 01
[06Dh 0109   1]                      Address : 71
[06Eh 0110   1]                      Command : 02
[06Fh 0111   1]                        Value : 00

[070h 0112   1]                     Function : 02
[071h 0113   1]                      Address : 71
[072h 0114   1]                      Command : 01
[073h 0115   1]                        Value : 00

[074h 0116   1]                     Function : 03
[075h 0117   1]                      Address : 71
[076h 0118   1]                      Command : 03
[077h 0119   1]                        Value : 00

[078h 0120   1]                Subtable Type : 03 [ASF RMCP Boot Options]
[079h 0121   1]                     Reserved : 00
[07Ah 0122   2]                       Length : 0017
[07Ch 0124   7]                 Capabilities : 21 F8 00 00 00 1B F0
[083h 0131   1]              Completion Code : 00
[084h 0132   4]                Enterprise ID : 57010000
[088h 0136   1]                      Command : 00
[089h 0137   2]                    Parameter : 0100
[08Bh 0139   2]                 Boot Options : 7000
[08Dh 0141   2]               Oem Parameters : 1600

[08Fh 0143   1]                Subtable Type : 00 [ASF Information]
[090h 0144   1]                     Reserved : 10
[091h 0145   2]                       Length : 00A0
[093h 0147   1]          Minimum Reset Value : A2
[094h 0148   1]     Minimum Polling Interval : A4
[095h 0149   2]                    System ID : 0000
[097h 0151   4]              Manufacturer ID : 00000000
[09Bh 0155   1]                        Flags : 00
[09Ch 0156   3]                     Reserved : 000000


Raw Table Data: Length 165 (0xA5)

    0000: 41 53 46 21 A5 00 00 00 20 3F 4C 45 4E 4F 56 4F  // ASF!.... ?LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 00 00 10 00 00 FF 01 00 00 00 01 57  // ...............W
    0030: 00 00 00 00 01 00 2C 00 00 00 03 0C 80 23 01 01  // ......,......#..
    0040: 01 01 00 39 10 00 07 00 80 23 02 02 01 01 00 39  // ...9.....#.....9
    0050: 10 01 07 00 80 23 04 04 01 01 00 39 10 02 07 00  // .....#.....9....
    0060: 02 00 18 00 04 04 00 00 00 71 00 00 01 71 02 00  // .........q...q..
    0070: 02 71 01 00 03 71 03 00 03 00 17 00 21 F8 00 00  // .q...q......!...
    0080: 00 1B F0 00 00 00 01 57 00 00 01 00 70 00 16 00  // .......W....p...
    0090: 10 A0 00 A2 A4 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 00                                   // .....


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 4C
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 00
                                   Displayed : 0
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000BC62A000
[030h 0048   4]                Image OffsetX : 00000199
[034h 0052   4]                Image OffsetY : 0000008B

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 4C 4C 45 4E 4F 56 4F  // BGRT8....LLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 01 00 00 00 00 A0 62 BC 00 00 00 00  // ..........b.....
    0030: 99 01 00 00 8B 00 00 00                          // ........


BOOT
----
[000h 0000   4]                    Signature : "BOOT"    [Simple Boot Flag Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F7
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]          Boot Register Index : 44
[025h 0037   3]                     Reserved : 000000

Raw Table Data: Length 40 (0x28)

    0000: 42 4F 4F 54 28 00 00 00 01 F7 4C 45 4E 4F 56 4F  // BOOT(.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 44 00 00 00                          // ....D...


DSDT
----
DefinitionBlock ("", "DSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There were 5 external control methods found during
     * disassembly, but only 0 were resolved (5 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.C000._PPC, IntObj)
    External (_PR_.C000.PPCV, UnknownObj)
    External (_SB_.APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M029, UnknownObj)

    OperationRegion (DBG0, SystemIO, 0x80, One)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (DBG1, SystemIO, 0x80, 0x02)
    Field (DBG1, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (IMIO, SystemIO, 0x3E, 0x02)
    Field (IMIO, ByteAcc, NoLock, Preserve)
    {
        IMCX,   8, 
        IMCA,   8
    }

    IndexField (IMCX, IMCA, ByteAcc, NoLock, Preserve)
    {
        Offset (0x80), 
        MSTI,   8, 
        MITS,   8, 
        MRG0,   8, 
        MRG1,   8, 
        MRG2,   8, 
        MRG3,   8
    }

    OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemIO, 0x0CD6, 0x02)
    Field (PMRG, ByteAcc, NoLock, Preserve)
    {
        PMRI,   8, 
        PMRD,   8
    }

    IndexField (PMRI, PMRD, ByteAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0xC8), 
            ,   2, 
        SPRE,   1, 
        TPDE,   1, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMG, SystemMemory, 0xFED81500, 0x03FF)
    Field (GSMG, AnyAcc, NoLock, Preserve)
    {
        Offset (0x18), 
        Offset (0x1A), 
        GE10,   1, 
        Offset (0x1C), 
        Offset (0x1E), 
        GE11,   1, 
        Offset (0x40), 
        Offset (0x42), 
        GE12,   1, 
        Offset (0x100), 
        Offset (0x102), 
        GP49,   1, 
        Offset (0x108), 
        Offset (0x10A), 
        GP51,   1, 
        Offset (0x10C), 
        Offset (0x10E), 
        GP55,   1, 
        Offset (0x110), 
        Offset (0x112), 
        GP57,   1, 
            ,   5, 
        O57,    1, 
        Offset (0x114), 
        Offset (0x116), 
        GP58,   1, 
            ,   5, 
        O58,    1, 
        Offset (0x118), 
        Offset (0x11A), 
        GP59,   1, 
        Offset (0x11C), 
        Offset (0x11E), 
        GP64,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x200), 
            ,   1, 
        G01S,   1, 
        Offset (0x204), 
            ,   1, 
        G01E,   1, 
        Offset (0x208), 
            ,   1, 
        TR01,   1, 
        Offset (0x20C), 
            ,   1, 
        TL01,   1, 
        Offset (0x20E), 
            ,   7, 
        ACIR,   1, 
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x299), 
            ,   7, 
        G15A,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2, 
        Offset (0x377), 
        EPNM,   1, 
        DPPF,   1, 
        Offset (0x3BB), 
            ,   6, 
        PWDE,   1, 
        Offset (0x3BE), 
            ,   5, 
        ALLS,   1, 
        Offset (0x3E4), 
        BLNK,   2, 
        Offset (0x3F0), 
        PHYD,   1, 
        Offset (0xE81), 
            ,   2, 
        ECES,   1
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
            ,   14, 
        PEWS,   1, 
        WSTA,   1, 
            ,   14, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, 0x0400, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        PRWP [One] = Arg1
        If ((DAS3 == Zero))
        {
            If ((Arg1 <= 0x03))
            {
                PRWP [One] = Zero
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Method (SPTS, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
    }

    Method (SWAK, 1, NotSerialized)
    {
        BLNK = 0x03
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PWDE = One
        PEWD = Zero
    }

    Method (CHKH, 0, NotSerialized)
    {
        BLNK = 0x03
    }

    OperationRegion (ABIO, SystemIO, 0x0CD8, 0x08)
    Field (ABIO, DWordAcc, NoLock, Preserve)
    {
        INAB,   32, 
        DAAB,   32
    }

    Method (RDAB, 1, NotSerialized)
    {
        INAB = Arg0
        Return (DAAB) /* \DAAB */
    }

    Method (WTAB, 2, NotSerialized)
    {
        INAB = Arg0
        DAAB = Arg1
    }

    Method (RWAB, 3, NotSerialized)
    {
        Local0 = (RDAB (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        WTAB (Arg0, Local1)
    }

    Method (CABR, 3, NotSerialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Name (DOKB, Buffer (0x03){})
    Mutex (DKMX, 0x00)
    OperationRegion (PEBA, SystemMemory, 0xF8000000, 0x02000000)
    Field (PEBA, AnyAcc, NoLock, Preserve)
    {
        Offset (0xA807A), 
        PMS0,   1, 
        Offset (0xA8088), 
        TLS0,   4, 
        Offset (0xA907A), 
        PMS1,   1, 
        Offset (0xA9088), 
        TLS1,   4, 
        Offset (0xAA07A), 
        PMS2,   1, 
        Offset (0xAA088), 
        TLS2,   4, 
        Offset (0xAB07A), 
        PMS3,   1, 
        Offset (0xAB088), 
        TLS3,   4
    }

    OperationRegion (GNVS, SystemMemory, 0xBFBBAE98, 0x00000021)
    Field (GNVS, AnyAcc, NoLock, Preserve)
    {
        DAS3,   8, 
        TNBH,   8, 
        TCP0,   8, 
        TCP1,   8, 
        ATNB,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PWMN,   8, 
        LPTY,   8, 
        M92D,   8, 
        WKPM,   8, 
        ALST,   8, 
        AFUC,   8, 
        EXUS,   8, 
        AIRC,   8, 
        WLSH,   8, 
        TSSS,   8, 
        AOZP,   8, 
        TZFG,   8, 
        BPS0,   8, 
        NAPC,   8, 
        PCBA,   32, 
        PCBL,   32, 
        WLAN,   8, 
        BLTH,   8, 
        GPSS,   8, 
        NFCS,   8
    }

    OperationRegion (OGNS, SystemMemory, 0xBFBA7C98, 0x0000020B)
    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        EGPO,   8, 
        BTBE,   8, 
        WBEN,   8, 
        OG03,   8, 
        PBAR,   8, 
        OG05,   8, 
        OG06,   8, 
        OG07,   8, 
        OG08,   8, 
        OG09,   8, 
        OG10,   8, 
        RSV0,   32, 
        BDID,   8, 
        CPFB,   8, 
        PBTI,   8, 
        BRLV,   8, 
        CAVR,   8, 
        TJMA,   16, 
        CORE,   8, 
        CG12,   8, 
        TPID,   8, 
        CG14,   8, 
        CG15,   8, 
        CG16,   8, 
        CG17,   8, 
        CG18,   8, 
        CG19,   8, 
        CG20,   8, 
        CG21,   8, 
        CG22,   8, 
        CG23,   8, 
        CG24,   8, 
        CG25,   8, 
        CG26,   8, 
        CG27,   8, 
        CG28,   8, 
        CG29,   8, 
        CG30,   8, 
        CG31,   8, 
        SFNO,   16, 
        STDT,   16, 
        BFDT,   1024, 
        RSV1,   736, 
        IDFD,   1024, 
        RSV2,   1024
    }

    OperationRegion (NVST, SystemMemory, 0xBFBA8E91, 0x0000012D)
    Field (NVST, AnyAcc, Lock, Preserve)
    {
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        BRTL,   8, 
        TLST,   8, 
        IGDS,   8, 
        LCDA,   16, 
        CSTE,   16, 
        NSTE,   16, 
        CADL,   16, 
        PADL,   16, 
        LIDS,   8, 
        PWRS,   8, 
        BVAL,   32, 
        ADDL,   16, 
        BCMD,   8, 
        SBFN,   8, 
        DID,    32, 
        INFO,   2048, 
        TOML,   8, 
        TOMH,   8, 
        CEBP,   8, 
        C0LS,   8, 
        C1LS,   8, 
        C0HS,   8, 
        C1HS,   8, 
        ROMS,   32, 
        MUXF,   8, 
        PDDN,   8
    }

    Method (SCMP, 2, NotSerialized)
    {
        Name (STG1, Buffer (0x50){})
        Name (STG2, Buffer (0x50){})
        STG1 = Arg0
        STG2 = Arg1
        If ((SizeOf (Arg0) != SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = Zero
        While ((Local0 < SizeOf (Arg0)))
        {
            If ((DerefOf (STG1 [Local0]) != DerefOf (STG2 [Local0]
                )))
            {
                Return (Zero)
            }

            Local0++
        }

        Return (One)
    }

    Name (WNOS, Zero)
    Name (MYOS, Zero)
    Name (HTTS, Zero)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Name (BUFN, Zero)
    Name (MBUF, Buffer (0x1000){})
    OperationRegion (MDBG, SystemMemory, 0xBFB64018, 0x00001004)
    Field (MDBG, AnyAcc, Lock, Preserve)
    {
        MDG0,   32768
    }

    Method (DB2H, 1, Serialized)
    {
        SHOW (Arg0)
        MDGC (0x20)
        MDG0 = MBUF /* \MBUF */
    }

    Method (DW2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x08)
        Local0 &= 0xFF
        Local1 &= 0xFF
        DB2H (Local1)
        BUFN--
        DB2H (Local0)
    }

    Method (DD2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x10)
        Local0 &= 0xFFFF
        Local1 &= 0xFFFF
        DW2H (Local1)
        BUFN--
        DW2H (Local0)
    }

    Method (MBGS, 1, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Name (BUFS, Buffer (Local0){})
        BUFS = Arg0
        MDGC (0x20)
        While (Local0)
        {
            MDGC (DerefOf (BUFS [(SizeOf (Arg0) - Local0)]))
            Local0--
        }

        MDG0 = MBUF /* \MBUF */
    }

    Method (SHOW, 1, Serialized)
    {
        MDGC (NTOC ((Arg0 >> 0x04)))
        MDGC (NTOC (Arg0))
    }

    Method (LINE, 0, Serialized)
    {
        Local0 = BUFN /* \BUFN */
        Local0 &= 0x0F
        While (Local0)
        {
            MDGC (Zero)
            Local0++
            Local0 &= 0x0F
        }
    }

    Method (MDGC, 1, Serialized)
    {
        MBUF [BUFN] = Arg0
        BUFN += One
        If ((BUFN > 0x0FFF))
        {
            BUFN &= 0x0FFF
            UP_L (One)
        }
    }

    Method (UP_L, 1, Serialized)
    {
        Local2 = Arg0
        Local2 <<= 0x04
        MOVE (Local2)
        Local3 = (0x1000 - Local2)
        While (Local2)
        {
            MBUF [Local3] = Zero
            Local3++
            Local2--
        }
    }

    Method (MOVE, 1, Serialized)
    {
        Local4 = Arg0
        BUFN = Zero
        Local5 = (0x1000 - Local4)
        While (Local5)
        {
            Local5--
            MBUF [BUFN] = DerefOf (MBUF [Local4])
            BUFN++
            Local4++
        }
    }

    Method (NTOC, 1, Serialized)
    {
        Local0 = (Arg0 & 0x0F)
        If ((Local0 < 0x0A))
        {
            Local0 += 0x30
        }
        Else
        {
            Local0 += 0x37
        }

        Return (Local0)
    }

    Scope (_PR)
    {
        Processor (C000, 0x00, 0x00000410, 0x06){}
        Processor (C001, 0x01, 0x00000410, 0x06){}
        Processor (C002, 0x02, 0x00000410, 0x06){}
        Processor (C003, 0x03, 0x00000410, 0x06){}
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    If ((DAS3 == One))
    {
        Name (_S3, Package (0x04)  // _S3_: S3 System State
        {
            0x03, 
            0x03, 
            Zero, 
            Zero
        })
    }

    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        Zero, 
        Zero
    })
    Scope (_GPE)
    {
        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GFX, 0x02) // Device Wake
        }

        Method (_L18, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.EHC1, 0x02) // Device Wake
            Notify (\_SB.PCI0.EHC2, 0x02) // Device Wake
            Notify (\_SB.PCI0.EHC3, 0x02) // Device Wake
            Notify (\_SB.PCI0.XHC0, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L1C, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
        }

        Method (_L0A, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            P80H = 0xD000
             = 0x0A = ~M029 /* External reference */
            \_SB.PCI0.SMBS.E10C
            If ((\_SB.PCI0.SMBS.E10C == Zero))
            {
                P80H = 0xD001
            }
            Else
            {
                P80H = 0xD002
            }
        }
    }

    Name (PICM, Zero)
    Name (GPIC, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        PICM = Arg0
        GPIC = Arg0
        If (PICM)
        {
            \_SB.DSPI ()
            If (NAPC)
            {
                \_SB.PCI0.NAPE ()
            }
        }
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        SPTS (Arg0)
        If ((Arg0 == One))
        {
            \_SB.S80H (0x51)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0x53)
            \_SB.PCI0.SMBS.SLPS = One
            \_SB.PCI0.LPC0.EC0.S3ST = One
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0x54)
            \_SB.PCI0.SMBS.SLPS = One
            RSTU = One
            \_SB.PCI0.LPC0.EC0.S4ST = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.S80H (0x55)
            BCMD = 0x90
            \_SB.BSMI (Zero)
            \_SB.GSMI (0x03)
            \_SB.PCI0.LPC0.EC0.S5ST = One
        }

        \_SB.APTS (Arg0)
    }

    Method (S3DK, 0, NotSerialized)
    {
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        SWAK (Arg0)
        \_SB.AWAK (Arg0)
        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0xE3)
            CHKH ()
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0xE4)
            \_SB.PCI0._INI ()
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Return (Zero)
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((GPIC == Zero)){}
                Else
                {
                    DSPI ()
                    If (\NAPC)
                    {
                        NAPE ()
                    }
                }

                OSTP ()
                CHKH ()
                ^EHC1.STOS ()
                ^EHC2.STOS ()
                ^EHC3.STOS ()
                If (CondRefOf (_OSI, Local0))
                {
                    MYOS = Zero
                }
                ElseIf ((SizeOf (_OS) == 0x14))
                {
                    MYOS = One
                }
                ElseIf ((SizeOf (_OS) == 0x27))
                {
                    MYOS = 0x02
                }
                Else
                {
                    MYOS = 0x03
                }
            }

            OperationRegion (NBMS, PCI_Config, 0x60, 0x08)
            Field (NBMS, DWordAcc, NoLock, Preserve)
            {
                MIDX,   32, 
                MIDR,   32
            }

            Mutex (NBMM, 0x00)
            Method (NBMR, 1, NotSerialized)
            {
                Acquire (NBMM, 0xFFFF)
                Local0 = (Arg0 & 0x7F)
                MIDX = Local0
                Local0 = MIDR /* \_SB_.PCI0.MIDR */
                MIDX = 0x7F
                Release (NBMM)
                Return (Local0)
            }

            Method (NBMW, 2, NotSerialized)
            {
                Acquire (NBMM, 0xFFFF)
                Local0 = (Arg0 & 0x7F)
                Local0 |= 0x80
                MIDX = Local0
                MIDR = Arg1
                MIDX = Local0 &= 0x7F
                Release (NBMM)
            }

            OperationRegion (NBXP, PCI_Config, 0xE0, 0x08)
            Field (NBXP, DWordAcc, NoLock, Preserve)
            {
                NBXI,   32, 
                NBXD,   32
            }

            Mutex (NBXM, 0x00)
            Method (NBXR, 1, NotSerialized)
            {
                Acquire (NBXM, 0xFFFF)
                NBXI = Arg0
                Local0 = NBXD /* \_SB_.PCI0.NBXD */
                NBXI = Zero
                Release (NBXM)
                Return (Local0)
            }

            Method (NBXW, 2, NotSerialized)
            {
                Acquire (NBXM, 0xFFFF)
                NBXI = Arg0
                NBXD = Arg1
                NBXI = Zero
                Release (NBXM)
            }

            Method (GFXM, 0, NotSerialized)
            {
                Local0 = NBMR (0x08)
                Local0 >>= 0x08
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (GPPM, 0, NotSerialized)
            {
                Local0 = NBMR (0x67)
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (GPPX, 0, NotSerialized)
            {
                Local0 = NBMR (0x2D)
                Local0 >>= 0x07
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (XPTR, 2, NotSerialized)
            {
                If ((Arg0 < 0x02))
                {
                    Return (Zero)
                }

                If (((Arg0 > 0x0A) || (Arg0 == 0x08)))
                {
                    Return (Zero)
                }
                Else
                {
                    Local0 = GPPM ()
                    Local1 = GPPX ()
                    If ((Arg0 == 0x0A))
                    {
                        If (((Local0 == 0x03) && (Local1 == 0x03)))
                        {
                            Local0 = 0x20
                            Local2 = NBMR (0x2D)
                            If (Arg1)
                            {
                                Local2 &= ~Local0
                            }
                            Else
                            {
                                Local2 |= Local0
                            }

                            NBMW (0x2D, Local2)
                            Return (Ones)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg0 == 0x09))
                    {
                        If (((Local0 >= 0x02) && (Local1 >= 0x02)))
                        {
                            Local0 = 0x10
                            Local2 = NBMR (0x2D)
                            If (Arg1)
                            {
                                Local2 &= ~Local0
                            }
                            Else
                            {
                                Local2 |= Local0
                            }

                            NBMW (0x2D, Local2)
                            Return (Ones)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Local0 = One
                    If ((Arg0 < 0x04))
                    {
                        Local1 = (Arg0 + 0x02)
                    }
                    Else
                    {
                        Local1 = (Arg0 + 0x11)
                    }

                    Local0 <<= Local1
                    Local2 = NBMR (0x08)
                    If (Arg1)
                    {
                        Local2 &= ~Local0
                    }
                    Else
                    {
                        Local2 |= Local0
                    }

                    NBMW (0x08, Local2)
                    Return (Ones)
                }
            }

            Method (XPLP, 2, NotSerialized)
            {
            }

            Method (XPLL, 2, NotSerialized)
            {
            }

            Name (SWLS, Zero)
            Name (_UID, One)  // _UID: Unique ID
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Name (AMHP, Zero)
            Name (GWLS, Zero)
            Name (WLPD, 0x80000000)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (TOM, 0, NotSerialized)
            {
                Local0 = (TOML * 0x00010000)
                Local1 = (TOMH * 0x01000000)
                Local0 += Local1
                Return (Local0)
            }

            Name (CRES, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xF7FFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x78000000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFED3FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02D40000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFED45000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x012BB000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (CRES, \_SB.PCI0._Y00._MIN, BTMN)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._MAX, BTMX)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._LEN, BTLN)  // _LEN: Length
                CreateDWordField (CRES, \_SB.PCI0._Y01._MIN, BTN1)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._MAX, BTX1)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._LEN, BTL1)  // _LEN: Length
                BTMN = TOM ()
                Local0 = (PBAR << 0x18)
                BTLN = (Local0 - BTMN) /* \_SB_.PCI0._CRS.BTMN */
                Return (CRES) /* \_SB_.PCI0.CRES */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (MEM1, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y02)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y03)
                    Memory32Fixed (ReadWrite,
                        0xFF000000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y02._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y02._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y03._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y03._LEN, ML02)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x1000
                        If (\NAPC)
                        {
                            ML01 += 0x1000
                        }

                        ML02 = 0x1000
                    }

                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            OperationRegion (NAPC, PCI_Config, 0xF8, 0x08)
            Field (NAPC, DWordAcc, NoLock, Preserve)
            {
                NAPX,   32, 
                NAPD,   32
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                NAPX = Zero
                Local0 = NAPD /* \_SB_.PCI0.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                Release (NAPM)
            }

            Name (PR00, Package (0x15)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    LNKE, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    LNKF, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    LNKG, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    LNKH, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    Zero, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0011FFFF, 
                    Zero, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    Zero, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    Zero, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    Zero, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }
            })
            Name (AR00, Package (0x15)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x14
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x15
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x16
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x17
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0011FFFF, 
                    Zero, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    One, 
                    Zero, 
                    0x11
                }
            })
            Name (NR00, Package (0x15)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x2C
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x2E
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x2F
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    Zero, 
                    0x30
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    Zero, 
                    0x31
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    Zero, 
                    0x32
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    Zero, 
                    0x33
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0010FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0011FFFF, 
                    Zero, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0012FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0013FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0016FFFF, 
                    One, 
                    Zero, 
                    0x11
                }
            })
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    If (\NAPC)
                    {
                        Return (NR00) /* \_SB_.PCI0.NR00 */
                    }
                    Else
                    {
                        Return (AR00) /* \_SB_.PCI0.AR00 */
                    }
                }
                Else
                {
                    Return (PR00) /* \_SB_.PCI0.PR00 */
                }
            }

            Name (TBHD, Package (0x33)
            {
                Package (0x02)
                {
                    Zero, 
                    One
                }, 

                Package (0x02)
                {
                    0x02, 
                    0x05
                }, 

                Package (0x02)
                {
                    0x04, 
                    0x0A
                }, 

                Package (0x02)
                {
                    0x06, 
                    0x0F
                }, 

                Package (0x02)
                {
                    0x08, 
                    0x14
                }, 

                Package (0x02)
                {
                    0x0A, 
                    0x19
                }, 

                Package (0x02)
                {
                    0x0C, 
                    0x1E
                }, 

                Package (0x02)
                {
                    0x0E, 
                    0x23
                }, 

                Package (0x02)
                {
                    0x10, 
                    0x28
                }, 

                Package (0x02)
                {
                    0x12, 
                    0x2D
                }, 

                Package (0x02)
                {
                    0x14, 
                    0x33
                }, 

                Package (0x02)
                {
                    0x16, 
                    0x38
                }, 

                Package (0x02)
                {
                    0x18, 
                    0x3D
                }, 

                Package (0x02)
                {
                    0x1A, 
                    0x42
                }, 

                Package (0x02)
                {
                    0x1C, 
                    0x47
                }, 

                Package (0x02)
                {
                    0x1E, 
                    0x4C
                }, 

                Package (0x02)
                {
                    0x20, 
                    0x51
                }, 

                Package (0x02)
                {
                    0x22, 
                    0x56
                }, 

                Package (0x02)
                {
                    0x24, 
                    0x5B
                }, 

                Package (0x02)
                {
                    0x26, 
                    0x60
                }, 

                Package (0x02)
                {
                    0x28, 
                    0x66
                }, 

                Package (0x02)
                {
                    0x2A, 
                    0x6B
                }, 

                Package (0x02)
                {
                    0x2C, 
                    0x70
                }, 

                Package (0x02)
                {
                    0x2E, 
                    0x75
                }, 

                Package (0x02)
                {
                    0x30, 
                    0x7A
                }, 

                Package (0x02)
                {
                    0x32, 
                    0x7F
                }, 

                Package (0x02)
                {
                    0x34, 
                    0x84
                }, 

                Package (0x02)
                {
                    0x36, 
                    0x89
                }, 

                Package (0x02)
                {
                    0x38, 
                    0x8E
                }, 

                Package (0x02)
                {
                    0x3A, 
                    0x93
                }, 

                Package (0x02)
                {
                    0x3C, 
                    0x99
                }, 

                Package (0x02)
                {
                    0x3E, 
                    0x9E
                }, 

                Package (0x02)
                {
                    0x40, 
                    0xA3
                }, 

                Package (0x02)
                {
                    0x42, 
                    0xA8
                }, 

                Package (0x02)
                {
                    0x44, 
                    0xAD
                }, 

                Package (0x02)
                {
                    0x46, 
                    0xB2
                }, 

                Package (0x02)
                {
                    0x48, 
                    0xB7
                }, 

                Package (0x02)
                {
                    0x4A, 
                    0xBC
                }, 

                Package (0x02)
                {
                    0x4C, 
                    0xC1
                }, 

                Package (0x02)
                {
                    0x4E, 
                    0xC6
                }, 

                Package (0x02)
                {
                    0x50, 
                    0xCC
                }, 

                Package (0x02)
                {
                    0x52, 
                    0xD1
                }, 

                Package (0x02)
                {
                    0x54, 
                    0xD6
                }, 

                Package (0x02)
                {
                    0x56, 
                    0xDB
                }, 

                Package (0x02)
                {
                    0x58, 
                    0xE0
                }, 

                Package (0x02)
                {
                    0x5A, 
                    0xE5
                }, 

                Package (0x02)
                {
                    0x5C, 
                    0xEA
                }, 

                Package (0x02)
                {
                    0x5E, 
                    0xEF
                }, 

                Package (0x02)
                {
                    0x60, 
                    0xF4
                }, 

                Package (0x02)
                {
                    0x62, 
                    0xF9
                }, 

                Package (0x02)
                {
                    0x64, 
                    0xFF
                }
            })
            Method (DTOH, 1, NotSerialized)
            {
                Local1 = Zero
                Local2 = 0x33
                Local0 = ((Local1 + Local2) >> One)
                Local3 = DerefOf (DerefOf (TBHD [Local0]) [Zero])
                While ((((Local0 != Local1) && (Local0 != Local2)) && 
                    (Arg0 != Local3)))
                {
                    If ((Arg0 > Local3))
                    {
                        Local1 = Local0
                    }
                    Else
                    {
                        Local2 = Local0
                    }

                    Local0 = ((Local1 + Local2) >> One)
                    Local3 = DerefOf (DerefOf (TBHD [Local0]) [Zero])
                }

                Return (DerefOf (DerefOf (TBHD [Local0]) [One]))
            }

            Method (HTOD, 1, NotSerialized)
            {
                Local1 = Zero
                Local2 = 0x33
                Local0 = ((Local1 + Local2) >> One)
                Local3 = DerefOf (DerefOf (TBHD [Local0]) [One])
                While ((((Local0 != Local1) && (Local0 != Local2)) && 
                    (Arg0 != Local3)))
                {
                    If ((Arg0 > Local3))
                    {
                        Local1 = Local0
                    }
                    Else
                    {
                        Local2 = Local0
                    }

                    Local0 = ((Local1 + Local2) >> One)
                    Local3 = DerefOf (DerefOf (TBHD [Local0]) [One])
                }

                Return (DerefOf (DerefOf (TBHD [Local0]) [Zero]))
            }

            Name (BCLB, Package (0x35)
            {
                0x5A, 
                0x3C, 
                Zero, 
                0x02, 
                0x04, 
                0x06, 
                0x08, 
                0x0A, 
                0x0C, 
                0x0E, 
                0x10, 
                0x12, 
                0x14, 
                0x16, 
                0x18, 
                0x1A, 
                0x1C, 
                0x1E, 
                0x20, 
                0x22, 
                0x24, 
                0x26, 
                0x28, 
                0x2A, 
                0x2C, 
                0x2E, 
                0x30, 
                0x32, 
                0x34, 
                0x36, 
                0x38, 
                0x3A, 
                0x3C, 
                0x3E, 
                0x40, 
                0x42, 
                0x44, 
                0x46, 
                0x48, 
                0x4A, 
                0x4C, 
                0x4E, 
                0x50, 
                0x52, 
                0x54, 
                0x56, 
                0x58, 
                0x5A, 
                0x5C, 
                0x5E, 
                0x60, 
                0x62, 
                0x64
            })
            Name (BCLL, Package (0x0D)
            {
                0x64, 
                0x50, 
                One, 
                0x06, 
                0x14, 
                0x1A, 
                0x28, 
                0x2E, 
                0x3C, 
                0x42, 
                0x50, 
                0x56, 
                0x64
            })
            Name (BCL7, Package (0x12)
            {
                0x64, 
                0x53, 
                One, 
                0x07, 
                0x0D, 
                0x13, 
                0x19, 
                0x1F, 
                0x25, 
                0x2B, 
                0x31, 
                0x37, 
                0x3E, 
                0x45, 
                0x4C, 
                0x53, 
                0x5A, 
                0x64
            })
            Device (VGA)
            {
                Name (_ADR, 0x00010000)  // _ADR: Address
                Name (AF7E, 0x80000001)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Name (DOSA, Zero)
                Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                {
                    DOSA = Arg0
                }

                Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                {
                    Return (Package (0x05)
                    {
                        0x00010100, 
                        0x00010110, 
                        0x0200, 
                        0x00010210, 
                        0x00010220
                    })
                }

                Device (LCD)
                {
                    Name (_ADR, 0x0110)  // _ADR: Address
                    Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                    {
                        If ((((OSTB == 0x60) || (OSTB == 0x61)) || (OSTB == 0x70)))
                        {
                            Return (BCLB) /* \_SB_.PCI0.BCLB */
                        }
                        ElseIf ((OSTB == 0x50))
                        {
                            Return (BCL7) /* \_SB_.PCI0.BCL7 */
                        }
                        Else
                        {
                            Return (BCLL) /* \_SB_.PCI0.BCLL */
                        }
                    }

                    Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                    {
                        If ((AF7E == 0x80000001))
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                        }
                        Else
                        {
                            Acquire (^^^LPC0.PSMX, 0xFFFF)
                            BRTL = Arg0
                            BCMD = 0x72
                            BSMI (Zero)
                            Release (^^^LPC0.PSMX)
                        }
                    }
                }
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00020002)  // _ADR: Address
                Name (PR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x1C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x1D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR02) /* \_SB_.PCI0.GPP0.NR02 */
                        }
                        Else
                        {
                            Return (AR02) /* \_SB_.PCI0.GPP0.AR02 */
                        }
                    }
                    Else
                    {
                        Return (PR02) /* \_SB_.PCI0.GPP0.PR02 */
                    }
                }

                OperationRegion (XPEX, SystemMemory, 0xF8012100, 0x0100)
                Field (XPEX, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x28), 
                    VC0S,   32
                }

                OperationRegion (XPCB, PCI_Config, 0x58, 0x24)
                Field (XPCB, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x10), 
                    LKCN,   16, 
                    LKST,   16, 
                    Offset (0x1A), 
                        ,   3, 
                    PDC2,   1, 
                        ,   2, 
                    PDS2,   1, 
                    Offset (0x1B), 
                    HPCS,   1, 
                    Offset (0x20), 
                    Offset (0x22), 
                    PMES,   1
                }

                OperationRegion (XPRI, PCI_Config, 0xE0, 0x08)
                Field (XPRI, ByteAcc, NoLock, Preserve)
                {
                    XPIR,   32, 
                    XPID,   32
                }

                OperationRegion (PCFG, PCI_Config, Zero, 0x20)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    DVID,   32, 
                    Offset (0x18), 
                    SBUS,   32
                }

                Method (XPCN, 0, NotSerialized)
                {
                    Local1 = Zero
                    Local0 = XPPB ()
                    If ((0x04 > Local0))
                    {
                        Local1 = Zero
                    }

                    If ((0x08 > Local0))
                    {
                        Local1 = 0x00010000
                    }

                    If ((0x0B > Local0))
                    {
                        Local1 = 0x00020000
                    }

                    Return (Local1)
                }

                Method (XPPD, 0, NotSerialized)
                {
                    Local0 = XPPB ()
                    Local2 = GPPX ()
                    Local3 = GFXM ()
                    Local1 = Zero
                    If ((0x10 == Local0))
                    {
                        Local1 = 0xFFFF
                        If (Local3)
                        {
                            Local1 = 0x0F0F
                        }
                    }

                    If ((0x18 == Local0))
                    {
                        Local1 = 0xF0F0
                    }

                    If ((0x20 == Local0))
                    {
                        Local1 = 0x1010
                    }

                    If ((0x28 == Local0))
                    {
                        Local1 = 0x2020
                    }

                    If ((0x30 == Local0))
                    {
                        Local1 = 0x4040
                    }

                    If ((0x38 == Local0))
                    {
                        Local1 = 0x8080
                    }

                    If ((0x48 == Local0))
                    {
                        Local1 = Zero
                        If ((0x02 == Local2))
                        {
                            Local1 = 0x0303
                        }

                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0101
                        }
                    }

                    If ((0x50 == Local0))
                    {
                        Local1 = Zero
                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0202
                        }
                    }

                    Return (Local1)
                }

                Method (XPLP, 1, NotSerialized)
                {
                    Local1 = XPPD ()
                    If ((Zero != Local1))
                    {
                        Local2 = NBXR ((0x65 + XPCN ()))
                        If (Arg0)
                        {
                            Local2 &= ~Local1
                        }
                        Else
                        {
                            Local2 |= Local1
                        }

                        NBXW ((0x65 + XPCN ()), Local2)
                    }
                }

                Method (XPDL, 0, NotSerialized)
                {
                    If ((VC0S & 0x00020000))
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Mutex (XPPM, 0x00)
                Method (XPRD, 1, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    Local0 = XPID /* \_SB_.PCI0.GPP0.XPID */
                    XPIR = Zero
                    Release (XPPM)
                    Return (Local0)
                }

                Method (XPWR, 2, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    XPID = Arg1
                    XPIR = Zero
                    Release (XPPM)
                }

                Method (XPRT, 0, NotSerialized)
                {
                    Local0 = XPRD (0xA2)
                    Local0 &= 0xFFFFFFF8
                    Local1 = (Local0 >> 0x04)
                    Local1 &= 0x07
                    Local0 |= Local1
                    Local0 |= 0x0100
                    XPWR (0xA2, Local0)
                }

                Method (XPR2, 0, NotSerialized)
                {
                    Local0 = LKCN /* \_SB_.PCI0.GPP0.LKCN */
                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    Local0 |= 0x20
                    LKCN = Local0
                    Local1 = 0x64
                    Local2 = One
                    While ((Local1 && Local2))
                    {
                        Sleep (One)
                        Local3 = LKST /* \_SB_.PCI0.GPP0.LKST */
                        If ((Local3 & 0x0800))
                        {
                            Local1--
                        }
                        Else
                        {
                            Local2 = Zero
                        }
                    }

                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    If (!Local2)
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (XPPB, 0, NotSerialized)
                {
                    Local0 = _ADR /* \_SB_.PCI0.GPP0._ADR */
                    Local1 = (Local0 >> 0x10)
                    Local1 = (Local1 << 0x03)
                    Local2 = (Local0 & 0x0F)
                    Local3 = (Local1 | Local2)
                    Return (Local3)
                }

                Device (XPDV)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x08)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        PCMS,   32
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00020003)  // _ADR: Address
                Name (PR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x20
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x21
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x22
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x23
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR03) /* \_SB_.PCI0.GPP1.NR03 */
                        }
                        Else
                        {
                            Return (AR03) /* \_SB_.PCI0.GPP1.AR03 */
                        }
                    }
                    Else
                    {
                        Return (PR03) /* \_SB_.PCI0.GPP1.PR03 */
                    }
                }

                OperationRegion (XPEX, SystemMemory, 0xF8013100, 0x0100)
                Field (XPEX, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x28), 
                    VC0S,   32
                }

                OperationRegion (XPCB, PCI_Config, 0x58, 0x24)
                Field (XPCB, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x10), 
                    LKCN,   16, 
                    LKST,   16, 
                    Offset (0x1A), 
                        ,   3, 
                    PDC2,   1, 
                        ,   2, 
                    PDS2,   1, 
                    Offset (0x1B), 
                    HPCS,   1, 
                    Offset (0x20), 
                    Offset (0x22), 
                    PMES,   1
                }

                OperationRegion (XPRI, PCI_Config, 0xE0, 0x08)
                Field (XPRI, ByteAcc, NoLock, Preserve)
                {
                    XPIR,   32, 
                    XPID,   32
                }

                OperationRegion (PCFG, PCI_Config, Zero, 0x20)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    DVID,   32, 
                    Offset (0x18), 
                    SBUS,   32
                }

                Method (XPCN, 0, NotSerialized)
                {
                    Local1 = Zero
                    Local0 = XPPB ()
                    If ((0x04 > Local0))
                    {
                        Local1 = Zero
                    }

                    If ((0x08 > Local0))
                    {
                        Local1 = 0x00010000
                    }

                    If ((0x0B > Local0))
                    {
                        Local1 = 0x00020000
                    }

                    Return (Local1)
                }

                Method (XPPD, 0, NotSerialized)
                {
                    Local0 = XPPB ()
                    Local2 = GPPX ()
                    Local3 = GFXM ()
                    Local1 = Zero
                    If ((0x10 == Local0))
                    {
                        Local1 = 0xFFFF
                        If (Local3)
                        {
                            Local1 = 0x0F0F
                        }
                    }

                    If ((0x18 == Local0))
                    {
                        Local1 = 0xF0F0
                    }

                    If ((0x20 == Local0))
                    {
                        Local1 = 0x1010
                    }

                    If ((0x28 == Local0))
                    {
                        Local1 = 0x2020
                    }

                    If ((0x30 == Local0))
                    {
                        Local1 = 0x4040
                    }

                    If ((0x38 == Local0))
                    {
                        Local1 = 0x8080
                    }

                    If ((0x48 == Local0))
                    {
                        Local1 = Zero
                        If ((0x02 == Local2))
                        {
                            Local1 = 0x0303
                        }

                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0101
                        }
                    }

                    If ((0x50 == Local0))
                    {
                        Local1 = Zero
                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0202
                        }
                    }

                    Return (Local1)
                }

                Method (XPLP, 1, NotSerialized)
                {
                    Local1 = XPPD ()
                    If ((Zero != Local1))
                    {
                        Local2 = NBXR ((0x65 + XPCN ()))
                        If (Arg0)
                        {
                            Local2 &= ~Local1
                        }
                        Else
                        {
                            Local2 |= Local1
                        }

                        NBXW ((0x65 + XPCN ()), Local2)
                    }
                }

                Method (XPDL, 0, NotSerialized)
                {
                    If ((VC0S & 0x00020000))
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Mutex (XPPM, 0x00)
                Method (XPRD, 1, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    Local0 = XPID /* \_SB_.PCI0.GPP1.XPID */
                    XPIR = Zero
                    Release (XPPM)
                    Return (Local0)
                }

                Method (XPWR, 2, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    XPID = Arg1
                    XPIR = Zero
                    Release (XPPM)
                }

                Method (XPRT, 0, NotSerialized)
                {
                    Local0 = XPRD (0xA2)
                    Local0 &= 0xFFFFFFF8
                    Local1 = (Local0 >> 0x04)
                    Local1 &= 0x07
                    Local0 |= Local1
                    Local0 |= 0x0100
                    XPWR (0xA2, Local0)
                }

                Method (XPR2, 0, NotSerialized)
                {
                    Local0 = LKCN /* \_SB_.PCI0.GPP1.LKCN */
                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    Local0 |= 0x20
                    LKCN = Local0
                    Local1 = 0x64
                    Local2 = One
                    While ((Local1 && Local2))
                    {
                        Sleep (One)
                        Local3 = LKST /* \_SB_.PCI0.GPP1.LKST */
                        If ((Local3 & 0x0800))
                        {
                            Local1--
                        }
                        Else
                        {
                            Local2 = Zero
                        }
                    }

                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    If (!Local2)
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (XPPB, 0, NotSerialized)
                {
                    Local0 = _ADR /* \_SB_.PCI0.GPP1._ADR */
                    Local1 = (Local0 >> 0x10)
                    Local1 = (Local1 << 0x03)
                    Local2 = (Local0 & 0x0F)
                    Local3 = (Local1 | Local2)
                    Return (Local3)
                }

                Device (XPDV)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x08)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        PCMS,   32
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00020004)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x03
                })
                Name (PR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x24
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x25
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x26
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x27
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR04) /* \_SB_.PCI0.GPP2.NR04 */
                        }
                        Else
                        {
                            Return (AR04) /* \_SB_.PCI0.GPP2.AR04 */
                        }
                    }
                    Else
                    {
                        Return (PR04) /* \_SB_.PCI0.GPP2.PR04 */
                    }
                }

                OperationRegion (XPEX, SystemMemory, 0xF8014100, 0x0100)
                Field (XPEX, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x28), 
                    VC0S,   32
                }

                OperationRegion (XPCB, PCI_Config, 0x58, 0x24)
                Field (XPCB, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x10), 
                    LKCN,   16, 
                    LKST,   16, 
                    Offset (0x1A), 
                        ,   3, 
                    PDC2,   1, 
                        ,   2, 
                    PDS2,   1, 
                    Offset (0x1B), 
                    HPCS,   1, 
                    Offset (0x20), 
                    Offset (0x22), 
                    PMES,   1
                }

                OperationRegion (XPRI, PCI_Config, 0xE0, 0x08)
                Field (XPRI, ByteAcc, NoLock, Preserve)
                {
                    XPIR,   32, 
                    XPID,   32
                }

                OperationRegion (PCFG, PCI_Config, Zero, 0x20)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    DVID,   32, 
                    Offset (0x18), 
                    SBUS,   32
                }

                Method (XPCN, 0, NotSerialized)
                {
                    Local1 = Zero
                    Local0 = XPPB ()
                    If ((0x04 > Local0))
                    {
                        Local1 = Zero
                    }

                    If ((0x08 > Local0))
                    {
                        Local1 = 0x00010000
                    }

                    If ((0x0B > Local0))
                    {
                        Local1 = 0x00020000
                    }

                    Return (Local1)
                }

                Method (XPPD, 0, NotSerialized)
                {
                    Local0 = XPPB ()
                    Local2 = GPPX ()
                    Local3 = GFXM ()
                    Local1 = Zero
                    If ((0x10 == Local0))
                    {
                        Local1 = 0xFFFF
                        If (Local3)
                        {
                            Local1 = 0x0F0F
                        }
                    }

                    If ((0x18 == Local0))
                    {
                        Local1 = 0xF0F0
                    }

                    If ((0x20 == Local0))
                    {
                        Local1 = 0x1010
                    }

                    If ((0x28 == Local0))
                    {
                        Local1 = 0x2020
                    }

                    If ((0x30 == Local0))
                    {
                        Local1 = 0x4040
                    }

                    If ((0x38 == Local0))
                    {
                        Local1 = 0x8080
                    }

                    If ((0x48 == Local0))
                    {
                        Local1 = Zero
                        If ((0x02 == Local2))
                        {
                            Local1 = 0x0303
                        }

                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0101
                        }
                    }

                    If ((0x50 == Local0))
                    {
                        Local1 = Zero
                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0202
                        }
                    }

                    Return (Local1)
                }

                Method (XPLP, 1, NotSerialized)
                {
                    Local1 = XPPD ()
                    If ((Zero != Local1))
                    {
                        Local2 = NBXR ((0x65 + XPCN ()))
                        If (Arg0)
                        {
                            Local2 &= ~Local1
                        }
                        Else
                        {
                            Local2 |= Local1
                        }

                        NBXW ((0x65 + XPCN ()), Local2)
                    }
                }

                Method (XPDL, 0, NotSerialized)
                {
                    If ((VC0S & 0x00020000))
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Mutex (XPPM, 0x00)
                Method (XPRD, 1, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    Local0 = XPID /* \_SB_.PCI0.GPP2.XPID */
                    XPIR = Zero
                    Release (XPPM)
                    Return (Local0)
                }

                Method (XPWR, 2, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    XPID = Arg1
                    XPIR = Zero
                    Release (XPPM)
                }

                Method (XPRT, 0, NotSerialized)
                {
                    Local0 = XPRD (0xA2)
                    Local0 &= 0xFFFFFFF8
                    Local1 = (Local0 >> 0x04)
                    Local1 &= 0x07
                    Local0 |= Local1
                    Local0 |= 0x0100
                    XPWR (0xA2, Local0)
                }

                Method (XPR2, 0, NotSerialized)
                {
                    Local0 = LKCN /* \_SB_.PCI0.GPP2.LKCN */
                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    Local0 |= 0x20
                    LKCN = Local0
                    Local1 = 0x64
                    Local2 = One
                    While ((Local1 && Local2))
                    {
                        Sleep (One)
                        Local3 = LKST /* \_SB_.PCI0.GPP2.LKST */
                        If ((Local3 & 0x0800))
                        {
                            Local1--
                        }
                        Else
                        {
                            Local2 = Zero
                        }
                    }

                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    If (!Local2)
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (XPPB, 0, NotSerialized)
                {
                    Local0 = _ADR /* \_SB_.PCI0.GPP2._ADR */
                    Local1 = (Local0 >> 0x10)
                    Local1 = (Local1 << 0x03)
                    Local2 = (Local0 & 0x0F)
                    Local3 = (Local1 | Local2)
                    Return (Local3)
                }

                Device (XPDV)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x08)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        PCMS,   32
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00020005)  // _ADR: Address
                Name (PR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x28
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x29
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR05) /* \_SB_.PCI0.GPP3.NR05 */
                        }
                        Else
                        {
                            Return (AR05) /* \_SB_.PCI0.GPP3.AR05 */
                        }
                    }
                    Else
                    {
                        Return (PR05) /* \_SB_.PCI0.GPP3.PR05 */
                    }
                }

                OperationRegion (XPEX, SystemMemory, 0xF8015100, 0x0100)
                Field (XPEX, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x28), 
                    VC0S,   32
                }

                OperationRegion (XPCB, PCI_Config, 0x58, 0x24)
                Field (XPCB, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x10), 
                    LKCN,   16, 
                    LKST,   16, 
                    Offset (0x1A), 
                        ,   3, 
                    PDC2,   1, 
                        ,   2, 
                    PDS2,   1, 
                    Offset (0x1B), 
                    HPCS,   1, 
                    Offset (0x20), 
                    Offset (0x22), 
                    PMES,   1
                }

                OperationRegion (XPRI, PCI_Config, 0xE0, 0x08)
                Field (XPRI, ByteAcc, NoLock, Preserve)
                {
                    XPIR,   32, 
                    XPID,   32
                }

                OperationRegion (PCFG, PCI_Config, Zero, 0x20)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    DVID,   32, 
                    Offset (0x18), 
                    SBUS,   32
                }

                Method (XPCN, 0, NotSerialized)
                {
                    Local1 = Zero
                    Local0 = XPPB ()
                    If ((0x04 > Local0))
                    {
                        Local1 = Zero
                    }

                    If ((0x08 > Local0))
                    {
                        Local1 = 0x00010000
                    }

                    If ((0x0B > Local0))
                    {
                        Local1 = 0x00020000
                    }

                    Return (Local1)
                }

                Method (XPPD, 0, NotSerialized)
                {
                    Local0 = XPPB ()
                    Local2 = GPPX ()
                    Local3 = GFXM ()
                    Local1 = Zero
                    If ((0x10 == Local0))
                    {
                        Local1 = 0xFFFF
                        If (Local3)
                        {
                            Local1 = 0x0F0F
                        }
                    }

                    If ((0x18 == Local0))
                    {
                        Local1 = 0xF0F0
                    }

                    If ((0x20 == Local0))
                    {
                        Local1 = 0x1010
                    }

                    If ((0x28 == Local0))
                    {
                        Local1 = 0x2020
                    }

                    If ((0x30 == Local0))
                    {
                        Local1 = 0x4040
                    }

                    If ((0x38 == Local0))
                    {
                        Local1 = 0x8080
                    }

                    If ((0x48 == Local0))
                    {
                        Local1 = Zero
                        If ((0x02 == Local2))
                        {
                            Local1 = 0x0303
                        }

                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0101
                        }
                    }

                    If ((0x50 == Local0))
                    {
                        Local1 = Zero
                        If ((0x03 == Local2))
                        {
                            Local1 = 0x0202
                        }
                    }

                    Return (Local1)
                }

                Method (XPLP, 1, NotSerialized)
                {
                    Local1 = XPPD ()
                    If ((Zero != Local1))
                    {
                        Local2 = NBXR ((0x65 + XPCN ()))
                        If (Arg0)
                        {
                            Local2 &= ~Local1
                        }
                        Else
                        {
                            Local2 |= Local1
                        }

                        NBXW ((0x65 + XPCN ()), Local2)
                    }
                }

                Method (XPDL, 0, NotSerialized)
                {
                    If ((VC0S & 0x00020000))
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Mutex (XPPM, 0x00)
                Method (XPRD, 1, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    Local0 = XPID /* \_SB_.PCI0.GPP3.XPID */
                    XPIR = Zero
                    Release (XPPM)
                    Return (Local0)
                }

                Method (XPWR, 2, NotSerialized)
                {
                    Acquire (XPPM, 0xFFFF)
                    XPIR = Arg0
                    XPID = Arg1
                    XPIR = Zero
                    Release (XPPM)
                }

                Method (XPRT, 0, NotSerialized)
                {
                    Local0 = XPRD (0xA2)
                    Local0 &= 0xFFFFFFF8
                    Local1 = (Local0 >> 0x04)
                    Local1 &= 0x07
                    Local0 |= Local1
                    Local0 |= 0x0100
                    XPWR (0xA2, Local0)
                }

                Method (XPR2, 0, NotSerialized)
                {
                    Local0 = LKCN /* \_SB_.PCI0.GPP3.LKCN */
                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    Local0 |= 0x20
                    LKCN = Local0
                    Local1 = 0x64
                    Local2 = One
                    While ((Local1 && Local2))
                    {
                        Sleep (One)
                        Local3 = LKST /* \_SB_.PCI0.GPP3.LKST */
                        If ((Local3 & 0x0800))
                        {
                            Local1--
                        }
                        Else
                        {
                            Local2 = Zero
                        }
                    }

                    Local0 &= 0xFFFFFFDF
                    LKCN = Local0
                    If (!Local2)
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (XPPB, 0, NotSerialized)
                {
                    Local0 = _ADR /* \_SB_.PCI0.GPP3._ADR */
                    Local1 = (Local0 >> 0x10)
                    Local1 = (Local1 << 0x03)
                    Local2 = (Local0 & 0x0F)
                    Local3 = (Local1 | Local2)
                    Return (Local3)
                }

                Device (XPDV)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x08)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        PCMS,   32
                    }
                }
            }

            Device (GFX)
            {
                Name (_ADR, 0x00020001)  // _ADR: Address
                Name (PR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x18
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x19
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR01) /* \_SB_.PCI0.GFX_.NR01 */
                        }
                        Else
                        {
                            Return (AR01) /* \_SB_.PCI0.GFX_.AR01 */
                        }
                    }
                    Else
                    {
                        Return (PR01) /* \_SB_.PCI0.GFX_.PR01 */
                    }
                }

                OperationRegion (XPEX, SystemMemory, 0xF8011100, 0x0100)
                Field (XPEX, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x28), 
                    VC0S,   32
                }

                OperationRegion (PCFG, PCI_Config, Zero, 0x20)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    DVID,   32, 
                    PCMS,   32, 
                    Offset (0x18), 
                    SBUS,   32
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x50)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        Offset (0x2C), 
                        SVID,   32, 
                        Offset (0x4C), 
                        SMID,   32
                    }

                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010100, 
                            0x00010110, 
                            0x0200, 
                            0x00010210, 
                            0x00010220
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            If ((((OSTB == 0x60) || (OSTB == 0x61)) || (OSTB == 0x70)))
                            {
                                Return (BCLB) /* \_SB_.PCI0.BCLB */
                            }
                            ElseIf ((OSTB == 0x50))
                            {
                                Return (BCL7) /* \_SB_.PCI0.BCL7 */
                            }
                            Else
                            {
                                Return (BCLL) /* \_SB_.PCI0.BCLL */
                            }
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            If ((^^^^VGA.AF7E == 0x80000001))
                            {
                                Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                                AFN7 (Local0)
                                BRTL = Arg0
                            }
                            Else
                            {
                                Acquire (^^^^LPC0.PSMX, 0xFFFF)
                                BRTL = Arg0
                                BCMD = 0x72
                                BSMI (Zero)
                                Release (^^^^LPC0.PSMX)
                            }
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    OperationRegion (PCFG, PCI_Config, Zero, 0x50)
                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        DVID,   32, 
                        Offset (0x2C), 
                        SVID,   32, 
                        Offset (0x4C), 
                        SMID,   32
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (HPET)
            {
                Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((HPEN == One))
                    {
                        If ((OSTB >= 0x40))
                        {
                            Return (0x0F)
                        }

                        HPEN = Zero
                        Return (One)
                    }

                    Return (One)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y04)
                    })
                    CreateDWordField (BUF0, \_SB.PCI0.HPET._CRS._Y04._BAS, HPEB)  // _BAS: Base Address
                    Local0 = 0xFED00000
                    HPEB = (Local0 & 0xFFFFFC00)
                    Return (BUF0) /* \_SB_.PCI0.HPET._CRS.BUF0 */
                }
            }

            Name (NPLD, Zero)
            Name (APLD, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                    /* 0008 */  0x25, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                    /* 0010 */  0x2C, 0x01, 0xBE, 0x00                           // ,...
                }
            })
            Name (DPLD, Package (0x01)
            {
                Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })
            Name (BPLD, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x00,  // ....d.d.
                    /* 0008 */  0x24, 0x41, 0x80, 0x01, 0x00, 0x00, 0x04, 0x00,  // $A......
                    /* 0010 */  0x00, 0x03, 0xAB, 0x02                           // ....
                }
            })
            Name (CPLD, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                    /* 0008 */  0x25, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
            Device (AZAL)
            {
                Name (_ADR, 0x00140002)  // _ADR: Address
                OperationRegion (PCI, PCI_Config, Zero, 0x0100)
                Field (PCI, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x42), 
                    DNSP,   1, 
                    DNSO,   1, 
                    ENSR,   1
                }

                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                {
                    Return (APLD) /* \_SB_.PCI0.APLD */
                }
            }

            Device (EHC1)
            {
                Name (_ADR, 0x00120000)  // _ADR: Address
                OperationRegion (PCFG, PCI_Config, 0xA0, 0x04)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    OSOW,   32
                }

                Method (STOS, 0, NotSerialized)
                {
                    OSOW |= 0x01000000
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x03))
                }

                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (GHUB)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (GUPC) /* \GUPC */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (GPLD) /* \GPLD */
                        }

                        Device (PRT0)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC0) /* \UPC0 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD0) /* \PLD0 */
                            }
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDN) /* \PLDN */
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCI) /* \UPCI */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDI) /* \PLDI */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD3) /* \PLD3 */
                            }
                        }
                    }
                }
            }

            Device (EHC2)
            {
                Name (_ADR, 0x00130000)  // _ADR: Address
                OperationRegion (PCFG, PCI_Config, 0xA0, 0x04)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    OSOW,   32
                }

                Method (STOS, 0, NotSerialized)
                {
                    OSOW |= 0x01000000
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x03))
                }

                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (GHUB)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (GUPC) /* \GUPC */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (GPLD) /* \GPLD */
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCI) /* \UPCI */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDI) /* \PLDI */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCI) /* \UPCI */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDI) /* \PLDI */
                            }

                            Device (WCAM)
                            {
                                Name (_ADR, 0x02)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPCI) /* \UPCI */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    Return (PLDC) /* \PLDC */
                                }
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCI) /* \UPCI */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDI) /* \PLDI */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDN) /* \PLDN */
                            }
                        }
                    }
                }
            }

            Device (EHC3)
            {
                Name (_ADR, 0x00160000)  // _ADR: Address
                OperationRegion (PCFG, PCI_Config, 0xA0, 0x04)
                Field (PCFG, DWordAcc, NoLock, Preserve)
                {
                    OSOW,   32
                }

                Method (STOS, 0, NotSerialized)
                {
                    OSOW |= 0x01000000
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x03))
                }
            }

            Device (XHC0)
            {
                Name (_ADR, 0x00100000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x03))
                }

                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (HSP0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (UPC3) /* \UPC3 */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (PLD3) /* \PLD3 */
                        }
                    }

                    Device (HSP1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (UPCN) /* \UPCN */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (PLDN) /* \PLDN */
                        }
                    }

                    Device (SSP0)
                    {
                        Name (_ADR, 0x03)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (UPC3) /* \UPC3 */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (PLD3) /* \PLD3 */
                        }
                    }

                    Device (SSP1)
                    {
                        Name (_ADR, 0x04)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (UPCN) /* \UPCN */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (PLDN) /* \PLDN */
                        }
                    }
                }
            }

            Device (SMBS)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
                OperationRegion (SBRV, PCI_Config, 0x08, 0x0100)
                Field (SBRV, AnyAcc, NoLock, Preserve)
                {
                    RVID,   8, 
                    Offset (0x0C), 
                    HPBS,   32, 
                    Offset (0x3B), 
                        ,   3, 
                    HIHP,   1, 
                    Offset (0x5A), 
                    I1F,    1, 
                    I12F,   1, 
                    Offset (0x7A), 
                        ,   2, 
                    G31O,   1, 
                    Offset (0xD9), 
                        ,   6, 
                    ACIR,   1
                }

                OperationRegion (ERMG, SystemMemory, 0xFED81500, 0x03FF)
                Field (ERMG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x38), 
                    Offset (0x3A), 
                    G66I,   1, 
                        ,   5, 
                    G66O,   1, 
                    G66E,   1, 
                    Offset (0x60), 
                    Offset (0x62), 
                    G6FI,   1, 
                        ,   5, 
                    G6FO,   1, 
                    G6FE,   1, 
                    Offset (0x104), 
                    Offset (0x106), 
                    G50I,   1, 
                        ,   5, 
                    G50O,   1, 
                    G50E,   1, 
                    Offset (0x108), 
                    Offset (0x10A), 
                    G51I,   1, 
                        ,   5, 
                    G51O,   1, 
                    G51E,   1, 
                    Offset (0x110), 
                    Offset (0x112), 
                    G57I,   1, 
                        ,   5, 
                    G57O,   1, 
                    G57E,   1, 
                    Offset (0x118), 
                    Offset (0x11A), 
                    G59I,   1, 
                        ,   5, 
                    G59O,   1, 
                    G59E,   1
                }

                OperationRegion (ERMM, SystemMemory, 0xFED80000, 0x1000)
                Field (ERMM, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x200), 
                        ,   1, 
                    E01S,   1, 
                        ,   3, 
                    E05S,   1, 
                        ,   9, 
                    E15S,   1, 
                    E16S,   1, 
                        ,   4, 
                    E21S,   1, 
                    E22S,   1, 
                    Offset (0x204), 
                        ,   1, 
                    E01E,   1, 
                        ,   3, 
                    E05E,   1, 
                        ,   4, 
                    E10E,   1, 
                        ,   4, 
                    E15E,   1, 
                    E16E,   1, 
                        ,   5, 
                    E22E,   1, 
                    Offset (0x208), 
                        ,   1, 
                    E01C,   1, 
                        ,   3, 
                    E05C,   1, 
                        ,   4, 
                    E10C,   1, 
                        ,   4, 
                    E15C,   1, 
                    E16C,   1, 
                        ,   4, 
                    E21C,   1, 
                    E22C,   1, 
                    Offset (0x20C), 
                        ,   1, 
                    E01L,   1, 
                        ,   3, 
                    E05L,   1, 
                        ,   9, 
                    E15L,   1, 
                    E16L,   1, 
                        ,   5, 
                    E22L,   1, 
                    Offset (0x288), 
                        ,   1, 
                    CLPS,   1, 
                    Offset (0x299), 
                        ,   7, 
                    G15A,   1, 
                    Offset (0x2B0), 
                        ,   2, 
                    SLPS,   2, 
                    Offset (0x362), 
                        ,   6, 
                    MT3A,   1, 
                    Offset (0x377), 
                    EPNM,   1, 
                    DPPF,   1, 
                    Offset (0x3BB), 
                        ,   6, 
                    PWDE,   1, 
                    Offset (0x3BE), 
                        ,   5, 
                    ALLS,   1, 
                    Offset (0x3C8), 
                        ,   2, 
                    TFTE,   1, 
                    Offset (0x3E4), 
                    BLNK,   2, 
                    Offset (0x3F0), 
                    PHYD,   1, 
                    Offset (0x400), 
                    F0CT,   8, 
                    F0MS,   8, 
                    F0FQ,   8, 
                    F0LD,   8, 
                    F0MD,   8, 
                    F0MP,   8, 
                    LT0L,   8, 
                    LT0H,   8, 
                    MT0L,   8, 
                    MT0H,   8, 
                    HT0L,   8, 
                    HT0H,   8, 
                    LRG0,   8, 
                    LHC0,   8, 
                    Offset (0x410), 
                    F1CT,   8, 
                    F1MS,   8, 
                    F1FQ,   8, 
                    F1LD,   8, 
                    F1MD,   8, 
                    F1MP,   8, 
                    LT1L,   8, 
                    LT1H,   8, 
                    MT1L,   8, 
                    MT1H,   8, 
                    HT1L,   8, 
                    HT1H,   8, 
                    LRG1,   8, 
                    LHC1,   8, 
                    Offset (0x420), 
                    F2CT,   8, 
                    F2MS,   8, 
                    F2FQ,   8, 
                    F2LD,   8, 
                    F2MD,   8, 
                    F2MP,   8, 
                    LT2L,   8, 
                    LT2H,   8, 
                    MT2L,   8, 
                    MT2H,   8, 
                    HT2L,   8, 
                    HT2H,   8, 
                    LRG2,   8, 
                    LHC2,   8, 
                    Offset (0x430), 
                    F3CT,   8, 
                    F3MS,   8, 
                    F3FQ,   8, 
                    F3LD,   8, 
                    F3MD,   8, 
                    F3MP,   8, 
                    LT3L,   8, 
                    LT3H,   8, 
                    MT3L,   8, 
                    MT3H,   8, 
                    HT3L,   8, 
                    HT3H,   8, 
                    LRG3,   8, 
                    LHC3,   8, 
                    Offset (0xD07), 
                    MX07,   8, 
                    Offset (0xD0F), 
                    MX15,   8, 
                    MX16,   8, 
                    Offset (0xD15), 
                    MX21,   8, 
                    Offset (0xD1B), 
                    MX27,   8, 
                    MX28,   8, 
                    Offset (0xD20), 
                    MX32,   8, 
                    Offset (0xD2C), 
                    MX44,   8, 
                    Offset (0xD31), 
                    MX49,   8, 
                    Offset (0xD35), 
                    MX53,   8, 
                    Offset (0xD39), 
                    MX57,   8, 
                    MX58,   8, 
                    MX59,   8, 
                    Offset (0xD42), 
                    MX66,   8, 
                    Offset (0xD66), 
                    M102,   8, 
                    Offset (0xD6E), 
                    M110,   8, 
                    Offset (0xDAF), 
                    M175,   8, 
                    M176,   8, 
                    Offset (0xDB4), 
                    M180,   8, 
                    Offset (0xDB6), 
                    M182,   8, 
                    Offset (0xE02), 
                    MS02,   8, 
                    MS03,   8, 
                    MS04,   8, 
                    Offset (0xE40), 
                    MS40,   8, 
                    Offset (0xE81), 
                        ,   2, 
                    ECES,   1
                }

                OperationRegion (ERM1, SystemMemory, 0xFED80000, 0x1000)
                Field (ERM1, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x208), 
                        ,   1, 
                        ,   1, 
                        ,   3, 
                        ,   1, 
                        ,   9, 
                    Offset (0x20A), 
                        ,   1, 
                        ,   5, 
                        ,   1, 
                        ,   3, 
                    E26C,   1, 
                    Offset (0xD01), 
                    MX01,   8, 
                    Offset (0xD20), 
                    Offset (0xD21), 
                    MX33,   8, 
                    MX34,   8, 
                    Offset (0xD29), 
                    MX41,   8, 
                    Offset (0xDAA), 
                    M170,   8, 
                    Offset (0xDB4), 
                    Offset (0xDB5), 
                    M181,   8, 
                    Offset (0xDB7), 
                    Offset (0xDC7), 
                    M199,   8, 
                    Offset (0xE00), 
                    MS00,   8, 
                    MS01,   8
                }

                Mutex (SBX0, 0x00)
                OperationRegion (SMB0, SystemIO, 0x0B00, 0x10)
                Field (SMB0, ByteAcc, NoLock, Preserve)
                {
                    HST0,   8, 
                    SLV0,   8, 
                    CNT0,   8, 
                    CMD0,   8, 
                    ADD0,   8, 
                    DT00,   8, 
                    DT10,   8, 
                    BLK0,   8
                }

                Method (WBD0, 1, NotSerialized)
                {
                    Local0 = Arg0
                    Local2 = Zero
                    Local3 = HST0 /* \_SB_.PCI0.SMBS.HST0 */
                    Local1 = (Local3 & 0x80)
                    While ((Local1 != 0x80))
                    {
                        If ((Local0 < 0x0A))
                        {
                            Local2 = 0x18
                            Local1 = Zero
                        }
                        Else
                        {
                            Sleep (0x0A)
                            Local0 -= 0x0A
                            Local3 = HST0 /* \_SB_.PCI0.SMBS.HST0 */
                            Local1 = (Local3 & 0x80)
                        }
                    }

                    If ((Local2 != 0x18))
                    {
                        Local1 = (HST0 & 0x1C)
                        If (Local1)
                        {
                            Local2 = 0x07
                        }
                    }

                    Return (Local2)
                }

                Method (WTC0, 1, NotSerialized)
                {
                    Local0 = Arg0
                    Local2 = 0x07
                    Local1 = One
                    While ((Local1 == One))
                    {
                        Local3 = (HST0 & 0x1D)
                        If ((Local3 != Zero))
                        {
                            If ((Local3 == One))
                            {
                                If ((Local0 < 0x0A))
                                {
                                    Local2 = 0x18
                                    Local1 = Zero
                                }
                                Else
                                {
                                    Sleep (0x0A)
                                    Local0 -= 0x0A
                                }
                            }
                            Else
                            {
                                Local2 = 0x07
                                Local1 = Zero
                            }
                        }
                        Else
                        {
                            Local2 = Zero
                            Local1 = Zero
                        }
                    }

                    HST0 = (HST0 | 0x1F)
                    Return (Local2)
                }

                Method (SBR0, 3, NotSerialized)
                {
                    Local0 = Package (0x03)
                        {
                            0x07, 
                            Zero, 
                            Zero
                        }
                    Local4 = (Arg0 & 0x5F)
                    If ((Local4 != 0x03))
                    {
                        If ((Local4 != 0x05))
                        {
                            If ((Local4 != 0x07))
                            {
                                If ((Local4 != 0x09))
                                {
                                    If ((Local4 != 0x0B))
                                    {
                                        Local0 [Zero] = 0x19
                                        Return (Local0)
                                    }
                                }
                            }
                        }
                    }

                    If ((Acquire (SBX0, 0xFFFF) == Zero))
                    {
                        ADD0 = ((Arg1 << One) | One)
                        CMD0 = Arg2
                        HST0 = (HST0 | 0x1F)
                        Local1 = (Arg0 & 0xA0)
                        CNT0 = ((CNT0 & 0x5F) | Local1)
                        If ((Local4 == 0x03))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x40)
                        }

                        If ((Local4 == 0x05))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x44)
                        }

                        If ((Local4 == 0x07))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x48)
                        }

                        If ((Local4 == 0x09))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x4C)
                        }

                        If ((Local4 == 0x0B))
                        {
                            HST0 = (HST0 | 0x80)
                            DT00 = Zero
                            CNT0 = ((CNT0 & 0xA0) | 0x54)
                        }

                        Local1 = WTC0 (0x03E8)
                        Local0 [Zero] = Local1
                        If ((Local1 == Zero))
                        {
                            If ((Local4 == 0x05))
                            {
                                Local0 [One] = One
                                Local0 [0x02] = DT00 /* \_SB_.PCI0.SMBS.DT00 */
                            }

                            If ((Local4 == 0x07))
                            {
                                Local0 [One] = One
                                Local0 [0x02] = DT00 /* \_SB_.PCI0.SMBS.DT00 */
                            }

                            If ((Local4 == 0x09))
                            {
                                Local0 [One] = 0x02
                                Local2 = DT10 /* \_SB_.PCI0.SMBS.DT10 */
                                Local2 <<= 0x08
                                Local2 += DT00 /* \_SB_.PCI0.SMBS.DT00 */
                                Local0 [0x02] = Local2
                            }

                            If ((Local4 == 0x0B))
                            {
                                Local1 = WBD0 (0x01F4)
                                If ((Local1 != Zero))
                                {
                                    Local0 [Zero] = Local1
                                }
                                Else
                                {
                                    Local0 [One] = DT00 /* \_SB_.PCI0.SMBS.DT00 */
                                    Local1 = DT00 /* \_SB_.PCI0.SMBS.DT00 */
                                    Local2 = CNT0 /* \_SB_.PCI0.SMBS.CNT0 */
                                    Local2 = Zero
                                    While ((Local2 < Local1))
                                    {
                                        Local3 = (0x02 + Local2)
                                        Local0 [Local3] = BLK0 /* \_SB_.PCI0.SMBS.BLK0 */
                                        Local2 += One
                                    }

                                    HST0 = (HST0 | 0x80)
                                }
                            }
                        }

                        CNT0 = (CNT0 & 0x5F)
                        Release (SBX0)
                    }

                    Return (Local0)
                }

                Method (SBW0, 5, NotSerialized)
                {
                    Local0 = Package (0x01)
                        {
                            0x07
                        }
                    Local4 = (Arg0 & 0x5F)
                    If ((Local4 != 0x02))
                    {
                        If ((Local4 != 0x04))
                        {
                            If ((Local4 != 0x06))
                            {
                                If ((Local4 != 0x08))
                                {
                                    If ((Local4 != 0x0A))
                                    {
                                        Local0 [Zero] = 0x19
                                        Return (Local0)
                                    }
                                }
                            }
                        }
                    }

                    If ((Acquire (SBX0, 0xFFFF) == Zero))
                    {
                        ADD0 = (Arg1 << One)
                        CMD0 = Arg2
                        HST0 = (HST0 | 0x1F)
                        Local1 = (Arg0 & 0xA0)
                        CNT0 = ((CNT0 & 0x5F) | Local1)
                        If ((Local4 == 0x02))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x40)
                        }

                        If ((Local4 == 0x04))
                        {
                            CNT0 = ((CNT0 & 0xA0) | 0x44)
                        }

                        If ((Local4 == 0x06))
                        {
                            DT00 = Arg4
                            CNT0 = ((CNT0 & 0xA0) | 0x48)
                        }

                        If ((Local4 == 0x08))
                        {
                            DT00 = (Arg4 & 0xFF)
                            DT10 = (Arg4 >> 0x08)
                            CNT0 = ((CNT0 & 0xA0) | 0x4C)
                        }

                        If ((Local4 == 0x0A))
                        {
                            HST0 = (HST0 | 0x80)
                            Local1 = CNT0 /* \_SB_.PCI0.SMBS.CNT0 */
                            DT00 = Arg3
                            Local2 = Zero
                            While ((Local2 < Arg3))
                            {
                                BLK0 = Arg4 [Local2]
                                Local2 += One
                            }

                            CNT0 = ((CNT0 & 0xA0) | 0x54)
                        }

                        Local0 [Zero] = WTC0 (0x03E8)
                        CNT0 = (CNT0 & 0x5F)
                        Release (SBX0)
                    }

                    Return (Local0)
                }
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Mutex (PSMX, 0x00)
                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (COPR)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.TMR_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.TMR_.BUF1 */
                    }
                }

                Device (KBC0)
                {
                    Name (_HID, "MSFT0001")  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }

                Device (_MSS)
                {
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        If ((GP49 == Zero))
                        {
                            If ((TPID == One))
                            {
                                Return (0x23068416)
                            }
                            ElseIf ((TPID == 0x02))
                            {
                                Return (0x3C2B2E4F)
                            }
                            Else
                            {
                                Return (0xFFFFC618)
                            }
                        }
                        ElseIf ((TPID == One))
                        {
                            Return (0x24068416)
                        }
                        ElseIf ((TPID == 0x02))
                        {
                            Return (0x3E2B2E4F)
                        }
                        Else
                        {
                            Return (0xFFFFC618)
                        }
                    }

                    Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
                    {
                        If ((GP49 == Zero))
                        {
                            If ((TPID == One))
                            {
                                Return (Package (0x02)
                                {
                                    0x8416, 
                                    0x130FD041
                                })
                            }
                            ElseIf ((TPID == 0x02))
                            {
                                Return (0x130FD041)
                            }
                            Else
                            {
                                Return (0xFFFFC618)
                            }
                        }
                        ElseIf ((TPID == One))
                        {
                            Return (Package (0x02)
                            {
                                0x8416, 
                                0x130FD041
                            })
                        }
                        ElseIf ((TPID == 0x02))
                        {
                            Return (0x130FD041)
                        }
                        Else
                        {
                            Return (0xFFFFC618)
                        }
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x002E,             // Range Minimum
                            0x002E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0400,             // Range Minimum
                            0x0400,             // Range Maximum
                            0x01,               // Alignment
                            0xD0,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0680,             // Range Minimum
                            0x0680,             // Range Maximum
                            0x01,               // Alignment
                            0x80,               // Length
                            )
                        IO (Decode16,
                            0x077A,             // Range Minimum
                            0x077A,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x0C,               // Length
                            )
                        IO (Decode16,
                            0x0840,             // Range Minimum
                            0x0840,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                    })
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFFF00000,         // Address Base
                            0x00100000,         // Address Length
                            _Y05)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y05._LEN, PSIZ)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y05._BAS, PBAS)  // _BAS: Base Address
                        PSIZ = ROMS /* \ROMS */
                        Local0 = (ROMS - One)
                        PBAS = (Ones - Local0)
                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }
                }

                OperationRegion (LCLM, SystemIO, 0x0C50, 0x03)
                Field (LCLM, ByteAcc, NoLock, Preserve)
                {
                    CLMI,   8, 
                    CLMD,   8, 
                    CLGP,   8
                }

                IndexField (CLMI, CLMD, ByteAcc, NoLock, Preserve)
                {
                    IDRG,   8, 
                    Offset (0x02), 
                    TSTS,   8, 
                    TINT,   8, 
                    Offset (0x12), 
                    I2CC,   8, 
                    GPIO,   8
                }

                Method (RGPM, 0, NotSerialized)
                {
                    Local0 = GPIO /* \_SB_.PCI0.LPC0.GPIO */
                    Local0 &= 0xFFFFFF3F
                    GPIO = Local0
                    Local1 = CLGP /* \_SB_.PCI0.LPC0.CLGP */
                    Return (Local1)
                }
            }

            Device (SATA)
            {
                Name (_ADR, 0x00110000)  // _ADR: Address
                Name (B5EN, Zero)
                Name (BA_5, Zero)
                Name (SBAR, 0xF0C6F000)
                OperationRegion (SATX, PCI_Config, Zero, 0x44)
                Field (SATX, AnyAcc, NoLock, Preserve)
                {
                    VIDI,   32, 
                    Offset (0x0A), 
                    STCL,   16, 
                    Offset (0x24), 
                    BA05,   32, 
                    Offset (0x40), 
                    WTEN,   1, 
                    Offset (0x42), 
                    DIS0,   1, 
                    DIS1,   1, 
                    DIS2,   1, 
                    DIS3,   1, 
                    DIS4,   1, 
                    DIS5,   1
                }

                Field (SATX, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x42), 
                    DISP,   6
                }

                Method (GBAA, 0, Serialized)
                {
                    BA_5 = BA05 /* \_SB_.PCI0.SATA.BA05 */
                    If (((BA_5 == Ones) || (STCL != 0x0101)))
                    {
                        B5EN = Zero
                        Return (SBAR) /* \_SB_.PCI0.SATA.SBAR */
                    }
                    Else
                    {
                        B5EN = One
                        Return (BA_5) /* \_SB_.PCI0.SATA.BA_5 */
                    }
                }

                OperationRegion (BAR5, SystemMemory, GBAA (), 0x1000)
                Field (BAR5, AnyAcc, NoLock, Preserve)
                {
                    NOPT,   5, 
                    Offset (0x0C), 
                    PTI0,   1, 
                    PTI1,   1, 
                    PTI2,   1, 
                    PTI3,   1, 
                    PTI4,   1, 
                    PTI5,   1, 
                    PTI6,   1, 
                    PTI7,   1, 
                    Offset (0x118), 
                    CST0,   1, 
                    Offset (0x120), 
                        ,   7, 
                    BSY0,   1, 
                    Offset (0x128), 
                    DET0,   4, 
                    Offset (0x129), 
                    IPM0,   4, 
                    Offset (0x12C), 
                    DDI0,   4, 
                    Offset (0x198), 
                    CST1,   1, 
                    Offset (0x1A0), 
                        ,   7, 
                    BSY1,   1, 
                    Offset (0x1A8), 
                    DET1,   4, 
                    Offset (0x1A9), 
                    IPM1,   4, 
                    Offset (0x1AC), 
                    DDI1,   4, 
                    Offset (0x218), 
                    CST2,   1, 
                    Offset (0x220), 
                        ,   7, 
                    BSY2,   1, 
                    Offset (0x228), 
                    DET2,   4, 
                    Offset (0x229), 
                    IPM2,   4, 
                    Offset (0x22C), 
                    DDI2,   4, 
                    Offset (0x298), 
                    CST3,   1, 
                    Offset (0x2A0), 
                        ,   7, 
                    BSY3,   1, 
                    Offset (0x2A8), 
                    DET3,   4, 
                    Offset (0x2A9), 
                    IPM3,   4, 
                    Offset (0x2AC), 
                    DDI3,   4, 
                    Offset (0x318), 
                    CST4,   1, 
                    Offset (0x320), 
                        ,   7, 
                    BSY4,   1, 
                    Offset (0x328), 
                    DET4,   4, 
                    Offset (0x329), 
                    IPM4,   4, 
                    Offset (0x32C), 
                    DDI4,   4, 
                    Offset (0x398), 
                    CST5,   1, 
                    Offset (0x3A0), 
                        ,   7, 
                    BSY5,   1, 
                    Offset (0x3A8), 
                    DET5,   4, 
                    Offset (0x3A9), 
                    IPM5,   4, 
                    Offset (0x3AC), 
                    DDI5,   4
                }

                Field (BAR5, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x0C), 
                    PTI,    6
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    GBAA ()
                }

                Device (PRID)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (SPTM, Buffer (0x14)
                    {
                        /* 0000 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0008 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0010 */  0x1F, 0x00, 0x00, 0x00                           // ....
                    })
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.PRID.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        SPTM = Arg0
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        GBAA ()
                        If ((((TPOS >= 0x40) || (TPOS == 0x04)) && B5EN))
                        {
                            If (IPM2)
                            {
                                Local0 = 0x32
                                While (((BSY2 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Device (P_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == Zero))
                            {
                                Return (Zero)
                            }

                            If ((DET0 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY0 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }

                    Device (P_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == Zero))
                            {
                                Return (Zero)
                            }

                            If ((DET2 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY2 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }
                }

                Device (SECD)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Name (SPTM, Buffer (0x14)
                    {
                        /* 0000 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0008 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0010 */  0x1F, 0x00, 0x00, 0x00                           // ....
                    })
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.SECD.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        SPTM = Arg0
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        GBAA ()
                        If ((((TPOS >= 0x40) || (TPOS == 0x04)) && B5EN))
                        {
                            If (IPM1)
                            {
                                Local0 = 0x32
                                While (((BSY1 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }

                            If (IPM3)
                            {
                                Local0 = 0x32
                                While (((BSY3 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Device (S_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == Zero))
                            {
                                Return (Zero)
                            }

                            If ((DET1 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY1 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }

                    Device (S_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == Zero))
                            {
                                Return (Zero)
                            }

                            If ((DET3 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY3 == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }
                }

                Method (ENP, 2, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        DIS0 = ~Arg1
                    }
                    ElseIf ((Arg0 == One))
                    {
                        DIS1 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        DIS2 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        DIS3 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x04))
                    {
                        DIS4 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x05))
                    {
                        DIS5 = ~Arg1
                    }

                    WTEN = One
                    If ((Arg0 == Zero))
                    {
                        PTI0 = Arg1
                    }
                    ElseIf ((Arg0 == One))
                    {
                        PTI1 = Arg1
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        PTI2 = Arg1
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        PTI3 = Arg1
                    }
                    ElseIf ((Arg0 == 0x04))
                    {
                        PTI4 = Arg1
                    }
                    ElseIf ((Arg0 == 0x05))
                    {
                        PTI5 = Arg1
                    }

                    If ((DISP == 0x3F))
                    {
                        PTI0 = One
                    }
                    ElseIf ((DIS0 && ((DISP & 0x3E) ^ 0x3E)))
                    {
                        PTI0 = Zero
                    }

                    Local0 = PTI /* \_SB_.PCI0.SATA.PTI_ */
                    Local1 = Zero
                    While (Local0)
                    {
                        If ((Local0 & One))
                        {
                            Local1++
                        }

                        Local0 >>= One
                    }

                    NOPT = Local1--
                    WTEN = Zero
                }
            }

            Device (IDE)
            {
                Name (_ADR, 0x00140001)  // _ADR: Address
                Name (UDMT, Package (0x08)
                {
                    0x78, 
                    0x5A, 
                    0x3C, 
                    0x2D, 
                    0x1E, 
                    0x14, 
                    Zero, 
                    Zero
                })
                Name (PIOT, Package (0x06)
                {
                    0x0258, 
                    0x0186, 
                    0x010E, 
                    0xB4, 
                    0x78, 
                    Zero
                })
                Name (PITR, Package (0x06)
                {
                    0x99, 
                    0x47, 
                    0x34, 
                    0x22, 
                    0x20, 
                    0x99
                })
                Name (MDMT, Package (0x04)
                {
                    0x01E0, 
                    0x96, 
                    0x78, 
                    Zero
                })
                Name (MDTR, Package (0x04)
                {
                    0x77, 
                    0x21, 
                    0x20, 
                    0xFF
                })
                OperationRegion (IDE, PCI_Config, 0x40, 0x20)
                Field (IDE, WordAcc, NoLock, Preserve)
                {
                    PPIT,   16, 
                    SPIT,   16, 
                    PMDT,   16, 
                    SMDT,   16, 
                    PPIC,   8, 
                    SPIC,   8, 
                    PPIM,   8, 
                    SPIM,   8, 
                    Offset (0x14), 
                    PUDC,   2, 
                    SUDC,   2, 
                    Offset (0x16), 
                    PUDM,   8, 
                    SUDM,   8
                }

                Method (GETT, 1, NotSerialized)
                {
                    Local0 = (Arg0 & 0x0F)
                    Local1 = (Arg0 >> 0x04)
                    Return ((0x1E * ((Local0 + One) + (Local1 + One)
                        )))
                }

                Method (GTM, 1, NotSerialized)
                {
                    CreateByteField (Arg0, Zero, PIT1)
                    CreateByteField (Arg0, One, PIT0)
                    CreateByteField (Arg0, 0x02, MDT1)
                    CreateByteField (Arg0, 0x03, MDT0)
                    CreateByteField (Arg0, 0x04, PICX)
                    CreateByteField (Arg0, 0x05, UDCX)
                    CreateByteField (Arg0, 0x06, UDMX)
                    Name (BUF, Buffer (0x14)
                    {
                        /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                        /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                        /* 0010 */  0x00, 0x00, 0x00, 0x00                           // ....
                    })
                    CreateDWordField (BUF, Zero, PIO0)
                    CreateDWordField (BUF, 0x04, DMA0)
                    CreateDWordField (BUF, 0x08, PIO1)
                    CreateDWordField (BUF, 0x0C, DMA1)
                    CreateDWordField (BUF, 0x10, FLAG)
                    If ((PICX & One))
                    {
                        Return (BUF) /* \_SB_.PCI0.IDE_.GTM_.BUF_ */
                    }

                    PIO0 = GETT (PIT0)
                    PIO1 = GETT (PIT1)
                    If ((UDCX & One))
                    {
                        FLAG |= One
                        DMA0 = DerefOf (UDMT [(UDMX & 0x0F)])
                    }
                    ElseIf ((MDT0 != 0xFF))
                    {
                        DMA0 = GETT (MDT0)
                    }

                    If ((UDCX & 0x02))
                    {
                        FLAG |= 0x04
                        DMA1 = DerefOf (UDMT [(UDMX >> 0x04)])
                    }
                    ElseIf ((MDT1 != 0xFF))
                    {
                        DMA1 = GETT (MDT1)
                    }

                    FLAG |= 0x1A
                    Return (BUF) /* \_SB_.PCI0.IDE_.GTM_.BUF_ */
                }

                Method (STM, 3, NotSerialized)
                {
                    CreateDWordField (Arg0, Zero, PIO0)
                    CreateDWordField (Arg0, 0x04, DMA0)
                    CreateDWordField (Arg0, 0x08, PIO1)
                    CreateDWordField (Arg0, 0x0C, DMA1)
                    CreateDWordField (Arg0, 0x10, FLAG)
                    Name (BUF, Buffer (0x07)
                    {
                         0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                    })
                    CreateByteField (BUF, Zero, PIT1)
                    CreateByteField (BUF, One, PIT0)
                    CreateByteField (BUF, 0x02, MDT1)
                    CreateByteField (BUF, 0x03, MDT0)
                    CreateByteField (BUF, 0x04, PIMX)
                    CreateByteField (BUF, 0x05, UDCX)
                    CreateByteField (BUF, 0x06, UDMX)
                    Local0 = Match (PIOT, MLE, PIO0, MTR, Zero, Zero)
                    Local0 %= 0x05
                    Local1 = Match (PIOT, MLE, PIO1, MTR, Zero, Zero)
                    Local1 %= 0x05
                    PIMX = ((Local1 << 0x04) | Local0)
                    PIT0 = DerefOf (PITR [Local0])
                    PIT1 = DerefOf (PITR [Local1])
                    If ((FLAG & One))
                    {
                        Local0 = Match (UDMT, MLE, DMA0, MTR, Zero, Zero)
                        Local0 %= 0x06
                        UDMX |= Local0
                        UDCX |= One
                    }
                    ElseIf ((DMA0 != Ones))
                    {
                        Local0 = Match (MDMT, MLE, DMA0, MTR, Zero, Zero)
                        MDT0 = DerefOf (MDTR [Local0])
                    }

                    If ((FLAG & 0x04))
                    {
                        Local0 = Match (UDMT, MLE, DMA1, MTR, Zero, Zero)
                        Local0 %= 0x06
                        UDMX |= (Local0 << 0x04)
                        UDCX |= 0x02
                    }
                    ElseIf ((DMA1 != Ones))
                    {
                        Local0 = Match (MDMT, MLE, DMA1, MTR, Zero, Zero)
                        MDT1 = DerefOf (MDTR [Local0])
                    }

                    Return (BUF) /* \_SB_.PCI0.IDE_.STM_.BUF_ */
                }

                Method (GTF, 2, NotSerialized)
                {
                    CreateByteField (Arg1, Zero, MDT1)
                    CreateByteField (Arg1, One, MDT0)
                    CreateByteField (Arg1, 0x02, PIMX)
                    CreateByteField (Arg1, 0x03, UDCX)
                    CreateByteField (Arg1, 0x04, UDMX)
                    If ((Arg0 == 0xA0))
                    {
                        Local0 = (PIMX & 0x0F)
                        Local1 = MDT0 /* \_SB_.PCI0.IDE_.GTF_.MDT0 */
                        Local2 = (UDCX & One)
                        Local3 = (UDMX & 0x0F)
                    }
                    Else
                    {
                        Local0 = (PIMX >> 0x04)
                        Local1 = MDT1 /* \_SB_.PCI0.IDE_.GTF_.MDT1 */
                        Local2 = (UDCX & 0x02)
                        Local3 = (UDMX >> 0x04)
                    }

                    Name (BUF, Buffer (0x0E)
                    {
                        /* 0000 */  0x03, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xEF, 0x03,  // ........
                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0xFF, 0xEF               // ......
                    })
                    CreateByteField (BUF, One, PMOD)
                    CreateByteField (BUF, 0x08, DMOD)
                    CreateByteField (BUF, 0x05, CMDA)
                    CreateByteField (BUF, 0x0C, CMDB)
                    CMDA = Arg0
                    CMDB = Arg0
                    PMOD = (Local0 | 0x08)
                    If (Local2)
                    {
                        DMOD = (Local3 | 0x40)
                    }
                    ElseIf ((Local1 != 0xFF))
                    {
                        Local4 = Match (MDMT, MLE, GETT (Local1), MTR, Zero, Zero)
                        If ((Local4 < 0x03))
                        {
                            DMOD = (0x20 | Local4)
                        }
                    }

                    Return (BUF) /* \_SB_.PCI0.IDE_.GTF_.BUF_ */
                }

                Device (PRID)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIC)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        VPIT = PPIT /* \_SB_.PCI0.IDE_.PPIT */
                        VMDT = PMDT /* \_SB_.PCI0.IDE_.PMDT */
                        VPIC = PPIC /* \_SB_.PCI0.IDE_.PPIC */
                        VUDC = PUDC /* \_SB_.PCI0.IDE_.PUDC */
                        VUDM = PUDM /* \_SB_.PCI0.IDE_.PUDM */
                        Return (GTM (BUF))
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIM)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        BUF = STM (Arg0, Arg1, Arg2)
                        PPIT = VPIT /* \_SB_.PCI0.IDE_.PRID._STM.VPIT */
                        PMDT = VMDT /* \_SB_.PCI0.IDE_.PRID._STM.VMDT */
                        PPIM = VPIM /* \_SB_.PCI0.IDE_.PRID._STM.VPIM */
                        PUDC = VUDC /* \_SB_.PCI0.IDE_.PRID._STM.VUDC */
                        PUDM = VUDM /* \_SB_.PCI0.IDE_.PRID._STM.VUDM */
                    }

                    Device (P_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            VMDT = PMDT /* \_SB_.PCI0.IDE_.PMDT */
                            VPIM = PPIM /* \_SB_.PCI0.IDE_.PPIM */
                            VUDC = PUDC /* \_SB_.PCI0.IDE_.PUDC */
                            VUDM = PUDM /* \_SB_.PCI0.IDE_.PUDM */
                            Return (GTF (0xA0, BUF))
                        }
                    }

                    Device (P_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            VMDT = PMDT /* \_SB_.PCI0.IDE_.PMDT */
                            VPIM = PPIM /* \_SB_.PCI0.IDE_.PPIM */
                            VUDC = PUDC /* \_SB_.PCI0.IDE_.PUDC */
                            VUDM = PUDM /* \_SB_.PCI0.IDE_.PUDM */
                            Return (GTF (0xB0, BUF))
                        }
                    }
                }

                Device (SECD)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIC)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        VPIT = SPIT /* \_SB_.PCI0.IDE_.SPIT */
                        VMDT = SMDT /* \_SB_.PCI0.IDE_.SMDT */
                        VPIC = SPIC /* \_SB_.PCI0.IDE_.SPIC */
                        VUDC = SUDC /* \_SB_.PCI0.IDE_.SUDC */
                        VUDM = SUDM /* \_SB_.PCI0.IDE_.SUDM */
                        Return (GTM (BUF))
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIM)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        BUF = STM (Arg0, Arg1, Arg2)
                        SPIT = VPIT /* \_SB_.PCI0.IDE_.SECD._STM.VPIT */
                        SMDT = VMDT /* \_SB_.PCI0.IDE_.SECD._STM.VMDT */
                        SPIM = VPIM /* \_SB_.PCI0.IDE_.SECD._STM.VPIM */
                        SUDC = VUDC /* \_SB_.PCI0.IDE_.SECD._STM.VUDC */
                        SUDM = VUDM /* \_SB_.PCI0.IDE_.SECD._STM.VUDM */
                    }

                    Device (S_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            VMDT = SMDT /* \_SB_.PCI0.IDE_.SMDT */
                            VPIM = SPIM /* \_SB_.PCI0.IDE_.SPIM */
                            VUDC = SUDC /* \_SB_.PCI0.IDE_.SUDC */
                            VUDM = SUDM /* \_SB_.PCI0.IDE_.SUDM */
                            Return (GTF (0xA0, BUF))
                        }
                    }

                    Device (S_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            VMDT = SMDT /* \_SB_.PCI0.IDE_.SMDT */
                            VPIM = SPIM /* \_SB_.PCI0.IDE_.SPIM */
                            VUDC = SUDC /* \_SB_.PCI0.IDE_.SUDC */
                            VUDM = SUDM /* \_SB_.PCI0.IDE_.SUDM */
                            Return (GTF (0xB0, BUF))
                        }
                    }
                }
            }
        }

        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x10), 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x30), 
            USB1,   8, 
            USB2,   8, 
            USB3,   8, 
            USB4,   8, 
            USB5,   8, 
            USB6,   8, 
            USB7,   8, 
            Offset (0x40), 
            IDE,    8, 
            SATA,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            If (PICM)
            {
                HDAD = Arg0
            }
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
            If (PICM)
            {
                USB2 = Arg0
                USB4 = Arg0
                USB6 = Arg0
                IDE = Arg0
            }
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            If (PICM)
            {
                USB1 = Arg0
                USB3 = Arg0
                USB5 = Arg0
                USB7 = Arg0
            }
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            If (PICM)
            {
                SATA = Arg0
            }
        }

        Name (PRS1, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,7,10,11,12,14,15}
        })
        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Name (IPRA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRB, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRC, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRD, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRA)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRA = Local0
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRB)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRB = Local0
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRC)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRC = Local0
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRD)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRD = Local0
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRE)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRF)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRG)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRH)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }

        Method (GSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xE4
            Sleep (0x02)
        }

        Method (S80H, 1, NotSerialized)
        {
            IO80 = Arg0
        }

        Method (BSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xBE
            Sleep (One)
        }

        Scope (\_SB)
        {
            Device (LID)
            {
                Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
                Method (_LID, 0, NotSerialized)  // _LID: Lid Status
                {
                    If (^^PCI0.LPC0.ECOK ())
                    {
                        Return (^^PCI0.LPC0.EC0.LIDF) /* \_SB_.PCI0.LPC0.EC0_.LIDF */
                    }
                    Else
                    {
                        Return (One)
                    }
                }

                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x16, 
                    0x03
                })
            }
        }

        Scope (\)
        {
            Name (GUPC, Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })
            Name (GPLD, Package (0x01)
            {
                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
                }
            })
            Name (UPC0, Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })
            Name (PLD0, Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x99, 0x11, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00   // ........
            })
            Name (UPC3, Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })
            Name (PLD3, Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x91, 0x12, 0x80, 0x00, 0x03, 0x00, 0x00, 0x00   // ........
            })
            Name (UPCI, Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })
            Name (PLDI, Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
            })
            Name (PLDC, Buffer (0x14)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // $.......
                /* 0010 */  0xDD, 0x00, 0x95, 0x00                           // ....
            })
            Name (UPCN, Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })
            Name (PLDN, Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
            })
        }

        Method (BTON, 0, NotSerialized)
        {
            O57 = One
        }

        Method (BTOF, 0, NotSerialized)
        {
            O57 = Zero
        }

        Method (WLON, 0, NotSerialized)
        {
            O58 = One
        }

        Method (WLOF, 0, NotSerialized)
        {
            O58 = Zero
        }
    }

    Scope (_SB.PCI0.LPC0)
    {
        Method (ECOK, 0, NotSerialized)
        {
            If ((^EC0.OKEC == One))
            {
                Return (One)
            }
            Else
            {
                Return (Zero)
            }
        }

        Device (EC0)
        {
            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
            Name (_GPE, 0x03)  // _GPE: General Purpose Events
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Name (OKEC, Zero)
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
            })
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x03))
                {
                    OKEC = Arg1
                }
            }

            Mutex (_ECL, 0x00)
            OperationRegion (ECMM, SystemMemory, 0xFF000000, 0x1000)
            Field (ECMM, AnyAcc, Lock, Preserve)
            {
                Offset (0x400), 
                Offset (0x45A), 
                AASD,   8, 
                Offset (0x464), 
                SMD0,   256, 
                Offset (0x48F), 
                BMFN,   72, 
                BATD,   64, 
                AATL,   1, 
                AACL,   1, 
                AAST,   1, 
                AARW,   1, 
                AAEN,   1, 
                AAEW,   1, 
                AAWR,   2, 
                    ,   1, 
                VIDO,   1, 
                TOUP,   1, 
                    ,   1, 
                LIDF,   1, 
                Offset (0x4A2), 
                ODTS,   8, 
                OSTY,   3, 
                    ,   1, 
                ADP0,   1, 
                ADP1,   1, 
                    ,   1, 
                ADPT,   1, 
                PWAK,   1, 
                MWAK,   1, 
                LWAK,   1, 
                RWAK,   1, 
                WWAK,   1, 
                UWAK,   1, 
                KWAK,   1, 
                TWAK,   1, 
                CCAC,   1, 
                AOAC,   1, 
                BLAC,   1, 
                PSRC,   1, 
                BOAC,   1, 
                LCAC,   1, 
                AAAC,   1, 
                ACAC,   1, 
                S3ST,   1, 
                S3RM,   1, 
                S4ST,   1, 
                S4RM,   1, 
                S5ST,   1, 
                S5RM,   1, 
                Offset (0x4A7), 
                OSTT,   8, 
                OSST,   8, 
                THLT,   8, 
                TCNL,   8, 
                MODE,   1, 
                    ,   2, 
                INIT,   1, 
                FAN1,   1, 
                FAN2,   1, 
                FANT,   1, 
                SKNM,   1, 
                SDTM,   8, 
                FSSN,   4, 
                FANU,   4, 
                PCVL,   4, 
                    ,   2, 
                SWTO,   1, 
                TTHR,   1, 
                TTHM,   1, 
                THTL,   1, 
                    ,   2, 
                NPST,   4, 
                Offset (0x4B1), 
                CTML,   8, 
                Offset (0x4B3), 
                Offset (0x4B4), 
                Offset (0x4B5), 
                Offset (0x4B6), 
                NTMP,   8, 
                    ,   1, 
                SKEY,   1, 
                DIGM,   1, 
                CDLE,   1, 
                Offset (0x4B8), 
                    ,   1, 
                PMEE,   1, 
                PWBE,   1, 
                RNGE,   1, 
                BTWE,   1, 
                    ,   2, 
                Offset (0x4B9), 
                BRTS,   8, 
                S35M,   1, 
                S35S,   1, 
                VATY,   2, 
                FFEN,   1, 
                FFST,   1, 
                Offset (0x4BB), 
                WLAT,   1, 
                BTAT,   1, 
                WLEX,   1, 
                BTEX,   1, 
                KLSW,   1, 
                WLOK,   1, 
                AT3G,   1, 
                EX3G,   1, 
                Offset (0x4BD), 
                CPUJ,   3, 
                CPNM,   3, 
                GATY,   2, 
                BOL0,   1, 
                BOL1,   1, 
                    ,   2, 
                BCC0,   1, 
                BCC1,   1, 
                Offset (0x4BF), 
                BPU0,   1, 
                BPU1,   1, 
                    ,   2, 
                BOS0,   1, 
                BOS1,   1, 
                Offset (0x4C0), 
                BTY0,   1, 
                BAM0,   1, 
                BAL0,   1, 
                    ,   1, 
                BMF0,   3, 
                Offset (0x4C1), 
                BST0,   8, 
                BRC0,   16, 
                BSN0,   16, 
                BPV0,   16, 
                BDV0,   16, 
                BDC0,   16, 
                BFC0,   16, 
                GAU0,   8, 
                CYC0,   8, 
                BPC0,   16, 
                BAC0,   16, 
                BTW0,   8, 
                BVL0,   8, 
                BTM0,   8, 
                BAT0,   8, 
                BCG0,   16, 
                BCT0,   8, 
                BCI0,   8, 
                BCM0,   8, 
                BOT0,   8, 
                BSSB,   16, 
                BOV0,   8, 
                BCF0,   8, 
                BAD0,   8, 
                BCV1,   16, 
                BCV2,   16, 
                BCV3,   16, 
                BCV4,   16, 
                Offset (0x4F4), 
                BMD0,   16, 
                BACV,   16, 
                BDN0,   8, 
                Offset (0x4FA)
            }

            OperationRegion (ERAM, EmbeddedControl, Zero, 0xFF)
            Field (ERAM, ByteAcc, Lock, Preserve)
            {
                Offset (0x5A), 
                Offset (0x5B), 
                Offset (0x5C), 
                Offset (0x5D), 
                ENIB,   16, 
                ENDD,   8, 
                SMPR,   8, 
                SMST,   8, 
                SMAD,   8, 
                SMCM,   8, 
                Offset (0x84), 
                BCNT,   8, 
                SMAA,   24, 
                Offset (0x89)
            }

            OperationRegion (ECRM, EmbeddedControl, Zero, 0xFF)
            Field (ECRM, ByteAcc, Lock, Preserve)
            {
                Offset (0x5D), 
                ERIB,   16, 
                ERBD,   8, 
                Offset (0xAA), 
                Offset (0xAB), 
                Offset (0xAD), 
                    ,   4, 
                Offset (0xAE), 
                PTVL,   4, 
                Offset (0xB0), 
                CTMP,   8, 
                Offset (0xB2), 
                SKTA,   8, 
                SKTB,   8, 
                SKTC,   8, 
                Offset (0xBC), 
                PJID,   8
            }

            Mutex (FAMX, 0x00)
            Method (FANG, 1, NotSerialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                Local0 = ERBD /* \_SB_.PCI0.LPC0.EC0_.ERBD */
                Release (FAMX)
                Return (Local0)
            }

            Method (FANW, 2, NotSerialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                ERBD = Arg1
                Release (FAMX)
                Return (Arg1)
            }

            Method (TUVR, 1, NotSerialized)
            {
                Return (0x03)
            }

            Method (THRO, 1, NotSerialized)
            {
                Return (ATHR (Arg0))
            }

            Method (CLCK, 1, NotSerialized)
            {
                Return (Zero)
            }

            Method (PCLK, 0, NotSerialized)
            {
                APCL ()
            }

            Method (ATHR, 1, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((\_PR.C000._PPC == Zero))
                    {
                        Return (One)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                ElseIf ((Arg0 == One))
                {
                    Return (\_PR.C000._PPC) /* External reference */
                }
                ElseIf ((Arg0 == 0x02))
                {
                    Return (TTHR) /* \_SB_.PCI0.LPC0.EC0_.TTHR */
                }
                Else
                {
                    Return (0xFF)
                }
            }

            Method (APCL, 0, NotSerialized)
            {
                Local0 = PTVL /* \_SB_.PCI0.LPC0.EC0_.PTVL */
                \_PR.C000.PPCV = Local0
                Notify (\_PR.C000, 0x80) // Performance Capability Change
            }

            Name (CMFP, Package (0x0E)
            {
                0x11, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x60, 
                0x61, 
                0x62, 
                0x63, 
                0x64, 
                0x20, 
                0x21, 
                0x22
            })
            Mutex (CFMX, 0x00)
            Method (CFUN, 4, Serialized)
            {
                Name (ESRC, 0x05)
                If ((Match (CMFP, MEQ, DerefOf (Arg0 [Zero]), MTR, 
                    Zero, Zero) != Ones))
                {
                    Acquire (CFMX, 0xFFFF)
                    APMD = Arg0
                    SFNO = Arg1
                    BFDT = Arg2
                    APMC = 0xCE
                    Release (CFMX)
                }
                ElseIf ((DerefOf (Arg0 [Zero]) == 0x10))
                {
                    If ((DerefOf (Arg1 [Zero]) == One))
                    {
                        CreateByteField (Arg2, Zero, CAPV)
                        CAVR = CAPV /* \_SB_.PCI0.LPC0.EC0_.CFUN.CAPV */
                        STDT = One
                    }
                    ElseIf ((DerefOf (Arg1 [Zero]) == 0x02))
                    {
                        Local0 = Buffer (0x80){}
                        CreateByteField (Local0, Zero, BFD0)
                        BFD0 = 0x08
                        STDT = One
                        BFDT = Local0
                    }
                    Else
                    {
                        STDT = Zero
                    }
                }
                ElseIf ((DerefOf (Arg0 [Zero]) == 0x18))
                {
                    Acquire (CFMX, 0xFFFF)
                    If ((DerefOf (Arg1 [Zero]) == 0x02))
                    {
                        SMD0 = Zero
                        SMAD = DerefOf (Arg2 [One])
                        SMCM = DerefOf (Arg2 [0x02])
                        SMPR = DerefOf (Arg2 [Zero])
                        While ((~(ESRC == Zero) && ~((SMST & 0x80
                            ) == 0x80)))
                        {
                            Sleep (0x14)
                            ESRC -= One
                        }

                        Local2 = SMST /* \_SB_.PCI0.LPC0.EC0_.SMST */
                        If (((Local2 & 0x80) == 0x80))
                        {
                            Local1 = Buffer (0x80){}
                            Local1 [Zero] = Local2
                            If ((Local2 == 0x80))
                            {
                                P80H = 0xC4
                                Local1 [One] = BCNT /* \_SB_.PCI0.LPC0.EC0_.BCNT */
                                Local3 = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                                Local1 [0x02] = DerefOf (Local3 [Zero])
                                Local1 [0x03] = DerefOf (Local3 [One])
                                Local1 [0x04] = DerefOf (Local3 [0x02])
                                Local1 [0x05] = DerefOf (Local3 [0x03])
                                Local1 [0x06] = DerefOf (Local3 [0x04])
                                Local1 [0x07] = DerefOf (Local3 [0x05])
                                Local1 [0x08] = DerefOf (Local3 [0x06])
                                Local1 [0x09] = DerefOf (Local3 [0x07])
                                Local1 [0x0A] = DerefOf (Local3 [0x08])
                                Local1 [0x0B] = DerefOf (Local3 [0x09])
                                Local1 [0x0C] = DerefOf (Local3 [0x0A])
                                Local1 [0x0D] = DerefOf (Local3 [0x0B])
                                Local1 [0x0E] = DerefOf (Local3 [0x0C])
                                Local1 [0x0F] = DerefOf (Local3 [0x0D])
                                Local1 [0x10] = DerefOf (Local3 [0x0E])
                                Local1 [0x11] = DerefOf (Local3 [0x0F])
                                Local1 [0x12] = DerefOf (Local3 [0x10])
                                Local1 [0x13] = DerefOf (Local3 [0x11])
                                Local1 [0x14] = DerefOf (Local3 [0x12])
                                Local1 [0x15] = DerefOf (Local3 [0x13])
                                Local1 [0x16] = DerefOf (Local3 [0x14])
                                Local1 [0x17] = DerefOf (Local3 [0x15])
                                Local1 [0x18] = DerefOf (Local3 [0x16])
                                Local1 [0x19] = DerefOf (Local3 [0x17])
                                Local1 [0x1A] = DerefOf (Local3 [0x18])
                                Local1 [0x1B] = DerefOf (Local3 [0x19])
                                Local1 [0x1C] = DerefOf (Local3 [0x1A])
                                Local1 [0x1D] = DerefOf (Local3 [0x1B])
                                Local1 [0x1E] = DerefOf (Local3 [0x1C])
                                Local1 [0x1F] = DerefOf (Local3 [0x1D])
                                Local1 [0x20] = DerefOf (Local3 [0x1E])
                                Local1 [0x21] = DerefOf (Local3 [0x1F])
                            }

                            BFDT = Local1
                            STDT = One
                        }
                        Else
                        {
                            P80H = 0xC5
                            STDT = Zero
                        }
                    }
                    Else
                    {
                        P80H = 0xC6
                        STDT = Zero
                    }

                    Release (CFMX)
                }
                Else
                {
                    STDT = Zero
                }
            }

            Mutex (PFMX, 0x00)
            Method (PFUN, 4, Serialized)
            {
                Acquire (PFMX, 0xFFFF)
                APMD = Arg0
                SFNO = Arg1
                BFDT = Arg2
                APMC = 0xCF
                Release (PFMX)
                STDT = Zero
            }

            Method (CMFC, 4, Serialized)
            {
                Name (RTVL, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                If ((ObjectType (Arg0) == One))
                {
                    RTVL [Zero] = 0x8000
                }
                ElseIf ((DerefOf (Arg0 [Zero]) < 0xFE))
                {
                    Local1 = Buffer (0x82){}
                    CreateWordField (Local1, Zero, RTST)
                    CreateField (Local1, 0x10, 0x0400, RTDT)
                    If ((ToInteger (Arg0) <= 0x7F))
                    {
                        CFUN (Arg0, Arg1, Arg2, Arg3)
                    }
                    Else
                    {
                        PFUN (Arg0, Arg1, Arg2, Arg3)
                    }

                    RTST = STDT /* \STDT */
                    RTDT = BFDT /* \BFDT */
                    Return (Local1)
                }
                Else
                {
                    RTVL [Zero] = 0x8000
                }

                Return (RTVL) /* \_SB_.PCI0.LPC0.EC0_.CMFC.RTVL */
            }

            OperationRegion (ECAM, EmbeddedControl, Zero, 0xFF)
            Field (ECAM, ByteAcc, Lock, Preserve)
            {
                Offset (0x06), 
                ERPM,   8, 
                BTOV,   1, 
                BTIL,   1, 
                BTPF,   1, 
                BTSG,   1, 
                LEDF,   1, 
                MBBD,   1, 
                LVAT,   1, 
                FCGM,   1, 
                ACBL,   8, 
                DCBL,   8, 
                EDCC,   1, 
                ALSC,   1, 
                CDMB,   1, 
                CCSB,   1, 
                BTSM,   1, 
                BTCM,   1, 
                LBTM,   1, 
                CSBM,   1, 
                HYMS,   1, 
                HDME,   1, 
                HGMF,   1, 
                SWCS,   1, 
                IPEN,   1, 
                DCRC,   1, 
                CREC,   1, 
                SGCR,   1, 
                ODPO,   1, 
                EODD,   1, 
                ODPK,   1, 
                CMEX,   1, 
                CMON,   1, 
                SODD,   1, 
                ODFB,   1, 
                EODS,   1, 
                RTMP,   8, 
                VTMP,   8, 
                FNCM,   8, 
                PINF,   3, 
                SPST,   1, 
                ATIT,   1, 
                QTMD,   1, 
                SS35,   1, 
                Offset (0x11), 
                BFUC,   2, 
                Offset (0x12), 
                FUSL,   8, 
                FUSH,   8, 
                BMIL,   8, 
                BMIH,   8, 
                HIDL,   8, 
                HIDH,   8, 
                FMVL,   8, 
                FMVH,   8, 
                DAVL,   8, 
                DAVH,   8, 
                KEYP,   1, 
                BRAZ,   1, 
                Offset (0x1E), 
                FRKB,   4, 
                    ,   1, 
                    ,   1, 
                    ,   1, 
                Offset (0x1F), 
                Offset (0x8A), 
                KLON,   1, 
                UCEN,   1, 
                    ,   1, 
                    ,   1, 
                KLSP,   1, 
                KLRD,   1, 
                UCE2,   1, 
                UCSP,   1
            }

            OperationRegion (ECF2, EmbeddedControl, Zero, 0xFF)
            Field (ECF2, ByteAcc, Lock, Preserve)
            {
                VCMD,   8, 
                VDAT,   8, 
                VSTA,   8
            }

            Device (VPC0)
            {
                Name (_HID, "VPC2004")  // _HID: Hardware ID
                Name (_UID, Zero)  // _UID: Unique ID
                Name (_VPC, Zero)
                Name (VPCD, Zero)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_CFG, 0, NotSerialized)
                {
                    Local0 = _VPC /* \_SB_.PCI0.LPC0.EC0_.VPC0._VPC */
                    Local0 &= 0xFFFF
                    Local1 = Zero
                    If ((GP49 == Zero))
                    {
                        Local1 |= 0x5000
                    }
                    Else
                    {
                        Local1 |= 0x5800
                    }

                    Local0 |= 0xE000
                    Local0 |= 0x0200
                    Local0 |= 0x0800
                    Local0 |= 0x1000
                    Local0 &= 0xFFFB
                    Local0 |= 0x0A
                    If (ECOK ())
                    {
                        If ((BTEX == One))
                        {
                            Local1 |= One
                            If ((((OSTB != 0x60) && (OSTB != 0x61)) && 
                                (OSTB != 0x70)))
                            {
                                If ((BTAT == One))
                                {
                                    BTON ()
                                }
                                Else
                                {
                                    BTOF ()
                                }
                            }
                        }
                        Else
                        {
                            Local1 &= 0xFFFE
                        }

                        If ((WLEX == One))
                        {
                            Local1 |= 0x04
                            If ((((OSTB != 0x60) && (OSTB != 0x61)) && 
                                (OSTB != 0x70)))
                            {
                                If ((WLAT == One))
                                {
                                    WLON ()
                                }
                                Else
                                {
                                    WLOF ()
                                }
                            }
                        }
                        Else
                        {
                            Local1 &= 0xFFFB
                        }

                        If ((CMEX == One))
                        {
                            Local1 |= 0x08
                        }
                        Else
                        {
                            Local1 &= 0xFFF7
                        }
                    }

                    Local2 = (0x07 << 0x04)
                    Local1 |= Local2
                    Local1 &= 0xFF7F
                    Local1 *= 0x00010000
                    Local0 += Local1
                    _VPC = Local0
                    Return (_VPC) /* \_SB_.PCI0.LPC0.EC0_.VPC0._VPC */
                }

                Method (VPCR, 1, Serialized)
                {
                    If ((Arg0 == One))
                    {
                        VPCD = VCMD /* \_SB_.PCI0.LPC0.EC0_.VCMD */
                    }
                    Else
                    {
                        VPCD = VDAT /* \_SB_.PCI0.LPC0.EC0_.VDAT */
                    }

                    Return (VPCD) /* \_SB_.PCI0.LPC0.EC0_.VPC0.VPCD */
                }

                Method (VPCW, 2, Serialized)
                {
                    If ((Arg0 == One))
                    {
                        VCMD = Arg1
                    }
                    Else
                    {
                        VDAT = Arg1
                    }

                    Return (Zero)
                }

                Name (TBSL, Package (0x10)
                {
                    One, 
                    0x06, 
                    0x0C, 
                    0x12, 
                    0x18, 
                    0x1E, 
                    0x24, 
                    0x2A, 
                    0x30, 
                    0x36, 
                    0x3C, 
                    0x42, 
                    0x48, 
                    0x4E, 
                    0x54, 
                    0x64
                })
                Name (TBS2, Package (0x65)
                {
                    Zero, 
                    One, 
                    0x02, 
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07, 
                    0x08, 
                    0x09, 
                    0x0A, 
                    0x0B, 
                    0x0C, 
                    0x0D, 
                    0x0E, 
                    0x0F, 
                    0x10, 
                    0x11, 
                    0x12, 
                    0x13, 
                    0x14, 
                    0x15, 
                    0x16, 
                    0x17, 
                    0x18, 
                    0x19, 
                    0x1A, 
                    0x1B, 
                    0x1C, 
                    0x1D, 
                    0x1E, 
                    0x1F, 
                    0x20, 
                    0x21, 
                    0x22, 
                    0x23, 
                    0x24, 
                    0x25, 
                    0x26, 
                    0x27, 
                    0x28, 
                    0x29, 
                    0x2A, 
                    0x2B, 
                    0x2C, 
                    0x2D, 
                    0x2E, 
                    0x2F, 
                    0x30, 
                    0x31, 
                    0x32, 
                    0x33, 
                    0x34, 
                    0x35, 
                    0x36, 
                    0x37, 
                    0x38, 
                    0x39, 
                    0x3A, 
                    0x3B, 
                    0x3C, 
                    0x3D, 
                    0x3E, 
                    0x3F, 
                    0x40, 
                    0x41, 
                    0x42, 
                    0x43, 
                    0x44, 
                    0x45, 
                    0x46, 
                    0x47, 
                    0x48, 
                    0x49, 
                    0x4A, 
                    0x4B, 
                    0x4C, 
                    0x4D, 
                    0x4E, 
                    0x4F, 
                    0x50, 
                    0x51, 
                    0x52, 
                    0x53, 
                    0x54, 
                    0x55, 
                    0x56, 
                    0x57, 
                    0x58, 
                    0x59, 
                    0x5A, 
                    0x5B, 
                    0x5C, 
                    0x5D, 
                    0x5E, 
                    0x5F, 
                    0x60, 
                    0x61, 
                    0x62, 
                    0x63, 
                    0x64
                })
                Method (DBSL, 0, NotSerialized)
                {
                    If ((OSTY == 0x04))
                    {
                        Return (TBS2) /* \_SB_.PCI0.LPC0.EC0_.VPC0.TBS2 */
                    }
                    Else
                    {
                        Return (TBSL) /* \_SB_.PCI0.LPC0.EC0_.VPC0.TBSL */
                    }
                }

                Method (HALS, 0, NotSerialized)
                {
                    Return (Zero)
                }

                Method (SALS, 1, Serialized)
                {
                    If ((Arg0 == One)){}
                    Else
                    {
                    }

                    If ((Arg0 == 0x08)){}
                    If ((Arg0 == 0x09)){}
                    If ((Arg0 == 0x0A)){}
                    If ((Arg0 == 0x0B)){}
                    Return (Zero)
                }

                Method (HODD, 0, NotSerialized)
                {
                    Return (0xFF)
                }

                Method (SODD, 1, Serialized)
                {
                }

                Method (STHT, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (Zero)
                    }

                    If ((Arg0 == One))
                    {
                        Return (Zero)
                    }

                    Return (Zero)
                }

                Method (BASL, 1, Serialized)
                {
                    Return (Zero)
                }

                Method (GBMD, 0, NotSerialized)
                {
                    Local0 = Zero
                    If ((One == CDMB))
                    {
                        Local0 |= One
                    }

                    If ((One == BTSM))
                    {
                        Local0 |= 0x02
                    }

                    If ((One == FCGM))
                    {
                        Local0 |= 0x04
                    }

                    If ((One == MBBD))
                    {
                        Local0 |= 0x08
                    }

                    If ((One == LBTM))
                    {
                        Local0 &= 0xFFFFFFDF
                    }

                    If ((One == BTIL))
                    {
                        Local0 |= 0x80
                    }

                    If ((One == BTPF))
                    {
                        Local0 |= 0x0100
                    }

                    If ((Zero == BTCM))
                    {
                        Local0 |= 0x0200
                    }
                    Else
                    {
                        Local0 |= 0x20
                        Local0 &= 0xFFFFFDFF
                    }

                    If ((One == BTOV))
                    {
                        Local0 |= 0x0800
                    }

                    Local0 &= 0xFFFE7FFF
                    If ((One == ADP0))
                    {
                        Local0 |= 0x8000
                    }

                    If ((One == ADP1))
                    {
                        Local0 |= 0x00010000
                    }

                    Return (Local0)
                }

                Method (SBMC, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        CDMB = Zero
                        EDCC = One
                        Return (Zero)
                    }

                    If ((Arg0 == One))
                    {
                        EDCC = Zero
                        CDMB = One
                        Return (Zero)
                    }

                    If ((Arg0 == 0x02))
                    {
                        CCSB = One
                        Return (Zero)
                    }

                    If ((Arg0 == 0x03))
                    {
                        BTSM = Zero
                        BTCM = One
                        LBTM = Zero
                        Return (Zero)
                    }

                    If ((Arg0 == 0x04))
                    {
                        BTSM = Zero
                        BTCM = One
                        LBTM = Zero
                        Return (Zero)
                    }

                    If ((Arg0 == 0x05))
                    {
                        BTSM = Zero
                        BTCM = Zero
                        LBTM = One
                        Return (Zero)
                    }

                    If ((Arg0 == 0x06))
                    {
                        CSBM = One
                        Return (Zero)
                    }

                    Return (Zero)
                }

                Method (SVCR, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        QTMD = Zero
                    }

                    If ((Arg0 == One))
                    {
                        QTMD = One
                    }

                    Return (Zero)
                }

                Method (MHCF, 1, NotSerialized)
                {
                    Local0 = Arg0
                    (Local0 & 0x60)
                    Local0 >>= 0x05
                    BFUC = Local0
                    Sleep (0x14)
                    Return (Local0)
                }

                Method (MHPF, 1, NotSerialized)
                {
                    Name (BFWB, Buffer (0x25){})
                    CreateByteField (BFWB, Zero, FB0)
                    CreateByteField (BFWB, One, FB1)
                    CreateByteField (BFWB, 0x02, FB2)
                    CreateByteField (BFWB, 0x03, FB3)
                    CreateField (BFWB, 0x20, 0x0100, FB4)
                    CreateByteField (BFWB, 0x24, FB5)
                    Acquire (_ECL, 0xFFFF)
                    If ((SizeOf (Arg0) <= 0x25))
                    {
                        If ((SMPR != Zero))
                        {
                            FB1 = SMST /* \_SB_.PCI0.LPC0.EC0_.SMST */
                        }
                        Else
                        {
                            BFWB = Arg0
                            SMAD = FB2 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB2_ */
                            SMCM = FB3 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB3_ */
                            BCNT = FB5 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB5_ */
                            Local0 = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                            If (((Local0 & One) == Zero))
                            {
                                SMD0 = FB4 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB4_ */
                            }

                            SMST = Zero
                            SMPR = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                            Local1 = 0x03E8
                            While (Local1)
                            {
                                SDLY (0x04)
                                Local1--
                                If (((SMST && 0x80) || (SMPR == Zero)))
                                {
                                    Break
                                }
                            }

                            Local0 = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                            If (((Local0 & One) != Zero))
                            {
                                FB4 = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                            }

                            FB1 = SMST /* \_SB_.PCI0.LPC0.EC0_.SMST */
                            If (((Local1 == Zero) || !(SMST && 0x80)))
                            {
                                SMPR = Zero
                                FB1 = 0x92
                            }
                        }

                        SDLY (0x28)
                        Release (_ECL)
                        Return (BFWB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.BFWB */
                    }
                }

                Method (SDLY, 1, NotSerialized)
                {
                    Local0 = Arg0
                    While ((Local0 > Zero))
                    {
                        Stall (0xFA)
                        Local0--
                    }
                }

                Method (MHIF, 1, NotSerialized)
                {
                    Name (RETB, Buffer (0x0A){})
                    If ((Arg0 == Zero))
                    {
                        RETB [Zero] = FUSL /* \_SB_.PCI0.LPC0.EC0_.FUSL */
                        RETB [One] = FUSH /* \_SB_.PCI0.LPC0.EC0_.FUSH */
                        RETB [0x02] = BMIL /* \_SB_.PCI0.LPC0.EC0_.BMIL */
                        RETB [0x03] = BMIH /* \_SB_.PCI0.LPC0.EC0_.BMIH */
                        RETB [0x04] = HIDL /* \_SB_.PCI0.LPC0.EC0_.HIDL */
                        RETB [0x05] = HIDH /* \_SB_.PCI0.LPC0.EC0_.HIDH */
                        RETB [0x06] = FMVL /* \_SB_.PCI0.LPC0.EC0_.FMVL */
                        RETB [0x07] = FMVH /* \_SB_.PCI0.LPC0.EC0_.FMVH */
                        RETB [0x08] = DAVL /* \_SB_.PCI0.LPC0.EC0_.DAVL */
                        RETB [0x09] = DAVH /* \_SB_.PCI0.LPC0.EC0_.DAVH */
                    }

                    Return (RETB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.RETB */
                }

                Method (GBID, 0, NotSerialized)
                {
                    Name (BFIF, Package (0x04)
                    {
                        Buffer (0x02)
                        {
                             0x00, 0x00                                       // ..
                        }, 

                        Buffer (0x02)
                        {
                             0xFF, 0xFF                                       // ..
                        }, 

                        Buffer (0x08)
                        {
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                        }, 

                        Buffer (0x08)
                        {
                             0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF   // ........
                        }
                    })
                    If (ECOK ())
                    {
                        If (BOL0)
                        {
                            DerefOf (BFIF [0x02]) [Zero] = BMIL /* \_SB_.PCI0.LPC0.EC0_.BMIL */
                            DerefOf (BFIF [0x02]) [One] = BMIH /* \_SB_.PCI0.LPC0.EC0_.BMIH */
                            DerefOf (BFIF [0x02]) [0x02] = HIDL /* \_SB_.PCI0.LPC0.EC0_.HIDL */
                            DerefOf (BFIF [0x02]) [0x03] = HIDH /* \_SB_.PCI0.LPC0.EC0_.HIDH */
                            DerefOf (BFIF [0x02]) [0x04] = FMVL /* \_SB_.PCI0.LPC0.EC0_.FMVL */
                            DerefOf (BFIF [0x02]) [0x05] = FMVH /* \_SB_.PCI0.LPC0.EC0_.FMVH */
                            DerefOf (BFIF [0x02]) [0x06] = DAVL /* \_SB_.PCI0.LPC0.EC0_.DAVL */
                            DerefOf (BFIF [0x02]) [0x07] = DAVH /* \_SB_.PCI0.LPC0.EC0_.DAVH */
                        }
                    }

                    Return (BFIF) /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.BFIF */
                }
            }

            Method (_Q44, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((OKEC == One))
                {
                    Notify (VPC0, 0x80) // Status Change
                }
            }

            Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((((OSTB != 0x60) && (OSTB != 0x61)) && 
                    (OSTB != 0x70)))
                {
                    If ((BRTS > Zero))
                    {
                        Local0 = BRTL /* \BRTL */
                        Local1 = 0x02
                        While ((Local1 <= 0x11))
                        {
                            If ((Local0 == DerefOf (BCL7 [Local1])))
                            {
                                Break
                            }

                            Local1++
                        }

                        Local1 -= 0x02
                        Local1--
                        BRTS = Local1
                        Notify (VPC0, 0x80) // Status Change
                    }
                }

                Notify (^^^VGA.LCD, 0x87) // Device-Specific
            }

            Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((((OSTB != 0x60) && (OSTB != 0x61)) && 
                    (OSTB != 0x70)))
                {
                    If ((BRTS < 0x0F))
                    {
                        Local0 = BRTL /* \BRTL */
                        Local1 = 0x02
                        While ((Local1 <= 0x11))
                        {
                            If ((Local0 == DerefOf (BCL7 [Local1])))
                            {
                                Break
                            }

                            Local1++
                        }

                        Local1 -= 0x02
                        Local1++
                        BRTS = Local1
                        Notify (VPC0, 0x80) // Status Change
                    }
                }

                Notify (^^^VGA.LCD, 0x86) // Device-Specific
            }

            Method (_Q1D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Sleep (0x03E8)
                PCLK ()
                Sleep (0x1E)
            }

            Method (_Q22, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q24, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_24====="
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q25, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Notify (BAT1, 0x81) // Information Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q37, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                PWRS = One
                Notify (ACAD, 0x80) // Status Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q38, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                PWRS = Zero
                Notify (ACAD, 0x80) // Status Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q55, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Sleep (0x01F4)
                Notify (BAT1, 0x81) // Information Change
                Sleep (0x01F4)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q65, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((((OSTB != 0x60) && (OSTB != 0x61)) && 
                    (OSTB != 0x70)))
                {
                    If ((BTEX == One))
                    {
                        If ((BTAT == One))
                        {
                            BTON ()
                        }
                        Else
                        {
                            BTOF ()
                        }
                    }

                    If ((WLEX == One))
                    {
                        If ((WLAT == One))
                        {
                            WLON ()
                        }
                        Else
                        {
                            WLOF ()
                        }
                    }
                }
            }

            Method (_Q2A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Notify (LID, 0x80) // Status Change
            }

            Method (_Q2B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Notify (LID, 0x80) // Status Change
            }
        }

        Scope (EC0)
        {
            Method (BSHK, 0, NotSerialized)
            {
                If (ECOK ())
                {
                    If (_OSI ("Windows 2006"))
                    {
                        OSTY = One
                    }

                    If (_OSI ("Windows 2006 SP1"))
                    {
                        OSTY = One
                    }

                    If (_OSI ("Windows 2009"))
                    {
                        OSTY = 0x03
                    }

                    If (_OSI ("Windows 2012"))
                    {
                        OSTY = 0x04
                    }

                    If (_OSI ("Windows 2013"))
                    {
                        OSTY = 0x05
                    }

                    If (_OSI ("Linux"))
                    {
                        OSTY = 0x02
                    }

                    If (_OSI ("Windows 2015"))
                    {
                        OSTY = 0x06
                    }
                }
            }
        }

        Device (BAT1)
        {
            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (BMDL, Zero)
            Name (BASC, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ^^EC0.BSHK ()
                If (ECOK ())
                {
                    Acquire (^^EC0._ECL, 0xFFFF)
                    If (^^EC0.BOL0)
                    {
                        Sleep (Zero)
                        Return (0x1F)
                    }
                    Else
                    {
                        Sleep (Zero)
                        Return (0x0F)
                    }

                    Release (^^EC0._ECL)
                }
                Else
                {
                    Sleep (Zero)
                    Return (0x1F)
                }
            }

            Method (XBIF, 0, NotSerialized)
            {
                Return (BIFX (Zero))
            }

            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
            {
                Return (BIFX (One))
            }

            Method (BIFX, 1, NotSerialized)
            {
                Name (STAX, Package (0x14)
                {
                    Zero, 
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "LENOVO "
                })
                Name (STAF, Package (0x0D)
                {
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "LENOVO "
                })
                If (ECOK ())
                {
                    Acquire (^^EC0._ECL, 0xFFFF)
                    If ((^^EC0.BAM0 == Zero))
                    {
                        BASC = 0x0A
                    }

                    STAX [One] = ^^EC0.BAM0 /* \_SB_.PCI0.LPC0.EC0_.BAM0 */
                    Local0 = ^^EC0.BDN0 /* \_SB_.PCI0.LPC0.EC0_.BDN0 */
                    BMDL = Local0
                    STAX [0x02] = (^^EC0.BDC0 * BASC)
                    Sleep (Zero)
                    STAX [0x05] = ^^EC0.BDV0 /* \_SB_.PCI0.LPC0.EC0_.BDV0 */
                    Sleep (Zero)
                    Local2 = ^^EC0.BFC0 /* \_SB_.PCI0.LPC0.EC0_.BFC0 */
                    Local2 = (Local2 * BASC)
                    Sleep (Zero)
                    STAX [0x03] = Local2
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x0A
                    STAX [0x06] = Local1
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x03
                    STAX [0x07] = Local1
                    STAF [Zero] = DerefOf (STAX [One])
                    STAF [One] = DerefOf (STAX [0x02])
                    STAF [0x02] = DerefOf (STAX [0x03])
                    STAF [0x03] = DerefOf (STAX [0x04])
                    STAF [0x04] = DerefOf (STAX [0x05])
                    STAF [0x05] = DerefOf (STAX [0x06])
                    STAF [0x06] = DerefOf (STAX [0x07])
                    STAF [0x07] = DerefOf (STAX [0x0E])
                    STAF [0x08] = DerefOf (STAX [0x0F])
                    STAF [0x09] = DerefOf (STAX [0x10])
                    STAF [0x0A] = DerefOf (STAX [0x11])
                    STAF [0x0B] = DerefOf (STAX [0x12])
                    STAF [0x0C] = DerefOf (STAX [0x13])
                    If ((Arg0 == One))
                    {
                        Return (STAX) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAX */
                    }
                    Else
                    {
                        Return (STAF) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAF */
                    }

                    Release (^^EC0._ECL)
                }
            }

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {
                Name (PBST, Package (0x04)
                {
                    Zero, 
                    Ones, 
                    Ones, 
                    0x1770
                })
                If (ECOK ())
                {
                    Acquire (^^EC0._ECL, 0xFFFF)
                    PBST [Zero] = ^^EC0.BST0 /* \_SB_.PCI0.LPC0.EC0_.BST0 */
                    Sleep (Zero)
                    Local4 = ^^EC0.BAC0 /* \_SB_.PCI0.LPC0.EC0_.BAC0 */
                    If ((^^EC0.ADPT == Zero))
                    {
                        Local4 = (0xFFFF - Local4)
                    }

                    If ((^^EC0.BAM0 == Zero))
                    {
                        Local4 = ((Local4 * ^^EC0.BPV0) / 0x03E8)
                    }

                    PBST [One] = Local4
                    Sleep (Zero)
                    PBST [0x02] = (^^EC0.BRC0 * BASC)
                    Sleep (Zero)
                    PBST [0x03] = ^^EC0.BPV0 /* \_SB_.PCI0.LPC0.EC0_.BPV0 */
                    Sleep (Zero)
                    If ((^^EC0.BDN0 != BMDL))
                    {
                        Notify (BAT1, 0x81) // Information Change
                    }

                    Release (^^EC0._ECL)
                }

                Return (PBST) /* \_SB_.PCI0.LPC0.BAT1._BST.PBST */
            }
        }

        Device (ACAD)
        {
            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (XX00, Buffer (0x03){})
            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Local0 = One
                If (ECOK ())
                {
                    Acquire (^^EC0._ECL, 0xFFFF)
                    Local0 = ^^EC0.ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                    Release (^^EC0._ECL)
                }

                CreateWordField (XX00, Zero, SSZE)
                CreateByteField (XX00, 0x02, ACST)
                SSZE = 0x03
                If (Local0)
                {
                    P80H = 0xAC
                    AFN4 (One)
                    ACST = Zero
                }
                Else
                {
                    P80H = 0xDC
                    AFN4 (0x02)
                    ACST = One
                }

                ALIB (One, XX00)
                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Scope (RTC)
        {
            OperationRegion (RCM0, SystemCMOS, Zero, 0x10)
            Field (RCM0, ByteAcc, NoLock, Preserve)
            {
                AccessAs (ByteAcc, 0x00), 
                RTCS,   8, 
                Offset (0x02), 
                RTCM,   8, 
                Offset (0x04), 
                RTCH,   8, 
                Offset (0x06), 
                RTCW,   8, 
                RTCD,   8
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 0000010C
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : 0F
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]                 FACS Address : BFB66000
[028h 0040   4]                 DSDT Address : BFBF0000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000400
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000404
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000800
[04Ch 0076   4]       PM Timer Block Address : 00000408
[050h 0080   4]           GPE0 Block Address : 00000420
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0064
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 00
[06Dh 0109   2]   Boot Flags (decoded below) : 0003
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 000085AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 0
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000000000B0

[080h 0128   1]         Value to cause reset : FB
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000BFBF0000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000000400

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 00 [SystemMemory]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000404

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000000800

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000408

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 04 [QWord Access:64]
[0E0h 0224   8]                      Address : 0000000000000420

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 00 [SystemMemory]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 0F 4C 45 4E 4F 56 4F  // FACP......LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 00 60 B6 BF 00 00 BF BF 00 02 09 00  // .....`..........
    0030: B0 00 00 00 A0 A1 00 00 00 04 00 00 00 00 00 00  // ................
    0040: 04 04 00 00 00 00 00 00 00 08 00 00 08 04 00 00  // ................
    0050: 20 04 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 64 00 E9 03 00 00 00 00 01 03 0D 00 00 03 00 00  // d...............
    0070: AD 85 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    0080: FB 00 00 00 00 00 00 00 00 00 00 00 00 00 BF BF  // ................
    0090: 00 00 00 00 01 20 00 03 00 04 00 00 00 00 00 00  // ..... ..........
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 00 08 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 04 00 00 00 00 00 00 01 40 00 04  // . ...........@..
    00E0: 20 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 63E278DC
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 DC 78 E2 63 00 00 00 00  // FACS@....x.c....
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 7A
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 00000000BFBEEF98

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 00000000BFBEEF18

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 7A 4C 45 4E 4F 56 4F  // FPDTD....zLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 00 00 10 01 00 00 00 00 98 EF BE BF  // ................
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 18 EF BE BF  // ................
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 1C
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]            Hardware Block ID : 10228210

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 1C 4C 45 4E 4F 56 4F  // HPET8.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 10 82 22 10 00 00 00 00 00 00 D0 FE  // ......".........
    0030: 00 00 00 00 00 80 00 00                          // ........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 07
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 07 4C 45 4E 4F 56 4F  // MCFG<.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000   4]                    Signature : "MSDM"    [Microsoft Data Management table]
[004h 0004   4]                 Table Length : 00000055
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 2E
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  49] Software Licensing Structure : \
    01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 \
    1D 00 00 00 58 48 47 38 4E 2D 57 42 52 51 48 2D \
    39 59 52 43 47 2D 36 4D 37 37 52 2D 51 47 4D 43 \
    44 

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 2E 4C 45 4E 4F 56 4F  // MSDMU.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 58 48 47 38 4E 2D 57 42  // ........XHG8N-WB
    0040: 52 51 48 2D 39 59 52 43 47 2D 36 4D 37 37 52 2D  // RQH-9YRCG-6M77R-
    0050: 51 47 4D 43 44                                   // QGMCD


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There were 26 external control methods found during
     * disassembly, but only 0 were resolved (26 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GFX_.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX_.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.LPC0.EC0_.GATY, UnknownObj)
    External (_SB_.PCI0.LPC0.EC0_.VATY, UnknownObj)
    External (_SB_.PCI0.LPC0.ECOK, IntObj)
    External (_SB_.PCI0.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M087, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M100, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M105, IntObj)
    External (M106, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments

    Scope (\_SB.PCI0.VGA)
    {
        Name (ATIB, Buffer (0x0100){})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (AF00 ())
            }

            If ((Arg0 == One))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, Zero, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = Zero
                M158 = Zero
                M159 = Zero
                M160 = Zero
                Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = One
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID, Local1))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, Zero)
        Name (M211, Zero)
        Name (M212, Zero)
        Name (M213, Zero)
        Name (M214, Zero)
        Name (M215, Zero)
        Name (SSDM, 0x0A)
        Name (SCDY, Zero)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, Zero, M165)
            CreateBitField (M164, One, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, Zero)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = Zero
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = Zero
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = Zero
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ One)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = Zero
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, Zero), 0x10, Local0)
            Else
            {
                 = M043 (Zero, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [Zero] = 0x05
                    ATIB [One] = Zero
                    ATIB [0x02] = Zero
                    ATIB [0x03] = Zero
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & One))
            {
                CreateBitField (M164, Zero, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, One, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)){}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Name (M189, Buffer (0x0100){})
        Name (M190, Ones)
        Name (M191, Ones)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (PX00 ())
            }

            If ((Arg0 == One))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = Zero
            M158 = Zero
            M160 = Zero
            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (One, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x1FFF
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            Local7 = Buffer (0x05){}
            CreateWordField (Local7, Zero, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = Zero
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, Zero)
            M133 (0x11, Local0) = M049 /* External reference */
            Local0 = M113 ()
            Local6
            M023 (Zero, M091, M090)
            If ((M192 && Local6))
            {
                M000 (0x11E2)
                M112 (Local0, Zero)
                M111 (Local0, One)
                Sleep (0x0A)
                M112 (Local0, 0x02)
                M112 (Local0, One)
                M000 (0x12E2)
                HPOK = Zero
                Sleep (0x14)
                M201 = One
                0x06 = \_SB.ALIB /* External reference */
                Local7
                Local6
                Local2 = Zero
                While ((Local2 < 0x0F))
                {
                    M023 (Zero, M091, M090)
                    Local4 = One
                    Local5 = 0xC8
                    While ((Local4 && Local5))
                    {
                        0xA5 = M021 (Zero, M091, M090)
                        Local0
                        Local0 &= 0x7F
                        If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                        {
                            Local4 = Zero
                        }
                        Else
                        {
                            Sleep (0x05)
                            Local5--
                        }
                    }

                    If (!Local4)
                    {
                        M090 = M024 (Zero, M091)
                        Local5
                        If (Local5)
                        {
                            M026 (Zero, M091, M090)
                            Sleep (0x05)
                            Local2++
                        }
                        Else
                        {
                            Local0 = Zero
                            If ((M025 == Zero))
                            {
                                M091
                                M090
                                Ones
                                Local0 = One
                            }

                            If (Local0)
                            {
                                M111 (M049, M133 (0x17, One))
                                M111 (M049, M133 (0x18, One))
                                HPOK = One
                                Local2 = 0x10
                            }
                            Else
                            {
                                HPOK = Zero
                                Local2 = 0x10
                            }
                        }
                    }
                    Else
                    {
                        Local2 = 0x10
                    }
                }

                If (\_SB.PCI0.LPC0.ECOK)
                {
                    If (HPOK)
                    {
                        \_SB.PCI0.LPC0.EC0.GATY = One
                        \_SB.PCI0.LPC0.EC0.VATY = 0x02
                    }
                    Else
                    {
                        \_SB.PCI0.LPC0.EC0.GATY = 0x03
                        \_SB.PCI0.LPC0.EC0.VATY = One
                    }
                }

                If (!HPOK)
                {
                    M000 (0x13E2)
                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                        Local5 = 0x05, While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (Zero, M091, M090)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                    {
                                        Local4 = Zero
                                    }
                                    Else
                                    {
                                        Else
                                            {
                                                M000 (0x02E2)
                                                If (\_SB.PCI0.LPC0.ECOK)
                                                {
                                                    \_SB.PCI0.LPC0.EC0.GATY = 0x03
                                                    \_SB.PCI0.LPC0.EC0.VATY = One
                                                }

                                                M201 = Zero
                                                \_SB.ALIB
                                                0x06
                                                Local7
                                                M000 (0x03E2)
                                                M111 (M049, M133 (0x17, Zero))
                                                M111 (M049, M133 (0x18, Zero))
                                                M112 (Local0, Zero)
                                                Sleep (0x0A)
                                                M111 (Local0, Zero)
                                                M023 (Zero, M091, M090)
                                                Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                                    Local5 = 0x05, While ((Local4 && Local5))
                                                            {
                                                                0xA5 = M021 (Zero, M091, M090)
                                                                Local0
                                                                Local0 &= 0x7F
                                                                If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                                {
                                                                    Local4 = Zero
                                                                }
                                                                Else
                                                                {
                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x05), Local5--), 
                                                                        HPOK = 0x02, M000 (0x04E2), If (HPOK)
                                                                                {
                                                                                    Local5 = 0x7FFFFFFF
                                                                                    Local5 |= 0x80000000
                                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local0), If (((HPOK == One) && 
                                                                                        (Local0 != Local5)))
                                                                                                    {
                                                                                                        M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                            Local5))
                                                                                                                    {
                                                                                                                        M020 (M095 (M094 (M191 = (M093 (One, Zero) + 0x4C), Sleep (0x0A))))
                                                                                                                    })))
                                                                                                    })))
                                                                                }))
                                                                }
                                                            }))
                                            } = M019 (
                                                                                                                            M095 (M094 (M093 (Zero, Local0), Sleep (0x05), Local5--), M201 = Zero, \_SB.ALIB, 
                                                                                                                            0x06), Local7, M000 (0x14E2))
                                    }
                                }))
                }
            }
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & One)
            If (M195)
            {
                M111 (M049, M133 (0x17, One))
            }
            Else
            {
                M111 (M049, M133 (0x17, Zero))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & One)
            If (M196)
            {
                M111 (M049, M133 (0x18, One))
            }
            Else
            {
                M111 (M049, M133 (0x18, Zero))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.VGA_.PX08.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.VGA_.PX09.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Name (M207, Buffer (0xFF){})
        Name (M208, Buffer (0x03){})
        Name (M204, One)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                ATC0 ()
            }

            If ((Arg0 == One))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            Return (M207) /* \_SB_.PCI0.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = 0x0F
             = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, One, M203)
            M157 = 0x0A
            M161 = One
            If ((Local0 & 0x80))
                {
                    M204 = (Local0 & One)
                } = M100 (M162, M133 (0x15, Local0) = 
                        M049 /* External reference */)
            ElseIf ((Local0 & 0x7F))
            {
                Local0 = M113 ()
                M204
            }

            M203 = M204 /* \_SB_.PCI0.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = One
            0x02 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, Zero, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = One
            M197 = 0x03
            M206 = One
            0x03 = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = One
            0x04 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Name (M202, Buffer (0xFF00)
        {
             0x00                                             // .
        })
        Method (XTRM, 2, Serialized)
        {
            Local0 = (Arg0 + Arg1)
            Local4 = M105 /* External reference */
            If ((Local4 > 0xFF00))
            {
                Local4 = 0xFF00
            }

            If ((Local0 <= Local4))
            {
                Local1 = (Arg1 * 0x08)
                Local2 = (Arg0 * 0x08)
                M202 = M106 /* External reference */
                CreateField (M202, Local2, Local1, TEMP)
                Name (RETB, Buffer (Arg1){})
                RETB = TEMP /* \_SB_.PCI0.VGA_.XTRM.TEMP */
                Return (RETB) /* \_SB_.PCI0.VGA_.XTRM.RETB */
            }
            ElseIf ((Arg0 < Local4))
            {
                Local3 = (M105 - Arg0)
                Local1 = (Local3 * 0x08)
                Local2 = (Arg0 * 0x08)
                M202 = M106 /* External reference */
                CreateField (M202, Local2, Local1, TEM)
                Name (RETC, Buffer (Local3){})
                RETC = TEM /* \_SB_.PCI0.VGA_.XTRM.TEM_ */
                Return (RETC) /* \_SB_.PCI0.VGA_.XTRM.RETC */
            }
            Else
            {
                Name (RETD, Buffer (One){})
                Return (RETD) /* \_SB_.PCI0.VGA_.XTRM.RETD */
            }
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN0 ()
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN0 ()
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN1 (Arg0)
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN1 (Arg0)
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN2 (Arg0, Arg1)
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN2 (Arg0, Arg1)
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN3 (Arg0, Arg1)
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN3 (Arg0, Arg1)
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN4 (Arg0)
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN4 (Arg0)
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN5 ()
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN5 ()
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN6 ()
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN6 ()
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN7 (Arg0)
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN7 (Arg0)
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            \_SB.PCI0.VGA.AFN8 ()
        }

        If ((M087 == One))
        {
            \_SB.PCI0.GFX.VGA.AFN8 ()
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There was 1 external control method found during
     * disassembly, but only 0 were resolved (1 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIC, MethodObj)    // Warning: Unknown method, guessing 2 arguments

    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0200)
        {
            /* 0000 */  0x03, 0x7A, 0x6C, 0x7A, 0x20, 0x03, 0x00, 0x01,  // .zlz ...
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x01, 0x01,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x01, 0x01, 0x04, 0x05, 0x01,  // ........
            /* 0040 */  0x01, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x02, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x02,  // ........
            /* 0050 */  0x02, 0x06, 0x07, 0x02, 0x00, 0x02, 0x04, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0060 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A023)
                A023 = 0x08
                CreateWordField (Local0, 0x02, A024)
                A024 = 0x01
                CreateDWordField (Local0, 0x04, A025)
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    A025 = 0x0F
                    Return (Local0)
                }
                Else
                {
                    A025 = 0x01
                    Return (Local0)
                }
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A026 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Return (A027 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A028 (Local0))
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A031 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A032 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A033 (Local0, Local1, Local2, Local3, Local4))
            }

            Return (0x00)
        }

        Method (A031, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A094 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local1 = A095 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A023)
            CreateByteField (Local7, 0x02, A034)
            CreateByteField (Local7, 0x03, A096)
            A023 = 0x04
            A034 = 0x00
            A096 = Local1
            Return (Local7)
        }

        Method (A094, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A087 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A087 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A087 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A087 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A087 (Arg1))
            }
        }

        Method (A095, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A088 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A088 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A088 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A088 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A088 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A026, 1, NotSerialized)
        {
            If ((AD00 == Arg0))
            {
                Return (0x00)
            }

            AD00 = Arg0
            A011 ()
        }

        Method (A032, 1, NotSerialized)
        {
            DK00 = Arg0
            A017 ()
        }

        Method (A033, 5, NotSerialized)
        {
            A018 (Arg0, Arg1, Arg2, Arg3, Arg4)
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A027, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A023)
            A023 = 0x03
            CreateByteField (Local7, 0x02, A034)
            A034 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A034 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A034 = 0x01
                Return (Local7)
            }

            A035 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A036 ()
            A034 = 0x02
            Return (Local7)
        }

        Method (A012, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A036 ()
        }

        Method (A037, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A010, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A028, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x05))
                {
                    A038 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A036 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A039, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A035, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                If ((A040 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A041 (Local0)
                        A042 (Local0, Local1)
                    }
                    Else
                    {
                        A042 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A043, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A044 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A045, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A046 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A036, 0, NotSerialized)
        {
            A045 ()
            A043 ()
            If ((AP02 != AP01))
            {
                A019 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                \_SB.A047 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A044 (Local0)
                Local2 = A048 (Local0)
                If ((Local1 != Local2))
                {
                    A049 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A049 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                \_SB.A047 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                \_SB.A047 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A049, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A050 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A050 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A050 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A050 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A050 (Arg1))
            }
        }

        Method (A048, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A051 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A051 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A051 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A051 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A051 ())
            }
        }

        Method (A044, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A052 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A052 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A052 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A052 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A052 ())
            }
        }

        Method (A046, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A053 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A053 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A053 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A053 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A053 ())
            }
        }

        Method (A041, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A054 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A054 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A054 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A054 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A054 ())
            }
        }

        Method (A042, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A055 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A055 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A055 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A055 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A055 (Arg1))
            }
        }

        Method (A040, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A056 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A056 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A056 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A056 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A056 (Arg1))
            }
        }

        Method (A038, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A057 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A057 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A057 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A057 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A057 ())
            }
        }

        OperationRegion (A116, SystemMemory, (AGRB + 0x000C2000), 0x1000)
        Field (A116, ByteAcc, NoLock, Preserve)
        {
            Offset (0x1B4), 
                ,   25, 
            A117,   1
        }

        OperationRegion (A118, SystemMemory, (AGRB + 0x000C3000), 0x1000)
        Field (A118, ByteAcc, NoLock, Preserve)
        {
            Offset (0xDC), 
                ,   19, 
            A022,   7, 
            Offset (0x1FC), 
            A008,   1
        }

        OperationRegion (A119, SystemMemory, (AGRB + 0x000C4000), 0x1000)
        Field (A119, ByteAcc, NoLock, Preserve)
        {
            Offset (0x124), 
                ,   22, 
            A120,   1, 
            A121,   4, 
            Offset (0x128), 
                ,   5, 
            A122,   7, 
            Offset (0x210), 
            Offset (0x211), 
            A123,   3, 
                ,   3, 
            A124,   2
        }

        OperationRegion (A125, SystemMemory, (AGRB + 0x000C5000), 0x1000)
        Field (A125, ByteAcc, NoLock, Preserve)
        {
            Offset (0x170), 
                ,   14, 
            A126,   1
        }

        OperationRegion (A101, SystemMemory, AGRB, 0x1000)
        Field (A101, ByteAcc, NoLock, Preserve)
        {
            Offset (0x60), 
            A102,   32, 
            Offset (0xB8), 
            A103,   32, 
            Offset (0xC8), 
            A104,   32, 
            Offset (0xF8), 
            A105,   32
        }

        BankField (A101, A104, 0x00210001, DWordAcc, NoLock, Preserve)
        {
            Offset (0x6C), 
            A106,   1
        }

        BankField (A101, A103, 0xC2100000, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A107,   1, 
            A108,   16
        }

        BankField (A101, A103, 0xC2100004, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A109,   1, 
            A110,   1
        }

        BankField (A101, A103, 0xC210003C, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A111,   32
        }

        BankField (A101, A103, 0x0003F818, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            Offset (0xBD), 
            A112,   1
        }

        BankField (A101, A105, 0x00, DWordAcc, NoLock, Preserve)
        {
            Offset (0xFC), 
                ,   4, 
            A113,   1
        }

        OperationRegion (A114, SystemMemory, (AGRB + 0x8000), 0x1000)
        Field (A114, DWordAcc, NoLock, Preserve)
        {
            A115,   32
        }

        Method (A047, 1, NotSerialized)
        {
            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (\_SB.ADAT [0x01])
            }

            If ((Arg0 == 0x02))
            {
                Local0 = DerefOf (\_SB.ADAT [0x02])
            }

            If ((Local0 > 0xF7))
            {
                Local0 = 0xF7
            }

            Local2 = (0x0271 * ((Local1 = (0xF7 - Local0)) + 0x01))
            Divide (Local2 *= 0x04, 0x64, Local3, Local4)
            A016 (0x3A, Local4)
        }

        Method (A091, 3, NotSerialized)
        {
        }

        Method (A016, 2, Serialized)
        {
            While ((A110 != 0x01)){}
            A111 = Arg1
            A108 = Arg0
            A107 = ~A107 /* \_SB_.A107 */
            While ((A109 != 0x01)){}
            While ((A110 != 0x01)){}
            Local0 = A111 /* \_SB_.A111 */
            Return (Local0)
        }

        Method (A060, 1, NotSerialized)
        {
            If ((Arg0 == 0x01))
            {
                A106 = 0x00
            }
            Else
            {
                A106 = 0x01
            }
        }

        Method (A006, 1, NotSerialized)
        {
            Local0 = A126 /* \_SB_.A126 */
            If ((A117 == 0x00))
            {
                If ((Arg0 == 0x00))
                {
                    A126 = 0x01
                }
                Else
                {
                    A126 = 0x00
                }
            }

            Return (Local0)
        }

        Name (A127, 0x00)
        Name (A128, 0x00)
        Method (A005, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                If ((A127 == 0x00))
                {
                    A127 = 0x01
                    A128 = A112 /* \_SB_.A112 */
                }

                A016 (0x60, 0x0801)
                While ((A117 != 0x00))
                {
                    A016 (0x60, 0x0801)
                }
            }
            ElseIf ((A127 == 0x01))
            {
                If ((A128 == 0x01))
                {
                    If ((A112 == 0x00))
                    {
                        A016 (0x5F, 0x01)
                    }
                }
            }
        }

        Method (A009, 1, NotSerialized)
        {
            If ((Arg0 == 0x01))
            {
                A016 (0x66, 0x00)
            }
            Else
            {
                A016 (0x66, 0x01)
            }
        }

        Method (A007, 1, NotSerialized)
        {
            Local0 = A113 /* \_SB_.A113 */
            If ((Arg0 == 0x00))
            {
                A113 = 0x00
            }
            Else
            {
                A113 = 0x01
            }

            Return (Local0)
        }

        OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            A097,   8, 
            A098,   8
        }

        IndexField (A097, A098, ByteAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            A099,   32
        }

        OperationRegion (ACFG, SystemIO, A099, 0x08)
        Field (ACFG, DWordAcc, NoLock, Preserve)
        {
            A100,   32
        }

        BankField (ACFG, A100, 0x80000068, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            A067,   2
        }

        Name (ABSM, 0x00)
        Method (A064, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                ABSM = A067 /* \_SB_.A067 */
                A067 = 0x00
            }
            Else
            {
                A067 = ABSM /* \_SB_.ABSM */
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Name (WRBS, 0x0130)
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A080, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A080, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A067,   2, 
                        ,   2, 
                    A081,   1, 
                    A068,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A069,   1, 
                    Offset (0x88), 
                    A079,   4, 
                        ,   1, 
                    A076,   1, 
                    Offset (0xE0), 
                    A082,   32
                }

                BankField (A080, A082, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A063,   1
                }

                BankField (A080, A082, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A078,   1
                }

                BankField (A080, A082, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A074,   1, 
                    A075,   1, 
                        ,   11, 
                    A070,   2, 
                        ,   14, 
                    A077,   1
                }

                BankField (A080, A082, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A062,   6
                }

                OperationRegion (A083, SystemMemory, AGRB, 0x1000)
                Field (A083, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A084,   32
                }

                BankField (A083, A084, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A085,   1
                }

                BankField (A083, A084, ((^WRBS << 0x10) | 0x8029), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A086,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A058, 0, NotSerialized)
                {
                    Local0 = A039 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A053, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A052, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A059 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A058 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A051, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A054, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A050, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x01)
                    }

                    A061 (Arg0)
                    If ((A062 >= 0x10))
                    {
                        If ((AB10 != 0x00))
                        {
                            A063 = 0x00
                        }
                        Else
                        {
                            A063 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x00)
                        }
                        Else
                        {
                            A065 (0x00)
                        }

                        Name (A066, 0x00)
                        A066 = A067 /* \_SB_.AWR0.ABR0.A067 */
                        A067 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A068 = 0x01
                            Sleep (0x1E)
                            While ((A069 == 0x01))
                            {
                                Sleep (0x0A)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A070 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A067 = A066 /* \_SB_.AWR0.ABR0.A050.A066 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x01)
                        }
                        Else
                        {
                            A065 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x00)
                    }
                }

                Method (A055, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A056, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A057, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A061, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A074 = 0x01
                        A075 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A074 = 0x01
                        A075 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A076 = 0x01
                        A074 = 0x00
                        A075 = 0x00
                        A077 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A078 = 0x01
                        }
                    }
                    Else
                    {
                        A076 = 0x00
                        A077 = 0x01
                        A078 = 0x00
                    }

                    A079 = Arg0
                }

                Method (A093, 2, NotSerialized)
                {
                    If ((A089 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A089 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A089 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A065, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A089 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A089 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A093 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A089 (Local0, (Local1 + 0x10))
                                A090 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A090 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A090, 3, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A089, 2, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A089.ADRR */
                }

                Method (A087, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A088, 1, NotSerialized)
                {
                    Name (A066, 0x00)
                    A066 = A067 /* \_SB_.AWR0.ABR0.A067 */
                    A067 = 0x00
                    If ((Arg0 == 0x01))
                    {
                        A081 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        Local0 = A089 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A090 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A089 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A090 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A081 = 0x01
                        Local0 = 0x05
                    }

                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR0.AB0E */
                                A036 ()
                            }

                            \_SB.A091 (0x01, AB06, AB07)
                            A092 (0x01)
                            A085 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A062 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A062 >= 0x10) && (A062 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A061 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR0.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A089 (0x00, 0x00)
                            A085 = 0x01
                            A092 (0x00)
                            \_SB.A091 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A036 ()
                            }
                        }
                    }

                    A067 = A066 /* \_SB_.AWR0.ABR0.A088.A066 */
                    Return (Local2)
                }

                Method (A092, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR0.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR0.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR0.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A086 |= Local0
                    }
                    Else
                    {
                        A086 &= ~Local0
                    }
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A080, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A080, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A067,   2, 
                        ,   2, 
                    A081,   1, 
                    A068,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A069,   1, 
                    Offset (0x88), 
                    A079,   4, 
                        ,   1, 
                    A076,   1, 
                    Offset (0xE0), 
                    A082,   32
                }

                BankField (A080, A082, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A063,   1
                }

                BankField (A080, A082, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A078,   1
                }

                BankField (A080, A082, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A074,   1, 
                    A075,   1, 
                        ,   11, 
                    A070,   2, 
                        ,   14, 
                    A077,   1
                }

                BankField (A080, A082, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A062,   6
                }

                OperationRegion (A083, SystemMemory, AGRB, 0x1000)
                Field (A083, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A084,   32
                }

                BankField (A083, A084, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A085,   1
                }

                BankField (A083, A084, ((^WRBS << 0x10) | 0x8029), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A086,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A058, 0, NotSerialized)
                {
                    Local0 = A039 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A053, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A052, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A059 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A058 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A051, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A054, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A050, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x01)
                    }

                    A061 (Arg0)
                    If ((A062 >= 0x10))
                    {
                        If ((AB10 != 0x00))
                        {
                            A063 = 0x00
                        }
                        Else
                        {
                            A063 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x00)
                        }
                        Else
                        {
                            A065 (0x00)
                        }

                        Name (A066, 0x00)
                        A066 = A067 /* \_SB_.AWR0.ABR1.A067 */
                        A067 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A068 = 0x01
                            Sleep (0x1E)
                            While ((A069 == 0x01))
                            {
                                Sleep (0x0A)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A070 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A067 = A066 /* \_SB_.AWR0.ABR1.A050.A066 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x01)
                        }
                        Else
                        {
                            A065 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x00)
                    }
                }

                Method (A055, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A056, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A057, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A061, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A074 = 0x01
                        A075 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A074 = 0x01
                        A075 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A076 = 0x01
                        A074 = 0x00
                        A075 = 0x00
                        A077 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A078 = 0x01
                        }
                    }
                    Else
                    {
                        A076 = 0x00
                        A077 = 0x01
                        A078 = 0x00
                    }

                    A079 = Arg0
                }

                Method (A093, 2, NotSerialized)
                {
                    If ((A089 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A089 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A089 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A065, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A089 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A089 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A093 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A089 (Local0, (Local1 + 0x10))
                                A090 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A090 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A090, 3, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A089, 2, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A089.ADRR */
                }

                Method (A087, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A088, 1, NotSerialized)
                {
                    Name (A066, 0x00)
                    A066 = A067 /* \_SB_.AWR0.ABR1.A067 */
                    A067 = 0x00
                    If ((Arg0 == 0x01))
                    {
                        A081 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        Local0 = A089 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A090 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A089 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A090 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A081 = 0x01
                        Local0 = 0x05
                    }

                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR1.AB0E */
                                A036 ()
                            }

                            \_SB.A091 (0x01, AB06, AB07)
                            A092 (0x01)
                            A085 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A062 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A062 >= 0x10) && (A062 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A061 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR1.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A089 (0x00, 0x00)
                            A085 = 0x01
                            A092 (0x00)
                            \_SB.A091 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A036 ()
                            }
                        }
                    }

                    A067 = A066 /* \_SB_.AWR0.ABR1.A088.A066 */
                    Return (Local2)
                }

                Method (A092, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR1.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR1.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR1.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A086 |= Local0
                    }
                    Else
                    {
                        A086 &= ~Local0
                    }
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A080, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A080, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A067,   2, 
                        ,   2, 
                    A081,   1, 
                    A068,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A069,   1, 
                    Offset (0x88), 
                    A079,   4, 
                        ,   1, 
                    A076,   1, 
                    Offset (0xE0), 
                    A082,   32
                }

                BankField (A080, A082, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A063,   1
                }

                BankField (A080, A082, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A078,   1
                }

                BankField (A080, A082, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A074,   1, 
                    A075,   1, 
                        ,   11, 
                    A070,   2, 
                        ,   14, 
                    A077,   1
                }

                BankField (A080, A082, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A062,   6
                }

                OperationRegion (A083, SystemMemory, AGRB, 0x1000)
                Field (A083, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A084,   32
                }

                BankField (A083, A084, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A085,   1
                }

                BankField (A083, A084, ((^WRBS << 0x10) | 0x8029), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A086,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A058, 0, NotSerialized)
                {
                    Local0 = A039 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A053, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A052, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A059 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A058 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A051, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A054, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A050, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x01)
                    }

                    A061 (Arg0)
                    If ((A062 >= 0x10))
                    {
                        If ((AB10 != 0x00))
                        {
                            A063 = 0x00
                        }
                        Else
                        {
                            A063 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x00)
                        }
                        Else
                        {
                            A065 (0x00)
                        }

                        Name (A066, 0x00)
                        A066 = A067 /* \_SB_.AWR0.ABR2.A067 */
                        A067 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A068 = 0x01
                            Sleep (0x1E)
                            While ((A069 == 0x01))
                            {
                                Sleep (0x0A)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A070 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A067 = A066 /* \_SB_.AWR0.ABR2.A050.A066 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x01)
                        }
                        Else
                        {
                            A065 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x00)
                    }
                }

                Method (A055, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A056, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A057, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A061, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A074 = 0x01
                        A075 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A074 = 0x01
                        A075 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A076 = 0x01
                        A074 = 0x00
                        A075 = 0x00
                        A077 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A078 = 0x01
                        }
                    }
                    Else
                    {
                        A076 = 0x00
                        A077 = 0x01
                        A078 = 0x00
                    }

                    A079 = Arg0
                }

                Method (A093, 2, NotSerialized)
                {
                    If ((A089 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A089 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A089 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A065, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A089 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A089 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A093 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A089 (Local0, (Local1 + 0x10))
                                A090 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A090 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A090, 3, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A089, 2, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A089.ADRR */
                }

                Method (A087, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A088, 1, NotSerialized)
                {
                    Name (A066, 0x00)
                    A066 = A067 /* \_SB_.AWR0.ABR2.A067 */
                    A067 = 0x00
                    If ((Arg0 == 0x01))
                    {
                        A081 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        Local0 = A089 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A090 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A089 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A090 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A081 = 0x01
                        Local0 = 0x05
                    }

                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR2.AB0E */
                                A036 ()
                            }

                            \_SB.A091 (0x01, AB06, AB07)
                            A092 (0x01)
                            A085 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A062 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A062 >= 0x10) && (A062 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A061 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR2.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A089 (0x00, 0x00)
                            A085 = 0x01
                            A092 (0x00)
                            \_SB.A091 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A036 ()
                            }
                        }
                    }

                    A067 = A066 /* \_SB_.AWR0.ABR2.A088.A066 */
                    Return (Local2)
                }

                Method (A092, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR2.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR2.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR2.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A086 |= Local0
                    }
                    Else
                    {
                        A086 &= ~Local0
                    }
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A080, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A080, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A067,   2, 
                        ,   2, 
                    A081,   1, 
                    A068,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A069,   1, 
                    Offset (0x88), 
                    A079,   4, 
                        ,   1, 
                    A076,   1, 
                    Offset (0xE0), 
                    A082,   32
                }

                BankField (A080, A082, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A063,   1
                }

                BankField (A080, A082, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A078,   1
                }

                BankField (A080, A082, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A074,   1, 
                    A075,   1, 
                        ,   11, 
                    A070,   2, 
                        ,   14, 
                    A077,   1
                }

                BankField (A080, A082, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A062,   6
                }

                OperationRegion (A083, SystemMemory, AGRB, 0x1000)
                Field (A083, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A084,   32
                }

                BankField (A083, A084, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A085,   1
                }

                BankField (A083, A084, ((^WRBS << 0x10) | 0x8029), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A086,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A058, 0, NotSerialized)
                {
                    Local0 = A039 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A053, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A052, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A059 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A058 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A051, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A054, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A050, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x01)
                    }

                    A061 (Arg0)
                    If ((A062 >= 0x10))
                    {
                        If ((AB10 != 0x00))
                        {
                            A063 = 0x00
                        }
                        Else
                        {
                            A063 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x00)
                        }
                        Else
                        {
                            A065 (0x00)
                        }

                        Name (A066, 0x00)
                        A066 = A067 /* \_SB_.AWR0.ABR3.A067 */
                        A067 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A068 = 0x01
                            Sleep (0x1E)
                            While ((A069 == 0x01))
                            {
                                Sleep (0x0A)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A070 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A067 = A066 /* \_SB_.AWR0.ABR3.A050.A066 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x01)
                        }
                        Else
                        {
                            A065 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x00)
                    }
                }

                Method (A055, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A056, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A057, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A061, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A074 = 0x01
                        A075 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A074 = 0x01
                        A075 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A076 = 0x01
                        A074 = 0x00
                        A075 = 0x00
                        A077 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A078 = 0x01
                        }
                    }
                    Else
                    {
                        A076 = 0x00
                        A077 = 0x01
                        A078 = 0x00
                    }

                    A079 = Arg0
                }

                Method (A093, 2, NotSerialized)
                {
                    If ((A089 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A089 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A089 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A065, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A089 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A089 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A093 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A089 (Local0, (Local1 + 0x10))
                                A090 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A090 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A090, 3, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A089, 2, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A089.ADRR */
                }

                Method (A087, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A088, 1, NotSerialized)
                {
                    Name (A066, 0x00)
                    A066 = A067 /* \_SB_.AWR0.ABR3.A067 */
                    A067 = 0x00
                    If ((Arg0 == 0x01))
                    {
                        A081 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        Local0 = A089 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A090 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A089 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A090 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A081 = 0x01
                        Local0 = 0x05
                    }

                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR3.AB0E */
                                A036 ()
                            }

                            \_SB.A091 (0x01, AB06, AB07)
                            A092 (0x01)
                            A085 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A062 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A062 >= 0x10) && (A062 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A061 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR3.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A089 (0x00, 0x00)
                            A085 = 0x01
                            A092 (0x00)
                            \_SB.A091 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A036 ()
                            }
                        }
                    }

                    A067 = A066 /* \_SB_.AWR0.ABR3.A088.A066 */
                    Return (Local2)
                }

                Method (A092, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR3.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR3.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR3.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A086 |= Local0
                    }
                    Else
                    {
                        A086 &= ~Local0
                    }
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A080, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A080, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A067,   2, 
                        ,   2, 
                    A081,   1, 
                    A068,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A069,   1, 
                    Offset (0x88), 
                    A079,   4, 
                        ,   1, 
                    A076,   1, 
                    Offset (0xE0), 
                    A082,   32
                }

                BankField (A080, A082, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A063,   1
                }

                BankField (A080, A082, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A078,   1
                }

                BankField (A080, A082, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A074,   1, 
                    A075,   1, 
                        ,   11, 
                    A070,   2, 
                        ,   14, 
                    A077,   1
                }

                BankField (A080, A082, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A062,   6
                }

                OperationRegion (A083, SystemMemory, AGRB, 0x1000)
                Field (A083, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A084,   32
                }

                BankField (A083, A084, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A085,   1
                }

                BankField (A083, A084, ((^WRBS << 0x10) | 0x8029), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A086,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A058, 0, NotSerialized)
                {
                    Local0 = A039 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A053, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A052, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A059 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A058 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A051, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A054, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A050, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x01)
                    }

                    A061 (Arg0)
                    If ((A062 >= 0x10))
                    {
                        If ((AB10 != 0x00))
                        {
                            A063 = 0x00
                        }
                        Else
                        {
                            A063 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x00)
                        }
                        Else
                        {
                            A065 (0x00)
                        }

                        Name (A066, 0x00)
                        A066 = A067 /* \_SB_.AWR0.ABR4.A067 */
                        A067 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A068 = 0x01
                            Sleep (0x1E)
                            While ((A069 == 0x01))
                            {
                                Sleep (0x0A)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A070 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A067 = A066 /* \_SB_.AWR0.ABR4.A050.A066 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A064 (0x01)
                        }
                        Else
                        {
                            A065 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A060 (0x00)
                    }
                }

                Method (A055, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A056, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A057, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A061, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A074 = 0x01
                        A075 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A074 = 0x01
                        A075 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A076 = 0x01
                        A074 = 0x00
                        A075 = 0x00
                        A077 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A078 = 0x01
                        }
                    }
                    Else
                    {
                        A076 = 0x00
                        A077 = 0x01
                        A078 = 0x00
                    }

                    A079 = Arg0
                }

                Method (A093, 2, NotSerialized)
                {
                    If ((A089 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A089 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A089 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A065, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A089 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A089 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A093 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A089 (Local0, (Local1 + 0x10))
                                A090 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A090 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A090, 3, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A089, 2, Serialized)
                {
                    Local0 = (AGRB + (A071 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A089.ADRR */
                }

                Method (A087, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A088, 1, NotSerialized)
                {
                    Name (A066, 0x00)
                    A066 = A067 /* \_SB_.AWR0.ABR4.A067 */
                    A067 = 0x00
                    If ((Arg0 == 0x01))
                    {
                        A081 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        Local0 = A089 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A090 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A089 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A090 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A081 = 0x01
                        Local0 = 0x05
                    }

                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR4.AB0E */
                                A036 ()
                            }

                            \_SB.A091 (0x01, AB06, AB07)
                            A092 (0x01)
                            A085 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A062 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A062 >= 0x10) && (A062 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A061 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR4.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A089 (0x00, 0x00)
                            A085 = 0x01
                            A092 (0x00)
                            \_SB.A091 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A036 ()
                            }
                        }
                    }

                    A067 = A066 /* \_SB_.AWR0.ABR4.A088.A066 */
                    Return (Local2)
                }

                Method (A092, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR4.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR4.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR4.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A086 |= Local0
                    }
                    Else
                    {
                        A086 &= ~Local0
                    }
                }
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x01)
        Name (A003, 0x00)
        Name (A004, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                A005 (0x00)
                A003 = A006 (0x00)
            }

            A004 = A007 (0x00)
        }

        Method (AWAK, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                If ((A004 == 0x01))
                {
                    A007 (0x01)
                }
                Else
                {
                    A007 (0x00)
                }

                Local0 = A008 /* \_SB_.A008 */
                Local1 = DerefOf (\_SB.ADAT [0x07])
                If (((Local0 == 0x01) && (Local1 == 0x01)))
                {
                    A009 (DK00)
                }

                If ((A003 == 0x00))
                {
                    A006 (0x01)
                }
                Else
                {
                    A006 (0x00)
                }
            }

            If (((Arg0 == 0x03) || (Arg0 == 0x04)))
            {
                A010 (Arg0)
            }

            A011 ()
        }

        Method (A011, 0, NotSerialized)
        {
            A012 ()
            A013 (AP01, AD00)
            A014 (AD00)
            A015 (AD00)
            If ((AD00 == 0x00))
            {
                A016 (0x5E, 0x00)
            }
            Else
            {
                A016 (0x5E, 0x01)
            }
        }

        Method (A017, 0, NotSerialized)
        {
            Local0 = A008 /* \_SB_.A008 */
            Local1 = DerefOf (\_SB.ADAT [0x07])
            If (((Local0 == 0x01) && (Local1 == 0x01)))
            {
                A009 (DK00)
            }
        }

        Method (A018, 5, NotSerialized)
        {
            Local0 = Arg0
            Local2 = Arg2
            Local3 = Arg3
            If ((Arg1 == 0x00))
            {
                Local2 *= Arg4
                Divide (Local2, 0x03E8, Local1, Local2)
                Local3 *= Arg4
                Divide (Local3, 0x03E8, Local1, Local3)
            }

            Divide (Local2, 0x05, Local1, Local2)
            Divide (Local3, 0x05, Local1, Local3)
            Local0 |= (Local2 << 0x02)
            Local0 |= (Local3 << 0x11)
            A016 (0x5D, Local0)
        }

        Method (A019, 2, NotSerialized)
        {
            A013 (Arg0, AD00)
        }

        Name (A020, 0x00)
        Name (A021, 0x00)
        Method (A014, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                A022 = 0x0F
            }
            Else
            {
                A022 = 0x04
            }
        }

        Method (A015, 1, NotSerialized)
        {
        }

        Method (A013, 2, NotSerialized)
        {
            If ((Arg1 == 0x00)){}
            ElseIf ((Arg0 == 0x01)){}
            Else
            {
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There were 14 external control methods found during
     * disassembly, but only 0 were resolved (14 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_ADR, IntObj)
    External (_SB_.PCI0.SATA, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M014, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M017, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M018, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M029, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M031, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M032, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M044, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M045, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M049, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M111, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M128, UnknownObj)
    External (M134, MethodObj)    // Warning: Unknown method, guessing 1 arguments

    Scope (\_SB.PCI0.SATA)
    {
        Name (M048, One)
        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((XCMP (Arg0, ToUUID ("e4db149b-fcfe-425b-a6d8-92357d78fc7f") /* SATA Controller */) == One))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                ElseIf ((Arg2 == One))
                {
                    Name (ADDR, Package (0x01)
                    {
                        0x0001FFFF
                    })
                     = 0xFFFF = ((0x00010000 = (M049 () * M134 (0x15))) + Zero)
                    ADDR [Zero]
                    Return (Package (0x01)
                    {
                        ADDR
                    })
                }
                ElseIf ((Arg2 == 0x02))
                {
                    Local0 = DerefOf (Arg3 [Zero])
                    If (((Local0 == (0xFFFF = ((0x00010000 = (M049 () * M134 (0x15))) + Zero))) || 
                        Zero))
                    {
                        (Local0 == Ones)
                        Local1 = DerefOf (Arg3 [One])
                        If ((Local1 == Zero))
                        {
                            STPT (Zero)
                            Return (Zero)
                        }
                        ElseIf ((Local1 == One))
                        {
                            If (M045 ())
                            {
                                \_SB.PCI0.SATA.ODD8._PS0 ()
                            }
                            ElseIf (M044 ())
                            {
                                \_SB.PCI0.SATA.ODDL._PS0 ()
                            }
                            Else
                            {
                                \_SB.PCI0.SATA.ODDZ._PS0 ()
                            }

                            Return (Zero)
                        }
                    }
                }
            }

            Return (One)
        }

        Method (XCMP, 2, NotSerialized)
        {
            If ((0x10 != SizeOf (Arg0)))
            {
                Return (Zero)
            }

            If ((0x10 != SizeOf (Arg1)))
            {
                Return (Zero)
            }

            Local0 = Zero
            While ((Local0 < 0x10))
            {
                If ((DerefOf (Arg0 [Local0]) != DerefOf (Arg1 [Local0]
                    )))
                {
                    Return (Zero)
                }

                Local0++
            }

            Return (One)
        }

        Method (STDV, 0, Serialized)
        {
            Local0 = _ADR /* External reference */
            Return ((Local0 >> 0x10))
        }

        Method (STFN, 0, Serialized)
        {
            Local0 = _ADR /* External reference */
            Return ((Local0 & 0xFFFF))
        }

        Method (PBAA, 0, Serialized)
        {
            0x24 = M019 (Zero, STDV (), STFN ())
            Local0
            If ((Local0 == Ones))
            {
                Local0 = Zero
            }

            Return (Local0)
        }

        Method (STPT, 1, Serialized)
        {
            M018 (Zero, STDV (), STFN (), 0x42, M049 (), M134 (0x15), One)
            (Arg0 ^ One)
        }

        Method (STPP, 1, Serialized)
        {
            M018 (Zero, STDV (), STFN (), 0x42, M049 (), M134 (0x15), One)
            (Arg0 ^ One)
            If ((M017 (Zero, STDV (), STFN (), 0x0A, Zero) == 0x10))
            {
                0x0106
                If ((PBAA () != Zero))
                {
                    M018 (Zero, STDV (), STFN (), 0x40, Zero, One, One)
                    M014 (PBAA (), 0x0C, M049 (), M134 (0x15))
                    One
                    Arg0
                    0x06 = M017 (Zero, STDV (), STFN (), 0x42, Zero)
                    Local0
                    If ((Local0 == 0x3F))
                    {
                        M014 (PBAA (), 0x0C, Zero, One)
                        One
                    }
                    ElseIf ((M017 (Zero, STDV (), STFN (), 0x42, Zero) && One))
                    {
                        ((Local0 & 0x3E) ^ 0x3E)
                        M014 (PBAA (), 0x0C, Zero, One)
                        Zero
                    }

                    0x06 = M013 (PBAA (), 0x0C, Zero)
                    Local1
                    Local2 = Zero
                    While (Local1)
                    {
                        If ((Local1 & One))
                        {
                            Local2++
                        }

                        Local1 >>= One
                    }

                    M014 (PBAA (), Zero, Zero, 0x05)
                    Local2--
                    M018 (Zero, STDV (), STFN (), 0x40, Zero, One, Zero)
                }
            }
        }

        Method (STPM, 0, Serialized)
        {
            Local1 = Zero
            If ((PBAA () != Zero))
            {
                 = (0x0118 + (M134 (0x15) = (0x80 * M049 ())))
                Local0
                One = M013 (PBAA (), Local0, Zero)
                Local0
            }

            Return (Local1)
        }

        Method (STPR, 0, Serialized)
        {
            If ((M017 (Zero, STDV (), STFN (), 0x0A, Zero) == 0x10))
            {
                0x0106
                If ((PBAA () != Zero))
                {
                     = (0x0118 + (M134 (0x15) = (0x80 * M049 ())))
                    Local0
                    M014 (PBAA (), Local0, Zero, One)
                    Zero
                    Sleep (One)
                     = (0x012C + (M134 (0x15) = (0x80 * M049 ())))
                    Local0
                    M014 (PBAA (), Local0, Zero, 0x04)
                    One
                    Sleep (0x02)
                    M014 (PBAA (), Local0, Zero, 0x04)
                    Zero
                }
            }
        }

        Device (PRT1)
        {
            Name (_ADR, One)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }

            Device (ODD)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return (M049 ())
                    M134 (0x15)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }
            }
        }

        Device (ODD8)
        {
            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {
                If (((M045 () || M044 ()) && (0x67 = (M049 () & M128)) /* External reference */))
                {
                    One
                    Zero
                    Return (0xFFFF = ((0x00010000 = (M049 () * M134 (0x15))) + Zero))
                    Zero
                }
                Else
                {
                    Return (M049 ())
                    M134 (0x15)
                }
            }

            Name (ODPS, Zero)
            Name (ODDB, Zero)
            Name (WDSW, One)
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((PBAA () != Zero))
                {
                    If ((M013 (PBAA (), (0x0129 + (0x80 = (M049 () * M134 (0x15)))
                        ), Zero) != Zero))
                    {
                        0x04
                        Zero
                        ODDB = One
                    }
                }
            }

            Method (ZSTA, 0, NotSerialized)
            {
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        0x02
                        Zero
                        If (M029 (M049 (), M134 (0x12), Return (Zero))){}
                        Else
                        {
                            If (0x67 = (M049 () & M128) /* External reference */)
                            {
                                0x04
                                Zero
                                ODDB = One
                            }

                            Return (0x0F)
                        }
                    }
                    Else
                    {
                        If (0x67 = (M049 () & M128) /* External reference */)
                        {
                            0x04
                            Zero
                            ODDB = One
                        }

                        Return (0x0F)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                If (M048)
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x03)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If (!((0x67 = (M049 () & M128)) /* External reference */ && 0x02))
                {
                    Zero
                    M029 (M049 (), M134 (0x12), M000 (0xDF00))
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        One
                        Zero
                        If (((ODDB == One) || ((ODDB == Zero) && (STPM () != 
                            Zero))))
                        {
                            STPT (One)
                            Sleep (0x28)
                            M111 (M049 (), M134 (0x10), One, M048 = One)
                            Sleep (0x28)
                        }
                    }

                    ODDB = One
                    ODPS = Zero
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                M000 (0xDF03)
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If ((WDSW == One))
                    {
                        Sleep (0x28)
                        M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                        Sleep (0x28)
                        STPT (Zero)
                        M032 (M049 (), M134 (0x11), ODDB = One = (M029 (M049 (), M134 (0x11), 
                            One) ^ Zero))
                    }
                }

                ODPS = 0x03
            }

            Method (XEJ0, 1, NotSerialized)
            {
                _PS3 ()
                STPP (Zero)
            }

            Device (ODD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (One)
                }

                Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
                {
                    M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (M045 ())
                {
                    Return (ZSTA ())
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Method (_DSW, 3, Serialized)  // _DSW: Device Sleep Wake
            {
                If (Arg0)
                {
                    WDSW = One
                }
                Else
                {
                    WDSW = Zero
                }
            }

            Name (ZPRW, Package (0x02)
            {
                0x11, 
                0x03
            })
            Method (XPRW, 0, NotSerialized)
            {
                If (!M045 ())
                {
                    M134 (0x13) = M049 ()
                    ZPRW [Zero]
                }

                Return (ZPRW) /* \_SB_.PCI0.SATA.ODD8.ZPRW */
            }
        }

        Device (ODDZ)
        {
            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {
                If (((M045 () || M044 ()) && (0x67 = (M049 () & M128)) /* External reference */))
                {
                    One
                    Zero
                    Return (0xFFFF = ((0x00010000 = (M049 () * M134 (0x15))) + Zero))
                    Zero
                }
                Else
                {
                    Return (M049 ())
                    M134 (0x15)
                }
            }

            Name (ODPS, Zero)
            Name (ODDB, Zero)
            Name (WDSW, One)
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((PBAA () != Zero))
                {
                    If ((M013 (PBAA (), (0x0129 + (0x80 = (M049 () * M134 (0x15)))
                        ), Zero) != Zero))
                    {
                        0x04
                        Zero
                        ODDB = One
                    }
                }
            }

            Method (ZSTA, 0, NotSerialized)
            {
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        0x02
                        Zero
                        If (M029 (M049 (), M134 (0x12), Return (Zero))){}
                        Else
                        {
                            If (0x67 = (M049 () & M128) /* External reference */)
                            {
                                0x04
                                Zero
                                ODDB = One
                            }

                            Return (0x0F)
                        }
                    }
                    Else
                    {
                        If (0x67 = (M049 () & M128) /* External reference */)
                        {
                            0x04
                            Zero
                            ODDB = One
                        }

                        Return (0x0F)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                If (M048)
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x03)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If (!((0x67 = (M049 () & M128)) /* External reference */ && 0x02))
                {
                    Zero
                    M029 (M049 (), M134 (0x12), M000 (0xDF00))
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        One
                        Zero
                        If (((ODDB == One) || ((ODDB == Zero) && (STPM () != 
                            Zero))))
                        {
                            STPT (One)
                            Sleep (0x28)
                            M111 (M049 (), M134 (0x10), One, M048 = One)
                            Sleep (0x28)
                        }
                    }

                    ODDB = One
                    ODPS = Zero
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                M000 (0xDF03)
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If ((WDSW == One))
                    {
                        Sleep (0x28)
                        M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                        Sleep (0x28)
                        STPT (Zero)
                        M032 (M049 (), M134 (0x11), ODDB = One = (M029 (M049 (), M134 (0x11), 
                            One) ^ Zero))
                    }
                }

                ODPS = 0x03
            }

            Method (XEJ0, 1, NotSerialized)
            {
                _PS3 ()
                STPP (Zero)
            }

            Device (ODD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (One)
                }

                Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
                {
                    M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (!(M045 () || M044 ()))
                {
                    Return (ZSTA ())
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (ODDL)
        {
            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {
                If (((M045 () || M044 ()) && (0x67 = (M049 () & M128)) /* External reference */))
                {
                    One
                    Zero
                    Return (0xFFFF = ((0x00010000 = (M049 () * M134 (0x15))) + Zero))
                    Zero
                }
                Else
                {
                    Return (M049 ())
                    M134 (0x15)
                }
            }

            Name (ODPS, Zero)
            Name (ODDB, Zero)
            Name (WDSW, One)
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((PBAA () != Zero))
                {
                    If ((M013 (PBAA (), (0x0129 + (0x80 = (M049 () * M134 (0x15)))
                        ), Zero) != Zero))
                    {
                        0x04
                        Zero
                        ODDB = One
                    }
                }
            }

            Method (ZSTA, 0, NotSerialized)
            {
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        0x02
                        Zero
                        If (M029 (M049 (), M134 (0x12), Return (Zero))){}
                        Else
                        {
                            If (0x67 = (M049 () & M128) /* External reference */)
                            {
                                0x04
                                Zero
                                ODDB = One
                            }

                            Return (0x0F)
                        }
                    }
                    Else
                    {
                        If (0x67 = (M049 () & M128) /* External reference */)
                        {
                            0x04
                            Zero
                            ODDB = One
                        }

                        Return (0x0F)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                If (M048)
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x03)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If (!((0x67 = (M049 () & M128)) /* External reference */ && 0x02))
                {
                    Zero
                    M029 (M049 (), M134 (0x12), M000 (0xDF00))
                    If (0x67 = (M049 () & M128) /* External reference */)
                    {
                        One
                        Zero
                        If (((ODDB == One) || ((ODDB == Zero) && (STPM () != 
                            Zero))))
                        {
                            STPT (One)
                            Sleep (0x28)
                            M111 (M049 (), M134 (0x10), One, M048 = One)
                            Sleep (0x28)
                        }
                    }

                    ODDB = One
                    ODPS = Zero
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                M000 (0xDF03)
                If (0x67 = (M049 () & M128) /* External reference */)
                {
                    One
                    Zero
                    If ((WDSW == One))
                    {
                        Sleep (0x28)
                        M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                        Sleep (0x28)
                        STPT (Zero)
                        M032 (M049 (), M134 (0x11), ODDB = One = (M029 (M049 (), M134 (0x11), 
                            One) ^ Zero))
                    }
                }

                ODPS = 0x03
            }

            Method (XEJ0, 1, NotSerialized)
            {
                _PS3 ()
                STPP (Zero)
            }

            Device (ODD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (One)
                }

                Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
                {
                    M111 (M049 (), M134 (0x10), Zero, M048 = Zero)
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (M044 ())
                {
                    Return (ZSTA ())
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Method (_DSW, 3, Serialized)  // _DSW: Device Sleep Wake
            {
                If (Arg0)
                {
                    WDSW = One
                }
                Else
                {
                    WDSW = Zero
                }
            }
        }
    }

    Scope (\_GPE)
    {
        Method (XL06, 0, NotSerialized)
        {
            If (((0x67 = (M049 () & M128)) /* External reference */ && One))
            {
                Zero
                (M029 (M049 (), M134 (0x12), Zero) == If (M031 (M049 (), M134 (0x11), Sleep (
                    0x14)))
                    {
                        If (M029 (M049 (), M134 (0x11), If (0x67 = (M049 () & M128) /* External reference */)
                                {
                                    0x10
                                    Zero
                                    \_SB.PCI0.SATA.STPR ()
                                }))
                        {
                            If (M045 ())
                            {
                                Notify (\_SB.PCI0.SATA.ODD8, 0x02) // Device Wake
                            }
                            ElseIf (M044 ())
                            {
                                Notify (\_SB.PCI0.SATA.ODDL, 0x02) // Device Wake
                            }
                            Else
                            {
                                Notify (\_SB.PCI0.SATA.ODDZ, 0x80) // Status Change
                            }

                            Sleep (0x01F4)
                            M000 (0xDF15)
                        }
                    })
                Else
                {
                    Sleep (0x14)
                    If (!M029 (M049 (), M134 (0x11), If (M045 ())
                                {
                                    Notify (\_SB.PCI0.SATA.ODD8, 0x02) // Device Wake
                                }))
                    {
                        ElseIf (M044 ())
                        {
                            Notify (\_SB.PCI0.SATA.ODDL, 0x02) // Device Wake
                        }
                        Else
                        {
                            Notify (\_SB.PCI0.SATA.ODDZ, 0x80) // Status Change
                        }

                        Sleep (0x01F4)
                        M000 (0xDF14)
                    }
                }
            }

            M032 (M049 (), M134 (0x11), XOr (M029 (M049 (), M134 (0x11), One) ^ Zero))
        }

        Method (XL10, 0, NotSerialized)
        {
            Sleep (0xC8)
            If (M031 (M049 (), M134 (0x12), If (M029 (M049 (), M134 (0x12), M000 (0xDF17)))
                    {
                        M111 (M049 (), M134 (0x10), Zero, \_SB.PCI0.SATA.M048 = Zero)
                        Sleep (0x28)
                        \_SB.PCI0.SATA.STPP (Zero)
                        If (M045 ())
                        {
                            \_SB.PCI0.SATA.ODD8.ODPS = 0x03
                        }
                        ElseIf (M044 ())
                        {
                            \_SB.PCI0.SATA.ODDL.ODPS = 0x03
                        }
                        Else
                        {
                            \_SB.PCI0.SATA.ODDZ.ODPS = 0x03
                        }

                        M032 (M049 (), M134 (0x12), Else
                                {
                                    Sleep (0x14)
                                    If (!M029 (M049 (), M134 (0x12), M000 (0xDF16)))
                                    {
                                        \_SB.PCI0.SATA.STPP (One)
                                        Sleep (0x28)
                                        M111 (M049 (), M134 (0x10), One, \_SB.PCI0.SATA.M048 = One)
                                        Sleep (0x28)
                                        If (M045 ())
                                        {
                                            \_SB.PCI0.SATA.ODD8.ODPS = Zero
                                        }
                                        ElseIf (M044 ())
                                        {
                                            \_SB.PCI0.SATA.ODDL.ODPS = Zero
                                        }
                                        Else
                                        {
                                            \_SB.PCI0.SATA.ODDZ.ODPS = Zero
                                        }

                                        M032 (M049 (), M134 (0x12), Sleep (0x28) = (M029 (M049 (), M134 (0x12), One) ^ 
                                            Zero))
                                    }
                                } = (M029 (M049 (), M134 (0x12), One) ^ Zero))
                    })){}
            If (0x67 = (M049 () & M128) /* External reference */)
            {
                One
                Zero
                If (M045 ())
                {
                    Notify (\_SB.PCI0.SATA.ODD8, One) // Device Check
                }
                ElseIf (M044 ())
                {
                    Notify (\_SB.PCI0.SATA.ODDL, One) // Device Check
                }
                Else
                {
                    Notify (\_SB.PCI0.SATA.ODDZ, One) // Device Check
                    Notify (\_SB.PCI0.SATA.ODDZ, 0x81) // Information Change
                }
            }
            Else
            {
                Notify (\_SB.PCI0.SATA.PRT1, One) // Device Check
                If (!(M045 () || M044 ()))
                {
                    Notify (\_SB.PCI0.SATA.PRT1, 0x81) // Information Change
                }
            }
        }
    }
}



SSDT4
-----


SSDT5
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There were 9 external control methods found during
     * disassembly, but only 0 were resolved (9 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.GPP2, UnknownObj)
    External (_SB_.PCI0.GPP3, UnknownObj)
    External (_SB_.PCI0.M125, UnknownObj)
    External (_SB_.PCI0.M126, UnknownObj)
    External (_SB_.PCI0.M130, UnknownObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M011, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M029, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M032, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 6 arguments
    External (M113, IntObj)
    External (M114, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M122, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M128, UnknownObj)
    External (M131, IntObj)
    External (M132, UnknownObj)

    Scope (\_GPE)
    {
        Method (M129, 0, NotSerialized)
        {
            M132 = M049 /* External reference */
            0x10
            Local0
            M132 = M049 /* External reference */
            0x11
            Local1
            M132 = M049 /* External reference */
            0x12
            Local2
            M132 = M049 /* External reference */
            0x13
            Local3
            If (M029 (Local2, M032 (Local2, Zero), M000 (0x0F04), M114 (Local0, Local1, Zero), 
                M000 (0x0F05), Else
                    {
                        M032 (Local2, One)
                        Local3 = M113 /* External reference */
                        Local4
                        If (Local4)
                        {
                            M000 (0x0204)
                            M114 (Local0, Local1, One)
                            M000 (0x0205)
                        }
                    }, If (CondRefOf (\_SB.PCI0.M130))
                    {
                        Notify (\_SB.PCI0.M130, Zero) // Bus Check
                    })){}
        }

        Name (M127, Zero)
        Method (_L07, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Local7 = Zero
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x08, Zero, 0x08, M127)
            }

            M127 ^= One
            0x6C = M122 (Local1, M128 = M049 /* External reference */)
            Local2
            If ((Local1 && Local2))
            {
                If (M127)
                {
                    M000 (0x4401)
                    M111 (M013 (M122 (0x15, Zero), 0x08, Zero, M111 (M013 (M122 (0x17, Zero), 
                        0x08, Zero, If ((Local2 == 0x02))
                                    {
                                        If ((Local0 || Local1))
                                                {
                                                    M114 (Local0, Local1, Zero)
                                                    Local7 |= One
                                                } = M011 (M122 (0x10, 0x05), 0x03, Local1) = M011 (M122 (0x10, 
                                                        Zero), 0x05, Local0)
                                        If ((Local0 || Local1))
                                                {
                                                    M114 (Local0, Local1, Zero)
                                                    Local7 |= 0x02
                                                } = M011 (M122 (0x11, 0x05), 0x03, Local1) = M011 (M122 (0x11, 
                                                        Zero), 0x05, Local0)
                                        If ((Local0 || Local1))
                                                {
                                                    M114 (Local0, Local1, Zero)
                                                    Local7 |= 0x04
                                                } = M011 (M122 (0x12, 0x05), 0x03, Local1) = M011 (M122 (0x12, 
                                                        Zero), 0x05, Local0)
                                        If ((Local0 || Local1))
                                                {
                                                    M114 (Local0, Local1, Zero)
                                                    Local7 |= 0x08
                                                } = M011 (M122 (0x13, 0x05), 0x03, Local1) = M011 (M122 (0x13, 
                                                        Zero), 0x05, Local0)
                                        M111 (M013 (M122 (0x16, Zero), 0x08, Zero, M000 (0x4402), Else
                                                {
                                                    M000 (0x4403)
                                                    If ((Local2 == 0x02))
                                                    {
                                                        M111 (M013 (M122 (0x16, Zero), 0x08, One, Sleep (0x64), Sleep (0x64)), 
                                                            If ((Local0 || Local1))
                                                                    {
                                                                        M114 (Local0, Local1, One)
                                                                        Local7 |= One
                                                                    } = M011 (M122 (0x10, 0x05), 0x03, Local1) = M011 (M122 (0x10, 
                                                                            Zero), 0x05, Local0), If ((Local0 || Local1))
                                                                    {
                                                                        M114 (Local0, Local1, One)
                                                                        Local7 |= 0x02
                                                                    } = M011 (M122 (0x11, 0x05), 0x03, Local1) = M011 (M122 (0x11, 
                                                                            Zero), 0x05, Local0), If ((Local0 || Local1))
                                                                    {
                                                                        M114 (Local0, Local1, One)
                                                                        Local7 |= 0x04
                                                                    } = M011 (M122 (0x12, 0x05), 0x03, Local1) = M011 (M122 (0x12, 
                                                                            Zero), 0x05, Local0), If ((Local0 || Local1))
                                                                    {
                                                                        M114 (Local0, Local1, One)
                                                                        Local7 |= 0x08
                                                                    } = M011 (M122 (0x13, 0x05), 0x03, Local1) = M011 (M122 (0x13, 
                                                                            Zero), 0x05, Local0), M000 (0x4404))
                                                    }

                                                    M111 (M013 (M122 (0x15, Zero), 0x08, One, M111 (M013 (M122 (0x17, Zero), 
                                                        0x08, One, If ((Local7 & One))
                                                                    {
                                                                        If (CondRefOf (\_SB.PCI0.GPP2))
                                                                        {
                                                                            Notify (\_SB.PCI0.GPP2, Zero) // Bus Check
                                                                        }
                                                                    }, If ((Local7 & 0x02))
                                                                    {
                                                                        If (CondRefOf (\_SB.PCI0.GPP3))
                                                                        {
                                                                            Notify (\_SB.PCI0.GPP3, Zero) // Bus Check
                                                                        }
                                                                    }), If ((Local7 & 0x04))
                                                                {
                                                                    If (CondRefOf (\_SB.PCI0.M125))
                                                                    {
                                                                        Notify (\_SB.PCI0.M125, Zero) // Bus Check
                                                                    }
                                                                }, If ((Local7 & 0x08))
                                                                {
                                                                    If (CondRefOf (\_SB.PCI0.M126))
                                                                    {
                                                                        Notify (\_SB.PCI0.M126, Zero) // Bus Check
                                                                    }
                                                                })))
                                                }))
                                    }))))
                }
            }
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C003, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x05)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x05)
        {
            Package (0x08)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000004
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x05)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x05)
        {
            Package (0x08)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000004
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x05)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x05)
        {
            Package (0x08)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000004
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C002.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x05)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x05)
        {
            Package (0x08)
            {
                0x00000708, 
                0x00000C2B, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000902, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000006F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000004B0, 
                0x00000546, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000003E8, 
                0x0000040D, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000004
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C003.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CB-01   ", 0x00000001)
{
    /*
     * iASL Warning: There were 2 external control methods found during
     * disassembly, but only 0 were resolved (2 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0xBFBA9018, 0x0001008A)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M086,   24, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x11), 
        M087,   1, 
            ,   1, 
        Offset (0x14), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   522240, 
        Offset (0x10056), 
        M107,   64, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32
    }

    Method (M000, 1, Serialized)
    {
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, 0x80, 0x02)
        Field (VARM, WordAcc, NoLock, Preserve)
        {
            VARR,   16
        }

        VARR = Local0
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x68)
        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local0 |= 0x20
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M019 (Arg0, Arg1, Arg2, 0x68)
            If ((Local3 & 0x08000000))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If ((Local0 == Zero))
        {
            If ((M085 == 0x02))
            {
                Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                    One)
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf ((Local0 == One))
        {
            Local1 = M038 /* External reference */
            Local2
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        If ((Local0 == Zero))
        {
            If ((M085 == 0x02))
            {
                M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                    0x02 | Arg1))
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
            }
        }
        ElseIf ((Local0 == One))
        {
            M039 (Local1, Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        Else
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        M014 (Local0, Arg3, Arg4, Arg5, Arg6)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 3, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                M120 = Zero
                \_SB.ALIB (0x06, M115)
            }
            Else
            {
                M120 = One
                \_SB.ALIB (0x06, M115)
                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Linux"))
                {
                    M046 = 0x02
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M044, 0, Serialized)
    {
        M045 ()
        Local0 = Zero
        If ((M046 == 0x02))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }
}



UEFI
----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000236
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : B0
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  16]              UUID Identifier : 9D4BF935-A674-4710-BA02-BF0AA1758C7B
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 566 (0x236)

    0000: 55 45 46 49 36 02 00 00 01 B0 4C 45 4E 4F 56 4F  // UEFI6.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 35 F9 4B 9D 74 A6 10 47 BA 02 BF 0A  // ....5.K.t..G....
    0030: A1 75 8C 7B 36 00 24 42 56 44 54 24 16 08 05 24  // .u.{6.$BVDT$...$
    0040: 10 02 46 24 41 32 43 4E 34 35 57 57 28 56 32 2E  // ..F$A2CN45WW(V2.
    0050: 31 33 29 00 00 00 00 00 00 00 00 00 24 4D 75 6C  // 13).........$Mul
    0060: 6C 69 6E 73 2D 4C 61 72 6E 65 4D 4C 00 00 00 00  // lins-LarneML....
    0070: 00 00 00 00 00 00 24 43 43 42 2E 30 33 2E 37 34  // ......$CCB.03.74
    0080: 2E 30 33 00 00 00 00 00 00 00 00 00 00 00 00 00  // .03.............
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF  // ................
    00A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0100: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0110: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0120: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0130: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0150: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0160: FF FF FF FF FF 24 42 4D 45 24 00 4E 72 00 00 02  // .....$BME$.Nr...
    0170: 00 00 24 00 40 72 00 30 0B 00 00 24 00 FF FF FF  // ..$.@r.0...$....
    0180: FF FF FF FF FF 24 5F 4D 53 43 5F 56 45 52 3D DC  // .....$_MSC_VER=.
    0190: 05 24 52 44 41 54 45 16 08 04 24 45 53 52 54 09  // .$RDATE...$ESRT.
    01A0: 10 03 34 52 09 2D 73 EC 7D FE 44 B7 55 7F 10 DD  // ..4R.-s.}.D.U...
    01B0: 9E 67 8B 8B 01 00 00 24 45 4E 44 4F 46 42 56 44  // .g.....$ENDOFBVD
    01C0: 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // T...............
    01D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0200: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0210: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0220: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0230: FF FF FF FF FF FF                                // ......


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000EC84
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 35
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ACPI"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 60548 (0xEC84)

    0000: 56 46 43 54 84 EC 00 00 01 35 4C 45 4E 4F 56 4F  // VFCT.....5LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 41 43 50 49  // CB-01   ....ACPI
    0020: 00 00 04 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0050: 01 00 00 00 00 00 00 00 02 10 51 98 00 00 00 00  // ..........Q.....
    0060: 01 00 00 00 00 EC 00 00 55 AA 76 E9 15 02 00 00  // ........U.v.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: C8 01 00 00 00 00 49 42 4D 35 C0 A1 00 00 00 00  // ......IBM5......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 0D 02 00 00 00 00 00 00  // 20..............
    00B0: A4 01 00 00 00 00 00 00 30 31 2F 32 39 2F 31 35  // ........01/29/15
    00C0: 2C 30 34 3A 35 32 3A 32 39 00 00 00 E9 0A 03 00  // ,04:52:29.......
    00D0: E9 19 03 00 00 00 80 00 00 00 00 00 00 00 00 00  // ................
    00E0: 00 00 00 00 00 00 00 00 42 52 34 35 37 38 37 2E  // ........BR45787.
    00F0: 74 73 35 00 47 4F 44 41 56 41 52 49 00 50 43 49  // ts5.GODAVARI.PCI
    0100: 5F 45 58 50 52 45 53 53 00 44 44 52 33 00 0D 0A  // _EXPRESS.DDR3...
    0110: 41 4D 44 20 46 75 73 69 6F 6E 20 47 6F 64 61 76  // AMD Fusion Godav
    0120: 61 72 69 20 47 65 6E 65 72 69 63 20 56 42 49 4F  // ari Generic VBIO
    0130: 53 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  // S               
    0140: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0150: 20 20 20 20 20 20 20 20 20 20 20 20 0D 0A 00 0D  //             ....
    0160: 0A 20 0D 0A 00 28 43 29 20 31 39 38 38 2D 32 30  // . ...(C) 1988-20
    0170: 31 30 2C 20 41 64 76 61 6E 63 65 64 20 4D 69 63  // 10, Advanced Mic
    0180: 72 6F 20 44 65 76 69 63 65 73 2C 20 49 6E 63 2E  // ro Devices, Inc.
    0190: 00 41 54 4F 4D 42 49 4F 53 42 4B 2D 41 4D 44 20  // .ATOMBIOSBK-AMD 
    01A0: 56 45 52 30 31 35 2E 30 34 32 2E 30 30 30 2E 30  // VER015.042.000.0
    01B0: 30 33 2E 30 34 35 37 38 37 00 42 52 34 35 37 38  // 03.045787.BR4578
    01C0: 37 2E 74 73 35 20 00 31 31 31 36 32 36 33 20 00  // 7.ts5 .1116263 .
    01D0: 33 31 31 33 31 38 20 20 00 20 20 20 20 20 20 20  // 311318  .       
    01E0: 20 00 4C 43 46 43 5F 4C 45 4E 4F 56 4F 5F 42 45  //  .LCFC_LENOVO_BE
    01F0: 45 4D 41 5F 41 43 4C 55 35 5F 41 43 4C 55 36 5C  // EMA_ACLU5_ACLU6\
    0200: 63 6F 6E 66 69 67 2E 68 00 00 00 90 24 00 01 01  // config.h....$...
    0210: 41 54 4F 4D 00 C0 15 03 52 01 ED 01 A6 00 48 03  // ATOM....R.....H.
    0220: 00 00 00 00 02 10 02 10 C8 01 88 A6 2E A7 A0 00  // ................
    0230: 50 43 49 52 02 10 51 98 00 00 18 00 00 00 00 03  // PCIR..Q.........
    0240: 76 00 2A 0F 00 80 00 00 41 4D 44 20 41 54 4F 4D  // v.*.....AMD ATOM
    0250: 42 49 4F 53 00 AA 9A C7 00 00 00 00 00 00 00 00  // BIOS............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 56 1E 0E 1F E8 EC 34 81 4D 50 00  // .....V.....4.MP.
    0280: 20 1F 5E 1E 06 66 50 66 51 66 52 66 53 66 55 66  //  .^..fPfQfRfSfUf
    0290: 56 66 57 0E 1F A3 B8 01 8C 0E AC 01 E8 98 3C E8  // VfW...........<.
    02A0: 74 3A 32 D2 89 16 BA 01 A1 B8 01 66 C1 C0 10 A1  // t:2........f....
    02B0: AC 01 E8 62 06 E8 B3 06 E8 DF 05 E8 0B 08 E8 74  // ...b...........t
    02C0: 04 E8 A4 34 F7 45 50 00 20 75 0C E8 49 00 E8 73  // ...4.EP. u..I..s
    02D0: 66 E8 E5 05 E8 D2 66 E8 B9 00 B4 80 E8 6C 3A 8A  // f.....f......l:.
    02E0: C7 66 C1 E0 10 8A E3 B0 14 66 50 BB 08 10 E8 E5  // .f.......fP.....
    02F0: 3B A8 01 66 58 74 02 B0 20 66 A3 C0 A1 E8 68 05  // ;..fXt.. f....h.
    0300: E8 72 06 E8 54 3C 66 5F 66 5E 66 5D 66 5B 66 5A  // .r..T<f_f^f]f[fZ
    0310: 66 59 66 58 07 1F CB 2E 8B 1E AC 01 83 3E 27 03  // fYfX.........>'.
    0320: 00 75 04 89 1E 25 03 1E 2E 8E 1E 1D 03 9C FA 66  // .u...%.........f
    0330: C7 06 08 01 65 F0 00 F0 C7 06 40 00 48 03 89 1E  // ....e.....@.H...
    0340: 42 00 C7 06 B4 01 48 03 89 1E B6 01 C7 06 7C 00  // B.....H.......|.
    0350: AF 6E 89 1E 7E 00 C7 06 0C 01 C2 72 89 1E 0E 01  // .n..~......r....
    0360: C7 06 A8 04 A2 68 89 1E AA 04 2E 8E 1E 25 03 8B  // .....h.......%..
    0370: C3 A3 A4 68 A3 B4 68 A3 C6 68 9D 1F C3 50 4D 49  // ...h..h..h...PMI
    0380: 44 48 03 50 55 00 00 00 A0 00 B0 00 B8 00 C0 00  // DH.PU...........
    0390: 00 00 00 BB 00 10 E8 3D 3B 66 C1 E8 10 A3 CE 01  // .......=;f......
    03A0: BB 0B 10 E8 30 3B 8D 3E A4 01 66 89 45 18 C3 00  // ....0;.>..f.E...
    03B0: E8 84 3B E8 6A 03 75 1B 2E 3A 26 C6 01 75 05 E8  // ..;.j.u..:&..u..
    03C0: 47 00 EB 11 80 FC 4F 75 05 E8 CA 50 EB 07 E8 6D  // G.....Ou...P...m
    03D0: 58 EB 02 B4 01 E8 82 3B CF E8 5B 3B E8 41 03 75  // X......;..[;.A.u
    03E0: 05 E8 25 00 EB 02 B4 01 E8 6F 3B CB E8 48 3B E8  // ..%......o;..H;.
    03F0: 2E 03 75 0F 80 FC 4F 75 05 E8 9A 50 EB 07 E8 3D  // ..u...Ou...P...=
    0400: 58 EB 02 B4 01 E8 52 3B CB 1E 06 66 50 66 51 66  // X.....R;...fPfQf
    0410: 52 66 53 66 55 66 56 66 57 0E 1F 3C 00 75 2C 8A  // RfSfUfVfW..<.u,.
    0420: D1 C1 E9 08 BE 60 1C E8 ED 1B E8 CD 0B BE 60 1C  // .....`........`.
    0430: E8 58 05 0F 84 A2 02 66 BB 60 1C 00 1C E8 36 1E  // .X.....f.`....6.
    0440: BE 00 1C 32 C0 E8 CE 05 E9 96 02 3C 04 75 23 BB  // ...2.......<.u#.
    0450: 0B 10 E8 81 3A 8D 36 A4 00 8A 3C 80 EF 30 B3 02  // ....:.6...<..0..
    0460: 8B EC 89 5E 0C 89 46 04 66 C1 E8 10 89 46 00 E9  // ...^..F.f....F..
    0470: 6F 02 3C 05 75 18 E8 97 04 E8 9A 38 8B EC 89 56  // o.<.u......8...V
    0480: 10 89 46 00 66 C1 E8 10 89 46 04 E9 53 02 3C 06  // ..F.f....F..S.<.
    0490: 75 39 E8 89 04 66 D1 E0 8B EC 89 46 14 BB 02 10  // u9...f.....F....
    04A0: E8 33 3A 88 46 18 E8 9B 04 66 0B C0 0F 84 29 02  // .3:.F....f....).
    04B0: 66 89 46 0C BB 06 10 E8 1C 3A 33 C0 66 89 46 00  // f.F......:3.f.F.
    04C0: 2E 8B 16 CE 01 89 56 10 E9 16 02 3C 0B 75 24 0A  // ......V....<.u$.
    04D0: DB 75 11 B9 80 00 BB 02 00 8B EC 89 5E 0C 89 4E  // .u..........^..N
    04E0: 14 E9 FD 01 8A C7 E8 2D 02 E8 99 13 0F 84 E9 01  // .......-........
    04F0: E9 EE 01 3C 17 75 2F E8 70 09 74 06 E8 F5 11 E8  // ...<.u/.p.t.....
    0500: F1 1D E8 F5 0A E8 70 13 33 C9 50 24 03 0A C8 58  // ......p.3.P$...X
    0510: 80 E4 03 C0 E4 04 0A CC 66 C1 E8 10 0A E8 8B EC  // ........f.......
    0520: 89 4E 14 E9 BB 01 3C 18 75 6D 0A FF 75 18 E8 68  // .N....<.um..u..h
    0530: 08 8B EC 89 46 0C 66 C1 E8 10 89 46 14 E8 00 0C  // ....F.f....F....
    0540: 89 4E 10 E9 9B 01 80 FF 0F 74 0E 23 C9 0F 84 88  // .N.......t.#....
    0550: 01 E8 BD 08 E8 13 09 75 2D BB 00 1C E8 9E 39 66  // .......u-.....9f
    0560: 0B C0 0F 84 73 01 E8 91 0A 0B C9 0F 84 6A 01 BE  // ....s........j..
    0570: 00 1C E8 16 04 0F 84 60 01 BE 00 1C B0 40 E8 95  // .......`.....@..
    0580: 04 E8 15 08 EB 09 E8 77 09 E8 D7 1D E8 63 09 8B  // .......w.....c..
    0590: EC 89 46 0C E9 4A 01 3C 19 75 09 E8 F5 08 E8 C9  // ..F..J.<.u......
    05A0: 1D E9 3D 01 3C 82 75 50 80 FB 01 75 0E 8B EC BE  // ..=.<.uP...u....
    05B0: E8 06 89 76 00 8C 4E 10 E9 26 01 80 FB 05 75 19  // ...v..N..&....u.
    05C0: 0A FF 75 0B E8 F3 05 8B EC 89 46 14 E9 12 01 E8  // ..u.......F.....
    05D0: AE 05 0F 84 FB 00 E9 08 01 80 FB 07 0F 85 F1 00  // ................
    05E0: 0A FF 75 0B E8 DE 07 8B EC 88 46 14 E9 F2 00 BE  // ..u.......F.....
    05F0: 00 1C E8 37 06 E9 E9 00 3C 8E 75 15 80 FF 01 74  // ...7....<.u....t
    0600: 0A 80 FF 02 0F 85 C9 00 80 C1 02 E8 12 06 E9 D0  // ................
    0610: 00 3C 8F 0F 85 BA 00 80 FF 00 75 0B E8 92 08 8B  // .<........u.....
    0620: EC 88 4E 14 E9 BA 00 80 FF 02 75 09 80 F1 01 E8  // ..N.......u.....
    0630: 52 08 E9 AC 00 80 FF 03 75 11 32 DB E8 E3 02 74  // R.......u.2....t
    0640: 02 B3 01 8B EC 88 5E 0C E9 96 00 80 FF 05 75 06  // ......^.......u.
    0650: E8 F1 08 E9 8B 00 80 FF 07 75 0A E8 F4 08 8B EC  // .........u......
    0660: 88 5E 0C EB 7C 80 FF 0F 75 02 EB 65 80 FF 10 75  // .^..|...u..e...u
    0670: 02 EB 5E 80 FF 11 75 08 E8 7E 00 E8 DE 1C EB 61  // ..^...u..~.....a
    0680: 80 FF 14 75 02 EB 5A 80 FF 17 75 08 E8 66 02 E8  // ...u..Z...u..f..
    0690: E6 1C EB 4D 80 FF 83 75 02 EB 46 80 FF 85 75 0B  // ...M...u..F...u.
    06A0: E8 A1 08 E8 53 00 E8 AC 1C EB 36 80 FF 89 75 15  // ....S.....6...u.
    06B0: 8B D1 8B DA 50 E8 0D 04 8B C8 58 8B EC 89 5E 0C  // ....P.....X...^.
    06C0: 89 4E 14 EB 1C 80 FF 94 75 07 8B EC 88 5E 0C EB  // .N......u....^..
    06D0: 10 8B EC C6 46 19 02 EB 0F 8B EC C6 46 19 01 EB  // ....F.......F...
    06E0: 07 32 E4 8B EC 88 66 19 66 5F 66 5E 66 5D 66 5B  // .2....f.f_f^f]f[
    06F0: 66 5A 66 59 66 58 07 1F C3 E8 6E 07 75 17 33 C9  // fZfYfX....n.u.3.
    0700: E8 4F 08 0A DB 75 02 B1 02 33 D2 E8 03 07 B0 18  // .O...u...3......
    0710: B7 0F E8 F4 FC C3 51 8A C8 B8 01 00 D3 E0 59 C3  // ......Q.......Y.
    0720: 50 32 C0 53 BB 15 10 E8 AC 37 5B 3C FF 74 04 24  // P2.S.....7[<.t.$
    0730: 03 0A C0 58 C3 E8 B3 00 E8 88 09 F7 C1 02 00 74  // ...X...........t
    0740: 0E 06 0E 07 8D 3E E8 06 B8 02 00 E8 2C 08 07 C3  // .....>......,...
    0750: 00 00 00 00 07 00 08 08 08 00 00 00 00 00 00 00  // ................
    0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0770: 80 FB 01 75 04 E8 16 00 C3 80 FB 02 75 04 E8 5F  // ...u........u.._
    0780: 00 C3 80 FB 1B 75 04 E8 62 00 C3 0C 01 C3 56 51  // .....u..b.....VQ
    0790: 8A C1 BE D3 07 E8 8F 00 8A F8 B8 08 4E B3 01 B1  // ............N...
    07A0: 01 E8 C6 06 75 02 32 C9 CD 15 59 3D 00 4E 75 2C  // ....u.2...Y=.Nu,
    07B0: 33 C0 33 D2 F6 C3 01 74 02 0C 02 F6 C3 02 74 02  // 3.3....t......t.
    07C0: 0C 01 F6 C3 40 74 03 80 CA 01 81 E3 88 00 0B C3  // ....@t..........
    07D0: 8B D9 23 D8 74 06 8B C8 24 00 5E C3 0C 01 5E C3  // ..#.t...$.^...^.
    07E0: B8 08 4E B3 02 CD 15 3D 00 4E C3 C3 06 57 56 57  // ..N....=.N...WVW
    07F0: 66 33 DB 8B DF 66 33 C9 0E 59 66 C1 E1 04 66 03  // f3...f3..Yf...f.
    0800: CB BB 1B 00 B8 08 4E CD 15 5E 3D 00 4E 75 14 B9  // ......N..^=.Nu..
    0810: 20 00 66 26 8B 05 66 89 04 83 C6 04 83 C7 04 E2  //  .f&..f.........
    0820: F1 33 C0 5E 5F 07 C3 51 B9 08 00 D0 E8 73 03 2E  // .3.^_..Q.....s..
    0830: 0A 2C 46 FE C9 75 F4 8A C5 59 C3 02 01 04 08 20  // .,F..u...Y..... 
    0840: 10 40 80 00 50 51 B0 B6 E6 43 B0 33 E6 42 B0 05  // .@..PQ...C.3.B..
    0850: E6 42 E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8 00 E8  // .B.a.....a......
    0860: 9F 30 E6 61 59 58 C3 00 1E 56 0E 1F 80 3E 02 00  // .0.aYX...V...>..
    0870: 80 76 05 C6 06 02 00 80 8A 0E 02 00 C1 E1 09 FC  // .v..............
    0880: C6 06 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB F6 D4  // ..!..3.2........
    0890: FE C4 88 26 21 00 5E 1F C3 00 E8 A0 1A 75 05 8A  // ...&!.^......u..
    08A0: C3 E8 5B 2F E8 47 2F 75 03 E8 2B 31 E8 86 2F E8  // ..[/.G/u..+1../.
    08B0: 54 2F E8 8A 2C E8 3C 0E C3 32 C0 E8 BC 30 75 0C  // T/..,.<..2...0u.
    08C0: E8 CF 2F 0A C0 74 03 B0 02 C3 B0 01 C3 66 51 8A  // ../..t.......fQ.
    08D0: CB 66 C1 E1 1A BB 00 00 E8 CE 2A 66 25 FF FF FF  // .f........*f%...
    08E0: E3 66 0B C1 E8 CC 2A 66 59 C3 BB 00 00 E8 B9 2A  // .f....*fY......*
    08F0: 66 C1 E8 1A C3 66 51 8A CB 66 C1 E1 1D BB 00 00  // f....fQ..f......
    0900: E8 A6 2A 66 25 1F FF FF FF 66 0B C1 E8 A4 2A C3  // ..*f%....f....*.
    0910: BB 01 00 E8 93 2A C3 BB 01 00 E8 96 2A C3 E8 6E  // .....*......*..n
    0920: 30 C3 66 50 53 BB 06 00 E8 7E 2A F6 C4 01 5B 66  // 0.fPS....~*...[f
    0930: 58 C3 50 B8 28 06 E8 FC 04 58 C3 50 B8 08 06 E8  // X.P.(....X.P....
    0940: F3 04 58 C3 53 BB 04 00 E8 72 2A 24 06 3C 04 75  // ..X.S....r*$.<.u
    0950: 10 BB 05 00 E8 66 2A 66 0B C0 74 05 66 33 C0 EB  // .....f*f..t.f3..
    0960: 08 BB 04 00 E8 56 2A 33 C0 5B C3 E8 F9 2F BB 0A  // .....V*3.[.../..
    0970: 00 E8 3F 2A C3 BB 0A 00 E8 2E 2A 66 8B C8 E8 E6  // ..?*......*f....
    0980: 2F BB 0A 00 66 2B C1 E8 29 2A C3 E8 29 00 0B C9  // /...f+..)*..)...
    0990: 74 22 E8 DA 07 E8 E7 18 66 51 66 8B C8 BB 07 00  // t"......fQf.....
    09A0: E8 06 2A 66 25 00 FE 00 00 66 0B C1 E8 04 2A 66  // ..*f%....f....*f
    09B0: 59 0C 01 C3 32 C0 C3 E8 45 04 0B C9 75 2C E8 7F  // Y...2...E...u,..
    09C0: 07 E8 73 19 75 12 8B D1 8B CB E8 60 2B 23 C2 74  // ..s.u......`+#.t
    09D0: 07 E8 62 2B 33 D2 EB 0F E8 65 07 E8 3D 19 74 07  // ..b+3....e..=.t.
    09E0: 33 D2 E8 48 2B 8B C8 E8 27 04 0B D1 E8 51 07 23  // 3..H+...'....Q.#
    09F0: CA 66 C1 E6 10 33 F6 E8 A1 0C 74 15 E8 D8 0D 85  // .f...3....t.....
    0A00: C1 74 F4 51 E8 41 14 59 75 ED E8 CA 0D 33 C8 EB  // .t.Q.A.Yu....3..
    0A10: E6 66 C1 EE 10 C3 A8 10 75 5A E8 74 18 66 C1 E6  // .f......uZ.t.f..
    0A20: 10 33 F6 E8 75 0C 74 24 E8 45 0C 74 0B E8 EC 0D  // .3..u.t$.E.t....
    0A30: 24 03 3C 03 75 ED EB 0A E8 E1 0D A8 01 74 E4 E8  // $.<.u........t..
    0A40: 76 08 E8 17 1A B5 00 E8 D9 0D EB D7 E8 7F 01 32  // v..............2
    0A50: C9 33 F6 E8 89 0C E8 8D 19 E8 12 2E FE C1 38 C1  // .3............8.
    0A60: 72 F1 66 C1 EE 10 E8 21 18 A8 20 75 57 A8 40 75  // r.f....!.. uW.@u
    0A70: 03 E8 B9 1F E8 08 18 0A C0 75 19 32 C9 33 F6 E8  // .........u.2.3..
    0A80: 5D 0C 0B F6 74 05 B5 01 E8 57 20 E8 E0 2D FE C1  // ]...t....W ..-..
    0A90: 38 C1 72 EB 33 F6 E8 F7 0B 74 26 E8 5E 0D E8 8A  // 8.r.3....t&.^...
    0AA0: 28 75 14 E8 AC 04 0A DB 74 0D E8 0B 08 E8 AC 19  // (u......t.......
    0AB0: B5 00 E8 6E 0D EB DF E8 84 19 B5 01 E8 64 0D EB  // ...n.........d..
    0AC0: D5 E8 17 01 C3 E8 65 2A C3 E8 27 18 33 C9 33 D2  // ......e*..'.3.3.
    0AD0: E8 3E 03 66 33 D2 66 33 C0 E8 7F 0D E8 53 00 33  // .>.f3.f3.....S.3
    0AE0: F6 E8 B7 0B 74 10 E8 13 0D E8 3B 28 74 03 E8 E3  // ....t.....;(t...
    0AF0: 19 E8 10 1A EB EB E8 2D 18 74 02 B3 01 E8 E2 02  // .......-.t......
    0B00: E8 F4 2C E8 27 2A 0B C0 C3 E8 E8 0B E8 E4 17 66  // ..,.'*.........f
    0B10: 33 C0 66 BA 00 F0 00 F0 E8 8D 02 51 B1 01 E8 63  // 3.f........Q...c
    0B20: 03 59 33 F6 E8 74 0B 74 05 E8 A8 19 EB F6 E8 0C  // .Y3..t.t........
    0B30: 1F C3 B8 02 00 E8 45 0B 74 1D B1 07 E8 76 25 E8  // ......E.t....v%.
    0B40: 77 0D A8 04 75 12 E8 57 31 83 3D 00 75 0A E8 DC  // w...u..W1.=.u...
    0B50: 29 83 E0 FD E8 DF 29 C3 66 BA FF FF FB FF 66 B8  // ).....).f.....f.
    0B60: 00 00 04 00 E8 F4 0C E8 75 0F B1 FF E8 11 00 E8  // ........u.......
    0B70: 95 30 8A C8 BB 04 00 E8 2F 28 8A E1 E8 34 28 C3  // .0....../(...4(.
    0B80: E8 44 28 74 34 38 E1 76 04 8A CC EB 06 38 C1 73  // .D(t48.v.....8.s
    0B90: 02 8A C8 BB 02 00 E8 10 28 8A E1 E8 15 28 BB 02  // ........(....(..
    0BA0: 00 E8 05 28 66 C1 E8 18 A8 20 75 08 B1 04 E8 04  // ...(f.... u.....
    0BB0: 25 0C 01 C3 E8 C8 17 0C 01 C3 51 E8 09 28 74 0C  // %.........Q..(t.
    0BC0: 8A CC BB 02 00 E8 E1 27 8A C4 8A E1 59 C3 33 F6  // .......'....Y.3.
    0BD0: E8 BD 0A 74 05 E8 F0 17 EB F6 C3 33 F6 E8 B0 0A  // ...t.......3....
    0BE0: 74 05 E8 F2 17 EB F6 C3 E8 8F 2D 75 1B 80 F9 01  // t.........-u....
    0BF0: 75 17 33 F6 E8 99 0A 74 0C 51 E8 41 18 B5 01 E8  // u.3....t.Q.A....
    0C00: 21 0C 59 EB EF E8 D3 FF C3 E8 C2 FF 33 F6 E8 7F  // !.Y.........3...
    0C10: 0A 74 0C 51 E8 BD 18 B5 00 E8 07 0C 59 EB EF C3  // .t.Q........Y...
    0C20: B8 02 00 E8 57 0A 74 03 E8 8A 24 C3 8A D9 E8 B1  // ....W.t...$.....
    0C30: 01 E8 36 02 75 17 8B FE B8 02 00 E8 3F 0A 74 10  // ..6.u.......?.t.
    0C40: E8 2D 0A 74 0B E8 98 07 E8 2A 1F EB 03 E8 36 17  // .-.t.....*....6.
    0C50: C3 53 56 E8 14 02 74 05 E8 5F 1E EB 24 E8 40 16  // .SV...t.._..$.@.
    0C60: 8B C8 66 C1 E8 10 8B D0 E8 14 16 0A C0 75 0A 81  // ..f..........u..
    0C70: F9 40 01 77 0C D1 E1 EB 08 81 FA F0 00 77 02 D1  // .@.w.........w..
    0C80: E2 5E 5B C3 E8 33 1E 8B C8 66 C1 E8 10 8B D0 C3  // .^[..3...f......
    0C90: 8A C3 24 80 E8 FA 15 32 C9 B5 10 E8 D5 1D E8 CD  // ..$....2........
    0CA0: 2B FE C1 38 C1 72 F2 C3 E8 73 15 3B C1 7C 3A 8B  // +..8.r...s.;.|:.
    0CB0: C1 E8 B3 15 E8 50 1F 8B C8 51 E8 E3 15 E8 A7 15  // .....P...Q......
    0CC0: 59 E8 43 1F 3B C8 72 02 8B C1 8D 5C 04 E8 B0 31  // Y.C.;.r....\...1
    0CD0: 32 C9 B5 0F E8 9C 1D E8 94 2B FE C1 38 C1 72 F2  // 2........+..8.r.
    0CE0: 8D 5C 04 E8 17 32 0B C0 C3 33 C0 C3 52 E8 9C 00  // .\...2...3..R...
    0CF0: 8A C2 8B D1 66 C1 E2 10 8A D0 32 C0 B9 00 02 E8  // ....f.....2.....
    0D00: E4 1E 66 C1 EA 10 8B CA 5A E8 80 00 E8 EE 31 66  // ..f.....Z.....1f
    0D10: C1 E8 02 0A F6 75 04 66 C1 E8 02 67 26 88 07 66  // .....u.f...g&..f
    0D20: C1 E8 0A 67 26 88 47 01 66 C1 E8 0A 67 26 88 47  // ...g&.G.f...g&.G
    0D30: 02 66 83 C7 04 83 C3 04 E2 D2 C3 51 E8 4D 00 53  // .f.........Q.M.S
    0D40: 67 26 8A 47 02 66 C1 E0 0A 67 26 8A 47 01 66 C1  // g&.G.f...g&.G.f.
    0D50: E0 0A 67 26 8A 07 66 C1 E0 02 0A F6 75 04 66 C1  // ..g&..f.....u.f.
    0D60: E0 02 E8 03 31 66 83 C7 04 83 C3 04 E2 D2 5B 59  // ....1f........[Y
    0D70: 8A C2 8B D1 66 C1 E2 10 8A D0 B9 00 03 53 E8 65  // ....f........S.e
    0D80: 1E 5B E8 E9 2A FE C1 38 C1 72 F2 C3 BB 00 18 33  // .[..*..8.r.....3
    0D90: C0 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00 E8 09 26  // .........S.....&
    0DA0: 66 25 FF 0F FF 0F 5B C3 53 66 50 66 51 66 8B C8  // f%....[.SfPfQf..
    0DB0: BB 03 00 E8 F3 25 66 23 C2 66 0B C1 E8 F4 25 66  // .....%f#.f....%f
    0DC0: 59 66 58 5B C3 53 66 50 BB 06 00 E8 DB 25 8A DC  // YfX[.SfP.....%..
    0DD0: 66 58 8A C3 80 E3 20 D0 EB 24 10 C0 E8 04 0A C3  // fX.... ..$......
    0DE0: 5B C3 B8 2C 06 F6 C3 01 75 03 B8 0C 06 E8 45 00  // [..,....u.....E.
    0DF0: B8 2D 06 F6 C3 10 75 03 B8 0D 06 E8 37 00 C3 BB  // .-....u.....7...
    0E00: 05 00 E8 A4 25 25 FF 0F 8B C8 66 C1 E0 10 8B D0  // ....%%....f.....
    0E10: C3 E8 19 27 23 C8 81 E2 15 01 23 D1 66 C1 E2 10  // ...'#.....#.f...
    0E20: 8B D1 BB 05 00 E8 81 25 66 25 00 F0 EA FE 66 0B  // .......%f%....f.
    0E30: C2 E8 7F 25 C3 66 50 53 51 66 52 66 33 D2 33 DB  // ...%.fPSQfRf3.3.
    0E40: 8A DC 8A E8 8A C8 80 E1 1F 66 BA 01 00 00 00 66  // .........f.....f
    0E50: D3 E2 E8 54 25 66 0B C2 F6 C5 20 75 03 66 33 C2  // ...T%f.... u.f3.
    0E60: E8 50 25 66 5A 59 5B 66 58 C3 66 50 53 BB 06 00  // .P%fZY[fX.fPS...
    0E70: E8 36 25 A8 10 75 09 BB F0 16 E8 80 30 3D 5A A5  // .6%..u......0=Z.
    0E80: 5B 66 58 C3 B8 04 06 80 F1 01 C0 E1 05 0A C1 E8  // [fX.............
    0E90: A3 FF C3 53 66 50 BB F8 16 E8 61 30 8A C1 E8 C7  // ...SfP....a0....
    0EA0: 2F 66 58 5B C3 53 BB F8 16 E8 51 30 83 E0 01 5B  // /fX[.S....Q0...[
    0EB0: C3 BB 06 00 E8 F2 24 8A C8 80 E1 10 D0 E9 A8 20  // ......$........ 
    0EC0: 74 05 80 C9 30 EB 03 80 C9 20 BB 02 00 E8 D9 24  // t...0.... .....$
    0ED0: 66 C1 E8 1E 0A C8 BB 06 00 E8 CD 24 66 C1 E8 18  // f..........$f...
    0EE0: 24 20 D0 E0 0A C8 C3 66 50 E8 AD FE A9 EA 0E 66  // $ .....fP......f
    0EF0: 58 C3 BB 06 00 E8 B1 24 66 C1 E8 10 25 FF 0F C3  // X......$f...%...
    0F00: BB 06 00 E8 A3 24 66 25 FF FF 00 F0 66 C1 E2 10  // .....$f%....f...
    0F10: 66 0B C2 E8 9D 24 C3 53 66 50 BB 07 00 E8 89 24  // f....$.SfP.....$
    0F20: F6 C4 01 66 58 B0 06 74 02 B0 08 5B C3 53 BB 07  // ...fX..t...[.S..
    0F30: 00 E8 75 24 80 E4 FE 80 FD 06 74 03 80 CC 01 E8  // ..u$......t.....
    0F40: 71 24 5B C3 53 B8 06 06 C0 E3 05 0A C3 E8 E5 FE  // q$[.S...........
    0F50: 5B C3 66 50 E8 DA 13 75 03 E8 E8 FF BB 06 00 E8  // [.fP...u........
    0F60: 47 24 24 40 C0 E8 06 8A D8 66 58 C3 53 B8 27 06  // G$$@.....fX.S.'.
    0F70: C0 E3 05 0A C3 E8 BD FE 5B C3 57 66 50 66 33 C0  // ........[.WfPf3.
    0F80: B9 08 00 FC F3 66 AB 66 58 5F E8 B3 01 0B C0 75  // .....f.fX_.....u
    0F90: 09 E8 1D 07 74 3C 85 C1 74 F7 E8 E0 06 8D 9C 6A  // ....t<..t......j
    0FA0: 01 E8 59 2F 26 89 05 8D 9C 6E 01 E8 4F 2F 26 89  // ..Y/&....n..O/&.
    0FB0: 45 02 8D 9C B5 02 E8 44 2F 02 C0 04 04 26 88 45  // E......D/....&.E
    0FC0: 06 26 88 45 07 26 88 45 08 B0 07 26 88 45 04 0A  // .&.E.&.E...&.E..
    0FD0: C0 C3 32 C0 C3 B3 81 E8 04 2D 75 04 83 C8 01 C3  // ..2......-u.....
    0FE0: 33 C0 C3 66 50 53 51 52 56 57 E8 7D FE 74 03 E8  // 3..fPSQRVW.}.t..
    0FF0: 02 07 5F 5E 5A 59 5B 66 58 C3 33 C9 E8 7B 29 0F  // .._^ZY[fX.3..{).
    1000: 85 AE 00 66 BA FC FC 0C FF 66 33 C0 E8 4C 08 33  // ...f.....f3..L.3
    1010: F6 E8 87 06 74 7E E8 BE 07 A9 C8 0E 74 57 E8 98  // ....t~......tW..
    1020: 08 A8 04 74 38 B8 11 00 E8 ED 06 74 2B 8D 5C 28  // ...t8......t+.\(
    1030: E8 AE 09 3C 02 74 21 3C 01 74 11 56 8B F7 E8 0E  // ...<.t!<.t.V....
    1040: 15 E8 93 07 E8 7C 00 5E 85 C1 74 0C E8 63 00 56  // .....|.^..t..c.V
    1050: 8B F7 E8 B8 00 5E EB B9 E8 B2 00 EB B4 A8 08 75  // .....^.........u
    1060: F7 B8 11 00 E8 B1 06 74 A8 E8 46 00 56 8B F7 E8  // .......t..F.V...
    1070: DD 14 5E EB 9C A9 11 00 74 97 B8 C8 0E E8 98 06  // ..^.....t.......
    1080: 75 8F E8 34 08 A8 02 74 05 E8 81 00 EB 83 E8 BE  // u..4...t........
    1090: 14 E9 7D FF E8 2C 00 75 03 E8 A4 00 33 F6 E8 FA  // ..}..,.u....3...
    10A0: 05 74 0E E8 31 07 85 C1 74 F4 51 E8 46 09 59 EB  // .t..1...t.Q.F.Y.
    10B0: ED C3 8D 5D 28 66 C1 E3 10 8D 5C 28 B9 49 00 E8  // ...](f....\(.I..
    10C0: 03 28 C3 66 50 53 52 56 33 C9 33 D2 8D 36 9C 10  // .(.fPSRV3.3..6..
    10D0: E8 A5 07 A8 03 74 03 83 CA 01 66 C1 E8 10 8A 0C  // .....t....f.....
    10E0: 80 F9 FF 74 15 66 A9 01 00 00 00 74 07 BB 01 00  // ...t.f.....t....
    10F0: D3 E3 0B D3 66 D1 E8 46 EB E4 8B CA 0B C9 5E 5A  // ....f..F......^Z
    1100: 5B 66 58 C3 03 07 01 05 06 09 0A 0B FF 66 50 53  // [fX..........fPS
    1110: 51 E8 C3 06 0F BC D8 81 C3 CC 10 8A 0F 66 B8 01  // Q............f..
    1120: 00 00 00 66 D3 E0 66 BA FF FF FF FF E8 2C 07 59  // ...f..f......,.Y
    1130: 5B 66 58 C3 01 12 0B 10 09 13 14 11 0C 15 16 17  // [fX.............
    1140: 50 53 52 E8 7D FF 75 13 B9 01 00 E8 DF 23 23 C8  // PSR.}.u......##.
    1150: 75 19 33 C0 E8 5A 05 8B C8 EB 10 83 F9 02 74 0B  // u.3..Z........t.
    1160: E8 EF FD 80 FB 01 75 03 83 E1 FD 5A 5B 58 C3 56  // ......u....Z[X.V
    1170: 83 EC 04 8B EC 66 33 C0 66 89 46 00 66 BA 00 F0  // .....f3.f.F.f...
    1180: 00 F0 E8 23 FC 66 C1 E6 10 E8 25 05 0B C0 74 1E  // ...#.f....%...t.
    1190: 85 C1 74 F5 55 E8 56 00 5D 74 04 33 C8 EB EA E8  // ..t.U.V.]t.3....
    11A0: AA 06 66 3B 56 00 76 E1 66 89 56 00 EB DB E8 E8  // ..f;V.v.f.V.....
    11B0: FB 74 07 66 8B 46 00 E8 05 00 83 C4 04 5E C3 33  // .t.f.F.......^.3
    11C0: F6 66 50 E8 CA 04 66 58 8D 9C D8 02 E8 99 2C 66  // .fP...fX......,f
    11D0: 8B D0 E8 C4 FB E8 42 1A 8D 9C 1C 03 E8 1E 2D 38  // ......B.......-8
    11E0: D0 74 0A 8A C2 E8 80 2C B0 02 E8 4E 06 C3 50 51  // .t.....,...N..PQ
    11F0: E8 8A 04 32 C0 E8 43 06 E8 FF 03 E8 BA 00 8D 9C  // ...2..C.........
    1200: 40 03 E8 F8 2C 38 E8 74 0A 8A C5 E8 5A 2C B0 02  // @...,8.t....Z,..
    1210: E8 28 06 E8 3B 01 75 7F E8 96 01 75 7A E8 B7 00  // .(..;.u....uz...
    1220: 74 75 E8 02 01 74 70 8D 9C 4C 01 E8 CF 2C 8B C8  // tu...tp..L...,..
    1230: 8B D3 8D 9C 00 03 E8 C4 2C 3B C1 74 05 B0 02 E8  // ........,;.t....
    1240: F9 05 E8 A9 0B 8D 9C 00 03 E8 CA 19 8D 9C D8 02  // ................
    1250: E8 15 2C 66 C1 CE 10 8B FE 66 C1 CE 10 E8 80 01  // ..,f.....f......
    1260: E8 CB 01 E8 7A 05 8A E9 8D 9C DC 02 32 C9 E8 3B  // ....z.......2..;
    1270: 2C E8 63 05 66 25 FF 0F 00 00 E8 DF 04 80 F9 01  // ,.c.f%..........
    1280: 75 04 66 C1 E0 10 59 58 66 BA FF FF FF FF 66 33  // u.f...YXf.....f3
    1290: D0 E8 14 FB 33 D2 C3 E8 05 00 0C 01 59 58 C3 8D  // ....3.......YX..
    12A0: 9C 4C 03 E8 57 2C 8A C4 E8 BD 2B 8D 9C D4 02 E8  // .L..W,....+.....
    12B0: 4B 2C 8A C4 E8 B1 2B C3 53 66 50 8D 9C 4C 03 E8  // K,....+.SfP..L..
    12C0: 3B 2C 8A E0 E8 A1 2B 8D 9C D4 02 E8 2F 2C 8A E0  // ;,....+...../,..
    12D0: E8 95 2B 66 58 5B C3 56 83 EC 06 8B EC E8 9C 04  // ..+fX[.V........
    12E0: 89 56 00 E8 A0 1C 89 5E 02 E8 10 05 89 56 04 33  // .V.....^.....V.3
    12F0: F6 E8 9C 03 74 27 E8 83 04 3B 56 00 74 1B E8 FB  // ....t'...;V.t...
    1300: 04 E8 34 20 74 08 8B 56 04 E8 2C 20 75 E3 E8 6B  // ..4 t..V.., u..k
    1310: 04 E8 72 1C 3B 5E 02 75 D8 33 DB EB 03 80 CB 01  // ..r.;^.u.3......
    1320: 83 C4 06 0A DB 5E C3 E8 52 04 E8 0D 04 8A DD E8  // .....^..R.......
    1330: A9 1C 8B C1 80 FD FF 74 0A E8 20 04 80 F9 00 74  // .......t.. ....t
    1340: 02 8A C4 8A E8 8D 9C 3C 03 32 C9 E8 5E 2B 0B DB  // .......<.2..^+..
    1350: C3 83 EC 08 8B EC E8 23 04 E8 DE 03 E8 96 1B 56  // .......#.......V
    1360: 8A 6E 00 E8 36 00 0B F6 5E 74 14 F6 46 01 01 75  // .n..6...^t..F..u
    1370: 0E 83 C5 02 FE C9 0A C9 75 E5 80 CB 01 EB 17 8D  // ........u.......
    1380: 9C 4C 03 E8 77 2B 38 C5 74 0A 8A C5 E8 D9 2A B0  // .L..w+8.t.....*.
    1390: 02 E8 A7 04 32 DB 83 C4 08 0A DB C3 51 33 F6 E8  // ....2.......Q3..
    13A0: EE 02 0B F6 74 07 E8 37 04 38 E9 75 F2 0B F6 59  // ....t..7.8.u...Y
    13B0: C3 33 C9 56 E8 28 03 0B F6 5E 74 0C FE C1 E8 AD  // .3.V.(...^t.....
    13C0: 24 38 C1 75 EE 0C 01 C3 8D 9C D4 02 E8 2E 2B 38  // $8.u..........+8
    13D0: C8 74 0A 8A C1 E8 90 2A B0 02 E8 5E 04 32 C0 C3  // .t.....*...^.2..
    13E0: E8 0A 00 8D 9C D0 02 32 C9 E8 C0 2A C3 B5 00 8D  // .......2...*....
    13F0: 1D E8 09 2B 66 8B D0 8D 9C 02 03 E8 FF 2A 0B C0  // ...+f........*..
    1400: 74 2B 51 8B C8 8D 9C 06 03 E8 F1 2A 66 C1 E0 10  // t+Q........*f...
    1410: 8B C1 59 66 3B C2 75 04 B5 00 EB 11 B5 02 E8 DB  // ..Yf;.u.........
    1420: 03 E8 07 1F 75 07 E8 9C F9 75 02 B5 01 C3 E8 87  // ....u....u......
    1430: 03 8D 9C 40 03 B1 03 E8 72 2A E8 2A 07 8D 9C 40  // ...@....r*.*...@
    1440: 03 B1 02 E8 66 2A E8 F1 02 80 FD 00 75 0E E8 85  // ....f*......u...
    1450: 00 E8 B5 00 E8 EE 00 E8 D4 03 EB 38 E8 AA 03 E8  // ...........8....
    1460: CC 03 66 52 E8 20 03 0B D2 74 07 E8 57 1B 66 5A  // ..fR. ...t..W.fZ
    1470: EB 22 E8 87 03 E8 E3 1E 66 5A 51 E8 BC 02 80 FD  // ."......fZQ.....
    1480: 02 59 75 10 B5 04 66 81 FA 74 40 00 00 76 05 B5  // .Yu...f..t@..v..
    1490: 08 66 D1 EA 8D 9C 54 03 66 8B C2 E8 CA 29 8D 9C  // .f....T.f....)..
    14A0: 40 03 E8 58 2A 8A E5 E8 BE 29 E8 1D 01 8D 9C 48  // @..X*....).....H
    14B0: 03 32 C9 E8 F6 29 E8 C3 02 E8 7E 02 E8 09 1B 8D  // .2...)....~.....
    14C0: 9C 58 03 32 C9 E8 E4 29 E8 B1 02 E8 6C 02 8D 9C  // .X.2...)....l...
    14D0: 60 03 E8 65 1A C3 53 8D 9C 29 01 E8 1F 2A 66 33  // `..e..S..)...*f3
    14E0: D2 0A C0 75 05 BA 48 3F 5B C3 8A D0 66 B8 8C 0A  // ...u..H?[...f...
    14F0: 00 00 F7 E2 66 8B F8 E8 82 02 B3 00 E8 75 19 66  // ....f........u.f
    1500: 3B D7 76 03 66 8B D7 5B C3 B7 01 53 8D 9C 42 03  // ;.v.f..[...S..B.
    1510: E8 EA 29 8A C8 5B 66 52 E8 83 00 E8 EB 02 66 3B  // ..)..[fR......f;
    1520: D1 66 5A 76 09 D0 E7 E8 07 00 38 EF 72 DD 8A EF  // .fZv......8.r...
    1530: C3 53 8D 9C 2A 01 E8 C4 29 24 0F 8A E8 0A ED 75  // .S..*...)$.....u
    1540: 02 B5 01 5B C3 51 83 EC 08 8B EC 66 C7 46 00 48  // ...[.Q.....f.F.H
    1550: 3F 78 69 66 C7 46 04 F0 D2 00 00 E8 29 02 0B D2  // ?xif.F......)...
    1560: 74 03 E8 7F 1A 8A FD 53 8D 9C 42 03 E8 8E 29 8A  // t......S..B...).
    1570: C8 5B E8 61 FF 66 33 C0 8B 46 00 66 3B C2 73 19  // .[.a.f3..F.f;.s.
    1580: 66 8B D0 E8 18 00 E8 80 02 66 3B D1 72 05 83 C5  // f........f;.r...
    1590: 02 EB D4 66 33 D2 8B 56 00 83 C4 08 59 C3 66 52  // ...f3..V....Y.fR
    15A0: 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B C8  // R2.........f3...
    15B0: 5A 51 66 33 C0 8B C2 8A CF 66 F7 E1 66 C1 E0 03  // ZQf3.....f..f...
    15C0: 59 66 F7 F1 66 8B C8 66 5A C3 E8 BA 01 0B D2 74  // Yf..f..fZ......t
    15D0: 0B E8 16 00 0A ED 75 11 E8 FC 18 C3 B5 00 E8 1B  // ......u.........
    15E0: 02 E8 43 1D 75 03 E8 01 00 C3 B5 00 8D 9C 31 01  // ..C.u.........1.
    15F0: E8 0A 29 A8 01 74 02 B5 01 C3 53 E8 89 01 66 C1  // ..)..t....S...f.
    1600: E2 10 E8 77 01 8D 9C B8 02 E8 F1 28 8A E8 E8 95  // ...w.......(....
    1610: 18 8A EB 5B C3 57 53 53 E8 DF FF E8 5E 01 5B E8  // ...[.WSS....^.[.
    1620: 73 19 74 49 80 FD 00 75 24 53 E8 A9 FE E8 37 05  // s.tI...u$S....7.
    1630: 8A CD E8 FC FE 8A FD E8 64 FF 5B E8 BF 28 66 25  // ........d.[..(f%
    1640: FF FF 00 00 66 3B C8 73 21 32 DB EB 20 80 FD 02  // ....f;.s!2.. ...
    1650: 75 18 53 E8 A6 01 E8 DF 1C 5B 74 0E 8D 1D E8 9C  // u.S......[t.....
    1660: 28 3D 74 40 76 04 32 DB EB 03 80 CB 01 5B 5F C3  // (=t@v.2......[_.
    1670: 53 E8 63 01 8B D8 E8 20 F7 85 C3 5B C3 53 8B F0  // S.c.... ...[.S..
    1680: E8 AA 1E 23 F0 74 07 8B C6 E8 4B 1D 8B F3 5B C3  // ...#.t....K...[.
    1690: E8 08 00 74 05 E8 D8 FF 74 F6 C3 33 C0 0B F6 74  // ...t....t..3...t
    16A0: 03 E8 33 01 33 F6 E8 08 00 74 03 E8 CF FF 0B F6  // ..3.3....t......
    16B0: C3 57 53 E8 DD 20 0B C0 74 09 8B 1D 83 C7 02 3B  // .WS.. ..t......;
    16C0: C3 75 F7 8B 1D 83 FB FF 74 0E 83 C7 02 E8 5D 1E  // .u......t.....].
    16D0: 85 D8 74 EF 8B C3 EB 02 33 C0 0B C0 5B 5F C3 51  // ..t.....3...[_.Q
    16E0: 33 F6 8A E9 E8 A9 FF 74 07 E8 70 00 38 E9 75 F4  // 3......t..p.8.u.
    16F0: 0B F6 59 C3 33 C0 E8 B8 FF 74 13 E8 7F FF 8B DE  // ..Y.3....t......
    1700: B9 FB 00 E8 7A 21 83 C6 08 E8 A4 1D EB E8 BB F0  // ....z!..........
    1710: 16 B8 5A A5 E8 69 27 C3 56 51 E8 DF 00 8B CA 8B  // ..Z..i'.VQ......
    1720: FE 33 F6 E8 75 FF 74 0B 3B FE 74 F7 E8 CD 00 3B  // .3..u.t.;.t....;
    1730: D1 75 F0 8B FE 0B FF 59 5E C3 53 66 50 8D 9C 40  // .u.....Y^.SfP..@
    1740: 03 E8 B9 27 8A E8 66 58 5B C3 8D 9C 69 03 E8 AC  // ...'..fX[...i...
    1750: 27 C3 8D 9C 64 03 E8 A4 27 0B C0 C3 53 66 50 8D  // '...d...'...SfP.
    1760: 9C D4 02 E8 97 27 8A C8 66 58 5B C3 53 66 50 8D  // .....'..fX[.SfP.
    1770: 9C D5 02 E8 87 27 8A C8 66 58 5B C3 53 8D 5C 14  // .....'..fX[.S.\.
    1780: E8 7A 27 8B D0 5B C3 53 66 50 8D 5C 16 E8 6D 27  // .z'..[.SfP.\..m'
    1790: 8B D0 66 58 5B C3 53 66 50 8D 9C 50 03 E8 5D 27  // ..fX[.SfP..P..]'
    17A0: 66 8B D0 66 58 5B C3 53 66 50 8D 9C 54 03 E8 4C  // f..fX[.SfP..T..L
    17B0: 27 66 8B D0 66 58 5B C3 53 66 50 8D 5C 10 E8 3C  // 'f..fX[.SfP.\..<
    17C0: 27 8B C8 66 58 5B C3 66 50 53 8D 9C 41 03 E8 2C  // '..fX[.fPS..A..,
    17D0: 27 5B 8A D8 66 58 C3 53 8D 5C 08 E8 1F 27 5B C3  // '[..fX.S.\...'[.
    17E0: 53 50 8D 9C 4C 03 E8 14 27 8A C8 58 5B C3 53 50  // SP..L...'..X[.SP
    17F0: 8D 9C 4D 03 E8 06 27 8A C8 58 5B C3 53 50 8D 5C  // ..M...'..X[.SP.\
    1800: 0C E8 F9 26 8B D0 58 5B C3 53 66 50 8D 9C 00 03  // ...&..X[.SfP....
    1810: E8 EA 26 66 33 D2 8B D0 66 58 5B C3 8D 5C 04 E8  // ..&f3...fX[..\..
    1820: DB 26 C3 51 8D 5C 04 32 C9 E8 80 26 59 C3 8D 9C  // .&.Q.\.2...&Y...
    1830: 50 03 E8 C8 26 8B C2 E8 2E 26 C3 53 51 8A E8 E8  // P...&....&.SQ...
    1840: DA FF 24 FD 0A E8 E8 DA FF 59 5B C3 66 50 8D 9C  // ..$......Y[.fP..
    1850: D8 02 E8 A8 26 66 8B D0 66 58 C3 53 66 50 66 51  // ....&f..fX.SfPfQ
    1860: 66 8B C8 BB 00 00 E8 40 1B 66 23 C2 66 0B C1 E8  // f......@.f#.f...
    1870: 41 1B 66 59 66 58 5B C3 BB 00 00 E8 2B 1B 66 25  // A.fYfX[.....+.f%
    1880: 03 03 FF 00 C3 57 0B C0 75 10 33 F6 E8 0C FE 74  // .....W..u.3....t
    1890: 26 E8 25 00 A8 04 74 F4 EB 13 8B C8 E8 8E 1C 23  // &.%...t........#
    18A0: C1 74 14 E8 D7 FD E8 10 00 A8 04 74 0A 5F 8D 5C  // .t.........t._.\
    18B0: 28 E8 8B 05 0B F6 C3 5F C3 E8 FC FE 0A C9 74 72  // (......_......tr
    18C0: E8 39 FF E8 6E 1A 74 30 0A ED 74 10 8A CD B5 02  // .9..n.t0..t.....
    18D0: E8 78 1F B1 02 8D 9C 48 01 E8 D0 25 E8 92 02 A8  // .x.....H...%....
    18E0: 04 74 15 8D 5C 28 E8 A1 00 74 0D E8 0E FF E8 3A  // .t..\(...t.....:
    18F0: 1A 74 3F 80 FD 02 74 3A 8D 5C 28 E8 83 00 E8 62  // .t?...t:.\(....b
    1900: 0C 33 C9 50 8D 9C 28 01 E8 F2 25 66 0B C0 74 03  // .3.P..(...%f..t.
    1910: B9 00 08 58 0A C0 75 13 8D 5C 28 E8 8A 00 75 0B  // ...X..u..\(...u.
    1920: 80 CD 02 E8 64 00 74 03 80 CD 04 8D 9C 48 01 E8  // ....d.t......H..
    1930: 7A 25 E8 C7 FE E8 F3 19 75 43 E8 E5 22 0B FF 74  // z%......uC.."..t
    1940: 3C 66 2E 81 3D 00 FF FF FF 74 0F 06 0E 07 8D 5C  // <f..=....t.....\
    1950: 28 E8 EB 04 07 E8 EB 09 75 23 8D 5C 28 56 8B F7  // (.......u#.\(V..
    1960: B9 20 00 53 E8 77 1F 5B 5E E8 1E 00 74 0F 33 C9  // . .S.w.[^...t.3.
    1970: 8D 9C 48 01 E8 4D 25 80 CD 06 E8 2F 25 E8 F1 01  // ..H..M%..../%...
    1980: C3 51 B9 49 00 E8 F8 1E 59 C3 51 E8 1A 00 75 14  // .Q.I....Y.Q...u.
    1990: E8 AF 01 3C 01 75 0D B9 20 00 E8 27 00 75 05 80  // ...<.u.. ..'.u..
    19A0: C9 01 EB 02 33 C9 59 C3 53 E8 51 25 66 3D 00 FF  // ....3.Y.S.Q%f=..
    19B0: FF FF 75 0E 83 C3 04 E8 43 25 66 3D FF FF FF 00  // ..u.....C%f=....
    19C0: 75 00 5B C3 50 52 32 D2 E8 32 25 02 D0 02 D4 66  // u.[.PR2..2%....f
    19D0: C1 E8 10 02 D0 02 D4 83 C3 04 E2 EC 0A D2 5A 58  // ..............ZX
    19E0: C3 53 83 C3 14 E8 15 25 A8 80 74 04 B0 02 EB 02  // .S.....%..t.....
    19F0: B0 01 5B C3 8D 9C 4C 01 E8 1F 01 E8 73 01 B5 13  // ..[...L.....s...
    1A00: A8 08 75 0C E8 F5 FD 8A EA 80 FD 13 75 02 B5 03  // ..u.........u...
    1A10: 8D 9C B8 02 66 33 C0 8A C5 E8 4C 24 E8 B8 FD A9  // ....f3....L$....
    1A20: 11 00 74 37 B5 01 E8 22 01 E8 45 01 A8 04 75 17  // ..t7..."..E...u.
    1A30: 55 BD 00 00 B8 61 40 E8 F0 02 B8 45 40 E8 EA 02  // U....a@....E@...
    1A40: 5D B5 02 E8 8A 00 C3 E8 2F 01 B5 02 8D 5C 28 E8  // ]......./....\(.
    1A50: DD 00 75 02 B5 01 E8 77 00 EB 67 A9 C8 0E 74 3E  // ..u....w..g...t>
    1A60: E8 0E 01 A8 08 74 08 8D 5C 28 E8 B4 00 74 B5 B5  // .....t..\(...t..
    1A70: 02 E8 D7 00 E8 FA 00 A8 04 74 0B 8D 5C 28 E8 F8  // .........t..\(..
    1A80: 00 E8 F8 02 EB 0A 8D 9C 68 01 B8 3C 6A E8 7A 05  // ........h..<j.z.
    1A90: E8 D4 00 80 FD 00 75 37 B5 02 E8 C0 00 C3 A9 22  // ......u7......."
    1AA0: 00 74 2C B5 04 E8 A3 00 8D 9C 68 01 56 E8 F0 21  // .t,.......h.V..!
    1AB0: 8B F7 E8 58 03 5E E8 98 21 E8 A1 00 8D 5C 28 E8  // ...X.^..!....\(.
    1AC0: BE 21 8D 9C 68 01 E8 4F 03 66 8B D1 E8 EB 07 C3  // .!..h..O.f......
    1AD0: 8D 9C B4 02 B1 02 E8 D3 23 B5 02 E8 7F 00 C3 8D  // ........#.......
    1AE0: 9C 4C 01 E8 34 00 E8 88 00 A8 04 74 23 8D 5C 28  // .L..4......t#.\(
    1AF0: E8 86 00 E8 AA 21 8D 9C 68 01 06 0E 07 B9 07 00  // .....!..h.......
    1B00: E8 E7 1D 07 E8 60 00 E8 F2 FC 8D 5C 28 E8 9B 21  // .....`.....\(..!
    1B10: 8D 5C 28 E8 4A 21 E8 DB FE C3 B9 61 00 E8 60 1D  // .\(.J!.....a..`.
    1B20: C3 53 81 C3 05 01 E8 D4 23 24 06 3C 02 5B C3 E8  // .S......#$.<.[..
    1B30: 10 00 3D 01 04 75 0A 53 83 C3 18 E8 BF 23 5B A8  // ..=..u.S.....#[.
    1B40: 01 C3 53 83 C3 12 E8 B4 23 5B C3 8D 9C B4 02 32  // ..S.....#[.....2
    1B50: C9 E8 58 23 C3 8D 9C B4 02 E8 A1 23 C3 8D 9C B4  // ..X#.......#....
    1B60: 02 B1 01 E8 46 23 C3 8D 9C B4 02 B1 01 E8 54 23  // ....F#........T#
    1B70: C3 8D 9C 48 01 E8 85 23 C3 55 57 51 B9 08 00 BD  // ...H...#.UWQ....
    1B80: 00 00 BB 08 00 2B D9 D1 E3 8D 58 4E E8 6E 23 E8  // .....+....XN.n#.
    1B90: 98 01 E2 EE 8D 5C 4B E8 63 23 B9 04 00 8B D0 BF  // .....\K.c#......
    1BA0: 9E 1B 85 55 06 74 17 66 8B 05 8D 9A F4 01 E8 B7  // ...U.t.f........
    1BB0: 22 8B 45 04 8D 9A F8 01 E8 C5 22 83 C5 08 83 C7  // ".E.......".....
    1BC0: 08 E2 DF 8D 7C 5E B9 04 00 33 ED 8B DF E8 2D 23  // ....|^...3....-#
    1BD0: 0B C0 74 09 E8 12 01 E8 4C 00 83 C5 1C 83 C7 12  // ..t.....L.......
    1BE0: E2 E9 32 ED E8 76 FF 8D 5C 28 E8 55 FF 3D 01 04  // ..2..v..\(.U.=..
    1BF0: 75 10 83 C3 14 E8 05 23 24 70 C0 E8 04 8A E8 E8  // u......#$p......
    1C00: 5B FF 59 5F 5D C3 20 03 58 02 3C 00 01 00 00 04  // [.Y_]. .X.<.....
    1C10: 00 03 3C 00 00 08 00 05 00 04 4B 00 00 01 80 02  // ..<.......K.....
    1C20: E0 01 3C 00 20 00 51 8D 1D E8 D1 22 8D 9A 68 01  // ..<. .Q...."..h.
    1C30: E8 4D 22 8D 5D 02 E8 C4 22 8D 9A 6A 01 E8 89 00  // .M".]..."..j....
    1C40: 8D 5D 05 E8 B7 22 8D 9A 6E 01 E8 7C 00 8D 5D 08  // .]..."..n..|..].
    1C50: E8 AA 22 8B C8 8A DC 66 C1 C8 10 8A D0 80 E2 0F  // .."....f........
    1C60: 8A F0 C0 EE 04 8A EC C0 E5 06 8A FC C0 E7 04 80  // ................
    1C70: E7 03 80 E4 0F C0 E4 04 0A D4 80 E2 3F 80 E4 C0  // ............?...
    1C80: C0 EC 02 0A F4 8B C3 8D 9A 74 01 E8 F2 21 8D 9A  // .........t...!..
    1C90: 72 01 8B C1 E8 E9 21 8D 9A 76 01 33 C0 8A C6 E8  // r.....!..v.3....
    1CA0: DE 21 8D 9A 78 01 33 C0 8A C2 E8 D3 21 8D 5D 0C  // .!..x.3.....!.].
    1CB0: E8 4A 22 8D 9A 7A 01 E8 0F 00 8D 5D 0F E8 3D 22  // .J"..z.....]..="
    1CC0: 8D 9A 7E 01 E8 B9 21 59 C3 8B C8 8A D4 66 C1 C8  // ..~...!Y.....f..
    1CD0: 10 8A F0 80 E6 0F 8A E8 C0 ED 04 8B C1 E8 A0 21  // ...............!
    1CE0: 83 C3 02 8B C2 E8 98 21 C3 8D 5D 11 E8 0E 22 8A  // .......!..]...".
    1CF0: E0 BA 06 02 C0 E8 07 74 03 80 CA 80 8A C4 C0 E8  // .......t........
    1D00: 03 24 03 3C 02 75 03 80 CA 40 3C 03 75 12 8A C4  // .$.<.u...@<.u...
    1D10: D0 E8 A8 01 74 03 80 E2 FD A8 02 74 03 80 E2 FB  // ....t......t....
    1D20: 8B C2 8D 9A 80 01 E8 57 21 C3 3C 01 74 3D 8B D0  // .......W!.<.t=..
    1D30: 0F B6 C6 24 3F 04 3C 8D 9A F8 01 E8 42 21 0F B6  // ...$?.<.....B!..
    1D40: C2 83 C0 1F C1 E0 03 8D 9A F4 01 E8 32 21 0F B6  // ............2!..
    1D50: DE C1 EB 06 C1 E3 02 2E F7 A7 06 1D 2E F7 B7 04  // ................
    1D60: 1D 8D 9A F6 01 E8 18 21 83 C5 08 C3 01 00 01 00  // .......!........
    1D70: 04 00 03 00 05 00 04 00 10 00 09 00 57 8D 9C 68  // ............W..h
    1D80: 01 8B FB 8B DF E8 90 00 0B C9 74 44 8D 5D 18 E8  // ..........tD.]..
    1D90: 6B 21 A8 80 74 0D 8B DF 56 8D 36 6A 1D E8 6D 00  // k!..t...V.6j..m.
    1DA0: 5E EB 28 66 8B D1 E8 11 05 8D 9C A6 00 E8 4D 21  // ^.(f..........M!
    1DB0: 3C 01 75 17 66 81 F9 80 07 38 04 74 09 66 81 F9  // <.u.f....8.t.f..
    1DC0: 00 05 D0 02 75 05 B5 03 E8 80 FD 83 C7 1C EB B3  // ....u...........
    1DD0: 5F C3 8C 0A D0 02 8A 00 E0 01 2D 00 10 00 3E 00  // _.........-...>.
    1DE0: 09 00 06 00 00 00 00 00 00 00 06 00 00 00 50 53  // ..............PS
    1DF0: 51 B9 07 00 53 8B DA E8 03 21 83 F8 00 5B 74 09  // Q...S....!...[t.
    1E00: 66 C1 E3 10 8B DA E8 BC 1A 59 5B 58 C3 51 53 B9  // f........Y[X.QS.
    1E10: 07 00 E8 C9 1A 5B 59 C3 66 50 53 83 C3 06 E8 DC  // .....[Y.fPS.....
    1E20: 20 5B 8B C8 66 C1 E1 10 53 83 C3 02 E8 CE 20 8B  //  [..f...S..... .
    1E30: C8 5B 66 58 C3 8D 9C 48 01 32 C9 E8 6E 20 C3 57  // .[fX...H.2..n .W
    1E40: B9 20 00 E8 A4 1A 5F C3 E8 0A FD 3C 01 75 71 8D  // . ...._....<.uq.
    1E50: 9C B6 02 E8 A7 20 A8 02 0F 84 89 00 66 C1 CE 10  // ..... ......f...
    1E60: E8 1C 04 66 C1 CE 10 0A C0 75 26 8D 9C 4C 01 66  // ...f.....u&..L.f
    1E70: B8 C4 09 00 00 E8 F0 1F 8D 9C 4C 01 E8 96 F7 0F  // ..........L.....
    1E80: 85 88 00 8D 9C 4C 01 B8 3C 6A E8 7D 01 0C 01 EB  // .....L..<j.}....
    1E90: 7A 8D 9C 68 01 B0 00 E8 36 01 75 07 B0 00 E8 DF  // z..h....6.u.....
    1EA0: 00 74 68 8D 9C 68 01 B0 01 E8 24 01 75 52 B0 01  // .th..h....$.uR..
    1EB0: E8 B0 00 75 56 B0 00 E8 A9 00 EB 4F 0B F6 EB 4B  // ...uV......O...K
    1EC0: 3C 04 74 21 3C 03 74 1D 66 C1 CE 10 E8 B0 03 66  // <.t!<.t.f......f
    1ED0: C1 CE 10 0A C0 74 07 B0 01 E8 A4 00 75 2D B0 00  // .....t......u-..
    1EE0: E8 9D 00 75 26 8D BC 68 01 8D 1D E8 0F 20 0B C0  // ...u&..h..... ..
    1EF0: 74 19 8B DF B0 00 E8 D7 00 75 05 83 C7 1C EB E9  // t........u......
    1F00: 8B D3 8D 9C 4C 01 E8 E5 FE 0B F6 C3 57 53 51 E8  // ....L.......WSQ.
    1F10: A8 18 3B 55 02 75 18 66 C1 CA 10 8B DA 66 C1 CA  // ..;U.u.f.....f..
    1F20: 10 3B 5D 06 75 09 0A C0 74 0E 3A 45 1B 74 09 83  // .;].u...t.:E.t..
    1F30: C7 1C E2 DE 33 D2 EB 02 8B D7 0B D2 59 5B 5F C3  // ....3.......Y[_.
    1F40: 51 66 52 E8 74 18 3A 65 1A 75 09 0A C0 74 0E 3A  // QfR.t.:e.u...t.:
    1F50: 45 1B 74 09 83 C7 1C E2 ED 33 FF EB 00 0B FF 66  // E.t......3.....f
    1F60: 5A 59 C3 51 E8 53 18 56 8D 9C 4C 01 8B F7 E8 9C  // ZY.Q.S.V..L.....
    1F70: FE 5E E8 5B 00 75 07 83 C7 1C E2 EB 33 FF 59 C3  // .^.[.u......3.Y.
    1F80: 8D BC F4 01 8A C8 8D 1D E8 72 1F 0B C0 74 40 66  // .........r...t@f
    1F90: 50 E8 C1 FB 3C 01 66 58 74 05 3D 40 06 73 2B 66  // P...<.fXt.=@.s+f
    1FA0: 8B D0 8D 5D 04 E8 55 1F E8 61 FF 74 1D 8D 9C 4C  // ...]..U..a.t...L
    1FB0: 01 56 8B F2 E8 56 FE 5E 53 8D 9C 62 01 33 C0 E8  // .V...V.^S..b.3..
    1FC0: BE 1E 5B 8A C1 E8 08 00 75 05 83 C7 08 EB B7 C3  // ..[.....u.......
    1FD0: 66 51 50 53 66 C1 CE 10 8B DE 66 C1 CE 10 E8 1C  // fQPSf.....f.....
    1FE0: 1F 5B 66 8B D0 E8 30 FE 58 3C 01 75 0A 66 3B CA  // .[f...0.X<.u.f;.
    1FF0: 75 13 E8 20 F6 75 10 3B CA 72 0A 66 3B CA 72 05  // u.. .u.;.r.f;.r.
    2000: E8 12 F6 75 02 32 C0 66 59 C3 56 57 E8 31 FF 8B  // ...u.2.fY.VW.1..
    2010: F7 E8 F9 FD 5F 5E C3 66 50 53 66 51 52 57 56 51  // ...._^.fPSfQRWVQ
    2020: 8B DE B9 08 00 E8 58 18 59 8D 5C 08 8B C1 66 C1  // ......X.Y.\...f.
    2030: E0 10 8A C2 E8 31 1E F6 C2 03 75 24 8B C1 24 7F  // .....1....u$..$.
    2040: BF FA 20 80 3D FF 0F 84 0F 01 3A 05 75 0D 66 8B  // .. .=.....:.u.f.
    2050: 45 01 66 B9 00 05 02 00 E9 96 00 83 C7 05 EB E3  // E.f.............
    2060: F6 C2 01 74 25 8B C1 E8 70 01 0F 84 EB 00 33 C9  // ...t%...p.....3.
    2070: 8A CC 8A D0 0A C0 75 12 8D 5C 08 66 25 FF FF 00  // ......u..\.f%...
    2080: 00 66 C1 E0 08 E8 E0 1D EB B2 8A E1 8A CA 80 E1  // .f..............
    2090: 0C C0 E9 02 80 E2 F0 C0 EA 04 8A EA 80 FC 70 72  // ..............pr
    20A0: 2A 80 FC 75 73 25 80 EC 70 8A C4 32 E4 50 E8 32  // *..us%..p..2.P.2
    20B0: 02 8B D8 58 38 D8 72 05 33 C0 E9 9C 00 E8 2A 02  // ...X8.r.3.....*.
    20C0: E8 3A 1E 0B C0 0F 84 90 00 EB 1B 32 C0 E8 70 FE  // .:.........2..p.
    20D0: 0F 84 85 00 8D 5C 16 8B 05 E8 A4 1D 8B 45 06 66  // .....\.......E.f
    20E0: C1 E0 10 8B 45 02 50 E8 1D 0B 66 C1 E1 10 8B C8  // ....E.P...f.....
    20F0: 58 8D 1C E8 72 1D 66 50 8D 5C 04 66 8B C1 E8 67  // X...r.fP.\.f...g
    2100: 1D 66 58 66 C1 E8 10 66 81 E1 FF FF 00 00 66 F7  // .fXf...f......f.
    2110: E1 66 50 8D 5C 06 E8 E4 1D 8B C8 66 58 66 D3 E0  // .fP.\......fXf..
    2120: 66 C1 E8 10 40 8D 5C 14 E8 55 1D BF 5A 21 83 F9  // f...@.\..U..Z!..
    2130: 01 74 11 BF 62 21 81 F9 01 01 74 08 BF 6A 21 83  // .t..b!....t..j!.
    2140: F9 02 75 15 8D 5C 0C 66 8B 05 E8 1B 1D 8D 5C 10  // ..u..\.f......\.
    2150: 66 8B 45 04 E8 11 1D 0B DB 5E 5F 5A 66 59 5B 66  // f.E......^_ZfY[f
    2160: 58 C3 00 40 01 90 01 01 40 01 90 01 02 80 02 90  // X..@....@.......
    2170: 01 03 80 02 90 01 04 40 01 90 01 05 40 01 90 01  // .......@....@...
    2180: 06 80 02 90 01 07 D0 02 5E 01 0D 40 01 90 01 0E  // ........^..@....
    2190: 80 02 90 01 0F 80 02 5E 01 10 80 02 5E 01 11 80  // .......^....^...
    21A0: 02 E0 01 12 80 02 E0 01 13 80 02 90 01 23 20 04  // .............# .
    21B0: 90 01 32 20 04 B0 02 33 20 04 C0 02 62 80 02 E0  // ..2 ...3 ...b...
    21C0: 01 FF 05 0A 05 05 05 00 00 00 05 0B 06 05 05 00  // ................
    21D0: 00 00 08 10 08 08 08 00 00 00 56 E8 35 1A 80 E4  // ..........V.5...
    21E0: 01 3B 04 74 09 83 C6 04 E2 F7 33 C0 EB 05 8B 44  // .;.t......3....D
    21F0: 02 0B C0 5E C3 57 53 50 E8 18 1A 83 E9 0F E8 E2  // ...^.WSP........
    2200: 00 83 F8 05 76 03 B8 05 00 03 C8 D1 E0 03 C8 FB  // ....v...........
    2210: A5 83 C6 02 E2 FA B8 FF FF AB 58 5B 5F C3 66 53  // ..........X[_.fS
    2220: 51 66 52 E8 41 00 E8 77 00 66 C1 E8 10 66 0F B7  // QfR.A..w.f...f..
    2230: D8 66 B8 00 00 00 01 66 D3 E8 66 33 D2 66 F7 F3  // .f.....f..f3.f..
    2240: E8 C4 09 66 5A 59 66 5B C3 53 66 50 BB 07 00 E8  // ...fZYf[.SfP....
    2250: 57 11 0A C0 66 58 5B C3 53 66 50 BB 07 00 E8 48  // W...fX[.SfP....H
    2260: 11 A8 01 66 58 5B C3 53 66 50 8D 5C 06 E8 8D 1C  // ...fX[.SfP.\....
    2270: 8A C8 66 58 5B C3 51 B9 08 00 E8 48 16 59 C3 53  // ..fX[.Q....H.Y.S
    2280: 8D 5C 08 E8 77 1C 24 03 5B C3 8D 5C 09 E8 6D 1C  // .\..w.$.[..\..m.
    2290: C3 51 53 B1 01 8A E8 8D 5C 08 E8 0F 1C 5B 59 C3  // .QS.....\....[Y.
    22A0: 53 8D 1C E8 57 1C 5B C3 53 8D 5C 04 E8 4E 1C 5B  // S...W.[.S.\..N.[
    22B0: C3 53 8D 5C 16 E8 45 1C 5B C3 53 66 52 33 C0 E8  // .S.\..E.[.SfR3..
    22C0: 4A FC 66 5A 75 1B E8 34 00 74 16 E8 15 00 40 83  // J.fZu..4.t....@.
    22D0: F8 05 73 0D E8 91 1B 48 E8 0F 00 66 8B C2 E8 87  // ..s....H...f....
    22E0: 1B 5B C3 BB 00 1E E8 14 1C C3 BB 08 1E C1 E0 03  // .[..............
    22F0: 03 D8 C3 BB 00 1E B9 32 00 E8 84 15 C3 51 E8 E2  // .......2.....Q..
    2300: FF 0B C0 74 12 8B C8 BB 08 1E E8 F0 1B 66 3B C2  // ...t.........f;.
    2310: 74 07 83 C3 08 E2 F3 0B DB 59 C3 B3 01 E8 BE 19  // t........Y......
    2320: 75 03 E8 4B E4 C3 B3 02 E8 B3 19 75 03 E8 40 E4  // u..K.......u..@.
    2330: C3 B3 0E E8 3A E4 C3 B3 89 E8 34 E4 C3 B3 1C E8  // ....:.....4.....
    2340: 2E E4 C3 B3 1B E8 28 E4 C3 E8 E9 EA 51 B9 0B 01  // ......(.....Q...
    2350: E8 F8 14 59 C3 B8 22 06 E8 EE FF C3 B8 3F 06 E8  // ...Y.."......?..
    2360: E7 FF C3 B8 20 06 E8 E0 FF C3 B8 2E 06 E8 D9 FF  // .... ...........
    2370: C3 B8 2A 06 E8 D2 FF C3 B8 3C 06 E8 CB FF C3 B8  // ..*......<......
    2380: 3E 06 E8 C4 FF C3 B8 21 06 E8 BD FF C3 00 C3 00  // >......!........
    2390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 66  // ...............f
    23A0: 50 66 52 0F 31 66 A3 2B 23 66 89 16 27 23 66 5A  // PfR.1f.+#f..'#fZ
    23B0: 66 58 C3 66 50 66 52 0F 31 66 A3 33 23 66 89 16  // fX.fPfR.1f.3#f..
    23C0: 2F 23 66 5A 66 58 C3 00 BB 20 DF E8 B3 3D E8 8B  // /#fZfX... ...=..
    23D0: F3 B5 01 E8 38 07 C3 BB 00 DF E8 A4 3D E8 7C F3  // ....8.......=.|.
    23E0: B5 00 E8 29 07 C3 80 F9 00 75 0A E8 86 14 8A C8  // ...).....u......
    23F0: B5 02 E8 28 08 0B F6 74 29 E8 60 F3 B5 01 E8 21  // ...(...t).`....!
    2400: 07 56 33 F6 B5 00 E8 6A 06 5E B5 01 E8 D1 F3 E8  // .V3....j.^......
    2410: 0B 08 E8 C4 08 E8 44 F3 8D 9C 00 03 E8 0A 07 E8  // ......D.........
    2420: 53 07 66 C1 CE 10 B5 01 E8 48 06 E8 5C FE A8 40  // S.f......H..\..@
    2430: 75 07 32 C0 B5 01 E8 AD 07 66 C1 CE 10 C3 E8 1B  // u.2......f......
    2440: F3 B5 01 E8 A3 06 B5 00 E8 D7 06 E8 3A 07 B1 0F  // ............:...
    2450: E8 BC 0B B1 10 E8 B7 0B E8 26 00 C3 E8 75 00 E8  // .........&...u..
    2460: 0A F3 B5 00 E8 82 06 B5 00 E8 B6 06 E8 7F F3 E8  // ................
    2470: 02 14 38 C1 74 0A 80 F9 08 74 05 B5 03 E8 9D 07  // ..8.t....t......
    2480: C3 53 66 50 BB 02 00 E8 1F 0F 66 A9 00 00 01 00  // .SfP......f.....
    2490: 66 58 5B 75 3E E8 EF F2 0B D2 74 0C E8 7D F3 3C  // fX[u>.....t..}.<
    24A0: 01 74 05 B1 0F E8 A1 0B B1 0C E8 75 00 B1 01 E8  // .t.........u....
    24B0: 03 0C E8 85 F2 80 FD 00 75 0D E8 FA 01 B1 0D E8  // ........u.......
    24C0: 4D 0B B1 03 E8 5B 00 E8 BD F2 0B D2 74 05 B1 01  // M....[......t...
    24D0: E8 76 0B C3 E8 B0 F2 0B D2 74 05 B1 00 E8 69 0B  // .v.......t....i.
    24E0: B1 02 E8 3D 00 E8 34 F3 A8 01 74 0D E8 4B F2 80  // ...=..4...t..K..
    24F0: FD 00 75 05 B0 02 E8 26 04 B1 00 E8 B7 0B B1 0D  // ..u....&........
    2500: E8 1F 00 C3 B1 07 E8 AC 0B E8 7B F2 0B D2 75 0C  // ..........{...u.
    2510: E8 E9 F2 E8 11 0E 75 09 E8 D1 0C C3 B1 07 E8 28  // ......u........(
    2520: 0B C3 E8 D7 F2 E8 FF 0D 75 24 51 E8 87 0B 59 80  // ........u$Q...Y.
    2530: F9 0C 75 1A 33 D2 56 83 C6 08 E8 28 0E 5E 0A C0  // ..u.3.V....(.^..
    2540: 75 0C B9 0A 00 E8 B9 13 42 83 FA 1E 75 E8 C3 E8  // u.......B...u...
    2550: 35 F2 0B D2 74 06 B1 12 E8 EE 0A C3 E8 1D F2 E8  // 5...t...........
    2560: 8D 0A C3 56 83 C6 08 E8 9C 0D 5E E8 19 F2 0B D2  // ...V......^.....
    2570: 74 03 E8 71 09 80 FD 01 0F 84 D1 00 80 FD 02 0F  // t..q............
    2580: 85 F2 00 B1 0C E8 9A FF 56 83 C6 08 E8 D6 0D 5E  // ........V......^
    2590: 0A C0 0F 84 DF 00 E8 DF 00 0A DB 0F 85 D6 00 8D  // ................
    25A0: 9C 35 01 E8 57 19 A8 01 74 03 E8 7F 03 E8 D7 F1  // .5..W...t.......
    25B0: 0B D2 74 05 B1 14 E8 90 0A 66 33 C9 E8 F9 F1 66  // ..t......f3....f
    25C0: BA 50 01 40 50 66 C1 C9 10 8A C1 66 C1 C9 10 E8  // .P.@Pf.....f....
    25D0: 8D 0C 0F 85 9F 00 66 BA 50 01 50 4F 52 E8 A7 F1  // ......f.P.POR...
    25E0: 80 FA 22 5A 74 0D 8D 9C 2D 01 E8 10 19 24 06 3C  // .."Zt...-....$.<
    25F0: 02 75 02 B6 02 8D 5C 28 66 C1 C9 10 03 D9 66 C1  // .u....\(f.....f.
    2600: C9 10 E8 5A 0C 75 6E 8A DF 32 FF 66 C1 C9 10 03  // ...Z.un..2.f....
    2610: CB 66 C1 C9 10 66 BA 50 01 10 30 33 DB E8 3F 0C  // .f...f.P..03..?.
    2620: 75 53 66 C1 C9 10 8B C1 66 C1 C9 10 0B C0 74 45  // uSf.....f.....tE
    2630: 83 F8 10 75 0F 8D 5C 28 E8 C2 18 66 0B C0 0F 85  // ...u..\(...f....
    2640: 7D FF EB 31 3D 80 00 0F 82 74 FF EB 25 E8 68 F1  // }..1=....t..%.h.
    2650: 8A E9 B1 A0 BA 00 80 BF 32 00 8D 5C 28 E8 D4 0B  // ........2..\(...
    2660: 80 FF 01 74 0D B1 A2 8D 5C 28 E8 C7 0B 80 FF 01  // ...t....\(......
    2670: 75 03 B0 00 C3 B0 01 C3 E8 2B 00 74 0C B0 01 E8  // u........+.t....
    2680: 9D 02 75 21 E8 1F 00 75 1C 66 BA 0C 00 90 43 8D  // ..u!...u.f....C.
    2690: 9C 30 01 E8 C9 0B 66 BA 20 00 90 41 8D 9C 34 01  // .0....f. ..A..4.
    26A0: E8 BC 0B 33 DB C3 E8 0F F1 66 BA 00 00 90 47 8D  // ...3.....f....G.
    26B0: 9C 28 01 E8 A9 0B C3 E8 62 F1 3C 01 75 0E E8 ED  // .(......b.<.u...
    26C0: 02 80 FD 01 75 06 B5 02 E8 12 03 C3 8D 9C AC 03  // ....u...........
    26D0: B9 10 00 E8 AA 11 B0 01 E8 44 02 74 08 B5 04 E8  // .........D.t....
    26E0: 11 03 E9 19 01 B1 08 E8 25 09 E8 66 02 B1 09 E8  // ........%..f....
    26F0: 1D 09 E8 AC 01 8D 9C B8 03 66 33 C0 E8 69 17 E8  // .........f3..i..
    2700: 47 01 B9 90 01 E8 EE 11 B0 01 E8 F7 01 B5 02 E8  // G...............
    2710: D5 02 E8 5B 01 E8 E7 02 E8 C7 01 B5 03 E8 C7 02  // ...[............
    2720: 33 C9 E8 E7 00 F6 C5 01 75 2E B5 02 E8 B8 02 E8  // 3.......u.......
    2730: 07 01 F6 C5 04 74 08 B5 01 E8 B7 02 E9 BF 00 8A  // .....t..........
    2740: FD 80 E7 03 E8 CF 00 80 E3 03 38 FB 75 07 E8 33  // ..........8.u..3
    2750: 01 0F 84 A9 00 E8 54 01 FE C1 E8 6A F0 38 D9 75  // ......T....j.8.u
    2760: C1 8D 9C AC 03 E8 95 17 3C 03 74 05 E8 DA 00 EB  // ........<.t.....
    2770: A1 8D 9C B0 03 66 33 C0 E8 ED 16 8D 9C 2A 01 E8  // .....f3......*..
    2780: 7B 17 A8 40 74 0C B1 13 E8 84 08 B0 03 E8 74 01  // {..@t.........t.
    2790: EB 0A B1 0A E8 78 08 B0 02 E8 68 01 B5 04 E8 46  // .....x....h....F
    27A0: 02 E8 CC 00 E8 58 02 E8 38 01 B5 05 E8 38 02 33  // .....X..8....8.3
    27B0: C9 E8 58 00 80 FD 07 75 05 E8 73 00 75 27 51 B5  // ..X....u..s.u'Q.
    27C0: 04 E8 23 02 59 F6 C5 01 75 07 B5 03 E8 24 02 EB  // ..#.Y...u....$..
    27D0: 2D E8 65 00 8A D5 E8 D3 00 E8 5D 00 38 EA 75 05  // -.e.......].8.u.
    27E0: E8 A1 00 74 19 FE C1 E8 DD EF 38 D9 75 C3 8D 9C  // ...t......8.u...
    27F0: AC 03 E8 08 17 3C 04 75 05 E8 4D 00 EB A3 B0 00  // .....<.u..M.....
    2800: E8 01 01 B1 0B E8 07 08 E8 A3 01 C3 8D 9C C0 03  // ................
    2810: E8 0F 00 8A E8 C3 53 8D 9C C4 03 E8 04 00 5B 8A  // ......S.......[.
    2820: D8 C3 51 E8 D7 16 C0 E1 02 D3 E8 24 0F 59 C3 8D  // ..Q........$.Y..
    2830: 9C C2 03 E8 C7 16 A8 01 C3 8D 9C B8 03 E8 84 16  // ................
    2840: C3 8D 9C B8 03 E8 64 16 C3 33 C9 33 D2 E8 E9 FF  // ......d..3.3....
    2850: 38 D5 76 02 8A D5 FE C1 E8 6C EF 38 D9 72 EE 33  // 8.v......l.8.r.3
    2860: C9 8A EA 8D 9C 5C 03 E8 42 16 B1 0B E8 46 08 C3  // .....\..B....F..
    2870: E8 45 EF 8D 9C B8 03 E8 83 16 66 BA 03 01 80 83  // .E........f.....
    2880: E8 DC 09 C3 51 53 8D 9C B0 03 E8 37 16 FE C5 E8  // ....QS.....7....
    2890: 1A 16 80 FD 06 72 07 B5 02 E8 57 01 33 C9 5B 59  // .....r....W.3.[Y
    28A0: C3 66 33 C0 8D 9C B0 03 E8 BD 15 C3 32 ED E8 65  // .f3.........2..e
    28B0: FF 80 E3 0C C0 EB 02 B7 03 2A FB C0 E3 03 8A EB  // .........*......
    28C0: 80 FB 18 72 03 80 CD 20 E8 4B FF 80 E3 03 38 FB  // ...r... .K....8.
    28D0: 72 02 8A DF 80 FB 03 75 03 80 CD 04 0A EB E8 60  // r......u.......`
    28E0: FF C3 E8 D3 EE 8D 9C C0 03 66 BA 02 02 90 45 E8  // .........f....E.
    28F0: 6D 09 C3 E8 C2 EE 66 BA 00 01 90 42 8D 9C B4 03  // m.....f....B....
    2900: E8 5C 09 C3 E8 B1 EE 66 BA 02 01 80 50 E8 4F 09  // .\.....f....P.O.
    2910: C3 E8 93 EE 8B C2 66 33 D2 B9 8C 0A F7 F1 C3 E8  // ......f3........
    2920: 96 EE 66 BA 00 06 80 50 E8 34 09 C3 E8 89 EE 66  // ..f....P.4.....f
    2930: BA 11 01 80 50 B0 04 E8 25 09 C3 E8 7A EE 66 BA  // ....P...%...z.f.
    2940: 00 06 90 40 8D 9C C8 03 E8 14 09 8D 9C C8 03 E8  // ...@............
    2950: AB 15 C3 E8 BB FF E8 6E EE 8A E3 80 CC 80 50 E8  // .......n......P.
    2960: 56 EE 58 66 BA 00 01 80 61 E8 F3 08 33 C9 E8 E1  // V.Xf....a...3...
    2970: ED 0B C0 74 02 B5 10 8D 9C BC 03 E8 2E 15 8A C5  // ...t............
    2980: E8 35 EE 66 BA 07 01 80 50 E8 D3 08 E8 6D EE E8  // .5.f....P....m..
    2990: 99 09 75 19 8D 9C 48 03 E8 62 15 0A C0 74 0E E8  // ..u...H..b...t..
    29A0: 16 EE 66 BA 0A 01 80 50 B0 01 E8 B2 08 C3 E8 42  // ..f....P.......B
    29B0: FF E8 2E FF E8 84 FF 3C 01 75 1C E8 71 FE 74 17  // .......<.u..q.t.
    29C0: 33 C9 E8 47 FE 80 FD 07 75 0D FE C1 E8 F8 ED 38  // 3..G....u......8
    29D0: D9 75 EF B5 01 EB 02 B5 00 E8 01 00 C3 8D 9C AE  // .u..............
    29E0: 03 B1 02 E8 C6 14 C3 51 8D 9C AC 03 32 C9 E8 BB  // .......Q....2...
    29F0: 14 59 C3 51 8D 9C AC 03 B1 01 E8 AF 14 59 C3 8D  // .Y.Q.........Y..
    2A00: 9C 32 01 E8 F7 14 0A C0 75 15 B9 64 00 8D 9C AC  // .2......u..d....
    2A10: 03 E8 E9 14 3C 02 74 03 B9 90 01 E8 D8 0E C3 32  // ....<.t........2
    2A20: E4 B1 04 33 D2 F6 E1 8B C8 E8 D5 0E C3 51 8D 5C  // ...3.........Q.\
    2A30: 14 E8 C9 14 66 C1 E0 10 E8 88 01 59 C3 33 C9 E8  // ....f......Y.3..
    2A40: 2C 0E 38 C1 73 05 B5 00 E8 A5 00 B5 00 E8 99 00  // ,.8.s...........
    2A50: FE C1 E8 1C 0E 38 C1 72 E6 32 C9 8A E9 E8 14 0E  // .....8.r.2......
    2A60: 38 C1 74 05 B5 03 E8 B4 01 FE C1 E8 FD 0D 38 C1  // 8.t...........8.
    2A70: 72 E9 C3 83 EC 0C 8B EC 0B F6 74 29 E8 21 F8 66  // r.........t).!.f
    2A80: C1 C8 10 80 FD 10 75 06 8D 5C 18 E8 6F 14 66 89  // ......u..\..o.f.
    2A90: 46 00 8D 5C 04 E8 65 14 66 89 46 04 8D 5C 08 E8  // F..\..e.f.F..\..
    2AA0: 5B 14 88 46 0A 89 4E 08 8C D0 66 C1 E0 10 8B C4  // [..F..N...f.....
    2AB0: BB 2B 00 E8 17 0D 83 C4 0C C3 33 DB 83 EC 08 8B  // .+........3.....
    2AC0: EC 89 5E 00 8C D0 66 C1 E0 10 8B C4 BB 01 00 E8  // ..^...f.........
    2AD0: FB 0C 8B EC 8B 4E 00 8B 56 02 66 8B 46 04 83 C4  // .....N..V.f.F...
    2AE0: 08 C3 BB 25 00 E8 0F 00 C3 BB 23 00 E8 08 00 C3  // ...%......#.....
    2AF0: BB 0D 00 E8 01 00 C3 83 EC 04 8B EC 89 4E 00 8C  // .............N..
    2B00: D0 66 C1 E0 10 8B C4 E8 C3 0C 83 C4 04 C3 BB 22  // .f............."
    2B10: 00 E8 E3 FF 80 FD 01 74 08 B5 01 BB 06 00 E8 D6  // .......t........
    2B20: FF C3 BB 2C 00 E8 CF FF C3 E8 D1 13 66 A9 00 00  // ...,........f...
    2B30: FF FF 74 40 83 EC 18 8B EC 55 51 B9 04 00 83 C3  // ..t@.....UQ.....
    2B40: 02 E8 B9 13 66 89 46 00 83 C5 04 83 C3 04 E2 F1  // ....f.F.........
    2B50: 83 C3 04 E8 A7 13 66 C1 C8 10 66 89 46 00 59 5D  // ......f...f.F.Y]
    2B60: 88 4E 14 8C D0 66 C1 E0 10 8B C4 BB 31 00 E8 5C  // .N...f......1..\
    2B70: 0C 83 C4 18 C3 E8 E4 EB 8D 9C D0 02 E8 7E 13 8A  // .............~..
    2B80: E8 BB 21 00 E8 70 FF C3 8D 9C 3C 03 E8 6E 13 8A  // ..!..p....<..n..
    2B90: F8 E8 A6 EB 8A DD E8 C3 EB E8 60 EC E8 8C 07 75  // ..........`....u
    2BA0: 02 B3 01 83 EC 04 8B EC 88 4E 00 88 7E 01 88 5E  // .........N..~..^
    2BB0: 02 8C D0 66 C1 E0 10 8B C4 BB 2A 00 E8 0E 0C 83  // ...f......*.....
    2BC0: C4 04 C3 83 EC 04 8B EC C7 46 00 00 00 66 C1 E8  // .........F...f..
    2BD0: 0D 89 46 02 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8  // ..F...f......5..
    2BE0: EB 0B 83 C4 04 C3 83 EC 08 8B EC 89 4E 00 66 89  // ............N.f.
    2BF0: 56 02 89 5E 06 8C D0 66 C1 E0 10 8B C4 BB 2D 00  // V..^...f......-.
    2C00: E8 CA 0B 83 C4 08 C3 3D C0 7F 76 04 B8 C0 7F C3  // .......=..v.....
    2C10: 83 C0 3F 24 C0 C3 E8 28 0C C3 32 D2 C3 66 33 FF  // ..?$...(..2..f3.
    2C20: 66 33 DB 66 33 C0 8A C1 66 BA 00 00 00 FF 80 FD  // f3.f3...f.......
    2C30: 03 74 7A 80 FD 02 75 07 E8 11 EC 33 DB EB 6E E8  // .tz...u....3..n.
    2C40: E6 00 53 8D 9C E4 02 66 8B C7 E8 1B 12 5B E8 41  // ..S....f.....[.A
    2C50: 01 66 8B C3 66 53 8D 9C E8 02 E8 0B 12 8D 9C EC  // .f..fS..........
    2C60: 02 66 8B C7 E8 01 12 66 5B 51 53 33 D2 80 F9 08  // .f.....f[QS3....
    2C70: 73 08 E8 EF 01 74 03 80 CE 10 8D 9C 02 03 E8 7C  // s....t.........|
    2C80: 12 0B C0 75 03 80 CE 03 E8 AF EA 8A D5 66 C1 E2  // ...u.........f..
    2C90: 10 E8 E8 EA 8A F2 8A D1 66 8B C2 E8 6B EB 66 C1  // ........f...k.f.
    2CA0: E2 08 E8 B7 EA 8A D1 66 C1 CA 08 5B 59 83 EC 14  // .......f...[Y...
    2CB0: 8B EC 66 89 46 08 66 89 5E 04 66 89 7E 0C 66 89  // ..f.F.f.^.f.~.f.
    2CC0: 56 00 BB 0C 00 8C D0 66 C1 E0 10 8B C4 E8 FD 0A  // V......f........
    2CD0: 8B EC 8A 5E 0B 83 C4 14 C3 E8 04 EB E8 95 0B 38  // ...^...........8
    2CE0: C1 74 44 C0 E1 02 E8 81 01 74 03 80 C9 01 83 EC  // .tD......t......
    2CF0: 08 8B EC C6 46 03 00 88 4E 02 E8 67 01 75 17 E8  // ....F...N..g.u..
    2D00: 50 EA 74 12 E8 F6 00 C7 46 00 00 00 89 56 04 89  // P.t.....F....V..
    2D10: 5E 06 C6 46 03 01 8C D0 66 C1 E0 10 8B C4 BB 41  // ^..F....f......A
    2D20: 00 E8 A9 0A 83 C4 08 C3 83 EC 08 8B EC 51 E8 09  // .............Q..
    2D30: EA 88 6E 03 E8 5F EA 89 56 00 E8 3F EA 88 56 02  // ..n.._..V..?..V.
    2D40: E8 44 EA 88 56 05 80 FD 10 75 05 E8 67 04 EB 26  // .D..V....u..g..&
    2D50: 33 D2 E8 FD E9 74 03 80 CA 10 E8 6A EA 80 FB 04  // 3....t.....j....
    2D60: 76 03 80 CA 40 8D 9C 58 03 E8 91 11 A8 02 74 03  // v...@..X......t.
    2D70: 80 CA 20 88 56 04 59 8C D0 66 C1 E0 10 8B C4 BB  // .. .V.Y..f......
    2D80: 11 00 E8 48 0A 8B EC 66 8B 7E 00 8B 5E 04 83 C4  // ...H...f.~..^...
    2D90: 08 C3 66 50 66 51 52 8A CF 0A FF 75 0B E8 F5 0A  // ..fPfQR....u....
    2DA0: 66 33 D2 66 F7 F7 8A C8 8A EB 0A ED 75 03 E8 EB  // f3.f........u...
    2DB0: 0A 51 66 33 C0 8A C5 32 ED F7 E1 59 66 C1 E1 10  // .Qf3...2...Yf...
    2DC0: 8A EF 66 F7 E7 66 BB E8 03 00 00 66 F7 E3 66 BB  // ..f..f.....f..f.
    2DD0: 30 00 00 00 66 33 D2 66 F7 F3 66 33 D2 66 BB A0  // 0...f3.f..f3.f..
    2DE0: 86 01 00 66 F7 F3 66 8B D9 8B D8 66 B8 0A 00 00  // ...f..f....f....
    2DF0: 00 66 F7 E2 66 8B F8 5A 66 59 66 58 C3 51 66 33  // .f..f..ZfYfX.Qf3
    2E00: C9 8D 9C E8 02 E8 F5 10 8B C8 66 C1 E8 18 66 33  // ..........f...f3
    2E10: FF 8B F8 E8 3C E9 66 25 FF FF 00 00 66 F7 E1 B9  // ....<.f%....f...
    2E20: E8 03 33 D2 F7 F1 8B C8 8D 9C 66 03 E8 CE 10 66  // ..3.......f....f
    2E30: 25 FF FF 00 00 66 F7 E1 66 F7 E7 66 C1 E0 0C E8  // %....f..f..f....
    2E40: 28 00 74 03 66 D1 E0 66 BB F0 49 02 00 66 33 D2  // (.t.f..f..I..f3.
    2E50: 66 F7 F3 8B D8 8B C1 B9 0A 00 33 D2 F7 F1 8A F2  // f.........3.....
    2E60: 8A D0 59 C3 E8 E3 E8 A8 02 C3 66 50 E8 DB E8 A8  // ..Y.......fP....
    2E70: 01 66 58 C3 53 51 66 50 B9 A0 8C 80 FB 00 75 1C  // .fX.SQfP......u.
    2E80: B9 90 7E E8 D5 08 83 E3 03 80 FB 03 75 0E E8 B0  // ..~.........u...
    2E90: 09 66 3D 50 C3 00 00 72 03 B9 F0 D2 66 33 D2 8B  // .f=P...r....f3..
    2EA0: D1 66 58 59 5B C3 66 52 B3 10 80 FA 14 74 25 B3  // .fXY[.fR.....t%.
    2EB0: 0F 80 FA 15 74 1E B3 00 66 F7 C2 00 00 FF FF 75  // ....t...f......u
    2EC0: 13 80 FD 13 74 0E 80 FD 14 74 09 B3 01 80 FD 0E  // ....t....t......
    2ED0: 74 02 B3 02 66 5A C3 B5 11 80 FA 23 74 07 80 FA  // t...fZ.....#t...
    2EE0: 22 74 02 B5 00 C3 B5 02 80 FA 23 74 07 80 FA 22  // "t........#t..."
    2EF0: 74 02 B3 01 C3 32 C9 B3 04 80 FD 00 75 0F B3 02  // t....2......u...
    2F00: E8 74 09 74 08 C7 46 00 0A 01 B1 01 C3 57 55 E8  // .t.t..F......WU.
    2F10: A6 02 74 23 53 8B 5D 02 E8 96 08 03 FB 5B 80 3D  // ..t#S.]......[.=
    2F20: FF 74 14 84 5D 01 74 0A 8B 05 89 46 00 83 C5 02  // .t..].t....F....
    2F30: FE C1 83 C7 02 EB E7 5D 5F C3 57 56 8B F3 8D 5C  // .......]_.WV...\
    2F40: 04 66 33 C0 E8 21 0F 80 FD 00 75 04 B0 07 EB 07  // .f3..!....u.....
    2F50: 80 FD 01 75 23 B0 06 E8 45 09 33 DB 0B FF 74 23  // ...u#...E.3...t#
    2F60: 8D 5C 04 66 8B 45 04 E8 FE 0E 83 C3 04 66 8B 45  // .\.f.E.......f.E
    2F70: 08 E8 F4 0E 8B DE EB 0B 66 33 C0 8D 5C 08 E8 E7  // ........f3..\...
    2F80: 0E 8B DE 5E 5F C3 8B DA B7 22 80 FE 21 74 02 B7  // ...^_...."..!t..
    2F90: 21 C3 0C 01 C3 80 FA 15 74 28 E8 60 0F 66 C1 E8  // !.......t(.`.f..
    2FA0: 10 0B C0 74 1A 53 83 C3 06 E8 51 0F 5B 3D E0 01  // ...t.S....Q.[=..
    2FB0: 72 0D 53 83 C3 18 E8 44 0F 5B A9 10 00 74 03 32  // r.S....D.[...t.2
    2FC0: C0 C3 0C 01 C3 B5 0C C3 32 ED BB 02 00 E8 D9 03  // ........2.......
    2FD0: 66 C1 E8 18 A8 10 74 02 B5 02 C3 57 E8 D9 01 8B  // f.....t....W....
    2FE0: 4D 06 5F C3 80 FA 22 75 05 C7 46 00 78 69 C3 80  // M._..."u..F.xi..
    2FF0: FA 15 75 1A 83 EC 0C 8B EC C6 46 02 00 8C D0 66  // ..u.......F....f
    3000: C1 E0 10 8B C4 BB 15 00 E8 C2 07 83 C4 0C C3 E8  // ................
    3010: BD 01 80 FD FF 74 31 C0 E5 04 83 EC 08 8B EC 88  // .....t1.........
    3020: 4E 03 88 6E 02 E8 53 00 80 F9 10 75 0A 8D 9C 48  // N..n..S....u...H
    3030: 03 E8 C9 0E 88 46 04 8C D0 66 C1 E0 10 8B C4 BB  // .....F...f......
    3040: 04 00 E8 88 07 83 C4 08 C3 83 EC 10 8B EC 88 4E  // ...............N
    3050: 03 E8 33 E7 81 E2 00 07 FE CE C0 E6 04 88 76 02  // ..3...........v.
    3060: E8 18 00 E8 A3 E7 89 56 00 8C D0 66 C1 E0 10 8B  // .......V...f....
    3070: C4 BB 32 00 E8 56 07 83 C4 10 C3 32 ED E8 27 E7  // ..2..V.....2..'.
    3080: 81 FA 48 3F 74 1A B5 01 81 FA 78 69 74 12 B5 02  // ..H?t.....xit...
    3090: 81 FA F0 D2 74 0A B5 03 81 FA 90 7E 74 02 32 ED  // ....t......~t.2.
    30A0: 08 6E 02 8D 9C 40 03 E8 53 0E 66 89 46 04 E8 E5  // .n...@..S.f.F...
    30B0: E6 89 56 00 C3 80 F9 05 74 05 80 F9 06 75 1A E8  // ..V.....t....u..
    30C0: C5 E6 0B D2 74 04 E8 80 FF C3 0B F6 74 44 E8 2B  // ....t.......tD.+
    30D0: E7 E8 53 02 75 03 E8 28 01 80 F9 04 74 34 E8 9B  // ..S.u..(....t4..
    30E0: E6 80 FA 15 75 07 B5 01 BB 18 00 EB 0B 80 FA 14  // ....u...........
    30F0: 75 20 E8 C0 00 BB 08 00 83 EC 08 8B EC 88 6E 02  // u ............n.
    3100: 88 4E 03 8C D0 66 C1 E0 10 8B C4 E8 BF 06 83 C4  // .N...f..........
    3110: 08 C3 83 EC 0C 8B EC 80 F9 04 75 0A 88 4E 03 32  // ..........u..N.2
    3120: C0 88 46 02 EB 7D 32 C0 80 EE 21 80 FA 1E 74 15  // ..F..}2...!...t.
    3130: B0 02 80 FA 20 74 0E B0 04 80 FA 21 74 07 B0 06  // .... t.....!t...
    3140: 80 FA 25 75 6C 02 C6 88 46 02 88 4E 03 E8 AC E6  // ..%ul...F..N....
    3150: 88 56 05 8D 9C 5C 03 E8 A3 0D 88 46 09 E8 58 E6  // .V...\.....F..X.
    3160: C0 E5 04 8D 9C 58 03 E8 93 0D 24 02 0A E8 E8 6F  // .....X....$....o
    3170: E6 80 F9 02 77 07 C0 E1 02 0A E9 EB 03 80 CD 0C  // ....w...........
    3180: 88 6E 07 E8 10 E6 89 56 00 E8 3B E6 88 5E 04 E8  // .n.....V..;..^..
    3190: A8 E5 88 6E 06 51 E8 36 00 8A CD B0 01 D2 E0 59  // ...n.Q.6.......Y
    31A0: 88 46 08 8C D0 66 C1 E0 10 8B C4 BB 4C 00 E8 1C  // .F...f......L...
    31B0: 06 83 C4 0C C3 32 ED C3 E8 F6 05 03 7D 04 83 3D  // .....2......}..=
    31C0: FF 74 0B 3B 15 74 05 83 C7 0A EB F2 0B FF C3 8D  // .t.;.t..........
    31D0: 9C 3C 03 E8 27 0D 32 ED 3C 03 74 0C 3C 09 72 09  // .<..'.2.<.t.<.r.
    31E0: 3C 0E 77 05 2C 08 8A E8 C3 B5 FF C3 83 EC 08 8C  // <.w.,...........
    31F0: D0 66 C1 E0 10 8B C4 BB 4B 00 E8 D0 05 83 C4 08  // .f......K.......
    3200: C3 52 51 E8 B2 E5 66 BA 0A 01 90 40 8D 9C BF 03  // .RQ...f....@....
    3210: E8 4C 00 8D 9C BF 03 E8 E3 0C 0C 80 59 51 80 F9  // .L..........YQ..
    3220: 05 74 02 24 7F E8 90 E5 66 BA 0A 01 80 50 E8 2E  // .t.$....f....P..
    3230: 00 59 5A C3 83 EC 08 8B EC 89 7E 00 89 5E 02 89  // .YZ.......~..^..
    3240: 56 04 89 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36 00  // V..N...f......6.
    3250: E8 7A 05 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3 56  // .z....^..~.....V
    3260: 33 F6 66 F7 C2 00 00 80 00 75 0A 50 33 C0 8A C6  // 3.f......u.P3...
    3270: 8B F0 32 F6 58 53 BB 04 3E E8 EC 0B 66 8B C2 BB  // ..2.XS..>...f...
    3280: 00 3E E8 E3 0B 5B 66 F7 C2 00 00 10 00 75 02 33  // .>...[f......u.3
    3290: DB 8B D3 66 C1 E2 10 BA 00 3E 83 EC 08 8B EC 66  // ...f.....>.....f
    32A0: 89 56 00 88 4E 04 8A C5 FE C8 88 46 07 C6 46 05  // .V..N......F..F.
    32B0: 00 C6 46 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E 00  // ..F....f......N.
    32C0: E8 0A 05 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A DB  // ......^..~......
    32D0: 74 32 51 B9 90 01 80 FB 20 74 05 80 FB 80 75 13  // t2Q..... t....u.
    32E0: B9 0A 00 8B C6 0A C0 74 0A B9 90 01 3C 01 74 03  // .......t....<.t.
    32F0: B9 E8 03 E8 00 06 59 8B C6 FE C4 8B F0 80 FC 06  // ......Y.........
    3300: 76 98 0A DB 5E C3 8D 5C 04 E8 F1 0B 8B D0 B5 02  // v...^..\........
    3310: E8 14 00 74 11 B5 01 80 FA 13 75 0A E8 61 00 80  // ...t......u..a..
    3320: FA 13 75 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74 03  // ..u...........t.
    3330: 80 FA 0E C3 80 FA 05 C3 80 FA 02 74 03 80 FA 04  // ...........t....
    3340: C3 80 FA 01 74 03 80 FA 02 C3 80 FA 02 75 03 B2  // ....t........u..
    3350: 01 C3 80 FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8 FF  // .....u..........
    3360: 74 02 B5 04 C3 8D 5C 09 E8 92 0B 8A C8 0A C9 75  // t.....\........u
    3370: 03 32 C0 C3 B5 02 E8 D2 04 8A C5 24 02 D0 E8 C3  // .2.........$....
    3380: 8D 5C 08 E8 77 0B 8A D0 B6 01 83 EC 08 8B EC 89  // .\..w...........
    3390: 56 02 8C D0 66 C1 E0 10 8B C4 BB 4F 00 E8 2D 04  // V...f......O..-.
    33A0: 8B EC 8A 56 04 83 C4 08 C3 53 81 C3 C9 05 E8 25  // ...V.....S.....%
    33B0: 0B 5B C3 53 81 C3 C9 05 E8 76 0A 5B C3 53 81 C3  // .[.S.....v.[.S..
    33C0: 00 10 E8 11 0B 5B C3 57 E8 9D 03 8A 45 2D B4 FF  // .....[.W....E-..
    33D0: F7 45 50 20 00 5F C3 50 56 0F BC D8 8D 36 7E 33  // .EP ._.PV....6~3
    33E0: E8 B3 05 5E 58 C3 00 20 00 24 00 00 00 28 00 2C  // ...^X.. .$...(.,
    33F0: 00 30 00 34 00 38 00 00 00 3C 00 40 00 44 53 56  // .0.4.8...<.@.DSV
    3400: 51 8B F7 B3 00 E8 30 00 0B F6 74 16 49 0B C9 75  // Q.....0...t.I..u
    3410: 04 33 FF EB 0D 8B DF 03 7D 02 3B F3 74 04 E2 F5  // .3......}.;.t...
    3420: 33 FF 0B FF 59 5E 5B C3 0E 00 00 00 0A 00 06 00  // 3...Y^[.........
    3430: 08 00 0C 00 0E 00 10 00 56 8D 36 C0 33 E8 56 05  // ........V.6.3.V.
    3440: E8 2E 03 03 DE 8B 3F 0B FF 74 0B 03 FE 33 C9 8A  // ......?..t...3..
    3450: 0D 83 C7 04 0B FF 5E C3 51 56 53 C1 EB 0C E8 D7  // ......^.QVS.....
    3460: FF 5B 75 04 33 FF EB 0B 3B 1D 74 07 83 C7 08 E2  // .[u.3...;.t.....
    3470: F7 33 FF 0B FF 5E 59 C3 57 E8 DC FF 75 04 33 DB  // .3...^Y.W...u.3.
    3480: 5F C3 E8 02 00 5F C3 52 51 8B 5D 04 0B DB 74 1B  // _...._.RQ.]...t.
    3490: 56 E8 DD 02 03 DE 5E 33 C9 8A 4F 01 80 3F FF 74  // V.....^3..O..?.t
    34A0: 08 3A 07 74 06 03 D9 EB F0 33 DB 0B DB 59 5A C3  // .:.t.....3...YZ.
    34B0: 50 8D 1C E8 B2 09 8B D8 E8 72 00 23 C3 74 6C 33  // P........r.#.tl3
    34C0: FF E8 3A FF 0B FF 74 63 39 05 75 F5 66 33 C0 8B  // ..:...tc9.u.f3..
    34D0: 45 08 8B 4D 02 83 F9 0A 74 18 8B 4D 0A 8B D1 81  // E..M....t..M....
    34E0: E2 00 70 80 FE 20 75 0A 66 C1 C8 10 8B C1 66 C1  // ..p.. u.f.....f.
    34F0: C8 10 8D 5C 0C E8 70 09 66 33 C0 8B 45 04 8D 5C  // ...\..p.f3..E..\
    3500: 04 E8 64 09 33 C9 8B D8 50 B0 01 E8 6A FF 58 74  // ..d.3...P...j.Xt
    3510: 0F 8A 4F 02 8B D8 B0 02 E8 5D FF 74 03 8A 6F 02  // ..O......].t..o.
    3520: 8D 5C 08 66 33 C0 8B C1 E8 3D 09 58 C3 56 E8 40  // .\.f3....=.X.V.@
    3530: 02 8B 44 04 5E C3 56 E8 37 02 89 44 04 5E C3 E8  // ..D.^.V.7..D.^..
    3540: 5D 02 8B F7 03 74 56 BB 00 30 B9 23 00 E8 8E 03  // ]....tV..0.#....
    3550: E8 01 00 C3 33 FF 33 F6 33 C9 8B FE E8 9F FE 0F  // ....3.3.3.......
    3560: 84 AA 00 8B F7 8B 54 04 80 FA 15 74 04 0B 0C EB  // ......T....t....
    3570: E9 8B DA E8 E2 FE E8 D4 00 0B C8 89 04 0B C0 75  // ...............u
    3580: 10 89 44 04 89 05 83 7C 02 0A 74 36 89 44 0A EB  // ..D....|..t6.D..
    3590: 31 E8 02 01 89 44 04 89 05 83 7C 02 0A 74 06 E8  // 1....D....|..t..
    35A0: BC 00 89 44 0A F7 04 11 00 74 11 8B 44 04 E8 95  // ...D.....t..D...
    35B0: 00 75 09 33 C0 89 05 E8 B0 00 EB 06 E8 AB 00 E8  // .u.3............
    35C0: 55 01 8B 5C 08 B8 00 11 66 C1 E0 10 8B 44 04 E8  // U..\....f....D..
    35D0: 62 00 E8 5D 01 8B 5C 08 E8 39 00 E8 56 00 74 12  // b..]..\..9..V.t.
    35E0: 8B D8 8B 44 08 66 C1 E0 10 8B 44 04 E8 43 01 E8  // ...D.f....D..C..
    35F0: 25 01 8B 5C 04 0B DB 0F 84 5F FF 8B 44 08 E8 33  // %..\....._..D..3
    3600: 00 66 C1 E0 10 33 C0 E8 28 01 E9 4D FF E8 61 01  // .f...3..(..M..a.
    3610: 89 4C 04 C3 51 53 E8 C2 00 83 C3 0C E8 DE 08 8B  // .L..QS..........
    3620: C8 5B B0 14 E8 51 FE 74 09 F6 C1 01 74 04 83 67  // .[...Q.t....t..g
    3630: 02 FD 59 C3 53 83 7C 02 0A 74 09 8B 5C 0A 0B DB  // ..Y.S.|..t..\...
    3640: 74 02 8B C3 5B C3 3C 01 74 02 3C 02 C3 53 E8 8A  // t...[.<.t.<..S..
    3650: 00 E8 A9 08 5B C3 E8 F4 FF 66 C1 E8 10 C3 53 E8  // ....[....f....S.
    3660: 79 00 83 C3 08 E8 95 08 5B C3 57 B0 04 E8 17 FE  // y.......[.W.....
    3670: C6 47 02 01 8B 05 E8 CD FF 75 0D F7 04 11 00 74  // .G.......u.....t
    3680: 07 C6 47 02 02 83 C3 08 8B 04 89 47 08 E8 C6 FF  // ..G........G....
    3690: 66 89 47 04 5F C3 53 57 52 E8 3F 00 83 C3 04 E8  // f.G._.SWR.?.....
    36A0: 5B 08 8B D0 E8 91 FC 75 14 8B 5C 08 8B D3 E8 D5  // [......u..\.....
    36B0: F8 E8 A4 FD 75 07 8B D0 E8 8F FC 8B C2 5A 5F 5B  // ....u........Z_[
    36C0: C3 E8 D2 FF 66 C1 E8 10 B4 11 E8 25 00 C3 E8 C5  // ....f......%....
    36D0: FF 66 C1 E8 18 B4 10 E8 18 00 C3 51 52 33 C9 8A  // .f.........QR3..
    36E0: CE 80 E1 07 49 B8 10 00 F7 E1 BB 14 30 03 D8 5A  // ....I.......0..Z
    36F0: 59 C3 57 53 51 3C FF 75 04 33 C0 EB 16 33 C9 8A  // Y.WSQ<.u.3...3..
    3700: C8 8A C4 BB 03 71 E8 4F FD E8 7B FD 83 C3 02 03  // .....q.O..{.....
    3710: D9 8A 07 59 5B 5F C3 B0 01 E8 6B FD 74 13 E8 A0  // ...Y[_....k.t...
    3720: FF 88 47 02 B0 02 E8 5E FD 74 06 E8 A0 FF 88 47  // ..G....^.t.....G
    3730: 02 C3 E8 23 FD 74 23 56 8B 5D 02 E8 33 00 03 DE  // ...#.t#V.]..3...
    3740: 5E 0B C0 74 07 C6 47 03 01 89 47 04 66 C1 E8 10  // ^..t..G...G.f...
    3750: 0B C0 74 06 C6 07 01 89 47 01 C3 8B DA B0 14 E8  // ..t.....G.......
    3760: 16 FD 74 03 8B 5F 02 C3 BF C4 01 8B 3D 8B 7D 0C  // ..t.._......=.}.
    3770: C3 BE C4 01 8B 34 8B 74 30 C3 1E 0E 1F BF C4 01  // .....4.t0.......
    3780: 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE C4 01 8B 34 8B  // .=.}..........4.
    3790: 74 10 C3 BF C4 01 8B 3D 8B 7D 26 83 C7 04 C3 BF  // t......=.}&.....
    37A0: C4 01 8B 3D 8B 7D 40 C3 BE C4 01 8B 34 8B 74 1A  // ...=.}@.....4.t.
    37B0: C3 BF C4 01 8B 3D 8B 7D 3A C3 BF C4 01 8B 3D 8B  // .....=.}:.....=.
    37C0: 7D 0A 83 C7 04 B9 08 00 C3 E8 01 00 CB 83 EC 06  // }...............
    37D0: 8B EC 89 46 00 66 33 C0 C6 46 04 00 89 46 02 06  // ...F.f3..F...F..
    37E0: 52 8A D3 8B C5 E8 E3 19 5A 07 83 C4 06 C3 E8 77  // R.......Z......w
    37F0: FF F7 45 50 01 00 C3 E8 6E FF 83 4D 50 01 C3 E8  // ..EP....n..MP...
    3800: 66 FF 88 45 58 C3 83 EC 14 8B EC 66 89 5E 00 66  // f..EX......f.^.f
    3810: 89 4E 04 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8 AC  // .N...f..........
    3820: FF 83 C4 14 E8 78 01 BB 04 00 E8 7C FB 66 C1 E8  // .....x.....|.f..
    3830: 10 E8 CB FF C3 E8 30 FF 66 8B 5D 08 66 8B 4D 0C  // ......0.f.].f.M.
    3840: C3 57 E8 23 FF 66 8B 45 28 5F C3 83 EC 04 8B EC  // .W.#.f.E(_......
    3850: 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38 00 E8 6C  // .N...f......8..l
    3860: FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 02 C3 B0 02  // ....n...........
    3870: C3 B0 02 C3 B0 08 C3 E8 EE FE 8B 45 56 0B C0 C3  // ...........EV...
    3880: 53 66 50 66 33 C0 E8 DF 05 83 C3 04 E2 F8 66 58  // SfPf3.........fX
    3890: 5B C3 32 C0 C3 66 B8 C0 D4 01 00 C3 B5 01 C3 53  // [.2..f.........S
    38A0: BF C4 01 8B 3D 8B 7D 38 0B FF 74 15 8B 1D 03 DF  // ....=.}8..t.....
    38B0: 83 C7 04 3A 45 08 74 09 83 C7 0C 3B FB 72 F4 33  // ...:E.t....;.r.3
    38C0: FF 0B FF 5B C3 FC E8 34 06 66 C1 CB 10 E8 98 05  // ...[...4.f......
    38D0: 66 C1 CB 10 66 81 C3 04 00 04 00 E2 E9 C3 FC 66  // f...f..........f
    38E0: AD E8 84 05 83 C3 04 E2 F6 C3 FC E8 0F 06 66 AB  // ..............f.
    38F0: 83 C3 04 E2 F6 C3 66 50 B8 64 00 E8 10 00 66 58  // ......fP.d....fX
    3900: C3 66 50 B8 50 C3 D1 E1 E8 03 00 66 58 C3 52 F7  // .fP.P......fX.R.
    3910: E1 8B CA E8 00 04 66 53 8B D9 66 C1 E3 10 8B D8  // ......fS..f.....
    3920: 66 B8 04 C4 00 00 B2 00 66 EF B2 04 66 33 C0 66  // f.......f...f3.f
    3930: EF 66 B8 08 C4 00 00 B2 00 66 EF B2 04 66 ED 33  // .f.......f...f.3
    3940: C9 66 03 D8 73 0A 66 ED 66 A9 00 00 00 80 75 F6  // .f..s.f.f.....u.
    3950: 66 ED 66 3B C3 73 0C 66 C1 E8 10 3B C1 72 04 8B  // f.f;.s.f...;.r..
    3960: C8 EB ED 66 5B 5A C3 BB 02 31 E8 69 05 66 33 D2  // ...f[Z...1.i.f3.
    3970: 66 BB 64 00 00 00 66 F7 F3 C3 66 50 53 BB 07 00  // f.d...f...fPS...
    3980: E8 26 FA 25 00 02 35 00 02 0B C0 5B 66 58 C3 BB  // .&.%..5....[fX..
    3990: 0A 15 E8 41 05 C3 32 FF D1 E3 03 F3 8B 1C C3 E8  // ...A..2.........
    39A0: ED FF 66 3D 00 08 00 00 76 06 BB 0C 15 E8 26 05  // ..f=....v.....&.
    39B0: 66 C1 E0 0A 66 83 E8 20 E8 ED FD 66 89 44 04 C7  // f...f.. ...f.D..
    39C0: 44 08 20 00 C3 56 1E 0E 1F E8 DC FD 66 8B 44 04  // D. ..V......f.D.
    39D0: 66 C1 E0 0A 1F 5E C3 E8 C5 FF BB 00 7C 06 E8 BE  // f....^......|...
    39E0: FD 0E 07 BB 00 7C E8 14 05 66 3B 05 75 19 B9 80  // .....|...f;.u...
    39F0: 00 FC E8 F5 FE BB 00 7E BF C4 01 8B 3D 8B 7D 22  // .......~....=.}"
    3A00: B9 80 00 FC E8 E3 FE E8 5E FD 8B F7 E8 90 FD 66  // ........^......f
    3A10: 8B 45 08 66 0B C0 74 04 66 89 44 14 66 8B 45 04  // .E.f..t.f.D.f.E.
    3A20: 66 0B C0 74 04 66 89 44 08 66 8B 45 0C 66 89 44  // f..t.f.D.f.E.f.D
    3A30: 0C 8B DF 83 C3 28 B9 04 00 66 8B 47 04 66 0B C0  // .....(...f.G.f..
    3A40: 75 0F 83 EB 08 E2 F2 66 C7 44 28 F0 D2 00 00 EB  // u......f.D(.....
    3A50: 63 66 89 44 28 8A 07 80 7D 03 08 72 57 8B DF 81  // cf.D(...}..rW...
    3A60: C3 D4 00 B9 05 00 3A 47 04 74 07 83 C3 08 E2 F6  // ......:G.t......
    3A70: EB 42 66 33 C0 8A 47 06 66 33 D2 66 BB 71 02 00  // .Bf3..G.f3.f.q..
    3A80: 00 66 F7 E3 66 BA 78 5D 02 00 66 2B D0 66 8B C2  // .f..f.x]..f+.f..
    3A90: 66 33 D2 66 BB 64 00 00 00 66 F7 F3 89 44 2E 8B  // f3.f.d...f...D..
    3AA0: 45 3C 0B C0 74 0E 89 44 52 3D 10 27 72 06 B8 88  // E<..t..DR=.'r...
    3AB0: 13 89 44 4C 57 03 7D 56 8A 85 86 00 5F 88 44 3C  // ..DLW.}V...._.D<
    3AC0: B8 DF FF 21 44 50 8B 45 40 0B C0 74 14 83 4C 50  // ...!DP.E@..t..LP
    3AD0: 20 80 BD 3F 01 00 74 09 50 8A 85 3F 01 88 44 2D  //  ..?..t.P..?..D-
    3AE0: 58 E8 A6 FC 0B F6 74 03 89 44 32 E8 9C FC 0B F6  // X.....t..D2.....
    3AF0: 74 70 8B 45 58 0B C0 74 08 89 44 22 B0 02 08 44  // tp.EX..t..D"...D
    3B00: 30 8B 85 34 01 0B C0 74 03 89 44 40 F6 85 36 01  // 0..4...t..D@..6.
    3B10: 08 74 24 80 64 28 FD F6 85 36 01 01 74 04 80 4C  // .t$.d(...6..t..L
    3B20: 28 02 80 64 28 8F F6 85 36 01 04 75 06 80 4C 28  // (..d(...6..u..L(
    3B30: 10 EB 04 80 4C 28 20 F6 45 34 01 75 05 C7 44 20  // ....L( .E4.u..D 
    3B40: 00 00 57 03 7D 56 8A 85 87 00 88 44 42 5F B9 07  // ..W.}V.....DB_..
    3B50: 00 8D 9D 38 01 8A 07 0A C0 74 03 88 44 34 43 46  // ...8.....t..D4CF
    3B60: E2 F3 57 8B 9D 10 01 0B DB 74 1C B0 09 E8 2F FD  // ..W......t..../.
    3B70: 74 05 89 5D 04 EB 10 B0 07 E8 23 FD 89 5D 04 B0  // t..]......#..]..
    3B80: 0B E8 1B FD 89 5D 04 5F 8D 9D 18 01 B0 05 E8 52  // .....]._.......R
    3B90: 00 8D 9D 1C 01 B0 04 E8 49 00 8D 9D 14 01 B0 06  // ........I.......
    3BA0: E8 40 00 BB 04 71 B0 09 E8 CD F8 74 0C 57 03 7D  // .@...q.....t.W.}
    3BB0: 56 8A 85 85 00 88 47 04 5F 80 7D 03 07 72 22 8A  // V.....G._.}..r".
    3BC0: 45 5C 0A C0 74 1B B9 28 00 8D 36 A6 00 83 C6 02  // E\..t..(..6.....
    3BD0: 8D 5D 5C 8A 07 0A C0 75 02 B0 20 88 04 43 46 E2  // .]\....u.. ..CF.
    3BE0: F2 07 C3 57 E8 B8 FC 74 13 8B 07 0B C0 74 0D 89  // ...W...t.....t..
    3BF0: 45 04 8B 47 02 0B C0 74 03 89 45 06 5F C3 57 E8  // E..G...t..E._.W.
    3C00: 66 FB 8B 45 52 5F C3 56 E8 7F FB 8B 4C 22 8A 44  // f..ER_.V....L".D
    3C10: 29 5E C3 BE C4 01 8B 34 8B 74 1E 83 C6 04 B9 29  // )^.....4.t.....)
    3C20: 00 C3 E8 7A FB F6 45 34 01 75 03 33 FF C3 56 53  // ...z..E4.u.3..VS
    3C30: 33 FF E8 55 FB 8B 5C 20 0B DB 74 12 03 F3 80 3C  // 3..U..\ ..t....<
    3C40: 04 75 0B 80 7C 01 80 72 05 8B FE 83 C7 02 5B 5E  // .u..|..r......[^
    3C50: C3 56 E8 35 FB 8A 6C 28 80 E5 70 C0 ED 04 5E C3  // .V.5..l(..p...^.
    3C60: 56 E8 26 FB 53 81 C3 09 01 E8 91 02 8A E8 5B 53  // V.&.S.........[S
    3C70: 81 C3 00 01 E8 86 02 5B 8A C5 66 89 44 3C 5E C3  // .......[..f.D<^.
    3C80: 56 E8 06 FB 66 8B 44 3C 53 81 C3 00 01 E8 D8 01  // V...f.D<S.......
    3C90: 5B 53 81 C3 08 01 B1 01 8A E8 E8 0F 02 5B 5E C3  // [S...........[^.
    3CA0: 56 E8 E6 FA 8B FE 83 C7 04 5E C3 56 E8 DB FA 8A  // V........^.V....
    3CB0: 44 28 80 FD 00 74 0E 24 8F C0 E5 04 0A C5 80 FD  // D(...t.$........
    3CC0: 20 75 02 0C 02 24 FE 81 7C 04 34 21 76 02 0C 01  //  u...$..|.4!v...
    3CD0: 88 44 28 E8 51 F6 75 04 80 4C 30 01 5E C3 57 E8  // .D(.Q.u..L0.^.W.
    3CE0: BD FA 8A 45 34 5F 80 FB 02 75 07 A8 04 75 1B 0C  // ...E4_...u...u..
    3CF0: 01 C3 80 FB 01 75 07 A8 02 75 0F 0C 01 C3 80 FB  // .....u...u......
    3D00: 81 75 07 A8 08 75 03 0C 01 C3 32 C0 C3 E8 8F FA  // .u...u....2.....
    3D10: 66 8B 45 38 C3 00 66 50 8C C8 3D 00 C0 75 10 BA  // f.E8..fP..=..u..
    3D20: C3 03 EC 8A F0 0A F6 74 06 B2 4C 66 ED EB 17 53  // .......t..Lf...S
    3D30: 2E 8B 1E B8 01 B2 20 E8 DD 00 A8 01 75 05 B2 14  // ...... .....u...
    3D40: E8 D4 00 8A F4 5B 32 D2 66 58 C3 2E 8B 1E B8 01  // .....[2.fX......
    3D50: C3 0B C9 75 1A 4B 74 16 43 3B DA 77 09 8B C8 8B  // ...u.Kt.C;.w....
    3D60: C2 2B D2 F7 F3 91 F7 F3 8B DA 8B D1 2B C9 C3 3B  // .+..........+..;
    3D70: CA 72 1A 75 10 3B D8 77 0C 2B C3 8B D8 2B C9 2B  // .r.u.;.w.+...+.+
    3D80: D2 B8 01 00 C3 2B C9 2B DB 93 87 CA C3 55 56 2B  // .....+.+.....UV+
    3D90: F6 8B EE 03 DB 13 C9 72 11 45 3B CA 72 F5 77 04  // .......r.E;.r.w.
    3DA0: 3B D8 76 EF F8 13 F6 4D 78 20 D1 D9 D1 DB 2B C3  // ;.v....Mx ....+.
    3DB0: 1B D1 F5 72 F0 03 F6 4D 78 0C D1 E9 D1 DB 03 C3  // ...r...Mx.......
    3DC0: 13 D1 73 F1 EB DF 03 C3 13 D1 8B D8 8B CA 8B C6  // ..s.............
    3DD0: 33 D2 5E 5D C3 93 50 92 0B C0 74 02 F7 E2 91 0B  // 3.^]..P...t.....
    3DE0: C0 74 04 F7 E3 03 C8 58 F7 E3 03 D1 C3 52 66 50  // .t.....X.....RfP
    3DF0: B4 80 8A C7 66 C1 E0 10 8A E3 8A C2 24 FC BA F8  // ....f.......$...
    3E00: 0C 66 EF 66 58 5A C3 52 BA FC 0C 66 ED 5A C3 52  // .f.fXZ.R...f.Z.R
    3E10: BA FC 0C 66 EF 5A C3 E8 31 FF 9C FA E8 CE FF E8  // ...f.Z..1.......
    3E20: E5 FF 9D C3 E8 24 FF 9C FA E8 C1 FF E8 E0 FF 9D  // .....$..........
    3E30: C3 52 66 53 66 50 E8 06 00 66 58 66 5B 5A C3 66  // .RfSfP...fXf[Z.f
    3E40: C1 E3 10 66 C1 EB 0E E8 CC FE E8 4C 01 C3 66 50  // ...f.......L..fP
    3E50: 66 C1 E3 10 66 C1 EB 10 E8 6A FB 66 03 D8 66 81  // f...f....j.f..f.
    3E60: CB 00 00 00 80 66 58 C3 52 66 53 E8 04 00 66 5B  // .....fX.RfS...f[
    3E70: 5A C3 66 50 E8 9F FE E8 D4 FF E8 1C 01 66 58 C3  // Z.fP.........fX.
    3E80: 52 51 66 53 66 50 8A CB 80 E3 FC 80 E1 03 C0 E1  // RQfSfP..........
    3E90: 03 E8 82 FE E8 B7 FF E8 E6 00 66 D3 C8 58 50 66  // ..........f..XPf
    3EA0: D3 C0 E8 F4 00 66 58 66 5B 59 5A C3 66 50 51 C0  // .....fXf[YZ.fPQ.
    3EB0: E1 03 E8 48 00 66 D3 C8 8A C5 66 D3 C0 E8 A8 FF  // ...H.f....f.....
    3EC0: 59 66 58 C3 66 50 51 C0 E1 03 E8 30 00 66 D3 C8  // YfX.fPQ....0.f..
    3ED0: 59 8A E8 66 58 C3 E8 54 00 C3 E8 39 FE 66 C1 E3  // Y..fX..T...9.f..
    3EE0: 10 66 C1 EB 0E E8 98 00 C3 52 66 53 E8 04 00 66  // .f.......RfS...f
    3EF0: 5B 5A C3 E8 20 FE E8 55 FF E8 84 00 C3 51 66 52  // [Z.. ..U.....QfR
    3F00: 8A EB 8A CB 80 E1 03 C0 E1 03 80 E3 FC E8 D9 FF  // ................
    3F10: 80 F9 00 74 14 66 8B D0 83 C3 04 E8 CB FF 83 EB  // ...t.f..........
    3F20: 04 66 92 66 0F AD D0 8A DD 66 5A 59 C3 52 66 53  // .f.f.....fZY.RfS
    3F30: E8 A7 FF 66 5B 5A C3 66 50 55 52 66 50 8B EC 8B  // ...f[Z.fPURfP...
    3F40: 56 0C 89 56 08 E8 CE FD 33 C0 B2 18 EF B2 00 66  // V..V....3......f
    3F50: ED 66 89 46 0A 66 58 5A 5D C3 66 50 55 52 8B EC  // .f.F.fXZ].fPUR..
    3F60: E8 B3 FD B2 00 66 8B 46 0A 66 EF 8B 56 08 89 56  // .....f.F.f..V..V
    3F70: 0C 66 8B 46 04 66 89 46 08 5A 5D 66 58 66 58 C3  // .f.F.f.F.Z]fXfX.
    3F80: 66 81 FB FF 00 00 00 77 04 8A D3 EB 09 66 8B C3  // f......w.....f..
    3F90: B2 00 66 EF B2 04 66 ED C3 66 81 FB FF 00 00 00  // ..f...f..f......
    3FA0: 77 04 8A D3 EB 0A 66 93 B2 00 66 EF 66 93 B2 04  // w.....f...f.f...
    3FB0: 66 EF C3 C3 C3 C3 C3 C3 C3 C3 C3 C3 C3 55 8B EC  // f............U..
    3FC0: 53 51 8B F0 26 8B 5C 14 26 8B 4C 16 E8 28 00 8D  // SQ..&.\.&.L..(..
    3FD0: 66 FC 59 5B 5D C3 53 51 8B F0 26 8B 5C 24 33 C9  // f.Y[].SQ..&.\$3.
    3FE0: E8 14 00 59 5B C3 55 8B EC 53 51 8B F0 26 8B 5C  // ...Y[.U..SQ..&.\
    3FF0: 08 26 8B 4C 0A EB D5 52 56 57 C8 06 00 00 8B F0  // .&.L...RVW......
    4000: 89 4E FE 8C D0 8E C0 26 8B 7C 26 8A 45 01 32 E4  // .N.....&.|&.E.2.
    4010: B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8  // . .+............
    4020: E2 FA 8A 4D 03 32 ED 8B FA E3 06 D1 E0 D1 D7 E2  // ...M.2..........
    4030: FA F7 D0 F7 D7 26 21 44 1C 26 21 7C 1E 8C D0 8E  // .....&!D.&!|....
    4040: C0 26 8B 7C 26 8A 4D 01 32 ED B8 20 00 2B C1 8B  // .&.|&.M.2.. .+..
    4050: C8 66 C7 46 FA FF FF FF FF E3 08 D1 6E FC D1 5E  // .f.F........n..^
    4060: FA E2 F8 8A 4D 02 32 ED 8B C3 8B 56 FE E3 06 D1  // ....M.2....V....
    4070: EA D1 D8 E2 FA 23 46 FA 23 56 FC 8A 4D 03 32 ED  // .....#F.#V..M.2.
    4080: E3 06 D1 E0 D1 D2 E2 FA 26 09 44 1C 26 09 54 1E  // ........&.D.&.T.
    4090: C9 5F 5E 5A C3 55 8B EC 53 51 52 57 50 8B D8 26  // ._^Z.U..SQRWP..&
    40A0: 8B 7F 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF  // ..&.E.2.. .+....
    40B0: 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 02 88 4E F6  // ...........M..N.
    40C0: C6 46 F7 00 8B FA 8B 4E F6 E3 06 D1 E0 D1 D7 E2  // .F.....N........
    40D0: FA 26 09 47 1C 26 09 7F 1E 8D 66 F8 5F 5A E9 F1  // .&.G.&....f._Z..
    40E0: FE 53 51 52 57 8B D8 8C D0 8E C0 26 8B 77 26 8A  // .SQRW......&.w&.
    40F0: 4C 01 32 ED B8 20 00 2B C1 8B C8 BE FF FF 8B D6  // L.2.. .+........
    4100: E3 06 D1 EA D1 DE E2 FA 26 8B 7F 26 8A 4D 02 32  // ........&..&.M.2
    4110: ED 8B C6 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26  // ...............&
    4120: 21 47 1C 26 21 57 1E 5F E9 CC 05 53 56 8B D8 8C  // !G.&!W._...SV...
    4130: D2 8E C2 26 8B 77 26 80 3C 00 74 73 80 3C 01 75  // ...&.w&.<.ts.<.u
    4140: 58 8A 44 01 32 E4 26 83 7F 1E 00 75 4C 26 3B 47  // X.D.2.&....uL&;G
    4150: 1C 75 46 8A 04 6B F0 03 8A 84 80 A4 26 01 47 26  // .uF..k......&.G&
    4160: 8C D0 8E C0 26 8B 77 26 80 3C 09 74 17 8A 04 32  // ....&.w&.<.t...2
    4170: E4 6B F0 03 8B C3 FF 94 7E A4 26 8B 77 26 8A 04  // .k......~.&.w&..
    4180: 32 E4 EB D1 8B 44 01 26 29 47 26 26 FF 47 26 26  // 2....D.&)G&&.G&&
    4190: 8B 47 1C 26 8B 77 1E EB 1A 26 8B 77 26 8A 04 32  // .G.&.w...&.w&..2
    41A0: E4 6B F0 03 8A 84 80 A4 26 01 47 26 E9 80 FF 33  // .k......&.G&...3
    41B0: C0 33 F6 8B D6 5E 5B C3 53 51 52 56 8B D8 8D 77  // .3...^[.SQRV...w
    41C0: 35 26 8B 54 02 26 89 57 14 26 C7 47 16 00 00 8B  // 5&.T.&.W.&.G....
    41D0: F0 26 8B 47 20 33 D2 26 01 47 14 26 11 54 16 8C  // .&.G 3.&.G.&.T..
    41E0: D1 8E C1 26 F6 47 2F 06 0F 85 0A 05 26 80 7F 34  // ...&.G/.....&..4
    41F0: 00 75 22 26 8B 77 16 26 0B 77 14 75 10 26 D1 67  // .u"&.w.&.w.u.&.g
    4200: 08 26 D1 57 0A 26 D1 67 08 26 D1 57 0A 8B C3 E8  // .&.W.&.g.&.W....
    4210: E4 11 E9 E1 04 26 8A 47 34 32 E4 05 80 00 99 26  // .....&.G42.....&
    4220: 89 47 1C 26 89 57 1E 8B C3 E8 FF FE E9 C7 04 53  // .G.&.W.........S
    4230: 56 8B D8 8D 77 35 26 8A 44 02 32 E4 C1 E0 02 26  // V...w5&.D.2....&
    4240: 8B 37 26 8B 34 03 F0 26 8B 47 08 26 8B 5F 0A 26  // .7&.4..&.G.&._.&
    4250: 89 04 26 89 5C 02 5E 5B C3 53 52 56 8B D8 8C D0  // ..&.\.^[.SRV....
    4260: 8D 77 35 8E C0 26 8A 54 02 80 FA 40 73 21 26 8B  // .w5..&.T...@s!&.
    4270: 77 02 32 F6 C1 E2 02 26 8B 74 04 03 F2 26 8B 57  // w.2....&.t...&.W
    4280: 08 26 8B 47 0A 26 89 14 26 89 44 02 E9 7F 00 80  // .&.G.&..&.D.....
    4290: FA 41 75 12 26 8B 47 08 26 8B 57 0A 26 89 47 10  // .Au.&.G.&.W.&.G.
    42A0: 26 89 57 12 EB 68 80 FA 40 75 12 26 8B 47 08 26  // &.W..h..@u.&.G.&
    42B0: 8B 57 0A 26 89 47 0C 26 89 57 0E EB 51 80 FA 42  // .W.&.G.&.W..Q..B
    42C0: 75 0A 26 8B 47 08 26 89 47 22 EB 42 80 FA 43 75  // u.&.G.&.G".B..Cu
    42D0: 0A 26 8A 47 08 26 88 47 33 EB 33 80 FA 46 75 12  // .&.G.&.G3.3..Fu.
    42E0: 26 8B 57 08 26 8B 47 0A 26 89 57 18 26 89 47 1A  // &.W.&.G.&.W.&.G.
    42F0: EB 1C 80 FA 47 75 0A 26 8B 47 08 26 89 47 24 EB  // ....Gu.&.G.&.G$.
    4300: 0D 80 FA 48 75 08 26 8B 47 08 26 89 47 20 5E 5A  // ...Hu.&.G.&.G ^Z
    4310: 5B C3 53 56 8B D8 8D 77 35 26 8A 44 02 32 E4 26  // [.SV...w5&.D.2.&
    4320: 89 47 14 26 C7 47 16 00 00 5E 5B C3 53 56 8B D8  // .G.&.G...^[.SV..
    4330: 26 8B 77 02 26 8B 74 02 8A 04 32 E4 26 89 47 14  // &.w.&.t...2.&.G.
    4340: 26 C7 47 16 00 00 26 8B 5F 02 26 FF 47 02 5E 5B  // &.G...&._.&.G.^[
    4350: C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B 34 26  // .SV..&.w.&.t..4&
    4360: 89 77 14 26 C7 47 16 00 00 26 8B 5F 02 26 83 47  // .w.&.G...&._.&.G
    4370: 02 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74  // ..^[.SV..&.w.&.t
    4380: 02 8B 04 8B 74 02 26 89 47 14 26 89 77 16 26 8B  // ....t.&.G.&.w.&.
    4390: 5F 02 26 83 47 02 04 5E 5B C3 53 52 56 8B D8 E8  // _.&.G..^[.SRV...
    43A0: 70 FF 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1 D8  // p...&.G.&.W.....
    43B0: D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3 E8 96  // ....&.G.&.T.....
    43C0: 10 E9 4A FF 53 8B D8 26 8B 5F 02 26 FF 47 02 5B  // ..J.S..&._.&.G.[
    43D0: C3 53 8B D8 26 8B 5F 02 26 83 47 02 02 5B C3 53  // .S..&._.&.G..[.S
    43E0: 56 8B D8 E8 6B FF 8B F3 26 8B 57 20 33 C0 26 01  // V...k...&.W 3.&.
    43F0: 57 14 26 11 44 16 8C D2 8E C2 26 8B 47 2E 32 C0  // W.&.D.....&.G.2.
    4400: 80 E4 06 3D 00 02 75 07 32 E4 33 D2 5E 5B C3 26  // ...=..u.2.3.^[.&
    4410: 8B 47 2E 32 C0 80 E4 06 3D 00 04 74 EB 26 80 7F  // .G.2....=..t.&..
    4420: 34 00 75 08 8B C3 E8 9A 0F 5E 5B C3 26 8A 47 34  // 4.u......^[.&.G4
    4430: 32 E4 26 89 47 1C 26 C7 47 1E 00 00 8B C3 E8 EA  // 2.&.G.&.G.......
    4440: FC 5E 5B C3 53 8B D8 E8 E2 FE 26 8B 47 14 C1 E0  // .^[.S.....&.G...
    4450: 02 26 8B 1F 26 8B 1F 03 D8 26 8B 07 26 8B 57 02  // .&..&....&..&.W.
    4460: 5B C3 68 44 5D 44 73 44 C2 44 79 44 91 44 AB 44  // [.hD]DsD.DyD.D.D
    4470: B6 44 BC 44 53 51 56 8B D8 E8 B0 FE 8C D2 8E C2  // .D.DSQV.........
    4480: 26 83 7F 16 00 75 22 26 83 7F 14 40 73 1B 26 8B  // &....u"&...@s.&.
    4490: 77 02 26 8B 5F 14 C1 E3 02 26 8B 44 04 03 D8 26  // w.&._....&.D...&
    44A0: 8B 07 26 8B 57 02 E9 7B 05 26 8B 77 14 26 8B 47  // ..&.W..{.&.w.&.G
    44B0: 16 83 C6 C0 83 D0 FF 75 71 83 FE 08 77 6C 03 F6  // .......uq...wl..
    44C0: 2E FF A4 FA 43 26 8B 47 10 26 8B 57 12 E9 54 05  // ....C&.G.&.W..T.
    44D0: 26 8B 47 0C 26 8B 57 0E E9 49 05 26 8B 47 22 EB  // &.G.&.W..I.&.G".
    44E0: 4B 26 8A 4F 33 32 ED BB 01 00 33 D2 E3 06 D1 E3  // K&.O32....3.....
    44F0: D1 D2 E2 FA 8B C3 E9 2B 05 26 8A 4F 33 32 ED B8  // .......+.&.O32..
    4500: 01 00 33 D2 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..3.............
    4510: E9 11 05 26 8B 47 18 26 8B 57 1A E9 06 05 26 8B  // ...&.G.&.W....&.
    4520: 47 24 EB 08 26 8B 47 20 EB 02 33 C0 33 D2 E9 F3  // G$..&.G ..3.3...
    4530: 04 53 56 8B D8 E8 F4 FD 8B F3 26 8B 47 18 26 8B  // .SV.......&.G.&.
    4540: 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14 26 11  // W.........&.G.&.
    4550: 54 16 8B C3 E8 81 0E 5E 5B C3 33 C0 33 D2 C3 53  // T......^[.3.3..S
    4560: 56 8B D8 E8 EB FD 26 8B 77 14 26 03 77 22 8B 04  // V.....&.w.&.w"..
    4570: 8B 54 02 5E 5B C3 53 8B D8 26 C6 47 2B 04 E8 AB  // .T.^[.S..&.G+...
    4580: FD 26 8B 47 14 26 8B 57 16 5B C3 53 8B D8 26 C6  // .&.G.&.W.[.S..&.
    4590: 47 2B 01 E8 BB FD EB E9 53 8B D8 26 C6 47 2B 00  // G+......S..&.G+.
    45A0: E8 D2 FD EB DC 53 8B D8 83 C3 35 26 8A 5F 01 C0  // .....S....5&._..
    45B0: EB 03 80 E3 07 32 FF 03 DB FF 97 0E A4 5B C3 53  // .....2.......[.S
    45C0: 52 56 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // RV..&.G,2.......
    45D0: FF 94 2A A4 26 89 47 08 26 89 57 0A 26 8A 47 2D  // ..*.&.G.&.W.&.G-
    45E0: 32 E4 8B F0 03 F0 8B C3 FF 94 42 A4 26 89 47 04  // 2.........B.&.G.
    45F0: 26 89 57 06 E9 17 FD 53 51 56 8B D8 26 8A 4F 2B  // &.W....SQV..&.O+
    4600: 32 ED 8B F1 8A 8C 72 A4 E3 0A 26 D1 6F 06 26 D1  // 2.....r...&.o.&.
    4610: 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B  // _...&.O+2.......
    4620: 8C 52 A4 8B B4 54 A4 26 21 4F 04 26 21 77 06 26  // .R...T.&!O.&!w.&
    4630: 8A 4F 2A 32 ED 8B F1 8A 8C 7A A4 E3 0A 26 D1 67  // .O*2.....z...&.g
    4640: 04 26 D1 57 06 E2 F6 26 8B 4F 08 26 8B 77 0A 26  // .&.W...&.O.&.w.&
    4650: 89 4F 14 26 89 77 16 E9 CA 03 53 51 52 56 57 8B  // .O.&.w....SQRVW.
    4660: D8 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02  // .....&.G+2......
    4670: 26 8A 47 2A 8B F8 8A 8D 7A A4 32 ED 8B 84 52 A4  // &.G*....z.2...R.
    4680: 8B 94 54 A4 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..T.............
    4690: 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4 8B F0  // &!G.&!W.&.G*2...
    46A0: 8A 8C 7A A4 32 ED E3 0A 26 D1 6F 0A 26 D1 5F 08  // ..z.2...&.o.&._.
    46B0: E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84 52 A4 8B  // ..&.G+.......R..
    46C0: 94 54 A4 26 21 47 08 26 21 57 0A 26 8A 47 2A 32  // .T.&!G.&!W.&.G*2
    46D0: E4 8B F0 8A 8C 7A A4 32 ED E3 0A 26 D1 67 08 26  // .....z.2...&.g.&
    46E0: D1 57 0A E2 F6 26 8B 47 14 26 8B 57 16 26 09 47  // .W...&.G.&.W.&.G
    46F0: 08 26 09 57 0A 5F 5E 5A 59 5B C3 53 51 56 8B D8  // .&.W._^ZY[.SQV..
    4700: 26 8A 4F 2B 32 ED 8B F1 8A 8C 72 A4 E3 0A 26 D1  // &.O+2.....r...&.
    4710: 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1  // o.&._...&.O+2...
    4720: C1 E6 02 8B 8C 52 A4 8B B4 54 A4 26 21 4F 04 26  // .....R...T.&!O.&
    4730: 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C 7A A4 E3  // !w.&.O*2.....z..
    4740: 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 4F 2B 32  // .&.o.&._...&.O+2
    4750: ED 8B F1 C1 E6 02 8B 8C 52 A4 8B B4 54 A4 26 21  // ........R...T.&!
    4760: 4F 08 26 21 77 0A E9 BB 02 51 52 57 8B D8 8C D0  // O.&!w....QRW....
    4770: 8E C0 26 80 7F 2B 00 74 1A 26 8A 47 2C 32 E4 8B  // ..&..+.t.&.G,2..
    4780: F0 03 F0 8B C3 FF 94 2A A4 26 89 47 08 26 89 57  // .......*.&.G.&.W
    4790: 0A EB 10 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // ...&.G,2........
    47A0: 94 36 A4 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF  // .6.&.G-2........
    47B0: 94 42 A4 26 89 47 04 26 89 57 06 8C D2 8E C2 26  // .B.&.G.&.W.....&
    47C0: 80 7F 2B 00 74 4A 26 8A 47 2B 32 E4 8B F0 C1 E6  // ..+.tJ&.G+2.....
    47D0: 02 26 8A 47 2A 8B F8 8A 8D 7A A4 32 ED 8B 84 52  // .&.G*....z.2...R
    47E0: A4 8B 94 54 A4 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7  // ...T............
    47F0: D2 26 21 47 08 26 21 57 0A 8B C3 E8 F9 FD 26 8B  // .&!G.&!W......&.
    4800: 47 04 26 8B 57 06 26 09 47 08 26 09 57 0A EB 10  // G.&.W.&.G.&.W...
    4810: 26 8B 57 04 26 8B 47 06 26 89 57 08 26 89 47 0A  // &.W.&.G.&.W.&.G.
    4820: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 1E A4  // &.G,2...........
    4830: 5F 5A 59 C3 53 51 52 56 57 8B D8 26 8A 47 2A 32  // _ZY.SQRVW..&.G*2
    4840: E4 8B F0 8A 8C 7A A4 32 ED E3 0A 26 D1 67 04 26  // .....z.2...&.g.&
    4850: D1 57 06 E2 F6 8C D0 8E C0 26 8A 47 2B 32 E4 8B  // .W.......&.G+2..
    4860: F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D 7A A4 32 ED  // ....&.G*....z.2.
    4870: 8B 84 52 A4 8B 94 54 A4 E3 06 D1 E0 D1 D2 E2 FA  // ..R...T.........
    4880: F7 D0 F7 D2 26 09 47 04 26 09 57 06 26 8B 47 04  // ....&.G.&.W.&.G.
    4890: 26 8B 57 06 26 21 47 08 26 21 57 0A E9 56 FE 55  // &.W.&!G.&!W..V.U
    48A0: 8B EC 51 52 50 8B D8 26 8A 47 2C 32 E4 8B F0 03  // ..QRP..&.G,2....
    48B0: F0 8B C3 FF 94 2A A4 26 89 47 08 26 89 57 0A 26  // .....*.&.G.&.W.&
    48C0: 8A 47 2B 88 46 FA 8B C3 E8 DA FC 26 89 47 04 26  // .G+.F......&.G.&
    48D0: 89 57 06 26 8A 4F 2D 32 ED 8B F1 03 F1 8B C3 FF  // .W.&.O-2........
    48E0: 94 42 A4 26 89 47 14 26 89 57 16 8B C3 E8 44 FF  // .B.&.G.&.W....D.
    48F0: 8A 46 FA 32 E4 8B F0 8A 8C 72 A4 E3 0A 26 D1 6F  // .F.2.....r...&.o
    4900: 16 26 D1 5F 14 E2 F6 26 8A 57 2B 32 F6 8B F2 C1  // .&._...&.W+2....
    4910: E6 02 8B 84 52 A4 8B 94 54 A4 26 21 47 14 26 21  // ....R...T.&!G.&!
    4920: 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C 7A A4 32 ED  // W.&.G*2.....z.2.
    4930: E3 0A 26 D1 67 14 26 D1 57 16 E2 F6 26 8B 47 14  // ..&.g.&.W...&.G.
    4940: 26 8B 57 16 26 09 47 08 26 09 57 0A 26 8A 47 2C  // &.W.&.G.&.W.&.G,
    4950: 32 E4 8B F0 03 F0 8B C3 FF 94 1E A4 8D 66 FC 5A  // 2............f.Z
    4960: 59 5D C3 51 8B D8 E8 56 FC 26 8A 4F 2B 32 ED 8B  // Y].Q...V.&.O+2..
    4970: F1 8A 8C 72 A4 E3 0A 26 D1 6F 06 26 D1 5F 04 E2  // ...r...&.o.&._..
    4980: F6 8B C3 E8 AE FE 26 8A 4F 2C 32 ED 8B F1 03 F1  // ......&.O,2.....
    4990: 8B C3 FF 94 1E A4 59 C3 8B D8 E8 22 FC 8B C3 E8  // ......Y...."....
    49A0: 55 FC 26 8B 47 04 26 8B 77 06 26 09 47 08 26 09  // U.&.G.&.w.&.G.&.
    49B0: 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // w.&.G,2.........
    49C0: 1E A4 C3 53 56 8B D8 E8 F5 FB 8B C3 E8 28 FC 26  // ...SV........(.&
    49D0: 8B 47 04 26 8B 77 06 26 31 47 08 26 31 77 0A 26  // .G.&.w.&1G.&1w.&
    49E0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 1E A4 5E  // .G,2...........^
    49F0: 5B C3 53 51 56 8B D8 E8 C5 FB 8B C3 E8 F8 FB 26  // [.SQV..........&
    4A00: 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 8B  // .O...&.g.&.W....
    4A10: C3 E8 46 FC 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3  // ..F.&.O,2.......
    4A20: FF 94 1E A4 5E 59 5B C3 53 51 56 8B D8 E8 8F FB  // ....^Y[.SQV.....
    4A30: 8B C3 E8 C2 FB 26 8B 4F 04 E3 0A 26 D1 6F 0A 26  // .....&.O...&.o.&
    4A40: D1 5F 08 E2 F6 EB C8 52 8B D8 E8 72 FB 8B C3 E8  // ._.....R...r....
    4A50: A5 FB 8B F3 26 8B 47 04 26 8B 57 06 26 01 47 08  // ....&.G.&.W.&.G.
    4A60: 26 11 54 0A 8B C3 E8 F1 FB 26 8A 47 2C 32 E4 8B  // &.T......&.G,2..
    4A70: F0 03 F0 8B C3 FF 94 1E A4 5A C3 52 8B D8 E8 3E  // .........Z.R...>
    4A80: FB 8B C3 E8 71 FB 8B F3 26 8B 47 04 26 8B 57 06  // ....q...&.G.&.W.
    4A90: 26 29 47 08 26 19 54 0A EB CA 51 52 8B F0 E8 1E  // &)G.&.T...QR....
    4AA0: FB 8B C6 E8 55 FC 26 8B 44 08 26 8B 54 0A 26 8B  // ....U.&.D.&.T.&.
    4AB0: 5C 04 26 8B 4C 06 E8 1C F3 26 89 44 0C 26 89 54  // \.&.L....&.D.&.T
    4AC0: 0E 5A 59 C3 51 52 57 8B F0 E8 F3 FA 8B C6 E8 2A  // .ZY.QRW........*
    4AD0: FC 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C  // .&.D.&.T.&.\.&.L
    4AE0: 06 E8 6D F2 26 89 44 0C 26 89 54 0E 8C D7 8E C7  // ..m.&.D.&.T.....
    4AF0: 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06  // &.D.&.T.&.\.&.L.
    4B00: E8 4E F2 26 89 5C 10 26 89 4C 12 E9 22 FD 51 52  // .N.&.\.&.L..".QR
    4B10: 8B D8 E8 AA FA 8B C3 E8 E1 FB 8C D1 8E C1 26 8B  // ..............&.
    4B20: 47 08 26 8B 57 0A 26 3B 57 06 75 0E 26 3B 47 04  // G.&.W.&;W.u.&;G.
    4B30: 75 08 26 C6 47 30 01 5A 59 C3 8B D0 26 8B 47 0A  // u.&.G0.ZY...&.G.
    4B40: 26 3B 47 06 72 08 75 0A 26 3B 57 04 73 04 33 C0  // &;G.r.u.&;W.s.3.
    4B50: EB 03 B8 02 00 26 88 47 30 5A 59 C3 51 52 57 8B  // .....&.G0ZY.QRW.
    4B60: D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 2A  // .&.G,2.........*
    4B70: A4 26 89 47 08 26 89 57 0A 8C D0 8E C0 26 8A 47  // .&.G.&.W.....&.G
    4B80: 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D 72 A4 32 ED  // +2..........r.2.
    4B90: 8B 84 52 A4 8B 94 54 A4 E3 06 D1 E0 D1 D2 E2 FA  // ..R...T.........
    4BA0: F7 D0 F7 D2 26 21 47 08 26 21 57 0A E9 71 FC 55  // ....&!G.&!W..q.U
    4BB0: 8B EC 51 52 57 83 EC 06 8B D8 26 8A 47 2B 32 E4  // ..QRW.....&.G+2.
    4BC0: 8B F0 C1 E6 02 8B F8 8A 8D 72 A4 32 ED 8B 84 52  // .........r.2...R
    4BD0: A4 89 46 F4 8B 84 54 A4 89 46 F6 E3 08 D1 66 F4  // ..F...T..F....f.
    4BE0: D1 56 F6 E2 F8 8B 7E F4 8B 46 F6 89 46 F8 26 8A  // .V....~..F..F.&.
    4BF0: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 2A A4 26 89  // G,2.........*.&.
    4C00: 47 08 26 89 57 0A 8B C3 E8 6B F9 26 89 47 04 26  // G.&.W....k.&.G.&
    4C10: 89 57 06 8B C7 F7 D0 8B 56 F6 F7 D2 26 23 47 08  // .W......V...&#G.
    4C20: 26 23 57 0A 26 89 47 14 26 89 57 16 26 21 7F 08  // &#W.&.G.&.W.&!..
    4C30: 8B 46 F6 26 21 47 0A 8C D1 8D 77 35 8E C1 26 80  // .F.&!G....w5..&.
    4C40: 3C 19 73 12 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1  // <.s.&.O...&.g.&.
    4C50: 57 0A E2 F6 EB 10 26 8B 4F 04 E3 0A 26 D1 6F 0A  // W.....&.O...&.o.
    4C60: 26 D1 5F 08 E2 F6 26 21 7F 08 8B 46 F8 26 21 47  // &._...&!...F.&!G
    4C70: 0A 26 8B 57 14 26 8B 47 16 26 09 57 08 26 09 47  // .&.W.&.G.&.W.&.G
    4C80: 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 1E  // .&.G,2..........
    4C90: A4 8D 66 FA 5F E9 C7 FC 52 8B D8 E8 21 F9 8B C3  // ..f._...R...!...
    4CA0: E8 58 FA 26 8B 47 08 26 8B 57 0A 26 85 57 06 75  // .X.&.G.&.W.&.W.u
    4CB0: 06 26 85 47 04 74 05 B8 03 00 EB 03 B8 01 00 26  // .&.G.t.........&
    4CC0: 88 47 30 5A C3 53 51 52 56 8B D8 26 8A 4F 2D 32  // .G0Z.SQRV..&.O-2
    4CD0: ED 8B F1 03 F1 FF 94 42 A4 26 89 47 04 26 89 57  // .......B.&.G.&.W
    4CE0: 06 26 8A 47 2B 32 E4 8B F0 8A 8C 72 A4 E3 0A 26  // .&.G+2.....r...&
    4CF0: D1 6F 06 26 D1 5F 04 E2 F6 26 8A 47 2B 8B F0 C1  // .o.&._...&.G+...
    4D00: E6 02 8B 84 52 A4 8B 94 54 A4 26 21 47 04 26 21  // ....R...T.&!G.&!
    4D10: 57 06 E9 E1 F9 52 8B D8 E8 AA FF 26 8B 47 04 26  // W....R.....&.G.&
    4D20: 8B 57 06 26 89 47 18 26 89 57 1A 5A C3 51 52 8B  // .W.&.G.&.W.Z.QR.
    4D30: D8 E8 91 FF 8C D0 8E C0 26 8B 77 02 26 8B 74 02  // ........&.w.&.t.
    4D40: 81 3C 5A 5A 74 5B 26 8B 77 02 26 8B 74 02 80 3C  // .<ZZt[&.w.&.t..<
    4D50: 63 75 E1 26 8B 77 02 26 FF 44 02 8B C3 E8 45 F8  // cu.&.w.&.D....E.
    4D60: 26 89 47 08 26 89 57 0A 8B C3 E8 1E F8 26 89 47  // &.G.&.W......&.G
    4D70: 14 26 89 57 16 8C D1 8E C1 26 8B 57 04 26 8B 47  // .&.W.....&.W.&.G
    4D80: 06 26 3B 47 0A 75 AD 26 3B 57 08 75 A7 26 8B 77  // .&;G.u.&;W.u.&.w
    4D90: 02 26 8B 04 26 03 47 14 8B DE 26 89 47 02 5A 59  // .&..&.G...&.G.ZY
    4DA0: C3 26 8B 5F 02 26 83 47 02 02 5A 59 C3 52 57 8B  // .&._.&.G..ZY.RW.
    4DB0: D8 8C D0 8E C0 26 8B 77 02 26 8B 74 02 8A 54 01  // .....&.w.&.t..T.
    4DC0: 84 D2 75 08 26 C7 47 22 00 00 EB 2F 80 FA FF 75  // ..u.&.G".../...u
    4DD0: 14 26 8B 77 02 26 8B 3F 26 8B 34 26 2B 75 02 26  // .&.w.&.?&.4&+u.&
    4DE0: 89 77 22 EB 16 26 8B 07 E8 C7 03 8B F0 8A C2 32  // .w"..&.........2
    4DF0: E4 03 C0 03 F0 8B 04 26 89 47 22 26 8B 5F 02 26  // .......&.G"&._.&
    4E00: 83 47 02 02 5F 5A C3 8B D8 26 80 67 2F F9 26 8B  // .G.._Z...&.g/.&.
    4E10: 77 02 26 8B 74 02 8A 44 01 26 88 47 34 26 8B 5F  // w.&.t..D.&.G4&._
    4E20: 02 26 83 47 02 03 C3 8B D8 26 8B 77 02 26 8B 74  // .&.G.....&.w.&.t
    4E30: 02 8B 74 01 26 89 77 20 EB E3 53 8B D8 26 8A 47  // ..t.&.w ..S..&.G
    4E40: 2C 32 E4 24 03 26 80 67 2F F9 C1 E0 09 26 09 47  // ,2.$.&.g/....&.G
    4E50: 2E E9 73 F5 8B D8 26 8B 77 02 26 8B 74 02 8A 44  // ..s...&.w.&.t..D
    4E60: 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8  // .2.&.G.&.G......
    4E70: 24 05 26 8B 5F 02 26 83 47 02 02 C3 8B D8 26 8B  // $.&._.&.G.....&.
    4E80: 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26  // w.&.t..D.2.&.G.&
    4E90: C7 47 06 00 00 8B C3 E8 EC 04 EB D6 53 56 8B D8  // .G..........SV..
    4EA0: 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47  // &.w.&.t..D.2.&.G
    4EB0: 04 26 C7 47 06 00 00 8B C3 E8 EA 04 E9 AA F4 53  // .&.G...........S
    4EC0: 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4  // V..&.w.&.t..D.2.
    4ED0: 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 D4 04 E9  // &.G.&.G.........
    4EE0: 87 F4 53 56 8B D8 26 8B 77 02 8B DE 26 8B 5F 02  // ..SV..&.w...&._.
    4EF0: 8B 5F 01 83 C3 03 26 01 5C 02 5E 5B C3 51 52 8B  // ._....&.\.^[.QR.
    4F00: D8 26 8B 77 02 26 83 44 02 02 26 8B 07 E8 84 02  // .&.w.&.D..&.....
    4F10: 8B C8 26 8B 77 28 8A 44 01 32 E4 03 C0 8B F1 03  // ..&.w(.D.2......
    4F20: F0 83 3C 00 74 4F 26 8B 77 28 8A 54 01 32 F6 8B  // ..<.tO&.w(.T.2..
    4F30: C3 E8 94 02 26 88 47 31 26 8B 77 02 26 8B 34 8B  // ....&.G1&.w.&.4.
    4F40: 44 04 C1 E8 08 32 E4 24 7F C1 E8 02 32 E4 24 1F  // D....2.$....2.$.
    4F50: 26 80 67 2F 07 C1 E0 0B 26 09 47 2E 26 8B 37 26  // &.g/....&.G.&.7&
    4F60: 8B 47 2E C1 E8 0B C1 E0 02 26 01 04 26 C6 47 32  // .G.......&..&.G2
    4F70: 01 26 89 4F 28 5A 59 C3 53 8B D8 26 C6 47 32 82  // .&.O(ZY.S..&.G2.
    4F80: 5B C3 57 8B D8 8C D6 8E C6 26 80 7F 2C 05 74 0A  // [.W......&..,.t.
    4F90: 26 8A 47 2C 26 3A 47 30 75 1E 26 8B 77 02 26 8B  // &.G,&:G0u.&.w.&.
    4FA0: 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B  // t.&...&.=.t...&.
    4FB0: 5F 02 26 89 77 02 5F C3 26 8B 5F 02 26 83 47 02  // _.&.w._.&._.&.G.
    4FC0: 03 5F C3 53 56 57 8B D8 8C D6 8E C6 26 80 7F 30  // ._.SVW......&..0
    4FD0: 01 74 0A 26 8A 47 30 26 3A 47 2C 75 20 26 8B 77  // .t.&.G0&:G,u &.w
    4FE0: 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03  // .&.t.&...&.=.t..
    4FF0: F7 26 8B 5F 02 26 89 77 02 5F 5E 5B C3 26 8B 5F  // .&._.&.w._^[.&._
    5000: 02 26 83 47 02 03 EB F1 53 56 57 8B D8 8C D0 8E  // .&.G....SVW.....
    5010: C0 26 80 7F 30 01 74 E5 EB C3 55 8B EC 53 51 52  // .&..0.t...U..SQR
    5020: 57 50 8B D8 8C D1 8E C1 26 8B 77 02 26 8B 74 02  // WP......&.w.&.t.
    5030: 8A 04 3C 80 0F 86 D0 00 26 8B 3F 26 8B 77 28 26  // ..<.....&.?&.w(&
    5040: 8B 55 02 8B 74 01 03 F2 89 76 F6 26 C6 47 3D 00  // .U..t....v.&.G=.
    5050: 26 8B 77 28 F6 44 02 80 74 16 8B 76 F6 8A 24 26  // &.w(.D..t..v..$&
    5060: 88 67 35 02 C0 0C 01 FF 46 F6 26 FE 47 3D EB 04  // .g5.....F.&.G=..
    5070: 80 46 F7 80 26 8B 77 02 26 83 44 02 03 3C 80 74  // .F..&.w.&.D..<.t
    5080: 49 A8 80 74 17 26 8A 67 3D 8A D4 32 F6 FE C4 26  // I..t.&.g=..2...&
    5090: 88 67 3D 8B F3 03 F2 8B 7E F6 EB 21 26 8B 77 02  // .g=.....~..!&.w.
    50A0: 26 8B 7C 02 8D 55 01 26 89 54 02 26 8A 57 3D 8A  // &.|..U.&.T.&.W=.
    50B0: CA 32 ED FE C2 26 88 57 3D 8B F3 03 F1 8A 25 26  // .2...&.W=.....%&
    50C0: 88 64 35 02 C0 FF 46 F6 EB B3 26 8A 47 35 8A D0  // .d5...F...&.G5..
    50D0: 32 F6 8B F2 C1 E6 02 8A A4 9F A4 26 88 67 3D 8D  // 2..........&.g=.
    50E0: 77 35 26 8A 64 01 80 E4 07 26 88 67 2D 8D 77 35  // w5&.d....&.g-.w5
    50F0: 26 8A 64 01 C0 EC 03 80 E4 07 26 88 67 2B 8D 77  // &.d.......&.g+.w
    5100: 35 26 8A 64 01 E9 6B 00 26 C6 47 3D 00 8C D7 8E  // 5&.d..k.&.G=....
    5110: C7 26 80 7F 3D 08 73 20 26 8B 77 02 26 8A 57 3D  // .&..=.s &.w.&.W=
    5120: 32 F6 26 8B 74 02 03 F2 8B FB 03 FA 8A 24 26 88  // 2.&.t........$&.
    5130: 65 35 26 FE 47 3D EB D5 26 8B 77 02 8A D0 32 F6  // e5&.G=..&.w...2.
    5140: 8B FA C1 E7 02 8A 95 9F A4 26 01 54 02 26 8B 77  // .........&.T.&.w
    5150: 28 8A 64 01 80 E4 07 26 88 67 2D 26 8B 77 28 8A  // (.d....&.g-&.w(.
    5160: 64 01 C0 EC 03 80 E4 07 26 88 67 2B 26 8B 77 28  // d.......&.g+&.w(
    5170: 8A 64 01 C0 EC 06 26 88 67 2A 8A D0 32 F6 8B F2  // .d....&.g*..2...
    5180: C1 E6 02 8A A4 9E A4 26 88 67 2C 8D 66 F8 5F 5A  // .......&.g,.f._Z
    5190: 59 5B 5D C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74  // Y[].SV..&.w....t
    51A0: 48 03 F0 8B D8 8B 74 1E 8B C6 03 C3 83 C0 04 5E  // H.....t........^
    51B0: 5B C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74 48 03  // [.SV..&.w....tH.
    51C0: F0 8B D8 8B 74 20 EB E0 8A C2 C3 16 07 55 8B EC  // ....t .......U..
    51D0: 53 51 56 57 83 EC 40 8B F8 89 46 B8 E8 D3 FF 8B  // SQVW..@...F.....
    51E0: D8 89 46 E0 26 8B 45 02 8B 5F 2E 03 D8 89 5E DE  // ..F.&.E.._....^.
    51F0: 83 46 DE 04 8B C7 E8 9B FF 89 46 E0 32 F6 8D 46  // .F........F.2..F
    5200: B8 E8 C4 FF 8A D0 32 F6 03 D2 8B 5E E0 03 DA 83  // ......2....^....
    5210: 3F 00 0F 84 65 01 88 46 E9 80 66 E7 F9 C6 46 EC  // ?...e..F..f...F.
    5220: 00 C7 46 D8 00 00 66 C7 46 D0 00 00 00 00 C7 46  // ..F...f.F......F
    5230: F6 00 00 C6 46 EA 01 EB 06 3C 01 0F 85 8C 00 8A  // ....F....<......
    5240: 56 E9 8A C2 32 E4 03 C0 8B 5E E0 03 D8 83 3F 00  // V...2....^....?.
    5250: 74 75 26 8B 45 02 8B 1F 03 D8 8B 47 04 32 E4 8B  // tu&.E......G.2..
    5260: C8 83 C1 09 32 ED 80 E1 FE 83 F9 00 74 07 D1 E9  // ....2.......t...
    5270: 33 C0 50 E2 FD 8B C4 8B D8 89 46 BA 85 C0 74 41  // 3.P.......F...tA
    5280: 83 C0 08 26 89 47 04 8A C2 32 E4 03 C0 8B 5E E0  // ...&.G...2....^.
    5290: 03 D8 26 8B 45 02 03 07 8B 5E BA 26 89 07 8B 5E  // ..&.E....^.&...^
    52A0: BA 26 8B 07 83 C0 06 26 89 47 02 8B 5E BA 8B 76  // .&.....&.G..^..v
    52B0: F6 26 89 77 06 8B 5E BA 89 5E F6 C6 46 EA 00 EB  // .&.w..^..^..F...
    52C0: 0A C6 46 EA 87 EB 04 C6 46 EA 83 8A 46 EA 32 E4  // ..F.....F...F.2.
    52D0: 83 F8 10 0F 8F 99 00 88 66 EA 8A 46 EA 32 E4 85  // ........f..F.2..
    52E0: C0 0F 8F 83 00 8C D0 8B 5E BA 8E C0 26 8B 5F 02  // ........^...&._.
    52F0: 89 5E E0 8B 5E BA 26 8B 5F 02 80 3F 5B 75 4A C6  // .^..^.&._..?[uJ.
    5300: 46 EA 10 8B 5E BA 26 8B 5F 06 89 5E F6 8B 5E BA  // F...^.&._..^..^.
    5310: 26 8B 1F 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80  // &...G.2......2..
    5320: E1 FE 03 E1 8B 5E F6 89 5E BA 85 DB 74 AC 26 8B  // .....^..^...t.&.
    5330: 1F 8B 47 04 C1 E8 08 32 E4 24 7F C1 E8 02 C1 E0  // ..G....2.$......
    5340: 02 8B 5E B8 26 29 07 EB 91 8D 46 B8 E8 CB FC 8A  // ..^.&)....F.....
    5350: D0 8D 46 B8 E8 2E 00 8A DA 32 FF C1 E3 02 8D 46  // ..F......2.....F
    5360: B8 FF 97 9C A4 E9 72 FF 83 7E F6 00 0F 85 C9 FE  // ......r..~......
    5370: 80 7E EA 10 74 05 8A 46 EA EB 02 32 C0 8D 66 F8  // .~..t..F...2..f.
    5380: 5F 5E E9 0B FE C3 53 51 8B D8 26 8A 4F 04 32 ED  // _^....SQ..&.O.2.
    5390: E8 63 E5 59 5B C3 53 51 8B D8 26 8A 4F 04 32 ED  // .c.Y[.SQ..&.O.2.
    53A0: E8 5E E5 59 5B C3 53 8B D8 26 8A 47 04 32 E4 E6  // .^.Y[.S..&.G.2..
    53B0: 80 5B C3 53 51 8B D8 26 8A 4F 04 32 ED E8 CE CF  // .[.SQ..&.O.2....
    53C0: 59 5B C3 53 57 8B D8 26 8B 5F 14 E8 0C EB 8B D0  // Y[.SW..&._......
    53D0: 66 C1 E8 10 92 5F 5B C3 53 57 8B D8 26 8B 47 14  // f...._[.SW..&.G.
    53E0: 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3  // &.W.....f.......
    53F0: 02 E8 FF EA EB D8 53 52 57 8B D8 26 8B 47 08 26  // ......SRW..&.G.&
    5400: 8B 57 0A 92 66 C1 E0 10 8B C2 26 8B 5F 14 E8 2E  // .W..f.....&._...
    5410: EA 5F 5A 5B C3 53 52 8B D8 26 8B 47 1C 26 8B 57  // ._Z[.SR..&.G.&.W
    5420: 1E 92 66 C1 E0 10 8B C2 26 8B 5F 26 8B 5F 01 E8  // ..f.....&._&._..
    5430: 0D EA 5A 5B C3 53 52 56 8B F0 26 8B 5C 26 8B 5F  // ..Z[.SRV..&.\&._
    5440: 01 E8 96 EA 8B D0 66 C1 E8 10 92 26 89 44 1C 26  // ......f....&.D.&
    5450: 89 54 1E 5E 5A 5B C3 53 51 52 57 8B D8 26 8B 47  // .T.^Z[.SQRW..&.G
    5460: 08 26 8B 57 0A 92 66 C1 E0 10 8B C2 8B C8 26 8B  // .&.W..f.......&.
    5470: 47 14 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA  // G.&.W.....f.....
    5480: C1 E3 02 8B C1 E8 EA E9 5F 5A 59 5B C3 8B D0 66  // ........_ZY[...f
    5490: C1 E8 10 92 C3 00 1E 06 66 50 66 51 66 52 66 53  // ........fPfQfRfS
    54A0: 66 55 66 56 66 57 0E 1F 0A C0 75 06 E8 4F 01 E9  // fUfVfW....u..O..
    54B0: F0 00 3C 01 75 06 E8 7F 01 E9 E6 00 3C 02 75 06  // ..<.u.......<.u.
    54C0: E8 B3 02 E9 DC 00 3C 03 75 0B E8 03 04 8B EC 89  // ......<.u.......
    54D0: 5E 0C E9 CD 00 3C 04 75 0B E8 12 04 8B EC 89 5E  // ^....<.u.......^
    54E0: 0C E9 BE 00 3C 05 75 0B E8 3D 05 8B EC 89 56 10  // ....<.u..=....V.
    54F0: E9 AF 00 3C 06 75 11 E8 BA 04 8B EC 89 5E 0C 89  // ...<.u.......^..
    5500: 4E 14 89 56 10 E9 9A 00 3C 07 75 11 E8 AC 05 8B  // N..V....<.u.....
    5510: EC 88 7E 0D 89 4E 14 89 56 10 E9 85 00 3C 08 75  // ..~..N..V....<.u
    5520: 0A E8 EE 04 8B EC 88 7E 0D EB 77 3C 09 75 05 E8  // .......~..w<.u..
    5530: E7 05 EB 6E 3C 0A 75 10 E8 2F 06 8B EC 89 4E 14  // ...n<.u../....N.
    5540: 89 7E 00 8C 46 1C EB 5A 3C 0B 75 0B E8 29 06 8B  // .~..F..Z<.u..)..
    5550: EC 66 89 4E 14 EB 4B 3C 10 75 0A E8 28 06 8B EC  // .f.N..K<.u..(...
    5560: 89 5E 0C EB 3D 3C 11 75 0D E8 54 06 8B EC 89 5E  // .^..=<.u..T....^
    5570: 0C 89 4E 14 EB 2C 3C 14 75 11 E8 7F 06 8B EC 89  // ..N..,<.u.......
    5580: 5E 0C 89 4E 14 66 89 56 10 EB 17 3C 15 75 11 E8  // ^..N.f.V...<.u..
    5590: 8A 06 8B EC 89 5E 0C EB 09 EB 07 B8 4F 01 EB 02  // .....^......O...
    55A0: 32 C0 8B EC 89 46 18 66 5F 66 5E 66 5D 66 5B 66  // 2....F.f_f^f]f[f
    55B0: 5A 66 59 66 58 07 1F C3 50 1E 2E 8E 1E 25 03 8C  // ZfYfX...P....%..
    55C0: D8 A3 A4 68 A3 B4 68 A3 C6 68 2E 8E 1E 1D 03 A3  // ...h..h..h......
    55D0: AA 04 1F 58 CB 00 30 31 2E 30 30 00 56 45 53 41  // ...X..01.00.VESA
    55E0: 00 03 E0 01 00 00 01 00 00 00 00 00 00 00 00 01  // ................
    55F0: 2A 0F FD 00 00 00 8C 00 00 00 6E 55 00 00 B9 3F  // *.........nU...?
    5600: 00 8B DF 83 C7 04 FC 66 33 C0 F3 66 AB 8B FB BE  // .......f3..f....
    5610: 74 55 B9 22 00 F3 A4 06 1F 8C 4F 08 8C 47 10 8C  // tU."......O..G..
    5620: 4F 18 8C 4F 1C 8C 4F 20 83 C7 22 89 7F 0E 0E 1F  // O..O..O ..".....
    5630: E8 C2 CB B0 4F 32 E4 C3 56 51 57 B9 10 00 66 33  // ....O2..VQW...f3
    5640: C0 F3 66 AB 5F 59 8C DB 06 1F C7 05 BB 00 C6 45  // ..f._Y.........E
    5650: 02 07 C7 45 04 40 00 C7 45 06 40 00 C6 45 1B 04  // ...E.@..E.@..E..
    5660: C6 45 18 01 C6 45 1A 01 C6 45 1E 01 66 C7 45 3E  // .E...E...E..f.E>
    5670: 00 84 D7 17 8E DB E8 CB B2 66 0B C0 0F 84 EE 00  // .........f......
    5680: 06 1F 66 89 45 28 8C C8 66 C1 E0 10 B8 1D 5A 66  // ..f.E(..f.....Zf
    5690: 89 45 0C 81 F9 FF 81 0F 84 CF 00 80 E5 03 B2 01  // .E..............
    56A0: 53 8E DB BE 80 1C E8 6E C9 5B 06 1F 0F 84 BE 00  // S......n.[......
    56B0: 53 E8 EC CB 66 89 45 12 C7 45 16 08 10 8D 5C 0C  // S...f.E..E....\.
    56C0: E8 3A E8 66 89 45 1F 66 89 45 36 8D 5C 10 E8 2C  // .:.f.E.f.E6.\..,
    56D0: E8 66 89 45 23 66 89 45 3A 8D 5C 08 E8 1E E8 0A  // .f.E#f.E:.\.....
    56E0: C0 75 04 5B E9 87 00 E8 B6 CB 66 C1 E8 10 3D 58  // .u.[......f...=X
    56F0: 02 74 0D 3D 5E 01 74 08 77 0A C6 45 17 08 EB 04  // .t.=^.t.w..E....
    5700: C6 45 17 0E E8 60 CB 80 F9 00 74 04 C6 45 1B 06  // .E...`....t..E..
    5710: 2E A1 1F 03 89 45 08 8D 5C 04 E8 E0 E7 66 8B C8  // .....E..\....f..
    5720: 66 C1 E9 10 D3 E0 89 45 10 89 45 32 B0 08 D2 E0  // f......E..E2....
    5730: 88 45 19 8D 5C 14 E8 C4 E7 5B 3D 00 01 77 2F 53  // .E..\....[=..w/S
    5740: 8B D8 B8 00 01 33 D2 F7 F3 5B FE C8 88 45 1D 88  // .....3...[...E..
    5750: 45 35 88 45 34 8E DB 57 53 BE 80 1C E8 58 B2 5B  // E5.E4..WS....X.[
    5760: 5F 0B C9 75 05 06 1F 83 25 FE 32 E4 EB 02 B4 03  // _..u....%.2.....
    5770: B0 4F 8E DB 5E C3 81 FB FF 81 0F 84 83 00 0A FF  // .O..^...........
    5780: 75 04 8B C3 EB 21 F6 C7 08 75 7C 8B CB B2 01 BE  // u....!...u|.....
    5790: 20 1C E8 82 C8 74 70 E8 E5 CA 0A C0 75 0E 66 C1  //  ....tp.....u.f.
    57A0: E8 10 80 E7 80 0A C7 E8 CD 04 EB 55 E8 BB B6 74  // ...........U...t
    57B0: 05 E8 55 B3 EB 19 E8 1C B8 A9 01 00 74 11 E8 02  // ..U.........t...
    57C0: B9 F7 C1 02 00 74 08 E8 88 B7 80 FB 01 75 03 E8  // .....t.......u..
    57D0: 28 B8 BE 20 1C E8 B3 B1 74 2D E8 A5 00 E8 2C 00  // (.. ....t-....,.
    57E0: 66 BB 20 1C 00 1C E8 8D CA BE 00 1C E8 90 CA 66  // f. ............f
    57F0: C1 E8 10 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 15  // .....2....t..@..
    5800: B2 B0 4F 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0  // ..O2....O...V.3.
    5810: 8E C0 BE 20 1C E8 88 CA 8B C8 66 C1 E8 10 8B D0  // ... ......f.....
    5820: C1 E9 03 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16  // ...&..J......&..
    5830: 84 04 26 C6 06 51 04 00 26 C6 06 50 04 00 26 C6  // ..&..Q..&..P..&.
    5840: 06 49 04 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04  // .I.b&..L...&....
    5850: 10 26 C7 06 0C 01 C2 72 8C C8 26 A3 0E 01 07 5E  // .&.....r..&....^
    5860: C3 01 0F 00 0A 00 00 00 00 00 40 05 0F FF 00 01  // ..........@.....
    5870: 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00  // ................
    5880: 0F 00 FC BA C4 03 B8 00 01 EF B9 04 00 B4 01 BE  // ................
    5890: F9 57 AC 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03 EF  // .W..............
    58A0: B9 09 00 BA CE 03 32 E4 BE FD 57 8A C4 EE AC 42  // ......2...W....B
    58B0: EE 4A FE C4 E2 F5 BA DA 03 EC B9 14 00 BA C0 03  // .J..............
    58C0: 32 E4 BE 06 58 8A C4 EE AC EE FE C4 E2 F7 C3 00  // 2...X...........
    58D0: BE 00 1C E8 A9 C9 66 C1 E8 10 8B D8 E8 79 C9 75  // ......f......y.u
    58E0: 05 E8 65 C9 75 04 B8 4F 00 C3 B8 4F 03 C3 83 E1  // ..e.u..O...O....
    58F0: 0F 0F 84 BB 00 0A D2 75 0C B8 00 1C E8 3F 03 83  // .......u.....?..
    5900: C3 11 E9 A6 00 80 FA 01 75 33 8B FB BB C9 05 B9  // ........u3......
    5910: 08 00 FC E8 C0 E5 66 AB 43 E2 F8 66 C1 E7 10 66  // ......f.C..f...f
    5920: C1 EF 10 B9 00 01 BA 00 01 0E 1F E8 BE B3 06 1F  // ................
    5930: B8 01 1C B9 07 00 8B DF E8 03 03 EB 6E 80 FA 02  // ............n...
    5940: 75 6E 8B F3 06 1F FC BB C9 05 B9 08 00 66 AD E8  // un...........f..
    5950: DF E4 43 E2 F8 06 56 0E 1F BB D0 05 E8 77 E5 8A  // ..C...V......w..
    5960: D0 80 E2 03 66 C1 E8 10 8B C8 BE 00 1C E8 A7 C6  // ....f...........
    5970: BB CE 05 E8 60 E5 8B C8 66 C1 E8 10 8B D0 B0 18  // ....`...f.......
    5980: B7 01 E8 84 AA 5B 07 53 81 C3 00 04 B8 02 1C B9  // .....[.S........
    5990: 07 00 E8 A9 02 5E 8B FE 66 C1 E7 10 66 C1 EF 10  // .....^..f...f...
    59A0: B9 00 01 BA 00 01 0E 1F E8 90 B3 B0 4F 32 E4 C3  // ............O2..
    59B0: 32 C0 C3 00 E8 A1 C8 74 53 BE 00 1C 80 FB 00 74  // 2......tS......t
    59C0: 18 80 FB 01 75 05 E8 DF C8 EB 1D 80 FB 02 75 10  // ....u.........u.
    59D0: 8B C1 E8 92 C8 D3 E8 8B C8 E8 CC B2 74 2E EB 08  // ............t...
    59E0: 80 FB 03 75 24 E8 36 C8 E8 7C C8 8B D8 D3 E3 50  // ...u$.6..|.....P
    59F0: 33 C0 BA 00 01 3B DA 77 05 BA FF FF EB 04 F7 F3  // 3....;.w........
    5A00: 8B D0 58 8B C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03  // ..X...O..2...O..
    5A10: C3 00 0A DB 75 07 8A EF E8 12 B5 EB 05 E8 F7 B4  // ....u...........
    5A20: 8A F8 B0 4F 32 E4 C3 00 E8 2D C8 74 2C BE 00 1C  // ...O2....-.t,...
    5A30: E8 4C C8 66 C1 E8 10 F6 C4 40 75 1D 0A FF 75 05  // .L.f.....@u...u.
    5A40: E8 1E 00 EB 0F 80 FF 01 75 14 BB 13 00 E8 86 E4  // ........u.......
    5A50: D1 E8 8B D0 B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0  // .....O2...O...2.
    5A60: C3 52 53 66 50 81 E2 FF 00 D1 E2 8B C2 40 66 C1  // .RSfP........@f.
    5A70: E0 10 8B C2 BB 13 00 E8 B7 E3 BB 12 00 E8 B1 E3  // ................
    5A80: 66 58 5B 5A C3 9C 1E 06 66 50 66 51 66 52 66 53  // fX[Z....fPfQfRfS
    5A90: 66 55 66 56 66 57 0E 1F E8 9C E4 E8 8A FF E8 B9  // fUfVfW..........
    5AA0: E4 8B EC 89 56 10 89 46 18 66 5F 66 5E 66 5D 66  // ....V..F.f_f^f]f
    5AB0: 5B 66 5A 66 59 66 58 07 1F 9D CB E8 9A C7 74 54  // [fZfYfX.......tT
    5AC0: F6 C3 7F 75 38 53 BE 00 1C E8 DC C7 F7 E2 66 C1  // ...u8S........f.
    5AD0: E2 10 8B D0 66 81 E1 FF FF 00 00 66 03 D1 E8 86  // ....f......f....
    5AE0: C7 80 E2 FC 66 D3 E2 66 81 E2 FF FF FF 00 8D 5C  // ....f..f.......\
    5AF0: 18 66 8B C2 E8 71 E3 5B E8 95 B1 EB 0F 80 FB 82  // .f...q.[........
    5B00: 74 C3 80 FB 01 75 0A E8 7A B1 32 FF B0 4F 32 E4  // t....u..z.2..O2.
    5B10: C3 32 C0 C3 B0 4F B4 03 C3 E8 3C C7 74 47 80 FF  // .2...O....<.tG..
    5B20: 20 74 08 66 C1 E7 10 66 C1 EF 10 81 F9 00 01 77  //  t.f...f.......w
    5B30: 31 0A DB 74 05 80 FB 80 75 10 32 F6 E8 D8 B3 3C  // 1..t....u.2....<
    5B40: 06 74 02 B6 01 E8 F3 B1 EB 13 80 FB 01 75 13 32  // .t...........u.2
    5B50: F6 E8 C3 B3 3C 06 74 02 B6 01 E8 8F B1 B0 4F 32  // ....<.t.......O2
    5B60: E4 C3 32 C0 C3 B0 4F B4 03 C3 0E 07 BF B8 A1 2E  // ..2...O.........
    5B70: 8B 0E B6 A1 B8 4F 00 C3 0A DB 75 02 EB 03 32 C0  // .....O....u...2.
    5B80: C3 B0 4F B4 03 C3 0A DB 75 06 B7 04 B3 10 EB 27  // ..O.....u......'
    5B90: 80 FB 01 75 15 53 B1 01 0A FF 74 02 B1 00 E8 F2  // ...u.S....t.....
    5BA0: B2 E8 3F B4 E8 41 B0 5B EB 0D 80 FB 02 75 0D E8  // ..?..A.[.....u..
    5BB0: F3 B2 8A F8 C0 E7 02 B0 4F 32 E4 C3 B8 4F 03 C3  // ........O2...O..
    5BC0: 80 FB 01 75 09 33 C0 E8 B0 B3 74 2B EB 24 80 FB  // ...u.3....t+.$..
    5BD0: 07 75 24 0A FF 75 0E B0 82 E8 2D A8 0A C9 74 12  // .u$..u....-...t.
    5BE0: B9 03 03 EB 0D 0B C9 B1 00 74 02 B1 03 B0 82 E8  // .........t......
    5BF0: 17 A8 B0 4F 32 E4 C3 B0 4F B4 03 C3 EB 00 80 FB  // ...O2...O.......
    5C00: 91 75 14 B0 05 0A C9 74 02 B0 06 8A C8 E8 10 B0  // .u.....t........
    5C10: EB 00 B0 4F 32 E4 C3 B0 4F B4 03 C3 80 E3 01 0A  // ...O2...O.......
    5C20: DB 75 05 BB 02 01 EB 0C 33 C0 53 E8 B5 B3 E8 54  // .u......3.S....T
    5C30: BC 5B 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3 80 FC  // .[t..O2...O.....
    5C40: 1D 72 03 CD 42 C3 1E 06 66 50 66 51 66 52 66 53  // .r..B...fPfQfRfS
    5C50: 66 55 66 56 66 57 0E 1F 50 0F B6 C4 D1 E0 8B F0  // fUfVfW..P.......
    5C60: 58 2E FF 94 20 5C 66 5F 66 5E 66 5D 66 5B 66 5A  // X... \f_f^f]f[fZ
    5C70: 66 59 66 58 07 1F C3 0E 1F 50 0F B6 C4 D1 E0 8B  // fYfX.....P......
    5C80: F0 58 2E FF 94 20 5C C3 5A 5C E6 97 FF 97 1C 98  // .X... \.Z\......
    5C90: 68 5D 1F 8F 51 8F C4 8F 47 90 D5 91 D9 91 E2 94  // h]..Q...G.......
    5CA0: B3 95 36 96 9D 96 38 98 9A 98 43 9B 81 5F C3 9F  // ..6...8...C.._..
    5CB0: 0E 5C 0E 5C 0E 5C 0E 5C 0E 5C 0E 5C 93 A0 5D 84  // .\.\.\.\.\.\..].
    5CC0: B1 85 2E 8E 1E 1D 03 80 26 87 04 F3 50 8A E0 80  // ........&...P...
    5CD0: E4 7F E8 DF 01 3B D3 75 02 58 C3 BA CC 03 EC B2  // .....;.u.X......
    5CE0: B4 B1 30 26 F6 47 09 01 74 0C B2 D4 B1 20 A8 01  // ..0&.G..t.... ..
    5CF0: 75 49 B5 09 EB 06 A8 01 74 41 B5 0B 53 E8 1F 44  // uI......tA..S..D
    5D00: 0A FF 5B 75 0B 80 26 88 04 F0 08 2E 88 04 EB 2B  // ..[u..&........+
    5D10: 58 80 0E 87 04 08 80 26 10 04 CF 08 0E 10 04 89  // X......&........
    5D20: 16 63 04 C7 06 85 04 08 00 C6 06 84 04 18 C7 06  // .c..............
    5D30: 0C 01 AF 6A 8C 0E 0E 01 CD 42 C3 80 26 10 04 CF  // ...j.....B..&...
    5D40: 08 0E 10 04 58 53 50 0E 1F 33 C9 8A C8 B2 08 BE  // ....XSP..3......
    5D50: 40 1C E8 C2 C2 E8 12 B1 74 05 E8 AC AD EB 19 E8  // @.......t.......
    5D60: 73 B2 A9 01 00 74 11 E8 59 B3 F7 C1 02 00 74 08  // s....t..Y.....t.
    5D70: E8 DF B1 80 FB 01 75 03 E8 7F B2 BE 40 1C E8 0A  // ......u.....@...
    5D80: AC 58 5B 0F 84 53 FF 2E 8E 1E 1D 03 0E 07 E8 74  // .X[..S.........t
    5D90: 2B 0E 1F 53 66 BB 40 1C 00 1C E8 D9 C4 BE 00 1C  // +..Sf.@.........
    5DA0: B0 20 E8 71 AC 5B 2E 8E 1E 1D 03 0E 07 E8 7D 30  // . .q.[........}0
    5DB0: E8 24 00 E8 89 3F E8 D1 01 E8 8E 01 E8 17 41 0E  // .$...?........A.
    5DC0: 1F BE 00 1C B0 10 E8 4D AC E8 58 30 E8 50 30 C3  // .......M..X0.P0.
    5DD0: 8B EC C6 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD 00  // ...F..../.......
    5DE0: E8 52 00 E8 04 0C C3 53 83 C3 0A 8B 16 63 04 B9  // .R.....S.....c..
    5DF0: 19 00 B8 11 30 EF 32 C0 26 8A 27 EF 43 FE C0 E2  // ....0.2.&.'.C...
    5E00: F7 5B 80 C2 06 32 C0 EE C3 53 BA C4 03 83 C3 05  // .[...2...S......
    5E10: B9 04 00 B0 01 26 8A 27 3C 01 75 03 80 CC 20 EF  // .....&.'<.u... .
    5E20: 43 FE C0 E2 F0 5B 26 8A 47 09 BA C2 03 EE B2 C4  // C....[&.G.......
    5E30: B8 00 03 EF C3 8B F3 83 C6 23 BA DA 03 26 F6 47  // .........#...&.G
    5E40: 09 01 75 02 B2 BA F6 06 89 04 08 74 1D 83 C6 10  // ..u........t....
    5E50: EC B9 04 00 B4 10 B2 C0 80 FC 11 74 07 8A C4 EE  // ...........t....
    5E60: 26 8A 04 EE 46 FE C4 E2 EF C3 53 EC 8B DE B9 14  // &...F.....S.....
    5E70: 00 32 E4 B2 C0 8A C4 EE FE C4 26 8A 07 EE 43 E2  // .2........&...C.
    5E80: F4 8A C4 EE 32 C0 EE 1E 06 E8 AA 2F 0B ED 74 09  // ....2....../..t.
    5E90: 1F 1E B9 10 00 F3 A4 46 A4 07 1F 5B C3 53 83 C3  // .......F...[.S..
    5EA0: 37 B9 09 00 32 C0 BA CE 03 26 8A 27 EF 43 FE C0  // 7...2....&.'.C..
    5EB0: E2 F7 5B C3 BB 62 61 0E 07 8B D3 0A E4 7D 01 C3  // ..[..ba......}..
    5EC0: E8 01 00 C3 33 F6 80 FC 03 7F 3C 4A F6 06 89 04  // ....3.....<J....
    5ED0: 10 75 20 A0 88 04 24 0F 3C 02 7E 24 3C 08 74 20  // .u ...$.<.~$<.t 
    5EE0: 3C 06 74 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81 C3  // <.t.<.t..@......
    5EF0: C0 04 C3 B0 40 D0 EC F6 E4 03 D8 81 C3 C0 05 C3  // ....@...........
    5F00: B0 40 F6 E4 03 D8 C3 80 FC 07 75 11 F6 06 89 04  // .@........u.....
    5F10: 10 75 05 81 C3 C0 01 C3 81 C3 40 06 C3 BF C1 5E  // .u........@....^
    5F20: BE E2 5E 33 C9 E8 4E 00 C3 04 00 01 05 40 01 06  // ..^3..N......@..
    5F30: 80 01 0D 40 03 0E 80 03 0F 40 04 10 80 04 11 80  // ...@.....@......
    5F40: 06 12 C0 06 13 00 07 62 00 02 53 8A 1E 49 04 80  // .......b..S..I..
    5F50: FB 07 7F 10 32 FF D1 E3 2E 8B 87 FE 5E A2 65 04  // ....2.......^.e.
    5F60: 88 26 66 04 5B C3 2C 30 28 30 2D 30 29 30 2A 30  // .&f.[.,0(0-0)0*0
    5F70: 2E 30 1E 3F 29 30 2E 38 25 75 07 2E 03 5D 01 33  // .0.?)0.8%u...].3
    5F80: F6 C3 83 C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E 1D  // .....;.u........
    5F90: 03 F6 06 87 04 80 75 49 83 3E 4C 04 00 74 42 A0  // ......uI.>L..tB.
    5FA0: 49 04 B9 00 20 2E 8B 3E 23 03 26 F6 47 33 01 75  // I... ..>#.&.G3.u
    5FB0: 0E 26 F6 47 09 01 75 1B 2E 8B 3E 21 03 EB 14 3C  // .&.G..u...>!...<
    5FC0: 06 7E 0B 2E 8B 3E 1F 03 26 8A 67 37 B5 40 66 33  // .~...>..&.g7.@f3
    5FD0: C0 EB 06 66 B8 20 07 20 07 8E C7 66 33 FF F3 66  // ...f. . ...f3..f
    5FE0: AB 80 26 87 04 7F 07 1F C3 2E 8E 1E 1D 03 80 FB  // ..&.............
    5FF0: 10 75 03 E9 9D 01 80 FB 20 75 03 E9 BE 01 80 FB  // .u...... u......
    6000: 32 75 1F BA CC 03 0A C0 75 09 EC 0C 02 B2 C2 EE  // 2u......u.......
    6010: E9 16 01 FE C8 0F 85 16 01 EC 24 FD B2 C2 EE E9  // ..........$.....
    6020: 07 01 80 FB 35 75 4B 3C 80 75 08 80 0E 89 04 40  // ....5uK<.u.....@
    6030: E9 F6 00 F6 06 89 04 40 0F 84 F3 00 0A C0 0F 84  // .......@........
    6040: ED 00 FE C8 75 06 E8 FB 08 E9 DD 00 F6 06 89 04  // ....u...........
    6050: 40 0F 84 DA 00 FE C8 75 0C E8 B0 23 32 C0 BA C3  // @......u...#2...
    6060: 03 EE E9 C4 00 FE C8 0F 85 C4 00 E8 F2 23 B0 01  // .............#..
    6070: EB EC 80 FB 30 74 03 E9 96 00 50 E8 A1 40 8A EF  // ....0t....P..@..
    6080: BA CC 03 EC 8A C8 58 0A C0 75 30 B7 08 F6 C1 01  // ......X..u0.....
    6090: 75 12 0A ED 75 0B A0 10 04 24 30 3C 30 75 10 B7  // u...u....$0<0u..
    60A0: 02 E9 8B 00 A0 10 04 24 30 3C 30 75 02 B7 02 80  // .......$0<0u....
    60B0: 26 89 04 6F 80 0E 89 04 80 EB 36 3C 01 75 41 80  // &..o......6<.uA.
    60C0: 26 89 04 6F B7 09 F6 C1 01 75 15 B7 0B A0 10 04  // &..o.....u......
    60D0: 24 30 3C 30 74 1B B7 09 0A ED 74 15 B7 05 EB 11  // $0<0t.....t.....
    60E0: A0 10 04 24 30 3C 30 75 08 B7 0B 0A ED 74 02 B7  // ...$0<0u.....t..
    60F0: 03 8A 1E 88 04 80 E3 F0 0A DF 88 1E 88 04 EB 29  // ...............)
    6100: 3C 02 75 2B 80 26 89 04 6F 80 0E 89 04 10 EB B4  // <.u+.&..o.......
    6110: 80 FB 31 75 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89  // ..1u...t.<.u....
    6120: 04 08 EB 05 80 26 89 04 F7 8B EC C6 46 1A 12 C3  // .....&......F...
    6130: 80 FB 33 75 16 3C 00 74 0B 3C 01 75 EC 80 26 89  // ..3u.<.t.<.u..&.
    6140: 04 FD EB E5 80 0E 89 04 02 EB DE 80 FB 34 75 17  // .............4u.
    6150: 3C 00 75 07 80 26 87 04 FE EB CE 3C 01 75 07 80  // <.u..&.....<.u..
    6160: 0E 87 04 01 EB C3 C3 80 FB 36 75 26 BB 20 FF 3C  // .........6u&. .<
    6170: 01 74 09 BB 00 DF 3C 00 74 02 EB AD E8 02 00 EB  // .t....<.t.......
    6180: A8 9C FA BA C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE  // .........B."....
    6190: 9D C3 C3 B3 03 B7 00 BA CC 03 EC A8 01 75 02 B7  // .............u..
    61A0: 01 A0 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B  // ..........%.....
    61B0: EC 89 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA C7 06  // ..^..N..F.......
    61C0: 14 00 4A 89 8C 0E 16 00 9D C3 28 18 08 00 08 09  // ..J.......(.....
    61D0: 03 00 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07  // ...c-'(.+.......
    61E0: 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02  // ................
    61F0: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    6200: 00 00 00 00 00 00 10 0E 00 FF 28 18 08 00 08 09  // ..........(.....
    6210: 03 00 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07  // ...c-'(.+.......
    6220: 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02  // ................
    6230: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    6240: 00 00 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01  // ..........P.....
    6250: 03 00 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07  // ...c_OP.U.......
    6260: 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02  // .......(........
    6270: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    6280: 00 00 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01  // ..........P.....
    6290: 03 00 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07  // ...c_OP.U.......
    62A0: 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02  // .......(........
    62B0: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    62C0: 00 00 00 00 00 00 10 0E 00 FF 28 18 08 00 40 09  // ..........(...@.
    62D0: 03 00 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00  // ...c-'(.+.......
    62E0: 00 00 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15  // ................
    62F0: 17 02 04 06 07 10 11 12 13 14 15 16 17 01 00 03  // ................
    6300: 00 00 00 00 00 00 30 0F 00 FF 28 18 08 00 40 09  // ......0...(...@.
    6310: 03 00 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00  // ...c-'(.+.......
    6320: 00 00 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15  // ................
    6330: 17 02 04 06 07 10 11 12 13 14 15 16 17 01 00 03  // ................
    6340: 00 00 00 00 00 00 30 0F 00 FF 50 18 08 00 40 01  // ......0...P...@.
    6350: 01 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C1 00 00  // ...c_OP.T.......
    6360: 00 00 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17  // .......(........
    6370: 17 17 17 17 17 17 17 17 17 17 17 17 17 01 00 01  // ................
    6380: 00 00 00 00 00 00 00 0D 00 FF 50 18 0E 00 10 00  // ..........P.....
    6390: 03 00 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C  // ...._OP.U....M..
    63A0: 00 00 00 00 83 85 5D 28 0D 63 BA A3 FF 00 08 08  // ......](.c......
    63B0: 08 08 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F  // ................
    63C0: 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01  // ..........P.....
    63D0: 0F 00 0A E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    63E0: 00 00 00 00 EA 8C DF 50 00 E7 04 E3 FF 00 01 02  // .......P........
    63F0: 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F  // ................
    6400: 00 10 00 00 00 00 40 05 0F FF 00 05 11 1C 08 0B  // ......@.........
    6410: 14 28 0E 18 2D 32 20 24 38 3F 00 05 08 0B 0E 11  // .(..-2 $8?......
    6420: 14 18 1C 20 24 28 2D 32 38 3F 07 0C 10 15 1A 18  // ... $(-28?......
    6430: 16 15 13 1C 25 2F 38 33 2E 2A 25 27 29 2A 2C 23  // ....%/83.*%')*,#
    6440: 19 10 23 25 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39  // ..#%'*,+*))-27;9
    6450: 37 34 32 33 34 35 35 31 2C 27 2F 30 32 33 34 34  // 74234551,'/02344
    6460: 33 33 32 35 38 3A 3D 3C 3A 39 38 38 39 39 3A 37  // 33258:=<:98899:7
    6470: 34 31 03 05 07 09 0B 0B 0A 09 08 0D 11 15 19 17  // 41..............
    6480: 15 13 11 11 12 13 14 0F 0B 07 10 10 12 13 14 13  // ................
    6490: 13 13 12 14 16 18 1A 19 18 17 16 17 17 17 18 15  // ................
    64A0: 14 11 15 15 16 17 17 17 17 17 16 18 19 1A 1B 1B  // ................
    64B0: 1A 19 19 19 19 19 1A 18 17 16 02 03 04 05 07 06  // ................
    64C0: 06 05 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09  // ................
    64D0: 06 04 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F  // ................
    64E0: 0E 0D 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D  // ................
    64F0: 0D 0D 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E  // ................
    6500: 0D 0C 00 00 00 00 00 00 00 00 28 18 08 00 20 09  // ..........(... .
    6510: 0F 00 06 63 2D 27 28 90 2B 80 BF 1F 00 C0 00 00  // ...c-'(.+.......
    6520: 00 00 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02  // ................
    6530: 03 04 05 06 07 10 11 12 13 14 15 16 17 01 00 0F  // ................
    6540: 00 00 00 00 00 00 00 05 0F FF 50 18 08 00 40 01  // ..........P...@.
    6550: 0F 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C0 00 00  // ...c_OP.T.......
    6560: 00 00 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02  // .......(........
    6570: 03 04 05 06 07 10 11 12 13 14 15 16 17 01 00 0F  // ................
    6580: 00 00 00 00 00 00 00 05 0F FF 00 05 11 1C 08 0B  // ................
    6590: 25 28 02 07 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E  // %(... ..(,..%*..
    65A0: 32 36 0F 13 27 2C 1B 20 34 39 06 0B 1F 24 13 18  // 26..',. 49...$..
    65B0: 2C 30 09 0D 21 26 15 1A 2E 33 13 17 2B 30 1F 24  // ,0..!&...3..+0.$
    65C0: 38 3D 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B  // 8=..-2 $8?......
    65D0: 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24  // ............-2 $
    65E0: 38 3F 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B  // 8?..-2 $8?......
    65F0: 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24  // ............-2 $
    6600: 38 3F 0E 18 2D 32 20 24 38 3F 50 18 0E 00 80 01  // 8?..-2 $8?P.....
    6610: 0F 00 06 A2 5F 4F 50 82 54 80 BF 1F 00 40 00 00  // ...._OP.T....@..
    6620: 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00 08 00  // ......](.c......
    6630: 00 18 18 00 00 00 08 00 00 00 18 00 00 0B 00 05  // ................
    6640: 00 00 00 00 00 00 00 05 05 FF 50 18 0E 00 80 01  // ..........P.....
    6650: 0F 00 06 A3 5F 4F 50 82 54 80 BF 1F 00 40 00 00  // ...._OP.T....@..
    6660: 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00 01 02  // ......](.c......
    6670: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F  // .....89:;<=>?...
    6680: 00 00 00 00 00 00 00 05 0F FF 28 18 0E 00 08 09  // ..........(.....
    6690: 03 00 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C  // ....-'(.+....M..
    66A0: 00 00 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02  // ......]..c......
    66B0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    66C0: 00 00 00 00 00 00 10 0E 00 FF 28 18 0E 00 08 09  // ..........(.....
    66D0: 03 00 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C  // ....-'(.+....M..
    66E0: 00 00 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02  // ......]..c......
    66F0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    6700: 00 00 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01  // ..........P.....
    6710: 03 00 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C  // ...._OP.U....M..
    6720: 00 00 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02  // ......](.c......
    6730: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    6740: 00 00 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01  // ..........P.....
    6750: 03 00 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C  // ...._OP.U....M..
    6760: 00 00 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02  // ......](.c......
    6770: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    6780: 00 00 00 00 00 00 10 0E 00 FF 28 18 10 00 08 08  // ..........(.....
    6790: 03 00 02 67 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E  // ...g-'(.+....O..
    67A0: 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02  // ................
    67B0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F  // .....89:;<=>?...
    67C0: 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00  // ..........P.....
    67D0: 03 00 02 67 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E  // ...g_OP.U....O..
    67E0: 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02  // .......(........
    67F0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F  // .....89:;<=>?...
    6800: 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00  // ..........P.....
    6810: 03 00 02 66 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E  // ...f_OP.U....O..
    6820: 00 00 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08  // .......(........
    6830: 08 08 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F  // ................
    6840: 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01  // ..........P.....
    6850: 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    6860: 00 00 00 00 EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F  // .......(......??
    6870: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F  // ?????????????...
    6880: 00 00 00 00 00 00 00 05 01 FF 50 1D 10 00 A0 01  // ..........P.....
    6890: 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    68A0: 00 00 00 00 EA 8C DF 28 00 E7 04 E3 FF 00 01 02  // .......(........
    68B0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F  // .....89:;<=>?...
    68C0: 00 00 00 00 00 00 00 05 0F FF 28 18 08 00 20 01  // ..........(... .
    68D0: 0F 00 0E 63 5F 4F 50 82 54 80 BF 1F 00 41 00 00  // ...c_OP.T....A..
    68E0: 00 00 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02  // .......(@.......
    68F0: 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F  // .............A..
    6900: 00 00 00 00 00 00 40 05 0F FF 62 61 00 C0 00 00  // ......@...ba....
    6910: 00 00 00 00 00 00 00 00 00 00 C2 68 00 C0 00 00  // ...........h....
    6920: 00 00 00 00 00 00 00 00 00 00 1A 00 91 A1 00 C0  // ................
    6930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6940: 00 00 00 00 1E E8 10 00 2E 8E 1E 1D 03 E8 2F 38  // ............../8
    6950: E8 06 38 E8 B5 1A 1F C3 2E 8E 1E 1D 03 C7 06 87  // ..8.............
    6960: 04 60 F9 C6 06 8A 04 0B A0 89 04 0C 11 24 17 A2  // .`...........$..
    6970: 89 04 B4 01 E8 6B 1F A0 89 04 80 26 10 04 CF 80  // .....k.....&....
    6980: 0E 10 04 20 C7 06 63 04 D4 03 0E 1F E8 46 A6 A9  // ... ..c......F..
    6990: 01 00 74 11 E8 2C A7 F7 C1 02 00 74 08 E8 B2 A5  // ..t..,.....t....
    69A0: 80 FB 01 75 03 E8 52 A6 C3 1E 2E 8E 1E 1D 03 0E  // ...u..R.........
    69B0: 07 3C 01 75 15 B8 01 13 BB 07 00 8B 16 50 04 BD  // .<.u.........P..
    69C0: A6 00 B9 28 00 E8 AF F2 EB 1E B8 01 13 BB 84 00  // ...(............
    69D0: 8B 16 50 04 BD F7 00 B9 06 00 E8 9A F2 E8 64 9E  // ..P...........d.
    69E0: B9 E8 03 E8 1B CF EB F5 1F C3 F6 06 89 04 08 74  // ...............t
    69F0: 01 C3 53 BA C8 03 EC B0 FF B2 C6 EE B2 C8 80 3E  // ..S............>
    6A00: 63 04 B4 75 2F BE 63 6A B9 40 00 33 DB 9C FA 8A  // c..u/.cj.@.3....
    6A10: C3 EE 8B FB C1 EF 03 83 E7 03 03 FE 2E 8A 05 42  // ...............B
    6A20: EE 2E 8A 45 04 EE 2E 8A 45 08 EE FE C3 4A E2 DF  // ...E....E....J..
    6A30: 9D E9 85 00 26 8A 47 2B F6 06 89 04 06 74 31 B9  // ....&.G+.....t1.
    6A40: F8 00 BF A2 63 3C 08 74 11 B9 40 00 BF 22 65 3C  // ....c<.t..@.."e<
    6A50: 38 74 07 3C 3F 74 03 BF 62 65 33 DB 9C FA 8A C3  // 8t.<?t..be3.....
    6A60: EE 2E 8A 01 42 EE EE EE FE C3 4A E2 F1 9D EB 49  // ....B.....J....I
    6A70: 3C 08 74 25 3C 38 74 2E 3C 3F 74 2A B9 08 00 33  // <.t%<8t.<?t*...3
    6A80: DB 51 E8 F5 CC B9 08 00 F7 C3 10 00 74 03 83 C7  // .Q..........t...
    6A90: 18 E8 67 00 59 E2 EA EB 20 E8 DE CC B9 00 01 33  // ..g.Y... ......3
    6AA0: DB E8 57 00 EB 13 B9 40 00 33 DB 51 E8 28 00 8A  // ..W....@.3.Q.(..
    6AB0: C3 E8 70 30 FE C3 59 E2 F2 5B C3 00 2A 00 2A 00  // ..p0..Y..[..*.*.
    6AC0: 2A 00 2A 15 3F 15 3F 15 3F 15 3F 00 2A 00 3F 00  // *.*.?.?.?.?.*.?.
    6AD0: 2A 00 3F 00 2A 00 3F 8B FB C1 EF 02 83 E7 0F 2E  // *.?.*.?.........
    6AE0: 8A B5 53 6A 8B FB D1 EF 83 E7 0F 2E 8A AD 53 6A  // ..Sj..........Sj
    6AF0: 8B FB 83 E7 0F 2E 8A 8D 53 6A C3 9C 8A C3 FA EE  // ........Sj......
    6B00: 2E 8A 05 42 EE 47 2E 8A 05 EE 47 2E 8A 05 EE 47  // ...B.G....G....G
    6B10: FE C3 4A E2 E7 9D C3 00 00 00 00 00 00 00 00 7E  // ..J............~
    6B20: 81 A5 81 BD 99 81 7E 7C FE D6 BA C6 FE 7C 00 C6  // ......~|.....|..
    6B30: EE FE FE 7C 38 10 00 10 38 7C FE 7C 38 10 00 10  // ...|8...8|.|8...
    6B40: 38 10 EE EE 10 38 00 38 7C FE FE 6C 10 38 00 00  // 8....8.8|..l.8..
    6B50: 18 3C 7E 3C 18 00 00 FF E7 C3 81 C3 E7 FF FF 00  // .<~<............
    6B60: 18 3C 66 66 3C 18 00 FF E7 C3 99 99 C3 E7 FF 1E  // .<ff<...........
    6B70: 0E 1E 36 78 CC CC 78 7E C3 C3 7E 18 7E 18 18 1E  // ..6x..x~..~.~...
    6B80: 1A 1E 18 18 70 F0 60 3E 3E 36 36 F6 66 1E 0C DB  // ....p.`>>66.f...
    6B90: 3C 66 E7 66 3C DB 00 80 C0 F0 F8 F0 C0 80 00 02  // <f.f<...........
    6BA0: 06 1E 3E 1E 06 02 00 18 3C 7E 18 7E 3C 18 00 66  // ..>.....<~.~<..f
    6BB0: 66 66 66 66 00 66 00 7F DB 7B 3B 1B 1B 1B 00 3C  // ffff.f...{;....<
    6BC0: 66 38 6C 6C 38 CC 78 00 00 00 00 FE FE FE 00 18  // f8ll8.x.........
    6BD0: 3C 7E 18 7E 3C 18 7E 18 3C 7E 18 18 18 18 00 18  // <~.~<.~.<~......
    6BE0: 18 18 18 7E 3C 18 00 00 18 1C FE 1C 18 00 00 00  // ...~<...........
    6BF0: 30 70 FE 70 30 00 00 00 00 C0 C0 C0 FE 00 00 00  // 0p.p0...........
    6C00: 24 66 FF 66 24 00 00 00 10 38 7C 7C FE 00 00 00  // $f.f$....8||....
    6C10: FE 7C 7C 38 10 00 00 00 00 00 00 00 00 00 00 18  // .||8............
    6C20: 3C 3C 18 18 00 18 00 6C 6C 6C 00 00 00 00 00 6C  // <<.....lll.....l
    6C30: 6C FE 6C FE 6C 6C 00 18 7E C0 7C 06 FC 18 00 00  // l.l.ll..~.|.....
    6C40: C6 0C 18 30 60 C6 00 38 6C 38 76 CC CC 76 00 18  // ...0`..8l8v..v..
    6C50: 18 30 00 00 00 00 00 18 30 60 60 60 30 18 00 60  // .0......0```0..`
    6C60: 30 18 18 18 30 60 00 00 EE 7C FE 7C EE 00 00 00  // 0...0`...|.|....
    6C70: 18 18 7E 18 18 00 00 00 00 00 00 18 18 30 00 00  // ..~..........0..
    6C80: 00 00 FE 00 00 00 00 00 00 00 00 00 38 38 00 06  // ............88..
    6C90: 0C 18 30 60 C0 80 00 7C C6 CE DE F6 E6 7C 00 18  // ..0`...|.....|..
    6CA0: 78 18 18 18 18 7E 00 7C C6 0C 18 30 66 FE 00 7C  // x....~.|...0f..|
    6CB0: C6 06 3C 06 C6 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE  // ..<..|...<l.....
    6CC0: C0 FC 06 06 C6 7C 00 7C C6 C0 FC C6 C6 7C 00 FE  // .....|.|.....|..
    6CD0: C6 06 0C 18 18 18 00 7C C6 C6 7C C6 C6 7C 00 7C  // .......|..|..|.|
    6CE0: C6 C6 7E 06 C6 7C 00 00 1C 1C 00 00 1C 1C 00 00  // ..~..|..........
    6CF0: 18 18 00 00 18 18 30 0C 18 30 60 30 18 0C 00 00  // ......0..0`0....
    6D00: 00 FE 00 00 FE 00 00 60 30 18 0C 18 30 60 00 7C  // .......`0...0`.|
    6D10: C6 06 0C 18 00 18 00 7C C6 C6 DE DC C0 7E 00 38  // .......|.....~.8
    6D20: 6C C6 C6 FE C6 C6 00 FC 66 66 7C 66 66 FC 00 3C  // l.......ff|ff..<
    6D30: 66 C0 C0 C0 66 3C 00 F8 6C 66 66 66 6C F8 00 FE  // f...f<..lfffl...
    6D40: C2 C0 F8 C0 C2 FE 00 FE 62 60 7C 60 60 F0 00 7C  // ........b`|``..|
    6D50: C6 C0 C0 DE C6 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C  // .....|.........<
    6D60: 18 18 18 18 18 3C 00 3C 18 18 18 D8 D8 70 00 C6  // .....<.<.....p..
    6D70: CC D8 F0 D8 CC C6 00 F0 60 60 60 60 62 FE 00 C6  // ........````b...
    6D80: EE FE D6 D6 C6 C6 00 C6 E6 E6 F6 DE CE C6 00 7C  // ...............|
    6D90: C6 C6 C6 C6 C6 7C 00 FC 66 66 7C 60 60 F0 00 7C  // .....|..ff|``..|
    6DA0: C6 C6 C6 C6 D6 7C 06 FC C6 C6 FC D8 CC C6 00 7C  // .....|.........|
    6DB0: C6 C0 7C 06 C6 7C 00 7E 5A 18 18 18 18 3C 00 C6  // ..|..|.~Z....<..
    6DC0: C6 C6 C6 C6 C6 7C 00 C6 C6 C6 C6 6C 38 10 00 C6  // .....|.....l8...
    6DD0: C6 D6 D6 FE EE C6 00 C6 6C 38 38 38 6C C6 00 66  // ........l888l..f
    6DE0: 66 66 3C 18 18 3C 00 FE 86 0C 18 30 62 FE 00 7C  // ff<..<.....0b..|
    6DF0: 60 60 60 60 60 7C 00 C0 60 30 18 0C 06 02 00 7C  // `````|..`0.....|
    6E00: 0C 0C 0C 0C 0C 7C 00 10 38 6C C6 00 00 00 00 00  // .....|..8l......
    6E10: 00 00 00 00 00 00 FF 30 30 18 00 00 00 00 00 00  // .......00.......
    6E20: 00 78 0C 7C CC 7E 00 E0 60 7C 66 66 66 FC 00 00  // .x.|.~..`|fff...
    6E30: 00 7C C6 C0 C6 7C 00 1C 0C 7C CC CC CC 7E 00 00  // .|...|...|...~..
    6E40: 00 7C C6 FE C0 7C 00 1C 36 30 FC 30 30 78 00 00  // .|...|..60.00x..
    6E50: 00 76 CE C6 7E 06 7C E0 60 7C 66 66 66 E6 00 18  // .v..~.|.`|fff...
    6E60: 00 38 18 18 18 3C 00 0C 00 1C 0C 0C 0C CC 78 E0  // .8...<........x.
    6E70: 60 66 6C 78 6C E6 00 18 18 18 18 18 18 1C 00 00  // `flxl...........
    6E80: 00 6C FE D6 D6 C6 00 00 00 DC 66 66 66 66 00 00  // .l........ffff..
    6E90: 00 7C C6 C6 C6 7C 00 00 00 DC 66 66 7C 60 F0 00  // .|...|....ff|`..
    6EA0: 00 76 CC CC 7C 0C 1E 00 00 DC 66 60 60 F0 00 00  // .v..|.....f``...
    6EB0: 00 7C C0 7C 06 7C 00 30 30 FC 30 30 36 1C 00 00  // .|.|.|.00.006...
    6EC0: 00 CC CC CC CC 76 00 00 00 C6 C6 6C 38 10 00 00  // .....v.....l8...
    6ED0: 00 C6 C6 D6 FE 6C 00 00 00 C6 6C 38 6C C6 00 00  // .....l....l8l...
    6EE0: 00 C6 C6 CE 76 06 7C 00 00 FC 98 30 64 FC 00 0E  // ....v.|....0d...
    6EF0: 18 18 70 18 18 0E 00 18 18 18 00 18 18 18 00 70  // ..p............p
    6F00: 18 18 0E 18 18 70 00 76 DC 00 00 00 00 00 00 00  // .....p.v........
    6F10: 10 38 38 6C 6C FE 00 3C 66 C0 66 3C 18 CC 78 00  // .88ll..<f.f<..x.
    6F20: C6 00 C6 C6 CE 76 00 0E 00 7C C6 FE C0 7C 00 7C  // .....v...|...|.|
    6F30: C6 78 0C 7C CC 7E 00 C6 00 78 0C 7C CC 7E 00 E0  // .x.|.~...x.|.~..
    6F40: 00 78 0C 7C CC 7E 00 38 38 78 0C 7C CC 7E 00 00  // .x.|.~.88x.|.~..
    6F50: 00 7C C0 7C 18 6C 38 7C C6 7C C6 FE C0 7C 00 C6  // .|.|.l8|.|...|..
    6F60: 00 7C C6 FE C0 7C 00 E0 00 7C C6 FE C0 7C 00 66  // .|...|...|...|.f
    6F70: 00 38 18 18 18 3C 00 7C C6 38 18 18 18 3C 00 00  // .8...<.|.8...<..
    6F80: 00 38 18 18 18 3C 00 C6 38 6C C6 FE C6 C6 00 38  // .8...<..8l.....8
    6F90: 38 00 7C C6 FE C6 00 0E 00 FE C0 F8 C0 FE 00 00  // 8.|.............
    6FA0: 00 6C 9A 7E D8 6E 00 7E D8 D8 FE D8 D8 DE 00 7C  // .l.~.n.~.......|
    6FB0: C6 00 7C C6 C6 7C 00 00 C6 00 7C C6 C6 7C 00 00  // ..|..|....|..|..
    6FC0: E0 00 7C C6 C6 7C 00 7C C6 00 C6 C6 CE 76 00 00  // ..|..|.|.....v..
    6FD0: E0 00 C6 C6 CE 76 00 18 00 3C 18 18 18 3C 00 C6  // .....v...<...<..
    6FE0: 38 6C C6 C6 6C 38 00 C6 00 C6 C6 C6 C6 7C 00 00  // 8l..l8.......|..
    6FF0: 18 7E D8 D8 7E 18 00 38 6C 60 F0 66 F6 6C 00 C3  // .~..~..8l`.f.l..
    7000: 66 3C 7E 18 3C 18 00 3E 63 38 0E 63 3E 00 1C 00  // f<~.<..>c8.c>...
    7010: 3E 61 3C 86 7C 00 1C 0E 00 78 0C 7C CC 7E 00 1C  // >a<.|....x.|.~..
    7020: 00 38 18 18 18 3C 00 00 0E 00 7C C6 C6 7C 00 00  // .8...<....|..|..
    7030: 0E 00 CC CC DC 76 00 00 FC 00 BC 66 66 E6 00 FE  // .....v.....ff...
    7040: 00 C6 E6 F6 CE C6 00 3E 00 3E 60 67 63 3D 00 3E  // .......>.>`gc=.>
    7050: 00 76 CE C6 7E 06 7C 18 00 18 30 60 66 3C 00 00  // .v..~.|...0`f<..
    7060: 00 00 7C 60 60 00 00 00 00 00 7C 0C 0C 00 00 C0  // ..|``.....|.....
    7070: CC D8 30 7C 36 0C 3E C0 CC D8 30 6C 3C 7E 0C 18  // ..0|6.>...0l<~..
    7080: 00 18 18 3C 3C 18 00 00 36 6C D8 6C 36 00 00 00  // ...<<...6l.l6...
    7090: D8 6C 36 6C D8 00 00 22 88 22 88 22 88 22 88 55  // .l6l...".".".".U
    70A0: AA 55 AA 55 AA 55 AA DD 77 DD 77 DD 77 DD 77 18  // .U.U.U..w.w.w.w.
    70B0: 18 18 18 18 18 18 18 18 18 18 18 F8 18 18 18 18  // ................
    70C0: 18 F8 18 F8 18 18 18 36 36 36 36 F6 36 36 36 00  // .......6666.666.
    70D0: 00 00 00 FE 36 36 36 00 00 F8 18 F8 18 18 18 36  // ....666........6
    70E0: 36 F6 06 F6 36 36 36 36 36 36 36 36 36 36 36 00  // 6...66666666666.
    70F0: 00 FE 06 F6 36 36 36 36 36 F6 06 FE 00 00 00 36  // ....66666......6
    7100: 36 36 36 FE 00 00 00 18 18 F8 18 F8 00 00 00 00  // 666.............
    7110: 00 00 00 F8 18 18 18 18 18 18 18 1F 00 00 00 18  // ................
    7120: 18 18 18 FF 00 00 00 00 00 00 00 FF 18 18 18 18  // ................
    7130: 18 18 18 1F 18 18 18 00 00 00 00 FF 00 00 00 18  // ................
    7140: 18 18 18 FF 18 18 18 18 18 1F 18 1F 18 18 18 36  // ...............6
    7150: 36 36 36 37 36 36 36 36 36 37 30 3F 00 00 00 00  // 66676666670?....
    7160: 00 3F 30 37 36 36 36 36 36 F7 00 FF 00 00 00 00  // .?0766666.......
    7170: 00 FF 00 F7 36 36 36 36 36 37 30 37 36 36 36 00  // ....66666707666.
    7180: 00 FF 00 FF 00 00 00 36 36 F7 00 F7 36 36 36 18  // .......66...666.
    7190: 18 FF 00 FF 00 00 00 36 36 36 36 FF 00 00 00 00  // .......6666.....
    71A0: 00 FF 00 FF 18 18 18 00 00 00 00 FF 36 36 36 36  // ............6666
    71B0: 36 36 36 3F 00 00 00 18 18 1F 18 1F 00 00 00 00  // 666?............
    71C0: 00 1F 18 1F 18 18 18 00 00 00 00 3F 36 36 36 36  // ...........?6666
    71D0: 36 36 36 FF 36 36 36 18 18 FF 18 FF 18 18 18 18  // 666.666.........
    71E0: 18 18 18 F8 00 00 00 00 00 00 00 1F 18 18 18 FF  // ................
    71F0: FF FF FF FF FF FF FF 00 00 00 00 FF FF FF FF F0  // ................
    7200: F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF  // ................
    7210: FF FF FF 00 00 00 00 00 00 66 DC D8 DC 66 00 00  // .........f...f..
    7220: 78 CC F8 CC C6 CC 00 00 FE 62 60 60 60 E0 00 00  // x........b```...
    7230: FE 6C 6C 6C 6C 6C 00 FE C6 60 30 60 C6 FE 00 00  // .lllll...`0`....
    7240: 7E D8 CC CC D8 70 00 00 66 66 66 66 7C C0 00 00  // ~....p..ffff|...
    7250: 76 DC 18 18 18 38 00 FE 38 6C C6 6C 38 FE 00 38  // v....8..8l.l8..8
    7260: 6C C6 FE C6 6C 38 00 38 6C C6 C6 6C 6C EE 00 3E  // l...l8.8l..ll..>
    7270: 60 38 66 C6 CC 78 00 00 00 7E DB DB 7E 00 00 06  // `8f..x...~..~...
    7280: 7C DE F6 E6 7C C0 00 38 60 C0 F8 C0 60 38 00 7C  // |...|..8`...`8.|
    7290: C6 C6 C6 C6 C6 C6 00 00 FE 00 FE 00 FE 00 00 18  // ................
    72A0: 18 7E 18 18 00 7E 00 30 18 0C 18 30 00 7E 00 0C  // .~...~.0...0.~..
    72B0: 18 30 18 0C 00 7E 00 0C 1E 18 18 18 18 18 18 18  // .0...~..........
    72C0: 18 18 18 18 78 30 00 00 00 18 00 7E 00 18 00 00  // ....x0.....~....
    72D0: 76 DC 00 76 DC 00 00 7C C6 C6 7C 00 00 00 00 00  // v..v...|..|.....
    72E0: 00 00 18 18 00 00 00 00 00 00 00 18 00 00 00 1F  // ................
    72F0: 18 18 18 F8 38 18 00 D8 6C 6C 6C 00 00 00 00 70  // ....8...lll....p
    7300: D8 30 F8 00 00 00 00 00 00 7C 7C 7C 7C 00 00 00  // .0.......||||...
    7310: 00 00 00 00 00 00 00 1D 00 00 00 00 24 66 FF 66  // ............$f.f
    7320: 24 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  // $...............
    7330: 00 00 00 00 00 00 00 00 00 00 00 00 7E 81 A5 81  // ............~...
    7340: 81 BD 99 81 81 7E 00 00 00 00 00 00 7C FE FE D6  // .....~......|...
    7350: FE FE BA C6 FE 7C 00 00 00 00 00 00 00 6C EE FE  // .....|.......l..
    7360: FE FE FE 7C 38 10 00 00 00 00 00 00 00 10 38 7C  // ...|8.........8|
    7370: FE 7C 38 10 00 00 00 00 00 00 00 00 00 10 38 38  // .|8...........88
    7380: 10 6C EE 6C 10 38 00 00 00 00 00 00 10 38 7C 7C  // .l.l.8.......8||
    7390: FE FE FE 6C 10 38 00 00 00 00 00 00 00 00 00 18  // ...l.8..........
    73A0: 3C 3C 3C 18 00 00 00 00 00 00 FF FF FF FF FF E7  // <<<.............
    73B0: C3 C3 C3 E7 FF FF FF FF FF FF 00 00 00 00 18 3C  // ...............<
    73C0: 66 66 66 3C 18 00 00 00 00 00 FF FF FF FF E7 C3  // fff<............
    73D0: 99 99 99 C3 E7 FF FF FF FF FF 00 00 1E 0E 1E 36  // ...............6
    73E0: 78 CC CC CC CC 78 00 00 00 00 00 00 3C 66 66 66  // x....x......<fff
    73F0: 3C 18 7E 18 18 18 00 00 00 00 00 00 1E 1A 1E 18  // <.~.............
    7400: 18 18 18 78 F8 70 00 00 00 00 00 00 3E 36 3E 36  // ...x.p......>6>6
    7410: 36 76 F6 66 0E 1E 0C 00 00 00 00 00 18 DB 7E 3C  // 6v.f..........~<
    7420: 66 66 3C 7E DB 18 00 00 00 00 00 00 00 80 E0 F0  // ff<~............
    7430: FC FE FC F0 E0 80 00 00 00 00 00 00 00 02 0E 3E  // ...............>
    7440: 7E FE 7E 3E 0E 02 00 00 00 00 00 00 18 3C 7E 18  // ~.~>.........<~.
    7450: 18 18 18 7E 3C 18 00 00 00 00 00 00 66 66 66 66  // ...~<.......ffff
    7460: 66 66 66 00 66 66 00 00 00 00 00 00 7F DB DB DB  // fff.ff..........
    7470: DB 7B 1B 1B 1B 1B 00 00 00 00 00 00 7C C6 C6 60  // .{..........|..`
    7480: 7C F6 DE 7C 0C C6 C6 7C 00 00 00 00 00 00 00 00  // |..|...|........
    7490: 00 00 FE FE FE FE 00 00 00 00 00 00 18 3C 7E 18  // .............<~.
    74A0: 18 18 7E 3C 18 7E 00 00 00 00 00 00 18 3C 7E 18  // ..~<.~.......<~.
    74B0: 18 18 18 18 18 18 00 00 00 00 00 00 18 18 18 18  // ................
    74C0: 18 18 18 7E 3C 18 00 00 00 00 00 00 00 00 00 0C  // ...~<...........
    74D0: 0E FF 0E 0C 00 00 00 00 00 00 00 00 00 00 00 30  // ...............0
    74E0: 70 FE 70 30 00 00 00 00 00 00 00 00 00 00 00 00  // p.p0............
    74F0: C0 C0 C0 FE 00 00 00 00 00 00 00 00 00 00 00 24  // ...............$
    7500: 66 FF 66 24 00 00 00 00 00 00 00 00 00 10 38 38  // f.f$..........88
    7510: 38 7C 7C FE FE 00 00 00 00 00 00 00 00 FE FE 7C  // 8||............|
    7520: 7C 7C 38 38 10 00 00 00 00 00 00 00 00 00 00 00  // ||88............
    7530: 00 00 00 00 00 00 00 00 00 00 00 00 18 3C 3C 3C  // .............<<<
    7540: 3C 18 18 00 18 18 00 00 00 00 00 36 36 36 36 14  // <..........6666.
    7550: 00 00 00 00 00 00 00 00 00 00 00 00 6C 6C 6C FE  // ............lll.
    7560: 6C 6C FE 6C 6C 6C 00 00 00 00 00 00 18 18 7C C6  // ll.lll........|.
    7570: C0 78 3C 06 C6 7C 18 18 00 00 00 00 00 00 00 62  // .x<..|.........b
    7580: 66 0C 18 30 66 C6 00 00 00 00 00 00 38 6C 38 30  // f..0f.......8l80
    7590: 76 7E CC CC CC 76 00 00 00 00 00 0C 0C 0C 18 00  // v~...v..........
    75A0: 00 00 00 00 00 00 00 00 00 00 00 00 0C 18 30 30  // ..............00
    75B0: 30 30 30 30 18 0C 00 00 00 00 00 00 30 18 0C 0C  // 0000........0...
    75C0: 0C 0C 0C 0C 18 30 00 00 00 00 00 00 00 00 00 6C  // .....0.........l
    75D0: 38 FE 38 6C 00 00 00 00 00 00 00 00 00 00 00 18  // 8.8l............
    75E0: 18 7E 18 18 00 00 00 00 00 00 00 00 00 00 00 00  // .~..............
    75F0: 00 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00 00  // ................
    7600: 00 FE 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7610: 00 00 00 00 18 18 00 00 00 00 00 00 00 00 02 06  // ................
    7620: 0C 18 30 60 C0 80 00 00 00 00 00 00 7C C6 C6 CE  // ..0`........|...
    7630: DE F6 E6 C6 C6 7C 00 00 00 00 00 00 18 78 18 18  // .....|.......x..
    7640: 18 18 18 18 18 7E 00 00 00 00 00 00 7C C6 C6 06  // .....~......|...
    7650: 0C 18 30 60 C6 FE 00 00 00 00 00 00 7C C6 06 06  // ..0`........|...
    7660: 3C 06 06 06 C6 7C 00 00 00 00 00 00 0C 1C 3C 6C  // <....|........<l
    7670: CC CC FE 0C 0C 1E 00 00 00 00 00 00 FE C0 C0 C0  // ................
    7680: FC 06 06 06 C6 7C 00 00 00 00 00 00 7C C6 C0 C0  // .....|......|...
    7690: FC C6 C6 C6 C6 7C 00 00 00 00 00 00 FE C6 06 0C  // .....|..........
    76A0: 18 30 30 30 30 30 00 00 00 00 00 00 7C C6 C6 C6  // .00000......|...
    76B0: 7C C6 C6 C6 C6 7C 00 00 00 00 00 00 7C C6 C6 C6  // |....|......|...
    76C0: C6 7E 06 06 C6 7C 00 00 00 00 00 00 00 00 00 0C  // .~...|..........
    76D0: 0C 00 00 0C 0C 00 00 00 00 00 00 00 00 00 00 0C  // ................
    76E0: 0C 00 00 0C 0C 0C 18 00 00 00 00 00 00 0C 18 30  // ...............0
    76F0: 60 C0 60 30 18 0C 00 00 00 00 00 00 00 00 00 00  // `.`0............
    7700: FE 00 FE 00 00 00 00 00 00 00 00 00 00 60 30 18  // .............`0.
    7710: 0C 06 0C 18 30 60 00 00 00 00 00 00 7C C6 C6 0C  // ....0`......|...
    7720: 18 18 18 00 18 18 00 00 00 00 00 00 7C C6 C6 C6  // ............|...
    7730: DE DE DE DC C0 7E 00 00 00 00 00 00 38 6C C6 C6  // .....~......8l..
    7740: C6 FE C6 C6 C6 C6 00 00 00 00 00 00 FC 66 66 66  // .............fff
    7750: 7C 66 66 66 66 FC 00 00 00 00 00 00 3C 66 C2 C0  // |ffff.......<f..
    7760: C0 C0 C0 C2 66 3C 00 00 00 00 00 00 F8 6C 66 66  // ....f<.......lff
    7770: 66 66 66 66 6C F8 00 00 00 00 00 00 FE 66 60 64  // ffffl........f`d
    7780: 7C 64 60 60 66 FE 00 00 00 00 00 00 FE 66 60 64  // |d``f........f`d
    7790: 7C 64 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C0  // |d```.......|...
    77A0: C0 C0 CE C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6  // .....|..........
    77B0: FE C6 C6 C6 C6 C6 00 00 00 00 00 00 3C 18 18 18  // ............<...
    77C0: 18 18 18 18 18 3C 00 00 00 00 00 00 3C 18 18 18  // .....<......<...
    77D0: 18 18 18 D8 D8 70 00 00 00 00 00 00 C6 C6 CC D8  // .....p..........
    77E0: F0 F0 D8 CC C6 C6 00 00 00 00 00 00 F0 60 60 60  // .............```
    77F0: 60 60 60 62 66 FE 00 00 00 00 00 00 C6 C6 EE EE  // ```bf...........
    7800: FE D6 D6 D6 C6 C6 00 00 00 00 00 00 C6 C6 E6 E6  // ................
    7810: F6 DE CE CE C6 C6 00 00 00 00 00 00 7C C6 C6 C6  // ............|...
    7820: C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 FC 66 66 66  // .....|.......fff
    7830: 66 7C 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C6  // f|```.......|...
    7840: C6 C6 C6 D6 D6 7C 06 00 00 00 00 00 FC 66 66 66  // .....|.......fff
    7850: 7C 78 6C 66 66 E6 00 00 00 00 00 00 7C C6 C0 C0  // |xlff.......|...
    7860: 70 1C 06 06 C6 7C 00 00 00 00 00 00 7E 5A 18 18  // p....|......~Z..
    7870: 18 18 18 18 18 3C 00 00 00 00 00 00 C6 C6 C6 C6  // .....<..........
    7880: C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6  // .....|..........
    7890: C6 C6 C6 6C 38 10 00 00 00 00 00 00 C6 C6 C6 D6  // ...l8...........
    78A0: D6 D6 FE EE C6 C6 00 00 00 00 00 00 C6 C6 C6 6C  // ...............l
    78B0: 38 38 6C C6 C6 C6 00 00 00 00 00 00 66 66 66 66  // 88l.........ffff
    78C0: 66 3C 18 18 18 3C 00 00 00 00 00 00 FE C6 86 0C  // f<...<..........
    78D0: 18 30 60 C2 C6 FE 00 00 00 00 00 00 7C 60 60 60  // .0`.........|```
    78E0: 60 60 60 60 60 7C 00 00 00 00 00 00 00 00 80 C0  // `````|..........
    78F0: 60 30 18 0C 06 02 00 00 00 00 00 00 7C 0C 0C 0C  // `0..........|...
    7900: 0C 0C 0C 0C 0C 7C 00 00 00 00 00 10 38 6C C6 00  // .....|......8l..
    7910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7920: 00 00 00 00 00 00 00 FF 00 00 00 18 18 18 0C 00  // ................
    7930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78  // ...............x
    7940: 0C 7C CC CC DC 76 00 00 00 00 00 00 E0 60 60 7C  // .|...v.......``|
    7950: 66 66 66 66 66 FC 00 00 00 00 00 00 00 00 00 7C  // fffff..........|
    7960: C6 C0 C0 C0 C6 7C 00 00 00 00 00 00 1C 0C 0C 7C  // .....|.........|
    7970: CC CC CC CC CC 7E 00 00 00 00 00 00 00 00 00 7C  // .....~.........|
    7980: C6 C6 FE C0 C6 7C 00 00 00 00 00 00 1C 36 30 30  // .....|.......600
    7990: FC 30 30 30 30 78 00 00 00 00 00 00 00 00 00 76  // .0000x.........v
    79A0: CE C6 C6 CE 76 06 C6 7C 00 00 00 00 E0 60 60 7C  // ....v..|.....``|
    79B0: 66 66 66 66 66 E6 00 00 00 00 00 00 18 18 00 38  // fffff..........8
    79C0: 18 18 18 18 18 3C 00 00 00 00 00 00 0C 0C 00 1C  // .....<..........
    79D0: 0C 0C 0C 0C 0C CC CC 78 00 00 00 00 E0 60 60 66  // .......x.....``f
    79E0: 66 6C 78 6C 66 E6 00 00 00 00 00 00 18 18 18 18  // flxlf...........
    79F0: 18 18 18 18 18 1C 00 00 00 00 00 00 00 00 00 6C  // ...............l
    7A00: FE D6 D6 C6 C6 C6 00 00 00 00 00 00 00 00 00 DC  // ................
    7A10: 66 66 66 66 66 66 00 00 00 00 00 00 00 00 00 7C  // ffffff.........|
    7A20: C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 00 00 00 DC  // .....|..........
    7A30: 66 66 66 66 7C 60 60 F0 00 00 00 00 00 00 00 76  // ffff|``........v
    7A40: CC CC CC CC 7C 0C 0C 1E 00 00 00 00 00 00 00 DC  // ....|...........
    7A50: 66 60 60 60 60 F0 00 00 00 00 00 00 00 00 00 7C  // f````..........|
    7A60: C6 C0 7C 06 C6 7C 00 00 00 00 00 00 30 30 30 FC  // ..|..|......000.
    7A70: 30 30 30 30 36 1C 00 00 00 00 00 00 00 00 00 CC  // 00006...........
    7A80: CC CC CC CC CC 76 00 00 00 00 00 00 00 00 00 C6  // .....v..........
    7A90: C6 C6 C6 6C 38 10 00 00 00 00 00 00 00 00 00 C6  // ...l8...........
    7AA0: C6 D6 D6 D6 FE 6C 00 00 00 00 00 00 00 00 00 C6  // .....l..........
    7AB0: C6 6C 38 6C C6 C6 00 00 00 00 00 00 00 00 00 C6  // .l8l............
    7AC0: C6 C6 C6 CE 76 06 C6 7C 00 00 00 00 00 00 00 FE  // ....v..|........
    7AD0: 86 0C 18 30 62 FE 00 00 00 00 00 00 0E 18 18 18  // ...0b...........
    7AE0: 70 18 18 18 18 0E 00 00 00 00 00 00 18 18 18 18  // p...............
    7AF0: 00 18 18 18 18 18 00 00 00 00 00 00 70 18 18 18  // ............p...
    7B00: 0E 18 18 18 18 70 00 00 00 00 00 00 76 DC 00 00  // .....p......v...
    7B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  // ................
    7B20: 38 38 6C 6C FE 00 00 00 00 00 00 00 3C 66 C0 C0  // 88ll........<f..
    7B30: C0 C6 66 3C 18 0C CC 38 00 00 00 00 C6 00 00 C6  // ..f<...8........
    7B40: C6 C6 C6 C6 CE 76 00 00 00 00 00 0C 18 30 00 7C  // .....v.......0.|
    7B50: C6 C6 FE C0 C6 7C 00 00 00 00 00 30 78 CC 00 78  // .....|.....0x..x
    7B60: 0C 7C CC CC DC 76 00 00 00 00 00 00 CC 00 00 78  // .|...v.........x
    7B70: 0C 7C CC CC DC 76 00 00 00 00 00 60 30 18 00 78  // .|...v.....`0..x
    7B80: 0C 7C CC CC DC 76 00 00 00 00 00 38 6C 38 00 78  // .|...v.....8l8.x
    7B90: 0C 7C CC CC DC 76 00 00 00 00 00 00 00 00 7C C6  // .|...v........|.
    7BA0: C0 C0 C6 7C 18 0C 6C 38 00 00 00 30 78 CC 00 7C  // ...|..l8...0x..|
    7BB0: C6 C6 FE C0 C6 7C 00 00 00 00 00 00 CC 00 00 7C  // .....|.........|
    7BC0: C6 C6 FE C0 C6 7C 00 00 00 00 00 30 18 0C 00 7C  // .....|.....0...|
    7BD0: C6 C6 FE C0 C6 7C 00 00 00 00 00 00 66 00 00 38  // .....|......f..8
    7BE0: 18 18 18 18 18 3C 00 00 00 00 00 18 3C 66 00 38  // .....<......<f.8
    7BF0: 18 18 18 18 18 3C 00 00 00 00 00 00 00 00 00 38  // .....<.........8
    7C00: 18 18 18 18 18 3C 00 00 00 00 00 C6 00 38 6C C6  // .....<.......8l.
    7C10: C6 C6 FE C6 C6 C6 00 00 00 00 38 6C 38 00 38 6C  // ..........8l8.8l
    7C20: C6 C6 FE C6 C6 C6 00 00 00 00 0C 18 30 00 FE 60  // ............0..`
    7C30: 60 7C 60 60 60 FE 00 00 00 00 00 00 00 00 66 DB  // `|```.........f.
    7C40: 1B 7F D8 D8 DF 76 00 00 00 00 00 00 7E D8 D8 D8  // .....v......~...
    7C50: D8 FE D8 D8 D8 DE 00 00 00 00 00 30 78 CC 00 7C  // ...........0x..|
    7C60: C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 00 00 7C  // .....|.........|
    7C70: C6 C6 C6 C6 C6 7C 00 00 00 00 00 30 18 0C 00 7C  // .....|.....0...|
    7C80: C6 C6 C6 C6 C6 7C 00 00 00 00 00 30 78 CC 00 C6  // .....|.....0x...
    7C90: C6 C6 C6 C6 CE 76 00 00 00 00 00 60 30 18 00 C6  // .....v.....`0...
    7CA0: C6 C6 C6 C6 CE 76 00 00 00 00 00 18 00 3C 18 18  // .....v.......<..
    7CB0: 18 18 18 18 18 3C 00 00 00 00 00 C6 00 7C C6 C6  // .....<.......|..
    7CC0: C6 C6 C6 C6 C6 7C 00 00 00 00 00 C6 00 C6 C6 C6  // .....|..........
    7CD0: C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 18 18 7C C6  // .....|........|.
    7CE0: C0 C0 C6 7C 18 18 00 00 00 00 00 38 6C 60 60 F0  // ...|.......8l``.
    7CF0: 60 60 60 66 F6 6C 00 00 00 00 00 66 66 66 66 3C  // ```f.l.....ffff<
    7D00: 18 7E 18 3C 18 18 00 00 00 00 00 00 3E 63 63 30  // .~.<........>cc0
    7D10: 1C 06 63 63 3E 00 1C 00 00 00 00 00 00 00 00 3E  // ..cc>..........>
    7D20: 63 38 0E 63 3E 00 1C 00 00 00 00 0C 18 30 00 78  // c8.c>........0.x
    7D30: 0C 7C CC CC DC 76 00 00 00 00 00 0C 18 30 00 38  // .|...v.......0.8
    7D40: 18 18 18 18 18 3C 00 00 00 00 00 0C 18 30 00 7C  // .....<.......0.|
    7D50: C6 C6 C6 C6 C6 7C 00 00 00 00 00 18 30 60 00 CC  // .....|......0`..
    7D60: CC CC CC CC DC 76 00 00 00 00 00 00 76 DC 00 BC  // .....v......v...
    7D70: 66 66 66 66 66 E6 00 00 00 00 00 76 DC 00 C6 C6  // fffff......v....
    7D80: E6 F6 DE CE C6 C6 00 00 00 00 00 21 1E 00 1E 33  // ...........!...3
    7D90: 60 60 67 63 33 1D 00 00 00 00 00 42 3C 00 3B 66  // ``gc3......B<.;f
    7DA0: 66 66 3E 06 66 3C 00 00 00 00 00 00 30 30 00 30  // ff>.f<......00.0
    7DB0: 30 30 60 C6 C6 7C 00 00 00 00 00 00 00 00 00 00  // 00`..|..........
    7DC0: 00 7E 60 60 60 00 00 00 00 00 00 00 00 00 00 00  // .~```...........
    7DD0: 00 7E 06 06 06 00 00 00 00 00 00 60 60 62 66 6C  // .~.........``bfl
    7DE0: 18 30 60 DC 36 0C 18 3E 00 00 00 60 60 62 66 6C  // .0`.6..>...``bfl
    7DF0: 18 36 6E DE 36 7E 06 06 00 00 00 00 18 18 00 18  // .6n.6~..........
    7E00: 18 3C 3C 3C 3C 18 00 00 00 00 00 00 00 00 00 36  // .<<<<..........6
    7E10: 6C D8 6C 36 00 00 00 00 00 00 00 00 00 00 00 D8  // l.l6............
    7E20: 6C 36 6C D8 00 00 00 00 00 00 11 44 11 44 11 44  // l6l........D.D.D
    7E30: 11 44 11 44 11 44 11 44 11 44 AA 55 AA 55 AA 55  // .D.D.D.D.D.U.U.U
    7E40: AA 55 AA 55 AA 55 AA 55 AA 55 DD 77 DD 77 DD 77  // .U.U.U.U.U.w.w.w
    7E50: DD 77 DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18  // .w.w.w.w.w......
    7E60: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7E70: 18 F8 18 18 18 18 18 18 18 18 18 18 18 18 18 F8  // ................
    7E80: 18 F8 18 18 18 18 18 18 18 18 36 36 36 36 36 36  // ..........666666
    7E90: 36 F6 36 36 36 36 36 36 36 36 00 00 00 00 00 00  // 6.66666666......
    7EA0: 00 FE 36 36 36 36 36 36 36 36 00 00 00 00 00 F8  // ..66666666......
    7EB0: 18 F8 18 18 18 18 18 18 18 18 36 36 36 36 36 F6  // ..........66666.
    7EC0: 06 F6 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // ..66666666666666
    7ED0: 36 36 36 36 36 36 36 36 36 36 00 00 00 00 00 FE  // 6666666666......
    7EE0: 06 F6 36 36 36 36 36 36 36 36 36 36 36 36 36 F6  // ..6666666666666.
    7EF0: 06 FE 00 00 00 00 00 00 00 00 36 36 36 36 36 36  // ..........666666
    7F00: 36 FE 00 00 00 00 00 00 00 00 18 18 18 18 18 F8  // 6...............
    7F10: 18 F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7F20: 00 F8 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7F30: 18 1F 00 00 00 00 00 00 00 00 18 18 18 18 18 18  // ................
    7F40: 18 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7F50: 00 FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7F60: 18 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00  // ................
    7F70: 00 FF 00 00 00 00 00 00 00 00 18 18 18 18 18 18  // ................
    7F80: 18 FF 18 18 18 18 18 18 18 18 18 18 18 18 18 1F  // ................
    7F90: 18 1F 18 18 18 18 18 18 18 18 36 36 36 36 36 36  // ..........666666
    7FA0: 36 37 36 36 36 36 36 36 36 36 36 36 36 36 36 37  // 6766666666666667
    7FB0: 30 3F 00 00 00 00 00 00 00 00 00 00 00 00 00 3F  // 0?.............?
    7FC0: 30 37 36 36 36 36 36 36 36 36 36 36 36 36 36 F7  // 076666666666666.
    7FD0: 00 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF  // ................
    7FE0: 00 F7 36 36 36 36 36 36 36 36 36 36 36 36 36 37  // ..66666666666667
    7FF0: 30 37 36 36 36 36 36 36 36 36 00 00 00 00 00 FF  // 0766666666......
    8000: 00 FF 00 00 00 00 00 00 00 00 36 36 36 36 36 F7  // ..........66666.
    8010: 00 F7 36 36 36 36 36 36 36 36 18 18 18 18 18 FF  // ..66666666......
    8020: 00 FF 00 00 00 00 00 00 00 00 36 36 36 36 36 36  // ..........666666
    8030: 36 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF  // 6...............
    8040: 00 FF 18 18 18 18 18 18 18 18 00 00 00 00 00 00  // ................
    8050: 00 FF 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // ..66666666666666
    8060: 36 3F 00 00 00 00 00 00 00 00 18 18 18 18 18 1F  // 6?..............
    8070: 18 1F 00 00 00 00 00 00 00 00 00 00 00 00 00 1F  // ................
    8080: 18 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00  // ................
    8090: 00 3F 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // .?66666666666666
    80A0: 36 FF 36 36 36 36 36 36 36 36 18 18 18 18 18 FF  // 6.66666666......
    80B0: 18 FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    80C0: 18 F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    80D0: 00 1F 18 18 18 18 18 18 18 18 FF FF FF FF FF FF  // ................
    80E0: FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00  // ................
    80F0: 00 00 FF FF FF FF FF FF FF FF F0 F0 F0 F0 F0 F0  // ................
    8100: F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F  // ................
    8110: 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF FF FF  // ................
    8120: FF FF 00 00 00 00 00 00 00 00 00 00 00 00 76 DC  // ..............v.
    8130: D8 D8 D8 D8 DC 76 00 00 00 00 00 00 78 CC CC D8  // .....v......x...
    8140: FC C6 C6 C6 C6 CC 00 00 00 00 00 00 FE 66 62 60  // .............fb`
    8150: 60 60 60 60 60 60 00 00 00 00 00 00 00 00 00 FE  // ``````..........
    8160: 6C 6C 6C 6C 6C 6C 00 00 00 00 00 00 FE C6 62 30  // llllll........b0
    8170: 18 18 30 62 C6 FE 00 00 00 00 00 00 00 00 00 7E  // ..0b...........~
    8180: D8 CC CC CC D8 70 00 00 00 00 00 00 00 00 66 66  // .....p........ff
    8190: 66 66 66 7C 60 C0 80 00 00 00 00 00 00 00 00 76  // fff|`..........v
    81A0: DC 18 18 18 18 18 00 00 00 00 00 00 FE 38 38 6C  // .............88l
    81B0: C6 C6 6C 38 38 FE 00 00 00 00 00 00 00 38 6C C6  // ..l88........8l.
    81C0: C6 FE C6 C6 6C 38 00 00 00 00 00 00 38 6C C6 C6  // ....l8......8l..
    81D0: C6 C6 6C 6C 6C EE 00 00 00 00 00 00 3E 60 60 3C  // ..lll.......>``<
    81E0: 66 C6 C6 C6 CC 78 00 00 00 00 00 00 00 00 00 7E  // f....x.........~
    81F0: DB DB DB 7E 00 00 00 00 00 00 00 00 02 06 7C CE  // ...~..........|.
    8200: DE F6 F6 7C 60 C0 00 00 00 00 00 00 00 1C 30 60  // ...|`.........0`
    8210: 60 7C 60 60 30 1C 00 00 00 00 00 00 7C C6 C6 C6  // `|``0.......|...
    8220: C6 C6 C6 C6 C6 C6 00 00 00 00 00 00 00 00 FE 00  // ................
    8230: 00 FE 00 00 FE 00 00 00 00 00 00 00 00 00 18 18  // ................
    8240: 7E 18 18 00 00 7E 00 00 00 00 00 00 30 18 0C 06  // ~....~......0...
    8250: 0C 18 30 00 00 7E 00 00 00 00 00 00 0C 18 30 60  // ..0..~........0`
    8260: 30 18 0C 00 00 7E 00 00 00 00 00 00 00 00 0C 1E  // 0....~..........
    8270: 1A 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    8280: 18 18 18 18 58 78 30 00 00 00 00 00 00 00 18 18  // ....Xx0.........
    8290: 00 7E 00 18 18 00 00 00 00 00 00 00 00 00 00 00  // .~..............
    82A0: 76 DC 00 76 DC 00 00 00 00 00 00 00 78 CC CC 78  // v..v........x..x
    82B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    82C0: 00 18 18 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    82D0: 00 00 18 00 00 00 00 00 00 00 00 00 1F 18 18 18  // ................
    82E0: 18 18 D8 D8 78 38 18 00 00 00 00 00 D8 6C 6C 6C  // ....x8.......lll
    82F0: 6C 6C 00 00 00 00 00 00 00 00 00 00 70 D8 18 30  // ll..........p..0
    8300: 60 F8 00 00 00 00 00 00 00 00 00 00 00 00 00 7E  // `..............~
    8310: 7E 7E 7E 7E 7E 00 00 00 00 00 00 00 00 00 00 00  // ~~~~~...........
    8320: 00 00 00 00 00 00 00 00 00 00 1D 00 00 00 00 00  // ................
    8330: 24 66 FF 66 24 00 00 00 00 00 00 2F 00 00 00 01  // $f.f$....../....
    8340: 03 06 0C 18 30 60 C0 80 00 00 00 00 30 00 00 7E  // ....0`......0..~
    8350: C3 C3 C3 DB DB C3 C3 C3 7E 00 00 00 00 4D 00 00  // ........~....M..
    8360: C3 C3 E7 FF FF DB DB C3 C3 C3 00 00 00 00 54 00  // ..............T.
    8370: 00 FF 99 18 18 18 18 18 18 18 3C 00 00 00 00 56  // ..........<....V
    8380: 00 00 C3 C3 C3 C3 C3 C3 C3 66 3C 18 00 00 00 00  // .........f<.....
    8390: 57 00 00 C3 C3 C3 C3 DB DB DB DB FF 66 00 00 00  // W...........f...
    83A0: 00 58 00 00 C3 C3 C3 66 3C 3C 66 C3 C3 C3 00 00  // .X.....f<<f.....
    83B0: 00 00 59 00 00 C3 C3 C3 C3 66 3C 18 18 18 3C 00  // ..Y......f<...<.
    83C0: 00 00 00 5C 00 00 00 80 C0 60 30 18 0C 06 03 01  // ...\.....`0.....
    83D0: 00 00 00 00 6D 00 00 00 00 00 66 FF DB DB DB C3  // ....m.....f.....
    83E0: C3 00 00 00 00 76 00 00 00 00 00 C3 C3 C3 C3 66  // .....v.........f
    83F0: 3C 18 00 00 00 00 77 00 00 00 00 00 C3 C3 DB DB  // <.....w.........
    8400: DB FF 66 00 00 00 00 00 00 C2 72 C3 8B FA A0 10  // ..f.......r.....
    8410: 04 24 30 AA B9 1E 00 BE 49 04 F3 A4 B1 07 BE 84  // .$0.....I.......
    8420: 04 F3 A4 B1 04 BE A8 04 F3 A4 9C FA B1 04 BE 14  // ................
    8430: 00 F3 A4 B1 04 BE 74 00 F3 A4 B1 04 BE 7C 00 F3  // ......t......|..
    8440: A4 B1 04 BE 0C 01 F3 A4 C4 3E 08 01 89 3E B4 01  // .........>...>..
    8450: 8C 06 B6 01 C7 06 08 01 D6 5B 8C 0E 0A 01 9D C3  // .........[......
    8460: 8B F2 8C C2 8E DA 33 D2 8E C2 26 8A 26 10 04 80  // ......3...&.&...
    8470: E4 CF AC 0A C4 26 A2 10 04 B9 1E 00 BF 49 04 F3  // .....&.......I..
    8480: A4 B1 07 BF 84 04 F3 A4 B1 04 BF A8 04 F3 A4 9C  // ................
    8490: FA B1 04 BF 14 00 F3 A4 B1 04 BF 74 00 F3 A4 B1  // ...........t....
    84A0: 04 BF 7C 00 F3 A4 B1 04 BF 0C 01 F3 A4 06 1F B1  // ..|.............
    84B0: 04 BE B4 01 BF 08 01 F3 A4 C7 06 B4 01 D6 5B 8C  // ..............[.
    84C0: 0E B6 01 9D C3 0B DB 74 03 E9 46 01 57 32 C0 B9  // .......t..F.W2..
    84D0: 40 00 F3 AA 5F BB 81 A1 26 89 1D 26 8C 4D 02 2E  // @..._...&..&.M..
    84E0: 8E 1E 1D 03 57 BE 49 04 B9 1E 00 83 C7 04 FC 8A  // ....W.I.........
    84F0: 04 26 88 05 46 47 E2 F7 5F A0 84 04 FE C0 26 88  // .&..FG.._.....&.
    8500: 45 22 A1 85 04 26 89 45 23 57 E8 12 1C 5F 26 88  // E"...&.E#W..._&.
    8510: 5D 25 26 88 7D 26 8A 1E 49 04 E8 FC 05 74 05 80  // ]%&.}&..I....t..
    8520: FB 13 7F 1D 32 FF D1 E3 2E 8A 87 59 A1 32 E4 0A  // ....2......Y.2..
    8530: C0 74 01 40 26 89 45 27 2E 8A 87 5A A1 26 88 45  // .t.@&.E'...Z.&.E
    8540: 29 A1 85 04 8A 16 84 04 FE C2 F6 E2 B2 00 3D C8  // ).............=.
    8550: 00 7E 15 B2 01 3D 5E 01 7E 0E B2 02 3D 90 01 7E  // .~...=^.~...=..~
    8560: 07 B2 03 3D E0 01 7E 00 26 88 55 2A 8A 26 87 04  // ...=..~.&.U*.&..
    8570: 8A C4 24 01 C0 E0 04 80 E4 02 D0 E4 0A E0 80 F4  // ..$.............
    8580: 10 A0 89 04 24 0A 0A E0 E8 94 08 B2 C0 B0 30 EE  // ....$.........0.
    8590: 42 EC 24 08 C0 E0 02 0A C4 0C 01 26 88 45 2D B0  // B.$........&.E-.
    85A0: 03 26 88 45 31 E8 77 08 1E 06 32 D2 C4 1E A8 04  // .&.E1.w...2.....
    85B0: 8C C1 8C CE 3B CE 74 34 26 C5 77 04 8C D9 0B F1  // ....;.t4&.w.....
    85C0: 74 03 80 CA 10 26 C5 77 0C 8C D9 0B F1 74 03 80  // t....&.w.....t..
    85D0: CA 08 26 C5 77 08 8C D9 0B F1 74 03 80 CA 04 26  // ..&.w.....t....&
    85E0: C5 77 10 8C D9 0B F1 74 03 80 CA 01 07 1F 26 88  // .w.....t......&.
    85F0: 55 32 B0 03 BA C4 03 E8 E4 04 8A E0 C0 EC 02 8A  // U2..............
    8600: D4 8A F2 D0 EE 81 E2 04 04 25 03 03 0B C2 26 89  // .........%....&.
    8610: 45 2B 8B EC C6 46 1A 1B C3 0A C0 74 0F FE C8 74  // E+...F.....t...t
    8620: 36 FE C8 74 56 8B EC C6 46 1A 00 C3 B8 20 00 F6  // 6..tV...F.... ..
    8630: C1 01 74 03 83 C0 60 F6 C1 02 74 03 83 C0 3A F6  // ..t...`...t...:.
    8640: C1 04 74 03 05 03 03 83 C0 3F C1 E8 06 8B EC 89  // ..t......?......
    8650: 46 0E C6 46 1A 1C C3 8B FB 83 C7 20 F6 C1 01 74  // F..F....... ...t
    8660: 03 E8 85 00 F6 C1 02 74 03 E8 EF 00 F6 C1 04 74  // .......t.......t
    8670: 03 E8 F8 01 8B EC C6 46 1A 1C C3 F6 C1 01 74 06  // .......F......t.
    8680: E8 16 15 E8 25 01 F6 C1 02 74 03 E8 85 01 F6 C1  // ....%....t......
    8690: 04 74 03 E8 12 02 EB DC 8A C4 EE 42 EC AA FE C4  // .t.........B....
    86A0: 4A E2 F5 C3 E8 6B 04 BD C0 03 B9 15 00 32 E4 EC  // J....k.......2..
    86B0: 87 EA 8A C4 EE 42 EC AA FE C4 4A 87 EA E2 F0 EC  // .....B....J.....
    86C0: 87 EA B0 20 EE C3 26 8A 05 88 04 47 46 E2 F7 C3  // ... ..&....GF...
    86D0: 26 8A 25 EF 47 FE C0 E2 F7 C3 B2 C0 8A C4 EE 26  // &.%.G..........&
    86E0: 8A 05 47 FE C4 EE E2 F4 C3 9C FA 51 57 8B C7 2B  // ..G........QW..+
    86F0: C3 26 89 07 8B F7 E8 0A 04 EC 26 88 44 01 26 89  // .&........&.D.&.
    8700: 54 41 B2 CE EC 26 88 44 02 B2 CC EC 26 88 44 09  // TA...&.D....&.D.
    8710: B2 CA EC 26 88 44 04 B2 C4 EC 26 88 04 83 C7 05  // ...&.D....&.....
    8720: B9 04 00 B4 01 E8 70 FF 26 8A 04 EE 8B FE 83 C7  // ......p.&.......
    8730: 0A 26 8B 54 41 32 E4 B9 19 00 E8 5B FF 26 8A 44  // .&.TA2.....[.&.D
    8740: 01 EE E8 5F FF B2 CE 32 E4 B9 09 00 E8 49 FF 26  // ..._...2.....I.&
    8750: 8A 44 02 EE 5F 59 83 C7 60 9D C3 9C FA 8B C7 2B  // .D.._Y..`......+
    8760: C3 26 89 47 02 51 57 2E 8E 1E 1D 03 A0 10 04 24  // .&.G.QW........$
    8770: 30 AA BE 49 04 B9 1E 00 F3 A4 BE 84 04 B1 07 F3  // 0..I............
    8780: A4 BE A8 04 B1 04 F3 A4 BE 14 00 B1 04 F3 A4 BE  // ................
    8790: 74 00 B1 04 F3 A4 BE 7C 00 B1 04 F3 A4 BE 0C 01  // t......|........
    87A0: B1 04 F3 A4 5F 59 83 C7 3A 9D C3 9C FA 26 8B 3F  // ...._Y..:....&.?
    87B0: 03 FB 8B F7 51 8B FE 83 C7 05 BA C4 03 B8 00 01  // ....Q...........
    87C0: EF B0 01 B9 04 00 E8 07 FF 47 B2 C2 26 8A 44 09  // .........G..&.D.
    87D0: EE B2 C4 B8 00 03 EF 26 8A 04 EE 26 8B 54 41 B8  // .......&...&.TA.
    87E0: 11 00 EF B1 19 32 C0 E8 E6 FE 26 8A 44 01 EE 80  // .....2....&.D...
    87F0: C2 06 26 8A 44 04 EE EC B1 15 32 E4 E8 DB FE B0  // ..&.D.....2.....
    8800: 20 EE B1 09 32 C0 B2 CE E8 C5 FE 26 8A 44 02 EE  //  ...2......&.D..
    8810: 59 9D C3 9C FA 26 8B 7F 02 03 FB 06 51 2E 8E 1E  // Y....&......Q...
    8820: 1D 03 26 8A 05 80 26 10 04 CF 08 06 10 04 47 BE  // ..&...&.......G.
    8830: 49 04 B9 1E 00 E8 8E FE BE 84 04 B1 07 E8 86 FE  // I...............
    8840: BE A8 04 B1 04 E8 7E FE BE 14 00 B1 04 E8 76 FE  // ......~.......v.
    8850: BE 74 00 B1 04 E8 6E FE BE 7C 00 B1 04 E8 66 FE  // .t....n..|....f.
    8860: BE 0C 01 B1 04 E8 5E FE 59 07 9D C3 9C FA 8B C7  // ......^.Y.......
    8870: 2B C3 26 89 47 04 E8 A6 05 B2 C0 B0 34 EE 42 EC  // +.&.G.......4.B.
    8880: 26 88 05 BA C8 03 EC 26 88 45 01 50 4A 4A EC 26  // &......&.E.PJJ.&
    8890: 88 45 02 83 C7 03 B9 00 03 42 32 C0 EE 42 42 EC  // .E.......B2..BB.
    88A0: AA E2 FC 58 4A EE 9D C3 9C FA 26 8B 77 04 03 F3  // ...XJ.....&.w...
    88B0: E8 6C 05 B2 C0 B0 34 EE 26 8A 04 EE BA C6 03 26  // .l....4.&......&
    88C0: 8A 44 02 EE 56 42 42 83 C6 03 32 C0 EE 42 B9 00  // .D..VBB...2..B..
    88D0: 03 26 8A 04 EE 46 E2 F9 5E FE CA 26 8A 44 01 EE  // .&...F..^..&.D..
    88E0: 9D C3 BA CC 03 EC 24 FE 0A C4 B2 C2 EE C3 E8 A8  // ......$.........
    88F0: 12 B2 C0 86 C4 EE EB 00 EB 00 86 C4 EE EB 00 EB  // ................
    8900: 00 B0 20 EE C3 50 8A E0 80 E4 80 80 26 87 04 7F  // .. ..P......&...
    8910: 08 26 87 04 24 7F 8A E0 3C 07 7E 1E 26 F6 47 33  // .&..$...<.~.&.G3
    8920: 01 75 17 3C 23 74 13 3C 32 74 0F 3C 33 74 0B B4  // .u.<#t.<2t.<3t..
    8930: 03 26 F6 47 09 01 75 02 B4 07 88 26 49 04 BA B4  // .&.G..u....&I...
    8940: 03 80 0E 87 04 02 26 F6 47 09 01 74 07 B2 D4 80  // ......&.G..t....
    8950: 26 87 04 FD 89 16 63 04 C7 06 4E 04 00 00 C6 06  // &.....c...N.....
    8960: 62 04 00 B9 08 00 BF 50 04 FC 06 1E 07 33 C0 F3  // b......P.....3..
    8970: AB 07 26 8A 07 32 E4 A3 4A 04 26 8A 47 01 A2 84  // ..&..2..J.&.G...
    8980: 04 26 8A 47 02 A3 85 04 26 8B 47 03 A3 4C 04 26  // .&.G....&.G..L.&
    8990: 8B 47 14 86 C4 A3 60 04 58 C3 52 32 E4 33 D2 B0  // .G....`.X.R2.3..
    89A0: 0D CD 17 F6 C4 29 75 08 32 E4 33 D2 B0 0A CD 17  // .....)u.2.3.....
    89B0: 5A C3 06 1E 60 2E 8E 1E 1D 03 2E 83 0E 27 03 00  // Z...`........'..
    89C0: 75 6E 80 3E 00 05 01 74 67 C6 06 00 05 01 8A 1E  // un.>...tg.......
    89D0: 62 04 32 FF D1 E3 8B FB 8B 85 50 04 8A 3E 62 04  // b.2.......P..>b.
    89E0: 50 32 F6 8A 0E 84 04 32 ED 41 51 8B 0E 4A 04 32  // P2.....2.AQ..J.2
    89F0: D2 E8 A6 FF F6 C4 29 75 3D 51 52 89 95 50 04 B4  // ......)u=QR..P..
    8A00: 08 E8 3A D2 0A C0 75 02 B0 20 33 D2 32 E4 CD 17  // ..:...u.. 3.2...
    8A10: F6 C4 29 75 1F 5A FE C2 59 E2 DE FE C6 59 E2 CA  // ..)u.Z..Y....Y..
    8A20: E8 77 FF 32 C0 A2 00 05 58 89 85 50 04 E8 AF 03  // .w.2....X..P....
    8A30: 61 1F 07 CF 5A 59 59 B0 FF EB EA 52 2A F5 38 C6  // a...ZYY....R*.8.
    8A40: 7D 02 32 C0 2E 8E 06 1F 03 5A C3 A0 85 04 F6 E3  // }.2......Z......
    8A50: 8A F7 8B D8 8B CA BA C4 03 B8 02 0F EF B4 02 E8  // ................
    8A60: 6D 00 8B D1 32 ED 8A E6 8A C6 F3 AA 03 FD 8A CA  // m...2...........
    8A70: 4B 75 F7 32 E4 E8 57 00 C3 53 8A 1E 62 04 0B C0  // Ku.2..W..S..b...
    8A80: 75 04 0A DB 74 03 E8 35 03 5B 8B F8 2B D1 81 C2  // u...t..5.[..+...
    8A90: 01 01 8A C3 32 E4 C3 8A C6 32 F6 2B EA 0A DB 74  // ....2....2.+...t
    8AA0: 2A 2A C3 F6 26 85 04 8B C8 52 B4 01 E8 20 00 B2  // **..&....R... ..
    8AB0: C4 B8 02 0F EF 5A 1E 06 1F 8B C1 8B CA F3 A4 03  // .....Z..........
    8AC0: F5 03 FD 48 75 F5 1F E8 81 FF C3 8A D8 EB F8 BA  // ...Hu...........
    8AD0: CE 03 B0 05 EE 42 EC 24 FC 0A C4 EE 4A C3 9C FA  // .....B.$....J...
    8AE0: EE 42 EB 00 EC 4A 9D C3 1E 2E 8E 1E 1D 03 8B 16  // .B...J..........
    8AF0: 63 04 80 C2 06 1F C3 1E 2E 8E 1E 1D 03 8B 16 63  // c..............c
    8B00: 04 1F C3 50 BA CC 03 EC B2 D4 A8 01 75 02 B2 B4  // ...P........u...
    8B10: 58 C3 E8 EE FF 80 C2 06 C3 1E 2E 8E 1E 1D 03 80  // X...............
    8B20: 3E 49 04 03 74 13 80 3E 49 04 02 74 0C 80 3E 49  // >I..t..>I..t..>I
    8B30: 04 01 74 05 80 3E 49 04 00 1F C3 50 2E 8E 06 21  // ..t..>I....P...!
    8B40: 03 A0 10 04 24 30 3C 30 74 05 2E 8E 06 23 03 58  // ....$0<0t....#.X
    8B50: 0B C0 74 03 E8 E1 01 03 06 4E 04 81 C2 01 01 2B  // ..t......N.....+
    8B60: D1 32 ED 8B 2E 4A 04 8B F8 8B F0 8B C5 F6 E3 D1  // .2...J..........
    8B70: E0 D1 E5 0A DB 75 02 8A DE 38 F3 7E 02 8A DE C3  // .....u...8.~....
    8B80: FC 8A D8 8B C1 E8 B3 FF 03 F0 3A 16 4A 04 74 06  // ..........:.J.t.
    8B90: 06 1F E8 1B 00 C3 06 1F E8 40 00 C3 FC 8A D8 8A  // .........@......
    8BA0: C1 8A E6 E8 95 FF F7 DD 2B F0 06 1F E8 01 00 C3  // ........+.......
    8BB0: 53 8A CE 2A CB 32 ED 32 F6 2B EA 2B EA E3 0E 8A  // S..*.2.2.+.+....
    8BC0: E1 8B CA F3 A5 03 F5 03 FD FE CC 75 F4 58 B0 20  // ...........u.X. 
    8BD0: 8A CA F3 AB 03 FD FE CB 75 F6 C3 53 8A C6 2A C3  // ........u..S..*.
    8BE0: 74 06 F6 E2 8B C8 F3 A5 58 8B C8 F6 E2 91 B0 20  // t.......X...... 
    8BF0: F3 AB C3 8B D8 E8 2E 00 2E 8E 1E 23 03 8A C3 22  // ...........#..."
    8C00: DF D3 E3 A8 80 74 03 30 1C C3 F6 D7 8A 34 22 F7  // .....t.0.....4".
    8C10: 0A DE 88 1C C3 8A FC E8 0C 00 2E 8E 1E 23 03 8A  // .............#..
    8C20: 04 D2 E8 22 C7 C3 B0 28 F6 E2 F6 C2 01 74 03 05  // ..."...(.....t..
    8C30: D8 1F 8B F1 C1 EE 02 80 FF 05 7F 0C 03 F0 F6 D1  // ................
    8C40: 80 E1 03 D0 E1 B7 03 C3 D1 EE 03 F0 F6 D1 80 E1  // ................
    8C50: 07 B7 01 C3 FC 8A D8 2E 8E 06 23 03 8B C1 E8 86  // ..........#.....
    8C60: 00 75 02 8A DE 03 F0 E8 24 00 C3 FC 8A D8 2E 8E  // .u......$.......
    8C70: 06 23 03 8A C1 8A E6 E8 6D 00 75 02 8A DE F7 DD  // .#......m.u.....
    8C80: 81 C6 F0 00 81 C7 F0 00 2B F0 E8 01 00 C3 8A CE  // ........+.......
    8C90: 2A CB E3 2C 51 8A CA 56 57 D1 E9 F3 A5 13 C9 F3  // *..,Q..VW.......
    8CA0: A4 8A CA 2B F1 2B F9 81 C6 00 20 81 C7 00 20 D1  // ...+.+.... ... .
    8CB0: E9 F3 A5 13 C9 F3 A4 5F 5E 03 F5 03 FD 59 E2 D4  // ......._^....Y..
    8CC0: 8A C7 8A E7 8A CA 57 D1 E9 F3 AB 13 C9 F3 AA 8A  // ......W.........
    8CD0: CA 2B F9 81 C7 00 20 D1 E9 F3 AB 13 C9 F3 AA 5F  // .+.... ........_
    8CE0: 03 FD FE CB 75 DE C3 E8 B0 00 81 C2 01 01 2B D1  // ....u.........+.
    8CF0: 38 F3 76 02 32 DB 51 B1 02 D2 E6 D2 E3 59 32 ED  // 8.v.2.Q......Y2.
    8D00: BD 50 00 80 3E 49 04 06 74 04 D0 E2 D1 E0 06 1F  // .P..>I..t.......
    8D10: 8B F8 8B F0 B0 50 F6 E3 0A DB C3 52 53 8A DF 32  // .....P.....RS..2
    8D20: FF D1 E3 8B 87 50 04 E8 0E 00 50 D1 EB A1 4C 04  // .....P....P...L.
    8D30: F7 E3 5B 03 C3 5B 5A C3 52 8B D0 A0 4A 04 F6 E4  // ..[..[Z.R...J...
    8D40: 32 F6 03 C2 D1 E0 5A C3 8B E8 83 E5 0F 2E 8A A6  // 2.....Z.........
    8D50: F8 8C 8B E8 C1 ED 04 83 E5 0F 2E 8A 86 F8 8C C3  // ................
    8D60: 00 03 0C 0F 30 33 3C 3F C0 C3 CC CF F0 F3 FC FF  // ....03<?........
    8D70: 26 8B 04 86 E0 BA 00 80 F6 C4 C0 74 02 0A D6 D0  // &..........t....
    8D80: EE C1 E0 02 75 F2 88 56 00 45 C3 8B 16 63 04 8A  // ....u..V.E...c..
    8D90: C5 86 E0 EF 8A E1 FE C0 EF C3 52 8B D0 8A C4 F6  // ..........R.....
    8DA0: 26 4A 04 C1 E0 02 32 F6 03 C2 5A C3 53 8A DF 32  // &J....2...Z.S..2
    8DB0: FF D1 E3 8B 87 50 04 D1 EB E8 02 00 5B C3 52 8B  // .....P......[.R.
    8DC0: D0 32 F6 52 8A C4 F6 26 85 04 F7 26 4A 04 5A 03  // .2.R...&...&J.Z.
    8DD0: C2 0A DB 74 08 03 06 4C 04 FE CB 75 F8 5A C3 52  // ...t...L...u.Z.R
    8DE0: 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 03 06 4E  // ...J...2.......N
    8DF0: 04 D1 F8 8B C8 B4 0E E8 91 FF 5A C3 8B C2 F7 26  // ..........Z....&
    8E00: 4A 04 8B F9 C1 EF 03 03 F8 0A FF 74 0A 8A C7 32  // J..........t...2
    8E10: E4 F7 26 4C 04 03 F8 80 E1 07 B4 80 D2 EC C3 E8  // ..&L............
    8E20: F0 FC EC C3 E8 F8 FF B2 C0 B0 20 EE C3 E8 EF FF  // .......... .....
    8E30: B2 C0 32 C0 EE C3 C4 3E A8 04 26 C4 7D 04 8C C5  // ..2....>..&.}...
    8E40: 0B EF C3 53 B0 0E E8 95 FC 8A E0 B0 0F E8 8E FC  // ...S............
    8E50: 8B D8 B8 0E AA EF B8 0F 55 EF B0 0E E8 7F FC 3C  // ........U......<
    8E60: AA 74 0D B0 0F E8 76 FC 3C 55 74 04 32 C0 5B C3  // .t....v.<Ut.2.[.
    8E70: B0 0E 8A E7 EF FE C0 8A E3 EF B0 01 0A C0 5B C3  // ..............[.
    8E80: 8A EE 8A 36 85 04 06 1F 0A DB 74 25 8A C5 2A C3  // ...6......t%..*.
    8E90: F6 E6 8B C8 52 32 F6 C1 E2 02 8B C2 D1 E2 2B D5  // ....R2........+.
    8EA0: 51 8B C8 F3 A5 2B FA 2B F2 59 E2 F4 5A E8 05 00  // Q....+.+.Y..Z...
    8EB0: C3 8A DD EB F8 8A C6 F6 E3 8B C8 8A C7 8A E0 32  // ...............2
    8EC0: F6 C1 E2 02 8B DA D1 E2 8B F1 2B D5 8B CB F3 AB  // ..........+.....
    8ED0: 2B FA 4E 75 F7 C3 2E 8E 1E 1D 03 89 0E 60 04 8A  // +.Nu.........`..
    8EE0: C5 24 60 A8 20 74 06 B9 00 1E E9 94 00 F6 06 87  // .$`. t..........
    8EF0: 04 01 0F 85 8B 00 80 3E 49 04 07 74 06 E8 19 FC  // .......>I..t....
    8F00: 74 01 C3 F6 06 87 04 08 74 03 CD 42 C3 8A 36 85  // t.......t..B..6.
    8F10: 04 8A D6 FE CA 38 CD 7E 1F 0A C9 74 64 8A E9 8A  // .....8.~...td...
    8F20: CE FE C9 EB 5C 38 D1 74 58 8A CE 80 FD 03 7C 04  // ....\8.tX.....|.
    8F30: 8A E9 D0 ED FE C9 EB 49 80 F9 03 7E 44 8A E1 2A  // .......I...~D..*
    8F40: E5 0A E4 75 0A 38 CA 74 38 FE CA 38 CA 74 32 8A  // ...u.8.t8..8.t2.
    8F50: C5 0A C1 38 F0 7E 0A 80 FC 02 7E 12 80 FD 02 7F  // ...8.~....~.....
    8F60: C8 80 FC 03 7D BF 8A D6 FE CA 38 D1 74 13 8A CE  // ....}.....8.t...
    8F70: FE C9 FE C9 8A E9 2A EC 80 FE 08 7F 04 FE C1 FE  // ......*.........
    8F80: C5 B4 0A E8 05 FE C3 2E 8E 1E 1D 03 A2 62 04 32  // .............b.2
    8F90: E4 8B F0 F7 26 4C 04 A3 4E 04 8B C8 E8 7A FB 74  // ....&L..N....z.t
    8FA0: 07 80 3E 49 04 07 77 02 D1 F9 B4 0C E8 DC FD D1  // ..>I..w.........
    8FB0: E6 8B 84 50 04 E8 27 FE C3 2E 8E 1E 1D 03 8A 26  // ...P..'........&
    8FC0: 49 04 E8 84 92 74 07 C7 06 50 04 00 00 C3 E8 48  // I....t...P.....H
    8FD0: FB 74 0B 80 FC 07 74 06 77 08 E8 77 FC C3 E8 9F  // .t....t.w..w....
    8FE0: FB C3 80 FC 13 7C 03 74 1F C3 E8 4E FA 8A D8 8B  // .....|.t...N....
    8FF0: C1 E8 85 FA 8B 2E 4A 04 52 F6 26 85 04 F7 E5 8B  // ......J.R.&.....
    9000: F7 03 F0 5A E8 90 FA C3 E8 30 FA 8A D8 8B C1 E8  // ...Z.....0......
    9010: 67 FA C1 E7 03 52 8B 2E 4A 04 C1 E5 03 F7 26 85  // g....R..J.....&.
    9020: 04 F7 E5 8B F7 03 F0 5A E8 55 FE C3 2E 8E 1E 1D  // .......Z.U......
    9030: 03 8A 26 49 04 E8 E1 FA 74 0C 80 FC 07 74 07 77  // ..&I....t....t.w
    9040: 40 80 FC 03 7F 04 E8 53 FB C3 E8 1E FC C3 E8 EA  // @......S........
    9050: F9 8A D8 8A C1 8A E6 FE C4 E8 1D FA 2B 3E 4A 04  // ............+>J.
    9060: C1 E7 03 52 F7 26 85 04 F7 26 4A 04 C1 E0 03 8B  // ...R.&...&J.....
    9070: F7 2B F0 5A 8B 2E 4A 04 C1 E5 03 F7 DD E8 00 FE  // .+.Z..J.........
    9080: C3 80 FC 13 7C 03 74 C6 C3 E8 AF F9 8A D8 8A C1  // ....|.t.........
    9090: 8A E6 FE C4 E8 E2 F9 52 8B 2E 4A 04 F7 26 85 04  // .......R..J..&..
    90A0: F7 E5 2B FD 8B F7 2B F0 5A F7 DD E8 E9 F9 C3 2E  // ..+...+.Z.......
    90B0: 8E 1E 1D 03 2E 8E 06 23 03 E8 5D FA 74 11 80 3E  // .......#..].t..>
    90C0: 49 04 07 7C 18 2E 8E 06 21 03 74 03 E9 B1 00 E8  // I..|....!.t.....
    90D0: 49 FC 8B D8 26 8B 07 8B EC 89 46 1A C3 A1 50 04  // I...&.....F...P.
    90E0: E8 B7 FC 8B F0 BB 08 00 2B E3 8B EC 80 3E 49 04  // ........+....>I.
    90F0: 06 75 1F B9 04 00 26 8A 04 88 46 00 45 26 8A 84  // .u....&...F.E&..
    9100: 00 20 88 46 00 45 83 C6 50 E2 EB B8 00 02 B2 80  // . .F.E..P.......
    9110: EB 17 D1 E6 B9 04 00 E8 56 FC 81 C6 00 20 E8 4F  // ........V.... .O
    9120: FC 81 EE B0 1F E2 F0 EB E2 2B EB C4 3E 0C 01 32  // .........+..>..2
    9130: F6 80 FB 0E 75 09 26 83 7D FE 10 75 02 B6 80 16  // ....u.&.}..u....
    9140: 1F 8B F5 8B CB F6 C6 80 74 01 47 56 57 F3 A6 5F  // ........t.GVW.._
    9150: 5E 74 23 FE C0 03 FB F6 C6 80 74 01 47 FE CA 75  // ^t#.......t.G..u
    9160: E2 FE CC 74 0F 2E 8E 1E 1D 03 C4 3E 7C 00 B0 80  // ...t.......>|...
    9170: B2 80 EB CB 32 C0 8B E5 03 E3 8B EC 89 46 1A C3  // ....2........F..
    9180: 80 3E 49 04 13 7C 05 75 02 EB 5A C3 2E 8E 06 1F  // .>I..|.u..Z.....
    9190: 03 E8 18 FC 8B F0 8B 1E 85 04 2B E3 8B EC B8 05  // ..........+.....
    91A0: 08 B9 05 00 BA CE 03 80 3E 49 04 0F 72 1A F6 06  // ........>I..r...
    91B0: 87 04 60 75 13 B4 0A F7 C6 01 00 75 02 B4 05 B0  // ..`u.......u....
    91C0: 07 EF B8 05 18 B9 05 01 EF 51 8B CB 26 8A 04 F6  // .........Q..&...
    91D0: D0 88 46 00 45 03 36 4A 04 E2 F1 58 EF B8 00 01  // ..F.E.6J...X....
    91E0: 32 D2 E9 44 FF 2E 8E 06 1F 03 A1 50 04 8B D0 32  // 2..D.......P...2
    91F0: F6 52 8A C4 32 E4 F7 26 4A 04 F7 26 85 04 5A 03  // .R..2..&J..&..Z.
    9200: C2 8B F0 8B 1E 85 04 2B E3 8B EC 53 8B 3E 4A 04  // .......+...S.>J.
    9210: 4F C1 E7 03 C1 E6 03 B9 08 00 32 E4 26 8A 04 D0  // O.........2.&...
    9220: E4 0A C0 74 03 80 CC 01 46 E2 F1 88 66 00 45 03  // ...t....F...f.E.
    9230: F7 4B 75 E3 5B B8 00 01 32 D2 E9 EC FE 33 ED EB  // .Ku.[...2....3..
    9240: 03 BD 01 00 2E 8E 1E 1D 03 2E 8E 06 23 03 8A 26  // ............#..&
    9250: 49 04 E8 C4 F8 74 0F 2E 8E 06 21 03 80 FC 07 74  // I....t....!....t
    9260: 05 7C 3D E9 0B 02 8A E3 8B F0 8A DF 32 FF D1 E3  // .|=.........2...
    9270: 8B 87 50 04 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 8B  // ..P....J...2....
    9280: F8 D1 E7 0A DB 74 0B D0 EB A1 4C 04 03 F8 FE CB  // .....t....L.....
    9290: 75 FA 8B C6 0B ED 75 03 F3 AB C3 AA 47 E2 FC C3  // u.....u.....G...
    92A0: 50 2E 8E 06 23 03 A1 50 04 E8 EE FA 8B F8 A0 50  // P...#..P.......P
    92B0: 04 8A 26 4A 04 8B E8 58 A8 80 74 08 24 7F C5 36  // ..&J...X..t.$..6
    92C0: 7C 00 EB 04 C5 36 0C 01 8A FC 32 E4 C1 E0 03 03  // |....6....2.....
    92D0: F0 80 FF 06 74 69 D1 E7 8A F3 B0 55 80 E3 03 F6  // ....ti.....U....
    92E0: E3 8A D8 8A F8 8B C5 50 B2 04 F6 C6 80 75 27 AC  // .......P.....u'.
    92F0: E8 55 FA 23 C3 AB AC E8 4E FA 23 C3 26 89 85 FE  // .U.#....N.#.&...
    9300: 1F 83 C7 4E FE CA 75 E7 83 EE 08 81 EF 3E 01 58  // ...N..u......>.X
    9310: E8 72 00 E2 D2 C3 AC E8 2E FA 23 C3 26 31 05 AC  // .r........#.&1..
    9320: E8 25 FA 23 C3 26 31 85 00 20 83 C7 50 FE CA 75  // .%.#.&1.. ..P..u
    9330: E5 83 EE 08 81 EF 3E 01 58 E8 49 00 E2 A9 C3 8B  // ......>.X.I.....
    9340: C5 50 B2 04 F6 C3 80 74 1F AC 26 30 05 AC 26 30  // .P.....t..&0..&0
    9350: 85 00 20 83 C7 50 FE CA 7F EF 83 EE 08 81 EF 3F  // .. ..P.........?
    9360: 01 58 E8 20 00 E2 DA C3 AC AA AC 26 88 85 FF 1F  // .X. .......&....
    9370: 83 C7 4F FE CA 7F F1 83 EE 08 81 EF 3F 01 58 E8  // ..O.........?.X.
    9380: 03 00 E2 BD C3 FE C0 38 E0 72 06 32 C0 81 C7 F0  // .......8.r.2....
    9390: 00 C3 8A 16 85 04 F6 E2 8B F0 32 F6 8B EA 66 0F  // ..........2...f.
    93A0: B6 06 51 04 F6 E2 66 0F B7 16 4A 04 83 FA 64 75  // ..Q...f...J...du
    93B0: 03 BA 68 00 83 FA 5A 75 03 BA 60 00 81 FA AF 00  // ..h...Zu..`.....
    93C0: 75 03 BA B0 00 52 F7 E2 66 0F B7 F8 66 0F B6 06  // u....R..f...f...
    93D0: 50 04 66 03 F8 66 C1 CF 10 03 FA 66 C1 C7 03 81  // P.f..f.....f....
    93E0: CF 00 FF 66 C1 C7 10 5A 8A E2 4A C1 E2 03 A0 50  // ...f...Z..J....P
    93F0: 04 50 C5 06 0C 01 03 F0 2E 8E 06 1F 03 58 57 51  // .P...........XWQ
    9400: 50 9C FC 8B CD E8 3B 00 B5 08 AC 8A E0 8A C7 D0  // P.....;.........
    9410: E4 73 02 8A C3 26 88 05 66 47 FE CD 75 EF 66 03  // .s...&..fG..u.f.
    9420: FA E2 E2 9D 58 59 5F 83 C7 08 FE C0 38 E0 72 0E  // ....XY_.....8.r.
    9430: 51 32 C0 8B CD 49 03 FA 83 C7 08 E2 F9 59 2B F5  // Q2...I.......Y+.
    9440: E2 BC C3 06 52 33 C0 8E C0 66 C1 C7 10 8B C7 66  // ....R3...f.....f
    9450: C1 C7 10 E8 F3 8D 74 16 38 E0 74 12 0F B6 D0 E8  // ......t.8.t.....
    9460: FF C5 8A E0 66 C1 C7 10 8B F8 66 C1 C7 10 5A 07  // ....f.....f...Z.
    9470: C3 80 FC 13 7C 0B 0F 84 18 FF 80 FC 62 0F 84 11  // ....|.......b...
    9480: FF E8 01 00 C3 80 FC 11 75 06 80 E3 80 80 CB 0F  // ........u.......
    9490: 50 53 8A DF 32 FF D1 E3 8B 97 50 04 5B 2E 8E 06  // PS..2.....P.[...
    94A0: 1F 03 E8 07 F9 8B F8 8B 2E 85 04 58 32 F6 52 8B  // ...........X2.R.
    94B0: 36 4A 04 56 8A 26 85 04 C5 36 0C 01 80 FC 0E 75  // 6J.V.&...6.....u
    94C0: 09 83 7C FE 10 75 03 B4 10 46 F6 E4 03 F0 B6 03  // ..|..u...F......
    94D0: F6 C3 80 75 6D B2 C4 B8 02 0F EF 5A 58 50 52 4A  // ...um......ZXPRJ
    94E0: 8A E0 57 51 51 57 8B CD 32 C0 AA 03 FA E2 FB 5F  // ..WQQW..2......_
    94F0: 47 FE C4 38 D4 76 0A 32 E4 8B CD 49 03 FA 47 E2  // G..8.v.2...I..G.
    9500: FB 59 E2 E0 59 5F BA C4 03 B0 02 8A E3 EF 5B 4B  // .Y..Y_........[K
    9510: 5A 51 57 8B CD AC 26 8A 25 AA 03 FB E2 F7 5F 47  // ZQW...&.%....._G
    9520: 2B F5 42 3B D3 76 0A 33 D2 8B CD 49 03 FB 47 E2  // +.B;.v.3...I..G.
    9530: FB 59 E2 DD BA CE 03 B8 03 00 EF B2 C4 B8 02 0F  // .Y..............
    9540: EF C3 B2 CE B8 03 18 EF EB BC 2E 8E 1E 1D 03 80  // ................
    9550: 3E 63 04 B4 74 0B BA CC 03 EC A8 01 75 04 CD 42  // >c..t.......u..B
    9560: C3 C3 E8 D1 F8 0A FF 75 1C 8A E3 80 E4 1F 80 26  // .......u.......&
    9570: 66 04 E0 08 26 66 04 E8 2D 00 8A 1E 66 04 80 E3  // f...&f..-...f...
    9580: 20 B1 05 D2 EB E8 91 F5 74 19 A0 66 04 24 DF 80  //  .......t..f.$..
    9590: E3 01 74 02 0C 20 A2 66 04 24 10 0C 02 0A D8 E8  // ..t.. .f.$......
    95A0: 53 00 C3 E8 7E F8 C3 53 50 80 E3 0F 8A FB D0 E3  // S...~..SP.......
    95B0: 81 E3 10 07 0A DF E8 60 F5 74 0E B4 00 8A C3 E8  // .......`.t......
    95C0: 2C F3 0B ED 74 03 26 88 1D 8A C3 E8 0B 00 0B ED  // ,...t.&.........
    95D0: 74 04 26 88 5D 10 58 5B C3 8A E0 1E 2E 8E 1E 1D  // t.&.].X[........
    95E0: 03 80 3E 49 04 33 1F 7F 08 8A C4 B4 11 E8 FE F2  // ..>I.3..........
    95F0: C3 E8 30 F8 C3 9C FA E8 9F 05 B2 C0 B9 03 00 B4  // ..0.............
    9600: 01 8A C4 EE 8A C3 EE 0B ED 74 04 47 26 88 1D FE  // .........t.G&...
    9610: C4 80 C3 02 E2 EB B0 20 EE 9D C3 2E 8E 1E 1D 03  // ....... ........
    9620: 8A 26 49 04 E8 F2 F4 74 0A 80 FC 07 77 06 74 03  // .&I....t....w.t.
    9630: E8 C0 F5 C3 80 FC 13 7C 03 74 4C C3 8A D8 E8 BB  // .......|.tL.....
    9640: F7 BA CE 03 B0 08 EF 2E 8E 1E 1F 03 F6 C3 80 75  // ...............u
    9650: 1C B2 C4 B8 02 FF EF 8A 25 C6 05 00 8A E3 EF 8A  // ........%.......
    9660: 25 B4 FF 88 25 EF B2 CE B8 08 FF EF C3 B8 03 18  // %...%...........
    9670: EF B2 C4 B0 02 8A E3 EF 8A 25 B4 FF 88 25 EF B2  // .........%...%..
    9680: CE B8 03 00 EF EB E1 50 2E 8E 06 1F 03 A1 4A 04  // .......P......J.
    9690: C1 E0 03 F7 E2 03 C1 8B F8 58 26 88 05 C3 2E 8E  // .........X&.....
    96A0: 1E 1D 03 8A 26 49 04 E8 6F F4 74 0F 80 FC 07 77  // ....&I..o.t....w
    96B0: 0B 74 08 E8 5F F5 8B EC 89 46 1A C3 80 FC 13 7C  // .t.._....F.....|
    96C0: 03 74 29 C3 E8 35 F7 8A CC 2E 8E 1E 1F 03 BA CE  // .t)..5..........
    96D0: 03 32 FF B8 04 03 EF D0 E7 8A 1D 22 D9 74 03 80  // .2.........".t..
    96E0: CF 01 FE CC 7D F0 8B EC 88 7E 1A C3 A1 4A 04 C1  // ....}....~...J..
    96F0: E0 03 F7 E2 03 C1 8B F8 2E 8E 1E 1F 03 8A 05 8B  // ................
    9700: EC 88 46 1A C3 2E 8E 1E 1D 03 8A 3E 62 04 8A CF  // ..F........>b...
    9710: D0 E1 32 ED BE 50 04 03 F1 8B 14 8A 0E 49 04 3C  // ..2..P.......I.<
    9720: 0D 76 4A 2E 8E 06 23 03 E8 EE F3 75 33 8A 1E 4A  // .vJ...#....u3..J
    9730: 04 8A F8 8A C6 F6 E3 8A CA 03 C8 D1 E1 03 0E 4E  // ...............N
    9740: 04 8B F9 8A C7 AA D1 E9 41 FE C2 38 DA 73 59 89  // ........A..8.sY.
    9750: 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF C3  // ...c............
    9760: 2E 8E 06 21 03 80 F9 07 74 C3 E9 83 00 75 04 32  // ...!....t....u.2
    9770: D2 EB 0F 3C 0A 75 1D 3A 36 84 04 75 03 E9 93 00  // ...<.u.:6..u....
    9780: FE C6 89 14 E8 92 F3 75 05 80 F9 07 7F 05 8B C2  // .......u........
    9790: E8 4C F6 C3 3C 07 75 04 E8 A9 70 C3 3C 08 75 83  // .L..<.u...p.<.u.
    97A0: 0A D2 74 DE FE CA EB DA 32 FF 32 D2 2B CB 3A 36  // ..t.....2.2.+.:6
    97B0: 84 04 74 06 FE C6 03 CB EB 95 89 14 8B 16 63 04  // ..t...........c.
    97C0: B0 0E 8A E5 EF 8A E1 FE C0 EF 2B FB 2B FB 26 8A  // ..........+.+.&.
    97D0: 65 02 50 8B 3E 4E 04 8B F3 D1 E6 03 F7 A0 84 04  // e.P.>N..........
    97E0: F6 E3 8B C8 06 1F F3 A5 8B CB 58 B0 20 F3 AB C3  // ..........X. ...
    97F0: B9 01 00 B4 0A E8 46 C4 FE C2 3A 16 4A 04 74 03  // ......F...:.J.t.
    9800: 89 14 C3 32 FF 32 D2 89 14 3A 36 84 04 74 2E FE  // ...2.2...:6..t..
    9810: C6 EB ED 89 14 2E 8E 06 23 03 E8 FC F2 74 0E 2E  // ........#....t..
    9820: 8E 06 21 03 80 F9 07 74 04 32 FF EB 10 8B C2 E8  // ..!....t.2......
    9830: AD F5 8B F9 D1 E7 4F 8B 1E 4A 04 EB 91 33 C9 8A  // ......O..J...3..
    9840: 36 84 04 8A 16 4A 04 FE CA B0 01 E9 70 F7 2E 8E  // 6....J......p...
    9850: 1E 1D 03 F6 06 87 04 08 74 03 CD 42 C3 E8 76 F6  // ........t..B..v.
    9860: 8B EC C6 46 1B 00 C3 2E 8E 1E 1D 03 8A DF 32 FF  // ...F..........2.
    9870: D1 E3 89 97 50 04 D0 EB 38 1E 62 04 75 05 8B C2  // ....P...8.b.u...
    9880: E8 5C F5 C3 2E 8E 1E 1D 03 8A DF 32 FF D1 E3 8B  // .\.........2....
    9890: 97 50 04 8B 0E 60 04 8B EC 89 4E 16 89 56 12 C3  // .P...`....N..V..
    98A0: 2E 8E 1E 1D 03 A0 87 04 24 80 0A 06 49 04 8A 26  // ........$...I..&
    98B0: 4A 04 F6 06 87 04 08 75 2D E8 5D F2 74 07 80 3E  // J......u-.].t..>
    98C0: 49 04 07 7F 21 51 8A CC 8A 2E 84 04 BE 91 98 81  // I...!Q..........
    98D0: FE 9A 98 74 10 2E 3B 0C 74 05 83 C6 03 EB F0 24  // ...t..;.t......$
    98E0: 80 2E 0A 44 02 59 8A 3E 62 04 8B EC 89 46 1A 89  // ...D.Y.>b....F..
    98F0: 5E 0E 89 4E 16 89 56 12 C3 84 18 23 84 2B 33 84  // ^..N..V....#.+3.
    9900: 2A 32 2E 8E 1E 1D 03 3C 04 7F 1B 50 52 BA CC 03  // *2.....<...PR...
    9910: EC A8 01 5A 58 74 08 80 3E 63 04 D4 74 08 C3 80  // ...ZXt..>c..t...
    9920: 3E 63 04 B4 75 F8 3C 1C 73 F4 32 E4 8B E8 D1 E5  // >c..u.<.s.2.....
    9930: 2E FF A6 CD 98 05 99 25 99 37 99 6C 99 B6 98 B6  // .......%.7.l....
    9940: 98 B6 98 91 99 A9 99 AD 99 B6 98 B6 98 B6 98 B6  // ................
    9950: 98 B6 98 B6 98 DB 99 B6 98 DF 99 FA 99 B6 98 39  // ...............9
    9960: 9A B6 98 47 9A 62 9A 69 9A 75 9A 99 9A 80 3E 49  // ...G.b.i.u....>I
    9970: 04 13 74 15 E8 BF F4 8B C3 86 E0 E8 70 EF 0B ED  // ..t.........p...
    9980: 74 07 8A C7 32 FF 26 88 01 E8 93 F4 C3 E8 A6 F4  // t...2.&.........
    9990: 8A C7 E8 44 FC 0B ED 74 F0 26 88 7D 11 EB EA 80  // ...D...t.&.}....
    99A0: 3E 49 04 13 74 E3 06 E8 8C F4 1F 0B ED 74 07 8B  // >I..t........t..
    99B0: F2 B9 11 00 F3 A4 8B F2 E8 DE 01 32 E4 B9 10 00  // ...........2....
    99C0: B2 C0 9C FA 8A C4 EE AC EE 9D FE C4 E2 F4 AC E8  // ................
    99D0: 07 FC EB B5 80 FB 01 77 B0 E8 43 F4 B2 C0 B0 30  // .......w..C....0
    99E0: E8 FB F0 24 F7 80 26 65 04 DF 80 FB 00 74 07 0C  // ...$..&e.....t..
    99F0: 08 80 0E 65 04 20 EE EB 90 E8 9D 01 8A C3 B2 C0  // ...e. ..........
    9A00: E8 DB F0 8B C8 EE B0 20 EE 8B EC 88 4E 0F E9 78  // ....... ....N..x
    9A10: FF B3 11 EB E4 8B FA E8 05 F4 B9 10 00 32 E4 B2  // .............2..
    9A20: C0 8A C4 9C FA EE 42 EC 26 88 05 FE C4 4A EE 9D  // ......B.&....J..
    9A30: 47 E2 EE 9C FA B0 11 EE 42 EC 9D 26 88 05 E8 E3  // G.......B..&....
    9A40: F3 EB 5A E8 CE 00 C3 8B FA 51 8B C3 26 8A 35 26  // ..Z......Q..&.5&
    9A50: 8A 6D 01 26 8A 4D 02 E8 CA 00 83 C7 03 43 59 E2  // .m.&.M.......CY.
    9A60: E8 C3 0A DB 75 1A E8 B6 F3 B2 C0 B0 30 E8 6E F0  // ....u.......0.n.
    9A70: 24 7F F6 C7 01 74 02 0C 80 B4 30 E8 70 EE EB 1D  // $....t....0.p...
    9A80: FE CB 75 1C E8 98 F3 B2 C0 B0 30 E8 50 F0 EE A8  // ..u.......0.P...
    9A90: 80 75 03 C0 E7 02 B4 34 8A C7 E8 51 EE E8 7F F3  // .u.....4...Q....
    9AA0: C3 8A C3 E8 D1 00 8B EC 89 4E 16 88 76 13 C3 8B  // .........N..v...
    9AB0: FA 51 8B C3 E8 C3 00 26 88 35 26 88 6D 01 26 88  // .Q.....&.5&.m.&.
    9AC0: 4D 02 83 C7 03 43 59 E2 E8 C3 BA C6 03 8A C3 EE  // M....CY.........
    9AD0: C3 BA C6 03 EC 32 E4 8B EC 89 46 0E C3 E8 3F F3  // .....2....F...?.
    9AE0: B2 C0 B0 34 E8 F7 EF 8A F8 EE B0 30 E8 EF EF B3  // ...4.......0....
    9AF0: 01 A8 80 75 05 B3 00 C0 EF 02 8B EC 89 5E 0E EB  // ...u.........^..
    9B00: 9C 51 8B C3 E8 73 00 E8 2A 00 8A C3 E8 52 00 43  // .Q...s..*....R.C
    9B10: 59 E2 EE C3 F6 06 89 04 02 74 03 E8 16 00 8A C3  // Y........t......
    9B20: E8 39 00 C3 F6 06 89 04 02 74 03 E8 06 00 8A C3  // .9.......t......
    9B30: E8 2E 00 C3 50 B0 1E F6 E6 50 B0 3B F6 E5 50 B0  // ....P....P.;..P.
    9B40: 0B F6 E1 59 03 C1 59 03 C1 B1 64 F6 F1 80 FC 32  // ...Y..Y...d....2
    9B50: 7C 02 FE C0 8A F0 8A E8 8A C8 58 C3 52 E8 39 00  // |.........X.R.9.
    9B60: 5A 53 8B DA BA C8 03 9C FA EE 42 8A C7 EE 8A C5  // ZS........B.....
    9B70: EE 8A C1 EE 9D 5B C3 E8 1F 00 53 9C FA BA C7 03  // .....[....S.....
    9B80: EE 42 42 EC 8A F8 EB 00 EB 00 EC 8A E8 EB 00 EB  // .BB.............
    9B90: 00 EC 8A C8 8A F7 9D 5B C3 50 51 E8 81 F2 B9 FF  // .......[.PQ.....
    9BA0: 7F EC A8 08 75 02 E2 F9 59 58 C3 2E 8E 1E 1D 03  // ....u...YX......
    9BB0: 8B F8 24 0F 81 E7 F0 00 C1 EF 03 83 FF 06 7F 18  // ..$.............
    9BC0: 2E FF A5 5D 9B 65 9B 7A 9B 18 9C 74 9C 3C 03 74  // ...].e.z...t.<.t
    9BD0: 08 3C 04 7F 03 E8 CF 01 C3 BA C4 03 B0 03 8A E3  // .<..............
    9BE0: EF C3 3C 04 77 F2 50 53 50 52 8B 16 63 04 B0 07  // ..<.w.PSPR..c...
    9BF0: E8 EB EE 8A E0 D0 EC 80 E4 01 A8 40 74 03 80 CC  // ...........@t...
    9C00: 02 B0 12 E8 D8 EE 40 A3 85 04 B0 09 E8 CF EE A8  // ......@.........
    9C10: 80 74 04 D1 2E 85 04 A1 85 04 8B D0 3D F4 01 73  // .t..........=..s
    9C20: 1B BA E0 01 3D C2 01 73 13 BA 90 01 3D 7C 01 73  // ....=..s....=|.s
    9C30: 0B BA 5E 01 3D 4A 01 73 03 BA C8 00 89 16 85 04  // ..^.=J.s........
    9C40: 5A 58 C6 06 84 04 FF E8 5D 01 5B 58 8A DF 32 FF  // ZX......].[X..2.
    9C50: 0A C0 74 0E B3 0E 3C 01 74 08 B3 08 3C 02 74 02  // ..t...<.t...<.t.
    9C60: B3 10 8A CB 8A E9 81 E9 01 02 80 F9 08 7E 04 81  // .............~..
    9C70: E9 01 01 87 1E 85 04 53 E8 5B F2 5B E8 8D 02 C3  // .......S.[.[....
    9C80: 0A C0 74 11 FE C8 74 1A FE C8 74 38 FE C8 74 3C  // ..t...t...t8..t<
    9C90: FE C8 74 40 C3 89 2E 7C 00 8C 06 7E 00 C3 8C C8  // ..t@...|...~....
    9CA0: 8E C0 FE CA 0A DB 74 07 32 FF 2E 8A 97 58 9C 89  // ......t.2....X..
    9CB0: 0E 85 04 88 16 84 04 89 2E 0C 01 8C 06 0E 01 C3  // ................
    9CC0: 00 0D 18 2A E8 42 03 B9 0E 00 EB D6 BD AF 6A B9  // ...*.B........j.
    9CD0: 08 00 EB CA BD C2 72 B9 10 00 EB C2 0A C0 75 BD  // ......r.......u.
    9CE0: 8B 0E 85 04 8A 16 84 04 80 FF 07 77 35 80 FF 01  // ...........w5...
    9CF0: 77 10 0A FF 75 06 C4 2E 7C 00 EB 26 C4 2E 0C 01  // w...u...|..&....
    9D00: EB 20 80 FF 02 75 0B 8C CD 8E C5 2E 8B 2E A1 83  // . ...u..........
    9D10: EB 10 0E 07 8A DF 32 FF 80 EB 02 D1 E3 2E 8B AF  // ......2.........
    9D20: CB 9C 8B C5 8B EC 89 4E 16 89 56 12 89 46 0A 8C  // .......N..V..F..
    9D30: 46 1E C3 C2 72 AF 6A AF 6E AF 72 C2 72 C2 82 53  // F...r.j.n.r.r..S
    9D40: 06 8A 26 49 04 E8 6C C1 26 8A 47 02 26 8A 67 33  // ..&I..l.&.G.&.g3
    9D50: F6 C4 01 74 22 BD C2 72 3C 10 7D 0E E8 AA 02 8C  // ...t"..r<.}.....
    9D60: 06 0E 01 3C 0E 7D 07 BD AF 6A 8C 0E 0E 01 89 2E  // ...<.}...j......
    9D70: 0C 01 E8 18 01 EB 2D B4 84 3C 10 7D 13 B4 81 3C  // ......-..<.}...<
    9D80: 0E 74 0D 7F 15 B4 02 3C 08 74 05 80 CC 80 EB 0A  // .t.....<.t......
    9D90: 26 F6 47 05 01 74 03 80 E4 7F 86 C4 32 DB E8 06  // &.G..t......2...
    9DA0: 00 E8 02 02 07 5B C3 8B F8 8B F2 BA CE 03 EC B8  // .....[..........
    9DB0: 05 00 EF B8 06 04 EF B2 C4 EC B8 02 04 EF B8 04  // ................
    9DC0: 07 EF 8B D6 8B C7 50 24 7F 0A C0 74 22 0E 07 33  // ......P$...t"..3
    9DD0: D2 B9 00 01 3C 04 75 07 B7 10 BD C2 72 EB 10 FE  // ....<.u.....r...
    9DE0: C8 75 07 B7 0E E8 21 02 EB 05 B7 08 BD AF 6A E8  // .u....!.......j.
    9DF0: 35 00 58 A8 80 74 08 E8 ED 70 75 03 E8 76 01 BA  // 5.X..t...pu..v..
    9E00: C4 03 B8 02 03 EF B8 04 02 EF B2 CC EC A8 01 B8  // ................
    9E10: 06 0E 75 02 B4 0A B2 CE 50 EC 58 EF B0 04 EE 32  // ..u.....P.X....2
    9E20: C0 EE B8 05 10 EF C3 FC 0B C9 75 01 C3 80 FF 0E  // ..........u.....
    9E30: 75 0A 26 83 7E FE 10 75 03 80 CD 80 1E 06 1F 2E  // u.&.~..u........
    9E40: 8E 06 1F 03 8B FA C1 E7 05 B0 40 53 80 E3 03 F6  // ..........@S....
    9E50: E3 5B F6 C3 04 74 02 04 20 86 E0 8B D0 03 FA 8B  // .[...t.. .......
    9E60: F5 E3 28 32 C0 86 FB 32 FF 51 F6 C5 80 74 01 46  // ..(2...2.Q...t.F
    9E70: 8B CB F3 A4 83 FB 20 74 07 B9 20 00 2B CB F3 AA  // ...... t.. .+...
    9E80: 59 F6 C5 80 74 01 46 FE C9 75 DE 1F C3 8A 26 49  // Y...t.F..u....&I
    9E90: 04 50 06 57 C4 3E A8 04 26 C4 7D 0C 8C C5 0B EF  // .P.W.>..&.}.....
    9EA0: 74 30 8B EF 83 C7 07 26 8A 05 3C FF 74 24 38 E0  // t0.....&..<.t$8.
    9EB0: 74 03 47 EB F2 8B FD 26 8A 05 FE C8 A2 84 04 26  // t.G....&.......&
    9EC0: 8B 45 01 A3 85 04 26 C4 7D 03 89 3E 0C 01 8C 06  // .E....&.}..>....
    9ED0: 0E 01 5F 07 58 C3 26 F6 47 33 01 74 01 C3 C4 1E  // .._.X.&.G3.t....
    9EE0: A8 04 26 C4 5F 08 8C C0 0B C3 74 1F BF 0B 00 26  // ..&._.....t....&
    9EF0: 8A 01 3C FF 74 15 47 38 06 49 04 75 F2 26 8A 07  // ..<.t.G8.I.u.&..
    9F00: 32 E4 87 06 85 04 8B D8 E8 01 00 C3 8B 16 63 04  // 2.............c.
    9F10: 8A 26 85 04 FE CC 80 E4 1F 9C FA 80 FA D4 74 0B  // .&............t.
    9F20: B0 14 EE 42 EC 24 E0 0A C4 EE 4A B0 09 EE 42 EC  // ...B.$....J...B.
    9F30: 24 E0 0A C4 EE 9D 8A C8 8B C3 8A 16 85 04 F6 F2  // $...............
    9F40: 80 3E 84 04 FF 75 07 A2 84 04 FE 0E 84 04 F6 E2  // .>...u..........
    9F50: F6 C1 80 74 02 D1 E0 48 8A E0 B0 12 8B 16 63 04  // ...t...H......c.
    9F60: EF A0 4A 04 8A 26 84 04 FE C4 F6 E4 D1 E0 05 00  // ..J..&..........
    9F70: 01 A3 4C 04 C3 1E 32 FF 8A DC BE C2 82 80 FB 10  // ..L...2.........
    9F80: 74 0A BE AF 72 80 FB 0E 74 02 1F C3 0E 1F 8B 3C  // t...r...t......<
    9F90: 0B FF 74 10 81 E7 FF 00 46 C1 E7 05 03 FA 8B CB  // ..t.....F.......
    9FA0: F3 A4 EB EA 1F C3 8A 26 49 04 50 06 57 C4 3E A8  // .......&I.P.W.>.
    9FB0: 04 26 C4 7D 08 8C C5 0B EF 74 4A 8B EF 83 C7 0B  // .&.}.....tJ.....
    9FC0: 26 8A 05 3C FF 74 3E 38 E0 74 03 47 EB F2 8B FD  // &..<.t>8.t.G....
    9FD0: 26 8A 3D 26 8A 5D 01 26 8B 4D 02 26 8B 55 04 26  // &.=&.].&.M.&.U.&
    9FE0: 8A 45 0A 3C FF 74 02 FE C8 50 A0 84 04 FE C0 F6  // .E.<.t...P......
    9FF0: 26 85 04 A3 85 04 58 A2 84 04 26 C4 7D 06 8B EF  // &.....X...&.}...
    A000: 32 C0 E8 A2 FD 5F 07 58 C3 50 53 51 52 2E A1 27  // 2...._.X.PSQR..'
    A010: 03 0B C0 74 09 2E 8B 2E A1 83 0E 07 EB 08 B8 30  // ...t...........0
    A020: 11 B7 02 E8 18 BC 5A 59 5B 58 C3 3C 04 7C 01 C3  // ......ZY[X.<.|..
    A030: E3 FD 53 2E 8E 1E 1D 03 86 FB 32 FF D1 E3 8B FB  // ..S.......2.....
    A040: 81 C7 50 04 8B 35 5B 89 15 56 8B F0 51 53 26 8A  // ..P..5[..V..QS&.
    A050: 46 00 45 3C 0D 7F 1F 75 04 32 D2 EB 40 3C 0A 74  // F.E<...u.2..@<.t
    A060: 32 3C 07 75 05 E8 DC 67 EB 62 3C 08 75 08 0A D2  // 2<.u...g.b<.u...
    A070: 74 5A FE CA EB 27 F7 C6 02 00 74 05 26 8A 5E 00  // tZ...'....t.&.^.
    A080: 45 B9 01 00 B4 09 E8 B5 BB FE C2 3A 16 4A 04 72  // E..........:.J.r
    A090: 0C 32 D2 89 15 3A 36 84 04 73 06 FE C6 89 15 EB  // .2...:6..s......
    A0A0: 2B 50 E8 74 EA 75 08 B8 00 08 E8 91 BB EB 09 80  // +P.t.u..........
    A0B0: 3E 49 04 07 74 F1 32 E4 86 3E 62 04 53 8A FC 55  // >I..t.2..>b.S..U
    A0C0: E8 25 00 5D 5B 86 3E 62 04 58 8B 15 5B 59 E2 15  // .%.][.>b.X..[Y..
    A0D0: 5A F7 C6 01 00 75 02 89 15 8B 05 3A 3E 62 04 75  // Z....u.....:>b.u
    A0E0: 03 E8 FB EC C3 E9 64 FF 33 C9 8A 36 84 04 8A 16  // ......d.3..6....
    A0F0: 4A 04 FE CA B8 01 06 E8 44 BB C3 2E 8E 1E 1D 03  // J.......D.......
    A100: 0A C0 75 0D E8 18 00 8B EC 89 5E 0E C6 46 1A 1A  // ..u.......^..F..
    A110: C3 3C 01 75 09 E8 41 00 8B EC C6 46 1A 1A C3 A0  // .<.u..A....F....
    A120: 8A 04 BF 91 A1 2E 3A 05 72 04 BB FF FF C3 32 E4  // ......:.r.....2.
    A130: D1 E0 03 F8 2E 8B 5D 04 0A DB 74 05 0A FF 75 04  // ......]...t...u.
    A140: C3 86 FB C3 A0 10 04 24 30 3C 30 74 06 F6 C3 01  // .......$0<0t....
    A150: 75 EF C3 F6 C3 01 74 E9 C3 BF 91 A1 2E 8A 0D 32  // u.....t........2
    A160: C0 83 C7 04 2E 3B 1D 74 12 86 FB 2E 3B 1D 74 0B  // .....;.t....;.t.
    A170: 83 C7 02 FE C0 38 C8 7E EB B0 FF A2 8A 04 C3 BB  // .....8.~........
    A180: 08 00 F6 06 89 04 02 74 0E BB 07 00 BA CC 03 EC  // .......t........
    A190: A8 01 74 18 BB 08 00 BA B4 03 E8 A6 EC 74 21 B7  // ..t..........t!.
    A1A0: 01 E8 53 E9 80 FA D4 74 17 86 FB C3 BA D4 03 E8  // ..S....t........
    A1B0: 91 EC 74 0C B7 02 E8 3E E9 80 FA B4 74 02 86 FB  // ..t....>....t...
    A1C0: C3 0F 08 0F 08 0F 08 0F 08 03 01 03 01 01 01 00  // ................
    A1D0: 08 01 01 01 01 01 01 01 01 0F 01 0F 08 0F 04 00  // ................
    A1E0: 02 0F 02 01 01 0F 01 FF 01 FF E0 0F 00 00 00 00  // ................
    A1F0: 07 02 08 FF 0E 00 00 3F 00 10 01 08 00 00 00 00  // .......?........
    A200: 01 00 02 02 01 00 04 04 01 00 05 02 05 00 06 01  // ................
    A210: 06 05 06 00 08 01 08 00 07 02 07 06 07 00 55 02  // ..............U.
    A220: 34 00 90 00 D2 00 00 00 00 00 00 00 5F 57 C3 90  // 4..........._W..
    A230: 50 66 52 E8 F4 FF FF FF 81 EF 10 00 00 00 2E 8B  // PfR.............
    A240: 07 66 BA F8 0C EF 66 BA FC 0C ED 32 C0 66 8B F8  // .f....f....2.f..
    A250: 66 5A 58 C3 66 B8 4F 03 66 52 66 56 53 57 50 0A  // fZX.f.O.fRfVSWP.
    A260: FF 75 44 E8 C8 FF FF FF 66 33 F6 66 BB D0 05 E8  // .uD.....f3.f....
    A270: 00 01 00 00 C1 E8 10 F6 C4 40 75 2B 66 81 E2 FF  // .........@u+f...
    A280: 00 66 D1 E2 66 8B C2 66 40 C1 E0 10 66 8B C2 66  // .f..f..f@...f..f
    A290: BB 13 00 E8 E8 00 00 00 66 BB 12 00 E8 DF 00 00  // ........f.......
    A2A0: 00 66 58 32 E4 66 50 58 5F 5B 66 5E 66 5A C3 90  // .fX2.fPX_[f^fZ..
    A2B0: 66 B8 4F 03 52 51 53 57 66 56 50 8A FB 80 E3 7F  // f.O.RQSWfVP.....
    A2C0: 0A DB 75 26 E8 67 FF FF FF C1 E2 10 66 8B D1 C1  // ..u&.g......f...
    A2D0: E2 02 66 BE 00 00 E8 C7 00 00 00 66 BE 00 03 E8  // ..f........f....
    A2E0: BE 00 00 00 66 58 32 E4 66 50 58 66 5E 5F 5B 59  // ....fX2.fPXf^_[Y
    A2F0: 5A C3 66 B8 4F 03 66 51 57 56 53 52 50 8A FB 80  // Z.f.O.fQWVSRP...
    A300: E3 7F 0A DB 75 39 8A DA 57 5A E8 21 FF FF FF 66  // ....u9..WZ.!...f
    A310: 33 F6 66 53 66 BB D0 05 E8 57 00 00 00 80 E4 01  // 3.fSf....W......
    A320: 66 5B 80 E7 FE 0A FC 66 BE 00 00 E8 DE 00 00 00  // f[.....f........
    A330: 66 BE 00 03 E8 D5 00 00 00 66 58 32 E4 66 50 58  // f........fX2.fPX
    A340: 5A 5B 5E 5F 66 59 C3 90 53 50 51 F6 C7 80 74 20  // Z[^_fY..SPQ...t 
    A350: 66 BB 9C 1B E8 1B 00 00 00 A8 01 74 13 66 B9 FF  // f..........t.f..
    A360: FF 66 BB A3 1B E8 0A 00 00 00 A8 01 75 02 E2 F1  // .f..........u...
    A370: 59 58 5B C3 66 52 E8 11 00 00 00 ED 66 5A C3 90  // YX[.fR......fZ..
    A380: 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B D7 50  // fR......fZ..f..P
    A390: 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83 C2 04  // 3.f..f......f...
    A3A0: 58 C3 52 E8 A0 FF FF FF 81 E2 FF FF FF 00 66 BB  // X.R...........f.
    A3B0: 04 1A E8 BD FF FF FF 25 00 00 00 FF 03 C2 66 25  // .......%......f%
    A3C0: 00 F0 E8 B9 FF FF FF 66 BB 05 1A E8 B0 FF FF FF  // .......f........
    A3D0: 66 81 E2 FF 0F 66 BB 01 1A E8 96 FF FF FF 24 03  // f....f........$.
    A3E0: 8A C8 66 D3 EA 66 BB 06 1A E8 86 FF FF FF 66 03  // ..f..f........f.
    A3F0: C2 66 BB 0D 1A E8 86 FF FF FF 66 8B C2 24 FC C1  // .f........f..$..
    A400: E0 10 66 BB 5C 1B E8 75 FF FF FF 5A C3 90 52 66  // ..f.\..u...Z..Rf
    A410: 53 66 51 E8 30 FF FF FF 33 C0 8A C3 66 53 66 BB  // SfQ.0...3...fSf.
    A420: 79 1A E8 59 FF FF FF 66 5B 66 49 66 81 E1 FF 00  // y..Y...f[fIf....
    A430: 66 41 32 C0 66 53 66 BB 78 1A E8 41 FF FF FF 66  // fA2.fSf.x..A...f
    A440: 5B 26 8A 42 02 C1 E0 0A 26 8A 42 01 C1 E0 0A 26  // [&.B....&.B....&
    A450: 8A 02 C1 E0 02 F6 C7 01 75 03 C1 E0 02 66 53 66  // ........u....fSf
    A460: BB 7C 1A E8 18 FF FF FF 66 5B 83 C2 04 E2 D2 66  // .|......f[.....f
    A470: 59 66 5B 5A C3 00 30 45 23 45 23 45 23 45 0E 45  // Yf[Z..0E#E#E#E.E
    A480: 0E 45 0E 45 0E 45 50 41 C7 41 F1 41 32 43 31 43  // .E.E.EPA.A.A2C1C
    A490: 31 43 77 43 DC 43 0C 44 C9 44 F2 44 F2 44 69 43  // 1CwC.C.D.D.D.DiC
    A4A0: 5C 43 5C 43 5C 43 5C 43 5C 43 77 43 DC 43 0C 44  // \C\C\C\C\CwC.C.D
    A4B0: C9 44 F7 44 3D 45 F2 44 F2 44 FF FF FF FF FF FF  // .D.D=E.D.D......
    A4C0: 00 00 FF FF 00 00 FF FF 00 00 FF 00 00 00 FF 00  // ................
    A4D0: 00 00 FF 00 00 00 FF 00 00 00 00 00 08 10 00 08  // ................
    A4E0: 10 18 00 08 10 18 54 3F 01 54 3F 02 CD 53 03 AD  // ......T?.T?..S..
    A4F0: 53 03 79 40 03 2D 40 03 55 3F 04 6E 3F 04 7E 3F  // S.y@.-@.U?.n?.~?
    A500: 04 54 3F 03 00 00 00 00 01 47 00 02 01 47 01 02  // .T?......G...G..
    A510: 01 47 02 02 01 47 03 02 01 47 04 02 01 47 05 02  // .G...G...G...G..
    A520: FB 48 00 02 FB 48 01 02 FB 48 02 02 FB 48 03 02  // .H...H...H...H..
    A530: FB 48 04 02 FB 48 05 02 30 49 00 02 30 49 01 02  // .H...H..0I..0I..
    A540: 30 49 02 02 30 49 03 02 30 49 04 02 30 49 05 02  // 0I..0I..0I..0I..
    A550: 47 4B 00 02 47 4B 01 02 47 4B 02 02 47 4B 03 02  // GK..GK..GK..GK..
    A560: 47 4B 04 02 47 4B 05 02 47 4B 00 02 47 4B 01 02  // GK..GK..GK..GK..
    A570: 47 4B 02 02 47 4B 03 02 47 4B 04 02 47 4B 05 02  // GK..GK..GK..GK..
    A580: 32 4A 00 02 32 4A 01 02 32 4A 02 02 32 4A 03 02  // 2J..2J..2J..2J..
    A590: 32 4A 04 02 32 4A 05 02 5C 4A 00 02 5C 4A 01 02  // 2J..2J..\J..\J..
    A5A0: 5C 4A 02 02 5C 4A 03 02 5C 4A 04 02 5C 4A 05 02  // \J..\J..\J..\J..
    A5B0: DF 49 00 02 DF 49 01 02 DF 49 02 02 DF 49 03 02  // .I...I...I...I..
    A5C0: DF 49 04 02 DF 49 05 02 13 4A 00 02 13 4A 01 02  // .I...I...J...J..
    A5D0: 13 4A 02 02 13 4A 03 02 13 4A 04 02 13 4A 05 02  // .J...J...J...J..
    A5E0: 9F 4D 00 00 D2 4D 01 00 D2 4D 02 00 BF 4D 00 00  // .M...M...M...M..
    A5F0: AD 4C 00 02 A6 4A 00 02 A6 4A 01 02 A6 4A 02 02  // .L...J...J...J..
    A600: A6 4A 03 02 A6 4A 04 02 A6 4A 05 02 C5 4C 00 02  // .J...J...J...L..
    A610: 1A 4F 05 00 1A 4F 01 00 1A 4F 00 00 1A 4F 02 00  // .O...O...O...O..
    A620: 5B 4F 00 00 5B 4F 02 00 A0 4F 00 00 30 4C 00 02  // [O..[O...O..0L..
    A630: 30 4C 01 02 30 4C 02 02 30 4C 03 02 30 4C 04 02  // 0L..0L..0L..0L..
    A640: 30 4C 05 02 EC 4D 00 00 14 4E 00 00 95 4E 00 00  // 0L...M...N...N..
    A650: 10 4F 00 00 F4 4A 00 02 F4 4A 01 02 F4 4A 02 02  // .O...J...J...J..
    A660: F4 4A 03 02 F4 4A 04 02 F4 4A 05 02 0F 4F 00 01  // .J...J...J...O..
    A670: 0F 4F 00 01 37 48 00 02 37 48 01 02 37 48 02 02  // .O..7H..7H..7H..
    A680: 37 48 03 02 37 48 04 02 37 48 05 02 34 4E 00 00  // 7H..7H..7H..4N..
    A690: 10 4F 00 00 10 4F 00 00 10 4F 00 00 45 4D 00 00  // .O...O...O..EM..
    A6A0: 5B 49 00 02 5B 49 01 02 5B 49 02 02 5B 49 03 02  // [I..[I..[I..[I..
    A6B0: 5B 49 04 02 5B 49 05 02 8A 49 00 02 8A 49 01 02  // [I..[I...I...I..
    A6C0: 8A 49 02 02 8A 49 03 02 8A 49 04 02 8A 49 05 02  // .I...I...I...I..
    A6D0: C0 49 00 02 C0 49 01 02 C0 49 02 02 C0 49 03 02  // .I...I...I...I..
    A6E0: C0 49 04 02 C0 49 05 02 57 4E 00 00 7A 4E 00 00  // .I...I..WN..zN..
    A6F0: A6 00 01 01 74 B7 C4 B7 1C B8 00 00 F6 D8 54 B8  // ....t.........T.
    A700: 00 00 00 00 00 00 86 B8 86 B9 00 00 C8 B9 36 BF  // ..............6.
    A710: 00 00 00 00 00 00 3C D8 00 00 EC C0 36 C1 AC C1  // ......<.....6...
    A720: 00 00 00 00 22 C2 00 00 00 00 00 00 1A EB 00 00  // ...."...........
    A730: 00 00 00 00 00 00 9A C2 12 C3 86 C3 C4 C3 E4 C4  // ................
    A740: 00 00 00 00 10 C5 00 00 2A C5 F6 C5 B2 C7 10 C8  // ........*.......
    A750: 00 00 00 00 EA C8 70 C9 BC CA 00 00 00 00 6C D2  // ......p.......l.
    A760: 92 D3 00 00 CC D5 00 00 00 00 00 00 36 D6 00 00  // ............6...
    A770: 00 00 00 00 00 00 0A D7 00 00 C6 D8 00 00 00 00  // ................
    A780: 00 00 D4 C0 00 00 7E D7 00 00 C0 DA 3E DF 00 00  // ......~.....>...
    A790: 98 E8 BE EA 00 00 4A 00 01 01 00 00 00 00 00 00  // ......J.........
    A7A0: 78 A7 5C A8 C8 A8 CC AB 58 B4 00 00 00 00 9E AC  // x.\.....X.......
    A7B0: 7A AD 86 AD A2 AD 00 00 4A AE 00 00 40 B4 00 00  // z.......J...@...
    A7C0: 00 00 00 00 00 00 4A B0 98 B1 00 00 00 00 C6 B3  // ......J.........
    A7D0: 06 B4 00 00 00 00 C6 B1 00 00 00 00 00 00 00 00  // ................
    A7E0: E4 00 01 02 4E 0C 80 02 C0 00 90 01 2D 00 20 00  // ....N.......-. .
    A7F0: 40 00 01 00 03 00 00 00 00 00 00 00 02 00 E6 55  // @..............U
    A800: D6 09 80 02 A0 00 E0 01 2D 00 10 00 60 00 0A 00  // ........-...`...
    A810: 02 00 00 00 00 00 08 08 06 00 12 3C A0 0F 20 03  // ...........<.. .
    A820: 00 01 58 02 1C 00 28 00 80 00 01 00 04 00 00 00  // ..X...(.........
    A830: 00 00 00 00 00 00 6A 3C 64 19 00 04 40 01 00 03  // ......j<d...@...
    A840: 26 00 18 00 88 00 03 00 06 00 00 00 00 00 00 00  // &...............
    A850: 06 00 55 3C 30 2A 00 05 08 02 C0 03 28 00 60 00  // ..U<0*......(.`.
    A860: 70 00 01 00 03 00 00 00 00 00 00 00 00 00 E9 3C  // p..............<
    A870: 30 2A 00 05 98 01 00 04 2A 00 30 00 70 00 01 00  // 0*......*.0.p...
    A880: 03 00 00 00 00 00 00 00 00 00 EA 3C 8F 2F 78 05  // ...........<./x.
    A890: D0 01 1A 04 27 00 58 00 90 00 03 00 04 00 00 00  // ....'.X.........
    A8A0: 00 00 00 00 02 00 EB 3C 48 3F 40 06 30 02 B0 04  // .......<H?@.0...
    A8B0: 32 00 40 00 C0 00 01 00 03 00 00 00 00 00 00 00  // 2.@.............
    A8C0: 00 00 EC 3C 6C 00 02 02 03 00 2A 0F 20 4E 00 00  // ...<l.....*. N..
    A8D0: 80 38 01 00 00 00 00 00 40 7E 05 00 00 00 00 00  // .8......@~......
    A8E0: 00 00 00 00 C0 D4 01 00 00 00 00 00 60 EA 00 00  // ............`...
    A8F0: 00 00 C2 03 20 03 B0 04 00 00 00 00 80 38 01 00  // .... ........8..
    A900: 00 00 00 00 00 00 00 00 00 00 00 00 40 9C A3 02  // ............@...
    A910: C0 12 00 00 3F 40 C0 12 10 27 10 27 00 00 00 00  // ....?@...'.'....
    A920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A930: 04 03 02 01 00 00 00 00 00 2A 00 2A 00 00 2A 2A  // .........*.*..**
    A940: 2A 00 00 2A 00 2A 2A 15 00 2A 2A 2A 15 15 15 15  // *..*.**..***....
    A950: 15 3F 15 3F 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F  // .?.?..???..?.???
    A960: 15 3F 3F 3F 00 00 00 05 05 05 08 08 08 0B 0B 0B  // .???............
    A970: 0E 0E 0E 11 11 11 14 14 14 18 18 18 1C 1C 1C 20  // ............... 
    A980: 20 20 24 24 24 28 28 28 2D 2D 2D 32 32 32 38 38  //   $$$(((---22288
    A990: 38 3F 3F 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F  // 8???..?..?..?/.?
    A9A0: 3F 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F  // ?.??./?..?..?..?
    A9B0: 10 00 3F 1F 00 3F 2F 00 3F 3F 00 2F 3F 00 1F 3F  // ..?..?/.??./?..?
    A9C0: 00 10 3F 00 00 3F 00 00 3F 10 00 3F 1F 00 3F 2F  // ..?..?..?..?..?/
    A9D0: 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 1F 1F 3F 27  // .??./?..?..?..?'
    A9E0: 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 3F 3F 1F 37 3F 1F  // .?/.?7.??.??.7?.
    A9F0: 2F 3F 1F 27 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F  // /?.'?..?'.?/.?7.
    AA00: 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 1F 1F 3F 1F 1F  // ??.7?./?.'?..?..
    AA10: 3F 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F  // ?'.?/.?7.??.7?./
    AA20: 3F 1F 27 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F  // ?.'?--?1-?6-?:-?
    AA30: 3F 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F  // ?-??-:?-6?-1?--?
    AA40: 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36 3F  // 1-?6-?:-??-:?-6?
    AA50: 2D 31 3F 2D 2D 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A  // -1?--?--?1-?6-?:
    AA60: 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 00 00 1C 07  // -??-:?-6?-1?....
    AA70: 00 1C 0E 00 1C 15 00 1C 1C 00 1C 1C 00 15 1C 00  // ................
    AA80: 0E 1C 00 07 1C 00 00 1C 07 00 1C 0E 00 1C 15 00  // ................
    AA90: 1C 1C 00 15 1C 00 0E 1C 00 07 1C 00 00 1C 00 00  // ................
    AAA0: 1C 07 00 1C 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E  // ................
    AAB0: 1C 00 07 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C  // ................
    AAC0: 1C 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C  // ................
    AAD0: 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15 1C  // ................
    AAE0: 0E 11 1C 0E 0E 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18  // ................
    AAF0: 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 14 14 1C 16  // ................
    AB00: 14 1C 18 14 1C 1A 14 1C 1C 14 1C 1C 14 1A 1C 14  // ................
    AB10: 18 1C 14 16 1C 14 14 1C 16 14 1C 18 14 1C 1A 14  // ................
    AB20: 1C 1C 14 1A 1C 14 18 1C 14 16 1C 14 14 1C 14 14  // ................
    AB30: 1C 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18  // ................
    AB40: 1C 14 16 1C 00 00 10 04 00 10 08 00 10 0C 00 10  // ................
    AB50: 10 00 10 10 00 0C 10 00 08 10 00 04 10 00 00 10  // ................
    AB60: 04 00 10 08 00 10 0C 00 10 10 00 0C 10 00 08 10  // ................
    AB70: 00 04 10 00 00 10 00 00 10 04 00 10 08 00 10 0C  // ................
    AB80: 00 10 10 00 0C 10 00 08 10 00 04 10 08 08 10 0A  // ................
    AB90: 08 10 0C 08 10 0E 08 10 10 08 10 10 08 0E 10 08  // ................
    ABA0: 0C 10 08 0A 10 08 08 10 0A 08 10 0C 08 10 0E 08  // ................
    ABB0: 10 10 08 0E 10 08 0C 10 08 0A 10 08 08 10 08 08  // ................
    ABC0: 10 0A 08 10 0C 08 10 0E 08 10 10 08 0E 10 08 0C  // ................
    ABD0: 10 08 0A 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10  // ................
    ABE0: 10 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10  // ................
    ABF0: 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 0F 10 0B 0D 10  // ................
    AC00: 0B 0C 10 0B 0B 10 0B 0B 10 0C 0B 10 0D 0B 10 0F  // ................
    AC10: 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 00 00 00 00  // ................
    AC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AC30: 00 00 00 00 D1 00 01 03 D0 1D 56 05 F4 00 00 03  // ..........V.....
    AC40: 16 00 30 00 20 00 03 00 05 00 58 01 C2 00 00 00  // ..0. .....X.....
    AC50: 06 02 00 3C 00 00 20 00 00 00 00 00 1C 3C 01 06  // ...<.. ......<..
    AC60: 00 00 00 00 01 CB C8 00 07 5A 5A 07 7D 03 03 00  // .........ZZ.}...
    AC70: 0B 0A 81 01 34 21 00 00 00 00 00 00 00 00 00 00  // ....4!..........
    AC80: 04 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD00: 00 00 FF 00 00 00 DC 00 01 01 4C 19 4E 19 4F 19  // ..........L.N.O.
    AD10: 4D 19 4C 19 4E 19 4F 19 4D 19 90 00 00 00 00 08  // M.L.N.O.M.......
    AD20: 08 08 08 00 00 50 19 52 19 53 19 51 19 50 19 52  // .....P.R.S.Q.P.R
    AD30: 19 53 19 51 19 91 00 00 00 00 08 08 08 08 00 00  // .S.Q............
    AD40: 54 19 56 19 57 19 55 19 54 19 56 19 57 19 55 19  // T.V.W.U.T.V.W.U.
    AD50: 92 00 00 00 00 08 08 08 08 00 00 58 19 5A 19 5B  // ...........X.Z.[
    AD60: 19 59 19 58 19 5A 19 5B 19 59 19 93 00 00 00 00  // .Y.X.Z.[.Y......
    AD70: 08 08 08 08 00 00 5C 19 5E 19 5F 19 5D 19 5C 19  // ......\.^._.].\.
    AD80: 5E 19 5F 19 5D 19 94 00 00 00 00 08 08 08 08 00  // ^._.]...........
    AD90: 00 60 19 62 19 63 19 61 19 60 19 62 19 63 19 61  // .`.b.c.a.`.b.c.a
    ADA0: 19 95 00 00 00 00 08 08 08 08 00 00 70 19 72 19  // ............p.r.
    ADB0: 73 19 71 19 70 19 72 19 73 19 71 19 96 00 00 00  // s.q.p.r.s.q.....
    ADC0: 00 08 08 08 08 00 00 70 19 72 19 73 19 71 19 70  // .......p.r.s.q.p
    ADD0: 19 72 19 73 19 71 19 97 00 00 00 00 08 08 08 08  // .r.s.q..........
    ADE0: 00 00 0C 00 01 05 E0 FF 07 00 20 00 20 00 1C 00  // .......... . ...
    ADF0: 01 01 6D 19 00 01 6D 19 08 02 6D 19 10 03 6D 19  // ..m...m...m...m.
    AE00: 18 04 6D 19 1A 05 6D 19 1C 06 A8 00 01 01 00 01  // ..m...m.........
    AE10: 02 E6 01 01 02 12 03 01 02 6A 05 01 02 55 07 01  // .........j...U..
    AE20: 02 EA 10 01 06 12 11 01 16 12 13 01 06 6A 14 01  // .............j..
    AE30: 16 6A 16 01 06 55 17 01 16 55 19 01 06 EA 1A 01  // .j...U...U......
    AE40: 16 EA 63 01 02 E9 65 01 16 E9 66 01 0A E9 21 01  // ..c...e...f...!.
    AE50: 0A 12 22 01 0A 6A 23 01 0A 55 24 01 0A EA 43 01  // .."..j#..U$...C.
    AE60: 02 EB 45 01 16 EB 46 01 0A EB 73 01 02 EC 75 01  // ..E...F...s...u.
    AE70: 16 EC 76 01 0A EC D1 01 02 70 D2 01 16 70 D4 01  // ..v......p...p..
    AE80: 0A 70 D7 01 02 71 D8 01 16 71 D9 01 0A 71 E1 01  // .p...q...q...q..
    AE90: 02 72 E2 01 16 72 E4 01 0A 72 E7 01 02 73 E8 01  // .r...r...r...s..
    AEA0: 16 73 E9 01 0A 73 F3 01 02 74 F5 01 16 74 F6 01  // .s...s...t...t..
    AEB0: 0A 74 A3 01 06 01 00 00 00 00 00 42 00 51 00 B3  // .t.........B.Q..
    AEC0: 00 00 00 00 00 42 00 02 00 00 00 13 00 00 80 00  // .....B..........
    AED0: 00 00 00 00 00 00 00 00 00 00 13 00 00 00 FD 00  // ................
    AEE0: 00 00 00 00 00 00 00 00 89 01 00 00 00 00 00 00  // ................
    AEF0: 00 00 00 00 03 02 00 00 01 05 01 00 01 02 03 04  // ................
    AF00: 01 02 05 06 10 30 75 00 7A 00 00 00 00 00 00 00  // .....0u.z.......
    AF10: 00 00 00 00 00 40 9C 00 6C 00 00 00 00 00 00 00  // .....@..l.......
    AF20: 00 00 00 00 00 F8 C1 00 68 00 00 00 00 00 00 00  // ........h.......
    AF30: 00 00 00 00 00 AF FF 00 5E 00 00 00 00 00 00 00  // ........^.......
    AF40: 00 00 00 00 00 80 38 01 4E 00 00 00 00 00 00 00  // ......8.N.......
    AF50: 00 00 00 00 00 30 75 00 00 00 00 00 00 00 00 00  // .....0u.........
    AF60: 00 00 00 00 00 03 18 01 00 00 00 00 80 00 00 00  // ................
    AF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 05  // ................
    AF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AF90: 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 00  // ................
    AFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16  // ................
    AFB0: 00 00 00 00 00 00 00 00 00 13 01 3E 01 6E 01 00  // ...........>.n..
    AFC0: 00 00 00 00 00 00 03 40 9C 00 40 9C 00 59 D8 00  // .......@..@..Y..
    AFD0: 59 D8 00 90 5F 01 90 5F 01 03 7A 00 00 6C 00 01  // Y..._.._..z..l..
    AFE0: 4E 00 02 06 02 02 02 02 00 00 01 01 00 00 01 01  // N...............
    AFF0: 00 05 40 9C 00 30 75 00 00 E1 00 80 BB 00 40 19  // ..@..0u.......@.
    B000: 01 91 F4 00 E2 4A 01 0E 28 01 00 77 01 E2 4A 01  // .....J..(..w..J.
    B010: 05 7A 00 00 6C 00 01 68 00 02 5E 00 03 4E 00 04  // .z..l..h..^..N..
    B020: 00 05 7A 00 30 75 00 6C 00 40 9C 00 68 00 40 9C  // ..z.0u.l.@..h.@.
    B030: 00 5E 00 40 9C 00 4E 00 40 9C 00 05 30 75 00 7A  // .^.@..N.@...0u.z
    B040: 00 40 9C 00 6C 00 F8 C1 00 68 00 AF FF 00 5E 00  // .@..l....h....^.
    B050: 80 38 01 4E 00 00 00 00 00 00 00 00 00 00 00 00  // .8.N............
    B060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B0B0: 00 00 4D 01 01 03 0B 00 38 00 00 00 BD 00 00 00  // ..M.....8.......
    B0C0: 12 00 2C 01 03 01 00 00 02 00 0C 00 14 31 00 11  // ..,..........1..
    B0D0: 1E 21 00 00 08 00 0C 00 0C 31 00 11 1E 22 00 00  // .!.......1..."..
    B0E0: 01 00 0A 00 05 31 00 11 15 21 03 00 00 00 14 31  // .....1...!.....1
    B0F0: 54 00 5A 00 00 00 0C 31 77 00 7D 00 00 00 05 31  // T.Z....1w.}....1
    B100: 9A 00 A0 00 00 00 01 1E 21 00 00 00 04 14 01 00  // ........!.......
    B110: 10 01 00 00 02 00 00 00 00 00 00 00 00 00 00 00  // ................
    B120: 01 04 90 00 02 04 01 00 FF 01 1E 22 00 00 00 04  // ..........."....
    B130: 14 01 00 10 02 00 00 08 00 00 00 00 00 00 00 00  // ................
    B140: 00 00 00 01 04 91 00 02 04 02 00 FF 01 15 21 00  // ..............!.
    B150: 00 00 04 14 01 00 00 01 00 00 01 00 00 00 00 00  // ................
    B160: 00 00 00 00 00 00 01 04 97 00 02 04 FF 00 FF 05  // ................
    B170: 00 00 00 1E 21 E9 00 EF 00 00 00 23 22 F4 00 FA  // ....!......#"...
    B180: 00 00 00 1E 22 03 01 09 01 00 00 23 21 0E 01 14  // ...."......#!...
    B190: 01 00 00 15 21 1D 01 00 00 00 00 01 00 11 01 14  // ....!...........
    B1A0: 31 14 04 03 00 FF 01 1E 21 01 15 31 01 04 00 00  // 1.......!..1....
    B1B0: 02 04 00 00 FF 01 00 11 01 0C 31 14 04 03 00 FF  // ..........1.....
    B1C0: 01 1E 22 01 15 32 01 04 00 00 02 04 00 00 FF 01  // .."..2..........
    B1D0: 00 11 01 05 31 01 04 00 00 02 04 00 00 FF 01 00  // ....1...........
    B1E0: 00 00 03 71 00 00 38 01 00 00 10 0A 01 02 FF 00  // ...q..8.........
    B1F0: 00 00 00 00 11 0A 90 91 97 00 00 00 00 00 FF 00  // ................
    B200: 2D 00 01 01 01 03 02 38 00 06 10 00 00 03 38 00  // -......8......8.
    B210: 02 39 00 09 10 00 01 83 02 38 00 06 10 00 00 03  // .9.......8......
    B220: 38 00 08 20 00 00 03 39 00 09 26 00 00 00 00 02  // 8.. ...9..&.....
    B230: 01 08 20 4E 00 00 40 7E 05 00 80 38 01 00 00 00  // .. N..@~...8....
    B240: 00 00 30 75 00 00 01 00 00 00 40 9C 00 00 02 00  // ..0u......@.....
    B250: 00 00 60 EA 00 00 03 00 00 00 60 EA 00 00 00 00  // ..`.......`.....
    B260: 00 00 0A 00 00 00 13 00 02 00 00 00 00 00 C8 00  // ................
    B270: 69 01 00 00 00 00 07 00 00 00 00 00 00 00 00 00  // i...............
    B280: 00 00 00 00 74 01 00 00 00 01 00 00 00 00 00 00  // ....t...........
    B290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B300: 00 00 30 75 00 00 00 00 7A 00 40 9C 00 00 01 00  // ..0u....z.@.....
    B310: 6C 00 F8 C1 00 00 02 00 68 00 AF FF 00 00 03 00  // l.......h.......
    B320: 5E 00 80 38 01 00 04 00 4E 00 DC 19 00 00 00 00  // ^..8....N.......
    B330: 00 00 00 00 00 00 4C 13 00 00 D0 07 00 00 77 01  // ......L.......w.
    B340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B360: 00 00 00 00 00 00 00 00 00 00 00 03 03 00 00 00  // ................
    B370: 00 00 80 38 01 00 14 82 00 00 14 82 00 00 14 82  // ...8............
    B380: 00 00 22 01 01 0D A0 86 01 00 40 9C 00 00 40 9C  // ..".......@...@.
    B390: 00 00 40 9C 00 00 6C 00 7A 00 FF 00 FF 00 04 00  // ..@...l.z.......
    B3A0: 00 00 8C 00 01 01 00 00 00 00 00 00 00 00 00 00  // ................
    B3B0: 00 00 00 00 00 00 02 00 10 01 14 31 00 00 00 00  // ...........1....
    B3C0: E4 00 00 00 00 00 08 00 10 02 0C 31 01 01 00 00  // ...........1....
    B3D0: E4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B410: 00 00 00 00 00 00 01 00 00 01 05 31 02 02 00 00  // ...........1....
    B420: E4 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    B430: 03 01 FF FF FF 00 00 00 E4 0C 04 01 00 00 FF FF  // ................
    B440: FF 00 00 00 E4 0C 05 01 00 00 FF FF FF 00 64 00  // ..............d.
    B450: A0 0F 06 01 00 00 FF FF FF 00 77 01 45 0C 07 12  // ..........w.E...
    B460: 00 00 FF FF FF 00 77 01 B8 0B 0B 12 00 00 39 00  // ......w.......9.
    B470: 02 03 14 00 00 00 61 37 00 00 53 02 02 02 00 00  // ......a7..S.....
    B480: 00 00 15 21 34 00 18 00 00 FF FF 00 1E 21 34 00  // ...!4........!4.
    B490: 4C 00 03 FF FF 00 1E 22 34 00 4C 04 09 FF FF 00  // L......"4.L.....
    B4A0: FF FF 00 06 01 06 FF 00 18 00 02 01 02 00 08 00  // ................
    B4B0: 80 00 00 02 00 04 00 08 40 00 01 00 10 00 FF FF  // ........@.......
    B4C0: 1B 03 03 02 12 01 12 00 46 00 55 02 61 02 00 00  // ........F.U.a...
    B4D0: 00 00 80 19 00 1F 81 19 00 1F 82 19 00 1F 83 19  // ................
    B4E0: 00 1F 8B 19 00 10 8F 19 00 10 84 19 08 17 C0 19  // ................
    B4F0: 00 1F C1 19 00 1F C2 19 00 1F C3 19 00 1F C6 19  // ................
    B500: 00 1F C7 19 00 1F 32 00 FF FF 02 0F 77 77 F0 0F  // ......2.....ww..
    B510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0E 80  // ................
    B520: 08 08 01 00 20 84 C4 06 01 00 81 0A 01 00 01 00  // .... ...........
    B530: 0E 00 02 00 00 00 00 00 00 00 74 40 03 0F 77 77  // ..........t@..ww
    B540: F0 0F 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B550: 0E 80 08 08 01 00 20 84 C4 06 01 00 81 0A 01 00  // ...... .........
    B560: 01 00 0E 00 02 00 00 00 00 00 00 00 E4 57 03 0F  // .............W..
    B570: 77 77 F0 0F 00 00 00 00 00 00 00 0C 00 00 00 00  // ww..............
    B580: 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00 9F 0A  // ........ .......
    B590: 01 00 01 00 0E 00 02 00 00 00 00 00 00 00 FF FF  // ................
    B5A0: 03 0F 55 55 A0 0A 00 00 00 00 00 00 00 1C 00 00  // ..UU............
    B5B0: 00 00 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00  // .......... .....
    B5C0: 9F 0A 01 00 01 00 0E 00 02 00 00 00 00 00 00 00  // ................
    B5D0: 00 00 00 0F 41 01 80 19 69 00 01 04 10 40 00 00  // ....A...i....@..
    B5E0: 00 00 00 02 08 20 80 00 00 00 50 05 04 10 40 00  // ..... ....P...@.
    B5F0: 01 00 00 A0 0A 08 20 80 00 02 00 00 F0 0F 10 40  // ...... ........@
    B600: 00 01 04 11 11 00 00 20 80 00 02 08 11 11 50 05  // ....... ......P.
    B610: 40 00 01 04 10 11 11 A0 0A 80 00 02 08 20 22 22  // @............ ""
    B620: 00 00 00 01 00 00 00 22 22 50 15 00 00 04 10 40  // .......""P.....@
    B630: 22 22 50 05 00 02 08 20 80 33 33 00 00 00 00 81  // ""P.... .33.....
    B640: 19 0F 00 FF FF FF FF FF 00 00 00 00 00 00 82 19  // ................
    B650: 2A 00 B9 F6 FA C9 FF 00 00 00 00 06 08 00 00 00  // *...............
    B660: 00 00 00 14 40 01 05 22 00 00 00 00 04 00 00 00  // ....@.."........
    B670: 14 00 00 00 00 08 00 00 83 19 0F 00 FF FF FF FF  // ................
    B680: FF 80 00 00 00 00 00 8B 19 0F 00 FF FF FF FF FF  // ................
    B690: 00 00 00 00 00 00 8F 19 0F 00 FF FF FF FF FF 04  // ................
    B6A0: 80 00 00 00 00 84 19 0F 00 FF FF FF FF FF 00 08  // ................
    B6B0: 08 00 00 00 C0 19 0F 00 FF FF FF FF FF 01 00 20  // ............... 
    B6C0: 80 00 00 C1 19 0F 00 FF FF FF FF FF C4 06 01 00  // ................
    B6D0: 00 00 C2 19 0F 00 FF FF FF FF FF 81 0A 01 00 00  // ................
    B6E0: 00 C3 19 21 00 01 04 00 40 00 01 00 0A 00 02 00  // ...!....@.......
    B6F0: 10 01 00 01 00 0C 00 FC FB EF BE FF 01 00 0E 00  // ................
    B700: 00 00 C6 19 0F 00 FF FF FF FF FF 02 00 00 00 00  // ................
    B710: 00 00 00 00 00 85 19 00 1F 86 19 00 1F 87 19 10  // ................
    B720: 1F 0E 00 48 3F 00 0F 00 80 28 00 5D 00 12 00 10  // ...H?....(.]....
    B730: 00 78 69 00 0F 00 00 1B 00 5D 00 1A 00 00 00 90  // .xi......]......
    B740: 7E 00 0F 68 66 20 00 5D 00 0A 00 00 00 F0 D2 00  // ~..hf .]........
    B750: 0F 00 00 36 00 5D 00 1A 00 00 00 35 0C 02 0F 00  // ...6.].....5....
    B760: 00 50 00 1D 00 85 10 00 C0 6A 18 02 0F 00 00 28  // .P.......j.....(
    B770: 00 1D 00 32 10 00 A0 D4 30 02 0F 00 00 14 00 1D  // ...2....0.......
    B780: 00 0A 10 00 80 FF FF 02 0F 00 00 14 00 1D 00 2A  // ...............*
    B790: 10 00 01 A0 0F 03 0F 00 00 50 00 1D 00 85 10 00  // .........P......
    B7A0: C0 4C 1D 03 0F 00 00 14 00 1D 00 0A 10 00 80 74  // .L.............t
    B7B0: 40 03 0F 00 00 14 00 1D 00 0A 10 00 01 E4 57 03  // @.............W.
    B7C0: 0F 00 00 14 00 5D 00 00 10 00 01 FF FF 03 0F 00  // .....]..........
    B7D0: 00 1E 00 5D 00 11 10 00 02 00 00 00 50 00 01 01  // ...]........P...
    B7E0: 00 08 52 47 52 02 02 65 02 07 52 0D 55 00 02 52  // ..RGR..e..R.U..R
    B7F0: 0D 52 23 2C 25 02 01 3D 25 02 02 45 13 00 51 02  // .R#,%..=%..E..Q.
    B800: 52 05 66 04 02 8C 02 2E 00 3D 8D 02 00 00 44 3C  // R.f......=....D<
    B810: 00 02 0D 02 01 00 52 43 02 01 02 00 0E E5 02 08  // ......RC........
    B820: 52 0A 52 4B 0D 65 D0 05 02 50 01 5B 57 00 01 02  // R.RK.e...P.[W...
    B830: 00 00 37 00 00 52 14 02 08 00 0D 1A 32 08 00 0B  // ..7..R......2...
    B840: 1A 02 88 00 0E 1A 32 88 00 0C 1A 03 00 46 04 1A  // ......2......F..
    B850: 09 05 46 FF FF FF 00 56 00 40 03 20 40 01 1A 09  // ..F....V.@. @...
    B860: 25 40 03 75 02 46 40 03 18 40 5C 1B 2D 02 46 40  // %@.u.F@..@\.-.F@
    B870: 27 00 46 06 1A 2D 08 40 5C 1B 02 0A 01 41 02 8A  // '.F..-.@\....A..
    B880: 01 40 5B 00 37 00 01 01 00 00 37 00 00 01 05 00  // .@[.7.....7.....
    B890: 0B 29 00 20 0F 01 05 CC 0B 01 00 00 00 5C 05 D3  // .). .........\..
    B8A0: 0B 10 00 E0 FF E0 1B 32 00 66 1E 03 24 41 38 00  // .......2.f..$A8.
    B8B0: 09 25 41 3C 5C 22 47 18 C3 41 5B 00 32 00 01 01  // .%A<\"G..A[.2...
    B8C0: 00 00 37 00 00 54 20 24 15 56 00 41 03 88 41 09  // ..7..T $.V.A..A.
    B8D0: 08 01 02 01 0B 41 01 3A C9 00 41 15 05 41 08 01  // .....A.:..A..A..
    B8E0: 02 C4 00 41 54 20 2B 08 0D 25 24 15 03 5B FF 00  // ...AT +..%$..[..
    B8F0: 02 01 00 04 37 00 00 66 0C 03 0C 41 00 00 2D 0A  // ....7..f...A..-.
    B900: 41 42 2D 0D 42 04 00 3D 24 00 03 00 44 30 00 2D  // AB-.B..=$...D0.-
    B910: 0D 42 04 00 3E 0A 42 41 44 FB 00 43 19 00 56 00  // .B..>.BAD..C..V.
    B920: 43 03 A4 41 02 00 03 F2 41 41 03 0C 41 00 00 3E  // C..A....AA..A..>
    B930: 0D 41 00 00 44 FB 00 3E 0D 41 45 19 49 6B 00 3E  // .A..D..>.AE.Ik.>
    B940: E5 41 10 46 5F 00 1B 3D 41 01 43 6B 00 09 E5 41  // .A.F_..=A.Ck...A
    B950: 03 15 3D 41 02 2D E5 41 0C 03 3A 43 41 54 00 00  // ..=A.-.A..:CAT..
    B960: 00 33 0D 41 01 00 01 0A 00 00 41 0D 02 01 00 44  // .3.A......A....D
    B970: 2D 0D 41 02 00 01 0A 00 00 41 03 32 43 41 4B E5  // -.A......A.2CAK.
    B980: 00 01 49 D7 00 07 02 01 00 45 2D 0D 41 01 00 01  // ..I......E-.A...
    B990: 0A 00 00 41 4A 02 01 00 44 44 B9 00 03 29 43 00  // ...AJ...DD...)C.
    B9A0: 0E A2 00 44 43 C1 00 03 29 43 00 08 A2 00 45 33  // ...DC...)C....E3
    B9B0: 0D 41 03 00 01 0A 00 00 41 03 3A 43 41 07 02 01  // .A......A.:CA...
    B9C0: 00 45 43 FA 00 0D 02 01 00 44 33 0D 41 01 00 01  // .EC......D3.A...
    B9D0: 0A 00 00 41 3D A5 00 01 44 F5 00 07 02 01 00 45  // ...A=...D......E
    B9E0: 43 FA 00 0D 02 01 00 44 5B 55 20 00 5B 00 41 00  // C......D[U .[.A.
    B9F0: 01 01 00 04 02 01 01 00 02 E5 01 02 52 3C 37 00  // ............R<7.
    BA00: 00 01 05 82 00 90 00 50 C0 4A 25 83 00 01 44 13  // .......P.J%...D.
    BA10: 00 01 05 82 00 8C 00 50 C0 01 39 83 00 01 01 05  // .......P..9.....
    BA20: 82 00 90 00 50 C0 4A 25 83 00 01 44 30 00 5B 00  // ....P.J%...D0.[.
    BA30: 6E 05 01 06 00 00 37 00 00 3D 25 02 08 49 31 02  // n.....7..=%..I1.
    BA40: 3D 05 00 00 00 00 00 44 1E 02 4A 25 07 17 02 44  // =......D..J%...D
    BA50: 3E 00 4A 25 1B 17 02 44 3E 00 4A 25 2F 17 02 44  // >.J%...D>.J%/..D
    BA60: 3E 00 01 25 3C 01 81 51 01 07 25 3C 01 FE 54 20  // >..%<..Q..%<..T 
    BA70: 41 18 54 20 1F 03 02 01 01 00 02 05 00 20 CB 00  // A.T ......... ..
    BA80: 00 4A 25 47 18 10 44 69 00 02 05 00 6E 01 03 00  // .J%G..Di....n...
    BA90: 52 13 02 05 00 40 9C 00 00 52 3C 3C F9 24 01 00  // R....@...R<<.$..
    BAA0: 44 C0 00 4A A5 24 01 10 44 73 00 07 25 15 01 FE  // D..J.$..Ds..%...
    BAB0: 03 00 40 24 01 03 F9 40 00 3E 25 40 00 49 94 00  // ..@$...@.>%@.I..
    BAC0: 03 25 40 68 01 02 24 01 40 4A A5 24 01 10 44 99  // .%@h..$.@J.$..D.
    BAD0: 00 4A A5 24 01 08 44 A1 00 4A 25 47 18 10 49 C0  // .J.$..D..J%G..I.
    BAE0: 00 02 01 02 00 02 0D 00 6F 01 52 13 02 01 00 02  // ........o.R.....
    BAF0: 55 38 00 20 05 00 50 C3 00 00 03 02 46 40 20 05  // U8. ..P.....F@ .
    BB00: 00 05 00 00 00 66 1E 56 00 41 03 0C 41 10 01 21  // .....f.V.A..A..!
    BB10: 02 40 41 27 05 40 14 00 00 00 33 02 46 40 01 02  // .@A'.@....3.F@..
    BB20: 42 01 46 01 02 46 01 46 03 0C 41 10 01 3E 0D 41  // B.F..F.F..A..>.A
    BB30: 00 00 44 24 01 01 A5 15 01 01 01 05 13 01 00 0E  // ..D$............
    BB40: 27 07 01 02 14 01 46 0D 25 15 01 01 4A 65 15 01  // '.....F.%...Je..
    BB50: 02 44 1C 01 55 38 03 56 00 46 01 05 82 00 C8 01  // .D..U8.V.F......
    BB60: 50 C0 03 10 41 83 00 09 0D 41 80 03 4C 65 41 01  // P...A....A..LeA.
    BB70: 44 66 01 0E E5 03 01 03 0D 46 40 9C 4C 25 41 80  // Df.......F@.L%A.
    BB80: 49 58 01 03 0D 46 30 75 4C 65 41 02 44 7F 01 1B  // IX...F0uLeA.D...
    BB90: 0D 46 01 43 7F 01 01 05 82 00 18 01 50 C0 4A 25  // .F.C........P.J%
    BBA0: 83 00 20 44 7F 01 0E E5 03 01 03 0D 46 10 27 4A  // .. D........F.'J
    BBB0: 25 47 18 10 44 C4 01 3D 05 01 40 9C 00 00 46 C4  // %G..D..=..@...F.
    BBC0: 01 0E E5 03 02 66 FF 2D 0D 42 5F 05 3D 04 01 00  // .....f.-.B_.=...
    BBD0: 00 47 AC 01 2D 0D 42 05 00 43 9C 01 02 04 01 00  // .G..-.B..C......
    BBE0: 00 02 24 03 04 00 3D 02 01 46 49 C4 01 0E E5 03  // ..$...=..FI.....
    BBF0: 04 43 D2 01 4B E5 03 01 44 D2 01 02 0D 00 6D 01  // .C..K...D.....m.
    BC00: 52 13 02 01 00 01 52 3C 02 01 02 00 55 38 02 3C  // R.....R<....U8.<
    BC10: 39 24 01 00 44 FC 01 4A A5 24 01 08 44 E7 01 01  // 9$..D..J.$..D...
    BC20: 39 24 01 00 4A A5 24 01 08 44 F4 01 4B E5 03 02  // 9$..J.$..D..K...
    BC30: 44 19 02 02 01 02 01 4B E5 03 04 49 19 02 02 A1  // D......K...I....
    BC40: 00 03 02 0D 00 6C 01 52 13 02 01 00 02 5B 0D 25  // .....l.R.....[.%
    BC50: 3C 01 01 0D 25 41 18 01 4A 65 41 18 01 44 28 02  // <...%A..JeA..D(.
    BC60: 5B 4B 05 00 FF FF FF 00 44 56 02 3D 65 02 24 49  // [K......DV.=e.$I
    BC70: 46 02 02 A5 02 00 3D 25 02 02 46 C1 02 52 24 4B  // F.....=%..F..R$K
    BC80: E5 02 01 44 C5 02 3D E5 00 01 46 6E 02 03 01 46  // ...D..=...Fn...F
    BC90: 00 02 39 00 00 55 28 00 52 23 02 02 00 46 3D 25  // ..9..U(.R#...F=%
    BCA0: 02 02 44 89 02 3A 14 00 3D 25 02 00 44 89 02 3A  // ..D..:..=%..D..:
    BCB0: 28 00 3D 25 02 01 49 2C 05 54 00 06 17 07 65 04  // (.=%..I,.T....e.
    BCC0: 17 EF 54 00 05 17 54 00 03 17 07 25 07 17 F7 0D  // ..T...T....%....
    BCD0: 25 07 17 01 51 32 07 25 07 17 7F 51 32 0D 25 07  // %...Q2.%...Q2.%.
    BCE0: 17 02 51 C8 4B 05 00 FF FF FF 00 49 C1 02 43 2C  // ..Q.K......I..C,
    BCF0: 05 03 0A 41 48 3D E5 00 01 46 F6 02 03 01 46 00  // ...AH=...F....F.
    BD00: 02 39 00 00 0E 25 00 80 52 14 02 02 00 46 4B E5  // .9...%..R....FK.
    BD10: 02 02 44 F0 02 01 05 CC 00 01 03 01 00 43 F6 02  // ..D..........C..
    BD20: 07 4D CC 00 FC FE 4B E5 02 01 44 E7 03 03 0A 48  // .M....K...D....H
    BD30: 41 66 FF 2D 0D 42 33 05 3D 0C 01 00 00 47 18 03  // Af.-.B3.=....G..
    BD40: 2D 0D 42 06 00 43 08 03 3D A5 02 03 49 43 03 03  // -.B..C..=...IC..
    BD50: 01 46 00 56 38 46 3E 05 46 E4 57 00 00 47 43 03  // .F.V8F>.F.W..GC.
    BD60: 3D 0D 01 1D 00 46 43 03 01 05 08 17 44 B9 DE 19  // =....FC.....D...
    BD70: 43 49 03 01 04 08 17 02 00 01 65 00 17 20 4B E5  // CI........e.. K.
    BD80: 02 10 44 5D 03 01 A5 07 17 00 43 63 03 5C A5 07  // ..D]......Cc.\..
    BD90: 17 F8 01 0D 25 0C 17 01 4B E5 02 02 44 7A 03 01  // ....%...K...Dz..
    BDA0: 05 02 17 7E 7E 7E 00 43 98 03 01 39 00 17 01 01  // ...~~~.C...9....
    BDB0: 89 01 17 01 07 25 01 17 F0 01 B1 02 17 01 01 39  // .....%.........9
    BDC0: 02 17 03 01 71 02 17 01 51 64 54 20 0C 17 07 25  // ....q...QdT ...%
    BDD0: 07 17 FD 51 32 0D 25 07 17 80 50 02 07 25 07 17  // ...Q2.%...P..%..
    BDE0: FE 51 0A 4A A5 07 17 10 44 B1 03 4A A5 07 17 20  // .Q.J....D..J... 
    BDF0: 44 BB 03 4B E5 02 02 49 E2 03 01 31 01 17 03 3D  // D..K...I...1...=
    BE00: 0D 03 00 00 44 E2 03 01 09 05 17 03 5C A5 05 17  // ....D.......\...
    BE10: FC 01 0D 25 07 17 08 3A 00 00 3D E5 00 01 46 2C  // ...%...:..=...F,
    BE20: 05 03 01 46 00 56 38 46 56 00 41 03 39 41 02 09  // ...F.V8FV.A.9A..
    BE30: 25 41 0C 1B 25 41 01 66 FF 2D 0D 42 57 05 2D 0A  // %A..%A.f.-.BW.-.
    BE40: 42 41 03 24 41 01 00 21 02 46 41 03 24 41 00 00  // BA.$A..!.FA.$A..
    BE50: 27 02 40 41 03 05 41 00 E1 F5 05 27 02 41 40 3E  // '.@A..A....'.A@>
    BE60: 05 40 00 00 01 00 45 3E 04 03 0D 40 FF FF 02 39  // .@....E>...@...9
    BE70: 00 00 52 14 01 0A 30 1B 40 3A 00 00 55 00 03 02  // ..R...0.@:..U...
    BE80: 39 03 00 14 0D 03 02 3D A5 02 00 49 B3 04 03 09  // 9......=...I....
    BE90: 48 03 21 05 46 50 C3 00 00 03 02 46 40 3C 02 41  // H.!.FP.....F@<.A
    BEA0: 01 40 49 7D 04 4A 25 40 01 10 49 2C 05 3A 00 00  // .@I}.J%@..I,.:..
    BEB0: 55 28 00 52 23 03 09 48 03 07 25 40 01 EF 01 02  // U(.R#..H..%@....
    BEC0: 41 01 46 66 1E 03 0C 41 10 01 3E 0D 41 00 00 49  // A.Ff...A..>.A..I
    BED0: AB 04 5C 25 40 01 DF 10 43 2C 05 0D 25 40 01 30  // ..\%@...C,..%@.0
    BEE0: 43 2C 05 03 09 48 03 03 39 46 02 09 25 46 0C 15  // C,...H..9F..%F..
    BEF0: 25 46 02 0F 25 46 01 02 A1 02 02 2C A5 02 01 3D  // %F..%F.....,...=
    BF00: 25 02 02 49 D9 04 55 30 02 4B E5 02 01 49 F9 04  // %..I..U0.K...I..
    BF10: 3C 31 40 01 02 49 F4 04 03 21 48 02 3C 22 38 01  // <1@..I...!H.<"8.
    BF20: 46 44 2C 05 55 28 00 52 23 03 21 48 02 07 25 38  // FD,.U(.R#.!H..%8
    BF30: 01 FE 03 09 48 03 01 31 40 01 02 03 21 48 02 01  // ....H..1@...!H..
    BF40: 22 38 01 46 4B E5 02 02 44 2C 05 3A 00 00 03 21  // "8.FK...D,.:...!
    BF50: 43 00 0D 22 C1 00 44 0D 62 C1 00 44 3A 00 00 5B  // C.."..D.b..D:..[
    BF60: 7A 3B 00 1D 00 44 B5 DE 9D 22 00 44 B6 DE 9D 2D  // z;...D...".D...-
    BF70: 00 44 B7 DE 9D 3B 00 44 65 DE 9D 45 00 44 66 DE  // .D...;.De..E.Df.
    BF80: 9D FF FF 44 67 DE 9D 01 01 05 04 03 02 02 01 10  // ...Dg...........
    BF90: 27 00 00 0A 30 75 00 00 02 40 9C 00 00 03 9E 01  // '...0u...@......
    BFA0: 02 01 00 00 37 00 00 3D 65 00 07 44 99 00 56 00  // ....7..=e..D..V.
    BFB0: 41 03 21 41 00 15 25 41 02 03 0A 48 41 3D 65 00  // A.!A..%A...HA=e.
    BFC0: 01 44 8C 00 54 20 61 17 3C E5 62 17 30 49 2A 00  // .D..T a.<.b.0I*.
    BFD0: 03 21 48 00 01 0D FA 02 02 00 52 14 01 25 BE 1B  // .!H.......R..%..
    BFE0: 02 01 25 91 1A CC 01 A5 8D 1A 20 0D 25 7D 1A 01  // ..%....... .%}..
    BFF0: 0D 25 34 1B 01 01 25 3A 1B 11 01 0D 33 1B FF 7F  // .%4...%:....3...
    C000: 01 05 B3 1B 01 01 04 10 0D A5 B6 1B 01 01 05 31  // ...............1
    C010: 1B 00 08 00 04 01 25 C5 1B 04 01 0D 86 1B 04 00  // ......%.........
    C020: 01 0D E7 1B 01 00 3A 00 00 5B 54 08 60 17 0D 25  // ......:..[T.`..%
    C030: 61 17 01 3A 00 00 5B 01 05 1A 03 86 61 18 06 01  // a..:..[.....a...
    C040: 05 1D 03 86 61 18 06 01 05 11 03 06 C0 2B 00 5C  // ....a........+.\
    C050: 05 F6 02 FF 08 FF 9F 04 F4 00 20 01 05 F9 02 61  // .......... ....a
    C060: 51 02 00 01 05 14 03 00 90 00 10 01 A5 F8 02 04  // Q...............
    C070: 5C 65 07 17 E7 08 5C 65 1B 17 E7 08 0D 65 24 17  // \e....\e.....e$.
    C080: 01 01 05 3B 01 30 02 12 00 01 05 30 01 80 BB 10  // ...;.0.....0....
    C090: 00 01 8D BA 17 30 00 01 25 B9 17 01 01 05 31 01  // .....0..%.....1.
    C0A0: 3C 00 01 08 01 65 D4 00 02 01 0D FC 00 00 01 01  // <....e..........
    C0B0: 05 DC 00 13 00 19 00 01 25 E0 00 2F 01 0D D8 00  // ........%../....
    C0C0: 01 00 01 05 E4 00 44 B7 1E 9D 01 05 DD 00 12 00  // ......D.........
    C0D0: 19 00 01 25 E1 00 2A 01 0D D9 00 01 00 01 05 E5  // ...%..*.........
    C0E0: 00 44 B7 1E 9D 01 05 0A 19 0F 00 00 00 0D E5 CB  // .D..............
    C0F0: 05 10 01 05 38 18 00 00 00 30 54 20 78 17 4A 25  // ....8....0T x.J%
    C100: 7E 17 01 49 60 01 01 05 7D 17 00 20 00 00 01 05  // ~..I`...}.. ....
    C110: 7C 17 FF 10 00 10 0D 25 78 17 01 02 8D 00 00 07  // |......%x.......
    C120: 52 18 55 00 00 52 4E 66 16 03 0C 41 04 00 4C 0D  // R.U..RNf...A..L.
    C130: 41 02 00 44 88 00 0D A5 C9 05 04 5B 17 00 01 01  // A..D.......[....
    C140: 00 00 37 00 00 01 05 82 00 00 00 20 C0 07 A5 83  // ..7........ ....
    C150: 00 FC 5B 00 49 00 01 02 00 04 37 00 00 42 21 00  // ..[.I.....7..B!.
    C160: 63 6D 1F 00 63 6C 22 00 63 6F 25 00 63 6E 28 00  // cm..cl".co%.cn(.
    C170: 5A 5A 5B 43 28 00 43 28 00 43 28 00 56 00 41 03  // ZZ[C(.C(.C(.V.A.
    C180: 31 41 00 01 02 BD 00 41 56 00 41 03 09 41 00 01  // 1A.....AV.A..A..
    C190: 02 B5 00 41 3C 25 B6 00 00 44 40 00 5B 00 76 00  // ...A<%...D@.[.v.
    C1A0: 01 02 00 04 66 FF 56 08 47 2D 0D 42 50 00 03 21  // ....f.V.G-.BP..!
    C1B0: 47 00 09 25 47 F0 42 22 47 63 00 37 00 63 40 2A  // G..%G.B"Gc.7.c@*
    C1C0: 00 63 80 32 00 5A 5A 5B 2D 0D 42 1A 00 43 37 00  // .c.2.ZZ[-.B..C7.
    C1D0: 2D 0D 42 0E 00 03 21 47 00 09 25 47 07 2D 0A 42  // -.B...!G..%G.-.B
    C1E0: 47 2D 0A 42 47 03 0C 48 00 00 5B 7A 26 00 00 00  // G-.BG..H..[z&...
    C1F0: 00 03 00 26 00 29 00 2C 00 2F 00 32 00 00 02 00  // ...&.).,./.2....
    C200: 2C 00 2D 00 2E 00 2F 00 00 00 01 00 07 00 08 00  // ,.-.../.........
    C210: 0B 00 0C 00 76 00 01 03 00 04 37 00 00 03 88 41  // ....v.....7....A
    C220: E4 19 03 00 46 F5 19 03 10 40 F7 19 0D 25 E4 19  // ....F....@...%..
    C230: 01 54 20 EE 19 54 08 F4 19 01 25 F6 19 01 01 A5  // .T ..T....%.....
    C240: F7 19 07 54 20 F5 19 50 05 54 00 F5 19 01 0D F4  // ...T ..P.T......
    C250: 19 E6 01 51 C8 0D 65 F7 19 01 51 64 03 E0 40 F8  // ...Q..e...Qd..@.
    C260: 19 09 E5 40 0E 54 08 F6 19 01 1A E4 19 41 01 02  // ...@.T.......A..
    C270: F5 19 46 01 4A F7 19 40 3E E5 40 00 44 6F 00 03  // ..F.J..@>.@.Do..
    C280: E5 40 02 5C 3A C9 05 FC 40 5B 77 00 01 01 00 04  // .@.\:...@[w.....
    C290: 37 00 00 3D E5 00 01 49 42 00 0D 25 28 01 01 07  // 7..=...IB..%(...
    C2A0: 25 E4 19 FD 0D 25 E4 19 01 0D 25 F3 19 01 54 20  // %....%....%...T 
    C2B0: F5 19 51 14 54 00 F5 19 51 02 54 08 F4 19 54 00  // ..Q.T...Q.T...T.
    C2C0: F3 19 54 00 EC 19 0D 25 E4 19 02 5B 0D 05 F5 19  // ..T....%...[....
    C2D0: 00 01 01 01 0D 25 F5 19 01 07 25 E4 19 FC 54 08  // .....%....%...T.
    C2E0: F4 19 0D 0D F3 19 01 07 54 20 28 01 3D E5 00 07  // ........T (.=...
    C2F0: 49 76 00 07 25 FE 19 FB 01 05 FD 19 02 20 20 00  // Iv..%........  .
    C300: 5B 00 78 00 01 01 00 00 37 00 00 52 14 0D A5 51  // [.x.....7..R...Q
    C310: 1B 01 54 20 54 1B 0D 25 44 1B 01 54 20 45 1B 42  // ..T T..%D..T E.B
    C320: 29 00 63 00 31 00 63 01 39 00 63 02 4D 00 5A 5A  // ).c.1.c.9.c.M.ZZ
    C330: 43 70 00 01 25 45 1B 02 43 3E 00 01 25 45 1B 01  // Cp..%E..C>..%E..
    C340: 54 20 42 1B 54 00 43 1B 54 00 47 1B 43 70 00 01  // T B.T.C.T.G.Cp..
    C350: 0D 43 1B 01 01 01 05 47 1B 01 00 01 00 0D 65 48  // .C.....G......eH
    C360: 1B 01 0D 65 4B 1B 01 01 0D 53 1B 10 10 01 25 42  // ...eK....S....%B
    C370: 1B 01 54 30 51 1B 3A 00 00 5B 74 00 01 01 00 00  // ..T0Q.:..[t.....
    C380: 37 00 00 4A A5 CB 05 01 44 15 00 02 65 00 01 0E  // 7..J....D...e...
    C390: 25 00 80 52 14 03 00 46 CC 00 08 25 00 0F 52 14  // %..R...F...%..R.
    C3A0: 54 30 9D 1B 3C 69 9D 1B 00 44 65 00 01 69 9D 1B  // T0..<i...De..i..
    C3B0: 00 3D 65 00 00 44 65 00 4A A5 9C 1B 01 44 65 00  // .=e..De.J....De.
    C3C0: 4C 25 46 01 44 69 00 4A 25 A3 1B 01 49 4D 00 4A  // L%F.Di.J%...IM.J
    C3D0: 25 A3 1B 01 44 55 00 4A 25 A3 1B 01 49 5D 00 3A  // %...DU.J%...I].:
    C3E0: 00 00 5B 4A 25 9D 1B 01 44 69 00 43 65 00 3E 00  // ..[J%...Di.Ce.>.
    C3F0: 01 01 00 00 37 00 00 52 14 3D 65 00 01 44 30 00  // ....7..R.=e..D0.
    C400: 0D 65 9C 1B 03 07 25 9C 1B FE 4A A5 9C 1B 01 49  // .e....%...J....I
    C410: 1C 00 07 E5 7C 1B 7F 54 20 A9 1B 43 3A 00 0D E5  // ....|..T ..C:...
    C420: 7C 1B 80 0D 25 9C 1B 01 3A 00 00 5B 20 01 01 03  // |...%...:..[ ...
    C430: 00 0C 37 00 00 56 00 40 03 09 40 01 21 05 40 40  // ..7..V.@..@.!.@@
    C440: 42 0F 00 2D 01 40 03 27 05 40 0A 00 00 00 21 05  // B..-.@.'.@....!.
    C450: 40 30 00 00 00 56 00 41 03 39 41 01 27 02 40 41  // @0...V.A.9A.'.@A
    C460: 27 05 40 E8 03 00 00 03 02 46 40 3E 05 41 F4 01  // '.@......F@>.A..
    C470: 00 00 47 50 00 2D 05 46 01 00 00 00 3D 05 03 00  // ..GP.-.F....=...
    C480: 00 00 00 44 84 00 2C 0D 01 01 00 03 05 40 40 42  // ...D..,......@@B
    C490: 0F 00 33 01 40 03 27 05 40 A0 86 01 00 02 A2 03  // ..3.@.'.@.......
    C4A0: 40 15 05 41 0E 27 05 41 A8 61 00 00 02 0A 03 40  // @..A.'.A.a.....@
    C4B0: 02 F1 03 01 3D A5 02 00 44 A5 00 2D 05 46 E0 01  // ....=...D..-.F..
    C4C0: 00 00 03 01 41 00 56 38 41 27 02 46 41 02 E2 03  // ....A.V8A'.FA...
    C4D0: 40 0E A5 03 10 4B E5 02 01 49 18 01 3D 25 02 02  // @....K...I..=%..
    C4E0: 44 C4 00 3A 14 00 3D 25 02 00 44 C4 00 3A 28 00  // D..:..=%..D..:(.
    C4F0: 03 00 41 07 17 5E 05 41 FC FF F8 FF 08 00 01 00  // ..A..^.A........
    C500: 4B E5 02 10 44 E0 00 5E A5 41 F8 00 3C 02 07 17  // K...D..^.A..<...
    C510: 41 49 18 01 3C 39 00 17 01 49 18 01 3C 89 01 17  // AI..<9...I..<...
    C520: 01 49 18 01 3C 31 01 17 03 49 18 01 3C 09 05 17  // .I..<1...I..<...
    C530: 03 49 18 01 3C B1 02 17 01 49 18 01 3C 39 02 17  // .I..<....I..<9..
    C540: 03 44 1C 01 0E E5 02 01 3A 00 00 5B 2C 00 02 01  // .D......:..[,...
    C550: 00 00 37 00 00 3C 21 FC 00 00 49 19 00 0D A5 C0  // ..7..<!...I.....
    C560: 00 01 43 26 00 3C 61 FC 00 00 49 26 00 0D A5 C0  // ..C&.<a...I&....
    C570: 00 02 0D A5 C1 00 01 5B 19 00 01 01 00 08 37 00  // .......[......7.
    C580: 00 52 14 01 01 5E 1B 00 01 01 5F 1B 01 3A 00 00  // .R...^...._..:..
    C590: 5B 00 CC 00 01 02 00 00 37 00 00 42 29 00 63 00  // [.......7..B).c.
    C5A0: 33 00 63 07 3B 00 63 03 43 00 63 09 43 00 63 0A  // 3.c.;.c.C.c.C.c.
    C5B0: 43 00 63 0B 43 00 63 0C 43 00 63 0D 43 00 63 0E  // C.c.C.c.C.c.C.c.
    C5C0: 43 00 5A 5A 5B 01 21 E5 19 00 43 B6 00 01 21 59  // C.ZZ[.!...C...!Y
    C5D0: 18 00 43 B6 00 02 E1 00 00 55 20 00 3D 65 00 03  // ..C......U .=e..
    C5E0: 44 59 00 02 29 00 00 32 25 00 08 52 14 5C 39 00  // DY..)..2%..R.\9.
    C5F0: 1C F8 00 02 39 00 00 3D A5 00 01 49 B6 00 52 14  // ....9..=...I..R.
    C600: 54 00 F2 1B 66 06 03 E4 41 28 00 09 E5 41 70 66  // T...f...A(...Apf
    C610: 1E 03 04 40 40 01 3E 05 40 00 00 00 00 44 96 00  // ...@@.>.@....D..
    C620: 01 02 F2 1B 40 43 BC 00 3E E5 41 20 46 BC 00 49  // ....@C..>.A F..I
    C630: AB 00 0D 05 F2 1B 03 B1 01 05 43 BC 00 0D 05 F2  // ..........C.....
    C640: 1B 03 B1 01 05 43 BC 00 52 14 54 00 F2 1B 54 30  // .....C..R.T...T0
    C650: EE 1B 54 00 F9 1B 54 00 ED 1B 3A 00 00 5B BB 01  // ..T...T...:..[..
    C660: 01 04 00 08 37 00 00 3D 65 02 01 49 50 01 4B A5  // ....7..=e..IP.K.
    C670: 02 03 49 79 00 02 05 00 00 03 00 05 02 05 01 00  // ..Iy............
    C680: 05 02 00 3C 21 FC 00 02 49 57 00 01 8D C0 00 00  // ...<!...IW......
    C690: 02 51 02 01 05 C6 00 00 00 10 00 01 05 C8 00 00  // .Q..............
    C6A0: 00 50 00 01 0D C3 00 02 00 54 20 CA 00 01 05 C2  // .P.......T .....
    C6B0: 00 00 01 00 00 0E 25 02 80 52 14 08 25 02 07 56  // ......%..R..%..V
    C6C0: 20 40 4A 65 CC 00 01 44 73 00 56 08 48 03 25 40  //  @Je...Ds.V.H.%@
    C6D0: 10 56 08 48 43 9F 00 0E 25 02 80 52 14 54 00 CC  // .V.HC...%..R.T..
    C6E0: 00 56 08 48 08 25 02 07 0D 25 CA 00 01 01 25 C2  // .V.H.%...%....%.
    C6F0: 00 11 54 00 C6 00 54 00 C8 00 56 20 40 07 65 D0  // ..T...T...V @.e.
    C700: 05 FE 3D A5 01 01 47 B0 00 0D 65 D0 05 01 03 A0  // ..=...G...e.....
    C710: 40 C9 00 03 00 46 C4 00 03 02 41 46 2D 00 46 C6  // @....F....AF-.F.
    C720: 00 2D 00 41 C8 00 52 14 01 32 07 1A 40 01 32 08  // .-.A..R..2..@.2.
    C730: 1A 40 01 02 04 1A 46 01 02 05 1A 41 54 30 C1 1A  // .@....F....AT0..
    C740: 54 00 5C 1B 01 01 5D 1B 00 54 08 09 1A 54 08 0A  // T.\...]..T...T..
    C750: 1A 54 08 0B 1A 54 08 0C 1A 01 09 0E 1A 00 01 19  // .T...T..........
    C760: 0D 1A 00 5C 19 01 1A FC F8 01 07 A5 01 1A 0F 01  // ...\............
    C770: 09 06 1A 01 01 25 00 1A 01 0D E5 B3 1B 10 5C A2  // .....%........\.
    C780: B3 1B EF 40 54 20 35 1A 54 20 3C 1A 54 00 CA 1B  // ...@T 5.T <.T...
    C790: 54 00 C8 1B 54 00 CC 1B 4B A5 02 03 49 4C 01 0E  // T...T...K...IL..
    C7A0: 25 02 80 52 14 0D 25 CC 00 01 3A 00 00 5B 52 14  // %..R..%...:..[R.
    C7B0: 3D 65 02 00 49 6D 01 54 20 00 1A 3A 00 00 3C 21  // =e..Im.T ..:..<!
    C7C0: FC 00 02 49 6C 01 54 08 C1 00 5B 3D 65 02 10 44  // ...Il.T...[=e..D
    C7D0: 7A 01 01 09 06 1A 01 5B 03 00 40 04 1A 09 05 40  // z......[..@....@
    C7E0: 00 00 00 FF 2D 01 40 00 09 0D 40 00 F0 01 02 04  // ....-.@...@.....
    C7F0: 1A 40 08 0D 00 FF 0F 56 00 41 03 31 41 01 74 0A  // .@.....V.A.1A.t.
    C800: 00 41 2C 09 01 00 08 25 00 FC 14 05 00 10 01 01  // .A,....%........
    C810: 5C 1B 00 01 09 0D 1A 01 5B 00 5D 00 01 01 00 00  // \.......[.].....
    C820: 37 00 00 52 14 07 65 B6 1B FE 3D 65 00 01 44 37  // 7..R..e...=e..D7
    C830: 00 54 30 6E 1A 54 30 27 1A 54 30 11 1A 54 20 B5  // .T0n.T0'.T0..T .
    C840: 1B 54 20 BD 1B 4A 25 B6 1B 01 49 2B 00 3A 00 00  // .T ..J%...I+.:..
    C850: 5B 0D 25 BD 1B 01 54 00 9E 1B 07 25 C0 1A F7 3A  // [.%...T....%...:
    C860: 00 00 0D 25 32 01 01 4A 25 28 03 07 49 5C 00 01  // ...%2..J%(..I\..
    C870: 25 28 03 02 51 14 5B 00 D9 00 01 03 00 00 37 00  // %(..Q.[.......7.
    C880: 00 52 14 54 20 78 1A 54 00 80 1A 3D 65 00 01 49  // .R.T x.T...=e..I
    C890: 9A 00 4A 25 01 1A 03 44 59 00 0D 25 7E 1A 07 01  // ..J%...DY..%~...
    C8A0: 25 7F 1A 01 51 01 4A 25 7F 1A 02 44 2C 00 54 20  // %...Q.J%...D,.T 
    C8B0: 7F 1A 54 08 81 1A 54 08 82 1A 54 08 83 1A 01 0D  // ..T...T...T.....
    C8C0: 84 1A FF FF 01 0D 85 1A FF FF 01 0D 86 1A FF FF  // ................
    C8D0: 5B 54 00 79 1A 66 05 2D 0D 42 04 00 56 00 41 03  // [T.y.f.-.B..V.A.
    C8E0: 24 40 00 00 15 05 40 0A 03 24 40 01 00 15 05 40  // $@....@..$@....@
    C8F0: 0A 03 24 40 02 00 15 05 40 04 01 02 7C 1A 40 2D  // ..$@....@...|.@-
    C900: 0D 42 03 00 2D 0D 41 01 00 3E 0D 41 00 01 45 67  // .B..-.A..>.A..Eg
    C910: 00 5B 01 31 79 1A 00 56 00 41 03 19 41 01 3B 02  // .[.1y..V.A..A.;.
    C920: 41 3D 65 00 02 49 BC 00 03 00 40 7C 1A 04 02 00  // A=e..I....@|....
    C930: 40 43 C5 00 03 03 40 00 01 02 7C 1A 40 2D 05 46  // @C....@...|.@-.F
    C940: 04 00 00 00 2D 8D 41 01 00 3E 89 41 01 45 A9 00  // ....-.A..>.A.E..
    C950: 5B 00 85 00 01 01 00 04 01 05 82 00 8C 00 50 C0  // [.............P.
    C960: 56 00 40 03 20 40 83 00 66 FF 2D 0D 42 5D 00 3E  // V.@. @..f.-.B].>
    C970: 0C 40 02 00 47 2D 00 2D 0D 42 08 00 43 1D 00 33  // .@..G-.-.B..C..3
    C980: 0C 40 04 00 21 0C 40 06 00 2D 0C 40 00 00 56 18  // .@..!.@..-.@..V.
    C990: 40 03 02 46 40 66 1E 02 04 00 08 00 20 05 00 64  // @..F@f...... ..d
    C9A0: 00 00 00 27 02 40 46 02 02 00 40 5B 7A 28 00 64  // ...'.@F...@[z(.d
    C9B0: 00 00 00 00 00 00 00 FF FF 07 00 01 00 00 00 C8  // ................
    C9C0: 00 3F 00 08 00 19 00 40 06 5F 00 40 00 32 00 80  // .?.....@._.@.2..
    C9D0: 0C 7F 00 60 00 64 00 00 4B 01 02 03 00 18 37 00  // ...`.d..K.....7.
    C9E0: 00 66 FF 2D 0D 42 3F 01 55 28 05 2D 09 42 05 2D  // .f.-.B?.U(.-.B.-
    C9F0: 09 42 05 03 0C 48 00 00 03 09 41 03 2D 19 41 03  // .B...H....A.-.A.
    CA00: 3E 0D 41 03 00 46 3B 00 5C 8D B3 1B F0 EF 03 00  // >.A..F;.\.......
    CA10: 43 43 00 5C 8D B3 1B F0 FF 04 10 03 09 41 00 2D  // CC.\.........A.-
    CA20: 19 41 00 33 0D 41 01 00 01 0A 80 1B 41 54 08 82  // .A.3.A......AT..
    CA30: 1B 01 99 82 1B 02 03 19 41 00 33 09 41 02 56 18  // ........A.3.A.V.
    CA40: 41 03 B1 41 04 33 1A 41 41 01 8A 81 1B 41 03 19  // A..A.3.AA....A..
    CA50: 41 00 33 09 41 02 2D 1A 41 41 2D 09 41 00 4B 25  // A.3.A.-.AA-.A.K%
    CA60: 04 10 44 91 00 2D 09 41 00 01 0A 81 1B 41 03 21  // ..D..-.A.....A.!
    CA70: 41 04 09 25 41 02 1B 25 41 01 01 22 83 1B 41 54  // A..%A..%A.."..AT
    CA80: 00 5E 1B 01 31 5E 1B 04 01 B1 5E 1B 04 03 09 41  // .^..1^....^....A
    CA90: 01 2D 19 41 01 33 0D 41 01 00 01 0A 87 1B 41 54  // .-.A.3.A......AT
    CAA0: 08 8E 1B 01 99 8E 1B 03 03 19 41 01 33 09 41 03  // ..........A.3.A.
    CAB0: 56 18 41 03 B9 41 04 33 1A 41 41 01 8A 8D 1B 41  // V.A..A.3.AA....A
    CAC0: 03 19 41 01 33 09 41 03 2D 1A 41 41 2D 09 41 01  // ..A.3.A.-.AA-.A.
    CAD0: 4B 25 04 20 44 03 01 2D 09 41 01 01 0A 8D 1B 41  // K%. D..-.A.....A
    CAE0: 03 21 41 04 09 25 41 04 1B 25 41 02 01 22 8F 1B  // .!A..%A..%A.."..
    CAF0: 41 54 00 5F 1B 01 39 5F 1B 04 01 B9 5F 1B 04 03  // AT._..9_...._...
    CB00: 21 41 04 09 25 41 80 1B 25 41 07 01 22 9E 1B 41  // !A..%A..%A.."..A
    CB10: 3A 00 00 5B 7A 0C 00 00 00 00 03 00 26 00 29 00  // :..[z.......&.).
    CB20: 2C 00 2F 00 AF 07 02 03 08 00 37 00 00 56 00 00  // ,./.......7..V..
    CB30: 03 09 00 00 02 0D 00 23 21 4B A5 00 10 44 21 00  // .......#!K...D!.
    CB40: 02 0D 00 23 22 52 49 3E 0D 42 00 00 44 C3 05 03  // ...#"RI>.B..D...
    CB50: 0C 41 04 00 3E 25 41 00 44 C3 05 3E 25 41 15 44  // .A..>%A.D..>%A.D
    CB60: C3 05 42 39 00 63 07 83 02 63 05 FC 00 63 06 FC  // ..B9.c...c...c..
    CB70: 00 63 12 2C 02 63 01 5C 00 63 00 76 00 5A 5A 5B  // .c.,.c.\.c.v.ZZ[
    CB80: 4B A5 00 10 44 C3 05 4A A5 CB 05 01 49 76 00 07  // K...D..J....Iv..
    CB90: E5 1D 19 FE 0D E5 19 19 03 5B 4B A5 00 10 44 C3  // .........[K...D.
    CBA0: 05 03 0C 41 01 00 66 FF 2D 0D 42 93 07 3E 0C 41  // ...A..f.-.B..>.A
    CBB0: 00 00 44 99 00 2D 0D 42 04 00 43 89 00 03 0C 48  // ..D..-.B..C....H
    CBC0: 02 00 4A 25 51 1C 01 44 C3 05 03 0D 41 01 00 66  // ..J%Q..D....A..f
    CBD0: FF 2D 0D 42 93 07 4A 62 50 1C 41 49 CD 00 15 25  // .-.B..JbP.AI...%
    CBE0: 41 01 2D 0D 42 04 00 3E 25 41 80 49 B2 00 43 E2  // A.-.B..>%A.I..C.
    CBF0: 00 03 0C 48 02 00 54 08 C3 1C 51 C8 0D 25 C4 1C  // ...H..T...Q..%..
    CC00: 01 51 32 56 08 48 03 25 01 03 03 05 00 01 BC FF  // .Q2V.H.%........
    CC10: 00 43 3E 01 4C A5 41 02 44 C3 05 50 01 43 E2 00  // .C>.L.A.D..P.C..
    CC20: 56 20 01 03 05 00 00 F3 FE 01 3D E5 00 05 44 3E  // V ........=...D>
    CC30: 01 03 8D 00 FE 00 43 3E 01 66 06 03 24 41 28 00  // ......C>.f..$A(.
    CC40: 4C 25 41 01 44 C3 05 03 25 01 01 03 05 00 00 F4  // L%A.D...%.......
    CC50: FB 04 3D E5 00 05 44 3E 01 03 8D 00 FB 00 43 3E  // ..=...D>......C>
    CC60: 01 5B 56 28 01 03 99 01 00 3B 05 00 4C 00 00 04  // .[V(.....;..L...
    CC70: 05 00 F0 05 80 61 57 00 01 04 0A 01 00 02 21 01  // .....aW.......!.
    CC80: 00 02 E9 01 00 02 05 00 00 4C 00 00 55 10 01 52  // .........L..U..R
    CC90: 4E 3D 65 01 00 44 84 01 51 C8 51 C8 2D 65 01 01  // N=e..D..Q.Q.-e..
    CCA0: 3E 65 01 0C 45 61 01 5B 56 28 01 3B 05 00 4C 00  // >e..Ea.[V(.;..L.
    CCB0: 00 04 05 00 F2 05 90 40 02 05 00 00 4C 04 4C 55  // .......@....L.LU
    CCC0: 10 01 52 4E 3D 65 01 00 44 B3 01 2D 65 01 01 3E  // ..RN=e..D..-e..>
    CCD0: 65 01 06 45 87 01 5B 56 00 41 3B 05 04 4C 00 00  // e..E..[V.A;..L..
    CCE0: 03 A3 41 00 3E A5 00 FF 44 06 02 09 B2 41 00 0F  // ..A.>...D....A..
    CCF0: BA 41 00 03 0A 41 00 3B 05 00 4C 00 00 04 05 00  // .A...A.;..L.....
    CD00: F0 05 80 72 04 02 01 41 56 28 01 02 05 00 00 4C  // ...r...AV(.....L
    CD10: 00 00 55 10 01 52 4E 3D 65 01 00 44 06 02 2D 65  // ..U..RN=e..D..-e
    CD20: 01 01 3E 65 01 06 45 E7 01 5B 02 9A 00 01 02 21  // ..>e..E..[.....!
    CD30: 00 01 02 79 00 01 42 22 01 63 00 15 01 63 01 3D  // ...y..B".c...c.=
    CD40: 01 63 02 B8 02 63 03 F0 00 63 04 CD 02 5A 5A 5B  // .c...c...c...ZZ[
    CD50: 07 25 C9 05 FC 56 30 00 3B 05 00 4C 00 00 04 05  // .%...V0.;..L....
    CD60: 00 00 02 90 40 02 21 01 00 02 E9 01 00 02 05 00  // ....@.!.........
    CD70: 00 4C 04 4C 55 10 01 52 4E 3D 65 01 00 44 6C 02  // .L.LU..RN=e..Dl.
    CD80: 51 C8 51 C8 2D A5 00 01 3E A5 00 06 45 34 02 5B  // Q.Q.-...>...E4.[
    CD90: 3B 05 04 4C 00 00 0A 25 00 3F 3F 25 00 00 44 82  // ;..L...%.??%..D.
    CDA0: 02 0D 25 C9 05 02 5B 56 00 41 03 21 41 00 09 25  // ..%...[V.A.!A..%
    CDB0: 41 0F 15 0D 41 01 66 FF 2D 0D 42 C7 05 2D 0A 42  // A...A.f.-.B..-.B
    CDC0: 41 03 0C 48 00 00 07 A5 80 18 FB 56 08 48 03 25  // A..H.......V.H.%
    CDD0: 01 02 03 05 00 00 02 FF 00 43 3E 01 3E A5 41 20  // .........C>.>.A 
    CDE0: 49 DE 02 03 25 01 04 03 05 00 00 03 FF 00 43 3E  // I...%.........C>
    CDF0: 01 3E A5 41 31 49 DE 02 66 FF 2D 0D 42 CF 06 43  // .>.A1I..f.-.B..C
    CE00: F1 02 66 FF 2D 0D 42 D3 05 4B A5 00 10 44 F1 02  // ..f.-.B..K...D..
    CE10: 2D 0D 42 40 00 03 05 41 80 4C 00 00 3B 02 41 04  // -.B@...A.L..;.A.
    CE20: 04 00 00 00 2D 0D 42 04 00 2D 05 41 04 00 00 00  // ....-.B..-.A....
    CE30: 3F 05 00 FF FF FF FF 49 F8 02 4B A5 00 10 44 5C  // ?......I..K...D\
    CE40: 05 02 05 01 06 00 00 00 56 00 41 66 1A 03 0C 41  // ........V.Af...A
    CE50: 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 01 08 00  // ..-.AB-.B..=$...
    CE60: 44 53 03 2D 0D 42 0C 00 3E 0A 42 41 49 37 03 03  // DS.-.B..>.BAI7..
    CE70: 0D 41 00 00 43 2C 04 03 0C 41 04 00 3E 0D 41 00  // .A..C,...A..>.A.
    CE80: 00 44 2C 04 02 0C 01 06 00 03 02 46 41 26 05 01  // .D,........FA&..
    CE90: 64 00 00 00 03 02 01 40 21 02 46 01 02 02 01 40  // d......@!.F....@
    CEA0: 21 02 40 46 21 05 40 00 04 00 00 27 05 40 7D 01  // !.@F!.@....'.@}.
    CEB0: 00 00 03 02 46 40 20 05 01 00 00 08 00 27 05 40  // ....F@ ......'.@
    CEC0: 71 02 00 00 21 05 40 10 00 00 00 2D 02 46 40 03  // q...!.@....-.F@.
    CED0: 02 41 46 66 06 55 00 01 02 0C 01 04 00 20 05 01  // .AFf.U....... ..
    CEE0: 30 02 00 00 3D 0D 01 97 06 47 F0 03 1B 05 40 01  // 0...=....G....@.
    CEF0: 3D 0D 01 2F 0D 47 F0 03 1B 05 40 01 3D 0D 01 5E  // =../.G....@.=..^
    CF00: 1A 47 F0 03 1B 05 40 01 3D 0D 01 BC 34 47 F0 03  // .G....@.=...4G..
    CF10: 1B 05 40 01 03 02 00 40 3B 05 E8 4C 00 00 27 02  // ..@....@;..L..'.
    CF20: 41 00 04 A2 00 40 3B 05 EC 4C 00 00 15 05 01 09  // A....@;..L......
    CF30: 27 02 00 01 0F 25 40 80 04 A2 00 40 3B 05 18 4D  // '....%@....@;..M
    CF40: 00 00 04 A5 00 00 3B 05 20 4D 00 00 04 A5 00 02  // ......;. M......
    CF50: 3B 05 F0 4C 00 00 66 06 03 E4 41 28 00 4C E5 41  // ;..L..f...A(.L.A
    CF60: 01 49 44 04 04 A5 00 00 3B 05 1C 4D 00 00 66 06  // .ID.....;..M..f.
    CF70: 03 E4 41 28 00 4C E5 41 01 49 5C 04 04 A5 00 3C  // ..A(.L.A.I\....<
    CF80: 3B 05 A4 4C 00 00 66 06 03 E4 41 28 00 4C E5 41  // ;..L..f...A(.L.A
    CF90: 02 44 7F 04 04 A5 00 46 4C E5 41 10 49 7F 04 04  // .D.....FL.A.I...
    CFA0: A5 00 4A 3B 05 20 4D 00 00 66 06 03 E4 41 28 00  // ..J;. M..f...A(.
    CFB0: 4C E5 41 20 49 97 04 10 A5 00 04 66 06 03 24 41  // L.A I......f..$A
    CFC0: 34 00 3B 05 C4 4C 00 00 04 A2 00 41 03 24 41 35  // 4.;..L.....A.$A5
    CFD0: 00 3B 05 C8 4C 00 00 04 A2 00 41 03 24 41 39 00  // .;..L.....A.$A9.
    CFE0: 3B 05 CC 4C 00 00 04 A2 00 41 03 24 41 37 00 3B  // ;..L.....A.$A7.;
    CFF0: 05 D0 4C 00 00 04 A2 00 41 03 24 41 36 00 3B 05  // ..L.....A.$A6.;.
    D000: D4 4C 00 00 04 A2 00 41 03 24 41 3A 00 3B 05 D8  // .L.....A.$A:.;..
    D010: 4C 00 00 04 A2 00 41 03 24 41 38 00 3B 05 DC 4C  // L.....A.$A8.;..L
    D020: 00 00 04 A2 00 41 3B 05 A8 4C 00 00 66 1E 03 E4  // .....A;..L..f...
    D030: 41 36 01 4C E5 41 02 44 2E 05 04 A5 00 67 04 A5  // A6.L.A.D.....g..
    D040: 01 89 04 A5 02 AB 04 A5 03 01 04 A5 04 23 04 A5  // .............#..
    D050: 05 45 3B 05 C0 4C 00 00 66 1E 03 E4 41 36 01 4C  // .E;..L..f...A6.L
    D060: E5 41 20 44 4B 05 03 E4 41 37 01 04 BA 00 41 3B  // .A DK...A7....A;
    D070: 05 08 4D 00 00 4C E5 41 10 44 5C 05 04 A5 00 80  // ..M..L.A.D\.....
    D080: 03 05 00 80 4C 00 00 02 21 01 00 02 E9 01 00 56  // ....L...!......V
    D090: 00 41 03 0A 41 00 3B 02 41 03 03 41 00 3E 05 41  // .A..A.;.A..A.>.A
    D0A0: FF FF FF FF 44 C2 05 3B 05 00 4C 00 00 04 05 01  // ....D..;..L.....
    D0B0: F0 05 80 72 04 02 02 41 02 05 00 04 4C 00 00 55  // ...r...A....L..U
    D0C0: 10 01 52 4E 3D 65 01 00 44 B7 05 51 C8 51 C8 2D  // ..RN=e..D..Q.Q.-
    D0D0: A5 00 01 3E A5 00 07 45 6B 05 5B 2D 0D 00 04 00  // ...>...Ek.[-....
    D0E0: 56 18 00 43 6B 05 5B 5B 7A E8 01 00 00 14 00 28  // V..Ck.[[z......(
    D0F0: 00 40 00 54 00 68 00 00 05 3D 00 00 1F 01 00 00  // .@.T.h...=......
    D100: BA 00 00 00 BB 08 00 00 B1 4B 00 01 73 69 00 01  // .........K..si..
    D110: 9F 26 00 00 19 33 00 00 89 39 00 01 9E 05 00 01  // .&...3...9......
    D120: CB 80 00 00 16 44 00 00 F1 20 00 00 DC 00 00 00  // .....D... ......
    D130: DD 00 00 FF FF FF FF 00 05 3D 00 00 1F 03 00 00  // .........=......
    D140: BA 00 00 00 BB 08 00 00 B1 4B 00 01 73 69 00 01  // .........K..si..
    D150: 9F 24 00 00 19 33 00 00 89 39 00 00 F8 42 00 00  // .$...3...9...B..
    D160: F9 01 00 00 FA 23 00 00 FB 45 00 00 FC 67 00 00  // .....#...E...g..
    D170: FD 89 00 00 FE AB 00 00 1D 25 00 01 C3 07 00 01  // .........%......
    D180: C2 5A 00 01 C4 03 00 01 C0 07 00 01 C1 5A 00 01  // .Z...........Z..
    D190: B1 03 00 01 BF 7D 00 01 B5 63 00 01 CB 80 00 01  // .....}...c......
    D1A0: B3 00 00 01 B2 00 00 00 9F 10 00 01 83 14 00 00  // ................
    D1B0: A7 C2 00 01 71 12 00 01 82 5D 00 01 89 24 00 01  // ....q....]...$..
    D1C0: BE 01 00 00 8A 53 00 00 0A 01 00 01 D4 10 00 00  // .....S..........
    D1D0: F3 40 00 00 F4 00 00 01 B4 00 00 00 DC 00 00 00  // .@..............
    D1E0: DD 00 00 01 91 20 00 00 D1 06 00 00 D6 01 00 FF  // ..... ..........
    D1F0: FF FF FF 00 05 3D 00 00 1F 03 00 00 BA 00 00 00  // .....=..........
    D200: BB 08 00 00 B1 4B 00 01 73 69 00 01 9F 24 00 00  // .....K..si...$..
    D210: 19 33 00 00 89 39 00 00 F8 42 00 00 F9 01 00 00  // .3...9...B......
    D220: FA 23 00 00 FB 45 00 00 FC 67 00 00 FD 89 00 00  // .#...E...g......
    D230: FE AB 00 00 1D 25 00 01 C3 07 00 01 C2 5A 00 01  // .....%.......Z..
    D240: C4 03 00 01 C0 07 00 01 C1 5A 00 01 B1 03 00 01  // .........Z......
    D250: BF 7D 00 01 B5 63 00 01 CB 80 00 01 B3 00 00 01  // .}...c..........
    D260: B2 00 00 00 9F 10 00 01 83 14 00 00 A7 C2 00 01  // ................
    D270: 71 12 00 01 82 5D 00 01 89 28 00 01 BE 01 00 00  // q....]...(......
    D280: 8A 53 00 00 0A 01 00 01 D4 10 00 00 F3 40 00 00  // .S...........@..
    D290: F4 00 00 01 B4 00 00 00 DC 00 00 00 DD 00 00 01  // ................
    D2A0: 91 20 00 00 D1 06 00 00 D6 01 00 01 D2 08 00 01  // . ..............
    D2B0: D3 80 00 FF FF FF FF 1E 21 00 00 1E 22 00 03 20  // ........!...".. 
    D2C0: 21 00 26 20 22 00 29 21 21 00 2C 21 22 00 2F 25  // !.& ".)!!.,!"./%
    D2D0: 21 00 32 00 26 01 01 01 08 04 37 00 00 03 00 41  // !.2.&.....7....A
    D2E0: C4 00 1B 05 41 08 03 E0 41 C9 00 56 00 40 03 09  // ....A...A..V.@..
    D2F0: 40 00 15 05 40 05 2D 02 40 41 02 3A 00 40 15 05  // @...@.-.@A.:.@..
    D300: 40 08 3B 05 00 17 00 00 57 00 00 66 0B 03 05 00  // @.;.....W..f....
    D310: 00 17 00 00 1B 05 00 08 2D 02 41 00 03 04 00 04  // ........-.A.....
    D320: 00 15 05 00 02 2D 02 41 00 02 7A 00 41 15 05 41  // .....-.A..z.A..A
    D330: 08 03 02 46 41 56 00 00 03 19 00 00 15 05 00 0D  // ...FAV..........
    D340: 56 00 01 4A 25 15 31 01 44 93 00 4A 25 3A 31 02  // V..J%.1.D..J%:1.
    D350: 49 93 00 03 25 01 01 01 05 3A 31 03 00 00 00 4A  // I...%....:1....J
    D360: 25 3A 31 01 49 8B 00 54 00 63 C0 51 C8 4A E5 A0  // %:1.I..T.c.Q.J..
    D370: 21 80 49 97 00 3E 05 00 00 00 00 00 44 FE 00 03  // !.I..>......D...
    D380: 05 41 00 00 10 00 3E 02 00 41 46 BD 00 03 02 41  // .A....>..AF....A
    D390: 00 33 02 00 41 01 02 64 C0 46 01 29 65 C0 00 01  // .3..A..d.F.)e...
    D3A0: 02 66 C0 40 01 21 67 C0 00 1B 05 40 08 03 E1 40  // .f.@.!g....@...@
    D3B0: 00 1B 05 41 08 2D 02 40 41 15 05 41 08 02 3A 00  // ...A.-.@A..A..:.
    D3C0: 40 15 05 40 08 0F 8D 41 20 D0 01 02 E8 C0 41 43  // @..@...A .....AC
    D3D0: 97 00 01 05 12 00 00 00 01 00 01 05 13 00 00 00  // ................
    D3E0: 01 00 3E 25 01 01 49 25 01 01 05 3A 31 01 00 00  // ..>%..I%...:1...
    D3F0: 00 4A 25 3A 31 01 49 1D 01 5B 39 02 01 01 00 08  // .J%:1.I..[9.....
    D400: 37 00 00 0D 25 34 18 08 07 25 07 19 FD 56 00 41  // 7...%4...%...V.A
    D410: 03 39 41 01 09 25 41 0F 03 0A 40 42 66 FF 2D 0D  // .9A..%A...@Bf.-.
    D420: 42 19 02 15 25 41 02 2D 0A 42 41 03 0C 41 00 00  // B...%A.-.BA..A..
    D430: 01 02 00 00 41 07 A5 01 00 FE 54 08 01 00 01 0C  // ....A.....T.....
    D440: 3B 18 02 00 03 0A 42 40 03 05 40 C0 5D 00 00 56  // ;.....B@..@.]..V
    D450: 00 41 03 21 41 00 27 02 40 41 01 8A 37 18 40 01  // .A.!A.'.@A..7.@.
    D460: 25 37 18 02 01 05 38 18 00 00 00 30 0D 25 35 18  // %7....8....0.%5.
    D470: 02 01 A9 39 18 01 4B 25 01 01 49 87 00 54 30 39  // ...9..K%..I..T09
    D480: 18 01 0D 39 18 00 31 2B A5 39 18 01 4B 25 01 02  // ...9..1+.9..K%..
    D490: 44 9E 00 2B A5 39 18 01 56 00 41 03 71 41 01 0F  // D..+.9..V.A.qA..
    D4A0: E5 41 80 01 02 3A 18 41 03 69 41 00 2D A5 41 01  // .A...:.A.iA.-.A.
    D4B0: 01 02 3A 18 41 4B 25 01 02 44 CE 00 56 28 41 2D  // ..:.AK%..D..V(A-
    D4C0: A5 41 01 01 02 3A 18 41 4B 25 01 01 44 EF 00 03  // .A...:.AK%..D...
    D4D0: 71 41 00 2D A5 41 01 01 02 3A 18 41 03 79 41 00  // qA.-.A...:.A.yA.
    D4E0: 2D A5 41 01 01 02 3A 18 41 0D 25 34 18 01 03 A5  // -.A...:.A.%4....
    D4F0: 41 01 43 C2 01 03 29 40 01 03 65 40 01 03 99 40  // A.C...)@..e@...@
    D500: 00 56 00 41 03 71 41 01 0F 65 41 01 0F E5 41 80  // .V.A.qA..eA...A.
    D510: 01 02 3A 18 41 01 A5 39 18 04 3D 65 01 04 47 30  // ..:.A..9..=e..G0
    D520: 01 01 0D 39 18 01 13 43 5F 01 01 A2 39 18 40 01  // ...9...C_...9.@.
    D530: 0D 39 18 01 31 43 5F 01 07 65 39 18 EF 01 A5 39  // .9..1C_..e9....9
    D540: 18 03 3E 25 40 04 46 5F 01 01 A2 39 18 40 31 A5  // ..>%@.F_...9.@1.
    D550: 39 18 01 5C 65 39 18 FD 20 0D 25 34 18 01 03 A5  // 9..\e9.. .%4....
    D560: 41 00 43 C2 01 03 05 41 01 00 00 80 03 AA 41 40  // A.C....A......A@
    D570: 01 02 3A 18 41 3D 65 01 01 49 8A 01 02 A8 00 3A  // ..:.A=e..I.....:
    D580: 18 43 01 02 56 00 41 03 1A 41 40 3B 02 41 03 28  // .C..V.A..A@;.A.(
    D590: 41 3A 18 03 68 41 3A 18 03 A8 41 3A 18 03 E8 41  // A:..hA:...A:...A
    D5A0: 3A 18 04 02 00 41 56 28 40 2D 8D 40 04 00 3E 25  // :....AV(@-.@..>%
    D5B0: 40 04 47 01 02 33 25 40 04 43 3E 01 02 65 00 02  // @.G..3%@.C>..e..
    D5C0: 03 0D 41 64 00 33 0D 41 01 00 3E 0D 41 00 00 44  // ..Ad.3.A..>.A..D
    D5D0: 01 02 51 64 4A 25 36 18 10 44 CB 01 4A 65 36 18  // ..QdJ%6..D..Je6.
    D5E0: 06 49 01 02 02 65 00 01 0D 25 35 18 02 3E A5 41  // .I...e...%5..>.A
    D5F0: 00 44 6B 01 4B 25 01 01 44 FB 00 0D 25 35 18 02  // .Dk.K%..D...%5..
    D600: 01 25 34 18 02 51 01 54 00 34 18 54 00 3B 18 5B  // .%4..Q.T.4.T.;.[
    D610: 7A 20 00 4C 19 01 00 50 19 03 02 54 19 05 04 58  // z .L...P...T...X
    D620: 19 42 41 5C 19 49 48 60 19 4B 4A 74 19 29 28 70  // .BA\.IH`.KJt.)(p
    D630: 19 4D 4C 00 6A 00 02 02 00 04 37 00 00 3D 65 00  // .ML.j.....7..=e.
    D640: 01 44 54 00 55 30 00 3D 25 00 06 46 50 00 32 25  // .DT.U0.=%..FP.2%
    D650: 00 01 20 25 00 03 56 08 48 03 22 48 40 0D A5 08  // .. %..V.H."H@...
    D660: 18 01 02 A0 00 07 18 08 A5 00 03 4A 25 07 18 02  // ...........J%...
    D670: 44 4A 00 5C 0D 08 18 FF FE 01 00 43 50 00 0D 0D  // DJ.\.......CP...
    D680: 08 18 01 01 3A 00 00 5B 0D 65 CF 05 08 01 05 B5  // ....:..[.e......
    D690: 00 01 00 00 00 3C 25 B6 00 00 44 61 00 5B D3 00  // .....<%...Da.[..
    D6A0: 01 04 00 08 08 05 00 FF FF FF 00 66 1E 03 04 46  // ...........f...F
    D6B0: 08 00 03 05 40 38 18 00 00 3D 05 00 00 00 00 00  // ....@8...=......
    D6C0: 44 5D 00 21 05 46 64 00 00 00 2D 01 40 00 33 05  // D].!.Fd...-.@.3.
    D6D0: 40 01 00 00 00 27 01 40 00 3E 05 40 38 18 00 00  // @....'.@.>.@8...
    D6E0: 45 4C 00 03 05 40 38 18 00 00 3E 05 40 C8 00 00  // EL...@8...>.@...
    D6F0: 00 46 5D 00 03 05 40 C8 00 00 00 66 FF 2D 0D 42  // .F]...@....f.-.B
    D700: BB 00 3E 0C 40 02 00 47 74 00 2D 0D 42 08 00 43  // ..>.@..Gt.-.B..C
    D710: 64 00 33 0C 40 00 00 2D 0C 40 06 00 33 0D 40 01  // d.3.@..-.@..3.@.
    D720: 00 27 0C 40 06 00 2D 0C 40 04 00 02 E2 00 40 33  // .'.@..-.@.....@3
    D730: 0C 40 04 00 21 0C 40 06 00 2D 0C 40 00 00 03 02  // .@..!.@..-.@....
    D740: 41 40 21 05 46 64 00 00 00 27 02 40 41 02 0A 00  // A@!.Fd...'.@A...
    D750: 40 02 B2 00 40 5B 7A 18 00 C8 00 40 06 08 00 19  // @...@[z....@....
    D760: 00 40 06 80 0C 40 00 32 00 80 0C 38 18 60 00 64  // .@...@.2...8.`.d
    D770: 00 00 74 00 01 03 00 08 37 00 00 3A 14 00 4B A5  // ..t.....7..:..K.
    D780: 00 0C 44 20 00 3A 28 00 4B A5 00 04 49 20 00 3A  // ..D .:(.K...I .:
    D790: 00 00 3D E5 00 01 44 3D 00 07 65 04 17 EF 3C 0D  // ..=...D=..e...<.
    D7A0: 05 17 00 00 49 70 00 07 A5 05 17 FC 43 70 00 4A  // ....Ip......Cp.J
    D7B0: 65 04 17 10 49 70 00 07 25 07 17 F7 5C A5 05 17  // e...Ip..%...\...
    D7C0: FC 01 4B A5 00 01 49 5B 00 0E 65 01 20 0E 65 01  // ..K...I[..e. .e.
    D7D0: 10 01 09 03 17 00 01 01 04 17 01 50 01 0D 25 07  // ...........P..%.
    D7E0: 17 08 3A 00 00 5B BD 00 02 01 00 04 03 09 40 00  // ..:..[........@.
    D7F0: 02 0D 00 00 FF 66 16 03 0A 41 40 1B 0D 41 0C 3E  // .....f...A@..A.>
    D800: 25 41 02 44 2F 00 3E 25 41 03 49 B9 00 2D 0C 42  // %A.D/.>%A.I..-.B
    D810: 06 00 43 34 00 2D 0C 42 0A 00 03 24 41 00 00 3E  // ..C4.-.B...$A..>
    D820: 25 41 00 44 B9 00 3E 0C 40 04 00 44 54 00 2D 0D  // %A.D..>.@..DT.-.
    D830: 42 08 00 33 25 41 01 43 39 00 03 0C 40 06 00 03  // B..3%A.C9...@...
    D840: 0C 41 08 00 66 16 2D 0A 40 42 3E 0D 41 00 00 44  // .A..f.-.@B>.A..D
    D850: A7 00 2D 0A 42 41 56 00 41 03 24 41 00 00 03 A4  // ..-.BAV.A.$A....
    D860: 41 01 00 3E 25 41 FF 44 A7 00 3E 25 41 01 49 90  // A..>%A.D..>%A.I.
    D870: 00 02 24 00 02 00 3E 25 41 02 49 A0 00 02 64 00  // ..$...>%A.I...d.
    D880: 02 00 32 65 00 01 2D 1A 42 41 43 73 00 03 0A 42  // ..2e..-.BACs...B
    D890: 40 03 0C 41 01 00 3E 0D 41 00 00 44 B9 00 5B 56  // @..A..>.A..D..[V
    D8A0: 08 42 5B 00 89 00 01 03 00 08 03 99 41 00 03 21  // .B[.........A..!
    D8B0: 41 01 55 18 00 55 08 01 42 32 41 63 14 2A 00 63  // A.U..U..B2Ac.*.c
    D8C0: 1E 3D 00 63 20 3D 00 63 21 3D 00 5A 5A 5B 4C 25  // .=.c =.c!=.ZZ[L%
    D8D0: 41 01 49 88 00 4C 25 41 08 49 88 00 14 0D 00 01  // A.I..L%A.I......
    D8E0: 5B 3E E5 41 00 49 4F 00 02 0D 00 10 27 02 0D 01  // [>.A.IO.....'...
    D8F0: 01 0C 5B 3E E5 41 01 44 75 00 4C 25 41 40 44 88  // ..[>.A.Du.L%A@D.
    D900: 00 03 05 40 C0 D4 01 00 27 01 40 00 15 25 40 01  // ...@....'.@..%@.
    D910: 02 62 01 40 1A 05 00 01 5B 02 0D 01 01 00 66 06  // .b.@....[.....f.
    D920: 03 E4 40 28 00 4C E5 40 01 49 5D 00 5B 00 30 00  // ..@(.L.@.I].[.0.
    D930: 01 03 00 04 37 00 00 3D 0D 00 01 00 49 2F 00 56  // ....7..=....I/.V
    D940: 00 41 03 19 41 00 15 05 41 02 01 02 A4 00 41 01  // .A..A...A.....A.
    D950: 0D 94 00 25 01 3C 25 95 00 00 44 27 00 5B CA 01  // ...%.<%...D'.[..
    D960: 01 04 00 04 37 00 00 03 01 46 01 02 31 01 00 1A  // ....7....F..1...
    D970: 25 01 04 03 21 41 01 52 14 02 02 01 46 42 39 00  // %...!A.R....FB9.
    D980: 63 0F 4B 00 63 08 79 01 63 09 62 01 63 0A 69 01  // c.K.c.y.c.b.c.i.
    D990: 63 13 71 01 63 0B 81 01 63 0C 89 01 63 0D 99 01  // c.q.c...c...c...
    D9A0: 63 10 B2 01 5A 5A 43 5E 01 54 00 83 1C 3D 25 01  // c...ZZC^.T...=%.
    D9B0: 01 44 0C 01 01 0D 03 1C 1F 00 3D 25 01 00 44 71  // .D........=%..Dq
    D9C0: 00 3D 25 01 02 44 FB 00 3D 25 01 05 49 03 01 07  // .=%..D..=%..I...
    D9D0: A5 00 1C FE 54 08 C1 1C 3D A5 01 00 49 85 00 02  // ....T...=...I...
    D9E0: A5 01 02 32 A5 01 01 01 F1 C1 1C 01 4A 25 C3 1C  // ...2........J%..
    D9F0: 01 49 E3 00 66 FF 2D 0D 42 C2 01 03 31 41 00 09  // .I..f.-.B...1A..
    DA00: 05 41 03 00 00 00 2D 0A 42 41 2D 0A 42 41 03 0C  // .A....-.BA-.BA..
    DA10: 41 00 00 07 65 C9 1C FE 01 05 CA 1C 00 80 00 00  // A...e...........
    DA20: 56 00 40 03 09 40 00 21 05 40 00 80 00 00 27 02  // V.@..@.!.@....'.
    DA30: 40 41 01 02 CB 1C 40 0D E5 CC 1C 10 0D 65 00 1C  // @A....@......e..
    DA40: 04 02 20 01 00 1C 08 25 01 07 52 14 15 2D 46 04  // .. ....%..R..-F.
    DA50: 01 AA 9C 1B 46 3A 00 00 5B 01 05 83 1C 01 00 00  // ....F:..[.......
    DA60: 00 07 0D 7C 1C EF FC 43 45 01 01 0D 03 1C 63 00  // ...|...CE.....c.
    DA70: 66 06 03 E4 41 28 00 4C E5 41 20 44 36 01 0D 25  // f...A(.L.A D6..%
    DA80: 8C 1C 01 03 E4 41 28 00 4C E5 41 02 44 36 01 0D  // .....A(.L.A.D6..
    DA90: 25 8C 1C 10 4C E5 41 01 44 54 01 0D 65 8C 1C 01  // %...L.A.DT..e...
    DAA0: 43 4C 01 3D 65 01 04 47 54 01 0D A5 00 1C 01 43  // CL.=e..GT......C
    DAB0: 59 01 07 A5 00 1C FE 0D 65 00 1C 04 3A 00 00 5B  // Y.......e...:..[
    DAC0: 54 20 D1 1C 43 5E 01 01 25 D1 1C 01 43 5E 01 01  // T ..C^..%...C^..
    DAD0: 25 D1 1C 02 43 5E 01 07 25 C0 1C EF 43 5E 01 0D  // %...C^..%...C^..
    DAE0: 25 C0 1C 10 43 5E 01 54 08 C3 1C 51 C8 0D 25 C4  // %...C^.T...Q..%.
    DAF0: 1C 01 51 32 43 5E 01 0D 65 C9 1C 01 51 0A 07 25  // ..Q2C^..e...Q..%
    DB00: C4 1C FE 51 0A 01 0D C3 1C 01 02 51 C8 43 5E 01  // ...Q.......Q.C^.
    DB10: 0D 25 D5 1C 10 01 21 DE 1C 01 43 5E 01 7A 08 00  // .%....!...C^.z..
    DB20: 48 3F 78 69 F0 D2 90 7E 7E 04 01 01 04 00 37 00  // H?xi...~~.....7.
    DB30: 00 4A A5 C9 05 04 44 FA 03 66 06 03 24 00 42 00  // .J....D..f..$.B.
    DB40: 3E 25 00 02 45 FA 03 02 0D 00 00 FF 03 0D 40 14  // >%..E.........@.
    DB50: 31 66 16 2D 0C 42 06 00 03 24 41 00 00 3E 25 41  // 1f.-.B...$A..>%A
    DB60: 00 44 B4 00 3E 0C 40 04 00 44 50 00 2D 0D 42 08  // .D..>.@..DP.-.B.
    DB70: 00 33 25 41 01 43 35 00 03 0C 40 06 00 03 0C 41  // .3%A.C5...@....A
    DB80: 08 00 66 16 2D 0A 40 42 3E 0D 41 00 00 44 A3 00  // ..f.-.@B>.A..D..
    DB90: 2D 0A 42 41 56 00 41 03 24 41 00 00 03 A4 41 01  // -.BAV.A.$A....A.
    DBA0: 00 3E 25 41 FF 44 A3 00 3E 25 41 01 49 8C 00 02  // .>%A.D..>%A.I...
    DBB0: 24 00 02 00 3E 25 41 02 49 9C 00 02 64 00 02 00  // $...>%A.I...d...
    DBC0: 32 65 00 01 2D 1A 42 41 43 6F 00 03 0A 42 40 03  // 2e..-.BACo...B@.
    DBD0: 0C 41 01 00 3E 0D 41 00 00 49 B8 00 56 08 42 5B  // .A..>.A..I..V.B[
    DBE0: 42 22 00 63 02 C2 00 5A 5A 5B 3B 05 00 4C 00 00  // B".c...ZZ[;..L..
    DBF0: 03 01 00 00 04 05 00 09 05 90 40 55 00 01 02 21  // ..........@U...!
    DC00: 01 00 02 E9 01 00 02 05 00 00 4C 04 4C 52 4E 3D  // ..........L.LRN=
    DC10: 65 02 00 44 FC 00 51 90 2C E5 00 01 3D E5 00 06  // e..D..Q.,...=...
    DC20: 45 DE 00 5B 02 02 00 00 03 E5 40 01 3B 05 04 4C  // E..[......@.;..L
    DC30: 00 00 3F 25 00 04 44 15 01 03 E5 40 02 66 FF 2D  // ..?%..D....@.f.-
    DC40: 0D 42 3E 04 03 05 41 80 4C 00 00 3B 02 41 04 04  // .B>...A.L..;.A..
    DC50: 00 00 00 2D 0D 42 04 00 2D 05 41 04 00 00 00 3F  // ...-.B..-.A....?
    DC60: 05 00 FF FF FF FF 49 23 01 66 06 03 24 41 34 00  // ......I#.f..$A4.
    DC70: 15 25 41 02 3B 05 80 4C 00 00 04 62 00 41 56 00  // .%A.;..L...b.AV.
    DC80: 41 03 24 41 35 00 3B 05 84 4C 00 00 04 62 00 41  // A.$A5.;..L...b.A
    DC90: 56 00 41 03 24 41 39 00 15 0D 41 02 3B 05 88 4C  // V.A.$A9...A.;..L
    DCA0: 00 00 04 62 00 41 56 00 41 03 24 41 3A 00 15 0D  // ...b.AV.A.$A:...
    DCB0: 41 02 3B 05 8C 4C 00 00 04 62 00 41 56 00 41 03  // A.;..L...b.AV.A.
    DCC0: 24 41 36 00 3B 05 90 4C 00 00 04 62 00 41 03 24  // $A6.;..L...b.A.$
    DCD0: 41 37 00 15 25 41 02 3B 05 94 4C 00 00 04 62 00  // A7..%A.;..L...b.
    DCE0: 41 56 00 41 03 24 41 38 00 3B 05 98 4C 00 00 04  // AV.A.$A8.;..L...
    DCF0: 62 00 41 56 00 41 3E E5 40 01 49 D9 01 0F 25 41  // b.AV.A>.@.I...%A
    DD00: 08 66 06 03 E4 41 28 00 4C E5 41 01 44 EB 01 0F  // .f...A(.L.A.D...
    DD10: 25 41 80 4C E5 41 02 49 F6 01 0F 25 41 04 4C E5  // %A.L.A.I...%A.L.
    DD20: 41 20 44 01 02 0F 25 41 01 3B 05 A4 4C 00 00 04  // A D...%A.;..L...
    DD30: 62 00 41 02 05 01 06 00 00 00 56 00 41 66 1A 03  // b.A.......V.Af..
    DD40: 0C 41 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 01  // .A..-.AB-.B..=$.
    DD50: 08 00 44 40 02 2D 0D 42 0C 00 3E 0A 42 41 49 25  // ..D@.-.B..>.BAI%
    DD60: 02 03 25 41 00 43 8A 03 03 8C 41 04 00 3E 8D 41  // ..%A.C....A..>.A
    DD70: 00 00 44 39 02 3E E5 40 01 49 C7 02 03 25 41 00  // ..D9.>.@.I...%A.
    DD80: 3E 8D 41 17 00 45 34 03 03 25 41 01 3E 8D 41 47  // >.A..E4..%A.>.AG
    DD90: 00 45 34 03 03 25 41 02 3E 8D 41 7C 00 45 34 03  // .E4..%A.>.A|.E4.
    DDA0: 03 25 41 03 3E 8D 41 AC 00 45 34 03 03 25 41 04  // .%A.>.A..E4..%A.
    DDB0: 3E 8D 41 D3 00 45 34 03 03 25 41 05 3E 8D 41 10  // >.A..E4..%A.>.A.
    DDC0: 01 45 34 03 03 25 41 06 3E 8D 41 4B 01 45 34 03  // .E4..%A.>.AK.E4.
    DDD0: 03 25 41 07 3E 8D 41 71 01 45 34 03 03 25 41 08  // .%A.>.Aq.E4..%A.
    DDE0: 3E 8D 41 AC 01 45 34 03 03 25 41 09 43 34 03 03  // >.A..E4..%A.C4..
    DDF0: 02 00 42 66 06 55 00 01 02 0C 01 04 00 66 FF 2D  // ..Bf.U.......f.-
    DE00: 0D 42 FE 03 3D 04 01 00 00 45 EC 02 2D 0D 42 08  // .B..=....E..-.B.
    DE10: 00 43 DC 02 03 24 41 04 00 3E 8D 41 28 00 45 2B  // .C...$A..>.A(.E+
    DE20: 03 3E 8D 41 3C 00 45 2E 03 03 24 41 05 00 3E 8D  // .>.A<.E...$A..>.
    DE30: 41 50 00 45 2B 03 3E 8D 41 78 00 45 2E 03 03 24  // AP.E+.>.Ax.E...$
    DE40: 41 06 00 3E 8D 41 78 00 45 2B 03 3E 8D 41 B4 00  // A..>.Ax.E+.>.A..
    DE50: 45 2E 03 43 39 02 66 1A 03 02 42 00 3B 05 A0 4C  // E..C9.f...B.;..L
    DE60: 00 00 04 62 00 41 03 8C 41 06 00 03 25 41 00 3E  // ...b.A..A...%A.>
    DE70: 8D 41 AB 09 45 6B 03 03 25 41 20 3E 8D 41 36 10  // .A..Ek..%A >.A6.
    DE80: 45 6B 03 03 25 41 40 3E 8D 41 A8 16 45 6B 03 03  // Ek..%A@>.A..Ek..
    DE90: 25 41 60 0F 25 41 80 03 A4 41 09 00 4C A5 41 01  // %A`.%A...A..L.A.
    DEA0: 49 8A 03 0F 25 41 10 3E E5 40 01 44 8A 03 09 25  // I...%A.>.@.D...%
    DEB0: 41 7F 3B 05 9C 4C 00 00 04 62 00 41 03 05 00 80  // A.;..L...b.A....
    DEC0: 4C 00 00 02 21 01 00 02 E9 01 00 56 00 41 03 0A  // L...!......V.A..
    DED0: 41 00 3B 02 41 03 03 41 00 3E 05 41 FF FF FF FF  // A.;.A..A.>.A....
    DEE0: 44 FA 03 3B 05 00 4C 00 00 04 05 01 F0 03 80 61  // D..;..L........a
    DEF0: 04 02 02 41 02 05 00 04 4C 00 00 55 10 01 52 4E  // ...A....L..U..RN
    DF00: 3D 65 01 00 44 EF 03 51 C8 51 C8 2D A5 00 01 3E  // =e..D..Q.Q.-...>
    DF10: A5 00 07 45 A3 03 5B 2D 0D 00 04 00 56 18 00 43  // ...E..[-....V..C
    DF20: A3 03 5B 7A 80 00 AC 0D 00 00 0D 1A 27 00 94 11  // ..[z........'...
    DF30: 00 00 08 10 18 00 7C 15 00 00 0A 14 1E 00 58 1B  // ......|.......X.
    DF40: 00 00 0D 1A 27 00 28 23 00 00 08 10 18 00 F8 2A  // ....'.(#.......*
    DF50: 00 00 0A 14 1E 00 4C 36 00 00 0D 1A 27 00 50 46  // ......L6....'.PF
    DF60: 00 00 08 10 18 00 01 1E 00 00 02 5A 00 00 03 0C  // ...........Z....
    DF70: 00 00 04 0C 00 00 05 5A 00 00 06 1E 00 00 07 7D  // .......Z.......}
    DF80: 00 00 08 20 00 00 09 01 00 00 0A 0C 00 00 0B 00  // ... ............
    DF90: 00 00 0C 06 00 00 0E 38 00 00 10 00 00 00 0D 01  // .......8........
    DFA0: 00 00 FF FF FF FF 59 09 01 05 08 08 37 00 00 03  // ......Y.....7...
    DFB0: 01 46 02 56 18 46 03 B1 46 00 15 1D 46 04 56 00  // .F.V.F..F...F.V.
    DFC0: 00 03 31 00 00 15 0D 00 03 42 39 00 63 07 92 05  // ..1......B9.c...
    DFD0: 63 01 57 00 63 00 50 04 63 0B E9 05 63 03 BA 07  // c.W.c.P.c...c...
    DFE0: 63 02 29 08 63 04 4E 08 63 06 9D 07 63 05 97 07  // c.).c.N.c...c...
    DFF0: 63 0C DE 08 63 0D 01 09 5A 5A 43 8E 05 02 31 02  // c...c...ZZC...1.
    E000: 00 52 14 01 62 50 1C 46 01 B1 50 1C 01 03 39 41  // .R..bP.F..P...9A
    E010: 01 09 25 41 70 3E 25 41 00 44 7F 00 33 25 41 10  // ..%Ap>%A.D..3%A.
    E020: 01 E2 50 1C 41 3D A5 01 05 44 E2 00 3D A5 01 00  // ..P.A=...D..=...
    E030: 44 E2 00 3D A5 01 01 49 B5 00 02 25 01 04 4A A5  // D..=...I...%..J.
    E040: 00 1C 01 44 AC 00 02 25 01 08 1A 0D 00 01 0E E5  // ...D...%........
    E050: 01 02 01 0D 8D 1C 0F 00 43 04 01 3D 25 01 04 47  // ........C..=%..G
    E060: C1 00 0D A5 00 1C 01 3D A5 01 03 49 D9 00 3D 0D  // .......=...I..=.
    E070: 00 D0 39 45 D9 00 01 0D 8D 1C 0F 00 43 04 01 01  // ..9E........C...
    E080: 0D 8D 1C 0F 01 43 04 01 02 A5 01 00 0E E5 01 02  // .....C..........
    E090: 03 21 43 01 03 02 40 44 33 25 40 01 32 25 01 01  // .!C...@D3%@.2%..
    E0A0: 01 21 C2 1C 01 01 0A 8D 1C 40 03 1A 48 46 4A 25  // .!.......@..HFJ%
    E0B0: 86 19 01 49 8E 05 66 FF 2D 0D 42 2D 09 56 00 40  // ...I..f.-.B-.V.@
    E0C0: 20 A5 00 08 2D 0A 42 40 07 A5 8A 19 FE 03 04 40  //  ...-.B@.......@
    E0D0: 00 00 3D A5 01 01 49 3A 01 03 05 40 02 01 00 03  // ..=...I:...@....
    E0E0: 0D 25 8A 19 01 01 02 8E 19 40 01 64 8D 19 04 00  // .%.......@.d....
    E0F0: 07 A5 8D 19 FC 0D 64 87 19 05 00 3D 25 01 04 47  // ......d....=%..G
    E100: 70 01 3E 1A 48 46 49 70 01 2D 0D 48 10 00 0D A5  // p.>.HFIp.-.H....
    E110: 8A 19 01 43 3A 01 03 1A 48 46 3D A5 01 00 44 18  // ...C:...HF=...D.
    E120: 02 66 07 2D 0C 42 08 00 02 01 02 00 02 F1 02 01  // .f.-.B..........
    E130: 52 1C 03 1A 48 46 01 04 80 19 04 00 01 04 81 19  // R...HF..........
    E140: 08 00 01 04 82 19 0C 00 01 04 83 19 10 00 01 0C  // ................
    E150: 8B 19 14 00 01 0C 8F 19 16 00 01 4C 84 19 18 00  // ...........L....
    E160: 03 0A 48 00 03 04 01 1A 00 09 05 01 FE FF FF 7F  // ..H.............
    E170: 0F 05 01 02 00 00 00 01 02 C0 19 01 03 04 01 1E  // ................
    E180: 00 0F 05 01 00 00 02 00 01 02 C1 19 01 03 04 01  // ................
    E190: 22 00 0F 05 01 00 40 00 40 01 02 C2 19 01 03 04  // ".....@.@.......
    E1A0: 01 26 00 0F 05 01 00 40 00 00 01 02 C3 19 01 01  // .&.....@........
    E1B0: 04 C6 19 2A 00 01 04 C7 19 2E 00 43 1E 02 56 08  // ...*.......C..V.
    E1C0: 46 43 E9 05 03 1A 48 46 07 25 84 19 FE 03 0A 48  // FC....HF.%.....H
    E1D0: 00 07 25 C0 19 FD 07 25 C1 19 FB 03 1A 48 46 07  // ..%....%.....HF.
    E1E0: 25 84 19 FD 51 05 03 0A 48 00 07 A5 C1 19 FD 51  // %...Q...H......Q
    E1F0: 03 0D 25 C0 19 01 51 03 07 05 C2 19 FE BF FE BF  // ..%...Q.........
    E200: 51 01 4A A5 C5 19 80 44 5A 02 4A E5 C5 19 01 49  // Q.J....DZ.J....I
    E210: 8E 05 0D E5 C0 19 80 51 03 07 0D C3 19 FE BF 51  // .......Q.......Q
    E220: 01 4A E5 C5 19 40 44 79 02 4A E5 C5 19 80 49 8E  // .J...@Dy.J....I.
    E230: 05 0D 25 C3 19 01 51 01 4A A5 C5 19 02 44 90 02  // ..%...Q.J....D..
    E240: 4A A5 C5 19 04 49 8E 05 0D 05 C2 19 01 00 01 00  // J....I..........
    E250: 51 01 03 1A 48 46 0D 25 8F 19 04 03 0A 48 00 0D  // Q...HF.%.....H..
    E260: 25 C1 19 04 03 20 41 C5 19 09 25 41 AA 3E 25 41  // %.... A...%A.>%A
    E270: AA 49 BE 02 03 1A 48 46 3A 00 00 3D A5 01 01 49  // .I....HF:..=...I
    E280: E4 02 56 08 48 0D 25 19 19 01 66 FF 2D 0D 42 3D  // ..V.H.%...f.-.B=
    E290: 09 56 08 41 03 39 41 01 09 25 41 0C 2D 0A 42 41  // .V.A.9A..%A.-.BA
    E2A0: 03 0C 46 02 00 3E 0D 41 0C 00 44 20 03 03 0C 48  // ..F..>.A..D ...H
    E2B0: 00 00 3D A5 00 00 46 1B 03 0D 25 06 17 01 43 20  // ..=...F...%...C 
    E2C0: 03 0D 25 06 17 04 66 07 2D 0C 42 0C 00 02 01 02  // ..%...f.-.B.....
    E2D0: 00 02 F1 02 01 52 1C 03 1A 48 46 03 00 40 87 19  // .....R...HF..@..
    E2E0: 03 8C 40 0C 00 5E 0A 40 00 20 46 3D A5 01 01 47  // ..@..^.@. F=...G
    E2F0: 57 03 4B E5 01 02 44 57 03 0F 25 40 02 01 04 85  // W.K...DW..%@....
    E300: 19 04 00 01 02 87 19 40 03 04 41 08 00 5E 25 41  // .......@..A..^%A
    E310: 07 07 01 02 86 19 41 51 0F 07 25 86 19 FD 51 04  // ......AQ..%...Q.
    E320: 01 24 86 19 08 00 51 04 0D 25 84 19 02 3D 25 01  // .$....Q..%...=%.
    E330: 04 47 93 03 0D 25 94 19 02 3A 00 00 03 31 43 00  // .G...%...:...1C.
    E340: 03 02 41 44 01 22 66 01 41 51 05 03 1A 48 46 07  // ..AD."f.AQ...HF.
    E350: 25 84 19 FD 3D 25 01 04 47 BA 03 07 25 94 19 FD  // %...=%..G...%...
    E360: 3A 00 00 03 31 43 00 03 02 41 45 07 22 66 01 41  // :...1C...AE."f.A
    E370: 56 08 48 03 31 48 00 0D 25 60 01 01 51 01 3A 00  // V.H.1H..%`..Q.:.
    E380: 00 54 20 66 01 51 0A 03 1A 48 46 01 A5 8D 19 10  // .T f.Q...HF.....
    E390: 3D 25 01 04 47 F5 03 54 30 9D 19 02 31 02 00 52  // =%..G..T0...1..R
    E3A0: 14 0D 25 51 1C 01 51 0A 03 1A 48 46 0D 25 8D 19  // ..%Q..Q...HF.%..
    E3B0: 01 51 0A 0D 65 8A 19 10 3D 25 01 04 47 27 04 51  // .Q..e...=%..G'.Q
    E3C0: C8 0D 25 9D 19 01 51 0A 0D 65 9A 19 10 3A 00 00  // ..%...Q..e...:..
    E3D0: 3D A5 01 01 49 8E 05 4A A5 CB 05 01 44 42 04 5C  // =...I..J....DB.\
    E3E0: E5 19 19 FE 02 43 8E 05 07 8D 19 19 FD FD 0D 25  // .....C.........%
    E3F0: 19 19 10 43 8E 05 02 31 02 00 52 14 4A 25 51 1C  // ...C...1..R.J%Q.
    E400: 01 44 8E 05 03 70 46 00 1C 3C A5 50 1C 01 44 AD  // .D...pF..<.P..D.
    E410: 04 3C A5 50 1C 02 44 7B 04 3C A5 50 1C 03 49 89  // .<.P..D{.<.P..I.
    E420: 04 54 00 51 1C 50 02 07 A5 00 1C FE 43 C2 04 03  // .T.Q.P......C...
    E430: 31 43 00 4A 62 50 1C 44 44 C2 04 54 08 C3 1C 51  // 1C.JbP.DD..T...Q
    E440: C8 0D 25 C4 1C 01 51 32 54 20 C0 1C 54 20 D1 1C  // ..%...Q2T ..T ..
    E450: 43 C2 04 56 08 48 07 05 19 19 EF FF FD FD 50 01  // C..V.H........P.
    E460: 3C 65 1A 19 09 49 B8 04 03 1A 48 46 07 25 8F 19  // <e...I....HF.%..
    E470: FB 54 00 8D 1C 07 65 8A 19 EF 07 A5 8D 19 8F 54  // .T....e........T
    E480: 00 83 19 54 00 82 19 4C 65 46 01 44 FA 04 07 65  // ...T...LeF.D...e
    E490: 9A 19 EF 07 A5 9D 19 8F 54 00 93 19 54 00 92 19  // ........T...T...
    E4A0: 02 31 02 00 52 14 54 20 51 1C 54 28 50 1C 56 08  // .1..R.T Q.T(P.V.
    E4B0: 48 03 31 48 00 07 25 60 01 FE 03 1A 48 46 07 25  // H.1H..%`....HF.%
    E4C0: 86 19 07 51 0A 07 25 86 19 FE 51 0A 03 0A 48 00  // ...Q..%...Q...H.
    E4D0: 07 25 C0 19 FE 51 01 07 E5 C0 19 7F 51 01 0D 05  // .%...Q......Q...
    E4E0: C2 19 01 00 01 00 0D 25 C3 19 01 51 0A 0D 25 C0  // .......%...Q..%.
    E4F0: 19 02 03 1A 48 46 0D 25 84 19 02 51 28 03 0A 48  // ....HF.%...Q(..H
    E500: 00 0D A5 C1 19 02 51 0A 0D 05 C2 19 00 40 00 40  // ......Q......@.@
    E510: 0D 65 C3 19 40 03 1A 48 46 0D 25 84 19 01 4C 65  // .e..@..HF.%...Le
    E520: 46 01 44 8E 05 56 28 46 2D 0D 48 10 00 03 8A 46  // F.D..V(F-.H....F
    E530: 48 43 26 05 3A 00 00 5B 01 0D 1B 19 9F 0F 66 06  // HC&.:..[......f.
    E540: 3D 65 01 14 49 D0 05 01 05 1C 19 0C 14 19 00 01  // =e..I...........
    E550: 05 1D 19 7D 00 00 00 66 06 01 4C 1D 19 39 00 03  // ...}...f..L..9..
    E560: 24 46 42 00 3E 25 46 00 44 CA 05 01 25 1D 19 00  // $FB.>%F.D...%...
    E570: 0D E5 19 19 02 5B 3D 65 01 0E 49 8E 05 01 04 1C  // .....[=e..I.....
    E580: 19 34 00 01 04 1D 19 38 00 01 E5 1D 19 01 5B 09  // .4.....8......[.
    E590: 65 46 1B 66 FF 2D 0D 42 4D 09 56 00 40 3E 64 46  // eF.f.-.BM.V.@>dF
    E5A0: 00 00 44 10 06 2D 25 40 01 2D 0D 42 01 00 3E 25  // ..D..-%@.-.B..>%
    E5B0: 40 0A 45 F7 05 5B 56 08 48 03 22 43 40 03 02 41  // @.E..[V.H."C@..A
    E5C0: 44 03 0A 46 41 3D 0D 00 48 3F 44 59 06 15 05 41  // D..FA=..H?DY...A
    E5D0: 0A 3D 0D 00 78 69 44 59 06 15 05 41 0A 3D 0D 00  // .=..xiDY...A.=..
    E5E0: F0 D2 44 59 06 3D 0D 00 90 7E 49 8F 07 15 05 41  // ..DY.=...~I....A
    E5F0: 0A 3E 25 40 02 45 59 06 1B 0D 46 02 43 5C 06 56  // .>%@.EY...F.C\.V
    E600: 08 46 66 07 2D 0C 42 04 00 55 30 01 03 31 43 00  // .Ff.-.B..U0..1C.
    E610: 03 22 40 44 3D A4 01 00 00 49 7E 06 4C 24 40 01  // ."@D=....I~.L$@.
    E620: 00 49 86 06 2D 0C 42 02 00 43 6E 06 54 00 00 00  // .I..-.B..Cn.T...
    E630: 2D 0D 42 04 00 03 04 40 00 00 3E 0D 40 00 00 44  // -.B....@..>.@..D
    E640: 8F 07 2D 8A 40 42 4C 04 41 04 00 49 B8 06 4C 24  // ..-.@BL.A..I..L$
    E650: 46 08 00 49 B8 06 2D 0D 42 09 00 43 A0 06 3E 0D  // F..I..-.B..C..>.
    E660: 40 C0 19 48 C7 06 2D 1A 40 46 43 7D 07 2D 0A 40  // @..H..-.@FC}.-.@
    E670: 00 3D E5 00 01 49 7D 07 3E 0D 40 C0 19 44 E2 06  // .=...I}.>.@..D..
    E680: 3E 0D 40 C8 19 49 02 07 01 0A 00 00 40 03 04 01  // >.@..I......@...
    E690: 09 00 09 05 01 FE FF FF 7F 0F 05 01 02 00 00 00  // ................
    E6A0: 01 02 01 00 01 43 88 07 3E 0D 40 C1 19 44 12 07  // .....C..>.@..D..
    E6B0: 3E 0D 40 C9 19 49 2B 07 01 0A 00 00 40 03 04 01  // >.@..I+.....@...
    E6C0: 09 00 0F 05 01 00 00 02 00 01 02 01 00 01 43 88  // ..............C.
    E6D0: 07 3E 0D 40 C2 19 44 3B 07 3E 0D 40 CA 19 49 54  // .>.@..D;.>.@..IT
    E6E0: 07 01 0A 00 00 40 03 04 01 09 00 0F 05 01 00 40  // .....@.........@
    E6F0: 00 40 01 02 01 00 01 43 88 07 3E 0D 40 C3 19 44  // .@.....C..>.@..D
    E700: 64 07 3E 0D 40 CB 19 49 7D 07 01 0A 00 00 40 03  // d.>.@..I}.....@.
    E710: 04 01 09 00 0F 05 01 00 40 00 00 01 02 01 00 01  // ........@.......
    E720: 43 88 07 01 0A 00 00 40 01 04 01 00 09 00 03 1A  // C......@........
    E730: 42 40 43 8F 06 3D E5 00 01 44 1E 02 5B 56 00 41  // B@C..=...D..[V.A
    E740: 43 A5 07 03 25 41 10 03 65 41 01 3D A5 01 01 44  // C...%A..eA.=...D
    E750: AD 07 5B 5C 62 8A 19 EF 41 5C 62 9A 19 EF 41 5B  // ..[\b...A\b...A[
    E760: 4A A5 CB 05 01 49 8E 05 4A 25 19 19 01 44 8E 05  // J....I..J%...D..
    E770: 4A 25 1A 19 10 44 CA 07 4A E5 19 19 02 49 E5 07  // J%...D..J....I..
    E780: 4A 25 1A 19 08 49 8E 05 43 19 08 4A E5 19 19 01  // J%...I..C..J....
    E790: 49 8E 05 4A 25 19 19 10 44 19 08 0D A5 19 19 03  // I..J%...D.......
    E7A0: 0D 65 19 19 03 01 0D 1B 19 00 00 5C 25 19 19 EF  // .e.........\%...
    E7B0: 01 4A 25 1A 19 10 44 0B 08 01 0D 1B 19 9F 0F 07  // .J%...D.........
    E7C0: E5 19 19 FC 0D E5 1D 19 01 0D 25 19 19 11 5B 66  // ..........%...[f
    E7D0: 06 03 24 46 42 00 3E 25 46 00 49 8E 05 4A 25 19  // ..$FB.>%F.I..J%.
    E7E0: 19 01 44 8E 05 4A 25 1A 19 10 44 3F 08 5C E5 19  // ..D..J%...D?.\..
    E7F0: 19 FE 02 5B 4A 65 D0 05 02 44 5B 08 0D 25 21 19  // ...[Je...D[..%!.
    E800: 01 66 06 56 00 41 03 0C 41 32 00 3E 0D 41 00 00  // .f.V.A..A2.>.A..
    E810: 44 DD 08 03 05 46 00 36 6E 01 21 05 41 FF 0F 00  // D....F.6n.!.A...
    E820: 00 27 02 46 40 3E 05 41 00 00 00 00 44 8E 08 2D  // .'.F@>.A....D..-
    E830: 0D 40 01 00 01 8A 1B 19 40 56 00 41 03 0C 41 32  // .@......@V.A..A2
    E840: 00 21 02 40 41 27 02 46 40 01 A5 20 19 0C 01 0A  // .!.@A'.F@.. ....
    E850: 20 19 40 15 05 40 04 56 00 41 03 28 41 CB 05 2D  //  .@..@.V.A.(A..-
    E860: 0D 41 01 00 21 02 40 41 1B 05 40 08 01 0A 1E 19  // .A..!.@A..@.....
    E870: 40 0D E5 1E 19 C0 07 25 21 19 FE 4A 65 21 19 01  // @......%!..Je!..
    E880: 49 D5 08 5B 4A 25 19 19 01 44 F6 08 4A 25 19 19  // I..[J%...D..J%..
    E890: 10 49 8E 05 4A 25 1A 19 10 44 EE 08 07 E5 1D 19  // .I..J%...D......
    E8A0: FE 0D 25 19 19 11 5B 4A 25 19 19 01 44 8E 05 4A  // ..%...[J%...D..J
    E8B0: 25 19 19 10 44 8E 05 4A 25 1A 19 10 44 11 09 07  // %...D..J%...D...
    E8C0: A5 19 19 FC 07 65 19 19 FC 5C 25 19 19 EF 01 5B  // .....e...\%....[
    E8D0: 7A 2C 00 00 01 02 03 01 00 00 00 00 01 02 03 01  // z,..............
    E8E0: 00 00 00 14 00 04 05 28 00 08 05 00 00 00 05 00  // .......(........
    E8F0: 00 20 0A 00 01 02 03 08 09 0A 10 11 18 FF FF 00  // . ..............
    E900: 25 02 01 02 00 08 37 00 00 3D 0D 00 00 00 44 A7  // %.....7..=....D.
    E910: 01 56 00 41 03 21 41 01 09 25 41 0F 15 0D 41 02  // .V.A.!A..%A...A.
    E920: 03 0A 40 42 66 FF 2D 0D 42 0D 02 2D 0A 42 41 03  // ..@Bf.-.B..-.BA.
    E930: 0C 48 02 00 0D A5 4C 19 01 54 08 4C 19 03 0C 48  // .H....L..T.L...H
    E940: 00 00 03 F9 41 01 15 3D 41 04 5C BA 80 18 8F 41  // ....A..=A.\....A
    E950: 03 0A 42 40 0D 0D 80 18 01 01 56 00 41 03 09 41  // ..B@......V.A..A
    E960: 00 3B 02 41 03 3B 41 00 1B 25 41 04 01 A2 81 18  // .;.A.;A..%A.....
    E970: 41 03 69 41 01 15 2D 41 04 01 2A 81 18 41 56 00  // A.iA..-A..*..AV.
    E980: 40 0F E5 40 80 03 73 40 00 01 02 86 18 40 56 00  // @..@..s@.....@V.
    E990: 40 03 6B 40 00 01 02 86 18 40 03 63 40 00 01 02  // @.k@.....@.c@...
    E9A0: 86 18 40 03 7B 40 00 09 65 40 0F 01 02 86 18 40  // ..@.{@..e@.....@
    E9B0: 3E 25 41 04 47 E9 00 33 25 41 04 2D 05 46 04 00  // >%A.G..3%A.-.F..
    E9C0: 00 00 03 63 40 00 01 02 86 18 40 03 6B 40 00 01  // ...c@.....@.k@..
    E9D0: 02 86 18 40 03 73 40 00 01 02 86 18 40 03 7B 40  // ...@.s@.....@.{@
    E9E0: 00 01 02 86 18 40 43 B0 00 0D 25 83 18 02 0D 25  // .....@C...%....%
    E9F0: 81 18 01 03 29 40 01 21 25 40 0A 2D 25 40 32 4A  // ....)@.!%@.-%@2J
    EA00: 25 84 18 01 49 1B 01 51 0A 33 25 40 01 3E 25 40  // %...I..Q.3%@.>%@
    EA10: 00 49 FF 00 02 65 01 01 43 A3 01 4A 05 84 18 F0  // .I...e..C..J....
    EA20: 8F FF 00 44 2D 01 02 65 01 02 43 A3 01 01 05 86  // ...D-..e..C.....
    EA30: 18 01 00 00 80 03 00 40 86 18 02 6A 01 40 02 B8  // .......@...j.@..
    EA40: 01 84 18 08 A5 01 1F 3D A5 01 00 46 55 01 02 65  // .......=...FU..e
    EA50: 01 03 43 A3 01 32 A5 01 01 3D 8D 00 00 00 44 A3  // ..C..2...=....D.
    EA60: 01 3D A5 01 00 44 A3 01 03 31 41 01 03 19 40 00  // .=...D...1A...@.
    EA70: 56 18 40 3B 02 40 03 28 40 86 18 03 68 40 86 18  // V.@;.@.(@...h@..
    EA80: 03 A8 40 86 18 03 E8 40 86 18 04 02 00 40 3E 25  // ..@....@.....@>%
    EA90: 41 04 47 A3 01 33 25 41 04 2D 05 46 04 00 00 00  // A.G..3%A.-.F....
    EAA0: 43 76 01 3A 00 00 5B 66 FF 2D 0D 42 0D 02 03 0C  // Cv.:..[f.-.B....
    EAB0: 48 00 00 01 8D 88 18 18 00 01 05 89 18 00 1C 02  // H...............
    EAC0: 00 01 05 8A 18 10 12 3D 12 2D 0D 42 04 00 2C 25  // .......=.-.B..,%
    EAD0: 00 01 3D 25 00 06 49 AE 01 56 08 48 03 25 41 10  // ..=%..I..V.H.%A.
    EAE0: 0D 65 7F 19 40 07 65 7F 19 BF 33 25 41 01 3E 25  // .e..@.e...3%A.>%
    EAF0: 41 00 49 E0 01 0D 25 0B 19 01 54 30 0B 19 0D 25  // A.I...%...T0...%
    EB00: 0C 19 01 54 30 0C 19 51 32 5B 7A 18 00 00 00 00  // ...T0..Q2[z.....
    EB10: 00 14 00 04 00 28 00 08 00 40 00 0C 00 54 00 10  // .....(...@...T..
    EB20: 00 68 00 14 00 00 5C 00 01 02 00 04 02 25 01 04  // .h....\......%..
    EB30: 03 31 41 00 09 0D 41 0F 00 15 0D 41 01 66 FF 2D  // .1A...A....A.f.-
    EB40: 0D 42 50 00 2D 0A 42 41 03 0C 48 00 00 07 A5 4C  // .BP.-.BA..H....L
    EB50: 19 FE 01 0D 4C 19 11 11 50 02 4A 0D 4F 19 01 00  // ....L...P.J.O...
    EB60: 49 41 00 02 25 01 13 54 08 4C 19 54 00 4E 19 3A  // IA..%..T.L.T.N.:
    EB70: 00 00 5B 7A 0C 00 00 00 04 00 08 00 0C 00 10 00  // ..[z............
    EB80: 14 00 38 00 01 01 00 00 03 0C 41 00 00 2D 0D 42  // ..8.......A..-.B
    EB90: 02 00 03 31 43 00 03 A2 41 44 3D E4 00 02 00 49  // ...1C...AD=....I
    EBA0: 30 00 4C A4 41 03 00 44 30 00 3D 0C 00 00 00 47  // 0.L.A..D0.=....G
    EBB0: 37 00 2D 0A 42 41 43 18 00 5B FF FF FF FF FF FF  // 7.-.BAC..[......
    EBC0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EBD0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EBE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EBF0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC00: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC10: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC20: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC30: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC40: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC50: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    EC60: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    EC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    EC80: 00 00 00 00                                      // ....


