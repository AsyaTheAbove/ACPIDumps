
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20190215
Copyright (c) 2000 - 2019 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00000031  0x01  "APPLE "  "SsdtS3  "  0x00001000  "INTL"   0x20140424
 02)  MCFG  0x0000003C  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 03)  APIC  0x000000BC  0x02  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 04)  ECDT  0x00000053  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 05)  SSDT  0x000007FD  0x02  "APPLE "  "PEG0GFX0"  0x00001000  "INTL"   0x20140424
 06)  VFCT  0x0000F284  0x01  "APPLE "  "Apple00 "  0x00000001  "AMD "   0x31504F47
 07)  SSDT  0x000005F1  0x02  "PmRef "  "Cpu0Ist "  0x00003000  "INTL"   0x20140424
 08)  UEFI  0x00000042  0x01  "INTEL "  "EDK2    "  0x00000002  "    "   0x01000013
 09)  DSDT  0x00008764  0x02  "APPLE "  "MacBookP"  0x00140003  "INTL"   0x20140424
 10)  SSDT  0x00009C80  0x02  "APPLE "  "TbtPEG12"  0x00001000  "INTL"   0x20140424
 11)  SBST  0x00000030  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 12)  SSDT  0x00000119  0x02  "PmRef "  "ApCst   "  0x00003000  "INTL"   0x20140424
 13)  SSDT  0x000000DD  0x01  "APPLE "  "SataAhci"  0x00001000  "INTL"   0x20140424
 14)  SSDT  0x000005AA  0x02  "PmRef "  "ApIst   "  0x00003000  "INTL"   0x20140424
 15)  SSDT  0x00000024  0x01  "APPLE "  "PEG0SSD0"  0x00001000  "INTL"   0x20140424
 16)  DMAR  0x00000160  0x01  "APPLE "  "KBL     "  0x00000001  "INTL"   0x00000001
 17)  FACP  0x000000F4  0x05  "APPLE "  "Apple00 "  0x00000000  "Loki"   0x0000005F
 18)  SSDT  0x00000024  0x01  "APPLE "  "SmcDppt "  0x00001000  "INTL"   0x20140424
 19)  SSDT  0x00000FFC  0x02  "APPLE "  "Xhci    "  0x00001000  "INTL"   0x20140424
 20)  SSDT  0x00000F16  0x02  "CpuRef"  "CpuSsdt "  0x00003000  "INTL"   0x20140424
 21)  HPET  0x00000038  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 22)  SSDT  0x000000B8  0x01  "APPLE "  "Sdxc    "  0x00001000  "INTL"   0x20140424
 23)  FACS  0x00000040  0x01
 24)  SSDT  0x00000295  0x02  "PmRef "  "Cpu0Cst "  0x00003001  "INTL"   0x20140424

Found 24 ACPI tables in /root/HW_PROBE/LATEST/hw.info/logs/acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 000000BC
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 41
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 01
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 02
[037h 0055   1]                Local Apic ID : 02
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 03
[03Fh 0063   1]                Local Apic ID : 04
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 04
[047h 0071   1]                Local Apic ID : 06
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 05
[04Fh 0079   1]                Local Apic ID : 01
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 06
[057h 0087   1]                Local Apic ID : 03
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 07
[05Fh 0095   1]                Local Apic ID : 05
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 08
[067h 0103   1]                Local Apic ID : 07
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 01 [I/O APIC]
[06Dh 0109   1]                       Length : 0C
[06Eh 0110   1]                  I/O Apic ID : 02
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]                      Address : FEC00000
[074h 0116   4]                    Interrupt : 00000000

[078h 0120   1]                Subtable Type : 02 [Interrupt Source Override]
[079h 0121   1]                       Length : 0A
[07Ah 0122   1]                          Bus : 00
[07Bh 0123   1]                       Source : 00
[07Ch 0124   4]                    Interrupt : 00000002
[080h 0128   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[082h 0130   1]                Subtable Type : 02 [Interrupt Source Override]
[083h 0131   1]                       Length : 0A
[084h 0132   1]                          Bus : 00
[085h 0133   1]                       Source : 09
[086h 0134   4]                    Interrupt : 00000009
[08Ah 0138   2]        Flags (decoded below) : 000D
                                    Polarity : 1
                                Trigger Mode : 3

[08Ch 0140   1]                Subtable Type : 04 [Local APIC NMI]
[08Dh 0141   1]                       Length : 06
[08Eh 0142   1]                 Processor ID : 01
[08Fh 0143   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[091h 0145   1]         Interrupt Input LINT : 01

[092h 0146   1]                Subtable Type : 04 [Local APIC NMI]
[093h 0147   1]                       Length : 06
[094h 0148   1]                 Processor ID : 02
[095h 0149   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[097h 0151   1]         Interrupt Input LINT : 01

[098h 0152   1]                Subtable Type : 04 [Local APIC NMI]
[099h 0153   1]                       Length : 06
[09Ah 0154   1]                 Processor ID : 03
[09Bh 0155   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[09Dh 0157   1]         Interrupt Input LINT : 01

[09Eh 0158   1]                Subtable Type : 04 [Local APIC NMI]
[09Fh 0159   1]                       Length : 06
[0A0h 0160   1]                 Processor ID : 04
[0A1h 0161   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0A3h 0163   1]         Interrupt Input LINT : 01

[0A4h 0164   1]                Subtable Type : 04 [Local APIC NMI]
[0A5h 0165   1]                       Length : 06
[0A6h 0166   1]                 Processor ID : 05
[0A7h 0167   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0A9h 0169   1]         Interrupt Input LINT : 01

[0AAh 0170   1]                Subtable Type : 04 [Local APIC NMI]
[0ABh 0171   1]                       Length : 06
[0ACh 0172   1]                 Processor ID : 06
[0ADh 0173   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0AFh 0175   1]         Interrupt Input LINT : 01

[0B0h 0176   1]                Subtable Type : 04 [Local APIC NMI]
[0B1h 0177   1]                       Length : 06
[0B2h 0178   1]                 Processor ID : 07
[0B3h 0179   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0B5h 0181   1]         Interrupt Input LINT : 01

[0B6h 0182   1]                Subtable Type : 04 [Local APIC NMI]
[0B7h 0183   1]                       Length : 06
[0B8h 0184   1]                 Processor ID : 08
[0B9h 0185   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0BBh 0187   1]         Interrupt Input LINT : 01

Raw Table Data: Length 188 (0xBC)

    0000: 41 50 49 43 BC 00 00 00 02 41 41 50 50 4C 45 20  // APIC.....AAPPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 00 E0 FE 01 00 00 00 00 08 01 00  // _...............
    0030: 01 00 00 00 00 08 02 02 01 00 00 00 00 08 03 04  // ................
    0040: 01 00 00 00 00 08 04 06 01 00 00 00 00 08 05 01  // ................
    0050: 01 00 00 00 00 08 06 03 01 00 00 00 00 08 07 05  // ................
    0060: 01 00 00 00 00 08 08 07 01 00 00 00 01 0C 02 00  // ................
    0070: 00 00 C0 FE 00 00 00 00 02 0A 00 00 02 00 00 00  // ................
    0080: 00 00 02 0A 00 09 09 00 00 00 0D 00 04 06 01 05  // ................
    0090: 00 01 04 06 02 05 00 01 04 06 03 05 00 01 04 06  // ................
    00A0: 04 05 00 01 04 06 05 05 00 01 04 06 06 05 00 01  // ................
    00B0: 04 06 07 05 00 01 04 06 08 05 00 01              // ............


DMAR
----
[000h 0000   4]                    Signature : "DMAR"    [DMA Remapping table]
[004h 0004   4]                 Table Length : 00000160
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 01
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "KBL "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "INTL"
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   1]           Host Address Width : 26
[025h 0037   1]                        Flags : 01
[026h 0038  10]                     Reserved : 00 00 00 00 00 00 00 00 00 00

[030h 0048   2]                Subtable Type : 0000 [Hardware Unit Definition]
[032h 0050   2]                       Length : 0018

[034h 0052   1]                        Flags : 00
[035h 0053   1]                     Reserved : 00
[036h 0054   2]           PCI Segment Number : 0000
[038h 0056   8]        Register Base Address : 00000000FED90000

[040h 0064   1]            Device Scope Type : 01 [PCI Endpoint Device]
[041h 0065   1]                 Entry Length : 08
[042h 0066   2]                     Reserved : 0000
[044h 0068   1]               Enumeration ID : 00
[045h 0069   1]               PCI Bus Number : 00

[046h 0070   2]                     PCI Path : 02,00


[048h 0072   2]                Subtable Type : 0000 [Hardware Unit Definition]
[04Ah 0074   2]                       Length : 0050

[04Ch 0076   1]                        Flags : 01
[04Dh 0077   1]                     Reserved : 00
[04Eh 0078   2]           PCI Segment Number : 0000
[050h 0080   8]        Register Base Address : 00000000FED91000

[058h 0088   1]            Device Scope Type : 03 [IOAPIC Device]
[059h 0089   1]                 Entry Length : 08
[05Ah 0090   2]                     Reserved : 0000
[05Ch 0092   1]               Enumeration ID : 02
[05Dh 0093   1]               PCI Bus Number : F0

[05Eh 0094   2]                     PCI Path : 1F,00


[060h 0096   1]            Device Scope Type : 04 [Message-capable HPET Device]
[061h 0097   1]                 Entry Length : 08
[062h 0098   2]                     Reserved : 0000
[064h 0100   1]               Enumeration ID : 00
[065h 0101   1]               PCI Bus Number : 00

[066h 0102   2]                     PCI Path : 1F,00


[068h 0104   1]            Device Scope Type : 05 [Namespace Device]
[069h 0105   1]                 Entry Length : 08
[06Ah 0106   2]                     Reserved : 0000
[06Ch 0108   1]               Enumeration ID : 01
[06Dh 0109   1]               PCI Bus Number : 00

[06Eh 0110   2]                     PCI Path : 15,00


[070h 0112   1]            Device Scope Type : 05 [Namespace Device]
[071h 0113   1]                 Entry Length : 08
[072h 0114   2]                     Reserved : 0000
[074h 0116   1]               Enumeration ID : 07
[075h 0117   1]               PCI Bus Number : 00

[076h 0118   2]                     PCI Path : 1E,02


[078h 0120   1]            Device Scope Type : 05 [Namespace Device]
[079h 0121   1]                 Entry Length : 08
[07Ah 0122   2]                     Reserved : 0000
[07Ch 0124   1]               Enumeration ID : 08
[07Dh 0125   1]               PCI Bus Number : 00

[07Eh 0126   2]                     PCI Path : 1E,03


[080h 0128   1]            Device Scope Type : 05 [Namespace Device]
[081h 0129   1]                 Entry Length : 08
[082h 0130   2]                     Reserved : 0000
[084h 0132   1]               Enumeration ID : 09
[085h 0133   1]               PCI Bus Number : 00

[086h 0134   2]                     PCI Path : 1E,00


[088h 0136   1]            Device Scope Type : 05 [Namespace Device]
[089h 0137   1]                 Entry Length : 08
[08Ah 0138   2]                     Reserved : 0000
[08Ch 0140   1]               Enumeration ID : 0A
[08Dh 0141   1]               PCI Bus Number : 00

[08Eh 0142   2]                     PCI Path : 1E,01


[090h 0144   1]            Device Scope Type : 05 [Namespace Device]
[091h 0145   1]                 Entry Length : 08
[092h 0146   2]                     Reserved : 0000
[094h 0148   1]               Enumeration ID : 0B
[095h 0149   1]               PCI Bus Number : 00

[096h 0150   2]                     PCI Path : 19,00


[098h 0152   2]                Subtable Type : 0001 [Reserved Memory Region]
[09Ah 0154   2]                       Length : 0020

[09Ch 0156   2]                     Reserved : 0000
[09Eh 0158   2]           PCI Segment Number : 0000
[0A0h 0160   8]                 Base Address : 000000007B800000
[0A8h 0168   8]          End Address (limit) : 000000007FFFFFFF

[0B0h 0176   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0B1h 0177   1]                 Entry Length : 08
[0B2h 0178   2]                     Reserved : 0000
[0B4h 0180   1]               Enumeration ID : 00
[0B5h 0181   1]               PCI Bus Number : 00

[0B6h 0182   2]                     PCI Path : 02,00


[0B8h 0184   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[0BAh 0186   2]                       Length : 001C

[0BCh 0188   3]                     Reserved : 000000
[0BFh 0191   1]                Device Number : 01
[0C0h 0192  15]                  Device Name : "\_SB.PCI0.I2C0"

[0D4h 0212   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[0D6h 0214   2]                       Length : 001C

[0D8h 0216   3]                     Reserved : 000000
[0DBh 0219   1]                Device Number : 07
[0DCh 0220  15]                  Device Name : "\_SB.PCI0.SPI0"

[0F0h 0240   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[0F2h 0242   2]                       Length : 001C

[0F4h 0244   3]                     Reserved : 000000
[0F7h 0247   1]                Device Number : 08
[0F8h 0248  15]                  Device Name : "\_SB.PCI0.SPI1"

[10Ch 0268   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[10Eh 0270   2]                       Length : 001C

[110h 0272   3]                     Reserved : 000000
[113h 0275   1]                Device Number : 09
[114h 0276  15]                  Device Name : "\_SB.PCI0.UA00"

[128h 0296   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[12Ah 0298   2]                       Length : 001C

[12Ch 0300   3]                     Reserved : 000000
[12Fh 0303   1]                Device Number : 0A
[130h 0304  15]                  Device Name : "\_SB.PCI0.UA01"

[144h 0324   2]                Subtable Type : 0004 [ACPI Namespace Device Declaration]
[146h 0326   2]                       Length : 001C

[148h 0328   3]                     Reserved : 000000
[14Bh 0331   1]                Device Number : 0B
[14Ch 0332  15]                  Device Name : "\_SB.PCI0.UA02"

Raw Table Data: Length 352 (0x160)

    0000: 44 4D 41 52 60 01 00 00 01 01 41 50 50 4C 45 20  // DMAR`.....APPLE 
    0010: 4B 42 4C 20 00 00 00 00 01 00 00 00 49 4E 54 4C  // KBL ........INTL
    0020: 01 00 00 00 26 01 00 00 00 00 00 00 00 00 00 00  // ....&...........
    0030: 00 00 18 00 00 00 00 00 00 00 D9 FE 00 00 00 00  // ................
    0040: 01 08 00 00 00 00 02 00 00 00 50 00 01 00 00 00  // ..........P.....
    0050: 00 10 D9 FE 00 00 00 00 03 08 00 00 02 F0 1F 00  // ................
    0060: 04 08 00 00 00 00 1F 00 05 08 00 00 01 00 15 00  // ................
    0070: 05 08 00 00 07 00 1E 02 05 08 00 00 08 00 1E 03  // ................
    0080: 05 08 00 00 09 00 1E 00 05 08 00 00 0A 00 1E 01  // ................
    0090: 05 08 00 00 0B 00 19 00 01 00 20 00 00 00 00 00  // .......... .....
    00A0: 00 00 80 7B 00 00 00 00 FF FF FF 7F 00 00 00 00  // ...{............
    00B0: 01 08 00 00 00 00 02 00 04 00 1C 00 00 00 00 01  // ................
    00C0: 5C 5F 53 42 2E 50 43 49 30 2E 49 32 43 30 00 00  // \_SB.PCI0.I2C0..
    00D0: 00 00 00 00 04 00 1C 00 00 00 00 07 5C 5F 53 42  // ............\_SB
    00E0: 2E 50 43 49 30 2E 53 50 49 30 00 00 00 00 00 00  // .PCI0.SPI0......
    00F0: 04 00 1C 00 00 00 00 08 5C 5F 53 42 2E 50 43 49  // ........\_SB.PCI
    0100: 30 2E 53 50 49 31 00 00 00 00 00 00 04 00 1C 00  // 0.SPI1..........
    0110: 00 00 00 09 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
    0120: 30 30 00 00 00 00 00 00 04 00 1C 00 00 00 00 0A  // 00..............
    0130: 5C 5F 53 42 2E 50 43 49 30 2E 55 41 30 31 00 00  // \_SB.PCI0.UA01..
    0140: 00 00 00 00 04 00 1C 00 00 00 00 0B 5C 5F 53 42  // ............\_SB
    0150: 2E 50 43 49 30 2E 55 41 30 32 00 00 00 00 00 00  // .PCI0.UA02......


DSDT
----
DefinitionBlock ("", "DSDT", 2, "APPLE ", "MacBookP", 0x00140003)
{
    /*
     * iASL Warning: There were 7 external control methods found during
     * disassembly, but only 0 were resolved (7 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.PEG0.GFX0, UnknownObj)
    External (_SB_.PCI0.PEG1.ICMB, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG1.UPSB.LSTX, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (_SB_.PCI0.PEG2.ICMB, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG2.UPSB.LSTX, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.TGPE, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.XHC1, UnknownObj)
    External (_SB_.PCI0.XHC1.USBM, IntObj)
    External (HDOS, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (HNOT, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (PDC0, UnknownObj)
    External (PDC1, UnknownObj)
    External (PDC2, UnknownObj)
    External (PDC3, UnknownObj)
    External (PDC4, UnknownObj)
    External (PDC5, UnknownObj)
    External (PDC6, UnknownObj)
    External (PDC7, UnknownObj)

    Name (SP2O, 0x4E)
    Name (SP1O, 0x164E)
    Name (IO1B, 0x0600)
    Name (IO1L, 0x70)
    Name (IO2B, 0x0680)
    Name (IO2L, 0x20)
    Name (IO3B, 0x0290)
    Name (IO3L, 0x10)
    Name (SP3O, 0x2E)
    Name (IO4B, 0x0A20)
    Name (IO4L, 0x20)
    Name (MCHB, 0xFED10000)
    Name (MCHL, 0x4000)
    Name (EGPB, 0xFED19000)
    Name (EGPL, 0x1000)
    Name (DMIB, 0xFED18000)
    Name (DMIL, 0x1000)
    Name (IFPB, 0xFED14000)
    Name (IFPL, 0x1000)
    Name (PEBS, 0xE0000000)
    Name (PELN, 0x04000000)
    Name (TTTB, 0xFED20000)
    Name (TTTL, 0x00020000)
    Name (SMBS, 0xEFA0)
    Name (SMBL, 0x10)
    Name (PBLK, 0x1810)
    Name (PMLN, 0xFF)
    Name (LVL2, 0x1814)
    Name (LVL3, 0x1815)
    Name (LVL4, 0x1816)
    Name (SMIP, 0xB2)
    Name (GPBS, 0x0800)
    Name (GPLN, 0x80)
    Name (APCB, 0xFEC00000)
    Name (APCL, 0x1000)
    Name (PM30, 0x1830)
    Name (SUSW, 0xFF)
    Name (HPTC, 0xFED1C404)
    Name (ACPH, 0xDE)
    Name (ASSB, Zero)
    Name (AOTB, Zero)
    Name (AAXB, Zero)
    Name (PEHP, One)
    Name (SHPC, One)
    Name (PEPM, One)
    Name (PEER, One)
    Name (PECS, One)
    Name (ITKE, Zero)
    Name (DSSP, Zero)
    Name (FHPP, One)
    Name (FMBL, One)
    Name (FDTP, 0x02)
    Name (BSH, Zero)
    Name (BEL, One)
    Name (BEH, 0x02)
    Name (BRH, 0x03)
    Name (BTF, 0x04)
    Name (BHC, 0x05)
    Name (BYB, 0x06)
    Name (BPH, 0x07)
    Name (BSHS, 0x08)
    Name (BELS, 0x09)
    Name (BRHS, 0x0A)
    Name (BTFS, 0x0B)
    Name (BEHS, 0x0C)
    Name (BPHS, 0x0D)
    Name (BTL, 0x10)
    Name (BOF, 0x20)
    Name (BEF, 0x21)
    Name (BLLE, 0x22)
    Name (BLLC, 0x23)
    Name (BLCA, 0x24)
    Name (TCGM, One)
    Name (TRTP, One)
    Name (TRTD, 0x02)
    Name (TRTI, 0x03)
    Name (GCDD, One)
    Name (DSTA, 0x0A)
    Name (DSLO, 0x0C)
    Name (DSLC, 0x0E)
    Name (PITS, 0x10)
    Name (SBCS, 0x12)
    Name (SALS, 0x13)
    Name (LSSS, 0x2A)
    Name (SOOT, 0x35)
    Name (PDBR, 0x4D)
    Name (WOWE, Zero)
    Name (TAPD, Zero)
    OperationRegion (GNVS, SystemMemory, 0x7AF7E918, 0x02CD)
    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        LIDS,   8, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x25), 
        REVN,   8, 
        Offset (0x28), 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        Offset (0x42), 
        MEFE,   8, 
        DSTS,   8, 
        Offset (0x46), 
        TPMP,   8, 
        TPME,   8, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        GTF0,   56, 
        GTF2,   56, 
        IDEM,   8, 
        GTF1,   56, 
        BDID,   8, 
        Offset (0x78), 
        OSCC,   8, 
        NEXP,   8, 
        SDGV,   8, 
        SDDV,   8, 
        Offset (0x81), 
        DSEN,   8, 
        ECON,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        ATMC,   8, 
        PTMC,   8, 
        ATRA,   8, 
        PTRA,   8, 
        PNHM,   32, 
        TBAB,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        ATPC,   8, 
        PTPC,   8, 
        PFLV,   8, 
        BREV,   8, 
        DPBM,   8, 
        DPCM,   8, 
        DPDM,   8, 
        SDID,   8, 
        BLCP,   8, 
        BLCC,   8, 
        LDSB,   8, 
        BLCT,   32, 
        BLCB,   32, 
        BICM,   8, 
        U2OP,   8, 
        Offset (0xB2), 
        NHIB,   32, 
        T2PB,   32, 
        GVNV,   32, 
        MM64,   8, 
        MFIX,   8, 
        TBUP,   32, 
        TBDB,   32, 
        TBNH,   32, 
        TBD3,   32, 
        TBD4,   32, 
        TBD5,   32, 
        TBD6,   32, 
        NVME,   8, 
        Offset (0xDE), 
        DFUW,   8, 
        SMCB,   32, 
        Offset (0x12C), 
        SARV,   32, 
        ASLB,   32, 
        IMON,   8, 
        IGDS,   8, 
        CADL,   8, 
        PADL,   8, 
        CSTE,   16, 
        NSTE,   16, 
        DID9,   32, 
        DIDA,   32, 
        DIDB,   32, 
        IBTT,   8, 
        IPAT,   8, 
        IPSC,   8, 
        IBLC,   8, 
        IBIA,   8, 
        ISSC,   8, 
        IPCF,   8, 
        IDMS,   8, 
        IF1E,   8, 
        HVCO,   8, 
        NXD1,   32, 
        NXD2,   32, 
        NXD3,   32, 
        NXD4,   32, 
        NXD5,   32, 
        NXD6,   32, 
        NXD7,   32, 
        NXD8,   32, 
        GSMI,   8, 
        PAVP,   8, 
        GLID,   8, 
        KSV0,   32, 
        KSV1,   8, 
        BBAR,   32, 
        BLCS,   8, 
        BRTL,   8, 
        ALSE,   8, 
        ALAF,   8, 
        LLOW,   8, 
        LHIH,   8, 
        ALFP,   8, 
        AUDA,   32, 
        AUDB,   32, 
        AUDC,   32, 
        DIDC,   32, 
        DIDD,   32, 
        DIDE,   32, 
        DIDF,   32, 
        CADR,   32, 
        CCNT,   8, 
        Offset (0x1F4), 
        SGMD,   8, 
        SGFL,   8, 
        PWOK,   8, 
        HLRS,   8, 
        PWEN,   8, 
        PRST,   8, 
        CPSP,   32, 
        EECP,   8, 
        EVCP,   16, 
        XBAS,   32, 
        GBAS,   16, 
        SGGP,   8, 
        NVGA,   32, 
        NVHA,   32, 
        AMDA,   32, 
        NDID,   8, 
        DID1,   32, 
        DID2,   32, 
        DID3,   32, 
        DID4,   32, 
        DID5,   32, 
        DID6,   32, 
        DID7,   32, 
        DID8,   32, 
        OBS1,   32, 
        OBS2,   32, 
        OBS3,   32, 
        OBS4,   32, 
        OBS5,   32, 
        OBS6,   32, 
        OBS7,   32, 
        OBS8,   32, 
        LTRA,   8, 
        OBFA,   8, 
        LTRB,   8, 
        OBFB,   8, 
        LTRC,   8, 
        OBFC,   8, 
        SMSL,   16, 
        SNSL,   16, 
        P0UB,   8, 
        P1UB,   8, 
        P2UB,   8, 
        EDPV,   8, 
        NXDX,   32, 
        DIDX,   32, 
        PCSL,   8, 
        SC7A,   8, 
        Offset (0x26E), 
        M64B,   64, 
        M64L,   64, 
        Offset (0x280), 
        DLHR,   16, 
        BIC1,   8, 
        BIC2,   8, 
        NHI1,   32, 
        T2P1,   32, 
        TUP1,   32, 
        TDB1,   32, 
        TNH1,   32, 
        TD11,   32, 
        TD21,   32, 
        TD41,   32, 
        NHI2,   32, 
        T2P2,   32, 
        TUP2,   32, 
        TDB2,   32, 
        TNH2,   32, 
        TD12,   32, 
        TD22,   32, 
        TD42,   32, 
        ABRV,   8, 
        ABID,   64
    }

    Scope (_SB)
    {
        Name (PR00, Package (0x21)
        {
            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })
        Name (AR00, Package (0x2D)
        {
            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                One, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                0x02, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })
        Name (PR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR01, Package (0x0C)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR01, Package (0x0C)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x02, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x03, 
                Zero, 
                0x15
            }
        })
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,7,10,11,12,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00 ())
                }

                Return (PR00 ())
            }

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)
            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                    ,   4, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }

            OperationRegion (MCHT, SystemMemory, 0xFED10000, 0x6000)
            Field (MCHT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x5994), 
                RPSL,   8, 
                Offset (0x5998), 
                RP0C,   8, 
                RP1C,   8, 
                RPNC,   8
            }

            Name (BUF0, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xFEAFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFEB00000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (PM1L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y00._LEN, C0LN)  // _LEN: Length
                    C0LN = Zero
                }

                If ((PM1L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y00._RW, C0RW)  // _RW_: Read-Write Status
                    C0RW = Zero
                }

                If (PM1H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C4LN)  // _LEN: Length
                    C4LN = Zero
                }

                If ((PM1H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C4RW)  // _RW_: Read-Write Status
                    C4RW = Zero
                }

                If (PM2L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C8LN)  // _LEN: Length
                    C8LN = Zero
                }

                If ((PM2L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C8RW)  // _RW_: Read-Write Status
                    C8RW = Zero
                }

                If (PM2H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, CCLN)  // _LEN: Length
                    CCLN = Zero
                }

                If ((PM2H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, CCRW)  // _RW_: Read-Write Status
                    CCRW = Zero
                }

                If (PM3L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, D0LN)  // _LEN: Length
                    D0LN = Zero
                }

                If ((PM3L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, D0RW)  // _RW_: Read-Write Status
                    D0RW = Zero
                }

                If (PM3H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D4LN)  // _LEN: Length
                    D4LN = Zero
                }

                If ((PM3H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D4RW)  // _RW_: Read-Write Status
                    D4RW = Zero
                }

                If (PM4L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D8LN)  // _LEN: Length
                    D8LN = Zero
                }

                If ((PM4L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D8RW)  // _RW_: Read-Write Status
                    D8RW = Zero
                }

                If (PM4H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, DCLN)  // _LEN: Length
                    DCLN = Zero
                }

                If ((PM4H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, DCRW)  // _RW_: Read-Write Status
                    DCRW = Zero
                }

                If (PM5L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, E0LN)  // _LEN: Length
                    E0LN = Zero
                }

                If ((PM5L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, E0RW)  // _RW_: Read-Write Status
                    E0RW = Zero
                }

                If (PM5H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E4LN)  // _LEN: Length
                    E4LN = Zero
                }

                If ((PM5H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E4RW)  // _RW_: Read-Write Status
                    E4RW = Zero
                }

                If (PM6L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E8LN)  // _LEN: Length
                    E8LN = Zero
                }

                If ((PM6L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E8RW)  // _RW_: Read-Write Status
                    E8RW = Zero
                }

                If (PM6H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, ECLN)  // _LEN: Length
                    ECLN = Zero
                }

                If ((PM6H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, ECRW)  // _RW_: Read-Write Status
                    ECRW = Zero
                }

                If (PM0H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, F0LN)  // _LEN: Length
                    F0LN = Zero
                }

                If ((PM0H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, F0RW)  // _RW_: Read-Write Status
                    F0RW = Zero
                }

                CreateDWordField (BUF0, \_SB.PCI0._Y0D._MIN, M1MN)  // _MIN: Minimum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0D._MAX, M1MX)  // _MAX: Maximum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, M1LN)  // _LEN: Length
                M1MN = (TLUD << 0x14)
                M1LN = ((M1MX - M1MN) + One)
                If ((M64L == Zero))
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._LEN, MSLN)  // _LEN: Length
                    MSLN = Zero
                }
                Else
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._LEN, M2LN)  // _LEN: Length
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._MAX, M2MX)  // _MAX: Maximum Base Address
                    M2LN = M64L /* \M64L */
                    M2MN = M64B /* \M64B */
                    M2MX = ((M2MN + M2LN) - One)
                }

                Return (BUF0) /* \_SB_.PCI0.BUF0 */
            }

            Name (GUID, ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Local0 = Arg3
                CreateDWordField (Local0, Zero, CDW1)
                CreateDWordField (Local0, 0x04, CDW2)
                CreateDWordField (Local0, 0x08, CDW3)
                SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                If ((One == OSDW ()))
                {
                    If (((Arg0 == GUID) && NEXP))
                    {
                        If (~(CDW1 & One))
                        {
                            If ((CTRL & 0x02))
                            {
                                NHPG ()
                            }

                            If ((CTRL & 0x04))
                            {
                                NPME ()
                            }
                        }

                        If ((Arg1 != One))
                        {
                            CDW1 |= 0x08
                        }

                        If ((CDW3 != CTRL))
                        {
                            CDW1 |= 0x10
                        }

                        CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                        OSCC = CTRL /* \_SB_.PCI0.CTRL */
                        Return (Local0)
                    }
                    Else
                    {
                        CDW1 |= 0x04
                        Return (Local0)
                    }
                }
                Else
                {
                    If ((Arg0 == GUID)){}
                    Return (Local0)
                }
            }

            Scope (\_SB.PCI0)
            {
                Method (AR00, 0, NotSerialized)
                {
                    Return (^^AR00) /* \_SB_.AR00 */
                }

                Method (PR00, 0, NotSerialized)
                {
                    Return (^^PR00) /* \_SB_.PR00 */
                }

                Method (AR01, 0, NotSerialized)
                {
                    Return (^^AR01) /* \_SB_.AR01 */
                }

                Method (PR01, 0, NotSerialized)
                {
                    Return (^^PR01) /* \_SB_.PR01 */
                }

                Method (AR02, 0, NotSerialized)
                {
                    Return (^^AR02) /* \_SB_.AR02 */
                }

                Method (PR02, 0, NotSerialized)
                {
                    Return (^^PR02) /* \_SB_.PR02 */
                }

                Method (AR04, 0, NotSerialized)
                {
                    Return (^^AR04) /* \_SB_.AR04 */
                }

                Method (PR04, 0, NotSerialized)
                {
                    Return (^^PR04) /* \_SB_.PR04 */
                }

                Method (AR05, 0, NotSerialized)
                {
                    Return (^^AR05) /* \_SB_.AR05 */
                }

                Method (PR05, 0, NotSerialized)
                {
                    Return (^^PR05) /* \_SB_.PR05 */
                }

                Method (AR06, 0, NotSerialized)
                {
                    Return (^^AR06) /* \_SB_.AR06 */
                }

                Method (PR06, 0, NotSerialized)
                {
                    Return (^^PR06) /* \_SB_.PR06 */
                }

                Method (AR07, 0, NotSerialized)
                {
                    Return (^^AR07) /* \_SB_.AR07 */
                }

                Method (PR07, 0, NotSerialized)
                {
                    Return (^^PR07) /* \_SB_.PR07 */
                }

                Method (AR08, 0, NotSerialized)
                {
                    Return (^^AR08) /* \_SB_.AR08 */
                }

                Method (PR08, 0, NotSerialized)
                {
                    Return (^^PR08) /* \_SB_.PR08 */
                }

                Method (AR09, 0, NotSerialized)
                {
                    Return (^^AR09) /* \_SB_.AR09 */
                }

                Method (PR09, 0, NotSerialized)
                {
                    Return (^^PR09) /* \_SB_.PR09 */
                }

                Method (AR0A, 0, NotSerialized)
                {
                    Return (^^AR0A) /* \_SB_.AR0A */
                }

                Method (PR0A, 0, NotSerialized)
                {
                    Return (^^PR0A) /* \_SB_.PR0A */
                }

                Method (AR0B, 0, NotSerialized)
                {
                    Return (^^AR0B) /* \_SB_.AR0B */
                }

                Method (PR0B, 0, NotSerialized)
                {
                    Return (^^PR0B) /* \_SB_.PR0B */
                }
            }

            Device (MCHC)
            {
                Name (_ADR, Zero)  // _ADR: Address
            }

            Device (PEG0)
            {
                Name (_ADR, 0x00010000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR02 ())
                    }

                    Return (PR02 ())
                }
            }

            Device (PEG1)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0A ())
                    }

                    Return (PR0A ())
                }
            }

            Device (PEG2)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0B ())
                    }

                    Return (PR0B ())
                }
            }

            Device (IGPU)
            {
                Name (_ADR, 0x00020000)  // _ADR: Address
                OperationRegion (GFXH, PCI_Config, Zero, 0x40)
                Field (GFXH, ByteAcc, NoLock, Preserve)
                {
                    VID0,   16, 
                    DID0,   16
                }

                Method (PCPC, 0, NotSerialized)
                {
                }

                Method (PAPR, 0, NotSerialized)
                {
                    Return (Zero)
                }

                Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                {
                    DSEN = (Arg0 & 0x07)
                    If (((Arg0 & 0x03) == Zero))
                    {
                        If (CondRefOf (HDOS))
                        {
                            HDOS ()
                        }
                    }
                }

                Method (_DOD, 0, Serialized)  // _DOD: Display Output Devices
                {
                    If (CondRefOf (IDAB)){}
                    Else
                    {
                        NDID = Zero
                        If ((DIDL != Zero))
                        {
                            DID1 = SDDL (DIDL)
                        }

                        If ((DDL2 != Zero))
                        {
                            DID2 = SDDL (DDL2)
                        }

                        If ((DDL3 != Zero))
                        {
                            DID3 = SDDL (DDL3)
                        }

                        If ((DDL4 != Zero))
                        {
                            DID4 = SDDL (DDL4)
                        }

                        If ((DDL5 != Zero))
                        {
                            DID5 = SDDL (DDL5)
                        }

                        If ((DDL6 != Zero))
                        {
                            DID6 = SDDL (DDL6)
                        }

                        If ((DDL7 != Zero))
                        {
                            DID7 = SDDL (DDL7)
                        }

                        If ((DDL8 != Zero))
                        {
                            DID8 = SDDL (DDL8)
                        }
                    }

                    If ((NDID == One))
                    {
                        Name (TMP1, Package (0x01)
                        {
                            0xFFFFFFFF
                        })
                        TMP1 [Zero] = (0x00010000 | DID1)
                        Return (TMP1) /* \_SB_.PCI0.IGPU._DOD.TMP1 */
                    }

                    If ((NDID == 0x02))
                    {
                        Name (TMP2, Package (0x02)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP2 [Zero] = (0x00010000 | DID1)
                        TMP2 [One] = (0x00010000 | DID2)
                        Return (TMP2) /* \_SB_.PCI0.IGPU._DOD.TMP2 */
                    }

                    If ((NDID == 0x03))
                    {
                        Name (TMP3, Package (0x03)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP3 [Zero] = (0x00010000 | DID1)
                        TMP3 [One] = (0x00010000 | DID2)
                        TMP3 [0x02] = (0x00010000 | DID3)
                        Return (TMP3) /* \_SB_.PCI0.IGPU._DOD.TMP3 */
                    }

                    If ((NDID == 0x04))
                    {
                        Name (TMP4, Package (0x04)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP4 [Zero] = (0x00010000 | DID1)
                        TMP4 [One] = (0x00010000 | DID2)
                        TMP4 [0x02] = (0x00010000 | DID3)
                        TMP4 [0x03] = (0x00010000 | DID4)
                        Return (TMP4) /* \_SB_.PCI0.IGPU._DOD.TMP4 */
                    }

                    If ((NDID == 0x05))
                    {
                        Name (TMP5, Package (0x05)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP5 [Zero] = (0x00010000 | DID1)
                        TMP5 [One] = (0x00010000 | DID2)
                        TMP5 [0x02] = (0x00010000 | DID3)
                        TMP5 [0x03] = (0x00010000 | DID4)
                        TMP5 [0x04] = (0x00010000 | DID5)
                        Return (TMP5) /* \_SB_.PCI0.IGPU._DOD.TMP5 */
                    }

                    If ((NDID == 0x06))
                    {
                        Name (TMP6, Package (0x06)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP6 [Zero] = (0x00010000 | DID1)
                        TMP6 [One] = (0x00010000 | DID2)
                        TMP6 [0x02] = (0x00010000 | DID3)
                        TMP6 [0x03] = (0x00010000 | DID4)
                        TMP6 [0x04] = (0x00010000 | DID5)
                        TMP6 [0x05] = (0x00010000 | DID6)
                        Return (TMP6) /* \_SB_.PCI0.IGPU._DOD.TMP6 */
                    }

                    If ((NDID == 0x07))
                    {
                        Name (TMP7, Package (0x07)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP7 [Zero] = (0x00010000 | DID1)
                        TMP7 [One] = (0x00010000 | DID2)
                        TMP7 [0x02] = (0x00010000 | DID3)
                        TMP7 [0x03] = (0x00010000 | DID4)
                        TMP7 [0x04] = (0x00010000 | DID5)
                        TMP7 [0x05] = (0x00010000 | DID6)
                        TMP7 [0x06] = (0x00010000 | DID7)
                        Return (TMP7) /* \_SB_.PCI0.IGPU._DOD.TMP7 */
                    }

                    If ((NDID == 0x08))
                    {
                        Name (TMP8, Package (0x08)
                        {
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        TMP8 [Zero] = (0x00010000 | DID1)
                        TMP8 [One] = (0x00010000 | DID2)
                        TMP8 [0x02] = (0x00010000 | DID3)
                        TMP8 [0x03] = (0x00010000 | DID4)
                        TMP8 [0x04] = (0x00010000 | DID5)
                        TMP8 [0x05] = (0x00010000 | DID6)
                        TMP8 [0x06] = (0x00010000 | DID7)
                        TMP8 [0x07] = (0x00010000 | DID8)
                        Return (TMP8) /* \_SB_.PCI0.IGPU._DOD.TMP8 */
                    }

                    Return (Package (0x01)
                    {
                        0x0400
                    })
                }

                Name (EDPV, Zero)
                Name (DIDX, Zero)
                Name (NXDX, Zero)
                Method (ABCL, 0, NotSerialized)
                {
                    Return (Package (0x53)
                    {
                        0x50, 
                        0x32, 
                        Zero, 
                        One, 
                        0x02, 
                        0x03, 
                        0x04, 
                        0x05, 
                        0x06, 
                        0x07, 
                        0x08, 
                        0x09, 
                        0x0A, 
                        0x0B, 
                        0x0C, 
                        0x0D, 
                        0x0E, 
                        0x0F, 
                        0x10, 
                        0x11, 
                        0x12, 
                        0x13, 
                        0x14, 
                        0x15, 
                        0x16, 
                        0x17, 
                        0x18, 
                        0x19, 
                        0x1A, 
                        0x1B, 
                        0x1C, 
                        0x1D, 
                        0x1E, 
                        0x1F, 
                        0x20, 
                        0x21, 
                        0x22, 
                        0x23, 
                        0x24, 
                        0x25, 
                        0x26, 
                        0x27, 
                        0x28, 
                        0x29, 
                        0x2A, 
                        0x2B, 
                        0x2C, 
                        0x2D, 
                        0x2E, 
                        0x2F, 
                        0x30, 
                        0x31, 
                        0x32, 
                        0x33, 
                        0x34, 
                        0x35, 
                        0x36, 
                        0x37, 
                        0x38, 
                        0x39, 
                        0x3A, 
                        0x3B, 
                        0x3C, 
                        0x3D, 
                        0x3E, 
                        0x3F, 
                        0x40, 
                        0x41, 
                        0x42, 
                        0x43, 
                        0x44, 
                        0x45, 
                        0x46, 
                        0x47, 
                        0x48, 
                        0x49, 
                        0x4A, 
                        0x4B, 
                        0x4C, 
                        0x4D, 
                        0x4E, 
                        0x4F, 
                        0x50
                    })
                }

                Method (ABCM, 1, NotSerialized)
                {
                    If (((Arg0 >= Zero) && (Arg0 <= 0x64)))
                    {
                        BRTL = Arg0
                        AINT (One, Arg0)
                    }

                    Return (Zero)
                }

                Method (ABQC, 0, NotSerialized)
                {
                    Return (BRTL) /* \BRTL */
                }

                Device (DD01)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID1) == 0x0302))
                        {
                            EDPV = One
                            NXDX = NXD1 /* \NXD1 */
                            DIDX = DID1 /* \DID1 */
                            Return (One)
                        }

                        If ((DID1 == Zero))
                        {
                            Return (One)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID1))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        Return (CDDS (DID1))
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD1) /* \NXD1 */
                        }

                        Return (NDDS (DID1))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }

                    Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                    {
                        Return (ABCL ())
                    }

                    Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                    {
                        ABCM (Arg0)
                        Return (Zero)
                    }

                    Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                    {
                        Return (ABQC ())
                    }
                }

                Device (DD02)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID2) == 0x0302))
                        {
                            EDPV = 0x02
                            NXDX = NXD2 /* \NXD2 */
                            DIDX = DID2 /* \DID2 */
                            Return (0x02)
                        }

                        If ((DID2 == Zero))
                        {
                            Return (0x02)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID2))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((LIDS == Zero))
                        {
                            Return (Zero)
                        }

                        Return (CDDS (DID2))
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD2) /* \NXD2 */
                        }

                        Return (NDDS (DID2))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD03)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID3) == 0x0302))
                        {
                            EDPV = 0x03
                            NXDX = NXD3 /* \NXD3 */
                            DIDX = DID3 /* \DID3 */
                            Return (0x03)
                        }

                        If ((DID3 == Zero))
                        {
                            Return (0x03)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID3))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID3 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID3))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD3) /* \NXD3 */
                        }

                        Return (NDDS (DID3))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD04)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID4) == 0x0302))
                        {
                            EDPV = 0x04
                            NXDX = NXD4 /* \NXD4 */
                            DIDX = DID4 /* \DID4 */
                            Return (0x04)
                        }

                        If ((DID4 == Zero))
                        {
                            Return (0x04)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID4))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID4 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID4))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD4) /* \NXD4 */
                        }

                        Return (NDDS (DID4))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD05)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID5) == 0x0302))
                        {
                            EDPV = 0x05
                            NXDX = NXD5 /* \NXD5 */
                            DIDX = DID5 /* \DID5 */
                            Return (0x05)
                        }

                        If ((DID5 == Zero))
                        {
                            Return (0x05)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID5))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID5 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID5))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD5) /* \NXD5 */
                        }

                        Return (NDDS (DID5))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD06)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID6) == 0x0302))
                        {
                            EDPV = 0x06
                            NXDX = NXD6 /* \NXD6 */
                            DIDX = DID6 /* \DID6 */
                            Return (0x06)
                        }

                        If ((DID6 == Zero))
                        {
                            Return (0x06)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID6))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID6 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID6))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD6) /* \NXD6 */
                        }

                        Return (NDDS (DID6))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD07)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID7) == 0x0302))
                        {
                            EDPV = 0x07
                            NXDX = NXD7 /* \NXD7 */
                            DIDX = DID7 /* \DID7 */
                            Return (0x07)
                        }

                        If ((DID7 == Zero))
                        {
                            Return (0x07)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID7))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID7 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID7))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD7) /* \NXD7 */
                        }

                        Return (NDDS (DID7))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD08)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If (((0x0F00 & DID8) == 0x0302))
                        {
                            EDPV = 0x08
                            NXDX = NXD8 /* \NXD8 */
                            DIDX = DID8 /* \DID8 */
                            Return (0x08)
                        }

                        If ((DID8 == Zero))
                        {
                            Return (0x08)
                        }
                        Else
                        {
                            Return ((0xFFFF & DID8))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((DID8 == Zero))
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (CDDS (DID8))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXD8) /* \NXD8 */
                        }

                        Return (NDDS (DID8))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Device (DD1F)
                {
                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {
                        If ((EDPV == Zero))
                        {
                            Return (0x1F)
                        }
                        Else
                        {
                            Return ((0xFFFF & DIDX))
                        }
                    }

                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
                    {
                        If ((EDPV == Zero))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (CDDS (DIDX))
                        }
                    }

                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
                    {
                        If (CondRefOf (SNXD))
                        {
                            Return (NXDX) /* \_SB_.PCI0.IGPU.NXDX */
                        }

                        Return (NDDS (DIDX))
                    }

                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
                    {
                        If (((Arg0 & 0xC0000000) == 0xC0000000))
                        {
                            CSTE = NSTE /* \NSTE */
                        }
                    }
                }

                Method (SDDL, 1, NotSerialized)
                {
                    NDID++
                    Local0 = (Arg0 & 0x0F0F)
                    Local1 = (0x80000000 | Local0)
                    If ((DIDL == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL2 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL3 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL4 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL5 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL6 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL7 == Local0))
                    {
                        Return (Local1)
                    }

                    If ((DDL8 == Local0))
                    {
                        Return (Local1)
                    }

                    Return (Zero)
                }

                Method (CDDS, 1, NotSerialized)
                {
                    Local0 = (Arg0 & 0x0F0F)
                    If ((Zero == Local0))
                    {
                        Return (0x1D)
                    }

                    If ((CADL == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL2 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL3 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL4 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL5 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL6 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL7 == Local0))
                    {
                        Return (0x1F)
                    }

                    If ((CAL8 == Local0))
                    {
                        Return (0x1F)
                    }

                    Return (0x1D)
                }

                Method (NDDS, 1, NotSerialized)
                {
                    Local0 = (Arg0 & 0x0F0F)
                    If ((Zero == Local0))
                    {
                        Return (Zero)
                    }

                    If ((NADL == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL2 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL3 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL4 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL5 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL6 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL7 == Local0))
                    {
                        Return (One)
                    }

                    If ((NDL8 == Local0))
                    {
                        Return (One)
                    }

                    Return (Zero)
                }

                Scope (^^PCI0)
                {
                    OperationRegion (MCHP, PCI_Config, 0x40, 0xC0)
                    Field (MCHP, AnyAcc, NoLock, Preserve)
                    {
                        Offset (0x14), 
                        AUDE,   8, 
                        Offset (0x60), 
                        TASM,   10, 
                        Offset (0x62)
                    }
                }

                OperationRegion (IGDP, PCI_Config, 0x40, 0xC0)
                Field (IGDP, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x12), 
                        ,   1, 
                    GIVD,   1, 
                        ,   2, 
                    GUMA,   3, 
                    Offset (0x14), 
                        ,   4, 
                    GMFN,   1, 
                    Offset (0x18), 
                    Offset (0xA4), 
                    ASLE,   8, 
                    Offset (0xA8), 
                    GSSE,   1, 
                    GSSB,   14, 
                    GSES,   1, 
                    Offset (0xB0), 
                        ,   12, 
                    CDVL,   1, 
                    Offset (0xB2), 
                    Offset (0xB5), 
                    LBPC,   8, 
                    Offset (0xBC), 
                    ASLS,   32
                }

                OperationRegion (IGDM, SystemMemory, ASLB, 0x2000)
                Field (IGDM, AnyAcc, NoLock, Preserve)
                {
                    SIGN,   128, 
                    SIZE,   32, 
                    OVER,   32, 
                    SVER,   256, 
                    VVER,   128, 
                    GVER,   128, 
                    MBOX,   32, 
                    DMOD,   32, 
                    Offset (0x100), 
                    DRDY,   32, 
                    CSTS,   32, 
                    CEVT,   32, 
                    Offset (0x120), 
                    DIDL,   32, 
                    DDL2,   32, 
                    DDL3,   32, 
                    DDL4,   32, 
                    DDL5,   32, 
                    DDL6,   32, 
                    DDL7,   32, 
                    DDL8,   32, 
                    CPDL,   32, 
                    CPL2,   32, 
                    CPL3,   32, 
                    CPL4,   32, 
                    CPL5,   32, 
                    CPL6,   32, 
                    CPL7,   32, 
                    CPL8,   32, 
                    CADL,   32, 
                    CAL2,   32, 
                    CAL3,   32, 
                    CAL4,   32, 
                    CAL5,   32, 
                    CAL6,   32, 
                    CAL7,   32, 
                    CAL8,   32, 
                    NADL,   32, 
                    NDL2,   32, 
                    NDL3,   32, 
                    NDL4,   32, 
                    NDL5,   32, 
                    NDL6,   32, 
                    NDL7,   32, 
                    NDL8,   32, 
                    ASLP,   32, 
                    TIDX,   32, 
                    CHPD,   32, 
                    CLID,   32, 
                    CDCK,   32, 
                    SXSW,   32, 
                    EVTS,   32, 
                    CNOT,   32, 
                    NRDY,   32, 
                    Offset (0x200), 
                    SCIE,   1, 
                    GEFC,   4, 
                    GXFC,   3, 
                    GESF,   8, 
                    Offset (0x204), 
                    PARM,   32, 
                    DSLP,   32, 
                    Offset (0x300), 
                    ARDY,   32, 
                    ASLC,   32, 
                    TCHE,   32, 
                    ALSI,   32, 
                    BCLP,   32, 
                    PFIT,   32, 
                    CBLV,   32, 
                    BCLM,   320, 
                    CPFM,   32, 
                    EPFM,   32, 
                    PLUT,   592, 
                    PFMB,   32, 
                    CCDV,   32, 
                    PCFT,   32, 
                    Offset (0x400), 
                    GVD1,   49152, 
                    PHED,   32, 
                    BDDC,   2048
                }

                Name (DBTB, Package (0x15)
                {
                    Zero, 
                    0x07, 
                    0x38, 
                    0x01C0, 
                    0x0E00, 
                    0x3F, 
                    0x01C7, 
                    0x0E07, 
                    0x01F8, 
                    0x0E38, 
                    0x0FC0, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    0x7000, 
                    0x7007, 
                    0x7038, 
                    0x71C0, 
                    0x7E00
                })
                Name (CDCT, Package (0x05)
                {
                    Package (0x02)
                    {
                        0xE4, 
                        0x0140
                    }, 

                    Package (0x02)
                    {
                        0xDE, 
                        0x014D
                    }, 

                    Package (0x02)
                    {
                        0xDE, 
                        0x014D
                    }, 

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0xDE, 
                        0x014D
                    }
                })
                Name (SUCC, One)
                Name (NVLD, 0x02)
                Name (CRIT, 0x04)
                Name (NCRT, 0x06)
                Method (GBDA, 0, Serialized)
                {
                    If ((GESF == Zero))
                    {
                        PARM = 0x00020000
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == One))
                    {
                        PARM = 0x00200000
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x04))
                    {
                        PARM &= 0xEFFF0000
                        PARM &= (DerefOf (DBTB [IBTT]) << 0x10)
                        PARM |= IBTT /* \_SB_.PCI0.IGPU.PARM */
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x05))
                    {
                        PARM = IPSC /* \IPSC */
                        PARM |= (IPAT << 0x08)
                        PARM += 0x0100
                        PARM |= (LIDS << 0x10)
                        PARM += 0x00010000
                        PARM |= (IBIA << 0x14)
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x06))
                    {
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x07))
                    {
                        PARM = GIVD /* \_SB_.PCI0.IGPU.GIVD */
                        PARM ^= One
                        PARM |= (GMFN << One)
                        PARM |= 0x1800
                        PARM |= (IDMS << 0x11)
                        PARM |= (DerefOf (DerefOf (CDCT [HVCO]) [CDVL]) << 
                            0x15) /* \_SB_.PCI0.IGPU.PARM */
                        GESF = One
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x0A))
                    {
                        PARM = Zero
                        If (ISSC)
                        {
                            PARM |= 0x03
                        }

                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x0B))
                    {
                        PARM = KSV0 /* \KSV0 */
                        GESF = KSV1 /* \KSV1 */
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    GESF = Zero
                    Return (CRIT) /* \_SB_.PCI0.IGPU.CRIT */
                }

                Method (SBCB, 0, Serialized)
                {
                    If ((GESF == Zero))
                    {
                        PARM = Zero
                        PARM = 0x00020000
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == One))
                    {
                        PARM = Zero
                        GESF = Zero
                        PARM = 0x00200000
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x03))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x04))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x05))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x06))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x07))
                    {
                        If ((PARM == Zero))
                        {
                            Local0 = CLID /* \_SB_.PCI0.IGPU.CLID */
                            If ((0x80000000 & Local0))
                            {
                                CLID &= 0x0F
                                GLID (CLID)
                            }
                        }

                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x08))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x09))
                    {
                        IBTT = (PARM & 0xFF)
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x0A))
                    {
                        IPSC = (PARM & 0xFF)
                        If (((PARM >> 0x08) & 0xFF))
                        {
                            IPAT = ((PARM >> 0x08) & 0xFF)
                            IPAT--
                        }

                        IBIA = ((PARM >> 0x14) & 0x07)
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x0B))
                    {
                        IF1E = ((PARM >> One) & One)
                        If ((PARM & 0x0001E000))
                        {
                            IDMS = ((PARM >> 0x0D) & 0x0F)
                        }
                        Else
                        {
                            IDMS = ((PARM >> 0x11) & 0x0F)
                        }

                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x10))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x11))
                    {
                        PARM = (LIDS << 0x08)
                        PARM += 0x0100
                        GESF = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x12))
                    {
                        If ((PARM & One))
                        {
                            If (((PARM >> One) == One))
                            {
                                ISSC = One
                            }
                            Else
                            {
                                GESF = Zero
                                Return (CRIT) /* \_SB_.PCI0.IGPU.CRIT */
                            }
                        }
                        Else
                        {
                            ISSC = Zero
                        }

                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x13))
                    {
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x14))
                    {
                        PAVP = (PARM & 0x0F)
                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    If ((GESF == 0x15))
                    {
                        If ((PARM == One))
                        {
                            AUDE |= 0x20
                            Notify (PCI0, Zero) // Bus Check
                        }

                        If ((PARM == Zero))
                        {
                            AUDE &= 0xDF
                            Notify (PCI0, Zero) // Bus Check
                        }

                        GESF = Zero
                        PARM = Zero
                        Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                    }

                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
                }

                Method (GSCI, 0, Serialized)
                {
                    If ((GEFC == 0x04))
                    {
                        GXFC = GBDA ()
                    }

                    If ((GEFC == 0x06))
                    {
                        GXFC = SBCB ()
                    }

                    GEFC = Zero
                    SCIS = One
                    GSSE = Zero
                    SCIE = Zero
                    Return (Zero)
                }

                Method (PDRD, 0, NotSerialized)
                {
                    If (!DRDY)
                    {
                        Sleep (ASLP)
                    }

                    Return (!DRDY)
                }

                Method (PSTS, 0, NotSerialized)
                {
                    If ((CSTS > 0x02))
                    {
                        Sleep (ASLP)
                    }

                    Return ((CSTS == 0x03))
                }

                Method (GNOT, 2, NotSerialized)
                {
                    If (PDRD ())
                    {
                        Return (One)
                    }

                    CEVT = Arg0
                    CSTS = 0x03
                    If (((CHPD == Zero) && (Arg1 == Zero)))
                    {
                        If (((OSYS > 0x07D0) || (OSYS < 0x07D6)))
                        {
                            Notify (PCI0, Arg1)
                        }
                        Else
                        {
                            Notify (IGPU, Arg1)
                        }
                    }

                    If (CondRefOf (HNOT))
                    {
                        HNOT (Arg0)
                    }
                    Else
                    {
                        Notify (IGPU, 0x80) // Status Change
                    }

                    Return (Zero)
                }

                Method (GHDS, 1, NotSerialized)
                {
                    TIDX = Arg0
                    Return (GNOT (One, Zero))
                }

                Method (GLID, 1, NotSerialized)
                {
                    If ((Arg0 == One))
                    {
                        CLID = 0x03
                    }
                    Else
                    {
                        CLID = Arg0
                    }

                    Return (GNOT (0x02, Zero))
                }

                Method (GDCK, 1, NotSerialized)
                {
                    CDCK = Arg0
                    Return (GNOT (0x04, Zero))
                }

                Method (PARD, 0, NotSerialized)
                {
                    If (!ARDY)
                    {
                        Sleep (ASLP)
                    }

                    Return (!ARDY)
                }

                Method (AINT, 2, NotSerialized)
                {
                    If (!(TCHE & (One << Arg0)))
                    {
                        Return (One)
                    }

                    If (PARD ())
                    {
                        Return (One)
                    }

                    If ((Arg0 == 0x02))
                    {
                        If (CPFM)
                        {
                            Local0 = (CPFM & 0x0F)
                            Local1 = (EPFM & 0x0F)
                            If ((Local0 == One))
                            {
                                If ((Local1 & 0x06))
                                {
                                    PFIT = 0x06
                                }
                                ElseIf ((Local1 & 0x08))
                                {
                                    PFIT = 0x08
                                }
                                Else
                                {
                                    PFIT = One
                                }
                            }

                            If ((Local0 == 0x06))
                            {
                                If ((Local1 & 0x08))
                                {
                                    PFIT = 0x08
                                }
                                ElseIf ((Local1 & One))
                                {
                                    PFIT = One
                                }
                                Else
                                {
                                    PFIT = 0x06
                                }
                            }

                            If ((Local0 == 0x08))
                            {
                                If ((Local1 & One))
                                {
                                    PFIT = One
                                }
                                ElseIf ((Local1 & 0x06))
                                {
                                    PFIT = 0x06
                                }
                                Else
                                {
                                    PFIT = 0x08
                                }
                            }
                        }
                        Else
                        {
                            PFIT ^= 0x07
                        }

                        PFIT |= 0x80000000
                        ASLC = 0x04
                    }
                    ElseIf ((Arg0 == One))
                    {
                        BCLP = ((Arg1 * 0xFF) / 0x64)
                        BCLP |= 0x80000000
                        ASLC = 0x02
                    }
                    ElseIf ((Arg0 == Zero))
                    {
                        ALSI = Arg1
                        ASLC = One
                    }
                    Else
                    {
                        Return (One)
                    }

                    ASLE = One
                    Return (Zero)
                }

                Method (SCIP, 0, NotSerialized)
                {
                    If ((OVER != Zero))
                    {
                        Return (!GSMI)
                    }

                    Return (Zero)
                }

                Device (^^MEM2)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x20000000,         // Address Base
                            0x00200000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0x40000000,         // Address Base
                            0x00200000,         // Address Length
                            )
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (CRS) /* \_SB_.MEM2.CRS_ */
                    }
                }
            }

            Device (IMEI)
            {
                Name (_ADR, 0x00160000)  // _ADR: Address
            }

            Device (RP01)
            {
                Name (_ADR, 0x001C0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x04
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04 ())
                    }

                    Return (PR04 ())
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x02)
                            {
                                "apple-coprocessor-version", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }
            }

            Device (RP17)
            {
                Name (_ADR, 0x001B0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04 ())
                    }

                    Return (PR04 ())
                }
            }

            Device (LPCB)
            {
                Name (_ADR, 0x001F0000)  // _ADR: Address
                Scope (\_SB)
                {
                    OperationRegion (PCI0.LPCB.LPC1, PCI_Config, 0x40, 0xC0)
                    Field (PCI0.LPCB.LPC1, AnyAcc, NoLock, Preserve)
                    {
                        Offset (0x20), 
                        PARC,   8, 
                        PBRC,   8, 
                        PCRC,   8, 
                        PDRC,   8, 
                        Offset (0x28), 
                        PERC,   8, 
                        PFRC,   8, 
                        PGRC,   8, 
                        PHRC,   8
                    }

                    Device (LNKA)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, One)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PARC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLA, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLA, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PARC & 0x0F))
                            Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PARC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PARC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKB)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x02)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PBRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLB, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLB, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PBRC & 0x0F))
                            Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PBRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PBRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKC)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x03)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PCRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLC, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLC, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PCRC & 0x0F))
                            Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PCRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PCRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKD)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x04)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PDRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLD, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLD, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PDRC & 0x0F))
                            Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PDRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PDRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKE)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x05)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PERC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLE, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLE, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PERC & 0x0F))
                            Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PERC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PERC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKF)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x06)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PFRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLF, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLF, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PFRC & 0x0F))
                            Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PFRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PFRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKG)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x07)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PGRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLG, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLG, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PGRC & 0x0F))
                            Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PGRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PGRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKH)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x08)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PHRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLH, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLH, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PHRC & 0x0F))
                            Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PHRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PHRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }
                }

                OperationRegion (LPC0, PCI_Config, 0x40, 0xC0)
                Field (LPC0, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x40), 
                    IOD0,   8, 
                    IOD1,   8, 
                    Offset (0xB0), 
                    RAEN,   1, 
                        ,   13
                }

                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x11,               // Length
                            )
                        IO (Decode16,
                            0x0093,             // Range Minimum
                            0x0093,             // Range Maximum
                            0x01,               // Alignment
                            0x0D,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (FWHD)
                {
                    Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        Memory32Fixed (ReadOnly,
                            0xFF000000,         // Address Base
                            0x01000000,         // Address Length
                            )
                    })
                }

                Device (HPET)
                {
                    Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0C01") /* System Board */)  // _CID: Compatible ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadWrite,
                            0xFED00000,         // Address Base
                            0x00004000,         // Address Length
                            )
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (OSDW ())
                        {
                            Return (Zero)
                        }

                        If ((OSYS >= 0x07D1))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (0x0B)
                        }

                        Return (Zero)
                    }

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
                    }
                }

                Device (IPIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0024,             // Range Minimum
                            0x0024,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0028,             // Range Minimum
                            0x0028,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x002C,             // Range Minimum
                            0x002C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0030,             // Range Minimum
                            0x0030,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0034,             // Range Minimum
                            0x0034,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0038,             // Range Minimum
                            0x0038,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x003C,             // Range Minimum
                            0x003C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A4,             // Range Minimum
                            0x00A4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A8,             // Range Minimum
                            0x00A8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00AC,             // Range Minimum
                            0x00AC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B4,             // Range Minimum
                            0x00B4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B8,             // Range Minimum
                            0x00B8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00BC,             // Range Minimum
                            0x00BC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (MATH)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (LDRC)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x002E,             // Range Minimum
                            0x002E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x004E,             // Range Minimum
                            0x004E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0063,             // Range Minimum
                            0x0063,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0065,             // Range Minimum
                            0x0065,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0067,             // Range Minimum
                            0x0067,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B2,             // Range Minimum
                            0x00B2,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0xFFFF,             // Range Minimum
                            0xFFFF,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x1800,             // Range Minimum
                            0x1800,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            )
                        IO (Decode16,
                            0x0800,             // Range Minimum
                            0x0800,             // Range Maximum
                            0x01,               // Alignment
                            0x80,               // Length
                            )
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                    })
                    OperationRegion (CMS0, SystemCMOS, Zero, 0x40)
                    Field (CMS0, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x38), 
                        ISTB,   1, 
                            ,   2, 
                        ISWI,   1, 
                        Offset (0x39)
                    }
                }

                Device (TIMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IO (Decode16,
                            0x0050,             // Range Minimum
                            0x0050,             // Range Maximum
                            0x10,               // Alignment
                            0x04,               // Length
                            )
                    })
                }

                Device (SMC)
                {
                    Name (_HID, EisaId ("APP0001"))  // _HID: Hardware ID
                    Name (_CID, "smc-huronriver")  // _CID: Compatible ID
                    Name (_STA, 0x0B)  // _STA: Status
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0300,             // Range Minimum
                            0x0300,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00010000,         // Address Length
                            _Y0F)
                        IRQNoFlags ()
                            {6}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (BUF0, \_SB.PCI0.LPCB.SMC._Y0F._BAS, SBA0)  // _BAS: Base Address
                        SBA0 = SMCB /* \SMCB */
                        Return (BUF0) /* \_SB_.PCI0.LPCB.SMC_.BUF0 */
                    }

                    Device (SMS0)
                    {
                        Name (_HID, EisaId ("APP0003"))  // _HID: Hardware ID
                        Name (_CID, "smc-sms")  // _CID: Compatible ID
                    }
                }

                Device (EC)
                {
                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0062,             // Range Minimum
                            0x0062,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0066,             // Range Minimum
                            0x0066,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                    Name (_GPE, 0x07)  // _GPE: General Purpose Events
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x04
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x03
                            })
                        }
                    }

                    Name (ECOK, Zero)
                    OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)
                    Field (ECOR, ByteAcc, NoLock, Preserve)
                    {
                        ECVS,   8, 
                        Offset (0x02), 
                        Offset (0x03), 
                        G3HT,   1, 
                            ,   5, 
                        LVME,   1, 
                        PRST,   1, 
                        WBCB,   1, 
                        DSLP,   1, 
                        Offset (0x05), 
                        Offset (0x06), 
                        WKRS,   8, 
                        Offset (0x09), 
                        LDSB,   8, 
                        Offset (0x0D), 
                        CMDS,   8, 
                        DATA,   8, 
                        INDX,   8, 
                        ECSS,   8, 
                        PLIM,   8, 
                        ALB0,   8, 
                        ALB1,   8, 
                        WTLB,   8, 
                        WTMB,   8, 
                        Offset (0x20), 
                        SPTR,   8, 
                        SSTS,   8, 
                        SADR,   8, 
                        SCMD,   8, 
                        SBFR,   256, 
                        SCNT,   8, 
                        SAAD,   8, 
                        SAD0,   8, 
                        SAD1,   8, 
                        SMUX,   8, 
                        Offset (0x54), 
                        POR0,   8, 
                        POR1,   8, 
                        POR2,   8, 
                        POR3,   8, 
                        PWRP,   8, 
                        PWQP,   8, 
                        PSRP,   8, 
                        PSQP,   8, 
                        Offset (0x60), 
                        ELSW,   1, 
                        EACP,   1, 
                        ECDI,   1, 
                        ENMI,   1, 
                        Offset (0x61), 
                        EMHP,   1, 
                        PSOC,   1, 
                        Offset (0x62), 
                        Offset (0x63), 
                        Offset (0x64), 
                        SWLO,   1, 
                        SWLC,   1, 
                        SWAI,   1, 
                        SWAR,   1, 
                        SWCI,   1, 
                        SWCE,   1, 
                        SWMI,   1, 
                        SWMR,   1, 
                        SWPB,   1, 
                        SWGP,   1, 
                        SWPM,   1, 
                        SWWT,   1, 
                        SWLB,   1, 
                        Offset (0x66), 
                        Offset (0x67), 
                        Offset (0x68), 
                        EWLO,   1, 
                        EWLC,   1, 
                        EWAI,   1, 
                        EWAR,   1, 
                        EWCI,   1, 
                        EWCE,   1, 
                        EWMI,   1, 
                        EWMR,   1, 
                        EWPB,   1, 
                        EWGP,   1, 
                        EWPM,   1, 
                        ENWT,   1, 
                        EWLB,   1, 
                        EWDK,   1, 
                        Offset (0x6A), 
                        Offset (0x6B), 
                        Offset (0x6C), 
                        LWLO,   1, 
                        LWLC,   1, 
                        LWAI,   1, 
                        LWAR,   1, 
                        LWCI,   1, 
                        LWCE,   1, 
                        LWMI,   1, 
                        LWMR,   1, 
                        LWPB,   1, 
                        LWGP,   1, 
                        LWPM,   1, 
                        LWWT,   1, 
                        LWLB,   1, 
                        Offset (0x6E), 
                        Offset (0x6F), 
                        Offset (0x70)
                    }

                    Field (ECOR, ByteAcc, Lock, Preserve)
                    {
                        Offset (0x03), 
                        G3AD,   1, 
                        BLOD,   1, 
                        S4WE,   1, 
                        APWC,   1, 
                        BTPC,   1, 
                        SOCR,   1, 
                        Offset (0x04), 
                        Offset (0x6C), 
                        LWE0,   8, 
                        LWE1,   8, 
                        LWE2,   8, 
                        LWE3,   8
                    }

                    Field (ECOR, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x24), 
                        SBDW,   16, 
                        Offset (0x46), 
                        SADW,   16
                    }

                    Method (WAKE, 0, NotSerialized)
                    {
                        If (ECOK)
                        {
                            Return (WKRS) /* \_SB_.PCI0.LPCB.EC__.WKRS */
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (SETP, 3, NotSerialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            If ((Arg1 == Zero))
                            {
                                PWRP = Arg2
                            }
                            ElseIf ((Arg1 == One))
                            {
                                PWQP = Arg2
                            }
                        }
                        ElseIf ((Arg0 == One))
                        {
                            If ((Arg1 == Zero))
                            {
                                PSRP = Arg2
                            }
                            ElseIf ((Arg1 == One))
                            {
                                PSQP = Arg2
                            }
                        }
                    }

                    Method (RQOP, 1, NotSerialized)
                    {
                        Local0 = (Arg0 & 0xFF)
                        POR0 = Local0
                        Local0 = ((Arg0 >> 0x08) & 0xFF)
                        POR1 = Local0
                        Local0 = ((Arg0 >> 0x10) & 0xFF)
                        POR2 = Local0
                        Local0 = ((Arg0 >> 0x14) & 0xFF)
                        POR3 = Local0
                    }

                    Method (QROP, 0, NotSerialized)
                    {
                        Local0 = POR0 /* \_SB_.PCI0.LPCB.EC__.POR0 */
                        Local1 = POR1 /* \_SB_.PCI0.LPCB.EC__.POR1 */
                        Local0 += (Local1 << 0x08)
                        Local1 = POR2 /* \_SB_.PCI0.LPCB.EC__.POR2 */
                        Local0 += (Local1 << 0x10)
                        Local1 = POR3 /* \_SB_.PCI0.LPCB.EC__.POR3 */
                        Local0 += (Local1 << 0x18)
                        Return (Local0)
                    }

                    Method (PORS, 2, NotSerialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (PWRP) /* \_SB_.PCI0.LPCB.EC__.PWRP */
                            }
                            ElseIf ((Arg1 == One))
                            {
                                Return (PWQP) /* \_SB_.PCI0.LPCB.EC__.PWQP */
                            }
                        }
                        ElseIf ((Arg0 == One))
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (PSRP) /* \_SB_.PCI0.LPCB.EC__.PSRP */
                            }
                            ElseIf ((Arg1 == One))
                            {
                                Return (PSQP) /* \_SB_.PCI0.LPCB.EC__.PSQP */
                            }
                        }

                        Return (0xFF)
                    }

                    Device (SMB0)
                    {
                        Name (_HID, "ACPI0001" /* SMBus 1.0 Host Controller */)  // _HID: Hardware ID
                        Name (_EC, 0x2010)  // _EC_: Embedded Controller
                        Mutex (SMTX, 0x00)
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If (OSDW ())
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Device (SBS0)
                        {
                            Name (_HID, "ACPI0002" /* Smart Battery Subsystem */)  // _HID: Hardware ID
                            Name (_SBS, One)  // _SBS: Smart Battery Subsystem
                        }

                        Method (SBPC, 1, NotSerialized)
                        {
                            Local0 = Arg0
                            While (Local0)
                            {
                                If ((SPTR == Zero))
                                {
                                    Return ((SSTS & 0x1F))
                                }

                                Sleep (One)
                                Local0--
                            }

                            Return (0x18)
                        }

                        Method (SBRW, 3, NotSerialized)
                        {
                            Local0 = One
                            If (!Acquire (SMTX, 0xFFFF))
                            {
                                If ((SPTR == Zero))
                                {
                                    SADR = (Arg0 << One)
                                    SCMD = Arg1
                                    SPTR = 0x09
                                    Local0 = SBPC (0x03E8)
                                    If (!Local0)
                                    {
                                        Arg2 = SBDW /* \_SB_.PCI0.LPCB.EC__.SBDW */
                                    }
                                }

                                Release (SMTX)
                            }

                            Return (Local0)
                        }

                        Method (SBRB, 3, NotSerialized)
                        {
                            Local0 = One
                            Local1 = Buffer (One)
                                {
                                     0x00                                             // .
                                }
                            If (!Acquire (SMTX, 0xFFFF))
                            {
                                If ((SPTR == Zero))
                                {
                                    SADR = (Arg0 << One)
                                    SCMD = Arg1
                                    SPTR = 0x0B
                                    Local0 = SBPC (0x03E8)
                                    If (!Local0)
                                    {
                                        Arg2 = SBFR /* \_SB_.PCI0.LPCB.EC__.SBFR */
                                    }
                                }

                                Release (SMTX)
                            }

                            Return (Local0)
                        }
                    }

                    Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (OSDW ())
                        {
                            Notify (SMB0, 0x80) // Status Change
                        }
                        ElseIf ((SSTS & 0x40))
                        {
                            If (!Acquire (^SMB0.SMTX, 0xFFFF))
                            {
                                Local0 = (SAAD >> One)
                                If ((Local0 == 0x0A))
                                {
                                    ^^^^BAT0.BNOT (SADW)
                                }

                                SSTS = Zero
                                Release (^SMB0.SMTX)
                            }
                        }
                    }

                    Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (EC, 0x83) // Device-Specific Change
                    }

                    Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (EC, 0x84) // Reserved
                    }

                    Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        LIDS = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                        ^^^IGPU.CLID = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                        Notify (LID0, 0x80) // Status Change
                    }

                    Method (_Q21, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (EACP)
                        {
                            PWRS = One
                        }
                        Else
                        {
                            PWRS = Zero
                        }

                        Notify (ADP1, 0x80) // Status Change
                        PNOT ()
                    }

                    Method (_Q5A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (SLPB, 0x80) // Status Change
                    }

                    Method (_Q80, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU2, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU4, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU5, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU6, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU7, 0x80) // Performance Capability Change
                        If ((^^^IGPU.VID0 == 0x8086))
                        {
                            Local0 = IGPS /* \IGPS */
                            Local0 = (RP0C - Local0)
                            RPSL = Local0
                        }
                        Else
                        {
                            Notify (^^^PEG0.GFX0, 0x81) // Information Change
                        }
                    }

                    Method (_QCE, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                    }

                    Method (_QCF, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (!OSDW ())
                        {
                            Notify (SLPB, 0x80) // Status Change
                        }
                    }

                    Method (_QD0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                    }

                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
                    {
                        If (((Arg0 == 0x03) || (OSYS >= 0x07D6)))
                        {
                            ECOK = Arg1
                            If ((Arg1 == One))
                            {
                                ECSS = Zero
                                LIDS = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                                ^^^IGPU.CLID = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                                PWRS = EACP /* \_SB_.PCI0.LPCB.EC__.EACP */
                                Notify (ADP1, 0x80) // Status Change
                            }
                        }
                    }
                }

                Scope (\_SB)
                {
                    Device (BAT0)
                    {
                        Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                        Name (_UID, Zero)  // _UID: Unique ID
                        Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                        {
                            _SB
                        })
                        Name (BSSW, 0xFFFF)
                        Name (PBIF, Package (0x0D)
                        {
                            Zero, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            One, 
                            0xFFFFFFFF, 
                            0xFA, 
                            0x64, 
                            0x0A, 
                            0x0A, 
                            " ", 
                            " ", 
                            " ", 
                            " "
                        })
                        Name (PBST, Package (0x04)
                        {
                            Zero, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If (OSDW ())
                            {
                                Return (Zero)
                            }

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                UBSS ()
                                If ((BSSW & One))
                                {
                                    Return (0x1F)
                                }
                                Else
                                {
                                    Return (0x0F)
                                }
                            }
                            Else
                            {
                                Return (0x0F)
                            }
                        }

                        Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                        {
                            If ((BSSW & One))
                            {
                                UBST ()
                            }
                            Else
                            {
                                PBST [Zero] = Zero
                                PBST [One] = 0xFFFFFFFF
                                PBST [0x02] = 0xFFFFFFFF
                            }

                            Return (PBST) /* \_SB_.BAT0.PBST */
                        }

                        Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                        {
                            If ((BSSW & One))
                            {
                                UBIF ()
                            }

                            Return (PBIF) /* \_SB_.BAT0.PBIF */
                        }

                        Method (BNOT, 1, NotSerialized)
                        {
                            Local0 = BSSW /* \_SB_.BAT0.BSSW */
                            BSSW = Arg0
                            Notify (BAT0, 0x80) // Status Change
                            If (((Local0 ^ Arg0) & One))
                            {
                                Notify (BAT0, 0x81) // Information Change
                            }
                        }

                        Method (UBSS, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0A, One, RefOf (BSSW))
                        }

                        Method (UBIF, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x18, RefOf (Local0))
                            PBIF [One] = (Local0 * 0x0A)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x10, RefOf (Local0))
                            PBIF [0x02] = (Local0 * 0x0A)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x19, RefOf (Local0))
                            PBIF [0x04] = Local0
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x21, RefOf (Local0))
                            PBIF [0x09] = Local0
                            PBIF [0x0A] = Buffer (One)
                                {
                                     0x00                                             // .
                                }
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x22, RefOf (Local0))
                            PBIF [0x0B] = Local0
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x20, RefOf (Local0))
                            PBIF [0x0C] = Local0
                        }

                        Method (UBST, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x09, RefOf (Local2))
                            PBST [0x03] = Local2
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x0A, RefOf (Local0))
                            If ((Local0 & 0x8000))
                            {
                                Local0 = ~Local0
                                Local0 = (Local0++ & 0xFFFF)
                            }

                            Local0 *= Local2
                            PBST [One] = (Local0 / 0x03E8)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x0F, RefOf (Local0))
                            PBST [0x02] = (Local0 * 0x0A)
                            Local1 = Zero
                            If (PWRS)
                            {
                                ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x16, RefOf (Local0))
                                If (!(Local0 & 0x40))
                                {
                                    Local1 = 0x02
                                }
                            }
                            Else
                            {
                                Local1 = One
                            }

                            PBST [Zero] = Local1
                        }
                    }
                }

                Device (GMUX)
                {
                    Name (_HID, EisaId ("APP000B"))  // _HID: Hardware ID
                    Name (_CID, "gmux")  // _CID: Compatible ID
                    Name (_STA, 0x0B)  // _STA: Status
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0700,             // Range Minimum
                            0x07FF,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            )
                    })
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x50, 
                                0x03
                            })
                        }

                        Return (Package (0x02)
                        {
                            0x50, 
                            0x03
                        })
                    }

                    Scope (\_GPE)
                    {
                        Method (_L50, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
                        {
                            If (OSDW ())
                            {
                                Notify (\_SB.PCI0.LPCB.GMUX, 0x80) // Status Change
                            }
                            ElseIf ((\_SB.GGII (0x01070010) == One))
                            {
                                \_SB.SGII (0x01070010, Zero)
                            }
                            Else
                            {
                                \_SB.SGII (0x01070010, One)
                            }
                        }
                    }

                    Name (GMGP, 0x50)
                    Method (GMSP, 1, NotSerialized)
                    {
                        If ((Arg0 <= One))
                        {
                            SGII (0x01070010, Arg0)
                        }
                    }

                    Method (GMLV, 0, NotSerialized)
                    {
                        Return (GGIV (0x01070010))
                    }
                }
            }

            Device (PMCR)
            {
                Name (_ADR, 0x001F0002)  // _ADR: Address
            }

            Device (HDEF)
            {
                Name (_ADR, 0x001F0003)  // _ADR: Address
                OperationRegion (HDAR, PCI_Config, Zero, 0x60)
                Field (HDAR, WordAcc, NoLock, Preserve)
                {
                    VID0,   16, 
                    DID0,   16
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        If (((VID0 & 0xFFFF) != 0xFFFF))
                        {
                            Local0 = Package (0x04)
                                {
                                    "No-hda-gfx", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "hda-idle-support", 
                                    Buffer (0x02)
                                    {
                                        "1"
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }
                    }

                    Return (0x80000002)
                }
            }

            Device (SBUS)
            {
                Name (_ADR, 0x001F0004)  // _ADR: Address
                OperationRegion (SMBP, PCI_Config, 0x40, 0xC0)
                Field (SMBP, DWordAcc, NoLock, Preserve)
                {
                        ,   2, 
                    I2CE,   1
                }

                OperationRegion (SMPB, PCI_Config, 0x20, 0x04)
                Field (SMPB, DWordAcc, NoLock, Preserve)
                {
                        ,   5, 
                    SBAR,   11
                }

                OperationRegion (SMBI, SystemIO, (SBAR << 0x05), 0x10)
                Field (SMBI, ByteAcc, NoLock, Preserve)
                {
                    HSTS,   8, 
                    Offset (0x02), 
                    HCON,   8, 
                    HCOM,   8, 
                    TXSA,   8, 
                    DAT0,   8, 
                    DAT1,   8, 
                    HBDR,   8, 
                    PECR,   8, 
                    RXSA,   8, 
                    SDAT,   16
                }

                Method (SSXB, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = Arg0
                    HCOM = Arg1
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRXB, 1, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = (Arg0 | One)
                    HCON = 0x44
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                    }

                    Return (0xFFFF)
                }

                Method (SWRB, 3, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = Arg0
                    HCOM = Arg1
                    DAT0 = Arg2
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRDB, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                    }

                    Return (0xFFFF)
                }

                Method (SWRW, 3, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = Arg0
                    HCOM = Arg1
                    DAT1 = (Arg2 & 0xFF)
                    DAT0 = ((Arg2 >> 0x08) & 0xFF)
                    HCON = 0x4C
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRDW, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXSA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x4C
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (((DAT0 << 0x08) | DAT1))
                    }

                    Return (0xFFFFFFFF)
                }

                Method (SBLW, 4, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Arg3
                    HSTS = 0xBF
                    TXSA = Arg0
                    HCOM = Arg1
                    DAT0 = SizeOf (Arg2)
                    Local1 = Zero
                    HBDR = DerefOf (Arg2 [Zero])
                    HCON = 0x54
                    While ((SizeOf (Arg2) > Local1))
                    {
                        Local0 = 0x4E20
                        While ((!(HSTS & 0x80) && Local0))
                        {
                            Local0--
                        }

                        If (!Local0)
                        {
                            KILL ()
                            Return (Zero)
                        }

                        Local1++
                        If ((SizeOf (Arg2) > Local1))
                        {
                            HBDR = DerefOf (Arg2 [Local1])
                            HSTS = 0x80
                        }
                    }

                    HSTS = 0x80
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SBLR, 3, Serialized)
                {
                    Name (TBUF, Buffer (0x0100){})
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Arg2
                    HSTS = 0xBF
                    TXSA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x54
                    Local0 = 0x0FA0
                    While ((!(HSTS & 0x80) && Local0))
                    {
                        Local0--
                        Stall (0x32)
                    }

                    If (!Local0)
                    {
                        KILL ()
                        Return (Zero)
                    }

                    TBUF [Zero] = DAT0 /* \_SB_.PCI0.SBUS.DAT0 */
                    HSTS = 0x80
                    Local1 = One
                    While ((Local1 < DerefOf (TBUF [Zero])))
                    {
                        Local0 = 0x0FA0
                        While ((!(HSTS & 0x80) && Local0))
                        {
                            Local0--
                            Stall (0x32)
                        }

                        If (!Local0)
                        {
                            KILL ()
                            Return (Zero)
                        }

                        TBUF [Local1] = HBDR /* \_SB_.PCI0.SBUS.HBDR */
                        HSTS = 0x80
                        Local1++
                    }

                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (TBUF) /* \_SB_.PCI0.SBUS.SBLR.TBUF */
                    }

                    Return (Zero)
                }

                Method (STRT, 0, Serialized)
                {
                    Local0 = 0xC8
                    While (Local0)
                    {
                        If ((HSTS & 0x40))
                        {
                            Local0--
                            Sleep (One)
                            If ((Local0 == Zero))
                            {
                                Return (One)
                            }
                        }
                        Else
                        {
                            Local0 = Zero
                        }
                    }

                    Local0 = 0x0FA0
                    While (Local0)
                    {
                        If ((HSTS & One))
                        {
                            Local0--
                            Stall (0x32)
                            If ((Local0 == Zero))
                            {
                                KILL ()
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Return (One)
                }

                Method (COMP, 0, Serialized)
                {
                    Local0 = 0x0FA0
                    While (Local0)
                    {
                        If ((HSTS & 0x02))
                        {
                            Return (One)
                        }
                        Else
                        {
                            Local0--
                            Stall (0x32)
                            If ((Local0 == Zero))
                            {
                                KILL ()
                            }
                        }
                    }

                    Return (Zero)
                }

                Method (KILL, 0, Serialized)
                {
                    HCON |= 0x02
                    HSTS |= 0xFF
                }

                Device (BUS0)
                {
                    Name (_CID, "smbus")  // _CID: Compatible ID
                    Name (_ADR, Zero)  // _ADR: Address
                }

                Device (BUS1)
                {
                    Name (_CID, "smbus")  // _CID: Compatible ID
                    Name (_ADR, One)  // _ADR: Address
                }
            }

            Scope (RP01)
            {
                OperationRegion (A1E0, PCI_Config, Zero, 0x0380)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x04), 
                    BMIE,   3, 
                    Offset (0x19), 
                    SECB,   8, 
                    SBBN,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    MABT,   1, 
                    Offset (0x4A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x50), 
                        ,   4, 
                    LDIS,   1, 
                        ,   24, 
                    LACT,   1, 
                    Offset (0xA4), 
                    PSTA,   2, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23D,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }

                OperationRegion (PMST, SystemMemory, 0xFE0003EC, 0x04)
                Field (PMST, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x02), 
                    CS1E,   1
                }

                OperationRegion (A1E1, PCI_Config, 0x18, 0x04)
                Field (A1E1, DWordAcc, NoLock, Preserve)
                {
                    BNIR,   32
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    If (((BMIE == Zero) && (SECB == 0xFF)))
                    {
                        Return (SNBS) /* \_SB_.PCI0.RP01.SNBS */
                    }
                    Else
                    {
                        Return (SECB) /* \_SB_.PCI0.RP01.SECB */
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Name (BMIS, Zero)
                Name (SNBS, Zero)
                Name (BNIS, Zero)
                Method (DPWR, 1, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (0xFF)
                    }

                    If ((Arg0 == Zero))
                    {
                        ^^LPCB.EC.APWC = Zero
                        Sleep (0x5A)
                        Return (Zero)
                    }

                    If ((Arg0 == One))
                    {
                        ^^LPCB.EC.APWC = One
                        Sleep (0xFA)
                        Return (One)
                    }

                    Return (^^LPCB.EC.APWC) /* \_SB_.PCI0.LPCB.EC__.APWC */
                }

                Method (DRST, 1, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (0xFF)
                    }

                    If ((Arg0 == Zero))
                    {
                        SGDI (0x01000012)
                        Sleep (0x64)
                        Return (One)
                    }

                    If ((Arg0 == One))
                    {
                        SGOV (0x01000012, Zero)
                        SGDO (0x01000012)
                        Sleep (0x64)
                        Return (Zero)
                    }

                    Return (!GGDV (0x01000012))
                }

                Method (APPD, 0, Serialized)
                {
                    If ((!OSDW () || ((WOWE == One) || (TAPD != One))))
                    {
                        ^ARPT.PSTA = 0x03
                        L23E = One
                        Local0 = Zero
                        While (L23E)
                        {
                            If ((Local0 > 0x04))
                            {
                                Break
                            }

                            Sleep (One)
                            Local0++
                        }

                        DRST (One)
                        Return (Zero)
                    }

                    ^ARPT.PSTA = 0x03
                    CS1E = Zero
                    If ((((BMIE != Zero) && (BMIE != BMIS)) && (
                        ((SECB != Zero) && (SECB != SNBS)) && ((BNIR != 
                        Zero) && (BNIR != BNIS)))))
                    {
                        BMIS = BMIE /* \_SB_.PCI0.RP01.BMIE */
                        SNBS = SECB /* \_SB_.PCI0.RP01.SECB */
                        BNIS = BNIR /* \_SB_.PCI0.RP01.BNIR */
                    }

                    BMIE = Zero
                    BNIR = 0x00FEFF00
                    Local0 = TPEN /* \_SB_.PCI0.RP01.TPEN */
                    PSTA = 0x03
                    Local0 = TPEN /* \_SB_.PCI0.RP01.TPEN */
                    LDIS = One
                    Local0 = (Timer + 0x00989680)
                    While ((Timer <= Local0))
                    {
                        If ((LACT == Zero))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    If ((TAPD == One))
                    {
                        If ((WOWE == Zero))
                        {
                            DRST (One)
                        }

                        DPWR (Zero)
                    }

                    Return (Zero)
                }

                Method (APPU, 0, Serialized)
                {
                    If ((!OSDW () || ((WOWE == One) || (TAPD != One))))
                    {
                        DRST (Zero)
                    }

                    If ((OSDW () && ((WOWE == One) && (TAPD == One))))
                    {
                        WAPS ()
                    }

                    If ((!OSDW () || ((WOWE == One) || (TAPD != One))))
                    {
                        WOWE = Zero
                        Return (Zero)
                    }

                    PSTA = Zero
                    If ((SECB != 0xFF))
                    {
                        WAPS ()
                        Return (Zero)
                    }

                    BNIR = BNIS /* \_SB_.PCI0.RP01.BNIS */
                    CS1E = One
                    LDIS = Zero
                    WOWE = Zero
                    If ((DPWR (0xFF) == One))
                    {
                        WAPS ()
                        Return (Zero)
                    }

                    Local0 = Zero
                    While (One)
                    {
                        DPWR (One)
                        If (((TAPD == One) && (WOWE == Zero)))
                        {
                            DRST (Zero)
                        }

                        Local1 = Zero
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If (((LACT == One) && (^ARPT.AVND != 0xFFFF)))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((Local1 == One))
                        {
                            WAPS ()
                            MABT = One
                            Break
                        }

                        If ((Local0 == 0x04))
                        {
                            Break
                        }

                        Local0++
                        DPWR (Zero)
                    }

                    Return (Zero)
                }

                Method (ALPR, 1, NotSerialized)
                {
                    If ((Arg0 == One))
                    {
                        APPD ()
                    }
                    Else
                    {
                        APPU ()
                    }
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        ALPR (Zero)
                        MPPG = Zero
                        HCPG = One
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (OSDW ())
                    {
                        MPPG = One
                        HCPG = Zero
                        ALPR (One)
                    }
                }

                Method (WAPS, 0, Serialized)
                {
                    ^ARPT.BDEN = 0x40
                    ^ARPT.BDMR = 0x18003000
                    ^ARPT.BDIR = 0x0120
                    ^ARPT.BDDR = 0x0438
                    ^ARPT.BDIR = 0x0124
                    ^ARPT.BDDR = 0x0173106B
                    ^ARPT.BDEN = Zero
                }

                Device (ARPT)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (ARE2, PCI_Config, Zero, 0x80)
                    Field (ARE2, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x4C), 
                        PSTA,   2
                    }

                    OperationRegion (ARE3, PCI_Config, 0x80, 0x80)
                    Field (ARE3, DWordAcc, NoLock, Preserve)
                    {
                        BDMR,   32, 
                        Offset (0x08), 
                        BDEN,   32, 
                        Offset (0x20), 
                        BDIR,   32, 
                        BDDR,   32
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x03
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x04
                            })
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Method (WWEN, 1, NotSerialized)
                    {
                        WOWE = Arg0
                    }

                    Method (PDEN, 1, NotSerialized)
                    {
                        TAPD = Arg0
                    }
                }
            }

            Scope (RP17)
            {
                OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x04), 
                    BMIE,   3, 
                    Offset (0x19), 
                    SECB,   8, 
                    SBBN,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    MABT,   1
                }

                OperationRegion (A1E1, PCI_Config, Zero, 0x0380)
                Field (A1E1, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x4A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x50), 
                    ASPM,   2, 
                        ,   2, 
                    LDIS,   1, 
                    LRTN,   1, 
                    Offset (0x52), 
                    LSPD,   4, 
                        ,   7, 
                    LTRN,   1, 
                        ,   1, 
                    LACT,   1, 
                    Offset (0x64), 
                        ,   11, 
                    LTRS,   1, 
                    Offset (0x68), 
                        ,   10, 
                    LTRE,   1, 
                    Offset (0xA4), 
                    PSTA,   2, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23D,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (OSDW ())
                    {
                        If ((NVME != One))
                        {
                            PSTA = 0x03
                            Local0 = Zero
                            While ((PSTA != 0x03))
                            {
                                If ((Local0 > 0x1388))
                                {
                                    Break
                                }

                                Sleep (One)
                                Local0++
                            }

                            LDIS = One
                        }
                    }
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If ((NVME != One))
                    {
                        SGDI (0x01050009)
                        PSTA = Zero
                        Local0 = Zero
                        While ((PSTA != Zero))
                        {
                            If ((Local0 > 0x1388))
                            {
                                Break
                            }

                            Sleep (One)
                            Local0++
                        }

                        Sleep (0x0F)
                        LDIS = Zero
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If (((LACT == One) && (^SSD0.CLAS == One)))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        Local2 = ^SSD0.SVID /* \_SB_.PCI0.RP17.SSD0.SVID */
                        Local3 = ^SSD0.SDID /* \_SB_.PCI0.RP17.SSD0.SDID */
                        If (((Local2 == 0x144D) && (Local3 == 0xA804)))
                        {
                            ^SSD0.L1EL = 0x3F
                        }

                        LTRS = One
                        LTRE = One
                    }
                }

                Device (SSD0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If ((MFIX == One))
                        {
                            Return (One)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    OperationRegion (SSE1, PCI_Config, Zero, 0x1000)
                    Field (SSE1, ByteAcc, NoLock, Preserve)
                    {
                        SVID,   16, 
                        SDID,   16, 
                        Offset (0x0B), 
                        CLAS,   8, 
                        Offset (0xC00), 
                        L1EL,   32
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((NVME == One))
                        {
                            Local0 = Package (0x02)
                                {
                                    "use-msi", 
                                    One
                                }
                        }
                        ElseIf ((NVME == 0x02))
                        {
                            Local0 = Package (0x02)
                                {
                                    "use-msi", 
                                    One
                                }
                        }

                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }
            }

            Device (I2C0)
            {
                Name (_ADR, 0x00150000)  // _ADR: Address
                Name (_UID, One)  // _UID: Unique ID
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000010,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x06)
                            {
                                "i2c-channel-number", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "i2c-pin-sda", 
                                Buffer (0x08)
                                {
                                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "i2c-pin-scl", 
                                Buffer (0x08)
                                {
                                     0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.I2C0.RBUF */
                }
            }

            Device (SPI0)
            {
                Name (_ADR, 0x001E0002)  // _ADR: Address
                Name (_DDN, "Intel(R) Low Power Subsystem SPI Host Controller - 9D29")  // _DDN: DOS Device Name
                Name (_UID, One)  // _UID: Unique ID
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000016,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x0E)
                            {
                                "gspi-channel-number", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-channels-count", 
                                Buffer (0x08)
                                {
                                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-sys-clock-period", 
                                Buffer (0x08)
                                {
                                     0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-pin-cs", 
                                Buffer (0x08)
                                {
                                     0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // S.......
                                }, 

                                "gspi-pin-clk", 
                                Buffer (0x08)
                                {
                                     0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // T.......
                                }, 

                                "gspi-pin-mosi", 
                                Buffer (0x08)
                                {
                                     0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // U.......
                                }, 

                                "gspi-pin-miso", 
                                Buffer (0x08)
                                {
                                     0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // V.......
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.SPI0.RBUF */
                }
            }

            Device (SPI1)
            {
                Name (_ADR, 0x001E0003)  // _ADR: Address
                Name (_DDN, "Intel(R) Low Power Subsystem SPI Host Controller - 9D2A")  // _DDN: DOS Device Name
                Name (_UID, 0x02)  // _UID: Unique ID
                Name (CSST, 0x28)
                Name (CSHT, 0x0A)
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000017,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x0E)
                            {
                                "gspi-channel-number", 
                                Buffer (0x08)
                                {
                                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-channels-count", 
                                Buffer (0x08)
                                {
                                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-sys-clock-period", 
                                Buffer (0x08)
                                {
                                     0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-pin-cs", 
                                Buffer (0x08)
                                {
                                     0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // W.......
                                }, 

                                "gspi-pin-clk", 
                                Buffer (0x08)
                                {
                                     0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // X.......
                                }, 

                                "gspi-pin-mosi", 
                                Buffer (0x08)
                                {
                                     0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Y.......
                                }, 

                                "gspi-pin-miso", 
                                Buffer (0x08)
                                {
                                     0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Z.......
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Name (WBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    If (!OSDW ())
                    {
                        Return (WBUF) /* \_SB_.PCI0.SPI1.WBUF */
                    }

                    Return (RBUF) /* \_SB_.PCI0.SPI1.RBUF */
                }
            }

            Device (URT0)
            {
                Name (_ADR, 0x001E0000)  // _ADR: Address
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000014,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x02)
                            {
                                "uart-channel-number", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.URT0.RBUF */
                }
            }

            Device (URT1)
            {
                Name (_ADR, 0x001E0001)  // _ADR: Address
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x02)
                            {
                                "uart-channel-number", 
                                Buffer (0x08)
                                {
                                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.URT1.RBUF */
                }
            }

            Device (URT2)
            {
                Name (_ADR, 0x00190000)  // _ADR: Address
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                    {
                        Local0 = Package (0x02)
                            {
                                "uart-channel-number", 
                                Buffer (0x08)
                                {
                                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.URT2.RBUF */
                }
            }

            Scope (SPI1)
            {
                Device (SPIT)
                {
                    Name (_HID, EisaId ("APP000D"))  // _HID: Hardware ID
                    Name (_CID, "apple-spi-topcase")  // _CID: Compatible ID
                    Name (_DDN, "apple-spi-topcase")  // _DDN: DOS Device Name
                    Name (_GPE, 0x17)  // _GPE: General Purpose Events
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x17, 
                                0x03
                            })
                        }

                        Return (Package (0x02)
                        {
                            0x17, 
                            0x03
                        })
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (CLRB, 0, NotSerialized)
                    {
                        SREG (0x0100, 0x00800000)
                    }

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        Name (UBUF, ResourceTemplate ()
                        {
                            SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                                ControllerInitiated, 0x007A1200, ClockPolarityLow,
                                ClockPhaseFirst, "\\_SB.PCI0.SPI1",
                                0x00, ResourceConsumer, , Exclusive,
                                )
                            Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                            {
                                0x0000000E,
                            }
                        })
                        Name (ABUF, Buffer (0x02)
                        {
                             0x79, 0x00                                       // y.
                        })
                        If (!OSDW ())
                        {
                            Return (UBUF) /* \_SB_.PCI0.SPI1.SPIT._CRS.UBUF */
                        }

                        Return (ABUF) /* \_SB_.PCI0.SPI1.SPIT._CRS.ABUF */
                    }

                    Scope (\_GPE)
                    {
                        Method (_L17, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
                        {
                            Notify (\_SB.PCI0.SPI1.SPIT, 0x02) // Device Wake
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x10)
                                    {
                                        "spiSclkPeriod", 
                                        Buffer (0x08)
                                        {
                                             0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // }.......
                                        }, 

                                        "spiWordSize", 
                                        Buffer (0x08)
                                        {
                                             0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "spiBitOrder", 
                                        Buffer (0x08)
                                        {
                                             0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "spiSPO", 
                                        Buffer (0x08)
                                        {
                                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "spiSPH", 
                                        Buffer (0x08)
                                        {
                                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "spiCSDelay", 
                                        Buffer (0x08)
                                        {
                                             0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "resetA2RUsec", 
                                        Buffer (0x08)
                                        {
                                             0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }, 

                                        "resetRecUsec", 
                                        Buffer (0x08)
                                        {
                                             0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Method (SIEN, 1, Serialized)
                    {
                        Local0 = One
                        If (Local0){}
                        Else
                        {
                        }

                        If ((Arg0 == One))
                        {
                            If (Local0)
                            {
                                SGDI (0x01000016)
                            }
                            Else
                            {
                                SGOV (0x01000016, One)
                                SGDO (0x01000016)
                            }
                        }
                        ElseIf (Local0)
                        {
                            SGOV (0x01000016, Zero)
                            SGDO (0x01000016)
                        }
                        Else
                        {
                            SGDI (0x01000016)
                        }
                    }

                    Method (SIST, 0, Serialized)
                    {
                        Local0 = GGDV (0x01000016)
                        If ((Local0 == One))
                        {
                            Local0 = GGIV (0x01000016)
                            Return (GGIV (0x01000016))
                        }
                        Else
                        {
                            Local0 = GGOV (0x01000016)
                            Return (GGOV (0x01000016))
                        }
                    }
                }

                Method (ISOL, 1, Serialized)
                {
                    If ((Arg0 <= One))
                    {
                        If ((Arg0 == One))
                        {
                            SGOV (0x01010013, One)
                            SGOV (0x01010014, Zero)
                            SGOV (0x01010015, Zero)
                            SGOV (0x01010016, Zero)
                            SGDO (0x01010013)
                            SGDO (0x01010014)
                            SGDI (0x01010015)
                            SGDO (0x01010016)
                            SPMV (0x01010013, Zero)
                            SPMV (0x01010014, Zero)
                            SPMV (0x01010015, Zero)
                            SPMV (0x01010016, Zero)
                            Local0 = GGOV (0x01010013)
                        }
                        Else
                        {
                            SPMV (0x01010013, One)
                            SPMV (0x01010014, One)
                            SPMV (0x01010015, One)
                            SPMV (0x01010016, One)
                            SGOV (0x01010013, Zero)
                            SGOV (0x01010014, Zero)
                            SGOV (0x01010015, Zero)
                            SGOV (0x01010016, Zero)
                            SGDO (0x01010013)
                            SGDO (0x01010014)
                            SGDO (0x01010015)
                            SGDO (0x01010016)
                            Local0 = GGOV (0x01010013)
                        }

                        Return (Zero)
                    }

                    Return (0xFFFFFFFF)
                }
            }

            Scope (I2C0)
            {
                Device (SSDC)
                {
                    Name (_CID, "apple-i2c-ssdc0")  // _CID: Compatible ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x1E)
                                {
                                    "i2cAddress", 
                                    Buffer (0x08)
                                    {
                                         0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // j.......
                                    }, 

                                    "i2cSize", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "addrWidth", 
                                    Buffer (0x08)
                                    {
                                         0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "dataWidth", 
                                    Buffer (0x08)
                                    {
                                         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "sclMode", 
                                    Buffer (0x08)
                                    {
                                         0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "sclLcnt", 
                                    Buffer (0x08)
                                    {
                                         0xA0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "sclHcnt", 
                                    Buffer (0x08)
                                    {
                                         0xA0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "sclPeriod", 
                                    Buffer (0x08)
                                    {
                                         0x6A, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00   // j.......
                                    }, 

                                    "sclHz", 
                                    Buffer (0x08)
                                    {
                                         0x98, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // .:......
                                    }, 

                                    "sdaHold", 
                                    Buffer (0x08)
                                    {
                                         0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "sdaSetup", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "ioVoltageSelect", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "ltrSWMode", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "ltrEnb", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "powerStrategy", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }
                }
            }

            Scope (URT0)
            {
                Device (BLTH)
                {
                    Name (_HID, EisaId ("BCM2E7C"))  // _HID: Hardware ID
                    Name (_CID, "apple-uart-blth")  // _CID: Compatible ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x04
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x03
                            })
                        }
                    }

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        Name (UBUF, ResourceTemplate ()
                        {
                            UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                                0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                                0x0020, 0x0020, "\\_SB.PCI0.URT0",
                                0x00, ResourceProducer, , Exclusive,
                                )
                        })
                        Name (ABUF, Buffer (0x02)
                        {
                             0x79, 0x00                                       // y.
                        })
                        If (!OSDW ())
                        {
                            Return (UBUF) /* \_SB_.PCI0.URT0.BLTH._CRS.UBUF */
                        }

                        Return (ABUF) /* \_SB_.PCI0.URT0.BLTH._CRS.ABUF */
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x08)
                                {
                                    "baud", 
                                    Buffer (0x08)
                                    {
                                         0xC0, 0xC6, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00   // ..-.....
                                    }, 

                                    "parity", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "dataBits", 
                                    Buffer (0x08)
                                    {
                                         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "stopBits", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }

                    Method (BTPU, 0, Serialized)
                    {
                        ^^^LPCB.EC.BTPC = One
                        Sleep (0xFA)
                    }

                    Method (BTPD, 0, Serialized)
                    {
                        ^^^LPCB.EC.BTPC = Zero
                        Sleep (0x0A)
                    }

                    Method (BTRS, 0, Serialized)
                    {
                        BTPD ()
                        BTPU ()
                    }

                    Method (BTLP, 1, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            SGDI (0x01010002)
                        }

                        If ((Arg0 == One))
                        {
                            SGOV (0x01010002, Zero)
                            SGDO (0x01010002)
                        }
                    }

                    Method (BTRB, 1, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            SGOV (0x01060009, Zero)
                            SGDO (0x01060009)
                        }

                        If ((Arg0 == One))
                        {
                            SGOV (0x01060009, One)
                            SGDO (0x01060009)
                        }
                    }
                }
            }

            Scope (URT1)
            {
                Device (SOC)
                {
                    Name (_CID, "apple-uart-soc")  // _CID: Compatible ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x08)
                                {
                                    "baud", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0xC2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "parity", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "dataBits", 
                                    Buffer (0x08)
                                    {
                                         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "stopBits", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }
                }
            }

            Scope (URT2)
            {
                Device (MALS)
                {
                    Name (_CID, "apple-uart-soc-als")  // _CID: Compatible ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x08)
                                {
                                    "baud", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0xC2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "parity", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "dataBits", 
                                    Buffer (0x08)
                                    {
                                         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "stopBits", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }
                }
            }
        }

        Device (ADP1)
        {
            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW ())
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x04
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x03
                    })
                }
            }

            Name (WK00, One)
            Method (SWAK, 1, NotSerialized)
            {
                WK00 = (Arg0 & 0x03)
                If (!WK00)
                {
                    WK00 = One
                }
            }

            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Return (PWRS) /* \PWRS */
            }

            Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List
            {
                Return (_SB) /* \_SB_ */
            }

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {
                If (OSDW ())
                {
                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        If (Arg0)
                        {
                            If ((WK00 & One))
                            {
                                ^^PCI0.LPCB.EC.EWAI = One
                            }

                            If ((WK00 & 0x02))
                            {
                                ^^PCI0.LPCB.EC.EWAR = One
                            }
                        }
                        Else
                        {
                            ^^PCI0.LPCB.EC.EWAI = Zero
                            ^^PCI0.LPCB.EC.EWAR = Zero
                        }
                    }
                }
            }
        }

        Device (LID0)
        {
            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW ())
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x04
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x03
                    })
                }
            }

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                LIDS = ^^PCI0.LPCB.EC.ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                ^^PCI0.IGPU.CLID = ^^PCI0.LPCB.EC.ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                Return (LIDS) /* \LIDS */
            }

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {
                If (^^PCI0.LPCB.EC.ECOK)
                {
                    If (Arg0)
                    {
                        ^^PCI0.LPCB.EC.EWLO = One
                    }
                    Else
                    {
                        ^^PCI0.LPCB.EC.EWLO = Zero
                    }
                }
            }
        }

        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                {
                    Local0 = Package (0x04)
                        {
                            "power-button-usage", 
                            Buffer (0x08)
                            {
                                 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // @.......
                            }, 

                            "power-button-usagepage", 
                            Buffer (0x08)
                            {
                                 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                            }
                        }
                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                    Return (Local0)
                }

                Return (Zero)
            }
        }
    }

    Scope (_PR)
    {
        Processor (CPU0, 0x01, 0x00000410, 0x06){}
        Processor (CPU1, 0x02, 0x00000410, 0x06){}
        Processor (CPU2, 0x03, 0x00000410, 0x06){}
        Processor (CPU3, 0x04, 0x00000410, 0x06){}
        Processor (CPU4, 0x05, 0x00000410, 0x06){}
        Processor (CPU5, 0x06, 0x00000410, 0x06){}
        Processor (CPU6, 0x07, 0x00000410, 0x06){}
        Processor (CPU7, 0x08, 0x00000410, 0x06){}
    }

    Scope (_SB)
    {
        OperationRegion (ITSS, SystemMemory, 0xFDC43100, 0x0208)
        Field (ITSS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x200), 
                ,   1, 
                ,   1, 
            SCGE,   1
        }
    }

    Mutex (MUTX, 0x00)
    Name (SLTP, Zero)
    Name (TBH1, Zero)
    Name (TBH2, Zero)
    Name (TBG0, Zero)
    Name (TBG1, Zero)
    Name (TBG2, Zero)
    OperationRegion (PRT0, SystemIO, 0x80, 0x04)
    Field (PRT0, DWordAcc, NoLock, Preserve)
    {
        P80H,   32
    }

    OperationRegion (PLMT, SystemIO, 0x0310, 0x0A)
    Field (PLMT, WordAcc, NoLock, Preserve)
    {
        CPLT,   8, 
        IGPS,   8, 
        MPLT,   8, 
        CFIL,   8, 
        EGPS,   8
    }

    OperationRegion (S0BA, SystemMemory, 0xE00A8084, 0x04)
    Field (S0BA, DWordAcc, NoLock, Preserve)
    {
        S0D3,   2
    }

    OperationRegion (S4BA, SystemMemory, 0xE00AC084, 0x04)
    Field (S4BA, DWordAcc, NoLock, Preserve)
    {
        S4D3,   2
    }

    OperationRegion (TCOI, SystemIO, 0x1860, 0x08)
    Field (TCOI, WordAcc, NoLock, Preserve)
    {
        Offset (0x04), 
            ,   9, 
        SCIS,   1, 
        Offset (0x06)
    }

    Method (P8XH, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            P80D = ((P80D & 0xFFFFFF00) | Arg1)
        }

        If ((Arg0 == One))
        {
            P80D = ((P80D & 0xFFFF00FF) | (Arg1 << 0x08))
        }

        If ((Arg0 == 0x02))
        {
            P80D = ((P80D & 0xFF00FFFF) | (Arg1 << 0x10))
        }

        If ((Arg0 == 0x03))
        {
            P80D = ((P80D & 0x00FFFFFF) | (Arg1 << 0x18))
        }

        P80H = P80D /* \P80D */
    }

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
    Field (SPRT, ByteAcc, NoLock, Preserve)
    {
        SSMP,   8, 
        SSMY,   8
    }

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        GPIC = Arg0
        PICM = Arg0
    }

    Method (GETB, 3, Serialized)
    {
        Local0 = (Arg0 * 0x08)
        Local1 = (Arg1 * 0x08)
        CreateField (Arg2, Local0, Local1, TBF3)
        Return (TBF3) /* \GETB.TBF3 */
    }

    Method (PNOT, 0, Serialized)
    {
        If ((TCNT > One))
        {
            If ((PDC0 & 0x08))
            {
                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                If ((PDC0 & 0x10))
                {
                    Notify (\_PR.CPU0, 0x81) // C-State Change
                }
            }

            If ((PDC1 & 0x08))
            {
                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                If ((PDC1 & 0x10))
                {
                    Notify (\_PR.CPU1, 0x81) // C-State Change
                }
            }

            If ((PDC2 & 0x08))
            {
                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
                If ((PDC2 & 0x10))
                {
                    Notify (\_PR.CPU2, 0x81) // C-State Change
                }
            }

            If ((PDC3 & 0x08))
            {
                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                If ((PDC3 & 0x10))
                {
                    Notify (\_PR.CPU3, 0x81) // C-State Change
                }
            }

            If ((PDC4 & 0x08))
            {
                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
                If ((PDC4 & 0x10))
                {
                    Notify (\_PR.CPU4, 0x81) // C-State Change
                }
            }

            If ((PDC5 & 0x08))
            {
                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
                If ((PDC5 & 0x10))
                {
                    Notify (\_PR.CPU5, 0x81) // C-State Change
                }
            }

            If ((PDC6 & 0x08))
            {
                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
                If ((PDC6 & 0x10))
                {
                    Notify (\_PR.CPU6, 0x81) // C-State Change
                }
            }

            If ((PDC7 & 0x08))
            {
                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
                If ((PDC7 & 0x10))
                {
                    Notify (\_PR.CPU7, 0x81) // C-State Change
                }
            }
        }
        Else
        {
            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
            Notify (\_PR.CPU0, 0x81) // C-State Change
        }
    }

    Method (DSPI, 0, Serialized)
    {
        If (!OSDW ()){}
    }

    Method (TRAP, 2, Serialized)
    {
        SMIF = Arg1
        If ((Arg0 == TRTP))
        {
            TRP0 = Zero
        }

        If ((Arg0 == TRTD))
        {
            DTSF = Arg1
            TRPD = Zero
            Return (DTSF) /* \DTSF */
        }

        If ((Arg0 == TRTI))
        {
            TRPH = Zero
        }

        Return (SMIF) /* \SMIF */
    }

    Scope (_SB)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            PINI ()
            If (!OSDW ())
            {
                PTOP ()
            }
            Else
            {
                SGDI (0x02000017)
            }
        }

        Method (PTOP, 0, NotSerialized)
        {
            SREG (0x0120, 0x00800000)
            SREG (0xD0, 0x00800000)
            SPC0 (0x02000017, 0x80900100)
        }

        Device (USBX)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                Local0 = Package (0x04)
                    {
                        "kUSBSleepPortCurrentLimit", 
                        0x0BB8, 
                        "kUSBWakePortCurrentLimit", 
                        0x0BB8
                    }
                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                Return (Local0)
            }
        }

        Device (PNLF)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, EisaId ("APP0002"))  // _HID: Hardware ID
            Name (_CID, "backlight")  // _CID: Compatible ID
            Name (_UID, 0x10)  // _UID: Unique ID
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    Scope (_SB.PCI0)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            OSYS = 0x07DC
            If (CondRefOf (\_OSI, Local0))
            {
                If (_OSI ("Darwin"))
                {
                    OSYS = 0x2710
                }

                If (_OSI ("Linux"))
                {
                    OSYS = 0x03E8
                }

                If (_OSI ("Windows 2009"))
                {
                    OSYS = 0x07D9
                }

                If (_OSI ("Windows 2012"))
                {
                    OSYS = 0x07DC
                }
            }

            If (!OSDW ()){}
        }

        Method (NHPG, 0, Serialized)
        {
        }

        Method (NPME, 0, Serialized)
        {
        }
    }

    Scope (\)
    {
        Name (PICM, Zero)
        Method (OSDW, 0, NotSerialized)
        {
            If ((OSYS == 0x2710))
            {
                Return (One)
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (PINI, 0, NotSerialized)
        {
            OSYS = 0x07DC
            If (CondRefOf (_OSI, Local0))
            {
                If (_OSI ("Darwin"))
                {
                    OSYS = 0x2710
                }
                ElseIf (_OSI ("Linux"))
                {
                    OSYS = 0x03E8
                }
                ElseIf (_OSI ("Windows 2009"))
                {
                    OSYS = 0x07D9
                }
                ElseIf (_OSI ("Windows 2012"))
                {
                    OSYS = 0x07DC
                }
            }
            Else
            {
                OSYS = 0x07DC
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PDRC)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (BUF0, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y11)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y12)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y13)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y14)
                Memory32Fixed (ReadWrite,
                    0xFD000000,         // Address Base
                    0x01800000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y10)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._BAS, TBR0)  // _BAS: Base Address
                TBR0 = TBAB /* \TBAB */
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._LEN, TBLN)  // _LEN: Length
                If ((TBAB == Zero))
                {
                    TBLN = Zero
                }

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y11._BAS, MBR0)  // _BAS: Base Address
                MBR0 = (MHBR << 0x0F)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, DBR0)  // _BAS: Base Address
                DBR0 = (DIBR << 0x0C)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, EBR0)  // _BAS: Base Address
                EBR0 = (EPBR << 0x0C)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, XBR0)  // _BAS: Base Address
                XBR0 = (PXBR << 0x1A)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._LEN, XSZ0)  // _LEN: Length
                XSZ0 = (0x10000000 >> PXSZ) /* \_SB_.PCI0.PXSZ */
                Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
            }
        }
    }

    Name (PNVB, 0x7AF7EC18)
    Name (PNVL, 0x0287)
    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)
    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        PCHS,   16, 
        PCHG,   16, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        RPA8,   32, 
        RPA9,   32, 
        RPAA,   32, 
        RPAB,   32, 
        RPAC,   32, 
        RPAD,   32, 
        RPAE,   32, 
        RPAF,   32, 
        RPAG,   32, 
        RPAH,   32, 
        RPAI,   32, 
        RPAJ,   32, 
        RPAK,   32, 
        RPAL,   32, 
        RPAM,   32, 
        RPAN,   32, 
        RPAO,   32, 
        NHLA,   64, 
        NHLL,   32, 
        ADFM,   32, 
        SBRG,   32, 
        GPEM,   32, 
        G2L0,   32, 
        G2L1,   32, 
        G2L2,   32, 
        G2L3,   32, 
        G2L4,   32, 
        G2L5,   32, 
        G2L6,   32, 
        G2L7,   32, 
        G2L8,   32, 
        G2L9,   32, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PML9,   16, 
        PMLA,   16, 
        PMLB,   16, 
        PMLC,   16, 
        PMLD,   16, 
        PMLE,   16, 
        PMLF,   16, 
        PMLG,   16, 
        PMLH,   16, 
        PMLI,   16, 
        PMLJ,   16, 
        PMLK,   16, 
        PMLL,   16, 
        PMLM,   16, 
        XXXX,   16, 
        PMLO,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        PNL9,   16, 
        PNLA,   16, 
        PNLB,   16, 
        PNLC,   16, 
        PNLD,   16, 
        PNLE,   16, 
        PNLF,   16, 
        PNLG,   16, 
        PNLH,   16, 
        PNLI,   16, 
        PNLJ,   16, 
        PNLK,   16, 
        PNLL,   16, 
        PNLM,   16, 
        PNLN,   16, 
        PNLO,   16, 
        U0C0,   32, 
        U1C0,   32, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        HPTB,   32, 
        HPTE,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SMD8,   8, 
        SMD9,   8, 
        SMDA,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SIR8,   8, 
        SIR9,   8, 
        SIRA,   8, 
        SB00,   32, 
        SB01,   32, 
        SB02,   32, 
        SB03,   32, 
        SB04,   32, 
        SB05,   32, 
        SB06,   32, 
        SB07,   32, 
        SB08,   32, 
        SB09,   32, 
        SB0A,   32, 
        SB10,   32, 
        SB11,   32, 
        SB12,   32, 
        SB13,   32, 
        SB14,   32, 
        SB15,   32, 
        SB16,   32, 
        SB17,   32, 
        SB18,   32, 
        SB19,   32, 
        SB1A,   32, 
        GPEN,   8, 
        SGIR,   8, 
        NIT1,   8, 
        NIT2,   8, 
        NIT3,   8, 
        NPM1,   8, 
        NPM2,   8, 
        NPM3,   8, 
        NPC1,   8, 
        NPC2,   8, 
        NPC3,   8, 
        NL11,   16, 
        NL12,   16, 
        NL13,   16, 
        ND21,   8, 
        ND22,   8, 
        ND23,   8, 
        ND11,   32, 
        ND12,   32, 
        ND13,   32, 
        NLR1,   16, 
        NLR2,   16, 
        NLR3,   16, 
        NLD1,   32, 
        NLD2,   32, 
        NLD3,   32, 
        NEA1,   16, 
        NEA2,   16, 
        NEA3,   16, 
        NEB1,   16, 
        NEB2,   16, 
        NEB3,   16, 
        NEC1,   16, 
        NEC2,   16, 
        NEC3,   16, 
        NRA1,   16, 
        NRA2,   16, 
        NRA3,   16, 
        NMB1,   32, 
        NMB2,   32, 
        NMB3,   32, 
        NMV1,   32, 
        NMV2,   32, 
        NMV3,   32, 
        NPB1,   32, 
        NPB2,   32, 
        NPB3,   32, 
        NPV1,   32, 
        NPV2,   32, 
        NPV3,   32, 
        NRP1,   32, 
        NRP2,   32, 
        NRP3,   32, 
        Offset (0x20A), 
        SXRB,   32, 
        SXRS,   32, 
        CIOE,   8, 
        CIOI,   8, 
        TAEN,   8, 
        TIRQ,   8, 
        XWMB,   32, 
        EMH4,   8, 
        CSKU,   8, 
        ITA0,   16, 
        ITA1,   16, 
        ITA2,   16, 
        ITA3,   16, 
        ITS0,   8, 
        ITS1,   8, 
        ITS2,   8, 
        ITS3,   8, 
        PMBS,   16, 
        PWRM,   32
    }

    Scope (_SB)
    {
        Name (GCOM, Package (0x02)
        {
            Package (0x08)
            {
                0x00AF0000, 
                0x00AF0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AC0000, 
                0x00AC0000, 
                0x00AD0000
            }, 

            Package (0x0A)
            {
                0x00AF0000, 
                0x00AF0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AE0000, 
                0x00AC0000, 
                0x00AD0000
            }
        })
        Name (GPPG, Package (0x02)
        {
            Package (0x08)
            {
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x08, 
                0x0C
            }, 

            Package (0x0A)
            {
                0x18, 
                0x18, 
                0x18, 
                0x18, 
                0x0D, 
                0x18, 
                0x18, 
                0x18, 
                0x0B, 
                0x0C
            }
        })
        Name (PCFG, Package (0x02)
        {
            Package (0x08)
            {
                0x0400, 
                0x04C0, 
                0x0400, 
                0x04C0, 
                0x0580, 
                0x0400, 
                0x04C0, 
                0x0400
            }, 

            Package (0x0A)
            {
                0x0400, 
                0x04C0, 
                0x0400, 
                0x04C0, 
                0x0580, 
                0x05E8, 
                0x06A8, 
                0x0768, 
                0x0400, 
                0x0400
            }
        })
        Name (HOWN, Package (0x02)
        {
            Package (0x08)
            {
                0xD0, 
                0xD4, 
                0xD0, 
                0xD4, 
                0xD8, 
                0xD0, 
                0xD4, 
                0xD0
            }, 

            Package (0x0A)
            {
                0xD0, 
                0xD4, 
                0xD0, 
                0xD4, 
                0xD8, 
                0xDC, 
                0xE0, 
                0xE4, 
                0xD0, 
                0xD0
            }
        })
        Name (POWN, Package (0x02)
        {
            Package (0x08)
            {
                0x20, 
                0x30, 
                0x20, 
                0x30, 
                0x40, 
                0x20, 
                0x30, 
                0x20
            }, 

            Package (0x0A)
            {
                0x20, 
                0x2C, 
                0x20, 
                0x2C, 
                0x38, 
                0x40, 
                0x4C, 
                0x58, 
                0x20, 
                0x20
            }
        })
        Name (GPEO, Package (0x02)
        {
            Package (0x08)
            {
                0x0140, 
                0x0144, 
                0x0140, 
                0x0144, 
                0x0148, 
                0x0140, 
                0x0144, 
                0x0140
            }, 

            Package (0x0A)
            {
                0x0140, 
                0x0144, 
                0x0140, 
                0x0144, 
                0x0148, 
                0x014C, 
                0x0150, 
                0x0154, 
                0x0140, 
                0x0140
            }
        })
        Name (GPES, Package (0x0A)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero
        })
        Method (GNUM, 1, NotSerialized)
        {
            Local1 = GNMB (Arg0)
            Local2 = GGRP (Arg0)
            Return ((Local1 + (Local2 * 0x18)))
        }

        Method (INUM, 1, NotSerialized)
        {
            If ((PCHS == 0x02))
            {
                Local0 = Zero
            }
            Else
            {
                Local0 = One
            }

            Local1 = GNMB (Arg0)
            Local2 = GGRP (Arg0)
            Local3 = Zero
            While ((Local3 < Local2))
            {
                Local1 += DerefOf (DerefOf (GPPG [Local0]) [Local3])
                Local3++
            }

            Return ((0x18 + (Local1 % 0x60)))
        }

        Method (GGRP, 1, Serialized)
        {
            Local0 = ((Arg0 & 0x00FF0000) >> 0x10)
            Return (Local0)
        }

        Method (GNMB, 1, Serialized)
        {
            Return ((Arg0 & 0xFFFF))
        }

        Method (GGPE, 1, NotSerialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GPEM >> (Local0 * 0x02)) & 0x03)
            If ((Local2 == Zero))
            {
                Return (0x6F)
            }
            Else
            {
                Return ((((Local2 - One) * 0x20) + Local1))
            }
        }

        Method (GADR, 2, NotSerialized)
        {
            If ((PCHS == 0x02))
            {
                Local0 = Zero
            }
            Else
            {
                Local0 = One
            }

            Local1 = (DerefOf (DerefOf (GCOM [Local0]) [Arg0]) + 
                SBRG)
            Local2 = DerefOf (DerefOf (Arg1 [Local0]) [Arg0])
            Return ((Local1 + Local2))
        }

        Method (GPC0, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC0.TEMP */
        }

        Method (SREG, 2, Serialized)
        {
            If ((PCHS == 0x02))
            {
                Local0 = Zero
            }
            Else
            {
                Local0 = One
            }

            Local1 = (DerefOf (DerefOf (GCOM [Local0]) [Zero]) + 
                SBRG)
            Local2 = (Arg0 + Local1)
            OperationRegion (PREG, SystemMemory, Local2, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (SPC0, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (GPC1, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, PCFG) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC1.TEMP */
        }

        Method (SPC1, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, PCFG) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (SRXO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGDI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = One
        }

        Name (PCSA, Zero)
        Method (RXRA, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                RXPO,   1, 
                    ,   1, 
                PADC,   2
            }

            If ((Arg1 == One))
            {
                PCSA = PADC /* \_SB_.RXRA.PADC */
                PADC = Zero
            }
            ElseIf ((PCSA != Zero))
            {
                PADC = PCSA /* \_SB_.PCSA */
            }

            RXPO = Arg1
        }

        Method (SGDO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = 0x02
        }

        Method (GGDV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            If ((TEMP == One))
            {
                Return (One)
            }
            ElseIf ((TEMP == 0x02))
            {
                Return (Zero)
            }
            Else
            {
                Return (One)
            }
        }

        Method (GGIV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGIV.TEMP */
        }

        Method (GGOV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGOV.TEMP */
        }

        Method (SGOV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GGII, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGII.TEMP */
        }

        Method (SLEI, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   25, 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGII, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GPMV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   2, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GPMV.TEMP */
        }

        Method (SPMV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GHPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            OperationRegion (PREG, SystemMemory, GADR (Local0, HOWN), 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> Local1) & One))
        }

        Method (SHPO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            OperationRegion (PREG, SystemMemory, GADR (Local0, HOWN), 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = ((TEMP & ~(One << Local1)) | (
                Arg1 << Local1))
        }

        Method (GGPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, POWN) + ((Local1 >> 0x03) * 0x04
                ))
            OperationRegion (PREG, SystemMemory, Local2, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> ((Local1 & 0x07) * 0x04)) & 
                0x03))
        }

        Method (SGRA, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   20, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGWP, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, PCFG) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   4, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (UGP1, 1, Serialized)
        {
            OperationRegion (GPPX, SystemMemory, GADR (Arg0, GPEO), 0x24)
            Field (GPPX, AnyAcc, NoLock, Preserve)
            {
                STSX,   32, 
                Offset (0x20), 
                GENX,   32
            }

            If ((((GPEM >> (Arg0 * 0x02)) & 0x03) == 
                Zero))
            {
                GPES [Arg0] = (STSX & GENX)
            }
            Else
            {
                GPES [Arg0] = Zero
            }
        }

        Method (UGPS, 0, Serialized)
        {
            If ((PCHS == One))
            {
                Local0 = 0x0A
            }
            Else
            {
                Local0 = 0x08
            }

            While (Local0)
            {
                Local0--
                UGP1 (Local0)
            }
        }

        Method (CGP1, 2, Serialized)
        {
            If ((((GPEM >> (Arg0 * 0x02)) & 0x03) == 
                Zero))
            {
                OperationRegion (GPPX, SystemMemory, GADR (Arg0, GPEO), 0x04)
                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }

                STSX = Arg1
            }
        }

        Method (CGPS, 0, Serialized)
        {
            If ((PCHS == One))
            {
                Local0 = 0x0A
            }
            Else
            {
                Local0 = 0x08
            }

            While (Local0)
            {
                Local0--
                CGP1 (Local0, 0xFFFFFFFF)
            }
        }

        Method (CGLS, 0, Serialized)
        {
            If ((PCHS == One))
            {
                Local0 = 0x0A
            }
            Else
            {
                Local0 = 0x08
            }

            While (Local0)
            {
                Local0--
                If ((Local0 == 0x09))
                {
                    Local1 = G2L9 /* \G2L9 */
                }
                ElseIf ((Local0 == 0x08))
                {
                    Local1 = G2L8 /* \G2L8 */
                }
                ElseIf ((Local0 == 0x07))
                {
                    Local1 = G2L7 /* \G2L7 */
                }
                ElseIf ((Local0 == 0x06))
                {
                    Local1 = G2L6 /* \G2L6 */
                }
                ElseIf ((Local0 == 0x05))
                {
                    Local1 = G2L5 /* \G2L5 */
                }
                ElseIf ((Local0 == 0x04))
                {
                    Local1 = G2L4 /* \G2L4 */
                }
                ElseIf ((Local0 == 0x03))
                {
                    Local1 = G2L3 /* \G2L3 */
                }
                ElseIf ((Local0 == 0x02))
                {
                    Local1 = G2L2 /* \G2L2 */
                }
                ElseIf ((Local0 == One))
                {
                    Local1 = G2L1 /* \G2L1 */
                }
                ElseIf ((Local0 == Zero))
                {
                    Local1 = G2L0 /* \G2L0 */
                }
                Else
                {
                    Continue
                }

                CGP1 (Local0, Local1)
            }
        }

        Method (CAGS, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            If ((((GPEM >> (Local0 * 0x02)) & 0x03) == 
                Zero))
            {
                OperationRegion (GPPX, SystemMemory, GADR (Local0, GPEO), 0x04)
                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }

                Local3 = STSX /* \_SB_.CAGS.STSX */
                Local2 = (One << Local1)
                STSX |= Local2
            }
        }

        Method (ISME, 1, NotSerialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Return (((DerefOf (GPES [Local0]) >> Local1) & One))
        }

        Method (GMMO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, PCFG) + (Local1 * 0x08))
            Return (Local2)
        }
    }

    Scope (\)
    {
        OperationRegion (IO_T, SystemIO, 0x0800, 0x10)
        Field (IO_T, ByteAcc, NoLock, Preserve)
        {
            TRPI,   16, 
            Offset (0x04), 
            Offset (0x06), 
            Offset (0x08), 
            TRP0,   8, 
            Offset (0x0A), 
            Offset (0x0B), 
            Offset (0x0C), 
            Offset (0x0D), 
            Offset (0x0E), 
            Offset (0x0F), 
            Offset (0x10)
        }

        OperationRegion (IO_D, SystemIO, 0x0810, 0x04)
        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)
        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }

        Method (PCRR, 2, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            Return (DAT0) /* \PCRR.DAT0 */
        }

        Method (PCRW, 3, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            DAT0 = Arg2
            OperationRegion (PCR1, SystemMemory, (SBRG + 0x00C73418), 0x04)
            Field (PCR1, DWordAcc, Lock, Preserve)
            {
                DAT1,   32
            }

            Local1 = DAT1 /* \PCRW.DAT1 */
        }

        Method (PCRO, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 | Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCRA, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 & Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCAO, 4, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = ((Local0 & Arg2) | Arg3)
            PCRW (Arg0, Arg1, Local1)
        }

        OperationRegion (PMST, SystemMemory, 0xFE000000, 0x0350)
        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x18), 
                ,   25, 
            USBP,   1, 
            Offset (0x1C), 
            Offset (0x1F), 
            PMFS,   1, 
            Offset (0x20), 
            MPMC,   32, 
                ,   20, 
            UWAB,   1
        }

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x31C), 
                ,   13, 
            LVME,   1, 
                ,   8, 
            XTAL,   1
        }

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x34C), 
                ,   21, 
            HCPG,   1
        }

        OperationRegion (APLA, SystemMemory, (SBRG + 0x00E90024), 0x04)
        Field (APLA, DWordAcc, NoLock, Preserve)
        {
                ,   29, 
            MPPG,   1
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PPMC)
        {
            Name (_ADR, 0x001F0002)  // _ADR: Address
            OperationRegion (PMCB, PCI_Config, Zero, 0x0100)
            Field (PMCB, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x40), 
                Offset (0x41), 
                ACBA,   8, 
                Offset (0x48), 
                    ,   12, 
                PWBA,   20
            }
        }
    }

    Scope (_GPE)
    {
        Method (_L67, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.PCI0.SBUS.HSTS = 0x20
        }

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            If ((\_SB.PCI0.IGPU.GSSE && !GSMI))
            {
                \_SB.PCI0.IGPU.GSCI ()
            }
            Else
            {
                \_SB.PCI0.IGPU.GEFC = Zero
                SCIS = One
                \_SB.PCI0.IGPU.GSSE = Zero
                \_SB.PCI0.IGPU.SCIE = Zero
            }
        }

        Method (_L69, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake
            Notify (\_SB.PCI0.RP01, 0x02) // Device Wake
            Notify (\_SB.PCI0.RP17, 0x02) // Device Wake
            \_SB.PCI0.TGPE ()
            Notify (\_SB.PCI0.RP01.ARPT, 0x02) // Device Wake
        }

        Method (_L6D, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
            Notify (\_SB.PCI0.XHC1, 0x02) // Device Wake
            If (OSDW ())
            {
                Notify (\_SB.PCI0.HDEF, 0x02) // Device Wake
            }
        }

        Method (_L33, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
        }

        Method (_L31, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
        }

        Method (_L6F, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Local0 = PCRR (0xAD, 0x0140)
            Local1 = PCRR (0xAD, 0x0160)
            If (((Local0 & 0x04) && (Local1 & 0x04)))
            {
                PCRW (0xAD, 0x0140, 0x04)
            }
        }

        Method (LXEN, 0, NotSerialized)
        {
            Return (One)
        }
    }

    Method (DTGP, 5, NotSerialized)
    {
        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
        {
            If ((Arg1 == One))
            {
                If ((Arg2 == Zero))
                {
                    Arg4 = Buffer (One)
                        {
                             0x03                                             // .
                        }
                    Return (One)
                }

                If ((Arg2 == One))
                {
                    Return (One)
                }
            }
        }

        Arg4 = Buffer (One)
            {
                 0x00                                             // .
            }
        Return (Zero)
    }

    Scope (_SB)
    {
        Method (MBOX, 1, Serialized)
        {
            SGDI (0x0106000A)
            Sleep (0x05)
            Local0 = GGIV (0x0106000A)
            If ((Local0 != One)){}
            ^PCI0.LPCB.EC.INDX = Zero
            ^PCI0.LPCB.EC.DATA = Arg0
            ^PCI0.LPCB.EC.CMDS = One
            Local0 = (Timer + 0x00989680)
            Local1 = One
            While ((Timer <= Local0))
            {
                Local2 = ^PCI0.LPCB.EC.CMDS /* \_SB_.PCI0.LPCB.EC__.CMDS */
                If ((Local2 == Zero))
                {
                    Local1 = Zero
                    Break
                }

                If ((Local2 >= 0x80))
                {
                    Break
                }

                Sleep (One)
            }

            If ((Local1 == One))
            {
                Return (One)
            }

            SGOV (0x0106000F, One)
            Local0 = (Timer + 0x02625A00)
            Local1 = One
            While ((Timer <= Local0))
            {
                Local2 = GGIV (0x0106000A)
                If ((Local2 == Zero))
                {
                    Sleep (0x14)
                    Local1 = Zero
                    Break
                }

                Sleep (One)
            }

            SGOV (0x0106000F, Zero)
            If ((Local1 == One))
            {
                Return (0x02)
            }

            Return (Zero)
        }

        Method (SWAK, 0, Serialized)
        {
            SGOV (0x0106000F, One)
            Sleep (0x05)
            SGOV (0x0106000F, Zero)
        }

        Method (SACK, 0, Serialized)
        {
            Return (GGIV (0x0106000A))
        }
    }

    Name (_S0, Package (0x03)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x03)  // _S4_: S4 System State
    {
        0x06, 
        0x06, 
        Zero
    })
    Name (_S5, Package (0x03)  // _S5_: S5 System State
    {
        0x07, 
        0x07, 
        Zero
    })
    Method (_TTS, 1, NotSerialized)  // _TTS: Transition To State
    {
        SLTP = Arg0
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        P80D = Zero
        P8XH (Zero, Arg0)
        If (OSDW ())
        {
            If ((Arg0 == 0x04))
            {
                \_SB.SGOV (0x01000016, Zero)
                \_SB.SGDO (0x01000016)
            }
        }
        ElseIf ((Arg0 == 0x03))
        {
            \_SB.SGOV (0x01000016, Zero)
            \_SB.SGDO (0x01000016)
        }

        If (!OSDW ())
        {
            If ((Arg0 == 0x03))
            {
                \_SB.PCI0.LPCB.EC.EWPM = One
                \_SB.PCI0.LPCB.EC.EWDK = One
            }
        }

        If ((!OSDW () && (Arg0 >= 0x04)))
        {
            \_SB.PCI0.LPCB.EC.EWLO = Zero
        }

        If ((Arg0 >= 0x05))
        {
            \_SB.PCI0.PEG1.UPSB.LSTX (Zero, One, \_SB.PCI0.PEG1.UPSB.LSTX (One, One, \_SB.PCI0.PEG2.UPSB.LSTX (Zero, One), \_SB.PCI0.PEG2.UPSB.LSTX (One, One), 
                \_SB.SGDI (0x01020009), \_SB.SPMV (0x01020009, Zero), \_SB.SGDI (0x0102000D)), \_SB.SPMV (0x0102000D, Zero), \_SB.SGDI (0x01020015), \_SB.SPMV (
                0x01020015, Zero), If (((Arg0 == 0x03) || (Arg0 == 0x04)))
                {
                    Local0 = \_SB.MBOX (0x03)
                    If ((Local0 != Zero)){}
                })
        }

        If ((Arg0 == 0x05))
        {
            Local0 = \_SB.PCI0.XHC1.USBM /* External reference */
            Local0 = \_SB.MBOX (0x05)
            If ((Local0 != Zero)){}
        }

        \_SB.PCI0.LPCB.EC.ECSS = Arg0
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        P8XH (Zero, Zero)
        \_SB.PCI0.LPCB.EC.ECSS = Zero
        If (!OSDW ())
        {
            If ((Arg0 == 0x03))
            {
                Sleep (0x0A)
            }

            If (TBG1)
            {
                \_SB.PCI0.PEG1.ICMB ()
            }

            If (TBG2)
            {
                \_SB.PCI0.PEG2.ICMB ()
            }
        }

        If (OSDW ()){}
        Else
        {
        }

        LIDS = \_SB.PCI0.LPCB.EC.ELSW
        \_SB.PCI0.IGPU.CLID = \_SB.PCI0.LPCB.EC.ELSW
        If (!OSDW ())
        {
            \_SB.PTOP ()
        }

        \_SB.RXRA (0x01000017, Zero)
        PWRS = \_SB.PCI0.LPCB.EC.EACP
        If (!OSDW ())
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
            \_SB.PCI0.LPCB.EC.LWE0 = Zero
            \_SB.PCI0.LPCB.EC.LWE1 = Zero
            \_SB.PCI0.LPCB.EC.LWE2 = Zero
            \_SB.PCI0.LPCB.EC.LWE3 = Zero
        }

        PNOT ()
        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            \_SB.SWAK ()
        }

        Return (Package (0x02)
        {
            Zero, 
            Zero
        })
    }
}



ECDT
----
[000h 0000   4]                    Signature : "ECDT"    [Embedded Controller Boot Resources Table]
[004h 0004   4]                 Table Length : 00000053
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 49
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F


[024h 0036  12]      Command/Status Register : [Generic Address Structure]
[024h 0036   1]                     Space ID : 01 [SystemIO]
[025h 0037   1]                    Bit Width : 08
[026h 0038   1]                   Bit Offset : 00
[027h 0039   1]         Encoded Access Width : 00 [Undefined/Legacy]
[028h 0040   8]                      Address : 0000000000000066

[030h 0048  12]                Data Register : [Generic Address Structure]
[030h 0048   1]                     Space ID : 01 [SystemIO]
[031h 0049   1]                    Bit Width : 08
[032h 0050   1]                   Bit Offset : 00
[033h 0051   1]         Encoded Access Width : 00 [Undefined/Legacy]
[034h 0052   8]                      Address : 0000000000000062

[03Ch 0060   4]                          UID : 00000000
[040h 0064   1]                   GPE Number : 07
[041h 0065  18]                     Namepath : "\_SB.PCI0.LPCB.EC"

Raw Table Data: Length 83 (0x53)

    0000: 45 43 44 54 53 00 00 00 01 49 41 50 50 4C 45 20  // ECDTS....IAPPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 01 08 00 00 66 00 00 00 00 00 00 00  // _.......f.......
    0030: 01 08 00 00 62 00 00 00 00 00 00 00 00 00 00 00  // ....b...........
    0040: 07 5C 5F 53 42 2E 50 43 49 30 2E 4C 50 43 42 2E  // .\_SB.PCI0.LPCB.
    0050: 45 43 00                                         // EC.


FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 000000F4
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : 07
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                 FACS Address : 7AF7C000
[028h 0040   4]                 DSDT Address : 7AFEB000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : F0
[035h 0053   1]           ACPI Disable Value : F1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00001800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00001804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00001850
[04Ch 0076   4]       PM Timer Block Address : 00001808
[050h 0080   4]           GPE0 Block Address : 00001880
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 20
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 10
[05Fh 0095   1]                 _CST Support : 85
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0011
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 0
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0000C4A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 0
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 0000000000000CF9

[080h 0128   1]         Value to cause reset : 06
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 000000007AFEB000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000001800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000001804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0C8h 0200   8]                      Address : 0000000000001850

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000001808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 00
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 01 [Byte Access:8]
[0E0h 0224   8]                      Address : 0000000000001880

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 01 [Byte Access:8]
[0ECh 0236   8]                      Address : 0000000000000000


// ACPI Warning: FADT revision 5 does not match length: found F4 expected 10C

Raw Table Data: Length 244 (0xF4)

    0000: 46 41 43 50 F4 00 00 00 05 07 41 50 50 4C 45 20  // FACP......APPLE 
    0010: 41 70 70 6C 65 30 30 00 00 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 C0 F7 7A 00 B0 FE 7A 00 02 09 00  // _......z...z....
    0030: B2 00 00 00 F0 F1 00 00 00 18 00 00 00 00 00 00  // ................
    0040: 04 18 00 00 00 00 00 00 50 18 00 00 08 18 00 00  // ........P.......
    0050: 80 18 00 00 00 00 00 00 04 02 01 04 20 00 10 85  // ............ ...
    0060: 65 00 E9 03 00 00 00 00 01 03 0D 00 32 11 00 00  // e...........2...
    0070: A5 C4 00 00 01 08 00 01 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 00 00 00 00 00 00 00 00 00 00 B0 FE 7A  // ...............z
    0090: 00 00 00 00 01 20 00 03 00 18 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 18 00 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 00 50 18 00 00 00 00 00 00  // ........P.......
    00D0: 01 20 00 03 08 18 00 00 00 00 00 00 01 00 00 01  // . ..............
    00E0: 80 18 00 00 00 00 00 00 01 00 00 01 00 00 00 00  // ................
    00F0: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 00000000
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 01
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 00 00 00 00 00 00 00 00  // FACS@...........
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8C
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]            Hardware Block ID : 8086A201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 40
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 8C 41 50 50 4C 45 20  // HPET8.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 01 A2 86 80 00 40 00 00 00 00 D0 FE  // _........@......
    0030: 00 00 00 00 00 80 00 00                          // ........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F4
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000E0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : FF
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 F4 41 50 50 4C 45 20  // MCFG<.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0  // _...............
    0030: 00 00 00 00 00 00 00 FF 00 00 00 00              // ............


SBST
----
[000h 0000   4]                    Signature : "SBST"    [Smart Battery Specification Table]
[004h 0004   4]                 Table Length : 00000030
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 84
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                Warning Level : 0000001E
[028h 0040   4]                    Low Level : 00000014
[02Ch 0044   4]               Critical Level : 0000000A

Raw Table Data: Length 48 (0x30)

    0000: 53 42 53 54 30 00 00 00 01 84 41 50 50 4C 45 20  // SBST0.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 1E 00 00 00 14 00 00 00 0A 00 00 00  // _...............


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SsdtS3", 0x00001000)
{
    Name (_S3, Package (0x03)  // _S3_: S3 System State
    {
        0x05, 
        0x05, 
        Zero
    })
}



SSDT10
------
DefinitionBlock ("", "SSDT", 2, "APPLE ", "Xhci", 0x00001000)
{
    /*
     * iASL Warning: There were 4 external control methods found during
     * disassembly, but only 0 were resolved (4 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPCB.EC__.SOCR, UnknownObj)
    External (_SB_.PCI0.PEG1.UPSB.DSB2.XHC2.MODU, IntObj)
    External (_SB_.PCI0.PEG2.UPSB.DSB2.XHC3.MODU, IntObj)
    External (DFUW, UnknownObj)
    External (DTGP, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (GMMO, IntObj)
    External (MBOX, IntObj)
    External (MPMC, UnknownObj)
    External (OSDW, IntObj)
    External (PMFS, UnknownObj)
    External (SGDI, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (SGDO, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (SGOV, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (SLTP, UnknownObj)
    External (UWAB, UnknownObj)

    Scope (\_SB.PCI0)
    {
        Device (XHC1)
        {
            Name (_ADR, 0x00140000)  // _ADR: Address
            Name (SDPC, Zero)
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW)
                {
                    Return (Package (0x02)
                    {
                        0x6D, 
                        0x03
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6D, 
                        0x03
                    })
                }
            }
        }

        Scope (\_SB.PCI0.XHC1)
        {
            Name (SBAR, Zero)
            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)
            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x40), 
                    ,   11, 
                SWAI,   1, 
                Offset (0x44), 
                    ,   12, 
                SAIP,   2, 
                Offset (0x48), 
                Offset (0x50), 
                    ,   2, 
                STGE,   1, 
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0xA2), 
                    ,   2, 
                D3HE,   1, 
                Offset (0xA8), 
                    ,   13, 
                MW13,   1, 
                MW14,   1, 
                Offset (0xAC), 
                Offset (0xB0), 
                    ,   13, 
                MB13,   1, 
                MB14,   1, 
                Offset (0xB4), 
                Offset (0xD0), 
                PR2,    32, 
                PR2M,   32, 
                PR3,    32, 
                PR3M,   32
            }

            OperationRegion (XHCP, SystemMemory, 0xE00A0000, 0x0100)
            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (OSDW)
                {
                    Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                    ^PDBM &= 0xFFFFFFFFFFFFFFF9
                    ^D0D3 = Zero
                    If ((SBAR == Zero))
                    {
                        Local6 = Zero
                        Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                        Local7 &= 0xFFFFFFFFFFFFFFF0
                        If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                        {
                            ^MEMB = 0xFEAF0000
                            Local6 = One
                        }
                    }
                    Else
                    {
                        ^MEMB = SBAR /* \_SB_.PCI0.XHC1.SBAR */
                    }

                    ^PDBM = (Local1 | 0x02)
                    Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local0 &= 0xFFFFFFFFFFFFFFF0
                    OperationRegion (MCA1, SystemMemory, Local0, 0x9000)
                    Field (MCA1, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x80A4), 
                            ,   28, 
                        AX28,   1, 
                        Offset (0x80C0), 
                            ,   10, 
                        AX10,   1, 
                        Offset (0x81C4), 
                            ,   2, 
                        CLK0,   1, 
                            ,   3, 
                        CLK1,   1
                    }

                    AX10 = Zero
                    AX28 = One
                    Stall (0x33)
                    AX28 = Zero
                    CLK0 = Zero
                    CLK1 = Zero
                    OperationRegion (PSCA, SystemMemory, Local0, 0x0620)
                    Field (PSCA, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x580), 
                        PC17,   32, 
                        Offset (0x590), 
                        PC18,   32, 
                        Offset (0x5A0), 
                        PC19,   32, 
                        Offset (0x5B0), 
                        PC20,   32, 
                        Offset (0x5C0), 
                        PC21,   32, 
                        Offset (0x5D0), 
                        PC22,   32, 
                        Offset (0x5E0), 
                        PC23,   32, 
                        Offset (0x5F0), 
                        PC24,   32, 
                        Offset (0x600), 
                        PC25,   32, 
                        Offset (0x610), 
                        PC26,   32
                    }

                    Local1 = (PC17 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC17 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC17 & 0xFFFFFFFFFFFFFFFD)
                        PC17 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC18 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC18 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC18 & 0xFFFFFFFFFFFFFFFD)
                        PC18 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC19 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC19 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC19 & 0xFFFFFFFFFFFFFFFD)
                        PC19 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC20 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC20 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC20 & 0xFFFFFFFFFFFFFFFD)
                        PC20 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC21 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC21 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC21 & 0xFFFFFFFFFFFFFFFD)
                        PC21 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC22 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC22 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC22 & 0xFFFFFFFFFFFFFFFD)
                        PC22 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC23 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC23 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC23 & 0xFFFFFFFFFFFFFFFD)
                        PC23 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC24 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC24 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC24 & 0xFFFFFFFFFFFFFFFD)
                        PC24 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC25 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC25 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC25 & 0xFFFFFFFFFFFFFFFD)
                        PC25 = (Local1 | 0x00FE0000)
                    }

                    Local1 = (PC26 & 0xFFFFFFFFFFFFFFFD)
                    If (((Local1 & 0x010203F9) == 0x02E0))
                    {
                        PC26 = (Local1 | 0x80000000)
                        Sleep (0x65)
                        Local1 = (PC26 & 0xFFFFFFFFFFFFFFFD)
                        PC26 = (Local1 | 0x00FE0000)
                    }

                    ^PDBM &= 0xFFFFFFFFFFFFFFFD
                    ^MEMB = Local2
                    ^PDBM = Local1
                    If ((UWAB && (D0D3 == Zero)))
                    {
                        MPMC = One
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((PMFS == Zero))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }
                }
                Else
                {
                    If ((^DVID == 0xFFFF))
                    {
                        Return (Zero)
                    }

                    Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                    ^PDBM &= 0xFFFFFFFFFFFFFFF9
                    ^D0D3 = Zero
                    If ((SBAR == Zero))
                    {
                        Local6 = Zero
                        Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                        Local7 &= 0xFFFFFFFFFFFFFFF0
                        If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                        {
                            ^MEMB = 0xFEAF0000
                            Local6 = One
                        }
                    }
                    Else
                    {
                        ^MEMB = SBAR /* \_SB_.PCI0.XHC1.SBAR */
                    }

                    ^PDBM = (Local1 | 0x02)
                    Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local0 &= 0xFFFFFFFFFFFFFFF0
                    OperationRegion (MC11, SystemMemory, Local0, 0x9000)
                    Field (MC11, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x81C4), 
                            ,   2, 
                        UPSW,   2
                    }

                    UPSW = Zero
                    ^PDBM &= 0xFFFFFFFFFFFFFFFD
                    ^MEMB = Local2
                    ^PDBM = Local1
                    If ((UWAB && (D0D3 == Zero)))
                    {
                        MPMC = One
                        Local0 = (Timer + 0x0BEBC200)
                        While ((Timer <= Local0))
                        {
                            If ((PMFS == Zero))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (OSDW)
                {
                    Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                    Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    ^PDBM &= 0xFFFFFFFFFFFFFFF9
                    If (OSDW)
                    {
                        If (((SLTP == 0x03) || (SLTP == Zero)))
                        {
                            ^D0D3 = 0x03
                            Stall (0x1E)
                        }
                    }

                    ^D0D3 = Zero
                    ^PDBM = (Local1 | 0x02)
                    SBAR = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    If ((SBAR == Zero))
                    {
                        Local6 = Zero
                        Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                        Local7 &= 0xFFFFFFFFFFFFFFF0
                        If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                        {
                            ^MEMB = 0xFEAF0000
                            Local6 = One
                        }
                    }

                    Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local0 &= 0xFFFFFFFFFFFFFFF0
                    OperationRegion (MCA1, SystemMemory, Local0, 0x9000)
                    Field (MCA1, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x480), 
                        PC01,   32, 
                        Offset (0x490), 
                        PC02,   32, 
                        Offset (0x4A0), 
                        PC03,   32, 
                        Offset (0x4B0), 
                        PC04,   32, 
                        Offset (0x4C0), 
                        PC05,   32, 
                        Offset (0x80A4), 
                            ,   28, 
                        AX28,   1, 
                        Offset (0x80C0), 
                            ,   10, 
                        AX10,   1, 
                        Offset (0x81C4), 
                            ,   2, 
                        CLK0,   1, 
                            ,   3, 
                        CLK1,   1
                    }

                    If (((SLTP == 0x03) || (SLTP == Zero)))
                    {
                        AX10 = One
                        Stall (0x14)
                    }

                    CLK0 = Zero
                    CLK1 = One
                    ^PDBM = Local1
                    ^D0D3 = 0x03
                    ^MEMB = Local2
                    ^PDBM = Local1
                    If ((UWAB && (D0D3 == 0x03)))
                    {
                        MPMC = 0x03
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((PMFS == Zero))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }
                }
                Else
                {
                    If ((^DVID == 0xFFFF))
                    {
                        Return (Zero)
                    }

                    Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                    ^PDBM &= 0xFFFFFFFFFFFFFFF9
                    ^D0D3 = Zero
                    If ((SBAR == Zero))
                    {
                        Local6 = Zero
                        Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                        Local7 &= 0xFFFFFFFFFFFFFFF0
                        If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                        {
                            ^MEMB = 0xFEAF0000
                            Local6 = One
                        }
                    }
                    Else
                    {
                        ^MEMB = SBAR /* \_SB_.PCI0.XHC1.SBAR */
                    }

                    ^PDBM = (Local1 | 0x02)
                    Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local0 &= 0xFFFFFFFFFFFFFFF0
                    OperationRegion (MC11, SystemMemory, Local0, 0x9000)
                    Field (MC11, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x81C4), 
                            ,   2, 
                        UPSW,   2
                    }

                    UPSW = 0x03
                    ^PDBM &= 0xFFFFFFFFFFFFFFFD
                    ^D0D3 = 0x03
                    ^MEMB = Local2
                    ^PDBM = Local1
                    If ((UWAB && (D0D3 == Zero)))
                    {
                        MPMC = 0x03
                        Local0 = (Timer + 0x0BEBC200)
                        While ((Timer <= Local0))
                        {
                            If ((PMFS == Zero))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }
                }
            }

            Method (RTPC, 1, Serialized)
            {
                Return (Zero)
            }

            Method (USBM, 0, Serialized)
            {
                ^D0D3 = Zero
                Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                ^PDBM = (Local1 | 0x02)
                Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                Local0 &= 0xFFFFFFFFFFFFFFF0
                OperationRegion (PSCA, SystemMemory, Local0, 0x0600)
                Field (PSCA, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x480), 
                    PC01,   32, 
                    Offset (0x490), 
                    PC02,   32, 
                    Offset (0x4A0), 
                    PC03,   32, 
                    Offset (0x4B0), 
                    PC04,   32
                }

                Local6 = PC03 /* \_SB_.PCI0.XHC1.USBM.PC03 */
                Local6 = (PC03 & 0xFFFFFFFFFFFFFFFD)
                PC03 = (Local6 & 0xFFFFFFFFFFFFFDFF)
                Sleep (0x32)
                Local6 = PC03 /* \_SB_.PCI0.XHC1.USBM.PC03 */
                ^PDBM &= 0xFFFFFFFFFFFFFFF9
                ^D0D3 = 0x03
                ^MEMB = Local2
                ^PDBM = Local1
                Return (Zero)
            }

            Method (MODU, 0, Serialized)
            {
                Local0 = \_SB.PCI0.PEG1.UPSB.DSB2.XHC2.MODU /* External reference */
                Local1 = \_SB.PCI0.PEG2.UPSB.DSB2.XHC3.MODU /* External reference */
                If (((Local0 == One) || (Local1 == One)))
                {
                    Local0 = One
                }
                ElseIf (((Local0 == 0xFF) || (Local1 == 0xFF)))
                {
                    Local0 = 0xFF
                }
                Else
                {
                    Local0 = Zero
                }

                Return (Local0)
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Device (HS02)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC3", 
                        0x03
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC3", 
                        0x03
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (ASOC)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_HID, EisaId ("APP7777"))  // _HID: Hardware ID
                    Method (SWDS, 1, Serialized)
                    {
                        If ((Arg0 == One))
                        {
                            SGOV (0x0106000D, Zero)
                            SGDO (0x0106000D)
                            SGOV (0x0106000C, Zero)
                            SGDO (0x0106000C)
                            SGOV (0x0106000E, One)
                        }

                        If ((Arg0 == Zero))
                        {
                            SGDI (0x0106000D)
                            SGDI (0x0106000C)
                            SGOV (0x0106000E, Zero)
                        }
                    }

                    Method (SWDM, 1, Serialized)
                    {
                        If ((Arg0 == One))
                        {
                            SGDO (0x0106000D)
                        }

                        If ((Arg0 == One))
                        {
                            SGDI (0x0106000D)
                        }
                    }

                    Method (SWDC, 0, Serialized)
                    {
                        Return (GMMO) /* External reference */
                        0x0106000C
                    }

                    Method (SWDD, 0, Serialized)
                    {
                        Return (GMMO) /* External reference */
                        0x0106000D
                    }

                    Method (FDFU, 0, Serialized)
                    {
                        SGOV (0x01060010, One)
                        FRST ()
                        SGOV (0x01060010, Zero)
                    }

                    Method (DFU1, 0, Serialized)
                    {
                        If ((DFUW == One))
                        {
                            SGOV (0x01060010, One)
                            FRST ()
                            Return (One)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (DFU2, 0, Serialized)
                    {
                        If ((DFUW == One))
                        {
                            SGOV (0x01060010, Zero)
                        }
                    }

                    Method (FRST, 0, Serialized)
                    {
                        \_SB.PCI0.LPCB.EC.SOCR = One
                        Sleep (0x0F)
                        \_SB.PCI0.LPCB.EC.SOCR = Zero
                        Sleep (0x0258)
                    }

                    Method (SOCW, 1, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            One = MBOX /* External reference */
                            Local0
                            If ((Local0 != Zero))
                            {
                                Return (Local0)
                            }
                        }

                        If ((Arg0 == One))
                        {
                            0x06 = MBOX /* External reference */
                            Local0
                            If ((Local0 != Zero))
                            {
                                Return (0x03)
                            }

                            0x02 = MBOX /* External reference */
                            Local0
                            If ((Local0 != Zero))
                            {
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Method (MBXC, 1, Serialized)
                    {
                        Arg0 = MBOX /* External reference */
                        Local0
                        If ((Local0 != Zero)){}
                        Return (Local0)
                    }

                    Device (PNIC)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_GPE, 0x33)  // _GPE: General Purpose Events
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            Return (Package (0x02)
                            {
                                0x33, 
                                0x03
                            })
                        }
                    }

                    Device (WDOG)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_GPE, 0x31)  // _GPE: General Purpose Events
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            Return (Package (0x02)
                            {
                                0x31, 
                                0x03
                            })
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW)
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "apple-coprocessor-version", 
                                        Buffer (0x08)
                                        {
                                             0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }
                }

                Device (HS03)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (TMG, Package (0x01)
                    {
                        Buffer (0x1C)
                        {
                            /* 0000 */  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ........
                            /* 0008 */  0x04, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,  // ....d...
                            /* 0010 */  0x32, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,  // 2.......
                            /* 0018 */  0x02, 0x00, 0x00, 0x00                           // ....
                        }
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS04)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS05)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC2", 
                        0x04
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC2", 
                        0x04
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS07)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC3", 
                        0x04
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC3", 
                        0x04
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS11)
                {
                    Name (_ADR, 0x0B)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC2", 
                        0x03
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC2", 
                        0x03
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x00){}
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (SS03)
                {
                    Name (_ADR, 0x13)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }
            }

            Name (SSP, Package (0x02)
            {
                "XHC2", 
                "XHC3"
            })
            Name (SS, Package (0x02)
            {
                "XHC2", 
                "XHC3"
            })
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 2, "CpuRef", "CpuSsdt", 0x00003000)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_SB_.OSCP, UnknownObj)
    External (OSYS, UnknownObj)

    Scope (\)
    {
        Name (SSDT, Package (0x15)
        {
            "CPU0IST ", 
            0x7AEDC698, 
            0x000005F1, 
            "APIST   ", 
            0x7AED9618, 
            0x000005AA, 
            "CPU0CST ", 
            0x7AEDCD18, 
            0x00000295, 
            "APCST   ", 
            0x7AEDAC18, 
            0x00000119, 
            "CPU0HWP ", 
            0x7AEDBF18, 
            0x00000056, 
            "APHWP   ", 
            0x7AEDAA98, 
            0x00000119, 
            "HWPLVT  ", 
            0x7AEDAD98, 
            0x00000130
        })
        Name (\PDC0, 0x80000000)
        Name (\PDC1, 0x80000000)
        Name (\PDC2, 0x80000000)
        Name (\PDC3, 0x80000000)
        Name (\PDC4, 0x80000000)
        Name (\PDC5, 0x80000000)
        Name (\PDC6, 0x80000000)
        Name (\PDC7, 0x80000000)
        Name (\SDTL, Zero)
    }

    Scope (\_PR)
    {
        Name (CTPC, Zero)
        OperationRegion (PNVS, SystemMemory, 0x74CA8000, 0x006C)
        Field (PNVS, AnyAcc, Lock, Preserve)
        {
            PGRV,   8, 
            CFGD,   32, 
            Offset (0x06), 
            ACRT,   8, 
            APSV,   8, 
            AAC0,   8, 
            CPID,   32, 
            CPPC,   8, 
            CLVL,   8, 
            CBMI,   8, 
            PL10,   16, 
            PL20,   16, 
            PLW0,   8, 
            CTC0,   8, 
            TAR0,   8, 
            PPC0,   8, 
            PL11,   16, 
            PL21,   16, 
            PLW1,   8, 
            CTC1,   8, 
            TAR1,   8, 
            PPC1,   8, 
            PL12,   16, 
            PL22,   16, 
            PLW2,   8, 
            CTC2,   8, 
            TAR2,   8, 
            PPC2,   8, 
            C3MW,   8, 
            C6MW,   8, 
            C7MW,   8, 
            CDMW,   8, 
            C3LT,   16, 
            C6LT,   16, 
            C7LT,   16, 
            CDLT,   16, 
            CDLV,   16, 
            CDPW,   16, 
            MPMF,   8, 
            DTSE,   8, 
            DTS1,   8, 
            DTS2,   8, 
            DTSF,   8, 
            PDTS,   8, 
            PKGA,   8, 
            DTS3,   8, 
            DTS4,   8, 
            BGMA,   64, 
            BGMS,   8, 
            BGIA,   16, 
            BGIL,   16, 
            DSIA,   16, 
            DSIL,   8, 
            DSAE,   8, 
            EPCS,   8, 
            EMNA,   64, 
            ELNG,   64, 
            HWPV,   8, 
            HWPA,   16, 
            HWPL,   16, 
            POWS,   8, 
            HDCE,   8, 
            HWPI,   8, 
            DTSI,   8
        }

        OperationRegion (IO_D, SystemIO, \_PR.DSIA, \_PR.DSIL)
        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }

        OperationRegion (IO_P, SystemIO, \_PR.BGIA, \_PR.BGIL)
        Field (IO_P, ByteAcc, NoLock, Preserve)
        {
            TRPF,   8
        }
    }

    Scope (\_PR.CPU0)
    {
        Name (HI0, Zero)
        Name (HC0, Zero)
        Name (HW0, Zero)
        Name (HW2, Zero)
        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            Local0 = COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Name (STS0, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Method (CPDC, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Concatenate (STS0, TEMP, Local2)
            Return (COSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2))
        }

        Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
        OperationRegion (SMIP, SystemIO, 0xB2, One)
        Field (SMIP, ByteAcc, NoLock, Preserve)
        {
            IOB2,   8
        }

        Method (COSC, 4, Serialized)
        {
            CreateDWordField (Arg3, Zero, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, Zero, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            CreateDWordField (UID0, Zero, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 = 0x06
                Return (Arg3)
            }

            If ((Arg1 != One))
            {
                STS0 = 0x0A
                Return (Arg3)
            }

            If (!(Arg2 >= 0x02))
            {
                STS0 = 0x02
                Return (Arg3)
            }

            If (~(STS0 & One))
            {
                If ((CAP0 & 0x2000))
                {
                    \_PR.HDCE = Zero
                }
                Else
                {
                    IOB2 = 0x28
                }
            }

            Return (Arg3)
        }

        Method (GCAP, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, STS0)
            CreateDWordField (Arg0, 0x04, CAP0)
            If (((STS0 == 0x06) || (STS0 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS0 & One))
            {
                CAP0 &= 0x0BFF
                Return (Zero)
            }

            PDC0 = ((PDC0 & 0x7FFFFFFF) | CAP0) /* \_PR_.CPU0.GCAP.CAP0 */
            If ((CFGD & 0x7A))
            {
                If ((((CFGD & 0x0200) && (PDC0 & 0x18)) && !
                    (SDTL & 0x02)))
                {
                    SDTL |= 0x02
                    OperationRegion (CST0, SystemMemory, DerefOf (SSDT [0x07]), DerefOf (SSDT [0x08]))
                    Load (CST0, HC0) /* \_PR_.CPU0.HC0_ */
                }
            }

            If (((CFGD & One) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                OperationRegion (IST0, SystemMemory, DerefOf (SSDT [One]), DerefOf (SSDT [0x02]))
                Load (IST0, HI0) /* \_PR_.CPU0.HI0_ */
            }

            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x40)))
                {
                    If ((\_SB.OSCP & 0x40))
                    {
                        SDTL |= 0x40
                        OperationRegion (HWP0, SystemMemory, DerefOf (SSDT [0x0D]), DerefOf (SSDT [0x0E]))
                        Load (HWP0, HW0) /* \_PR_.CPU0.HW0_ */
                        If ((CFGD & 0x00800000))
                        {
                            OperationRegion (HWPL, SystemMemory, DerefOf (SSDT [0x13]), DerefOf (SSDT [0x14]))
                            Load (HWPL, HW2) /* \_PR_.CPU0.HW2_ */
                        }
                    }

                    If ((\_SB.OSCP & 0x20))
                    {
                        If (!(\_SB.OSCP & 0x40))
                        {
                            HWPV = Zero
                        }
                    }

                    If ((\_SB.OSCP & 0x40))
                    {
                        HWPV = 0x02
                    }
                }
            }

            If (!(PDC0 & 0x1000))
            {
                IOB2 = 0x27
            }

            Return (Zero)
        }

        Method (DTGP, 5, NotSerialized)
        {
            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
            {
                If ((Arg1 == One))
                {
                    If ((Arg2 == Zero))
                    {
                        Arg4 = Buffer (One)
                            {
                                 0x03                                             // .
                            }
                        Return (One)
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }
                }
            }

            Arg4 = Buffer (One)
                {
                     0x00                                             // .
                }
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
            {
                Debug = "Writing plugin-type to Registry!"
                Local0 = Package (0x02)
                    {
                        "plugin-type", 
                        One
                    }
                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
            }
            Else
            {
                Local0 = Package (0x02)
                    {
                        "No-Plugin", 
                        Zero
                    }
            }

            Return (Local0)
        }
    }

    Scope (\_PR.CPU1)
    {
        Name (HI1, Zero)
        Name (HC1, Zero)
        Name (HW1, Zero)
        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, STS1)
            CreateDWordField (Arg0, 0x04, CAP1)
            If (((STS1 == 0x06) || (STS1 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS1 & One))
            {
                CAP1 &= 0x0BFF
                Return (Zero)
            }

            PDC1 = ((PDC1 & 0x7FFFFFFF) | CAP1) /* \_PR_.CPU1.GCAP.CAP1 */
            If (((PDC1 & 0x09) == 0x09))
            {
                APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                HWPT ()
            }

            If ((PDC1 & 0x18))
            {
                APCT ()
            }

            PDC0 = PDC1 /* \PDC1 */
            Return (Zero)
        }

        Method (APCT, 0, Serialized)
        {
            If (((CFGD & 0x7A) && !(SDTL & 0x20)))
            {
                SDTL |= 0x20
                OperationRegion (CST1, SystemMemory, DerefOf (SSDT [0x0A]), DerefOf (SSDT [0x0B]))
                Load (CST1, HC1) /* \_PR_.CPU1.HC1_ */
            }
        }

        Method (APPT, 0, Serialized)
        {
            If (((CFGD & One) && !(SDTL & 0x10)))
            {
                SDTL |= 0x10
                OperationRegion (IST1, SystemMemory, DerefOf (SSDT [0x04]), DerefOf (SSDT [0x05]))
                Load (IST1, HI1) /* \_PR_.CPU1.HI1_ */
            }
        }

        Method (HWPT, 0, Serialized)
        {
            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x80)))
                {
                    SDTL |= 0x80
                    OperationRegion (HWP1, SystemMemory, DerefOf (SSDT [0x10]), DerefOf (SSDT [0x11]))
                    Load (HWP1, HW1) /* \_PR_.CPU1.HW1_ */
                }
            }
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS2)
            CreateDWordField (Arg0, 0x04, CAP2)
            If (((STS2 == 0x06) || (STS2 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS2 & One))
            {
                CAP2 &= 0x0BFF
                Return (Zero)
            }

            PDC2 = ((PDC2 & 0x7FFFFFFF) | CAP2) /* \_PR_.CPU2.GCAP.CAP2 */
            If (((PDC2 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC2 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC2 /* \PDC2 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS3)
            CreateDWordField (Arg0, 0x04, CAP3)
            If (((STS3 == 0x06) || (STS3 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS3 & One))
            {
                CAP3 &= 0x0BFF
                Return (Zero)
            }

            PDC3 = ((PDC3 & 0x7FFFFFFF) | CAP3) /* \_PR_.CPU3.GCAP.CAP3 */
            If (((PDC3 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC3 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC3 /* \PDC3 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS4)
            CreateDWordField (Arg0, 0x04, CAP4)
            If (((STS4 == 0x06) || (STS4 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS4 & One))
            {
                CAP4 &= 0x0BFF
                Return (Zero)
            }

            PDC4 = ((PDC4 & 0x7FFFFFFF) | CAP4) /* \_PR_.CPU4.GCAP.CAP4 */
            If (((PDC4 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC4 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC4 /* \PDC4 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS5)
            CreateDWordField (Arg0, 0x04, CAP5)
            If (((STS5 == 0x06) || (STS5 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS5 & One))
            {
                CAP5 &= 0x0BFF
                Return (Zero)
            }

            PDC5 = ((PDC5 & 0x7FFFFFFF) | CAP5) /* \_PR_.CPU5.GCAP.CAP5 */
            If (((PDC5 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC5 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC5 /* \PDC5 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS6)
            CreateDWordField (Arg0, 0x04, CAP6)
            If (((STS6 == 0x06) || (STS6 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS6 & One))
            {
                CAP6 &= 0x0BFF
                Return (Zero)
            }

            PDC6 = ((PDC6 & 0x7FFFFFFF) | CAP6) /* \_PR_.CPU6.GCAP.CAP6 */
            If (((PDC6 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC6 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC6 /* \PDC6 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS7)
            CreateDWordField (Arg0, 0x04, CAP7)
            If (((STS7 == 0x06) || (STS7 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS7 & One))
            {
                CAP7 &= 0x0BFF
                Return (Zero)
            }

            PDC7 = ((PDC7 & 0x7FFFFFFF) | CAP7) /* \_PR_.CPU7.GCAP.CAP7 */
            If (((PDC7 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC7 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC7 /* \PDC7 */
            Return (Zero)
        }
    }
}



SSDT12
------
DefinitionBlock ("", "SSDT", 1, "APPLE ", "Sdxc", 0x00001000)
{
    Scope (\_SB)
    {
        Name (SDTB, Buffer (0x82)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00                                       // ..
        })
    }
}



SSDT13
------
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Cst", 0x00003001)
{
    External (_PR_.CPU0, DeviceObj)
    External (C3LT, IntObj)
    External (C3MW, IntObj)
    External (C6LT, IntObj)
    External (C6MW, IntObj)
    External (C7LT, IntObj)
    External (C7MW, IntObj)
    External (CDLT, IntObj)
    External (CDLV, IntObj)
    External (CDMW, IntObj)
    External (CDPW, IntObj)
    External (CFGD, UnknownObj)
    External (PDC0, UnknownObj)

    Scope (\_PR.CPU0)
    {
        Name (C1TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            One, 
            One, 
            0x03E8
        })
        Name (C3TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001814, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x01F4
        })
        Name (C6TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001815, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x015E
        })
        Name (C7TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0xC8
        })
        Name (CDTM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x03, 
            Zero, 
            Zero
        })
        Name (MWES, ResourceTemplate ()
        {
            Register (FFixedHW, 
                0x01,               // Bit Width
                0x02,               // Bit Offset
                0x0000000000000000, // Address
                0x01,               // Access Size
                )
        })
        Name (AC2V, Zero)
        Name (AC3V, Zero)
        Name (C3ST, Package (0x04)
        {
            0x03, 
            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }
        })
        Name (C2ST, Package (0x03)
        {
            0x02, 
            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }
        })
        Name (C1ST, Package (0x02)
        {
            One, 
            Package (0x01)
            {
                Zero
            }
        })
        Name (CSTF, Zero)
        Method (_CST, 0, Serialized)  // _CST: C-States
        {
            If (!CSTF)
            {
                C3TM [0x02] = C3LT /* External reference */
                C6TM [0x02] = C6LT /* External reference */
                C7TM [0x02] = C7LT /* External reference */
                CDTM [0x02] = CDLT /* External reference */
                CDTM [0x03] = CDPW /* External reference */
                DerefOf (CDTM [Zero]) [0x07] = CDLV /* External reference */
                If (((CFGD & 0x0800) && (PDC0 & 0x0200)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C3TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C6TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C7TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    CDTM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    DerefOf (C3TM [Zero]) [0x07] = C3MW /* External reference */
                    DerefOf (C6TM [Zero]) [0x07] = C6MW /* External reference */
                    DerefOf (C7TM [Zero]) [0x07] = C7MW /* External reference */
                    DerefOf (CDTM [Zero]) [0x07] = CDMW /* External reference */
                }
                ElseIf (((CFGD & 0x0800) && (PDC0 & 0x0100)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                }

                CSTF = Ones
            }

            AC2V = Zero
            AC3V = Zero
            C3ST [One] = C1TM /* \_PR_.CPU0.C1TM */
            C3ST [0x02] = C3TM /* \_PR_.CPU0.C3TM */
            C3ST [0x03] = C6TM /* \_PR_.CPU0.C6TM */
            Return (C3ST) /* \_PR_.CPU0.C3ST */
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "APPLE ", "PEG0GFX0", 0x00001000)
{
    /*
     * iASL Warning: There was 1 external control method found during
     * disassembly, but only 0 were resolved (1 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.PEG0, DeviceObj)
    External (BRTL, IntObj)
    External (DLHR, UnknownObj)
    External (DTGP, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (EGPS, IntObj)
    External (OSDW, IntObj)

    Scope (\_SB.PCI0.PEG0)
    {
        Device (GFX0)
        {
            OperationRegion (OPG0, SystemMemory, 0xE0008000, 0x1000)
            Field (OPG0, ByteAcc, NoLock, Preserve)
            {
                P0VI,   16, 
                P0DI,   16, 
                Offset (0x248), 
                    ,   7, 
                Q0L2,   1, 
                Q0L0,   1, 
                Offset (0x444), 
                    ,   31, 
                BYPD,   1, 
                Offset (0xC74), 
                LTSS,   4
            }

            Method (PUPD, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    Q0L2 = One
                    Local0 = (Timer + 0x00989680)
                    While ((Timer <= Local0))
                    {
                        If ((Q0L2 == Zero))
                        {
                            Break
                        }
                    }
                }
                Else
                {
                    SGMX (0x0750, One, 0x03)
                    Sleep (DLHR)
                    BYPD = One
                    Q0L0 = One
                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((Q0L0 == Zero))
                        {
                            Break
                        }
                    }

                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((LTSS != Zero))
                        {
                            Break
                        }
                    }
                }
            }

            Method (GXWA, 0, Serialized)
            {
                Local0 = PWG1 ()
                If ((Local0 != Zero))
                {
                    Return (One)
                }

                BNIR = BNIS /* \_SB_.PCI0.PEG0.GFX0.BNIS */
                VID0 = Zero
                Sleep (0x0A)
                If ((VID0 == 0xFFFF))
                {
                    Return (One)
                }

                BAR4 = BARS /* \_SB_.PCI0.PEG0.GFX0.BARS */
                Local0 = ((BARS & 0xFFFF0000) | (BARS >> 0x10))
                MBAS = Local0
                GCMD = 0x07
                BCMD = 0x06
                OperationRegion (BARE, SystemMemory, BARS, 0x5000)
                Field (BARE, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x30), 
                    CINX,   32, 
                    CDAT,   32
                }

                CINX = 0x0120482B
                Local1 = CDAT /* \_SB_.PCI0.PEG0.GFX0.GXWA.CDAT */
                If ((Local1 == 0xFFFFFFFF))
                {
                    Return (One)
                }

                Local1 &= 0xFFFFFFC7
                Local1 |= 0x28
                CDAT = Local1
                CINX = 0x0120C82B
                Local1 = CDAT /* \_SB_.PCI0.PEG0.GFX0.GXWA.CDAT */
                If ((Local1 == 0xFFFFFFFF))
                {
                    Return (One)
                }

                Local1 &= 0xFFFFFFC7
                Local1 |= 0x28
                CDAT = Local1
                GCMD = Zero
                BAR4 = Zero
                BCMD = Zero
                BNIR = Zero
                MBAS = Zero
                Local0 = PWG3 ()
                If ((Local0 != Zero))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (PWG1, 0, NotSerialized)
            {
                LTLS = One
                LCRL = One
                Local0 = Zero
                While (LTRN)
                {
                    If ((Local0 > 0x01F4))
                    {
                        Return (One)
                    }

                    Local0++
                    Sleep (One)
                }

                If ((LSTS == 0x08))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (One)
                }
            }

            Method (PWG3, 0, NotSerialized)
            {
                LTLS = 0x03
                LCRL = One
                Local0 = Zero
                While (LTRN)
                {
                    If ((Local0 > 0x01F4))
                    {
                        Return (One)
                    }

                    Local0++
                    Sleep (One)
                }

                If ((LSTS == 0x08))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (One)
                }
            }

            Name (_ADR, Zero)  // _ADR: Address
            OperationRegion (IOBR, SystemIO, 0x07C2, 0x04)
            Field (IOBR, ByteAcc, NoLock, Preserve)
            {
                BOX0,   8, 
                BOX1,   8, 
                BOX2,   8, 
                BOX3,   8
            }

            OperationRegion (DPR1, SystemIO, 0x07D0, One)
            Field (DPR1, ByteAcc, NoLock, Preserve)
            {
                GRD,    8
            }

            OperationRegion (DPR2, SystemIO, 0x07D4, One)
            Field (DPR2, ByteAcc, NoLock, Preserve)
            {
                GWR,    8
            }

            Method (WFRD, 0, NotSerialized)
            {
                Local0 = 0xC8
                Local1 = GWR /* \_SB_.PCI0.PEG0.GFX0.GWR_ */
                While ((Local0 && ((Local1 & One) == One)))
                {
                    Local2 = GRD /* \_SB_.PCI0.PEG0.GFX0.GRD_ */
                    Local1 = GWR /* \_SB_.PCI0.PEG0.GFX0.GWR_ */
                    Stall (0x64)
                    Local0--
                }

                Return ((Local0 == Zero))
            }

            Method (WFCD, 0, NotSerialized)
            {
                Local0 = 0xC8
                Local1 = GWR /* \_SB_.PCI0.PEG0.GFX0.GWR_ */
                While ((Local0 && ((Local1 & One) == Zero)))
                {
                    Local1 = GWR /* \_SB_.PCI0.PEG0.GFX0.GWR_ */
                    Stall (0x64)
                    Local0--
                }

                If ((Local1 & One))
                {
                    Local2 = GRD /* \_SB_.PCI0.PEG0.GFX0.GRD_ */
                }

                Return ((Local0 == Zero))
            }

            Method (SGMX, 3, NotSerialized)
            {
                BOX0 = (0xFF & Arg2)
                If ((Arg1 >= 0x02))
                {
                    BOX1 = (0xFF & (Arg2 >> 0x08))
                }

                If ((Arg1 == 0x04))
                {
                    BOX2 = (0xFF & (Arg2 >> 0x10))
                    BOX3 = (0xFF & (Arg2 >> 0x18))
                }

                If (WFRD ()){}
                GWR = (0xFF & Arg0)
                If (WFCD ()){}
            }

            Method (ABCM, 1, NotSerialized)
            {
                BRTL = Arg0
                Divide ((Arg0 * 0x03FF), 0x64, Local1, Local0)
                SGMX (0x0774, 0x04, Local0)
                Return (Zero)
            }

            Method (ABCL, 0, NotSerialized)
            {
                Return (Package (0x53)
                {
                    0x50, 
                    0x32, 
                    Zero, 
                    One, 
                    0x02, 
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07, 
                    0x08, 
                    0x09, 
                    0x0A, 
                    0x0B, 
                    0x0C, 
                    0x0D, 
                    0x0E, 
                    0x0F, 
                    0x10, 
                    0x11, 
                    0x12, 
                    0x13, 
                    0x14, 
                    0x15, 
                    0x16, 
                    0x17, 
                    0x18, 
                    0x19, 
                    0x1A, 
                    0x1B, 
                    0x1C, 
                    0x1D, 
                    0x1E, 
                    0x1F, 
                    0x20, 
                    0x21, 
                    0x22, 
                    0x23, 
                    0x24, 
                    0x25, 
                    0x26, 
                    0x27, 
                    0x28, 
                    0x29, 
                    0x2A, 
                    0x2B, 
                    0x2C, 
                    0x2D, 
                    0x2E, 
                    0x2F, 
                    0x30, 
                    0x31, 
                    0x32, 
                    0x33, 
                    0x34, 
                    0x35, 
                    0x36, 
                    0x37, 
                    0x38, 
                    0x39, 
                    0x3A, 
                    0x3B, 
                    0x3C, 
                    0x3D, 
                    0x3E, 
                    0x3F, 
                    0x40, 
                    0x41, 
                    0x42, 
                    0x43, 
                    0x44, 
                    0x45, 
                    0x46, 
                    0x47, 
                    0x48, 
                    0x49, 
                    0x4A, 
                    0x4B, 
                    0x4C, 
                    0x4D, 
                    0x4E, 
                    0x4F, 
                    0x50
                })
            }

            Device (LCD)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (0x0110)
                }

                Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                {
                    Return (ABCL ())
                }

                Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                {
                    ABCM (Arg0)
                }

                Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                {
                    Return (BRTL) /* External reference */
                }
            }

            Method (_DOD, 0, Serialized)  // _DOD: Display Output Devices
            {
                Return (Package (0x01)
                {
                    0x0110
                })
            }

            Name (ATIB, Buffer (0x0100){})
            Method (ATIF, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    Return (AF00 ())
                }

                If ((Arg0 == One))
                {
                    Return (AF01 ())
                }

                If ((Arg0 == 0x02))
                {
                    Return (AF02 ())
                }
                Else
                {
                    CreateWordField (ATIB, Zero, SSZE)
                    CreateWordField (ATIB, 0x02, VERN)
                    CreateDWordField (ATIB, 0x04, NMSK)
                    CreateDWordField (ATIB, 0x08, SFUN)
                    SSZE = Zero
                    VERN = Zero
                    NMSK = Zero
                    SFUN = Zero
                    Return (ATIB) /* \_SB_.PCI0.PEG0.GFX0.ATIB */
                }
            }

            Method (AF00, 0, NotSerialized)
            {
                CreateWordField (ATIB, Zero, SSZE)
                CreateWordField (ATIB, 0x02, VERN)
                CreateDWordField (ATIB, 0x04, NMSK)
                CreateDWordField (ATIB, 0x08, SFUN)
                SSZE = 0x0C
                VERN = One
                NMSK = 0x0C
                SFUN = 0x03
                Return (ATIB) /* \_SB_.PCI0.PEG0.GFX0.ATIB */
            }

            Method (AF01, 0, NotSerialized)
            {
                CreateWordField (ATIB, Zero, SSZE)
                CreateDWordField (ATIB, 0x02, VMSK)
                CreateDWordField (ATIB, 0x06, FLGS)
                SSZE = 0x0A
                VMSK = 0x03
                FLGS = One
                Return (ATIB) /* \_SB_.PCI0.PEG0.GFX0.ATIB */
            }

            Method (AF02, 0, NotSerialized)
            {
                CreateWordField (ATIB, Zero, SSZE)
                CreateDWordField (ATIB, 0x02, PSBI)
                CreateByteField (ATIB, 0x09, FPWR)
                CreateByteField (ATIB, 0x0A, FPID)
                SSZE = 0x0D
                PSBI = 0x08
                FPWR = Zero
                FPID = EGPS /* External reference */
                Return (ATIB) /* \_SB_.PCI0.PEG0.GFX0.ATIB */
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW)
                {
                    Return (Package (0x02)
                    {
                        0x69, 
                        0x03
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x69, 
                        0x03
                    })
                }
            }

            OperationRegion (PEGH, PCI_Config, Zero, 0x40)
            Field (PEGH, ByteAcc, NoLock, Preserve)
            {
                VID0,   16, 
                DID0,   16, 
                GCMD,   8, 
                Offset (0x24), 
                BAR4,   32
            }

            OperationRegion (GBAR, SystemMemory, 0xE0008000, 0x0100)
            Field (GBAR, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                BCMD,   8, 
                Offset (0x18), 
                BNIR,   32, 
                Offset (0x20), 
                MBAS,   32, 
                Offset (0xB0), 
                    ,   4, 
                LNKD,   1, 
                LCRL,   1, 
                Offset (0xB2), 
                LNKS,   4, 
                LSTS,   6, 
                    ,   1, 
                LTRN,   1, 
                Offset (0xD0), 
                LTLS,   4
            }

            Name (BNIS, Zero)
            Name (BARS, Zero)
            Method (PWRD, 1, NotSerialized)
            {
                Local0 = Zero
                If (Arg0)
                {
                    BNIS = BNIR /* \_SB_.PCI0.PEG0.GFX0.BNIR */
                    BARS = BAR4 /* \_SB_.PCI0.PEG0.GFX0.BAR4 */
                    PUPD (Zero, 0x04)
                    Local0 = Zero
                }
                Else
                {
                    PUPD (One, 0x04)
                    Local0 = GXWA ()
                    If ((Local0 != Zero)){}
                }

                Return (Local0)
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                {
                    If (((VID0 & 0xFFFF) != 0xFFFF))
                    {
                        Local0 = Package (0x02)
                            {
                                "hda-gfx", 
                                Buffer (0x0A)
                                {
                                    "onboard-2"
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Return (0x80000002)
            }
        }

        Device (HDAU)
        {
            Name (_ADR, One)  // _ADR: Address
            OperationRegion (HDAH, PCI_Config, Zero, 0x40)
            Field (HDAH, ByteAcc, NoLock, Preserve)
            {
                VID0,   16, 
                DID0,   16
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                {
                    If (((VID0 & 0xFFFF) != 0xFFFF))
                    {
                        Local0 = Package (0x02)
                            {
                                "hda-gfx", 
                                Buffer (0x0A)
                                {
                                    "onboard-2"
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Return (0x80000002)
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Ist", 0x00003000)
{
    External (_PR_.CPU0, DeviceObj)
    External (CPLT, IntObj)
    External (PDC0, UnknownObj)
    External (TCNT, IntObj)

    Scope (\_PR.CPU0)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Local0 = CPLT /* External reference */
            Return (Local0)
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (Package (0x02)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }
            })
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (LPSS) /* \_PR_.CPU0.LPSS */
        }

        Name (LPSS, Package (0x10)
        {
            Package (0x06)
            {
                0x00000AF1, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00002600, 
                0x00002600
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00001C00, 
                0x00001C00
            }, 

            Package (0x06)
            {
                0x00000A8C, 
                0x0000A6D4, 
                0x0000000A, 
                0x0000000A, 
                0x00001B00, 
                0x00001B00
            }, 

            Package (0x06)
            {
                0x000009C4, 
                0x00009724, 
                0x0000000A, 
                0x0000000A, 
                0x00001900, 
                0x00001900
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x00008EAD, 
                0x0000000A, 
                0x0000000A, 
                0x00001800, 
                0x00001800
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x00007FEA, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x00000834, 
                0x0000798C, 
                0x0000000A, 
                0x0000000A, 
                0x00001500, 
                0x00001500
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00006A05, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x00005CB2, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000056FE, 
                0x0000000A, 
                0x0000000A, 
                0x00001000, 
                0x00001000
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00004FE7, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00004A74, 
                0x0000000A, 
                0x0000000A, 
                0x00000E00, 
                0x00000E00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00003D00, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x000037F3, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x00002CC1, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000026A9, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
        Name (TPSS, Package (0x16)
        {
            Package (0x06)
            {
                0x00000AF1, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00002600, 
                0x00002600
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00001C00, 
                0x00001C00
            }, 

            Package (0x06)
            {
                0x00000A8C, 
                0x0000A6D4, 
                0x0000000A, 
                0x0000000A, 
                0x00001B00, 
                0x00001B00
            }, 

            Package (0x06)
            {
                0x00000A28, 
                0x00009E0D, 
                0x0000000A, 
                0x0000000A, 
                0x00001A00, 
                0x00001A00
            }, 

            Package (0x06)
            {
                0x000009C4, 
                0x00009724, 
                0x0000000A, 
                0x0000000A, 
                0x00001900, 
                0x00001900
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x00008EAD, 
                0x0000000A, 
                0x0000000A, 
                0x00001800, 
                0x00001800
            }, 

            Package (0x06)
            {
                0x000008FC, 
                0x0000880A, 
                0x0000000A, 
                0x0000000A, 
                0x00001700, 
                0x00001700
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x00007FEA, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x00000834, 
                0x0000798C, 
                0x0000000A, 
                0x0000000A, 
                0x00001500, 
                0x00001500
            }, 

            Package (0x06)
            {
                0x000007D0, 
                0x000071B4, 
                0x0000000A, 
                0x0000000A, 
                0x00001400, 
                0x00001400
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00006A05, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x00000708, 
                0x0000640F, 
                0x0000000A, 
                0x0000000A, 
                0x00001200, 
                0x00001200
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x00005CB2, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000056FE, 
                0x0000000A, 
                0x0000000A, 
                0x00001000, 
                0x00001000
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00004FE7, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00004A74, 
                0x0000000A, 
                0x0000000A, 
                0x00000E00, 
                0x00000E00
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x000043A7, 
                0x0000000A, 
                0x0000000A, 
                0x00000D00, 
                0x00000D00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00003D00, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x000037F3, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x00003194, 
                0x0000000A, 
                0x0000000A, 
                0x00000A00, 
                0x00000A00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x00002CC1, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000026A9, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU0.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU0.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 2, "APPLE ", "TbtPEG12", 0x00001000)
{
    /*
     * iASL Warning: There were 24 external control methods found during
     * disassembly, but only 0 were resolved (24 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.GGII, UnknownObj)
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPCB.RTC_.ISWI, UnknownObj)
    External (_SB_.PCI0.PEG1, DeviceObj)
    External (_SB_.PCI0.PEG2, DeviceObj)
    External (_SB_.PCI0.XHC1, UnknownObj)
    External (_SB_.SGDO, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.SGII, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.SGOV, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (BICM, UnknownObj)
    External (DTGP, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (GGDV, UnknownObj)
    External (GGOV, UnknownObj)
    External (NHI1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (NHI2, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (OSDW, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (SGDI, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (SGDO, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (SGOV, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (T2P1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (T2P2, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TBG1, UnknownObj)
    External (TBG2, UnknownObj)
    External (TD11, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TD12, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TD21, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TD22, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TD41, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TD42, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TDB1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TDB2, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TNH1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TNH2, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TUP1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (TUP2, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (U2OP, UnknownObj)

    Scope (\_SB.PCI0)
    {
        Scope (\_SB.PCI0.PEG1)
        {
            Scope (\_GPE)
            {
                Method (_L55, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG1.POC0 == One))
                        {
                            Return (Zero)
                        }

                        Sleep (0x0190)
                        If ((\_SB.PCI0.PEG1.WTLT () == One))
                        {
                            \_SB.PCI0.PEG1.ICMS ()
                        }
                        Else
                        {
                            \_SB.SGOV (0x01070004, Zero, \_SB.SGDO (0x01070004), If (\_SB.PCI0.PEG1.UPMB)
                                {
                                    \_SB.PCI0.PEG1.UPMB = Zero
                                    Sleep (One)
                                })
                        }

                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.CMPE ()
                    }
                    Else
                    {
                        If ((\_SB.GGII == 0x01070015))
                        {
                            One
                            \_SB.SGII (0x01070015, Zero)
                        }
                        Else
                        {
                            \_SB.SGII (0x01070015, One)
                        }

                        \_SB.PCI0.PEG1.UPSB.AMPE ()
                    }
                }
            }

            Name (EICM, Zero)
            Name (R020, Zero)
            Name (R024, Zero)
            Name (R028, Zero)
            Name (R02C, Zero)
            Name (R118, Zero)
            Name (R119, Zero)
            Name (R11A, Zero)
            Name (R11C, Zero)
            Name (R120, Zero)
            Name (R124, Zero)
            Name (R128, Zero)
            Name (R12C, Zero)
            Name (R218, Zero)
            Name (R219, Zero)
            Name (R21A, Zero)
            Name (R21C, Zero)
            Name (R220, Zero)
            Name (R224, Zero)
            Name (R228, Zero)
            Name (R22C, Zero)
            Name (R318, Zero)
            Name (R319, Zero)
            Name (R31A, Zero)
            Name (R31C, Zero)
            Name (R320, Zero)
            Name (R324, Zero)
            Name (R328, Zero)
            Name (R32C, Zero)
            Name (R418, Zero)
            Name (R419, Zero)
            Name (R41A, Zero)
            Name (R41C, Zero)
            Name (R420, Zero)
            Name (R424, Zero)
            Name (R428, Zero)
            Name (R42C, Zero)
            Name (RVES, Zero)
            Name (R518, Zero)
            Name (R519, Zero)
            Name (R51A, Zero)
            Name (R51C, Zero)
            Name (R520, Zero)
            Name (R524, Zero)
            Name (R528, Zero)
            Name (R52C, Zero)
            Name (R618, Zero)
            Name (R619, Zero)
            Name (R61A, Zero)
            Name (R61C, Zero)
            Name (R620, Zero)
            Name (R624, Zero)
            Name (R628, Zero)
            Name (R62C, Zero)
            Name (RH10, Zero)
            Name (RH14, Zero)
            Name (POC0, Zero)
            OperationRegion (RSTR, SystemMemory, NHI1 (0x0100), Field (RSTR, DWordAcc, NoLock, Preserve)
                {
                    CIOR,   32, 
                    Offset (0xB8), 
                    ISTA,   32, 
                    Offset (0xF0), 
                    ICME,   32
                })
            OperationRegion (T2PM, SystemMemory, T2P1 (0x08), Field (T2PM, DWordAcc, NoLock, Preserve)
                {
                    T2PR,   32, 
                    P2TR,   32
                })
            OperationRegion (RPSM, SystemMemory, 0xE0009000, 0x54)
            Field (RPSM, DWordAcc, NoLock, Preserve)
            {
                RPVD,   32, 
                RPR4,   8, 
                Offset (0x18), 
                RP18,   8, 
                RP19,   8, 
                RP1A,   8, 
                Offset (0x1C), 
                RP1C,   16, 
                Offset (0x20), 
                R_20,   32, 
                R_24,   32, 
                R_28,   32, 
                R_2C,   32, 
                Offset (0x52), 
                    ,   11, 
                RPLT,   1, 
                Offset (0x54)
            }

            OperationRegion (UPSM, SystemMemory, TUP1 (0x0548), Field (UPSM, DWordAcc, NoLock, Preserve)
                {
                    UPVD,   32, 
                    UP04,   8, 
                    Offset (0x08), 
                    CLRD,   32, 
                    Offset (0x18), 
                    UP18,   8, 
                    UP19,   8, 
                    UP1A,   8, 
                    Offset (0x1C), 
                    UP1C,   16, 
                    Offset (0x20), 
                    UP20,   32, 
                    UP24,   32, 
                    UP28,   32, 
                    UP2C,   32, 
                    Offset (0xD2), 
                        ,   11, 
                    UPLT,   1, 
                    Offset (0xD4), 
                    Offset (0x544), 
                    UPMB,   1, 
                    Offset (0x548)
                })
            OperationRegion (DNSM, SystemMemory, TDB1 (0xD4), Field (DNSM, DWordAcc, NoLock, Preserve)
                {
                    DPVD,   32, 
                    DP04,   8, 
                    Offset (0x18), 
                    DP18,   8, 
                    DP19,   8, 
                    DP1A,   8, 
                    Offset (0x1C), 
                    DP1C,   16, 
                    Offset (0x20), 
                    DP20,   32, 
                    DP24,   32, 
                    DP28,   32, 
                    DP2C,   32, 
                    Offset (0xD2), 
                        ,   11, 
                    DPLT,   1, 
                    Offset (0xD4)
                })
            OperationRegion (DS3M, SystemMemory, TD11 (0x40), Field (DS3M, DWordAcc, NoLock, Preserve)
                {
                    D3VD,   32, 
                    D304,   8, 
                    Offset (0x18), 
                    D318,   8, 
                    D319,   8, 
                    D31A,   8, 
                    Offset (0x1C), 
                    D31C,   16, 
                    Offset (0x20), 
                    D320,   32, 
                    D324,   32, 
                    D328,   32, 
                    D32C,   32
                })
            OperationRegion (DS4M, SystemMemory, TD21 (0x0568), Field (DS4M, DWordAcc, NoLock, Preserve)
                {
                    D4VD,   32, 
                    D404,   8, 
                    Offset (0x18), 
                    D418,   8, 
                    D419,   8, 
                    D41A,   8, 
                    Offset (0x1C), 
                    D41C,   16, 
                    Offset (0x20), 
                    D420,   32, 
                    D424,   32, 
                    D428,   32, 
                    D42C,   32, 
                    Offset (0x564), 
                    DVES,   32
                })
            OperationRegion (DS5M, SystemMemory, TD41 (0x40), Field (DS5M, DWordAcc, NoLock, Preserve)
                {
                    D5VD,   32, 
                    D504,   8, 
                    Offset (0x18), 
                    D518,   8, 
                    D519,   8, 
                    D51A,   8, 
                    Offset (0x1C), 
                    D51C,   16, 
                    Offset (0x20), 
                    D520,   32, 
                    D524,   32, 
                    D528,   32, 
                    D52C,   32
                })
            OperationRegion (NHIM, SystemMemory, TNH1 (0x40), Field (NHIM, DWordAcc, NoLock, Preserve)
                {
                    NH00,   32, 
                    NH04,   8, 
                    Offset (0x10), 
                    NH10,   32, 
                    NH14,   32
                })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (!OSDW ())
                {
                    TBG1 = One
                    R020 = R_20 /* \_SB_.PCI0.PEG1.R_20 */
                    R024 = R_24 /* \_SB_.PCI0.PEG1.R_24 */
                    R028 = R_28 /* \_SB_.PCI0.PEG1.R_28 */
                    R02C = R_2C /* \_SB_.PCI0.PEG1.R_2C */
                    R118 = UP18 /* \_SB_.PCI0.PEG1.UP18 */
                    R119 = UP19 /* \_SB_.PCI0.PEG1.UP19 */
                    R11A = UP1A /* \_SB_.PCI0.PEG1.UP1A */
                    R11C = UP1C /* \_SB_.PCI0.PEG1.UP1C */
                    R120 = UP20 /* \_SB_.PCI0.PEG1.UP20 */
                    R124 = UP24 /* \_SB_.PCI0.PEG1.UP24 */
                    R128 = UP28 /* \_SB_.PCI0.PEG1.UP28 */
                    R12C = UP2C /* \_SB_.PCI0.PEG1.UP2C */
                    R218 = DP18 /* \_SB_.PCI0.PEG1.DP18 */
                    R219 = DP19 /* \_SB_.PCI0.PEG1.DP19 */
                    R21A = DP1A /* \_SB_.PCI0.PEG1.DP1A */
                    R21C = DP1C /* \_SB_.PCI0.PEG1.DP1C */
                    R220 = DP20 /* \_SB_.PCI0.PEG1.DP20 */
                    R224 = DP24 /* \_SB_.PCI0.PEG1.DP24 */
                    R228 = DP28 /* \_SB_.PCI0.PEG1.DP28 */
                    R228 = DP28 /* \_SB_.PCI0.PEG1.DP28 */
                    R318 = D318 /* \_SB_.PCI0.PEG1.D318 */
                    R319 = D319 /* \_SB_.PCI0.PEG1.D319 */
                    R31A = D31A /* \_SB_.PCI0.PEG1.D31A */
                    R31C = D31C /* \_SB_.PCI0.PEG1.D31C */
                    R320 = D320 /* \_SB_.PCI0.PEG1.D320 */
                    R324 = D324 /* \_SB_.PCI0.PEG1.D324 */
                    R328 = D328 /* \_SB_.PCI0.PEG1.D328 */
                    R32C = D32C /* \_SB_.PCI0.PEG1.D32C */
                    R418 = D418 /* \_SB_.PCI0.PEG1.D418 */
                    R419 = D419 /* \_SB_.PCI0.PEG1.D419 */
                    R41A = D41A /* \_SB_.PCI0.PEG1.D41A */
                    R41C = D41C /* \_SB_.PCI0.PEG1.D41C */
                    R420 = D420 /* \_SB_.PCI0.PEG1.D420 */
                    R424 = D424 /* \_SB_.PCI0.PEG1.D424 */
                    R428 = D428 /* \_SB_.PCI0.PEG1.D428 */
                    R42C = D42C /* \_SB_.PCI0.PEG1.D42C */
                    RVES = DVES /* \_SB_.PCI0.PEG1.DVES */
                    R518 = D518 /* \_SB_.PCI0.PEG1.D518 */
                    R519 = D519 /* \_SB_.PCI0.PEG1.D519 */
                    R51A = D51A /* \_SB_.PCI0.PEG1.D51A */
                    R51C = D51C /* \_SB_.PCI0.PEG1.D51C */
                    R520 = D520 /* \_SB_.PCI0.PEG1.D520 */
                    R524 = D524 /* \_SB_.PCI0.PEG1.D524 */
                    R528 = D528 /* \_SB_.PCI0.PEG1.D528 */
                    R52C = D52C /* \_SB_.PCI0.PEG1.D52C */
                    RH10 = NH10 /* \_SB_.PCI0.PEG1.NH10 */
                    RH14 = NH14 /* \_SB_.PCI0.PEG1.NH14 */
                    Sleep (One)
                    ICMB ()
                }
            }

            Method (ICMB, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((\_SB.PCI0.LPCB.RTC.ISWI != One))
                    {
                        ICMS ()
                        SGOV (0x01070007, Zero, SGDO (0x01070007), Else
                            {
                            })
                    }
                }
            }

            Method (ICMS, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((\_SB.PCI0.LPCB.RTC.ISWI != One))
                    {
                        \_SB.PCI0.PEG1.POC0 = One
                        If ((\_SB.PCI0.PEG1.ICME != 0x800001A6))
                        {
                            If (\_SB.PCI0.PEG1.CNHI ())
                            {
                                If ((\_SB.PCI0.PEG1.ICME != 0xFFFFFFFF))
                                {
                                    SGDI (0x01070004)
                                    \_SB.PCI0.PEG1.WTLT ()
                                    If (!Local0 = (\_SB.PCI0.PEG1.ICME & 0x80000000))
                                    {
                                        \_SB.PCI0.PEG1.ICME |= 0x06
                                        Local0 = 0x03E8
                                        While (((Local1 = (\_SB.PCI0.PEG1.ICME & 0x80000000)) == Zero))
                                        {
                                            Local0--
                                            If ((Local0 == Zero))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }

                                        Sleep (0x03E8)
                                    }

                                    \_SB.SGOV (0x01070004, Zero, \_SB.SGDO (0x01070004), \_SB.PCI0.PEG1.POC0 = Zero)
                                }
                            }
                        }
                    }
                }
            }

            Method (TBTC, 1, Serialized)
            {
                P2TR = Arg0
                Local0 = 0x64
                Local1 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                While (((Local2 = (Local1 & One)) == Zero))
                {
                    If ((Local1 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    Local0--
                    If ((Local0 == Zero))
                    {
                        Break
                    }

                    Local1 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                    Sleep (0x32)
                }

                P2TR = Zero
            }

            Method (CMPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG1, Zero) // Bus Check
            }

            Method (CNHI, 0, Serialized)
            {
                Local0 = 0x0A
                While (Local0)
                {
                    R_20 = R020 /* \_SB_.PCI0.PEG1.R020 */
                    R_24 = R024 /* \_SB_.PCI0.PEG1.R024 */
                    R_28 = R028 /* \_SB_.PCI0.PEG1.R028 */
                    R_2C = R02C /* \_SB_.PCI0.PEG1.R02C */
                    RPR4 = 0x07
                    If ((R020 == R_20))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R020 != R_20))
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    UP18 = R118 /* \_SB_.PCI0.PEG1.R118 */
                    UP19 = R119 /* \_SB_.PCI0.PEG1.R119 */
                    UP1A = R11A /* \_SB_.PCI0.PEG1.R11A */
                    UP1C = R11C /* \_SB_.PCI0.PEG1.R11C */
                    UP20 = R120 /* \_SB_.PCI0.PEG1.R120 */
                    UP24 = R124 /* \_SB_.PCI0.PEG1.R124 */
                    UP28 = R128 /* \_SB_.PCI0.PEG1.R128 */
                    UP2C = R12C /* \_SB_.PCI0.PEG1.R12C */
                    UP04 = 0x07
                    If ((R119 == UP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R119 != UP19))
                {
                    Return (Zero)
                }

                If ((WTLT () == One)){}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    DP18 = R218 /* \_SB_.PCI0.PEG1.R218 */
                    DP19 = R219 /* \_SB_.PCI0.PEG1.R219 */
                    DP1A = R21A /* \_SB_.PCI0.PEG1.R21A */
                    DP1C = R21C /* \_SB_.PCI0.PEG1.R21C */
                    DP20 = R220 /* \_SB_.PCI0.PEG1.R220 */
                    DP24 = R224 /* \_SB_.PCI0.PEG1.R224 */
                    DP28 = R228 /* \_SB_.PCI0.PEG1.R228 */
                    DP2C = R22C /* \_SB_.PCI0.PEG1.R22C */
                    DP04 = 0x07
                    D318 = R318 /* \_SB_.PCI0.PEG1.R318 */
                    D319 = R319 /* \_SB_.PCI0.PEG1.R319 */
                    D31A = R31A /* \_SB_.PCI0.PEG1.R31A */
                    D31C = R31C /* \_SB_.PCI0.PEG1.R31C */
                    D320 = R320 /* \_SB_.PCI0.PEG1.R320 */
                    D324 = R324 /* \_SB_.PCI0.PEG1.R324 */
                    D328 = R328 /* \_SB_.PCI0.PEG1.R328 */
                    D32C = R32C /* \_SB_.PCI0.PEG1.R32C */
                    D304 = 0x07
                    D418 = R418 /* \_SB_.PCI0.PEG1.R418 */
                    D419 = R419 /* \_SB_.PCI0.PEG1.R419 */
                    D41A = R41A /* \_SB_.PCI0.PEG1.R41A */
                    D41C = R41C /* \_SB_.PCI0.PEG1.R41C */
                    D420 = R420 /* \_SB_.PCI0.PEG1.R420 */
                    D424 = R424 /* \_SB_.PCI0.PEG1.R424 */
                    D428 = R428 /* \_SB_.PCI0.PEG1.R428 */
                    D42C = R42C /* \_SB_.PCI0.PEG1.R42C */
                    DVES = RVES /* \_SB_.PCI0.PEG1.RVES */
                    D404 = 0x07
                    D518 = R518 /* \_SB_.PCI0.PEG1.R518 */
                    D519 = R519 /* \_SB_.PCI0.PEG1.R519 */
                    D51A = R51A /* \_SB_.PCI0.PEG1.R51A */
                    D51C = R51C /* \_SB_.PCI0.PEG1.R51C */
                    D520 = R520 /* \_SB_.PCI0.PEG1.R520 */
                    D524 = R524 /* \_SB_.PCI0.PEG1.R524 */
                    D528 = R528 /* \_SB_.PCI0.PEG1.R528 */
                    D52C = R52C /* \_SB_.PCI0.PEG1.R52C */
                    D504 = 0x07
                    If ((R219 == DP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R219 != DP19))
                {
                    Return (Zero)
                }

                If ((WTDL () == One)){}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x64
                While (Local0)
                {
                    NH10 = RH10 /* \_SB_.PCI0.PEG1.RH10 */
                    NH14 = RH14 /* \_SB_.PCI0.PEG1.RH14 */
                    NH04 = 0x07
                    If ((RH10 == NH10))
                    {
                        Break
                    }
                    Else
                    {
                    }

                    Sleep (One)
                    Local0--
                }

                If ((RH10 != NH10))
                {
                    Return (Zero)
                }

                Return (One)
            }

            Method (UPCK, 0, Serialized)
            {
                If ((((UPVD == 0x156D8086) || (UPVD == 0x156B8086)) || (UPVD == 0x156A8086)))
                {
                    Return (One)
                }

                If ((UPVD == 0x15788086))
                {
                    Return (One)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (ULTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        Return (One)
                    }
                }

                Return (Zero)
            }

            Method (WTLT, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (ULTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            Method (DLTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        If ((DPLT == Zero))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (WTDL, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (DLTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            OperationRegion (OPG0, SystemMemory, 0xE0009000, 0x1000)
            Field (OPG0, ByteAcc, NoLock, Preserve)
            {
                P0VI,   16, 
                P0DI,   16, 
                Offset (0x248), 
                    ,   7, 
                Q0L2,   1, 
                Q0L0,   1
            }

            Name (PUPS, One)
            Method (PUPD, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((PUPS != Zero))
                    {
                        Q0L2 = One
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((Q0L2 == Zero))
                            {
                                Break
                            }
                        }

                        PUPS = Zero
                    }
                }
                ElseIf ((PUPS == Zero))
                {
                    Q0L0 = One
                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((Q0L0 == Zero))
                        {
                            Break
                        }
                    }

                    PUPS = One
                }
            }

            OperationRegion (H224, PCI_Config, 0x0224, 0x04)
            Field (H224, DWordAcc, Lock, Preserve)
            {
                LWDT,   4, 
                Offset (0x04)
            }

            OperationRegion (HC74, PCI_Config, 0x0C74, 0x04)
            Field (HC74, DWordAcc, Lock, Preserve)
            {
                LTSM,   4, 
                Offset (0x04)
            }

            Name (IIP3, Zero)
            Name (PRSR, Zero)
            Name (PCIA, One)
            Method (PCEU, 0, Serialized)
            {
                \_SB.PCI0.PEG1.PRSR = Zero
                If ((\_SB.PCI0.PEG1.PSTA != Zero))
                {
                    \_SB.PCI0.PEG1.PRSR = One
                    \_SB.PCI0.PEG1.PSTA = Zero
                }
            }

            Method (PCDA, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.POFF () != Zero))
                {
                    \_SB.PCI0.PEG1.PCIA = Zero
                    \_SB.PCI0.PEG1.PSTA = 0x03
                    \_SB.PCI0.PEG1.TSPD = One
                    \_SB.PCI0.PEG1.UPSB.TSPD = One
                    \_SB.PCI0.PEG1.LRTN = One
                    Local2 = (Timer + 0x00989680)
                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG1.LACR == Zero))
                        {
                            If ((\_SB.PCI0.PEG1.LTRN != One))
                            {
                                Break
                            }
                        }
                        ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    \_SB.PCI0.PEG1.PUPD (Zero, 0x02)
                    SGOV (0x01070004, Zero, SGDO (0x01070004), SGOV (0x01070007, Zero, SGDO (0x01070007), Sleep (0x0A)))
                    \_SB.PCI0.PEG1.GPCI = Zero
                    \_SB.PCI0.PEG1.UGIO ()
                }
                Else
                {
                }

                \_SB.PCI0.PEG1.IIP3 = One
            }

            Method (POFF, 0, Serialized)
            {
                Return ((!\_SB.PCI0.PEG1.RTBT && !\_SB.PCI0.PEG1.RUSB))
            }

            Name (GPCI, One)
            Name (GNHI, One)
            Name (GXCI, One)
            Name (RTBT, One)
            Name (RUSB, One)
            Name (CTPD, Zero)
            Method (CTBT, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.PUPS != Zero))
                {
                    If (((GGDV == 0x01070004) && One))
                    {
                        (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)
                        Local2 = \_SB.PCI0.PEG1.UPSB.CRMW (0x3C, Zero, 0x02, 0x04000000, 0x04000000)
                        If ((Local2 == Zero))
                        {
                            \_SB.PCI0.PEG1.CTPD = One
                        }
                    }
                }
            }

            Method (UGIO, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.GPCI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.GNHI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.GXCI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.RTBT == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.RUSB == Zero)){}
                Else
                {
                }

                Local0 = (\_SB.PCI0.PEG1.GNHI || \_SB.PCI0.PEG1.RTBT)
                Local1 = (\_SB.PCI0.PEG1.GXCI || \_SB.PCI0.PEG1.RUSB)
                If ((\_SB.PCI0.PEG1.GPCI != Zero))
                {
                    If (((Local0 == Zero) && (Local1 == Zero)))
                    {
                        Local0 = One
                        Local1 = One
                    }
                }

                If ((Local0 == Zero)){}
                Else
                {
                }

                If ((Local1 == Zero)){}
                Else
                {
                }

                Local2 = Zero
                If ((Local0 != Zero))
                {
                    If ((GGDV == 0x01070004))
                    {
                        Zero
                        SGDI (0x01070004)
                        Local2 = One
                        \_SB.PCI0.PEG1.CTPD = Zero
                    }
                }

                If ((Local1 != Zero))
                {
                    If ((GGDV == 0x01070007))
                    {
                        Zero
                        SGDI (0x01070007)
                        Local2 = One
                    }
                }

                If ((Local2 != Zero))
                {
                    Sleep (0x01F4)
                }

                Local3 = Zero
                If ((Local0 == Zero))
                {
                    If ((GGDV == 0x01070004))
                    {
                        One
                        \_SB.PCI0.PEG1.CTBT ()
                        If ((\_SB.PCI0.PEG1.CTPD != Zero))
                        {
                            SGOV (0x01070004, Zero, SGDO (0x01070004), Local3 = One)
                        }
                        Else
                        {
                        }
                    }
                }

                If ((Local1 == Zero))
                {
                    If ((GGDV == 0x01070007))
                    {
                        One
                        SGOV (0x01070007, Zero, SGDO (0x01070007), Local3 = One)
                    }
                }

                If ((Local3 != Zero))
                {
                    Sleep (0x64)
                }

                Return (Local2)
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (OSDW ())
                {
                    PCEU ()
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (OSDW ())
                {
                    If ((\_SB.PCI0.PEG1.POFF () != Zero))
                    {
                        \_SB.PCI0.PEG1.CTBT ()
                    }

                    PCDA ()
                }
            }

            Method (TGPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
            }

            Method (UTLK, 2, Serialized)
            {
                Local0 = Zero
                If (((GGOV == 0x01070004) && Zero))
                {
                    (GGDV == 0x01070004)
                    Zero
                    \_SB.PCI0.PEG1.PSTA = Zero
                    While (One)
                    {
                        If ((\_SB.PCI0.PEG1.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.LDIS = Zero
                        }

                        SGDI (0x01070004)
                        Local1 = Zero
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG1.LACR == Zero))
                            {
                                If ((\_SB.PCI0.PEG1.LTRN != One))
                                {
                                    Break
                                }
                            }
                            ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        Sleep (Arg1)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((Local1 == One))
                        {
                            \_SB.PCI0.PEG1.MABT = One
                            Break
                        }

                        If ((Local0 == 0x04))
                        {
                            Break
                        }

                        Local0++
                        SGOV (0x01070004, Zero, SGDO (0x01070004), Sleep (0x03E8))
                    }
                }
            }

            OperationRegion (FUBA, SystemMemory, 0xE0009000, 0x1000)
            Field (FUBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                F004,   16, 
                F006,   16, 
                Offset (0x0C), 
                F00C,   8, 
                Offset (0x19), 
                F019,   8, 
                F01A,   8, 
                Offset (0x1C), 
                F01C,   8, 
                F01D,   8, 
                F01E,   16, 
                F020,   16, 
                F022,   16, 
                F024,   16, 
                F026,   16, 
                F028,   32, 
                F02C,   32, 
                Offset (0x3C), 
                F03C,   8, 
                F03D,   8, 
                F03E,   16, 
                Offset (0x84), 
                F084,   32, 
                Offset (0x8C), 
                F08C,   32, 
                Offset (0x92), 
                F092,   16, 
                F094,   32, 
                F098,   16, 
                Offset (0xA2), 
                F0A2,   16, 
                Offset (0xA8), 
                F0A8,   16, 
                F0AA,   16, 
                F0AC,   16, 
                Offset (0xB0), 
                F0B0,   16, 
                F0B2,   16, 
                F0B4,   32, 
                Offset (0xBC), 
                F0BC,   16, 
                Offset (0xC0), 
                F0C0,   32, 
                Offset (0xC8), 
                F0C8,   16, 
                Offset (0xD0), 
                F0D0,   16, 
                F0D2,   16, 
                Offset (0xEC), 
                F0EC,   32, 
                Offset (0xF4), 
                F0F4,   32, 
                Offset (0x114), 
                F114,   32, 
                Offset (0x11A), 
                    ,   1, 
                F11A,   1, 
                Offset (0x11C), 
                Offset (0x144), 
                F144,   32, 
                Offset (0x150), 
                F150,   32, 
                Offset (0x158), 
                F158,   32, 
                F15C,   32, 
                Offset (0x1C4), 
                F1C4,   16, 
                Offset (0x1CC), 
                F1CC,   32, 
                F1D0,   32, 
                Offset (0x1F0), 
                F1F0,   32, 
                Offset (0x1F8), 
                F1F8,   32, 
                F1FC,   32, 
                F200,   32, 
                F204,   32, 
                F208,   32, 
                Offset (0x214), 
                Offset (0x216), 
                F214,   4, 
                Offset (0x218), 
                Offset (0x224), 
                F224,   32, 
                F228,   32, 
                F22C,   32, 
                Offset (0x238), 
                F238,   32, 
                Offset (0x240), 
                F240,   32, 
                F244,   32, 
                Offset (0x250), 
                F250,   32, 
                Offset (0x258), 
                F258,   32, 
                F25C,   32, 
                F260,   32, 
                Offset (0x508), 
                F508,   1, 
                Offset (0x509), 
                Offset (0x80C), 
                F80C,   32, 
                Offset (0x82C), 
                F82C,   32, 
                Offset (0x84C), 
                F84C,   32, 
                Offset (0x86C), 
                F86C,   32, 
                Offset (0x88C), 
                F88C,   32, 
                Offset (0x8AC), 
                F8AC,   32, 
                Offset (0x8CC), 
                F8CC,   32, 
                Offset (0x8EC), 
                F8EC,   32, 
                Offset (0x900), 
                F900,   32, 
                F904,   32, 
                F908,   32, 
                F90C,   32, 
                F910,   32, 
                Offset (0x918), 
                F918,   32, 
                Offset (0x920), 
                F920,   32, 
                F924,   32, 
                F928,   32, 
                F92C,   32, 
                F930,   32, 
                Offset (0x938), 
                F938,   32, 
                Offset (0x940), 
                F940,   32, 
                F944,   32, 
                F948,   32, 
                F94C,   32, 
                F950,   32, 
                Offset (0x958), 
                F958,   32, 
                Offset (0x960), 
                F960,   32, 
                F964,   32, 
                F968,   32, 
                F96C,   32, 
                F970,   32, 
                Offset (0x978), 
                F978,   32, 
                F980,   32, 
                F984,   32, 
                F988,   32, 
                F98C,   32, 
                F990,   32, 
                Offset (0x998), 
                F998,   32, 
                Offset (0x9A0), 
                F9A0,   32, 
                F9A4,   32, 
                F9A8,   32, 
                F9AC,   32, 
                F9B0,   32, 
                Offset (0x9B8), 
                F9B8,   32, 
                Offset (0x9C0), 
                F9C0,   32, 
                F9C4,   32, 
                F9C8,   32, 
                F9CC,   32, 
                F9D0,   32, 
                Offset (0x9D8), 
                F9D8,   32, 
                FD9C,   32, 
                F9E0,   32, 
                F9E4,   32, 
                F9E8,   32, 
                F9EC,   32, 
                F9F0,   32, 
                Offset (0x9F8), 
                F9F8,   32, 
                Offset (0xA00), 
                FA00,   32, 
                FA04,   32, 
                FA08,   32, 
                FA0C,   32, 
                FA10,   32, 
                FA14,   32, 
                FA18,   32, 
                FA1C,   32, 
                FA20,   32, 
                FA24,   32, 
                FA28,   32, 
                FA2C,   32, 
                FA30,   32, 
                FA34,   32, 
                FA38,   32, 
                FA3C,   32, 
                FA40,   32, 
                FA44,   32, 
                FA48,   32, 
                FA4C,   32, 
                FA50,   32, 
                FA54,   32, 
                FA58,   32, 
                FA5C,   32, 
                FA60,   32, 
                FA64,   32, 
                FA68,   32, 
                FA6C,   32, 
                FA70,   32, 
                FA74,   32, 
                FA78,   32, 
                FA7C,   32, 
                FA80,   32, 
                FA84,   32, 
                FA88,   32, 
                FA8C,   32, 
                FA90,   32, 
                FA94,   32, 
                FA98,   32, 
                FA9C,   32, 
                FAA0,   32, 
                FAA4,   32, 
                FAA8,   32, 
                FAAC,   32, 
                FAB0,   32, 
                FAB4,   32, 
                FAB8,   32, 
                FABC,   32, 
                FAC0,   32, 
                FAC4,   32, 
                FAC8,   32, 
                FACC,   32, 
                FAD0,   32, 
                FAD4,   32, 
                FAD8,   32, 
                FADC,   32, 
                FAE0,   32, 
                FAE4,   32, 
                FAE8,   32, 
                FAEC,   32, 
                FAF0,   32, 
                FAF4,   32, 
                FAF8,   32, 
                FAFC,   32, 
                Offset (0xC20), 
                    ,   4, 
                FSQ1,   1, 
                FSQ2,   1, 
                Offset (0xC24), 
                Offset (0xC28), 
                FC28,   32, 
                Offset (0xC30), 
                FC30,   32, 
                Offset (0xC38), 
                FC38,   32, 
                Offset (0xCD0), 
                FCD0,   32, 
                Offset (0xD10), 
                FD10,   1, 
                Offset (0xD14), 
                FD14,   32, 
                Offset (0xD34), 
                FD34,   32, 
                Offset (0xD94), 
                FD94,   32, 
                FD98,   32, 
                Offset (0xDA0), 
                FDA0,   32, 
                FDA4,   32, 
                FDA8,   32, 
                FDAC,   32, 
                FDB0,   32, 
                FDB4,   32, 
                FDB8,   32, 
                FDBC,   32, 
                Offset (0xDD8), 
                FDD8,   32
            }

            OperationRegion (BNDL, SystemMemory, 0xE000A000, 0x1000)
            Field (BNDL, ByteAcc, NoLock, Preserve)
            {
                Offset (0xB0), 
                    ,   4, 
                FLDS,   1, 
                Offset (0xB2), 
                    ,   4, 
                    ,   7, 
                FLTR,   1, 
                    ,   1, 
                FLAC,   1, 
                Offset (0xB4), 
                Offset (0x91C), 
                    ,   31, 
                B0PD,   1, 
                Offset (0x93C), 
                    ,   31, 
                B1PD,   1, 
                Offset (0x95C), 
                    ,   31, 
                B2PD,   1, 
                Offset (0x97C), 
                    ,   31, 
                B3PD,   1, 
                Offset (0x99C), 
                    ,   31, 
                B4PD,   1, 
                Offset (0x9BC), 
                    ,   31, 
                B5PD,   1, 
                Offset (0x9DC), 
                    ,   31, 
                B6PD,   1, 
                Offset (0x9FC), 
                    ,   31, 
                B7PD,   1
            }

            OperationRegion (C7AR, SystemMemory, 0xFED15DA8, 0x04)
            Field (C7AR, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                C7AE,   1, 
                Offset (0x04)
            }

            Name (VDD8, Zero)
            Name (V900, Zero)
            Name (V904, Zero)
            Name (V908, Zero)
            Name (V90C, Zero)
            Name (V910, Zero)
            Name (V80C, Zero)
            Name (V920, Zero)
            Name (V924, Zero)
            Name (V928, Zero)
            Name (V92C, Zero)
            Name (V930, Zero)
            Name (V82C, Zero)
            Name (V940, Zero)
            Name (V944, Zero)
            Name (V948, Zero)
            Name (V94C, Zero)
            Name (V950, Zero)
            Name (V84C, Zero)
            Name (V960, Zero)
            Name (V964, Zero)
            Name (V968, Zero)
            Name (V96C, Zero)
            Name (V970, Zero)
            Name (V86C, Zero)
            Name (V980, Zero)
            Name (V984, Zero)
            Name (V988, Zero)
            Name (V98C, Zero)
            Name (V990, Zero)
            Name (V88C, Zero)
            Name (V9A0, Zero)
            Name (V9A4, Zero)
            Name (V9A8, Zero)
            Name (V9AC, Zero)
            Name (V9B0, Zero)
            Name (V8AC, Zero)
            Name (V9C0, Zero)
            Name (V9C4, Zero)
            Name (V9C8, Zero)
            Name (V9CC, Zero)
            Name (V9D0, Zero)
            Name (V8CC, Zero)
            Name (V9E0, Zero)
            Name (V9E4, Zero)
            Name (V9E8, Zero)
            Name (V9EC, Zero)
            Name (V9F0, Zero)
            Name (V8EC, Zero)
            Name (VC30, Zero)
            Name (VA00, Zero)
            Name (VA04, Zero)
            Name (VA08, Zero)
            Name (VA0C, Zero)
            Name (VA10, Zero)
            Name (VA14, Zero)
            Name (VA18, Zero)
            Name (VA1C, Zero)
            Name (VA20, Zero)
            Name (VA24, Zero)
            Name (VA28, Zero)
            Name (VA2C, Zero)
            Name (VA30, Zero)
            Name (VA34, Zero)
            Name (VA38, Zero)
            Name (VA3C, Zero)
            Name (VA40, Zero)
            Name (VA44, Zero)
            Name (VA48, Zero)
            Name (VA4C, Zero)
            Name (VA50, Zero)
            Name (VA54, Zero)
            Name (VA58, Zero)
            Name (VA5C, Zero)
            Name (VA60, Zero)
            Name (VA64, Zero)
            Name (VA68, Zero)
            Name (VA6C, Zero)
            Name (VA70, Zero)
            Name (VA74, Zero)
            Name (VA78, Zero)
            Name (VA7C, Zero)
            Name (VA80, Zero)
            Name (VA84, Zero)
            Name (VA88, Zero)
            Name (VA8C, Zero)
            Name (VA90, Zero)
            Name (VA94, Zero)
            Name (VA98, Zero)
            Name (VA9C, Zero)
            Name (VAA0, Zero)
            Name (VAA4, Zero)
            Name (VAA8, Zero)
            Name (VAAC, Zero)
            Name (VAB0, Zero)
            Name (VAB4, Zero)
            Name (VAB8, Zero)
            Name (VABC, Zero)
            Name (VAC0, Zero)
            Name (VAC4, Zero)
            Name (VAC8, Zero)
            Name (VACC, Zero)
            Name (VAD0, Zero)
            Name (VAD4, Zero)
            Name (VAD8, Zero)
            Name (VADC, Zero)
            Name (VAE0, Zero)
            Name (VAE4, Zero)
            Name (VAE8, Zero)
            Name (VAEC, Zero)
            Name (VAF0, Zero)
            Name (VAF4, Zero)
            Name (VAF8, Zero)
            Name (VAFC, Zero)
            Name (V918, Zero)
            Name (V938, Zero)
            Name (V958, Zero)
            Name (V978, Zero)
            Name (V998, Zero)
            Name (V9B8, Zero)
            Name (V9D8, Zero)
            Name (V9F8, Zero)
            Name (V224, Zero)
            Name (V1F8, Zero)
            Name (V260, Zero)
            Name (VC28, Zero)
            Name (VC38, Zero)
            Name (VD14, Zero)
            Name (V004, Zero)
            Name (V00C, Zero)
            Name (V019, Zero)
            Name (V01A, Zero)
            Name (V01C, Zero)
            Name (V01D, Zero)
            Name (V020, Zero)
            Name (V022, Zero)
            Name (V024, Zero)
            Name (V026, Zero)
            Name (V028, Zero)
            Name (V02C, Zero)
            Name (V03C, Zero)
            Name (V03D, Zero)
            Name (V03E, Zero)
            Name (V084, Zero)
            Name (V08C, Zero)
            Name (V092, Zero)
            Name (V094, Zero)
            Name (V098, Zero)
            Name (V0A2, Zero)
            Name (V0A8, Zero)
            Name (V0AC, Zero)
            Name (V0B0, Zero)
            Name (V0B4, Zero)
            Name (V0BC, Zero)
            Name (V0C8, Zero)
            Name (V0D0, Zero)
            Name (V0EC, Zero)
            Name (V114, Zero)
            Name (V144, Zero)
            Name (V150, Zero)
            Name (V158, Zero)
            Name (V15C, Zero)
            Name (V1CC, Zero)
            Name (V1FC, Zero)
            Name (V200, Zero)
            Name (V204, Zero)
            Name (V208, Zero)
            Name (V228, Zero)
            Name (V22C, Zero)
            Name (V238, Zero)
            Name (V240, Zero)
            Name (V244, Zero)
            Name (V250, Zero)
            Name (V258, Zero)
            Name (V25C, Zero)
            Name (VCD0, Zero)
            Name (VD34, Zero)
            Name (VD94, Zero)
            Name (VD98, Zero)
            Name (V0F4, Zero)
            Name (VDA0, Zero)
            Name (VDA4, Zero)
            Name (VDA8, Zero)
            Name (VDAC, Zero)
            Name (VDB0, Zero)
            Name (VDB4, Zero)
            Name (VDB8, Zero)
            Name (VDBC, Zero)
            Name (V214, Zero)
            Name (V006, Zero)
            Name (V01E, Zero)
            Name (V0AA, Zero)
            Name (V0C0, Zero)
            Name (V0D2, Zero)
            Name (V1C4, Zero)
            Name (V1D0, Zero)
            Name (V1F0, Zero)
            Name (VD9C, Zero)
            Name (V0B2, Zero)
            Name (V508, Zero)
            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
            Field (A1E0, ByteAcc, NoLock, Preserve)
            {
                AVND,   32, 
                BMIE,   3, 
                Offset (0x18), 
                PRIB,   8, 
                SECB,   8, 
                SUBB,   8, 
                Offset (0x1E), 
                    ,   13, 
                MABT,   1
            }

            OperationRegion (HD94, PCI_Config, 0x0D94, 0x08)
            Field (HD94, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                PLEQ,   1, 
                Offset (0x08)
            }

            OperationRegion (A1E1, PCI_Config, 0xA0, 0x40)
            Field (A1E1, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                Offset (0x08), 
                Offset (0x0A), 
                    ,   5, 
                TPEN,   1, 
                Offset (0x0C), 
                SSPD,   4, 
                    ,   16, 
                LACR,   1, 
                Offset (0x10), 
                    ,   4, 
                LDIS,   1, 
                LRTN,   1, 
                Offset (0x12), 
                CSPD,   4, 
                CWDT,   6, 
                    ,   1, 
                LTRN,   1, 
                    ,   1, 
                LACT,   1, 
                Offset (0x14), 
                Offset (0x30), 
                TSPD,   4
            }

            OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
            Field (A1E2, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                PSTA,   2
            }

            OperationRegion (A1E3, PCI_Config, 0x0200, 0x20)
            Field (A1E3, ByteAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                Offset (0x16), 
                PSTS,   4
            }

            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
            {
                Return (Zero)
            }

            Device (UPSB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    AVND,   32, 
                    BMIE,   3, 
                    Offset (0x18), 
                    PRIB,   8, 
                    SECB,   8, 
                    SUBB,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    MABT,   1
                }

                OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                Field (A1E1, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    Offset (0x08), 
                    Offset (0x0A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x0C), 
                    SSPD,   4, 
                        ,   16, 
                    LACR,   1, 
                    Offset (0x10), 
                        ,   4, 
                    LDIS,   1, 
                    LRTN,   1, 
                    Offset (0x12), 
                    CSPD,   4, 
                    CWDT,   6, 
                        ,   1, 
                    LTRN,   1, 
                        ,   1, 
                    LACT,   1, 
                    Offset (0x14), 
                    Offset (0x30), 
                    TSPD,   4
                }

                OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                Field (A1E2, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    PSTA,   2
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.SECB */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }

                Name (LWRT, Zero)
                Method (PCED, 0, Serialized)
                {
                    \_SB.PCI0.PEG1.GPCI = One
                    If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                    {
                        \_SB.PCI0.PEG1.PRSR = One
                    }

                    Local0 = Zero
                    Local1 = Zero
                    If ((PUPS == Zero))
                    {
                        Local1 = One
                    }

                    If ((Local1 == Zero))
                    {
                        If ((\_SB.PCI0.PEG1.IIP3 != Zero))
                        {
                            \_SB.PCI0.PEG1.PRSR = One
                            Local0 = One
                            \_SB.PCI0.PEG1.LDIS = One
                        }
                    }

                    LWRT = Zero
                    Local3 = Zero
                    While ((Local3 == Zero))
                    {
                        Local4 = Zero
                        Local5 = (Timer + 0x00989680)
                        If ((\_SB.PCI0.PEG1.PRSR != Zero))
                        {
                            Sleep (0x1E)
                            If (((Local0 != Zero) || (Local1 != Zero)))
                            {
                                \_SB.PCI0.PEG1.TSPD = One
                                If ((Local1 != Zero))
                                {
                                    \_SB.PCI0.PEG1.PUPD (One, 0x02)
                                }
                                ElseIf ((Local0 != Zero))
                                {
                                    \_SB.PCI0.PEG1.LDIS = Zero
                                }

                                While ((Timer <= Local5))
                                {
                                    Local6 = \_SB.PCI0.PEG1.LTSM
                                    If ((Local6 == 0x03))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Sleep (0x78)
                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                \_SB.PCI0.PEG1.TSPD = 0x03
                                \_SB.PCI0.PEG1.PLEQ = One
                                \_SB.PCI0.PEG1.LRTN = One
                            }

                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.LACR == Zero))
                                {
                                    If ((\_SB.PCI0.PEG1.LTRN != One))
                                    {
                                        Break
                                    }
                                }
                                ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            Sleep (0xFA)
                        }

                        While ((Timer <= Local5))
                        {
                            Local6 = \_SB.PCI0.PEG1.LTSM
                            If ((Local6 == 0x03))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        While ((Timer <= Local5))
                        {
                            If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local4 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((\_SB.PCI0.PEG1.CSPD != 0x03))
                        {
                            If ((\_SB.PCI0.PEG1.SSPD == 0x03))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.SSPD == 0x03))
                                {
                                    If ((\_SB.PCI0.PEG1.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG1.TSPD = 0x03
                                    }

                                    If ((\_SB.PCI0.PEG1.UPSB.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG1.UPSB.TSPD = 0x03
                                    }

                                    \_SB.PCI0.PEG1.LRTN = One
                                    Local2 = (Timer + 0x00989680)
                                    While ((Timer <= Local2))
                                    {
                                        If ((\_SB.PCI0.PEG1.LACR == Zero))
                                        {
                                            If (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                            {
                                                \_SB.PCI0.PEG1.PCIA = One
                                                Break
                                            }
                                        }
                                        ElseIf ((((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)) && 
                                            (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                        {
                                            \_SB.PCI0.PEG1.PCIA = One
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }
                                }
                                Else
                                {
                                    \_SB.PCI0.PEG1.PCIA = One
                                }
                            }
                            Else
                            {
                                \_SB.PCI0.PEG1.PCIA = One
                            }
                        }
                        Else
                        {
                            \_SB.PCI0.PEG1.PCIA = One
                        }

                        If ((((Local4 == Zero) && (LWRT <= 0x0A)) && (
                            \_SB.PCI0.PEG1.PRSR != Zero)))
                        {
                            LWRT += One
                            Local1 = Zero
                            \_SB.PCI0.PEG1.PCIA = Zero
                            Local0 = One
                            \_SB.PCI0.PEG1.LDIS = One
                            Sleep (0x64)
                        }
                        Else
                        {
                            Local3 = One
                        }
                    }

                    \_SB.PCI0.PEG1.PRSR = Zero
                    \_SB.PCI0.PEG1.IIP3 = Zero
                }

                Method (AMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG1.UPSB.DSB0.NHI0, Zero) // Bus Check
                }

                Method (UMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG1.UPSB.DSB2.XHC2, Zero) // Bus Check
                    Notify (\_SB.PCI0.XHC1, Zero) // Bus Check
                }

                Name (MDUV, One)
                Method (MUST, 1, Serialized)
                {
                    If (OSDW ())
                    {
                        If ((MDUV != Arg0))
                        {
                            MDUV = Arg0
                            UMPE ()
                        }
                    }

                    Return (Zero)
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        PCED ()
                        \_SB.PCI0.PEG1.UPSB.CRMW (0x013E, Zero, 0x02, 0x0200, 0x0200)
                        \_SB.PCI0.PEG1.UPSB.CRMW (0x023E, Zero, 0x02, 0x0200, 0x0200)
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG1.UPCK () == Zero))
                        {
                            \_SB.PCI0.PEG1.UTLK (One, 0x03E8)
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.TBTC (0x05)
                    }
                }

                OperationRegion (H548, PCI_Config, 0x0548, 0x20)
                Field (H548, DWordAcc, Lock, Preserve)
                {
                    T2PC,   32, 
                    PC2T,   32
                }

                OperationRegion (H530, PCI_Config, 0x0530, 0x0C)
                Field (H530, DWordAcc, Lock, Preserve)
                {
                    DWIX,   13, 
                    PORT,   6, 
                    SPCE,   2, 
                    CMD0,   1, 
                    CMD1,   1, 
                    CMD2,   1, 
                        ,   6, 
                    PROG,   1, 
                    TMOT,   1, 
                    WDAT,   32, 
                    RDAT,   32
                }

                Method (CIOW, 4, Serialized)
                {
                    WDAT = Arg3
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = One
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG1.UPSB.TMOT */
                    }

                    Return (Local1)
                }

                Method (CIOR, 3, Serialized)
                {
                    RDAT = Zero
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = Zero
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG1.UPSB.TMOT */
                    }

                    If ((Local1 == Zero))
                    {
                        Return (Package (0x02)
                        {
                            Zero, 
                            RDAT
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            One, 
                            RDAT
                        })
                    }
                }

                Method (CRMW, 5, Serialized)
                {
                    Local1 = One
                    If ((\_SB.PCI0.PEG1.PUPS != Zero))
                    {
                        If ((((GGDV == 0x01070004) || One) && (GGDV == 0x01070007)))
                        {
                            One
                            (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)
                            Local3 = Zero
                            While ((Local3 <= 0x04))
                            {
                                Local2 = CIOR (Arg0, Arg1, Arg2)
                                If ((DerefOf (Local2 [Zero]) == Zero))
                                {
                                    Local2 = DerefOf (Local2 [One])
                                    Local2 &= ~Arg4
                                    Local2 |= Arg3
                                    Local2 = CIOW (Arg0, Arg1, Arg2, Local2)
                                    If ((Local2 == Zero))
                                    {
                                        Local2 = CIOR (Arg0, Arg1, Arg2)
                                        If ((DerefOf (Local2 [Zero]) == Zero))
                                        {
                                            Local2 = DerefOf (Local2 [One])
                                            Local2 &= Arg4
                                            If ((Local2 == Arg3))
                                            {
                                                Local1 = Zero
                                                Break
                                            }
                                        }
                                    }
                                }

                                Local3++
                                Sleep (0x64)
                            }
                        }
                    }

                    Return (Local1)
                }

                Method (LSTX, 2, Serialized)
                {
                    If ((T2PC != 0xFFFFFFFF))
                    {
                        Local0 = Zero
                        If (((T2PC & One) && One))
                        {
                            Local0 = One
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == Zero))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = One
                            Local1 |= 0x14
                            Local1 |= (Arg0 << 0x08)
                            Local1 |= (Arg1 << 0x0C)
                            Local1 |= 0x00400000
                            PC2T = Local1
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == 0x15))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        Sleep (0x0A)
                        PC2T = Zero
                    }
                }

                Device (DSB0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB0.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = Zero
                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB0.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB0.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PCIA = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB0.PSTA = 0x03
                            \_SB.PCI0.PEG1.UPSB.DSB0.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG1.UPSB.DSB0.NHI0.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG1.GNHI = Zero
                            \_SB.PCI0.PEG1.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.UPSB.DSB0.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG1.RTBT)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (NHI0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_STR, Unicode ("Thunderbolt"))  // _STR: Description String
                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG1.GNHI = One
                            If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG1.UPSB.DSB0.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG1.UPSB.DSB0.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG1.UPSB.DSB0.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.DSB0.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB0.NHI0.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG1.UPSB.DSB0.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB0.IIP3 = Zero
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (Zero)
                        }

                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            MABT,   1
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG1.RTBT = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MUST, 1, Serialized)
                        {
                            Return (\_SB.PCI0.PEG1.UPSB.MUST (Arg0))
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                                \_SB.PCI0.PEG1.CTBT ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (TRPE, 2, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    If ((Arg0 == Zero))
                                    {
                                        \_SB.PCI0.PEG1.PUPD (Zero, 0x02)
                                        \_SB.PCI0.PEG1.PSTA = 0x03
                                        SGOV (0x01070004, Zero, SGDO (0x01070004), Else
                                            {
                                                Local0 = Zero
                                                If (((GGOV == 0x01070004) && Zero))
                                                {
                                                    (GGDV == 0x01070004)
                                                    Zero
                                                    \_SB.PCI0.PEG1.PSTA = Zero
                                                    While (One)
                                                    {
                                                        SGDI (0x01070004)
                                                        Local1 = Zero
                                                        Sleep (0x1E)
                                                        \_SB.PCI0.PEG1.PUPD (One, 0x02)
                                                        Local2 = (Timer + 0x00989680)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG1.LACR == Zero))
                                                            {
                                                                If ((\_SB.PCI0.PEG1.LTRN != One))
                                                                {
                                                                    Break
                                                                }
                                                            }
                                                            ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                                                            {
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }

                                                        Sleep (Arg1)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                                                            {
                                                                Local1 = One
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }

                                                        If ((Local1 == One))
                                                        {
                                                            MABT = One
                                                            Break
                                                        }

                                                        If ((Local0 == 0x04))
                                                        {
                                                            Return (Zero)
                                                        }

                                                        Local0++
                                                        SGOV (0x01070004, Zero, SGDO (0x01070004), Sleep (0x03E8))
                                                    }

                                                    If ((\_SB.PCI0.PEG1.CSPD != 0x03))
                                                    {
                                                        If ((\_SB.PCI0.PEG1.SSPD == 0x03))
                                                        {
                                                            If ((\_SB.PCI0.PEG1.UPSB.SSPD == 0x03))
                                                            {
                                                                If ((\_SB.PCI0.PEG1.TSPD != 0x03))
                                                                {
                                                                    \_SB.PCI0.PEG1.TSPD = 0x03
                                                                }

                                                                If ((\_SB.PCI0.PEG1.UPSB.TSPD != 0x03))
                                                                {
                                                                    \_SB.PCI0.PEG1.UPSB.TSPD = 0x03
                                                                }

                                                                \_SB.PCI0.PEG1.LRTN = One
                                                                Local2 = (Timer + 0x00989680)
                                                                While ((Timer <= Local2))
                                                                {
                                                                    If ((\_SB.PCI0.PEG1.LACR == Zero))
                                                                    {
                                                                        If (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                                                        {
                                                                            Local1 = One
                                                                            Break
                                                                        }
                                                                    }
                                                                    ElseIf ((((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)) && 
                                                                        (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                                                    {
                                                                        Local1 = One
                                                                        Break
                                                                    }

                                                                    Sleep (0x0A)
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            })
                                    }
                                }
                            }

                            Return (Zero)
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If (OSDW ())
                            {
                                Local0 = Package (0x03)
                                    {
                                        "power-save", 
                                        One, 
                                        Buffer (One)
                                        {
                                             0x00                                             // .
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }

                            Return (Zero)
                        }

                        Method (SXFP, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((GGDV == 0x01070007))
                                {
                                    One
                                    SGOV (0x01070007, Zero, SGDO (0x01070007), Sleep (0x64))
                                }

                                SGOV (0x01070004, Zero, SGDO (0x01070004))
                            }
                        }

                        Name (XRTE, Zero)
                        Method (XRST, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                XRTE = Zero
                            }
                            ElseIf ((Arg0 == One))
                            {
                                XRTE = One
                            }
                        }
                    }
                }

                Device (DSB1)
                {
                    Name (_ADR, 0x00010000)  // _ADR: Address
                    Name (_SUN, One)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB2)
                {
                    Name (_ADR, 0x00020000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB2.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = Zero
                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB2.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB2.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PCIA = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB2.PSTA = 0x03
                            \_SB.PCI0.PEG1.UPSB.DSB2.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG1.UPSB.DSB2.XHC2.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG1.GXCI = Zero
                            \_SB.PCI0.PEG1.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.UPSB.DSB2.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG1.RUSB)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (XHC2)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (SDPC, Zero)
                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            MABT,   1
                        }

                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG1.GXCI = One
                            If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG1.UPSB.DSB2.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG1.UPSB.DSB2.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG1.UPSB.DSB2.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.DSB2.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB2.XHC2.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG1.UPSB.DSB2.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB2.IIP3 = Zero
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If ((U2OP == One))
                            {
                                Local0 = Package (0x06)
                                    {
                                        "USBBusNumber", 
                                        Zero, 
                                        "AAPL,xhci-clock-id", 
                                        One, 
                                        "UsbCompanionControllerPresent", 
                                        One
                                    }
                            }
                            Else
                            {
                                Local0 = Package (0x04)
                                    {
                                        "USBBusNumber", 
                                        Zero, 
                                        "AAPL,xhci-clock-id", 
                                        One
                                    }
                            }

                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Name (HS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (FS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (LS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            If (OSDW ())
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                            Else
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG1.RUSB = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MODU, 0, Serialized)
                        {
                            Return (\_SB.PCI0.PEG1.UPSB.MDUV)
                        }

                        Device (RHUB)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Device (SSP1)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x0B
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x0B
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x0B
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x02, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x02)
                                            {
                                                "UsbCPortNumber", 
                                                0x02
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }

                            Device (SSP2)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x05
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x05
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x05
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                One, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                One, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }
                        }
                    }
                }

                Device (DSB4)
                {
                    Name (_ADR, 0x00040000)  // _ADR: Address
                    Name (_SUN, 0x02)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If (OSDW ())
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x02)
                                {
                                    "PCI-Thunderbolt", 
                                    One
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }
                    }

                    Return (Zero)
                }
            }
        }

        Scope (\_SB.PCI0.PEG2)
        {
            Scope (\_GPE)
            {
                Method (_L56, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG2.POC0 == One))
                        {
                            Return (Zero)
                        }

                        Sleep (0x0190)
                        If ((\_SB.PCI0.PEG2.WTLT () == One))
                        {
                            \_SB.PCI0.PEG2.ICMS ()
                        }
                        Else
                        {
                            \_SB.SGOV (0x01070005, Zero, \_SB.SGDO (0x01070005), If (\_SB.PCI0.PEG2.UPMB)
                                {
                                    \_SB.PCI0.PEG2.UPMB = Zero
                                    Sleep (One)
                                })
                        }

                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.CMPE ()
                    }
                    Else
                    {
                        If ((\_SB.GGII == 0x01070016))
                        {
                            One
                            \_SB.SGII (0x01070016, Zero)
                        }
                        Else
                        {
                            \_SB.SGII (0x01070016, One)
                        }

                        \_SB.PCI0.PEG2.UPSB.AMPE ()
                    }
                }
            }

            Name (EICM, Zero)
            Name (R020, Zero)
            Name (R024, Zero)
            Name (R028, Zero)
            Name (R02C, Zero)
            Name (R118, Zero)
            Name (R119, Zero)
            Name (R11A, Zero)
            Name (R11C, Zero)
            Name (R120, Zero)
            Name (R124, Zero)
            Name (R128, Zero)
            Name (R12C, Zero)
            Name (R218, Zero)
            Name (R219, Zero)
            Name (R21A, Zero)
            Name (R21C, Zero)
            Name (R220, Zero)
            Name (R224, Zero)
            Name (R228, Zero)
            Name (R22C, Zero)
            Name (R318, Zero)
            Name (R319, Zero)
            Name (R31A, Zero)
            Name (R31C, Zero)
            Name (R320, Zero)
            Name (R324, Zero)
            Name (R328, Zero)
            Name (R32C, Zero)
            Name (R418, Zero)
            Name (R419, Zero)
            Name (R41A, Zero)
            Name (R41C, Zero)
            Name (R420, Zero)
            Name (R424, Zero)
            Name (R428, Zero)
            Name (R42C, Zero)
            Name (RVES, Zero)
            Name (R518, Zero)
            Name (R519, Zero)
            Name (R51A, Zero)
            Name (R51C, Zero)
            Name (R520, Zero)
            Name (R524, Zero)
            Name (R528, Zero)
            Name (R52C, Zero)
            Name (R618, Zero)
            Name (R619, Zero)
            Name (R61A, Zero)
            Name (R61C, Zero)
            Name (R620, Zero)
            Name (R624, Zero)
            Name (R628, Zero)
            Name (R62C, Zero)
            Name (RH10, Zero)
            Name (RH14, Zero)
            Name (POC0, Zero)
            OperationRegion (RSTR, SystemMemory, NHI2 (0x0100), Field (RSTR, DWordAcc, NoLock, Preserve)
                {
                    CIOR,   32, 
                    Offset (0xB8), 
                    ISTA,   32, 
                    Offset (0xF0), 
                    ICME,   32
                })
            OperationRegion (T2PM, SystemMemory, T2P2 (0x08), Field (T2PM, DWordAcc, NoLock, Preserve)
                {
                    T2PR,   32, 
                    P2TR,   32
                })
            OperationRegion (RPSM, SystemMemory, 0xE000A000, 0x54)
            Field (RPSM, DWordAcc, NoLock, Preserve)
            {
                RPVD,   32, 
                RPR4,   8, 
                Offset (0x18), 
                RP18,   8, 
                RP19,   8, 
                RP1A,   8, 
                Offset (0x1C), 
                RP1C,   16, 
                Offset (0x20), 
                R_20,   32, 
                R_24,   32, 
                R_28,   32, 
                R_2C,   32, 
                Offset (0x52), 
                    ,   11, 
                RPLT,   1, 
                Offset (0x54)
            }

            OperationRegion (UPSM, SystemMemory, TUP2 (0x0548), Field (UPSM, DWordAcc, NoLock, Preserve)
                {
                    UPVD,   32, 
                    UP04,   8, 
                    Offset (0x08), 
                    CLRD,   32, 
                    Offset (0x18), 
                    UP18,   8, 
                    UP19,   8, 
                    UP1A,   8, 
                    Offset (0x1C), 
                    UP1C,   16, 
                    Offset (0x20), 
                    UP20,   32, 
                    UP24,   32, 
                    UP28,   32, 
                    UP2C,   32, 
                    Offset (0xD2), 
                        ,   11, 
                    UPLT,   1, 
                    Offset (0xD4), 
                    Offset (0x544), 
                    UPMB,   1, 
                    Offset (0x548)
                })
            OperationRegion (DNSM, SystemMemory, TDB2 (0xD4), Field (DNSM, DWordAcc, NoLock, Preserve)
                {
                    DPVD,   32, 
                    DP04,   8, 
                    Offset (0x18), 
                    DP18,   8, 
                    DP19,   8, 
                    DP1A,   8, 
                    Offset (0x1C), 
                    DP1C,   16, 
                    Offset (0x20), 
                    DP20,   32, 
                    DP24,   32, 
                    DP28,   32, 
                    DP2C,   32, 
                    Offset (0xD2), 
                        ,   11, 
                    DPLT,   1, 
                    Offset (0xD4)
                })
            OperationRegion (DS3M, SystemMemory, TD12 (0x40), Field (DS3M, DWordAcc, NoLock, Preserve)
                {
                    D3VD,   32, 
                    D304,   8, 
                    Offset (0x18), 
                    D318,   8, 
                    D319,   8, 
                    D31A,   8, 
                    Offset (0x1C), 
                    D31C,   16, 
                    Offset (0x20), 
                    D320,   32, 
                    D324,   32, 
                    D328,   32, 
                    D32C,   32
                })
            OperationRegion (DS4M, SystemMemory, TD22 (0x0568), Field (DS4M, DWordAcc, NoLock, Preserve)
                {
                    D4VD,   32, 
                    D404,   8, 
                    Offset (0x18), 
                    D418,   8, 
                    D419,   8, 
                    D41A,   8, 
                    Offset (0x1C), 
                    D41C,   16, 
                    Offset (0x20), 
                    D420,   32, 
                    D424,   32, 
                    D428,   32, 
                    D42C,   32, 
                    Offset (0x564), 
                    DVES,   32
                })
            OperationRegion (DS5M, SystemMemory, TD42 (0x40), Field (DS5M, DWordAcc, NoLock, Preserve)
                {
                    D5VD,   32, 
                    D504,   8, 
                    Offset (0x18), 
                    D518,   8, 
                    D519,   8, 
                    D51A,   8, 
                    Offset (0x1C), 
                    D51C,   16, 
                    Offset (0x20), 
                    D520,   32, 
                    D524,   32, 
                    D528,   32, 
                    D52C,   32
                })
            OperationRegion (NHIM, SystemMemory, TNH2 (0x40), Field (NHIM, DWordAcc, NoLock, Preserve)
                {
                    NH00,   32, 
                    NH04,   8, 
                    Offset (0x10), 
                    NH10,   32, 
                    NH14,   32
                })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (!OSDW ())
                {
                    TBG2 = One
                    R020 = R_20 /* \_SB_.PCI0.PEG2.R_20 */
                    R024 = R_24 /* \_SB_.PCI0.PEG2.R_24 */
                    R028 = R_28 /* \_SB_.PCI0.PEG2.R_28 */
                    R02C = R_2C /* \_SB_.PCI0.PEG2.R_2C */
                    R118 = UP18 /* \_SB_.PCI0.PEG2.UP18 */
                    R119 = UP19 /* \_SB_.PCI0.PEG2.UP19 */
                    R11A = UP1A /* \_SB_.PCI0.PEG2.UP1A */
                    R11C = UP1C /* \_SB_.PCI0.PEG2.UP1C */
                    R120 = UP20 /* \_SB_.PCI0.PEG2.UP20 */
                    R124 = UP24 /* \_SB_.PCI0.PEG2.UP24 */
                    R128 = UP28 /* \_SB_.PCI0.PEG2.UP28 */
                    R12C = UP2C /* \_SB_.PCI0.PEG2.UP2C */
                    R218 = DP18 /* \_SB_.PCI0.PEG2.DP18 */
                    R219 = DP19 /* \_SB_.PCI0.PEG2.DP19 */
                    R21A = DP1A /* \_SB_.PCI0.PEG2.DP1A */
                    R21C = DP1C /* \_SB_.PCI0.PEG2.DP1C */
                    R220 = DP20 /* \_SB_.PCI0.PEG2.DP20 */
                    R224 = DP24 /* \_SB_.PCI0.PEG2.DP24 */
                    R228 = DP28 /* \_SB_.PCI0.PEG2.DP28 */
                    R228 = DP28 /* \_SB_.PCI0.PEG2.DP28 */
                    R318 = D318 /* \_SB_.PCI0.PEG2.D318 */
                    R319 = D319 /* \_SB_.PCI0.PEG2.D319 */
                    R31A = D31A /* \_SB_.PCI0.PEG2.D31A */
                    R31C = D31C /* \_SB_.PCI0.PEG2.D31C */
                    R320 = D320 /* \_SB_.PCI0.PEG2.D320 */
                    R324 = D324 /* \_SB_.PCI0.PEG2.D324 */
                    R328 = D328 /* \_SB_.PCI0.PEG2.D328 */
                    R32C = D32C /* \_SB_.PCI0.PEG2.D32C */
                    R418 = D418 /* \_SB_.PCI0.PEG2.D418 */
                    R419 = D419 /* \_SB_.PCI0.PEG2.D419 */
                    R41A = D41A /* \_SB_.PCI0.PEG2.D41A */
                    R41C = D41C /* \_SB_.PCI0.PEG2.D41C */
                    R420 = D420 /* \_SB_.PCI0.PEG2.D420 */
                    R424 = D424 /* \_SB_.PCI0.PEG2.D424 */
                    R428 = D428 /* \_SB_.PCI0.PEG2.D428 */
                    R42C = D42C /* \_SB_.PCI0.PEG2.D42C */
                    RVES = DVES /* \_SB_.PCI0.PEG2.DVES */
                    R518 = D518 /* \_SB_.PCI0.PEG2.D518 */
                    R519 = D519 /* \_SB_.PCI0.PEG2.D519 */
                    R51A = D51A /* \_SB_.PCI0.PEG2.D51A */
                    R51C = D51C /* \_SB_.PCI0.PEG2.D51C */
                    R520 = D520 /* \_SB_.PCI0.PEG2.D520 */
                    R524 = D524 /* \_SB_.PCI0.PEG2.D524 */
                    R528 = D528 /* \_SB_.PCI0.PEG2.D528 */
                    R52C = D52C /* \_SB_.PCI0.PEG2.D52C */
                    RH10 = NH10 /* \_SB_.PCI0.PEG2.NH10 */
                    RH14 = NH14 /* \_SB_.PCI0.PEG2.NH14 */
                    Sleep (One)
                    ICMB ()
                }
            }

            Method (ICMB, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((\_SB.PCI0.LPCB.RTC.ISWI != One))
                    {
                        ICMS ()
                        SGOV (0x01070008, Zero, SGDO (0x01070008), Else
                            {
                            })
                    }
                }
            }

            Method (ICMS, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((\_SB.PCI0.LPCB.RTC.ISWI != One))
                    {
                        \_SB.PCI0.PEG2.POC0 = One
                        If ((\_SB.PCI0.PEG2.ICME != 0x800001A6))
                        {
                            If (\_SB.PCI0.PEG2.CNHI ())
                            {
                                If ((\_SB.PCI0.PEG2.ICME != 0xFFFFFFFF))
                                {
                                    SGDI (0x01070005)
                                    \_SB.PCI0.PEG2.WTLT ()
                                    If (!Local0 = (\_SB.PCI0.PEG2.ICME & 0x80000000))
                                    {
                                        \_SB.PCI0.PEG2.ICME |= 0x06
                                        Local0 = 0x03E8
                                        While (((Local1 = (\_SB.PCI0.PEG2.ICME & 0x80000000)) == Zero))
                                        {
                                            Local0--
                                            If ((Local0 == Zero))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }

                                        Sleep (0x03E8)
                                    }

                                    \_SB.SGOV (0x01070005, Zero, \_SB.SGDO (0x01070005), \_SB.PCI0.PEG2.POC0 = Zero)
                                }
                            }
                        }
                    }
                }
            }

            Method (TBTC, 1, Serialized)
            {
                P2TR = Arg0
                Local0 = 0x64
                Local1 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                While (((Local2 = (Local1 & One)) == Zero))
                {
                    If ((Local1 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    Local0--
                    If ((Local0 == Zero))
                    {
                        Break
                    }

                    Local1 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                    Sleep (0x32)
                }

                P2TR = Zero
            }

            Method (CMPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG2, Zero) // Bus Check
            }

            Method (CNHI, 0, Serialized)
            {
                Local0 = 0x0A
                While (Local0)
                {
                    R_20 = R020 /* \_SB_.PCI0.PEG2.R020 */
                    R_24 = R024 /* \_SB_.PCI0.PEG2.R024 */
                    R_28 = R028 /* \_SB_.PCI0.PEG2.R028 */
                    R_2C = R02C /* \_SB_.PCI0.PEG2.R02C */
                    RPR4 = 0x07
                    If ((R020 == R_20))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R020 != R_20))
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    UP18 = R118 /* \_SB_.PCI0.PEG2.R118 */
                    UP19 = R119 /* \_SB_.PCI0.PEG2.R119 */
                    UP1A = R11A /* \_SB_.PCI0.PEG2.R11A */
                    UP1C = R11C /* \_SB_.PCI0.PEG2.R11C */
                    UP20 = R120 /* \_SB_.PCI0.PEG2.R120 */
                    UP24 = R124 /* \_SB_.PCI0.PEG2.R124 */
                    UP28 = R128 /* \_SB_.PCI0.PEG2.R128 */
                    UP2C = R12C /* \_SB_.PCI0.PEG2.R12C */
                    UP04 = 0x07
                    If ((R119 == UP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R119 != UP19))
                {
                    Return (Zero)
                }

                If ((WTLT () == One)){}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    DP18 = R218 /* \_SB_.PCI0.PEG2.R218 */
                    DP19 = R219 /* \_SB_.PCI0.PEG2.R219 */
                    DP1A = R21A /* \_SB_.PCI0.PEG2.R21A */
                    DP1C = R21C /* \_SB_.PCI0.PEG2.R21C */
                    DP20 = R220 /* \_SB_.PCI0.PEG2.R220 */
                    DP24 = R224 /* \_SB_.PCI0.PEG2.R224 */
                    DP28 = R228 /* \_SB_.PCI0.PEG2.R228 */
                    DP2C = R22C /* \_SB_.PCI0.PEG2.R22C */
                    DP04 = 0x07
                    D318 = R318 /* \_SB_.PCI0.PEG2.R318 */
                    D319 = R319 /* \_SB_.PCI0.PEG2.R319 */
                    D31A = R31A /* \_SB_.PCI0.PEG2.R31A */
                    D31C = R31C /* \_SB_.PCI0.PEG2.R31C */
                    D320 = R320 /* \_SB_.PCI0.PEG2.R320 */
                    D324 = R324 /* \_SB_.PCI0.PEG2.R324 */
                    D328 = R328 /* \_SB_.PCI0.PEG2.R328 */
                    D32C = R32C /* \_SB_.PCI0.PEG2.R32C */
                    D304 = 0x07
                    D418 = R418 /* \_SB_.PCI0.PEG2.R418 */
                    D419 = R419 /* \_SB_.PCI0.PEG2.R419 */
                    D41A = R41A /* \_SB_.PCI0.PEG2.R41A */
                    D41C = R41C /* \_SB_.PCI0.PEG2.R41C */
                    D420 = R420 /* \_SB_.PCI0.PEG2.R420 */
                    D424 = R424 /* \_SB_.PCI0.PEG2.R424 */
                    D428 = R428 /* \_SB_.PCI0.PEG2.R428 */
                    D42C = R42C /* \_SB_.PCI0.PEG2.R42C */
                    DVES = RVES /* \_SB_.PCI0.PEG2.RVES */
                    D404 = 0x07
                    D518 = R518 /* \_SB_.PCI0.PEG2.R518 */
                    D519 = R519 /* \_SB_.PCI0.PEG2.R519 */
                    D51A = R51A /* \_SB_.PCI0.PEG2.R51A */
                    D51C = R51C /* \_SB_.PCI0.PEG2.R51C */
                    D520 = R520 /* \_SB_.PCI0.PEG2.R520 */
                    D524 = R524 /* \_SB_.PCI0.PEG2.R524 */
                    D528 = R528 /* \_SB_.PCI0.PEG2.R528 */
                    D52C = R52C /* \_SB_.PCI0.PEG2.R52C */
                    D504 = 0x07
                    If ((R219 == DP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R219 != DP19))
                {
                    Return (Zero)
                }

                If ((WTDL () == One)){}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x64
                While (Local0)
                {
                    NH10 = RH10 /* \_SB_.PCI0.PEG2.RH10 */
                    NH14 = RH14 /* \_SB_.PCI0.PEG2.RH14 */
                    NH04 = 0x07
                    If ((RH10 == NH10))
                    {
                        Break
                    }
                    Else
                    {
                    }

                    Sleep (One)
                    Local0--
                }

                If ((RH10 != NH10))
                {
                    Return (Zero)
                }

                Return (One)
            }

            Method (UPCK, 0, Serialized)
            {
                If ((((UPVD == 0x156D8086) || (UPVD == 0x156B8086)) || (UPVD == 0x156A8086)))
                {
                    Return (One)
                }

                If ((UPVD == 0x15788086))
                {
                    Return (One)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (ULTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        Return (One)
                    }
                }

                Return (Zero)
            }

            Method (WTLT, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (ULTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            Method (DLTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        If ((DPLT == Zero))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (WTDL, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (DLTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            OperationRegion (OPG0, SystemMemory, 0xE000A000, 0x1000)
            Field (OPG0, ByteAcc, NoLock, Preserve)
            {
                P0VI,   16, 
                P0DI,   16, 
                Offset (0x248), 
                    ,   7, 
                Q0L2,   1, 
                Q0L0,   1
            }

            Name (PUPS, One)
            Method (PUPD, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((PUPS != Zero))
                    {
                        Q0L2 = One
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((Q0L2 == Zero))
                            {
                                Break
                            }
                        }

                        PUPS = Zero
                    }
                }
                ElseIf ((PUPS == Zero))
                {
                    Q0L0 = One
                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((Q0L0 == Zero))
                        {
                            Break
                        }
                    }

                    PUPS = One
                }
            }

            OperationRegion (H224, PCI_Config, 0x0224, 0x04)
            Field (H224, DWordAcc, Lock, Preserve)
            {
                LWDT,   4, 
                Offset (0x04)
            }

            OperationRegion (HC74, PCI_Config, 0x0C74, 0x04)
            Field (HC74, DWordAcc, Lock, Preserve)
            {
                LTSM,   4, 
                Offset (0x04)
            }

            Name (IIP3, Zero)
            Name (PRSR, Zero)
            Name (PCIA, One)
            Method (PCEU, 0, Serialized)
            {
                \_SB.PCI0.PEG2.PRSR = Zero
                If ((\_SB.PCI0.PEG2.PSTA != Zero))
                {
                    \_SB.PCI0.PEG2.PRSR = One
                    \_SB.PCI0.PEG2.PSTA = Zero
                }
            }

            Method (PCDA, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.POFF () != Zero))
                {
                    \_SB.PCI0.PEG2.PCIA = Zero
                    \_SB.PCI0.PEG2.PSTA = 0x03
                    \_SB.PCI0.PEG2.TSPD = One
                    \_SB.PCI0.PEG2.UPSB.TSPD = One
                    \_SB.PCI0.PEG2.LRTN = One
                    Local2 = (Timer + 0x00989680)
                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG2.LACR == Zero))
                        {
                            If ((\_SB.PCI0.PEG2.LTRN != One))
                            {
                                Break
                            }
                        }
                        ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    \_SB.PCI0.PEG2.PUPD (Zero, 0x02)
                    SGOV (0x01070005, Zero, SGDO (0x01070005), SGOV (0x01070008, Zero, SGDO (0x01070008), Sleep (0x0A)))
                    \_SB.PCI0.PEG2.GPCI = Zero
                    \_SB.PCI0.PEG2.UGIO ()
                }
                Else
                {
                }

                \_SB.PCI0.PEG2.IIP3 = One
            }

            Method (POFF, 0, Serialized)
            {
                Return ((!\_SB.PCI0.PEG2.RTBT && !\_SB.PCI0.PEG2.RUSB))
            }

            Name (GPCI, One)
            Name (GNHI, One)
            Name (GXCI, One)
            Name (RTBT, One)
            Name (RUSB, One)
            Name (CTPD, Zero)
            Method (CTBT, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.PUPS != Zero))
                {
                    If (((GGDV == 0x01070005) && One))
                    {
                        (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)
                        Local2 = \_SB.PCI0.PEG2.UPSB.CRMW (0x3C, Zero, 0x02, 0x04000000, 0x04000000)
                        If ((Local2 == Zero))
                        {
                            \_SB.PCI0.PEG2.CTPD = One
                        }
                    }
                }
            }

            Method (UGIO, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.GPCI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.GNHI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.GXCI == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.RTBT == Zero)){}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.RUSB == Zero)){}
                Else
                {
                }

                Local0 = (\_SB.PCI0.PEG2.GNHI || \_SB.PCI0.PEG2.RTBT)
                Local1 = (\_SB.PCI0.PEG2.GXCI || \_SB.PCI0.PEG2.RUSB)
                If ((\_SB.PCI0.PEG2.GPCI != Zero))
                {
                    If (((Local0 == Zero) && (Local1 == Zero)))
                    {
                        Local0 = One
                        Local1 = One
                    }
                }

                If ((Local0 == Zero)){}
                Else
                {
                }

                If ((Local1 == Zero)){}
                Else
                {
                }

                Local2 = Zero
                If ((Local0 != Zero))
                {
                    If ((GGDV == 0x01070005))
                    {
                        Zero
                        SGDI (0x01070005)
                        Local2 = One
                        \_SB.PCI0.PEG2.CTPD = Zero
                    }
                }

                If ((Local1 != Zero))
                {
                    If ((GGDV == 0x01070008))
                    {
                        Zero
                        SGDI (0x01070008)
                        Local2 = One
                    }
                }

                If ((Local2 != Zero))
                {
                    Sleep (0x01F4)
                }

                Local3 = Zero
                If ((Local0 == Zero))
                {
                    If ((GGDV == 0x01070005))
                    {
                        One
                        \_SB.PCI0.PEG2.CTBT ()
                        If ((\_SB.PCI0.PEG2.CTPD != Zero))
                        {
                            SGOV (0x01070005, Zero, SGDO (0x01070005), Local3 = One)
                        }
                        Else
                        {
                        }
                    }
                }

                If ((Local1 == Zero))
                {
                    If ((GGDV == 0x01070008))
                    {
                        One
                        SGOV (0x01070008, Zero, SGDO (0x01070008), Local3 = One)
                    }
                }

                If ((Local3 != Zero))
                {
                    Sleep (0x64)
                }

                Return (Local2)
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (OSDW ())
                {
                    PCEU ()
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (OSDW ())
                {
                    If ((\_SB.PCI0.PEG2.POFF () != Zero))
                    {
                        \_SB.PCI0.PEG2.CTBT ()
                    }

                    PCDA ()
                }
            }

            Method (TGPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
            }

            Method (UTLK, 2, Serialized)
            {
                Local0 = Zero
                If (((GGOV == 0x01070005) && Zero))
                {
                    (GGDV == 0x01070005)
                    Zero
                    \_SB.PCI0.PEG2.PSTA = Zero
                    While (One)
                    {
                        If ((\_SB.PCI0.PEG2.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.LDIS = Zero
                        }

                        SGDI (0x01070005)
                        Local1 = Zero
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG2.LACR == Zero))
                            {
                                If ((\_SB.PCI0.PEG2.LTRN != One))
                                {
                                    Break
                                }
                            }
                            ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        Sleep (Arg1)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((Local1 == One))
                        {
                            \_SB.PCI0.PEG2.MABT = One
                            Break
                        }

                        If ((Local0 == 0x04))
                        {
                            Break
                        }

                        Local0++
                        SGOV (0x01070005, Zero, SGDO (0x01070005), Sleep (0x03E8))
                    }
                }
            }

            OperationRegion (FUBA, SystemMemory, 0xE000A000, 0x1000)
            Field (FUBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                F004,   16, 
                F006,   16, 
                Offset (0x0C), 
                F00C,   8, 
                Offset (0x19), 
                F019,   8, 
                F01A,   8, 
                Offset (0x1C), 
                F01C,   8, 
                F01D,   8, 
                F01E,   16, 
                F020,   16, 
                F022,   16, 
                F024,   16, 
                F026,   16, 
                F028,   32, 
                F02C,   32, 
                Offset (0x3C), 
                F03C,   8, 
                F03D,   8, 
                F03E,   16, 
                Offset (0x84), 
                F084,   32, 
                Offset (0x8C), 
                F08C,   32, 
                Offset (0x92), 
                F092,   16, 
                F094,   32, 
                F098,   16, 
                Offset (0xA2), 
                F0A2,   16, 
                Offset (0xA8), 
                F0A8,   16, 
                F0AA,   16, 
                F0AC,   16, 
                Offset (0xB0), 
                F0B0,   16, 
                F0B2,   16, 
                F0B4,   32, 
                Offset (0xBC), 
                F0BC,   16, 
                Offset (0xC0), 
                F0C0,   32, 
                Offset (0xC8), 
                F0C8,   16, 
                Offset (0xD0), 
                F0D0,   16, 
                F0D2,   16, 
                Offset (0xEC), 
                F0EC,   32, 
                Offset (0xF4), 
                F0F4,   32, 
                Offset (0x114), 
                F114,   32, 
                Offset (0x11A), 
                    ,   1, 
                F11A,   1, 
                Offset (0x11C), 
                Offset (0x144), 
                F144,   32, 
                Offset (0x150), 
                F150,   32, 
                Offset (0x158), 
                F158,   32, 
                F15C,   32, 
                Offset (0x1C4), 
                F1C4,   16, 
                Offset (0x1CC), 
                F1CC,   32, 
                F1D0,   32, 
                Offset (0x1F0), 
                F1F0,   32, 
                Offset (0x1F8), 
                F1F8,   32, 
                F1FC,   32, 
                F200,   32, 
                F204,   32, 
                F208,   32, 
                Offset (0x214), 
                Offset (0x216), 
                F214,   4, 
                Offset (0x218), 
                Offset (0x224), 
                F224,   32, 
                F228,   32, 
                F22C,   32, 
                Offset (0x238), 
                F238,   32, 
                Offset (0x240), 
                F240,   32, 
                F244,   32, 
                Offset (0x250), 
                F250,   32, 
                Offset (0x258), 
                F258,   32, 
                F25C,   32, 
                F260,   32, 
                Offset (0x508), 
                F508,   1, 
                Offset (0x509), 
                Offset (0x80C), 
                F80C,   32, 
                Offset (0x82C), 
                F82C,   32, 
                Offset (0x84C), 
                F84C,   32, 
                Offset (0x86C), 
                F86C,   32, 
                Offset (0x88C), 
                F88C,   32, 
                Offset (0x8AC), 
                F8AC,   32, 
                Offset (0x8CC), 
                F8CC,   32, 
                Offset (0x8EC), 
                F8EC,   32, 
                Offset (0x900), 
                F900,   32, 
                F904,   32, 
                F908,   32, 
                F90C,   32, 
                F910,   32, 
                Offset (0x918), 
                F918,   32, 
                Offset (0x920), 
                F920,   32, 
                F924,   32, 
                F928,   32, 
                F92C,   32, 
                F930,   32, 
                Offset (0x938), 
                F938,   32, 
                Offset (0x940), 
                F940,   32, 
                F944,   32, 
                F948,   32, 
                F94C,   32, 
                F950,   32, 
                Offset (0x958), 
                F958,   32, 
                Offset (0x960), 
                F960,   32, 
                F964,   32, 
                F968,   32, 
                F96C,   32, 
                F970,   32, 
                Offset (0x978), 
                F978,   32, 
                F980,   32, 
                F984,   32, 
                F988,   32, 
                F98C,   32, 
                F990,   32, 
                Offset (0x998), 
                F998,   32, 
                Offset (0x9A0), 
                F9A0,   32, 
                F9A4,   32, 
                F9A8,   32, 
                F9AC,   32, 
                F9B0,   32, 
                Offset (0x9B8), 
                F9B8,   32, 
                Offset (0x9C0), 
                F9C0,   32, 
                F9C4,   32, 
                F9C8,   32, 
                F9CC,   32, 
                F9D0,   32, 
                Offset (0x9D8), 
                F9D8,   32, 
                FD9C,   32, 
                F9E0,   32, 
                F9E4,   32, 
                F9E8,   32, 
                F9EC,   32, 
                F9F0,   32, 
                Offset (0x9F8), 
                F9F8,   32, 
                Offset (0xA00), 
                FA00,   32, 
                FA04,   32, 
                FA08,   32, 
                FA0C,   32, 
                FA10,   32, 
                FA14,   32, 
                FA18,   32, 
                FA1C,   32, 
                FA20,   32, 
                FA24,   32, 
                FA28,   32, 
                FA2C,   32, 
                FA30,   32, 
                FA34,   32, 
                FA38,   32, 
                FA3C,   32, 
                FA40,   32, 
                FA44,   32, 
                FA48,   32, 
                FA4C,   32, 
                FA50,   32, 
                FA54,   32, 
                FA58,   32, 
                FA5C,   32, 
                FA60,   32, 
                FA64,   32, 
                FA68,   32, 
                FA6C,   32, 
                FA70,   32, 
                FA74,   32, 
                FA78,   32, 
                FA7C,   32, 
                FA80,   32, 
                FA84,   32, 
                FA88,   32, 
                FA8C,   32, 
                FA90,   32, 
                FA94,   32, 
                FA98,   32, 
                FA9C,   32, 
                FAA0,   32, 
                FAA4,   32, 
                FAA8,   32, 
                FAAC,   32, 
                FAB0,   32, 
                FAB4,   32, 
                FAB8,   32, 
                FABC,   32, 
                FAC0,   32, 
                FAC4,   32, 
                FAC8,   32, 
                FACC,   32, 
                FAD0,   32, 
                FAD4,   32, 
                FAD8,   32, 
                FADC,   32, 
                FAE0,   32, 
                FAE4,   32, 
                FAE8,   32, 
                FAEC,   32, 
                FAF0,   32, 
                FAF4,   32, 
                FAF8,   32, 
                FAFC,   32, 
                Offset (0xC20), 
                    ,   4, 
                FSQ1,   1, 
                FSQ2,   1, 
                Offset (0xC24), 
                Offset (0xC28), 
                FC28,   32, 
                Offset (0xC30), 
                FC30,   32, 
                Offset (0xC38), 
                FC38,   32, 
                Offset (0xCD0), 
                FCD0,   32, 
                Offset (0xD10), 
                FD10,   1, 
                Offset (0xD14), 
                FD14,   32, 
                Offset (0xD34), 
                FD34,   32, 
                Offset (0xD94), 
                FD94,   32, 
                FD98,   32, 
                Offset (0xDA0), 
                FDA0,   32, 
                FDA4,   32, 
                FDA8,   32, 
                FDAC,   32, 
                FDB0,   32, 
                FDB4,   32, 
                FDB8,   32, 
                FDBC,   32, 
                Offset (0xDD8), 
                FDD8,   32
            }

            OperationRegion (BNDL, SystemMemory, 0xE000A000, 0x1000)
            Field (BNDL, ByteAcc, NoLock, Preserve)
            {
                Offset (0xB0), 
                    ,   4, 
                FLDS,   1, 
                Offset (0xB2), 
                    ,   4, 
                    ,   7, 
                FLTR,   1, 
                    ,   1, 
                FLAC,   1, 
                Offset (0xB4), 
                Offset (0x91C), 
                    ,   31, 
                B0PD,   1, 
                Offset (0x93C), 
                    ,   31, 
                B1PD,   1, 
                Offset (0x95C), 
                    ,   31, 
                B2PD,   1, 
                Offset (0x97C), 
                    ,   31, 
                B3PD,   1, 
                Offset (0x99C), 
                    ,   31, 
                B4PD,   1, 
                Offset (0x9BC), 
                    ,   31, 
                B5PD,   1, 
                Offset (0x9DC), 
                    ,   31, 
                B6PD,   1, 
                Offset (0x9FC), 
                    ,   31, 
                B7PD,   1
            }

            OperationRegion (C7AR, SystemMemory, 0xFED15DA8, 0x04)
            Field (C7AR, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                C7AE,   1, 
                Offset (0x04)
            }

            Name (VDD8, Zero)
            Name (V900, Zero)
            Name (V904, Zero)
            Name (V908, Zero)
            Name (V90C, Zero)
            Name (V910, Zero)
            Name (V80C, Zero)
            Name (V920, Zero)
            Name (V924, Zero)
            Name (V928, Zero)
            Name (V92C, Zero)
            Name (V930, Zero)
            Name (V82C, Zero)
            Name (V940, Zero)
            Name (V944, Zero)
            Name (V948, Zero)
            Name (V94C, Zero)
            Name (V950, Zero)
            Name (V84C, Zero)
            Name (V960, Zero)
            Name (V964, Zero)
            Name (V968, Zero)
            Name (V96C, Zero)
            Name (V970, Zero)
            Name (V86C, Zero)
            Name (V980, Zero)
            Name (V984, Zero)
            Name (V988, Zero)
            Name (V98C, Zero)
            Name (V990, Zero)
            Name (V88C, Zero)
            Name (V9A0, Zero)
            Name (V9A4, Zero)
            Name (V9A8, Zero)
            Name (V9AC, Zero)
            Name (V9B0, Zero)
            Name (V8AC, Zero)
            Name (V9C0, Zero)
            Name (V9C4, Zero)
            Name (V9C8, Zero)
            Name (V9CC, Zero)
            Name (V9D0, Zero)
            Name (V8CC, Zero)
            Name (V9E0, Zero)
            Name (V9E4, Zero)
            Name (V9E8, Zero)
            Name (V9EC, Zero)
            Name (V9F0, Zero)
            Name (V8EC, Zero)
            Name (VC30, Zero)
            Name (VA00, Zero)
            Name (VA04, Zero)
            Name (VA08, Zero)
            Name (VA0C, Zero)
            Name (VA10, Zero)
            Name (VA14, Zero)
            Name (VA18, Zero)
            Name (VA1C, Zero)
            Name (VA20, Zero)
            Name (VA24, Zero)
            Name (VA28, Zero)
            Name (VA2C, Zero)
            Name (VA30, Zero)
            Name (VA34, Zero)
            Name (VA38, Zero)
            Name (VA3C, Zero)
            Name (VA40, Zero)
            Name (VA44, Zero)
            Name (VA48, Zero)
            Name (VA4C, Zero)
            Name (VA50, Zero)
            Name (VA54, Zero)
            Name (VA58, Zero)
            Name (VA5C, Zero)
            Name (VA60, Zero)
            Name (VA64, Zero)
            Name (VA68, Zero)
            Name (VA6C, Zero)
            Name (VA70, Zero)
            Name (VA74, Zero)
            Name (VA78, Zero)
            Name (VA7C, Zero)
            Name (VA80, Zero)
            Name (VA84, Zero)
            Name (VA88, Zero)
            Name (VA8C, Zero)
            Name (VA90, Zero)
            Name (VA94, Zero)
            Name (VA98, Zero)
            Name (VA9C, Zero)
            Name (VAA0, Zero)
            Name (VAA4, Zero)
            Name (VAA8, Zero)
            Name (VAAC, Zero)
            Name (VAB0, Zero)
            Name (VAB4, Zero)
            Name (VAB8, Zero)
            Name (VABC, Zero)
            Name (VAC0, Zero)
            Name (VAC4, Zero)
            Name (VAC8, Zero)
            Name (VACC, Zero)
            Name (VAD0, Zero)
            Name (VAD4, Zero)
            Name (VAD8, Zero)
            Name (VADC, Zero)
            Name (VAE0, Zero)
            Name (VAE4, Zero)
            Name (VAE8, Zero)
            Name (VAEC, Zero)
            Name (VAF0, Zero)
            Name (VAF4, Zero)
            Name (VAF8, Zero)
            Name (VAFC, Zero)
            Name (V918, Zero)
            Name (V938, Zero)
            Name (V958, Zero)
            Name (V978, Zero)
            Name (V998, Zero)
            Name (V9B8, Zero)
            Name (V9D8, Zero)
            Name (V9F8, Zero)
            Name (V224, Zero)
            Name (V1F8, Zero)
            Name (V260, Zero)
            Name (VC28, Zero)
            Name (VC38, Zero)
            Name (VD14, Zero)
            Name (V004, Zero)
            Name (V00C, Zero)
            Name (V019, Zero)
            Name (V01A, Zero)
            Name (V01C, Zero)
            Name (V01D, Zero)
            Name (V020, Zero)
            Name (V022, Zero)
            Name (V024, Zero)
            Name (V026, Zero)
            Name (V028, Zero)
            Name (V02C, Zero)
            Name (V03C, Zero)
            Name (V03D, Zero)
            Name (V03E, Zero)
            Name (V084, Zero)
            Name (V08C, Zero)
            Name (V092, Zero)
            Name (V094, Zero)
            Name (V098, Zero)
            Name (V0A2, Zero)
            Name (V0A8, Zero)
            Name (V0AC, Zero)
            Name (V0B0, Zero)
            Name (V0B4, Zero)
            Name (V0BC, Zero)
            Name (V0C8, Zero)
            Name (V0D0, Zero)
            Name (V0EC, Zero)
            Name (V114, Zero)
            Name (V144, Zero)
            Name (V150, Zero)
            Name (V158, Zero)
            Name (V15C, Zero)
            Name (V1CC, Zero)
            Name (V1FC, Zero)
            Name (V200, Zero)
            Name (V204, Zero)
            Name (V208, Zero)
            Name (V228, Zero)
            Name (V22C, Zero)
            Name (V238, Zero)
            Name (V240, Zero)
            Name (V244, Zero)
            Name (V250, Zero)
            Name (V258, Zero)
            Name (V25C, Zero)
            Name (VCD0, Zero)
            Name (VD34, Zero)
            Name (VD94, Zero)
            Name (VD98, Zero)
            Name (V0F4, Zero)
            Name (VDA0, Zero)
            Name (VDA4, Zero)
            Name (VDA8, Zero)
            Name (VDAC, Zero)
            Name (VDB0, Zero)
            Name (VDB4, Zero)
            Name (VDB8, Zero)
            Name (VDBC, Zero)
            Name (V214, Zero)
            Name (V006, Zero)
            Name (V01E, Zero)
            Name (V0AA, Zero)
            Name (V0C0, Zero)
            Name (V0D2, Zero)
            Name (V1C4, Zero)
            Name (V1D0, Zero)
            Name (V1F0, Zero)
            Name (VD9C, Zero)
            Name (V0B2, Zero)
            Name (V508, Zero)
            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
            Field (A1E0, ByteAcc, NoLock, Preserve)
            {
                AVND,   32, 
                BMIE,   3, 
                Offset (0x18), 
                PRIB,   8, 
                SECB,   8, 
                SUBB,   8, 
                Offset (0x1E), 
                    ,   13, 
                MABT,   1
            }

            OperationRegion (HD94, PCI_Config, 0x0D94, 0x08)
            Field (HD94, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                PLEQ,   1, 
                Offset (0x08)
            }

            OperationRegion (A1E1, PCI_Config, 0xA0, 0x40)
            Field (A1E1, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                Offset (0x08), 
                Offset (0x0A), 
                    ,   5, 
                TPEN,   1, 
                Offset (0x0C), 
                SSPD,   4, 
                    ,   16, 
                LACR,   1, 
                Offset (0x10), 
                    ,   4, 
                LDIS,   1, 
                LRTN,   1, 
                Offset (0x12), 
                CSPD,   4, 
                CWDT,   6, 
                    ,   1, 
                LTRN,   1, 
                    ,   1, 
                LACT,   1, 
                Offset (0x14), 
                Offset (0x30), 
                TSPD,   4
            }

            OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
            Field (A1E2, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                PSTA,   2
            }

            OperationRegion (A1E3, PCI_Config, 0x0200, 0x20)
            Field (A1E3, ByteAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                Offset (0x16), 
                PSTS,   4
            }

            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
            {
                Return (Zero)
            }

            Device (UPSB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    AVND,   32, 
                    BMIE,   3, 
                    Offset (0x18), 
                    PRIB,   8, 
                    SECB,   8, 
                    SUBB,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    MABT,   1
                }

                OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                Field (A1E1, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    Offset (0x08), 
                    Offset (0x0A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x0C), 
                    SSPD,   4, 
                        ,   16, 
                    LACR,   1, 
                    Offset (0x10), 
                        ,   4, 
                    LDIS,   1, 
                    LRTN,   1, 
                    Offset (0x12), 
                    CSPD,   4, 
                    CWDT,   6, 
                        ,   1, 
                    LTRN,   1, 
                        ,   1, 
                    LACT,   1, 
                    Offset (0x14), 
                    Offset (0x30), 
                    TSPD,   4
                }

                OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                Field (A1E2, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    PSTA,   2
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.SECB */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }

                Name (LWRT, Zero)
                Method (PCED, 0, Serialized)
                {
                    \_SB.PCI0.PEG2.GPCI = One
                    If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                    {
                        \_SB.PCI0.PEG2.PRSR = One
                    }

                    Local0 = Zero
                    Local1 = Zero
                    If ((PUPS == Zero))
                    {
                        Local1 = One
                    }

                    If ((Local1 == Zero))
                    {
                        If ((\_SB.PCI0.PEG2.IIP3 != Zero))
                        {
                            \_SB.PCI0.PEG2.PRSR = One
                            Local0 = One
                            \_SB.PCI0.PEG2.LDIS = One
                        }
                    }

                    LWRT = Zero
                    Local3 = Zero
                    While ((Local3 == Zero))
                    {
                        Local4 = Zero
                        Local5 = (Timer + 0x00989680)
                        If ((\_SB.PCI0.PEG2.PRSR != Zero))
                        {
                            Sleep (0x1E)
                            If (((Local0 != Zero) || (Local1 != Zero)))
                            {
                                \_SB.PCI0.PEG2.TSPD = One
                                If ((Local1 != Zero))
                                {
                                    \_SB.PCI0.PEG2.PUPD (One, 0x02)
                                }
                                ElseIf ((Local0 != Zero))
                                {
                                    \_SB.PCI0.PEG2.LDIS = Zero
                                }

                                While ((Timer <= Local5))
                                {
                                    Local6 = \_SB.PCI0.PEG2.LTSM
                                    If ((Local6 == 0x03))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Sleep (0x78)
                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                \_SB.PCI0.PEG2.TSPD = 0x03
                                \_SB.PCI0.PEG2.PLEQ = One
                                \_SB.PCI0.PEG2.LRTN = One
                            }

                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.LACR == Zero))
                                {
                                    If ((\_SB.PCI0.PEG2.LTRN != One))
                                    {
                                        Break
                                    }
                                }
                                ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            Sleep (0xFA)
                        }

                        While ((Timer <= Local5))
                        {
                            Local6 = \_SB.PCI0.PEG2.LTSM
                            If ((Local6 == 0x03))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        While ((Timer <= Local5))
                        {
                            If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local4 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((\_SB.PCI0.PEG2.CSPD != 0x03))
                        {
                            If ((\_SB.PCI0.PEG2.SSPD == 0x03))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.SSPD == 0x03))
                                {
                                    If ((\_SB.PCI0.PEG2.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG2.TSPD = 0x03
                                    }

                                    If ((\_SB.PCI0.PEG2.UPSB.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG2.UPSB.TSPD = 0x03
                                    }

                                    \_SB.PCI0.PEG2.LRTN = One
                                    Local2 = (Timer + 0x00989680)
                                    While ((Timer <= Local2))
                                    {
                                        If ((\_SB.PCI0.PEG2.LACR == Zero))
                                        {
                                            If (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                            {
                                                \_SB.PCI0.PEG2.PCIA = One
                                                Break
                                            }
                                        }
                                        ElseIf ((((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)) && 
                                            (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                        {
                                            \_SB.PCI0.PEG2.PCIA = One
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }
                                }
                                Else
                                {
                                    \_SB.PCI0.PEG2.PCIA = One
                                }
                            }
                            Else
                            {
                                \_SB.PCI0.PEG2.PCIA = One
                            }
                        }
                        Else
                        {
                            \_SB.PCI0.PEG2.PCIA = One
                        }

                        If ((((Local4 == Zero) && (LWRT <= 0x0A)) && (
                            \_SB.PCI0.PEG2.PRSR != Zero)))
                        {
                            LWRT += One
                            Local1 = Zero
                            \_SB.PCI0.PEG2.PCIA = Zero
                            Local0 = One
                            \_SB.PCI0.PEG2.LDIS = One
                            Sleep (0x64)
                        }
                        Else
                        {
                            Local3 = One
                        }
                    }

                    \_SB.PCI0.PEG2.PRSR = Zero
                    \_SB.PCI0.PEG2.IIP3 = Zero
                }

                Method (AMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG2.UPSB.DSB0.NHI0, Zero) // Bus Check
                }

                Method (UMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG2.UPSB.DSB2.XHC3, Zero) // Bus Check
                    Notify (\_SB.PCI0.XHC1, Zero) // Bus Check
                }

                Name (MDUV, One)
                Method (MUST, 1, Serialized)
                {
                    If (OSDW ())
                    {
                        If ((MDUV != Arg0))
                        {
                            MDUV = Arg0
                            UMPE ()
                        }
                    }

                    Return (Zero)
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        PCED ()
                        \_SB.PCI0.PEG2.UPSB.CRMW (0x013E, Zero, 0x02, 0x0200, 0x0200)
                        \_SB.PCI0.PEG2.UPSB.CRMW (0x023E, Zero, 0x02, 0x0200, 0x0200)
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG2.UPCK () == Zero))
                        {
                            \_SB.PCI0.PEG2.UTLK (One, 0x03E8)
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.TBTC (0x05)
                    }
                }

                OperationRegion (H548, PCI_Config, 0x0548, 0x20)
                Field (H548, DWordAcc, Lock, Preserve)
                {
                    T2PC,   32, 
                    PC2T,   32
                }

                OperationRegion (H530, PCI_Config, 0x0530, 0x0C)
                Field (H530, DWordAcc, Lock, Preserve)
                {
                    DWIX,   13, 
                    PORT,   6, 
                    SPCE,   2, 
                    CMD0,   1, 
                    CMD1,   1, 
                    CMD2,   1, 
                        ,   6, 
                    PROG,   1, 
                    TMOT,   1, 
                    WDAT,   32, 
                    RDAT,   32
                }

                Method (CIOW, 4, Serialized)
                {
                    WDAT = Arg3
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = One
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG2.UPSB.TMOT */
                    }

                    Return (Local1)
                }

                Method (CIOR, 3, Serialized)
                {
                    RDAT = Zero
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = Zero
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG2.UPSB.TMOT */
                    }

                    If ((Local1 == Zero))
                    {
                        Return (Package (0x02)
                        {
                            Zero, 
                            RDAT
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            One, 
                            RDAT
                        })
                    }
                }

                Method (CRMW, 5, Serialized)
                {
                    Local1 = One
                    If ((\_SB.PCI0.PEG2.PUPS != Zero))
                    {
                        If ((((GGDV == 0x01070005) || One) && (GGDV == 0x01070008)))
                        {
                            One
                            (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)
                            Local3 = Zero
                            While ((Local3 <= 0x04))
                            {
                                Local2 = CIOR (Arg0, Arg1, Arg2)
                                If ((DerefOf (Local2 [Zero]) == Zero))
                                {
                                    Local2 = DerefOf (Local2 [One])
                                    Local2 &= ~Arg4
                                    Local2 |= Arg3
                                    Local2 = CIOW (Arg0, Arg1, Arg2, Local2)
                                    If ((Local2 == Zero))
                                    {
                                        Local2 = CIOR (Arg0, Arg1, Arg2)
                                        If ((DerefOf (Local2 [Zero]) == Zero))
                                        {
                                            Local2 = DerefOf (Local2 [One])
                                            Local2 &= Arg4
                                            If ((Local2 == Arg3))
                                            {
                                                Local1 = Zero
                                                Break
                                            }
                                        }
                                    }
                                }

                                Local3++
                                Sleep (0x64)
                            }
                        }
                    }

                    Return (Local1)
                }

                Method (LSTX, 2, Serialized)
                {
                    If ((T2PC != 0xFFFFFFFF))
                    {
                        Local0 = Zero
                        If (((T2PC & One) && One))
                        {
                            Local0 = One
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == Zero))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = One
                            Local1 |= 0x14
                            Local1 |= (Arg0 << 0x08)
                            Local1 |= (Arg1 << 0x0C)
                            Local1 |= 0x00400000
                            PC2T = Local1
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == 0x15))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        Sleep (0x0A)
                        PC2T = Zero
                    }
                }

                Device (DSB0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB0.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = Zero
                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB0.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB0.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PCIA = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB0.PSTA = 0x03
                            \_SB.PCI0.PEG2.UPSB.DSB0.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG2.UPSB.DSB0.NHI0.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG2.GNHI = Zero
                            \_SB.PCI0.PEG2.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.UPSB.DSB0.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG2.RTBT)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (NHI0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_STR, Unicode ("Thunderbolt"))  // _STR: Description String
                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG2.GNHI = One
                            If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG2.UPSB.DSB0.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG2.UPSB.DSB0.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG2.UPSB.DSB0.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.DSB0.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB0.NHI0.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG2.UPSB.DSB0.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB0.IIP3 = Zero
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (Zero)
                        }

                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            MABT,   1
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG2.RTBT = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MUST, 1, Serialized)
                        {
                            Return (\_SB.PCI0.PEG2.UPSB.MUST (Arg0))
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                                \_SB.PCI0.PEG2.CTBT ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (TRPE, 2, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    If ((Arg0 == Zero))
                                    {
                                        \_SB.PCI0.PEG2.PUPD (Zero, 0x02)
                                        \_SB.PCI0.PEG2.PSTA = 0x03
                                        SGOV (0x01070005, Zero, SGDO (0x01070005), Else
                                            {
                                                Local0 = Zero
                                                If (((GGOV == 0x01070005) && Zero))
                                                {
                                                    (GGDV == 0x01070005)
                                                    Zero
                                                    \_SB.PCI0.PEG2.PSTA = Zero
                                                    While (One)
                                                    {
                                                        SGDI (0x01070005)
                                                        Local1 = Zero
                                                        Sleep (0x1E)
                                                        \_SB.PCI0.PEG2.PUPD (One, 0x02)
                                                        Local2 = (Timer + 0x00989680)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG2.LACR == Zero))
                                                            {
                                                                If ((\_SB.PCI0.PEG2.LTRN != One))
                                                                {
                                                                    Break
                                                                }
                                                            }
                                                            ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                                                            {
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }

                                                        Sleep (Arg1)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                                                            {
                                                                Local1 = One
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }

                                                        If ((Local1 == One))
                                                        {
                                                            MABT = One
                                                            Break
                                                        }

                                                        If ((Local0 == 0x04))
                                                        {
                                                            Return (Zero)
                                                        }

                                                        Local0++
                                                        SGOV (0x01070005, Zero, SGDO (0x01070005), Sleep (0x03E8))
                                                    }

                                                    If ((\_SB.PCI0.PEG2.CSPD != 0x03))
                                                    {
                                                        If ((\_SB.PCI0.PEG2.SSPD == 0x03))
                                                        {
                                                            If ((\_SB.PCI0.PEG2.UPSB.SSPD == 0x03))
                                                            {
                                                                If ((\_SB.PCI0.PEG2.TSPD != 0x03))
                                                                {
                                                                    \_SB.PCI0.PEG2.TSPD = 0x03
                                                                }

                                                                If ((\_SB.PCI0.PEG2.UPSB.TSPD != 0x03))
                                                                {
                                                                    \_SB.PCI0.PEG2.UPSB.TSPD = 0x03
                                                                }

                                                                \_SB.PCI0.PEG2.LRTN = One
                                                                Local2 = (Timer + 0x00989680)
                                                                While ((Timer <= Local2))
                                                                {
                                                                    If ((\_SB.PCI0.PEG2.LACR == Zero))
                                                                    {
                                                                        If (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                                                        {
                                                                            Local1 = One
                                                                            Break
                                                                        }
                                                                    }
                                                                    ElseIf ((((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)) && 
                                                                        (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                                                    {
                                                                        Local1 = One
                                                                        Break
                                                                    }

                                                                    Sleep (0x0A)
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            })
                                    }
                                }
                            }

                            Return (Zero)
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If (OSDW ())
                            {
                                Local0 = Package (0x03)
                                    {
                                        "power-save", 
                                        One, 
                                        Buffer (One)
                                        {
                                             0x00                                             // .
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }

                            Return (Zero)
                        }

                        Method (SXFP, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((GGDV == 0x01070008))
                                {
                                    One
                                    SGOV (0x01070008, Zero, SGDO (0x01070008), Sleep (0x64))
                                }

                                SGOV (0x01070005, Zero, SGDO (0x01070005))
                            }
                        }

                        Name (XRTE, Zero)
                        Method (XRST, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                XRTE = Zero
                            }
                            ElseIf ((Arg0 == One))
                            {
                                XRTE = One
                            }
                        }
                    }
                }

                Device (DSB1)
                {
                    Name (_ADR, 0x00010000)  // _ADR: Address
                    Name (_SUN, One)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB2)
                {
                    Name (_ADR, 0x00020000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB2.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = Zero
                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB2.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB2.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PCIA = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB2.PSTA = 0x03
                            \_SB.PCI0.PEG2.UPSB.DSB2.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG2.UPSB.DSB2.XHC3.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG2.GXCI = Zero
                            \_SB.PCI0.PEG2.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.UPSB.DSB2.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG2.RUSB)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (XHC3)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (SDPC, Zero)
                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            MABT,   1
                        }

                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG2.GXCI = One
                            If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG2.UPSB.DSB2.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG2.UPSB.DSB2.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG2.UPSB.DSB2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.DSB2.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB2.XHC3.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG2.UPSB.DSB2.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB2.IIP3 = Zero
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If ((U2OP == One))
                            {
                                Local0 = Package (0x06)
                                    {
                                        "USBBusNumber", 
                                        One, 
                                        "AAPL,xhci-clock-id", 
                                        One, 
                                        "UsbCompanionControllerPresent", 
                                        One
                                    }
                            }
                            Else
                            {
                                Local0 = Package (0x04)
                                    {
                                        "USBBusNumber", 
                                        One, 
                                        "AAPL,xhci-clock-id", 
                                        One
                                    }
                            }

                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Name (HS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (FS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (LS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            If (OSDW ())
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                            Else
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG2.RUSB = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MODU, 0, Serialized)
                        {
                            Return (\_SB.PCI0.PEG2.UPSB.MDUV)
                        }

                        Device (RHUB)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Device (SSP1)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x03, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x02)
                                            {
                                                "UsbCPortNumber", 
                                                0x03
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }

                            Device (SSP2)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x07
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x07
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x07
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x04, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x04, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }
                        }
                    }
                }

                Device (DSB4)
                {
                    Name (_ADR, 0x00040000)  // _ADR: Address
                    Name (_SUN, 0x02)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        MABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        MABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                MABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If (OSDW ())
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))
                        {
                            Local0 = Package (0x02)
                                {
                                    "PCI-Thunderbolt", 
                                    One
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }
                    }

                    Return (Zero)
                }
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApCst", 0x00003000)
{
    External (_PR_.CPU0._CST, IntObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)

    Scope (\_PR.CPU1)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SataAhci", 0x00001000)
{
    External (_SB_.PCI0.RP17.SSD0, DeviceObj)
    External (GTF0, IntObj)

    Scope (\_SB.PCI0.RP17.SSD0)
    {
        Device (PRT0)
        {
            Name (_ADR, 0xFFFF)  // _ADR: Address
            Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
            {
                Name (GBU0, Buffer (0x07)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00         // .......
                })
                CreateByteField (GBU0, Zero, GB00)
                CreateByteField (GBU0, One, GB01)
                CreateByteField (GBU0, 0x06, GB06)
                If ((SizeOf (Arg0) == 0x0200))
                {
                    CreateWordField (Arg0, 0x9C, W780)
                    If ((W780 & 0x08))
                    {
                        GB00 = 0x10
                        GB01 = 0x03
                        GB06 = 0xEF
                    }
                    Else
                    {
                        GB00 = 0x90
                        GB01 = 0x03
                        GB06 = 0xEF
                    }
                }

                GTF0 = GBU0 /* \_SB_.PCI0.RP17.SSD0.PRT0._SDD.GBU0 */
            }

            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                Return (GTF0) /* External reference */
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApIst", 0x00003000)
{
    External (_PR_.CPU0._PCT, IntObj)
    External (_PR_.CPU0._PPC, IntObj)
    External (_PR_.CPU0._PSS, IntObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (PDC0, UnknownObj)
    External (TCNT, IntObj)

    Scope (\_PR.CPU1)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU1.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU1.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU2)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU2.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU2.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU3)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU3.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU3.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU4)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU4.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU4.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU5)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU5.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU5.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU6)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU6.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU6.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU7)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC) /* External reference */
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT) /* External reference */
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS) /* External reference */
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU7.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU7.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "PEG0SSD0", 0x00001000)
{


SSDT9
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SmcDppt", 0x00001000)
{


UEFI
----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000042
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 54
[00Ah 0010   6]                       Oem ID : "INTEL "
[010h 0016   8]                 Oem Table ID : "EDK2    "
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "    "
[020h 0032   4]        Asl Compiler Revision : 01000013

[024h 0036  16]              UUID Identifier : C68ED8E2-9DC6-4CBD-9D94-DB65ACC5C332
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 66 (0x42)

    0000: 55 45 46 49 42 00 00 00 01 54 49 4E 54 45 4C 20  // UEFIB....TINTEL 
    0010: 45 44 4B 32 20 20 20 20 02 00 00 00 20 20 20 20  // EDK2    ....    
    0020: 13 00 00 01 E2 D8 8E C6 C6 9D BD 4C 9D 94 DB 65  // ...........L...e
    0030: AC C5 C3 32 36 00 01 00 00 00 00 00 00 00 00 00  // ...26...........
    0040: 00 00                                            // ..


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000F284
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 56
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD"
[020h 0032   4]        Asl Compiler Revision : 31504F47


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 62084 (0xF284)

    0000: 56 46 43 54 84 F2 00 00 01 56 41 50 50 4C 45 20  // VFCT.....VAPPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 41 4D 44 00  // Apple00.....AMD.
    0020: 47 4F 50 31 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // GOP12..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 EF 67 00 00 00 00  // ...........g....
    0060: 01 00 00 00 00 F2 00 00 55 AA 79 E9 AD 02 00 00  // ........U.y.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 50 02 00 00 00 00 49 42 4D 94 0A 4E 00 00 00 00  // P.....IBM..N....
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 A5 02 00 00 00 00 00 00  // 20..............
    00B0: 2C 02 00 00 00 00 00 00 30 33 2F 30 37 2F 31 37  // ,.......03/07/17
    00C0: 2C 31 38 3A 31 36 3A 32 38 00 00 00 E9 7E 03 00  // ,18:16:28....~..
    00D0: 00 00 00 00 00 00 F4 00 00 15 00 00 00 D0 01 00  // ................
    00E0: F4 02 20 E1 02 80 7E 00 E2 1A 44 02 12 00 00 00  // .. ...~...D.....
    00F0: 00 00 00 3C 40 0E 02 07 3E 01 1A 00 04 00 00 00  // ...<@...>.......
    0100: EE A0 FF 06 00 08 30 40 0E 01 00 00 00 00 00 00  // ......0@........
    0110: 14 03 00 00 00 00 00 00 BE 7E 11 00 B9 07 1A D6  // .........~......
    0120: 50 2C 00 00 00 00 00 00 00 00 00 00 0C 40 41 43  // P,...........@AC
    0130: 00 00 00 00 10 00 00 00 42 00 00 00 F0 7E C6 07  // ........B....~..
    0140: 20 00 20 00 12 00 0E 00 00 00 00 00 00 00 00 00  //  . .............
    0150: 00 00 00 00 00 00 00 00 00 00 00 00 31 31 33 2D  // ............113-
    0160: 43 39 38 30 31 41 50 2D 41 30 32 00 42 41 46 46  // C9801AP-A02.BAFF
    0170: 49 4E 4D 00 50 43 49 5F 45 58 50 52 45 53 53 00  // INM.PCI_EXPRESS.
    0180: 47 44 44 52 35 00 0D 0A 46 61 6C 63 6F 6E 20 42  // GDDR5...Falcon B
    0190: 61 66 66 69 6E 4D 20 4A 38 30 41 20 50 52 4F 41  // affinM J80A PROA
    01A0: 20 41 31 20 47 44 44 52 35 20 34 47 42 20 32 35  //  A1 GDDR5 4GB 25
    01B0: 36 4D 78 33 32 20 32 31 34 65 2F 33 30 30 6D 20  // 6Mx32 214e/300m 
    01C0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    01D0: 20 20 20 20 0D 0A 00 0D 0A 20 0D 0A 00 28 43 29  //     ..... ...(C)
    01E0: 20 31 39 38 38 2D 32 30 31 30 2C 20 41 64 76 61  //  1988-2010, Adva
    01F0: 6E 63 65 64 20 4D 69 63 72 6F 20 44 65 76 69 63  // nced Micro Devic
    0200: 65 73 2C 20 49 6E 63 2E 00 41 54 4F 4D 42 49 4F  // es, Inc..ATOMBIO
    0210: 53 42 4B 2D 41 4D 44 20 56 45 52 30 31 35 2E 30  // SBK-AMD VER015.0
    0220: 35 30 2E 30 30 30 2E 30 30 31 2E 30 30 30 30 30  // 50.000.001.00000
    0230: 30 00 43 39 38 30 31 41 50 2E 41 30 32 20 00 31  // 0.C9801AP.A02 .1
    0240: 33 38 32 35 38 39 20 00 33 37 36 33 32 32 20 20  // 382589 .376322  
    0250: 00 20 20 20 20 20 20 20 20 00 46 41 4C 43 4F 4E  // .        .FALCON
    0260: 5F 42 41 46 46 49 4E 4D 5F 50 52 4F 41 5F 53 54  // _BAFFINM_PROA_ST
    0270: 45 49 4E 42 41 43 5F 41 31 5F 47 44 44 52 35 5F  // EINBAC_A1_GDDR5_
    0280: 32 47 42 5F 4A 38 30 41 5C 63 6F 6E 66 69 67 2E  // 2GB_J80A\config.
    0290: 68 00 00 00 24 00 01 01 41 54 4F 4D 00 00 97 03  // h...$...ATOM....
    02A0: CA 01 75 02 1E 01 BC 03 00 00 00 00 6B 10 7A 01  // ..u.........k.z.
    02B0: 50 02 14 51 BA 51 A1 00 50 43 49 52 02 10 EF 67  // P..Q.Q..PCIR...g
    02C0: 00 00 18 00 00 00 80 03 79 00 32 0F 00 80 00 00  // ........y.2.....
    02D0: 41 4D 44 20 41 54 4F 4D 42 49 4F 53 00 35 CA 76  // AMD ATOMBIOS.5.v
    02E0: 2C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ,...............
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0300: 00 00 00 00 00 00 00 00 00 00 00 00 00 56 1E 0E  // .............V..
    0310: 1F E8 D8 29 81 4D 50 00 20 1F 5E 1E 06 66 50 66  // ...).MP. .^..fPf
    0320: 51 66 52 66 53 66 55 66 56 66 57 0E 1F A3 40 02  // QfRfSfUfVfW...@.
    0330: 8C 0E 34 02 B2 20 E8 79 2D 0B C0 75 14 A2 02 00  // ..4.. .y-..u....
    0340: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0350: CB E8 8F 2E E8 71 2C 32 D2 89 16 42 02 A1 40 02  // .....q,2...B..@.
    0360: 66 C1 C0 10 A1 34 02 E8 D1 03 E8 E4 03 E8 AC 03  // f....4..........
    0370: E8 FA 04 E8 11 03 E8 73 29 F7 45 50 00 20 75 07  // .......s).EP. u.
    0380: E8 49 29 0B C0 74 00 E8 8B 00 B4 80 E8 57 2C 8A  // .I)..t.......W,.
    0390: C7 66 C1 E0 10 8A E3 B0 14 66 50 BB 08 00 E8 B9  // .f.......fP.....
    03A0: 27 A8 01 66 58 74 02 B0 20 66 A3 0A 4E E8 3A 03  // '..fXt.. f..N.:.
    03B0: E8 A8 03 E8 52 2E 66 5F 66 5E 66 5D 66 5B 66 5A  // ....R.f_f^f]f[fZ
    03C0: 66 59 66 58 07 1F CB 2E 8B 1E 34 02 83 3E A9 03  // fYfX......4..>..
    03D0: 00 75 04 89 1E A7 03 1E 2E 8E 1E 9F 03 9C FA 66  // .u.............f
    03E0: C7 06 08 01 65 F0 00 F0 C7 06 40 00 BC 03 89 1E  // ....e.....@.....
    03F0: 42 00 C7 06 B4 01 BC 03 89 1E B6 01 9D 1F C3 50  // B..............P
    0400: 4D 49 44 BC 03 8C 47 00 00 00 A0 00 B0 00 B8 00  // MID...G.........
    0410: C0 00 00 00 00 BB 00 00 E8 3F 27 66 C1 E8 10 A3  // .........?'f....
    0420: 56 02 C3 00 E8 BC 2D E8 48 02 75 1B 2E 3A 26 4E  // V.....-.H.u..:&N
    0430: 02 75 05 E8 47 00 EB 11 80 FC 4F 75 05 E8 AA 42  // .u..G.....Ou...B
    0440: EB 07 E8 E7 49 EB 02 B4 01 E8 BC 2D CF E8 93 2D  // ....I......-...-
    0450: E8 1F 02 75 05 E8 25 00 EB 02 B4 01 E8 A9 2D CB  // ...u..%.......-.
    0460: E8 80 2D E8 0C 02 75 0F 80 FC 4F 75 05 E8 7A 42  // ..-...u...Ou..zB
    0470: EB 07 E8 B7 49 EB 02 B4 01 E8 8C 2D CB 1E 06 66  // ....I......-...f
    0480: 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F 3C  // PfQfRfSfUfVfW..<
    0490: 04 75 23 BB 0B 00 E8 C1 26 8D 36 1B 01 8A 3C 80  // .u#.....&.6...<.
    04A0: EF 30 B3 02 8B EC 89 5E 0C 89 46 04 66 C1 E8 10  // .0.....^..F.f...
    04B0: 89 46 00 E9 9A 01 3C 05 75 18 E8 77 02 E8 08 2B  // .F....<.u..w...+
    04C0: 8B EC 89 56 10 89 46 00 66 C1 E8 10 89 46 04 E9  // ...V..F.f....F..
    04D0: 7E 01 3C 06 75 39 E8 69 02 66 D1 E0 8B EC 89 46  // ~.<.u9.i.f.....F
    04E0: 14 BB 02 00 E8 73 26 88 46 18 E8 59 02 66 0B C0  // .....s&.F..Y.f..
    04F0: 0F 84 54 01 66 89 46 0C BB 06 00 E8 5C 26 33 C0  // ..T.f.F.....\&3.
    0500: 66 89 46 00 2E 8B 16 56 02 89 56 10 E9 41 01 3C  // f.F....V..V..A.<
    0510: 0B 75 24 0A DB 75 11 B9 80 00 BB 02 00 8B EC 89  // .u$..u..........
    0520: 5E 0C 89 4E 14 E9 28 01 8A C7 E8 3B 01 E8 B8 0E  // ^..N..(....;....
    0530: 0F 84 14 01 E9 19 01 3C 17 75 21 E8 4A 06 74 06  // .......<.u!.J.t.
    0540: E8 3E 0D E8 87 18 E8 6B 07 E8 8F 0E 33 C9 66 C1  // .>.....k....3.f.
    0550: E8 10 0A E8 8B EC 89 4E 14 E9 F4 00 3C 18 75 6A  // .......N....<.uj
    0560: 0A FF 75 18 E8 7B 05 8B EC 89 46 0C 66 C1 E8 10  // ..u..{....F.f...
    0570: 89 46 14 E8 1C 08 89 4E 10 E9 D4 00 80 FF 0F 74  // .F.....N.......t
    0580: 0E 23 C9 0F 84 C1 00 E8 A5 05 E8 FB 05 75 2D BB  // .#...........u-.
    0590: 00 1C E8 0E 2C 66 0B C0 0F 84 AC 00 E8 15 07 0B  // ....,f..........
    05A0: C9 0F 84 A3 00 BE 00 1C E8 C6 01 0F 84 99 00 BE  // ................
    05B0: 00 1C B0 40 E8 23 02 E8 28 05 EB 06 E8 1E 06 E8  // ...@.#..(.......
    05C0: 0D 06 8B EC 89 46 0C E9 86 00 3C 19 75 05 E8 E0  // .....F....<.u...
    05D0: 05 EB 7D 3C 82 75 2C 80 FB 01 75 0D 8B EC BE 3A  // ..}<.u,...u....:
    05E0: 06 89 76 00 8C 4E 10 EB 67 80 FB 05 75 15 0A FF  // ..v..N..g...u...
    05F0: 75 0A E8 66 03 8B EC 89 46 14 EB 54 E8 25 03 74  // u..f....F..T.%.t
    0600: 3F EB 4D 3C 8E 75 12 80 FF 01 74 08 80 FF 02 75  // ?.M<.u....t....u
    0610: 2F 80 C1 02 E8 AA 03 EB 37 3C 8F 75 23 80 FF 05  // /.......7<.u#...
    0620: 75 05 E8 FC 05 EB 29 80 FF 07 75 0A E8 00 06 8B  // u.....)...u.....
    0630: EC 88 5E 0C EB 1A 80 FF 85 75 05 E8 E3 05 EB 10  // ..^......u......
    0640: 8B EC C6 46 19 02 EB 0F 8B EC C6 46 19 01 EB 07  // ...F.......F....
    0650: 32 E4 8B EC 88 66 19 66 5F 66 5E 66 5D 66 5B 66  // 2....f.f_f^f]f[f
    0660: 5A 66 59 66 58 07 1F C3 51 8A C8 B8 01 00 D3 E0  // ZfYfX...Q.......
    0670: 59 C3 50 32 C0 53 BB 15 00 E8 DE 24 5B 3C FF 74  // Y.P2.S.....$[<.t
    0680: 04 24 03 0A C0 58 C3 E8 A4 2B E8 88 06 F7 C1 02  // .$...X...+......
    0690: 00 74 0E 06 0E 07 8D 3E 3A 06 B8 02 00 E8 A1 05  // .t.....>:.......
    06A0: 07 C3 00 00 00 00 07 00 08 08 08 00 00 00 00 00  // ................
    06B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06C0: 00 00 0C 01 C3 00 50 51 B0 B6 E6 43 B0 33 E6 42  // ......PQ...C.3.B
    06D0: B0 05 E6 42 E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8  // ...B.a.....a....
    06E0: 00 E8 6C 27 E6 61 59 58 C3 00 1E 56 0E 1F 80 3E  // ..l'.aYX...V...>
    06F0: 02 00 80 76 05 C6 06 02 00 80 8A 0E 02 00 C1 E1  // ...v............
    0700: 09 FC C6 06 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB  // ....!..3.2......
    0710: F6 D4 FE C4 88 26 21 00 5E 1F C3 00 E8 4A 26 75  // .....&!.^....J&u
    0720: 03 E8 F4 27 E8 8D 26 E8 57 26 E8 B1 25 E8 51 0B  // ...'..&.W&..%.Q.
    0730: C3 B0 01 C3 BB 01 00 E8 0C 24 C3 BB 01 00 E8 0F  // .........$......
    0740: 24 C3 E8 99 27 C3 53 BB 04 00 E8 0D 24 33 C0 5B  // $...'.S.....$3.[
    0750: C3 E8 62 27 BB 0A 00 E8 F6 23 C3 BB 0A 00 E8 E5  // ..b'.....#......
    0760: 23 66 8B C8 E8 4F 27 BB 0A 00 66 2B C1 E8 E0 23  // #f...O'...f+...#
    0770: C3 E8 29 00 0B C9 74 22 E8 46 06 E8 DB 15 66 51  // ..)...t".F....fQ
    0780: 66 8B C8 BB 07 00 E8 BD 23 66 25 00 FE 00 00 66  // f.......#f%....f
    0790: 0B C1 E8 BB 23 66 59 0C 01 C3 32 C0 C3 E8 7D 03  // ....#fY...2...}.
    07A0: 0B C9 75 0A 33 D2 E8 23 25 8B C8 E8 81 03 0B D1  // ..u.3..#%.......
    07B0: E8 DF 05 23 CA 66 C1 E6 10 33 F6 E8 6A 0A 74 15  // ...#.f...3..j.t.
    07C0: E8 77 0B 85 C1 74 F4 51 E8 82 11 59 75 ED E8 69  // .w...t.Q...Yu..i
    07D0: 0B 33 C8 EB E6 66 C1 EE 10 C3 A8 10 75 5A E8 8A  // .3...f......uZ..
    07E0: 15 66 C1 E6 10 33 F6 E8 3E 0A 74 24 E8 0E 0A 74  // .f...3..>.t$...t
    07F0: 0B E8 8B 0B 24 03 3C 03 75 ED EB 0A E8 80 0B A8  // ....$.<.u.......
    0800: 01 74 E4 E8 F5 06 E8 77 16 B5 00 E8 78 0B EB D7  // .t.....w....x...
    0810: E8 5C 01 32 C9 33 F6 E8 52 0A E8 ED 15 E8 CD 25  // .\.2.3..R......%
    0820: FE C1 38 C1 72 F1 66 C1 EE 10 E8 37 15 A8 20 75  // ..8.r.f....7.. u
    0830: 37 A8 40 75 03 E8 0A 1C 33 F6 E8 E0 09 74 26 E8  // 7.@u....3....t&.
    0840: 1D 0B E8 83 22 75 14 E8 E5 03 0A DB 74 0D E8 AA  // ...."u......t...
    0850: 06 E8 2C 16 B5 00 E8 2D 0B EB DF E8 04 16 B5 01  // ..,....-........
    0860: E8 23 0B EB D5 E8 14 01 C3 E8 60 24 C3 E8 5D 15  // .#........`$..].
    0870: 33 C9 33 D2 E8 B8 02 66 33 D2 66 33 C0 E8 3E 0B  // 3.3....f3.f3..>.
    0880: E8 58 00 B1 FF E8 9C 00 33 F6 E8 9B 09 74 10 E8  // .X......3....t..
    0890: CD 0A E8 2F 22 74 03 E8 63 16 E8 90 16 EB EB B3  // .../"t..c.......
    08A0: 01 E8 6A 02 32 C9 E8 08 03 E8 C6 24 E8 1D 24 0B  // ..j.2......$..$.
    08B0: C0 C3 E8 CC 09 E8 15 15 66 33 C0 66 BA 00 F0 00  // ........f3.f....
    08C0: F0 E8 2D 02 51 B1 01 E8 D8 02 59 33 F6 E8 58 09  // ..-.Q.....Y3..X.
    08D0: 74 05 E8 28 16 EB F6 E8 78 1B C3 B8 02 00 E8 29  // t..(....x......)
    08E0: 09 74 40 B1 07 E8 1B 20 E8 31 0B A8 04 75 12 E8  // .t@.... .1...u..
    08F0: 94 26 83 3D 00 75 0A E8 D2 23 83 E0 FD E8 D5 23  // .&.=.u...#.....#
    0900: C3 66 BA FF FF FB FF 66 B8 00 00 04 00 E8 AE 0A  // .f.....f........
    0910: E8 D1 0C E8 03 26 8A C8 BB 04 00 E8 28 22 8A E1  // .....&......("..
    0920: E8 2D 22 C3 E8 3F 22 74 31 38 E1 76 04 8A CC EB  // .-"..?"t18.v....
    0930: 06 38 C1 73 02 8A C8 BB 02 00 E8 09 22 8A E1 E8  // .8.s........"...
    0940: 0E 22 BB 02 00 E8 FE 21 66 C1 E8 18 A8 20 75 08  // .".....!f.... u.
    0950: B1 04 E8 AE 1F 0C 01 C3 0C 01 C3 51 E8 07 22 74  // ...........Q.."t
    0960: 0C 8A CC BB 02 00 E8 DD 21 8A C4 8A E1 59 C3 33  // ........!....Y.3
    0970: F6 E8 A9 08 74 05 E8 7F 14 EB F6 C3 33 F6 E8 9C  // ....t.......3...
    0980: 08 74 05 E8 7B 14 EB F6 C3 E8 3D 25 75 1B 80 F9  // .t..{.....=%u...
    0990: 01 75 17 33 F6 E8 85 08 74 0C 51 E8 C4 14 B5 01  // .u.3....t.Q.....
    09A0: E8 E3 09 59 EB EF E8 D3 FF C3 E8 C2 FF 33 F6 E8  // ...Y.........3..
    09B0: 6B 08 74 0C 51 E8 45 15 B5 00 E8 C9 09 59 EB EF  // k.t.Q.E......Y..
    09C0: C3 B8 02 00 E8 43 08 74 03 E8 37 1F C3 E8 01 1B  // .....C.t..7.....
    09D0: 8B C8 66 C1 E8 10 8B D0 C3 8A C3 24 80 E8 8B 13  // ..f........$....
    09E0: 32 C9 B5 10 E8 A3 1A E8 03 24 FE C1 38 C1 72 F2  // 2........$..8.r.
    09F0: C3 E8 04 13 3B C1 7C 3A 8B C1 E8 44 13 E8 C9 1C  // ....;.|:...D....
    0A00: 8B C8 51 E8 74 13 E8 38 13 59 E8 BC 1C 3B C8 72  // ..Q.t..8.Y...;.r
    0A10: 02 8B C1 8D 5C 04 E8 02 27 32 C9 B5 0F E8 6A 1A  // ....\...'2....j.
    0A20: E8 CA 23 FE C1 38 C1 72 F2 8D 5C 04 E8 74 27 0B  // ..#..8.r..\..t'.
    0A30: C0 C3 33 C0 C3 52 E8 9C 00 8A C2 8B D1 66 C1 E2  // ..3..R.......f..
    0A40: 10 8A D0 32 C0 B9 00 02 E8 5D 1C 66 C1 EA 10 8B  // ...2.....].f....
    0A50: CA 5A E8 80 00 E8 4B 27 66 C1 E8 02 0A F6 75 04  // .Z....K'f.....u.
    0A60: 66 C1 E8 02 67 26 88 07 66 C1 E8 0A 67 26 88 47  // f...g&..f...g&.G
    0A70: 01 66 C1 E8 0A 67 26 88 47 02 66 83 C7 04 83 C3  // .f...g&.G.f.....
    0A80: 04 E2 D2 C3 51 E8 4D 00 53 67 26 8A 47 02 66 C1  // ....Q.M.Sg&.G.f.
    0A90: E0 0A 67 26 8A 47 01 66 C1 E0 0A 67 26 8A 07 66  // ..g&.G.f...g&..f
    0AA0: C1 E0 02 0A F6 75 04 66 C1 E0 02 E8 55 26 66 83  // .....u.f....U&f.
    0AB0: C7 04 83 C3 04 E2 D2 5B 59 8A C2 8B D1 66 C1 E2  // .......[Y....f..
    0AC0: 10 8A D0 B9 00 03 53 E8 DE 1B 5B E8 1F 23 FE C1  // ......S...[..#..
    0AD0: 38 C1 72 F2 C3 BB 00 18 33 C0 8A C2 C1 E0 02 03  // 8.r.....3.......
    0AE0: D8 C3 53 BB 03 00 E8 5D 20 66 25 FF 0F FF 0F 5B  // ..S....] f%....[
    0AF0: C3 53 66 50 66 51 66 8B C8 BB 03 00 E8 47 20 66  // .SfPfQf......G f
    0B00: 23 C2 66 0B C1 E8 48 20 66 59 66 58 5B C3 B8 2C  // #.f...H fYfX[..,
    0B10: 06 F6 C3 01 75 03 B8 0C 06 E8 37 00 C3 BB 05 00  // ....u.....7.....
    0B20: E8 23 20 25 FF 0F 8B C8 66 C1 E0 10 8B D0 C3 E8  // .# %....f.......
    0B30: 9A 21 23 C8 81 E2 15 01 23 D1 66 C1 E2 10 8B D1  // .!#.....#.f.....
    0B40: BB 05 00 E8 00 20 66 25 00 F0 EA FE 66 0B C2 E8  // ..... f%....f...
    0B50: FE 1F C3 66 50 53 51 66 52 66 33 D2 33 DB 8A DC  // ...fPSQfRf3.3...
    0B60: 8A E8 8A C8 80 E1 1F 66 BA 01 00 00 00 66 D3 E2  // .......f.....f..
    0B70: E8 D3 1F 66 0B C2 F6 C5 20 75 03 66 33 C2 E8 CF  // ...f.... u.f3...
    0B80: 1F 66 5A 59 5B 66 58 C3 66 50 53 BB 06 00 E8 B5  // .fZY[fX.fPS.....
    0B90: 1F A8 10 75 09 BB F0 16 E8 08 26 3D 5A A5 5B 66  // ...u......&=Z.[f
    0BA0: 58 C3 B8 04 06 80 F1 01 C0 E1 05 0A C1 E8 A3 FF  // X...............
    0BB0: C3 53 66 50 BB F8 16 E8 E9 25 8A C1 E8 44 25 66  // .SfP.....%...D%f
    0BC0: 58 5B C3 53 BB F8 16 E8 D9 25 83 E0 01 5B C3 BB  // X[.S.....%...[..
    0BD0: 06 00 E8 71 1F 66 C1 E8 10 25 FF 0F C3 BB 06 00  // ...q.f...%......
    0BE0: E8 63 1F 66 25 FF FF 00 F0 66 C1 E2 10 66 0B C2  // .c.f%....f...f..
    0BF0: E8 5D 1F C3 53 66 50 BB 07 00 E8 49 1F F6 C4 01  // .]..SfP....I....
    0C00: 66 58 B0 06 74 02 B0 08 5B C3 53 BB 07 00 E8 35  // fX..t...[.S....5
    0C10: 1F 80 E4 FE 80 FD 06 74 03 80 CC 01 E8 31 1F 5B  // .......t.....1.[
    0C20: C3 53 B8 06 06 C0 E3 05 0A C3 E8 26 FF 5B C3 66  // .S.........&.[.f
    0C30: 50 BB 06 00 E8 0F 1F 24 40 C0 E8 06 8A D8 66 58  // P......$@.....fX
    0C40: C3 57 66 50 66 33 C0 B9 08 00 FC F3 66 AB 66 58  // .WfPf3......f.fX
    0C50: 5F E8 3E 01 0B C0 75 09 E8 E3 05 74 3C 85 C1 74  // _.>...u....t<..t
    0C60: F7 E8 A6 05 8D 9C 6A 01 E8 38 25 26 89 05 8D 9C  // ......j..8%&....
    0C70: 6E 01 E8 2E 25 26 89 45 02 8D 9C B5 02 E8 23 25  // n...%&.E......#%
    0C80: 02 C0 04 04 26 88 45 06 26 88 45 07 26 88 45 08  // ....&.E.&.E.&.E.
    0C90: B0 07 26 88 45 04 0A C0 C3 32 C0 C3 C3 66 50 53  // ..&.E....2...fPS
    0CA0: 51 52 56 57 E8 E1 FE 74 03 E8 D5 05 5F 5E 5A 59  // QRVW...t...._^ZY
    0CB0: 5B 66 58 C3 33 C9 E8 10 22 75 48 66 BA FF FF 0C  // [fX.3..."uHf....
    0CC0: FF 66 33 C0 E8 F7 06 33 F6 E8 5C 05 74 18 E8 69  // .f3....3..\.t..i
    0CD0: 06 A9 C8 0E 74 F3 E8 43 07 A8 04 75 04 A8 18 74  // ....t..C...u...t
    0CE0: E8 E8 7B 00 EB E3 E8 2C 00 75 03 E8 A4 00 33 F6  // ..{....,.u....3.
    0CF0: E8 35 05 74 0E E8 42 06 85 C1 74 F4 51 E8 F9 07  // .5.t..B...t.Q...
    0D00: 59 EB ED C3 8D 5D 28 66 C1 E3 10 8D 5C 28 B9 49  // Y....](f....\(.I
    0D10: 00 E8 00 21 C3 66 50 53 52 56 33 C9 33 D2 8D 36  // ...!.fPSRV3.3..6
    0D20: EE 0C E8 B6 06 A8 03 74 03 83 CA 01 66 C1 E8 10  // .......t....f...
    0D30: 8A 0C 80 F9 FF 74 15 66 A9 01 00 00 00 74 07 BB  // .....t.f.....t..
    0D40: 01 00 D3 E3 0B D3 66 D1 E8 46 EB E4 8B CA 0B C9  // ......f..F......
    0D50: 5E 5A 5B 66 58 C3 03 07 01 05 06 09 0A 0B FF 66  // ^Z[fX..........f
    0D60: 50 53 51 E8 D4 05 0F BC D8 81 C3 1E 0D 8A 0F 66  // PSQ............f
    0D70: B8 01 00 00 00 66 D3 E0 66 BA FF FF FF FF E8 3D  // .....f..f......=
    0D80: 06 59 5B 66 58 C3 01 12 0B 10 09 13 14 11 0C 15  // .Y[fX...........
    0D90: 16 17 50 53 52 E8 7D FF 75 13 B9 01 00 E8 2C 1F  // ..PSR.}.u.....,.
    0DA0: 23 C8 75 19 33 C0 E8 95 04 8B C8 EB 10 83 F9 02  // #.u.3...........
    0DB0: 74 0B E8 7A FE 80 FB 01 75 03 83 E1 FD 5A 5B 58  // t..z....u....Z[X
    0DC0: C3 56 83 EC 04 8B EC 66 33 C0 66 89 46 00 66 BA  // .V.....f3.f.F.f.
    0DD0: 00 F0 00 F0 E8 1A FD 66 C1 E6 10 E8 60 04 0B C0  // .......f....`...
    0DE0: 74 1E 85 C1 74 F5 55 E8 56 00 5D 74 04 33 C8 EB  // t...t.U.V.]t.3..
    0DF0: EA E8 BB 05 66 3B 56 00 76 E1 66 89 56 00 EB DB  // ....f;V.v.f.V...
    0E00: E8 DF FC 74 07 66 8B 46 00 E8 05 00 83 C4 04 5E  // ...t.f.F.......^
    0E10: C3 33 F6 66 50 E8 05 04 66 58 8D 9C D8 02 E8 E2  // .3.fP...fX......
    0E20: 22 66 8B D0 E8 BB FC E8 D1 18 8D 9C 1C 03 E8 72  // "f.............r
    0E30: 23 38 D0 74 0A 8A C2 E8 C9 22 B0 02 E8 5F 05 C3  // #8.t....."..._..
    0E40: 50 51 E8 C5 03 32 C0 E8 54 05 E8 3A 03 E8 AB 00  // PQ...2..T..:....
    0E50: 8D 9C 40 03 E8 4C 23 38 E8 74 0A 8A C5 E8 A3 22  // ..@..L#8.t....."
    0E60: B0 02 E8 39 05 E8 BD 00 E8 D8 00 75 73 E8 9E 00  // ...9.......us...
    0E70: 8D 9C 4C 01 E8 2C 23 8B C8 8B D3 8D 9C 00 03 E8  // ..L..,#.........
    0E80: 21 23 3B C1 74 05 B0 02 E8 13 05 E8 65 0A 8D 9C  // !#;.t.......e...
    0E90: 00 03 E8 43 18 8D 9C D8 02 E8 67 22 66 C1 CE 10  // ...C......g"f...
    0EA0: 8B FE 66 C1 CE 10 E8 C9 00 E8 FF 00 E8 94 04 8A  // ..f.............
    0EB0: E9 8D 9C DC 02 32 C9 E8 8D 22 E8 7D 04 66 25 FF  // .....2...".}.f%.
    0EC0: 0F 00 00 E8 F9 03 80 F9 01 75 04 66 C1 E0 10 59  // .........u.f...Y
    0ED0: 58 66 BA FF FF FF FF 66 33 D0 E8 14 FC 33 D2 C3  // Xf.....f3....3..
    0EE0: E8 05 00 0C 01 59 58 C3 53 66 50 8D 9C D4 02 E8  // .....YX.SfP.....
    0EF0: B1 22 8A C4 E8 0C 22 66 58 5B C3 53 66 50 8D 9C  // ."...."fX[.SfP..
    0F00: D4 02 E8 9E 22 8A E0 E8 F9 21 66 58 5B C3 E8 CE  // ...."....!fX[...
    0F10: 03 E8 91 03 8A DD E8 5F 19 8D 9C 3C 03 8A E9 32  // ......._...<...2
    0F20: C9 E8 23 22 C3 83 EC 08 8B EC E8 B2 03 E8 75 03  // ..#"..........u.
    0F30: E8 F3 18 8A 6E 00 8D 9C 4C 03 32 C9 E8 08 22 83  // ....n...L.2...".
    0F40: C4 08 C3 33 C9 56 E8 23 03 0B F6 5E 74 0C FE C1  // ...3.V.#...^t...
    0F50: E8 9A 1E 38 C1 75 EE 0C 01 C3 8D 9C D4 02 E8 42  // ...8.u.........B
    0F60: 22 38 C8 74 0A 8A C1 E8 99 21 B0 02 E8 2F 04 32  // "8.t.....!.../.2
    0F70: C0 C3 E8 0A 00 8D 9C D0 02 32 C9 E8 C9 21 C3 8D  // .........2...!..
    0F80: 1D E8 1F 22 66 8B D0 8D 9C 02 03 E8 15 22 51 8B  // ..."f........"Q.
    0F90: C8 8D 9C 06 03 E8 0B 22 66 C1 E0 10 8B C1 59 66  // ......."f.....Yf
    0FA0: 3B C2 75 04 B5 00 EB 02 B5 02 C3 E8 6D 03 8D 9C  // ;.u.........m...
    0FB0: 40 03 B1 03 E8 90 21 E8 B2 06 8D 9C 40 03 B1 02  // @.....!.....@...
    0FC0: E8 84 21 E8 DF 02 80 FD 00 75 1D E8 94 00 66 81  // ..!......u....f.
    0FD0: FA F0 D2 00 00 75 06 66 BA 78 69 00 00 E8 B6 00  // .....u.f.xi.....
    0FE0: E8 EF 00 E8 AB 03 EB 38 E8 81 03 E8 A3 03 66 52  // .......8......fR
    0FF0: E8 F7 02 0B D2 74 07 E8 76 18 66 5A EB 22 E8 5E  // .....t..v.fZ.".^
    1000: 03 E8 F4 1A 66 5A 51 E8 9B 02 80 FD 02 59 75 10  // ....fZQ......Yu.
    1010: B5 04 66 81 FA 74 40 00 00 76 05 B5 08 66 D1 EA  // ..f..t@..v...f..
    1020: 8D 9C 54 03 66 8B C2 E8 D9 20 8D 9C 40 03 E8 72  // ..T.f.... ..@..r
    1030: 21 8A E5 E8 CD 20 E8 1E 01 8D 9C 48 03 32 C9 E8  // !.... .....H.2..
    1040: 05 21 E8 9A 02 E8 5D 02 E8 28 18 8D 9C 58 03 32  // .!....]..(...X.2
    1050: C9 E8 F3 20 E8 88 02 E8 4B 02 8D 9C 60 03 E8 E0  // ... ....K...`...
    1060: 17 C3 53 8D 9C 29 01 E8 39 21 66 33 D2 0A C0 75  // ..S..)..9!f3...u
    1070: 05 BA 48 3F 5B C3 8A D0 66 B8 8C 0A 00 00 66 F7  // ..H?[...f.....f.
    1080: E2 66 8B F8 E8 58 02 B3 00 E8 33 17 66 3B D7 76  // .f...X....3.f;.v
    1090: 03 66 8B D7 5B C3 B7 01 53 8D 9C 42 03 E8 03 21  // .f..[...S..B...!
    10A0: 8A C8 5B 66 52 E8 83 00 E8 C1 02 66 3B D1 66 5A  // ..[fR......f;.fZ
    10B0: 76 09 D0 E7 E8 07 00 38 EF 72 DD 8A EF C3 53 8D  // v......8.r....S.
    10C0: 9C 2A 01 E8 DD 20 24 0F 8A E8 0A ED 75 02 B5 01  // .*... $.....u...
    10D0: 5B C3 51 83 EC 08 8B EC 66 C7 46 00 48 3F 78 69  // [.Q.....f.F.H?xi
    10E0: 66 C7 46 04 F0 D2 00 00 E8 FF 01 0B D2 74 03 E8  // f.F..........t..
    10F0: 8F 17 8A FD 53 8D 9C 42 03 E8 A7 20 8A C8 5B E8  // ....S..B... ..[.
    1100: 60 FF 66 33 C0 8B 46 00 66 3B C2 73 19 66 8B D0  // `.f3..F.f;.s.f..
    1110: E8 18 00 E8 56 02 66 3B D1 72 05 83 C5 02 EB D4  // ....V.f;.r......
    1120: 66 33 D2 8B 56 00 83 C4 08 59 C3 66 52 52 32 ED  // f3..V....Y.fRR2.
    1130: 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B C8 5A 51 66  // ........f3...ZQf
    1140: 33 C0 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59 66 F7  // 3.....f..f...Yf.
    1150: F1 66 8B C8 66 5A C3 E8 90 01 0B D2 74 0B E8 16  // .f..fZ......t...
    1160: 00 0A ED 75 11 E8 AC 16 C3 B5 00 E8 F1 01 E8 53  // ...u...........S
    1170: 19 75 03 E8 01 00 C3 B5 00 8D 9C 31 01 E8 23 20  // .u.........1..# 
    1180: A8 01 74 02 B5 01 C3 53 E8 5F 01 66 C1 E2 10 E8  // ..t....S._.f....
    1190: 4D 01 8D 9C B8 02 E8 0A 20 8A E8 E8 53 16 8A EB  // M....... ...S...
    11A0: 5B C3 57 53 53 E8 DF FF E8 34 01 5B E8 96 16 74  // [.WSS....4.[...t
    11B0: 49 80 FD 00 75 24 53 E8 A8 FE E8 AF 04 8A CD E8  // I...u$S.........
    11C0: FC FE 8A FD E8 64 FF 5B E8 D8 1F 66 25 FF FF 00  // .....d.[...f%...
    11D0: 00 66 3B C8 73 21 32 DB EB 20 80 FD 02 75 18 53  // .f;.s!2.. ...u.S
    11E0: E8 7C 01 E8 EF 18 5B 74 0E 8D 1D E8 B5 1F 3D 74  // .|....[t......=t
    11F0: 40 76 04 32 DB EB 03 80 CB 01 5B 5F C3 53 E8 39  // @v.2......[_.S.9
    1200: 01 8B D8 E8 DC F8 85 C3 5B C3 53 8B F0 E8 BC 1A  // ........[.S.....
    1210: 23 F0 74 07 8B C6 E8 5D 19 8B F3 5B C3 E8 08 00  // #.t....]...[....
    1220: 74 05 E8 D8 FF 74 F6 C3 33 C0 0B F6 74 03 E8 09  // t....t..3...t...
    1230: 01 33 F6 E8 08 00 74 03 E8 CF FF 0B F6 C3 57 53  // .3....t.......WS
    1240: E8 D4 1A 0B C0 74 09 8B 1D 83 C7 02 3B C3 75 F7  // .....t......;.u.
    1250: 8B 1D 83 FB FF 74 0E 83 C7 02 E8 6F 1A 85 D8 74  // .....t.....o...t
    1260: EF 8B C3 EB 02 33 C0 0B C0 5B 5F C3 51 33 F6 8A  // .....3...[_.Q3..
    1270: E9 E8 A9 FF 74 07 E8 46 00 38 E9 75 F4 0B F6 59  // ....t..F.8.u...Y
    1280: C3 33 C0 E8 B8 FF 74 13 E8 7F FF 8B DE B9 FB 00  // .3....t.........
    1290: E8 6C 1B 83 C6 08 E8 B6 19 EB E8 BB F0 16 B8 5A  // .l.............Z
    12A0: A5 E8 77 1E C3 53 66 50 8D 9C 40 03 E8 F4 1E 8A  // ..w..SfP..@.....
    12B0: E8 66 58 5B C3 8D 9C 64 03 E8 E7 1E 0B C0 C3 53  // .fX[...d.......S
    12C0: 66 50 8D 9C D4 02 E8 DA 1E 8A C8 66 58 5B C3 53  // fP.........fX[.S
    12D0: 66 50 8D 9C D5 02 E8 CA 1E 8A C8 66 58 5B C3 53  // fP.........fX[.S
    12E0: 8D 5C 14 E8 BD 1E 8B D0 5B C3 53 66 50 8D 5C 16  // .\......[.SfP.\.
    12F0: E8 B0 1E 8B D0 66 58 5B C3 53 66 50 8D 9C 50 03  // .....fX[.SfP..P.
    1300: E8 A0 1E 66 8B D0 66 58 5B C3 53 66 50 8D 9C 54  // ...f..fX[.SfP..T
    1310: 03 E8 8F 1E 66 8B D0 66 58 5B C3 53 66 50 8D 5C  // ....f..fX[.SfP.\
    1320: 10 E8 7F 1E 8B C8 66 58 5B C3 66 50 53 8D 9C 41  // ......fX[.fPS..A
    1330: 03 E8 6F 1E 5B 8A D8 66 58 C3 53 8D 5C 08 E8 62  // ..o.[..fX.S.\..b
    1340: 1E 5B C3 53 50 8D 9C 4C 03 E8 57 1E 8A C8 58 5B  // .[.SP..L..W...X[
    1350: C3 53 50 8D 9C 4D 03 E8 49 1E 8A C8 58 5B C3 53  // .SP..M..I...X[.S
    1360: 50 8D 5C 0C E8 3C 1E 8B D0 58 5B C3 53 66 50 8D  // P.\..<...X[.SfP.
    1370: 9C 00 03 E8 2D 1E 66 33 D2 8B D0 66 58 5B C3 8D  // ....-.f3...fX[..
    1380: 5C 04 E8 1E 1E C3 51 8D 5C 04 32 C9 E8 B8 1D 59  // \.....Q.\.2....Y
    1390: C3 8D 9C 50 03 E8 0B 1E 8B C2 E8 66 1D C3 53 51  // ...P.......f..SQ
    13A0: 8A E8 E8 DA FF 24 FD 0A E8 E8 DA FF 59 5B C3 66  // .....$......Y[.f
    13B0: 50 8D 9C D8 02 E8 EB 1D 66 8B D0 66 58 C3 53 66  // P.......f..fX.Sf
    13C0: 50 66 51 66 8B C8 BB 00 00 E8 7A 17 66 23 C2 66  // PfQf......z.f#.f
    13D0: 0B C1 E8 7B 17 66 59 66 58 5B C3 BB 00 00 E8 65  // ...{.fYfX[.....e
    13E0: 17 66 25 03 03 FF 00 C3 57 0B C0 75 10 33 F6 E8  // .f%.....W..u.3..
    13F0: 36 FE 74 26 E8 25 00 A8 04 74 F4 EB 13 8B C8 E8  // 6.t&.%...t......
    1400: CA 18 23 C1 74 14 E8 01 FE E8 10 00 A8 04 74 0A  // ..#.t.........t.
    1410: 5F 8D 5C 28 E8 2D 05 0B F6 C3 5F C3 E8 FC FE 0A  // _.\(.-...._.....
    1420: C9 74 72 E8 39 FF E8 A8 16 74 30 0A ED 74 10 8A  // .tr.9....t0..t..
    1430: CD B5 02 E8 94 19 B1 02 8D 9C 48 01 E8 08 1D E8  // ..........H.....
    1440: 34 02 A8 04 74 15 8D 5C 28 E8 56 00 74 0D E8 0E  // 4...t..\(.V.t...
    1450: FF E8 74 16 74 3F 80 FD 02 74 3A 8D 5C 28 E8 38  // ..t.t?...t:.\(.8
    1460: 00 E8 14 0B 33 C9 50 8D 9C 28 01 E8 35 1D 66 0B  // ....3.P..(..5.f.
    1470: C0 74 03 B9 00 08 58 0A C0 75 13 8D 5C 28 E8 3F  // .t....X..u..\(.?
    1480: 00 75 0B 80 CD 02 E8 19 00 74 03 80 CD 04 8D 9C  // .u.......t......
    1490: 48 01 E8 B2 1C E8 DE 01 C3 51 B9 49 00 E8 5F 19  // H........Q.I.._.
    14A0: 59 C3 51 E8 1A 00 75 14 E8 9C 01 3C 01 75 0D B9  // Y.Q...u....<.u..
    14B0: 20 00 E8 27 00 75 05 80 C9 01 EB 02 33 C9 59 C3  //  ..'.u......3.Y.
    14C0: 53 E8 DF 1C 66 3D 00 FF FF FF 75 0E 83 C3 04 E8  // S...f=....u.....
    14D0: D1 1C 66 3D FF FF FF 00 75 00 5B C3 50 52 32 D2  // ..f=....u.[.PR2.
    14E0: E8 C0 1C 02 D0 02 D4 66 C1 E8 10 02 D0 02 D4 83  // .......f........
    14F0: C3 04 E2 EC 0A D2 5A 58 C3 8D 9C 4C 01 E8 1F 01  // ......ZX...L....
    1500: E8 73 01 B5 13 A8 08 75 0C E8 53 FE 8A EA 80 FD  // .s.....u..S.....
    1510: 13 75 02 B5 03 8D 9C B8 02 66 33 C0 8A C5 E8 E2  // .u.......f3.....
    1520: 1B E8 16 FE A9 11 00 74 37 B5 01 E8 22 01 E8 45  // .......t7..."..E
    1530: 01 A8 04 75 17 55 BD 00 00 B8 61 40 E8 F0 02 B8  // ...u.U....a@....
    1540: 45 40 E8 EA 02 5D B5 02 E8 8A 00 C3 E8 2F 01 B5  // E@...]......./..
    1550: 02 8D 5C 28 E8 DD 00 75 02 B5 01 E8 77 00 EB 67  // ..\(...u....w..g
    1560: A9 C8 0E 74 3E E8 0E 01 A8 08 74 08 8D 5C 28 E8  // ...t>.....t..\(.
    1570: B4 00 74 B5 B5 02 E8 D7 00 E8 FA 00 A8 04 74 0B  // ..t...........t.
    1580: 8D 5C 28 E8 F8 00 E8 F8 02 EB 0A 8D 9C 68 01 B8  // .\(..........h..
    1590: 3C 6A E8 60 05 E8 D4 00 80 FD 00 75 37 B5 02 E8  // <j.`.......u7...
    15A0: C0 00 C3 A9 22 00 74 2C B5 04 E8 A3 00 8D 9C 68  // ....".t,.......h
    15B0: 01 56 E8 D1 19 8B F7 E8 58 03 5E E8 79 19 E8 A1  // .V......X.^.y...
    15C0: 00 8D 5C 28 E8 9F 19 8D 9C 68 01 E8 4F 03 66 8B  // ..\(.....h..O.f.
    15D0: D1 E8 C0 07 C3 8D 9C B4 02 B1 02 E8 69 1B B5 02  // ............i...
    15E0: E8 7F 00 C3 8D 9C 4C 01 E8 34 00 E8 88 00 A8 04  // ......L..4......
    15F0: 74 23 8D 5C 28 E8 86 00 E8 8B 19 8D 9C 68 01 06  // t#.\(........h..
    1600: 0E 07 B9 07 00 E8 31 18 07 E8 60 00 E8 50 FD 8D  // ......1...`..P..
    1610: 5C 28 E8 7C 19 8D 5C 28 E8 2B 19 E8 DB FE C3 B9  // \(.|..\(.+......
    1620: 61 00 E8 DA 17 C3 53 81 C3 05 01 E8 75 1B 24 06  // a.....S.....u.$.
    1630: 3C 02 5B C3 E8 10 00 3D 01 04 75 0A 53 83 C3 18  // <.[....=..u.S...
    1640: E8 60 1B 5B A8 01 C3 53 83 C3 12 E8 55 1B 5B C3  // .`.[...S....U.[.
    1650: 8D 9C B4 02 32 C9 E8 EE 1A C3 8D 9C B4 02 E8 42  // ....2..........B
    1660: 1B C3 8D 9C B4 02 B1 01 E8 DC 1A C3 8D 9C B4 02  // ................
    1670: B1 01 E8 EA 1A C3 8D 9C 48 01 E8 26 1B C3 55 57  // ........H..&..UW
    1680: 51 B9 08 00 BD 00 00 BB 08 00 2B D9 D1 E3 8D 58  // Q.........+....X
    1690: 4E E8 0F 1B E8 98 01 E2 EE 8D 5C 4B E8 04 1B B9  // N.........\K....
    16A0: 04 00 8B D0 BF A3 16 85 55 06 74 17 66 8B 05 8D  // ........U.t.f...
    16B0: 9A F4 01 E8 4D 1A 8B 45 04 8D 9A F8 01 E8 5B 1A  // ....M..E......[.
    16C0: 83 C5 08 83 C7 08 E2 DF 8D 7C 5E B9 04 00 33 ED  // .........|^...3.
    16D0: 8B DF E8 CE 1A 0B C0 74 09 E8 12 01 E8 4C 00 83  // .......t.....L..
    16E0: C5 1C 83 C7 12 E2 E9 32 ED E8 76 FF 8D 5C 28 E8  // .......2..v..\(.
    16F0: 55 FF 3D 01 04 75 10 83 C3 14 E8 A6 1A 24 70 C0  // U.=..u.......$p.
    1700: E8 04 8A E8 E8 5B FF 59 5F 5D C3 20 03 58 02 3C  // .....[.Y_]. .X.<
    1710: 00 01 00 00 04 00 03 3C 00 00 08 00 05 00 04 4B  // .......<.......K
    1720: 00 00 01 80 02 E0 01 3C 00 20 00 51 8D 1D E8 72  // .......<. .Q...r
    1730: 1A 8D 9A 68 01 E8 E3 19 8D 5D 02 E8 65 1A 8D 9A  // ...h.....]..e...
    1740: 6A 01 E8 89 00 8D 5D 05 E8 58 1A 8D 9A 6E 01 E8  // j.....]..X...n..
    1750: 7C 00 8D 5D 08 E8 4B 1A 8B C8 8A DC 66 C1 C8 10  // |..]..K.....f...
    1760: 8A D0 80 E2 0F 8A F0 C0 EE 04 8A EC C0 E5 06 8A  // ................
    1770: FC C0 E7 04 80 E7 03 80 E4 0F C0 E4 04 0A D4 80  // ................
    1780: E2 3F 80 E4 C0 C0 EC 02 0A F4 8B C3 8D 9A 74 01  // .?............t.
    1790: E8 88 19 8D 9A 72 01 8B C1 E8 7F 19 8D 9A 76 01  // .....r........v.
    17A0: 33 C0 8A C6 E8 74 19 8D 9A 78 01 33 C0 8A C2 E8  // 3....t...x.3....
    17B0: 69 19 8D 5D 0C E8 EB 19 8D 9A 7A 01 E8 0F 00 8D  // i..]......z.....
    17C0: 5D 0F E8 DE 19 8D 9A 7E 01 E8 4F 19 59 C3 8B C8  // ]......~..O.Y...
    17D0: 8A D4 66 C1 C8 10 8A F0 80 E6 0F 8A E8 C0 ED 04  // ..f.............
    17E0: 8B C1 E8 36 19 83 C3 02 8B C2 E8 2E 19 C3 8D 5D  // ...6...........]
    17F0: 11 E8 AF 19 8A E0 BA 06 02 C0 E8 07 74 03 80 CA  // ............t...
    1800: 80 8A C4 C0 E8 03 24 03 3C 02 75 03 80 CA 40 3C  // ......$.<.u...@<
    1810: 03 75 12 8A C4 D0 E8 A8 01 74 03 80 E2 FD A8 02  // .u.......t......
    1820: 74 03 80 E2 FB 8B C2 8D 9A 80 01 E8 ED 18 C3 3C  // t..............<
    1830: 01 74 3D 8B D0 0F B6 C6 24 3F 04 3C 8D 9A F8 01  // .t=.....$?.<....
    1840: E8 D8 18 0F B6 C2 83 C0 1F C1 E0 03 8D 9A F4 01  // ................
    1850: E8 C8 18 0F B6 DE C1 EB 06 C1 E3 02 2E F7 A7 0B  // ................
    1860: 18 2E F7 B7 09 18 8D 9A F6 01 E8 AE 18 83 C5 08  // ................
    1870: C3 01 00 01 00 04 00 03 00 05 00 04 00 10 00 09  // ................
    1880: 00 57 8D 9C 68 01 8B FB 8B DF E8 90 00 0B C9 74  // .W..h..........t
    1890: 44 8D 5D 18 E8 0C 19 A8 80 74 0D 8B DF 56 8D 36  // D.]......t...V.6
    18A0: 6F 18 E8 6D 00 5E EB 28 66 8B D1 E8 E6 04 8D 9C  // o..m.^.(f.......
    18B0: A6 00 E8 EE 18 3C 01 75 17 66 81 F9 80 07 38 04  // .....<.u.f....8.
    18C0: 74 09 66 81 F9 00 05 D0 02 75 05 B5 03 E8 80 FD  // t.f......u......
    18D0: 83 C7 1C EB B3 5F C3 8C 0A D0 02 8A 00 E0 01 2D  // ....._.........-
    18E0: 00 10 00 3E 00 09 00 06 00 00 00 00 00 00 00 06  // ...>............
    18F0: 00 00 00 50 53 51 B9 07 00 53 8B DA E8 A4 18 83  // ...PSQ...S......
    1900: F8 00 5B 74 09 66 C1 E3 10 8B DA E8 06 15 59 5B  // ..[t.f........Y[
    1910: 58 C3 51 53 B9 07 00 E8 13 15 5B 59 C3 66 50 53  // X.QS......[Y.fPS
    1920: 83 C3 06 E8 7D 18 5B 8B C8 66 C1 E1 10 53 83 C3  // ....}.[..f...S..
    1930: 02 E8 6F 18 8B C8 5B 66 58 C3 8D 9C 48 01 32 C9  // ..o...[fX...H.2.
    1940: E8 04 18 C3 57 B9 20 00 E8 EE 14 5F C3 E8 0A FD  // ....W. ...._....
    1950: 3C 01 75 57 8D 9C B6 02 E8 48 18 A8 02 74 71 66  // <.uW.....H...tqf
    1960: C1 CE 10 E8 F3 03 66 C1 CE 10 0A C0 75 0E 8D 9C  // ......f.....u...
    1970: 4C 01 B8 3C 6A E8 7D 01 0C 01 EB 7A 8D 9C 68 01  // L..<j.}....z..h.
    1980: B0 00 E8 36 01 75 07 B0 00 E8 DF 00 74 68 8D 9C  // ...6.u......th..
    1990: 68 01 B0 01 E8 24 01 75 52 B0 01 E8 B0 00 75 56  // h....$.uR.....uV
    19A0: B0 00 E8 A9 00 EB 4F 0B F6 EB 4B 3C 04 74 21 3C  // ......O...K<.t!<
    19B0: 03 74 1D 66 C1 CE 10 E8 9F 03 66 C1 CE 10 0A C0  // .t.f......f.....
    19C0: 74 07 B0 01 E8 A4 00 75 2D B0 00 E8 9D 00 75 26  // t......u-.....u&
    19D0: 8D BC 68 01 8D 1D E8 CA 17 0B C0 74 19 8B DF B0  // ..h........t....
    19E0: 00 E8 D7 00 75 05 83 C7 1C EB E9 8B D3 8D 9C 4C  // ....u..........L
    19F0: 01 E8 FF FE 0B F6 C3 57 53 51 E8 38 13 3B 55 02  // .......WSQ.8.;U.
    1A00: 75 18 66 C1 CA 10 8B DA 66 C1 CA 10 3B 5D 06 75  // u.f.....f...;].u
    1A10: 09 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 DE 33  // ...t.:E.t......3
    1A20: D2 EB 02 8B D7 0B D2 59 5B 5F C3 51 66 52 E8 04  // .......Y[_.QfR..
    1A30: 13 3A 65 1A 75 09 0A C0 74 0E 3A 45 1B 74 09 83  // .:e.u...t.:E.t..
    1A40: C7 1C E2 ED 33 FF EB 00 0B FF 66 5A 59 C3 51 E8  // ....3.....fZY.Q.
    1A50: E3 12 56 8D 9C 4C 01 8B F7 E8 B6 FE 5E E8 5B 00  // ..V..L......^.[.
    1A60: 75 07 83 C7 1C E2 EB 33 FF 59 C3 8D BC F4 01 8A  // u......3.Y......
    1A70: C8 8D 1D E8 2D 17 0B C0 74 40 66 50 E8 DB FB 3C  // ....-...t@fP...<
    1A80: 01 66 58 74 05 3D 40 06 73 2B 66 8B D0 8D 5D 04  // .fXt.=@.s+f...].
    1A90: E8 10 17 E8 61 FF 74 1D 8D 9C 4C 01 56 8B F2 E8  // ....a.t...L.V...
    1AA0: 70 FE 5E 53 8D 9C 62 01 33 C0 E8 6E 16 5B 8A C1  // p.^S..b.3..n.[..
    1AB0: E8 08 00 75 05 83 C7 08 EB B7 C3 66 51 50 53 66  // ...u.......fQPSf
    1AC0: C1 CE 10 8B DE 66 C1 CE 10 E8 D7 16 5B 66 8B D0  // .....f......[f..
    1AD0: E8 4A FE 58 3C 01 75 0A 66 3B CA 75 13 E8 C2 F6  // .J.X<.u.f;.u....
    1AE0: 75 10 3B CA 72 0A 66 3B CA 72 05 E8 B4 F6 75 02  // u.;.r.f;.r....u.
    1AF0: 32 C0 66 59 C3 56 57 E8 31 FF 8B F7 E8 13 FE 5F  // 2.fY.VW.1......_
    1B00: 5E C3 66 50 53 66 51 52 57 56 51 8B DE B9 08 00  // ^.fPSfQRWVQ.....
    1B10: E8 EC 12 59 8D 5C 08 8B C1 66 C1 E0 10 8A C2 E8  // ...Y.\...f......
    1B20: E1 15 F6 C2 03 75 24 8B C1 24 7F BF E5 1B 80 3D  // .....u$..$.....=
    1B30: FF 0F 84 0F 01 3A 05 75 0D 66 8B 45 01 66 B9 00  // .....:.u.f.E.f..
    1B40: 05 02 00 E9 96 00 83 C7 05 EB E3 F6 C2 01 74 25  // ..............t%
    1B50: 8B C1 E8 61 01 0F 84 EB 00 33 C9 8A CC 8A D0 0A  // ...a.....3......
    1B60: C0 75 12 8D 5C 08 66 25 FF FF 00 00 66 C1 E0 08  // .u..\.f%....f...
    1B70: E8 90 15 EB B2 8A E1 8A CA 80 E1 0C C0 E9 02 80  // ................
    1B80: E2 F0 C0 EA 04 8A EA 80 FC 70 72 2A 80 FC 75 73  // .........pr*..us
    1B90: 25 80 EC 70 8A C4 32 E4 50 E8 21 02 8B D8 58 38  // %..p..2.P.!...X8
    1BA0: D8 72 05 33 C0 E9 9C 00 E8 19 02 E8 F5 15 0B C0  // .r.3............
    1BB0: 0F 84 90 00 EB 1B 32 C0 E8 70 FE 0F 84 85 00 8D  // ......2..p......
    1BC0: 5C 16 8B 05 E8 54 15 8B 45 06 66 C1 E0 10 8B 45  // \....T..E.f....E
    1BD0: 02 50 E8 F4 0A 66 C1 E1 10 8B C8 58 8D 1C E8 22  // .P...f.....X..."
    1BE0: 15 66 50 8D 5C 04 66 8B C1 E8 17 15 66 58 66 C1  // .fP.\.f.....fXf.
    1BF0: E8 10 66 81 E1 FF FF 00 00 66 F7 E1 66 50 8D 5C  // ..f......f..fP.\
    1C00: 06 E8 9F 15 8B C8 66 58 66 D3 E0 66 C1 E8 10 40  // ......fXf..f...@
    1C10: 8D 5C 14 E8 05 15 BF 36 1C 83 F9 01 74 11 BF 3E  // .\.....6....t..>
    1C20: 1C 81 F9 01 01 74 08 BF 46 1C 83 F9 02 75 15 8D  // .....t..F....u..
    1C30: 5C 0C 66 8B 05 E8 CB 14 8D 5C 10 66 8B 45 04 E8  // \.f......\.f.E..
    1C40: C1 14 0B DB 5E 5F 5A 66 59 5B 66 58 C3 00 40 01  // ....^_ZfY[fX..@.
    1C50: 90 01 01 40 01 90 01 02 80 02 90 01 03 80 02 90  // ...@............
    1C60: 01 04 40 01 90 01 05 40 01 90 01 06 80 02 90 01  // ..@....@........
    1C70: 07 D0 02 5E 01 0D 40 01 90 01 0E 80 02 90 01 0F  // ...^..@.........
    1C80: 80 02 5E 01 10 80 02 5E 01 11 80 02 E0 01 12 80  // ..^....^........
    1C90: 02 E0 01 13 80 02 90 01 62 80 02 E0 01 FF 05 0A  // ........b.......
    1CA0: 05 05 05 00 00 00 05 0B 06 05 05 00 00 00 08 10  // ................
    1CB0: 08 08 08 00 00 00 56 E8 6B 12 80 E4 01 3B 04 74  // ......V.k....;.t
    1CC0: 09 83 C6 04 E2 F7 33 C0 EB 05 8B 44 02 0B C0 5E  // ......3....D...^
    1CD0: C3 57 53 50 E8 4E 12 83 E9 0A E8 E0 00 83 F8 05  // .WSP.N..........
    1CE0: 76 03 B8 05 00 D1 E0 03 C8 FB A5 83 C6 02 E2 FA  // v...............
    1CF0: B8 FF FF AB 58 5B 5F C3 66 53 51 66 52 E8 41 00  // ....X[_.fSQfR.A.
    1D00: E8 77 00 66 C1 E8 10 66 0F B7 D8 66 B8 00 00 00  // .w.f...f...f....
    1D10: 03 66 D3 E8 66 33 D2 66 F7 F3 E8 AC 09 66 5A 59  // .f..f3.f.....fZY
    1D20: 66 5B C3 53 66 50 BB 07 00 E8 1A 0E 0A C0 66 58  // f[.SfP........fX
    1D30: 5B C3 53 66 50 BB 07 00 E8 0B 0E A8 01 66 58 5B  // [.SfP........fX[
    1D40: C3 53 66 50 8D 5C 06 E8 59 14 8A C8 66 58 5B C3  // .SfP.\..Y...fX[.
    1D50: 51 B9 08 00 E8 BD 10 59 C3 53 8D 5C 08 E8 43 14  // Q......Y.S.\..C.
    1D60: 24 03 5B C3 8D 5C 09 E8 39 14 C3 51 53 B1 01 8A  // $.[..\..9..QS...
    1D70: E8 8D 5C 08 E8 D0 13 5B 59 C3 53 8D 1C E8 23 14  // ..\....[Y.S...#.
    1D80: 5B C3 53 8D 5C 04 E8 1A 14 5B C3 53 8D 5C 16 E8  // [.S.\....[.S.\..
    1D90: 11 14 5B C3 53 66 52 33 C0 E8 5B FC 66 5A 75 1B  // ..[.SfR3..[.fZu.
    1DA0: E8 34 00 74 16 E8 15 00 40 83 F8 05 73 0D E8 52  // .4.t....@...s..R
    1DB0: 13 48 E8 0F 00 66 8B C2 E8 48 13 5B C3 BB 00 1E  // .H...f...H.[....
    1DC0: E8 E0 13 C3 BB 08 1E C1 E0 03 03 D8 C3 BB 00 1E  // ................
    1DD0: B9 32 00 E8 29 10 C3 51 E8 E2 FF 0B C0 74 12 8B  // .2..)..Q.....t..
    1DE0: C8 BB 08 1E E8 BC 13 66 3B C2 74 07 83 C3 08 E2  // .......f;.t.....
    1DF0: F3 0B DB 59 C3 C3 C3 00 E8 C4 F4 B5 01 E8 25 07  // ...Y..........%.
    1E00: C3 E8 BB F4 B5 00 E8 1C 07 C3 80 F9 00 75 0A E8  // .............u..
    1E10: E1 0F 8A C8 B5 02 E8 E5 08 0B F6 74 29 E8 9F F4  // ...........t)...
    1E20: B5 01 E8 14 07 56 33 F6 B5 00 E8 5D 06 5E B5 01  // .....V3....].^..
    1E30: E8 10 F5 E8 C8 08 E8 85 09 E8 83 F4 8D 9C 00 03  // ................
    1E40: E8 FD 06 E8 46 07 66 C1 CE 10 B5 01 E8 3B 06 E8  // ....F.f......;..
    1E50: 12 FF A8 40 75 07 32 C0 B5 01 E8 4B 08 66 C1 CE  // ...@u.2....K.f..
    1E60: 10 C3 E8 5A F4 B5 01 E8 96 06 B5 00 E8 CA 06 E8  // ...Z............
    1E70: 2D 07 B1 0F E8 16 0A B1 10 E8 11 0A E8 2B 00 C3  // -............+..
    1E80: E8 7A 00 E8 49 F4 B5 00 E8 75 06 B5 00 E8 A9 06  // .z..I....u......
    1E90: E8 BE F4 E8 5D 0F 38 C1 74 0F 80 F9 08 72 05 80  // ....].8.t....r..
    1EA0: F9 0B 76 05 B5 03 E8 55 08 C3 53 66 50 BB 02 00  // ..v....U..SfP...
    1EB0: E8 93 0C 66 A9 00 00 01 00 66 58 5B 75 3E E8 29  // ...f.....fX[u>.)
    1EC0: F4 0B D2 74 0C E8 B7 F4 3C 01 74 05 B1 0F E8 FA  // ...t....<.t.....
    1ED0: 09 B1 0C E8 75 00 B1 01 E8 28 0A E8 C7 F3 80 FD  // ....u....(......
    1EE0: 00 75 0D E8 E6 01 B1 0D E8 A2 09 B1 03 E8 5B 00  // .u............[.
    1EF0: E8 F7 F3 0B D2 74 05 B1 01 E8 CF 09 C3 E8 EA F3  // .....t..........
    1F00: 0B D2 74 05 B1 00 E8 C2 09 B1 02 E8 3D 00 E8 6E  // ..t.........=..n
    1F10: F4 A8 01 74 0D E8 8D F3 80 FD 00 75 05 B0 02 E8  // ...t.......u....
    1F20: 12 04 B1 00 E8 DC 09 B1 0D E8 1F 00 C3 B1 07 E8  // ................
    1F30: D1 09 E8 B5 F3 0B D2 75 0C E8 23 F4 E8 85 0B 75  // .......u..#....u
    1F40: 09 E8 6D 0A C3 B1 07 E8 81 09 C3 E8 11 F4 E8 73  // ..m............s
    1F50: 0B 75 24 51 E8 AC 09 59 80 F9 0C 75 1A 33 D2 56  // .u$Q...Y...u.3.V
    1F60: 83 C6 08 E8 9C 0B 5E 0A C0 75 0C B9 0A 00 E8 DF  // ......^..u......
    1F70: 0E 42 83 FA 1E 75 E8 C3 56 83 C6 08 E8 24 0B 5E  // .B...u..V....$.^
    1F80: E8 67 F3 0B D2 74 03 E8 99 08 80 FD 01 0F 84 D1  // .g...t..........
    1F90: 00 80 FD 02 0F 85 F2 00 B1 0C E8 AE FF 56 83 C6  // .............V..
    1FA0: 08 E8 5E 0B 5E 0A C0 0F 84 DF 00 E8 DF 00 0A DB  // ..^.^...........
    1FB0: 0F 85 D6 00 8D 9C 35 01 E8 E8 11 A8 01 74 03 E8  // ......5......t..
    1FC0: 7F 03 E8 25 F3 0B D2 74 05 B1 14 E8 FD 08 66 33  // ...%...t......f3
    1FD0: C9 E8 47 F3 66 BA 50 01 40 50 66 C1 C9 10 8A C1  // ..G.f.P.@Pf.....
    1FE0: 66 C1 C9 10 E8 15 0A 0F 85 9F 00 66 BA 50 01 50  // f..........f.P.P
    1FF0: 4F 52 E8 F5 F2 80 FA 22 5A 74 0D 8D 9C 2D 01 E8  // OR....."Zt...-..
    2000: A1 11 24 06 3C 02 75 02 B6 02 8D 5C 28 66 C1 C9  // ..$.<.u....\(f..
    2010: 10 03 D9 66 C1 C9 10 E8 E2 09 75 6E 8A DF 32 FF  // ...f......un..2.
    2020: 66 C1 C9 10 03 CB 66 C1 C9 10 66 BA 50 01 10 30  // f.....f...f.P..0
    2030: 33 DB E8 C7 09 75 53 66 C1 C9 10 8B C1 66 C1 C9  // 3....uSf.....f..
    2040: 10 0B C0 74 45 83 F8 10 75 0F 8D 5C 28 E8 53 11  // ...tE...u..\(.S.
    2050: 66 0B C0 0F 85 7D FF EB 31 3D 80 00 0F 82 74 FF  // f....}..1=....t.
    2060: EB 25 E8 B6 F2 8A E9 B1 A0 BA 00 80 BF 32 00 8D  // .%...........2..
    2070: 5C 28 E8 5C 09 80 FF 01 74 0D B1 A2 8D 5C 28 E8  // \(.\....t....\(.
    2080: 4F 09 80 FF 01 75 03 B0 00 C3 B0 01 C3 E8 2B 00  // O....u........+.
    2090: 74 0C B0 01 E8 9D 02 75 21 E8 1F 00 75 1C 66 BA  // t......u!...u.f.
    20A0: 0C 00 90 43 8D 9C 30 01 E8 51 09 66 BA 20 00 90  // ...C..0..Q.f. ..
    20B0: 41 8D 9C 34 01 E8 44 09 33 DB C3 E8 5D F2 66 BA  // A..4..D.3...].f.
    20C0: 00 00 90 47 8D 9C 28 01 E8 31 09 C3 E8 B0 F2 3C  // ...G..(..1.....<
    20D0: 01 75 0E E8 ED 02 80 FD 01 75 06 B5 02 E8 12 03  // .u.......u......
    20E0: C3 8D 9C AC 03 B9 10 00 E8 14 0D B0 01 E8 44 02  // ..............D.
    20F0: 74 08 B5 04 E8 11 03 E9 19 01 B1 08 E8 8E 07 E8  // t...............
    2100: 66 02 B1 09 E8 86 07 E8 AC 01 8D 9C B8 03 66 33  // f.............f3
    2110: C0 E8 EF 0F E8 47 01 B9 90 01 E8 28 0D B0 01 E8  // .....G.....(....
    2120: F7 01 B5 02 E8 D5 02 E8 5B 01 E8 E7 02 E8 C7 01  // ........[.......
    2130: B5 03 E8 C7 02 33 C9 E8 E7 00 F6 C5 01 75 2E B5  // .....3.......u..
    2140: 02 E8 B8 02 E8 07 01 F6 C5 04 74 08 B5 01 E8 B7  // ..........t.....
    2150: 02 E9 BF 00 8A FD 80 E7 03 E8 CF 00 80 E3 03 38  // ...............8
    2160: FB 75 07 E8 33 01 0F 84 A9 00 E8 54 01 FE C1 E8  // .u..3......T....
    2170: B8 F1 38 D9 75 C1 8D 9C AC 03 E8 26 10 3C 03 74  // ..8.u......&.<.t
    2180: 05 E8 DA 00 EB A1 8D 9C B0 03 66 33 C0 E8 73 0F  // ..........f3..s.
    2190: 8D 9C 2A 01 E8 0C 10 A8 40 74 0C B1 13 E8 ED 06  // ..*.....@t......
    21A0: B0 03 E8 74 01 EB 0A B1 0A E8 E1 06 B0 02 E8 68  // ...t...........h
    21B0: 01 B5 04 E8 46 02 E8 CC 00 E8 58 02 E8 38 01 B5  // ....F.....X..8..
    21C0: 05 E8 38 02 33 C9 E8 58 00 80 FD 07 75 05 E8 73  // ..8.3..X....u..s
    21D0: 00 75 27 51 B5 04 E8 23 02 59 F6 C5 01 75 07 B5  // .u'Q...#.Y...u..
    21E0: 03 E8 24 02 EB 2D E8 65 00 8A D5 E8 D3 00 E8 5D  // ..$..-.e.......]
    21F0: 00 38 EA 75 05 E8 A1 00 74 19 FE C1 E8 2B F1 38  // .8.u....t....+.8
    2200: D9 75 C3 8D 9C AC 03 E8 99 0F 3C 04 75 05 E8 4D  // .u........<.u..M
    2210: 00 EB A3 B0 00 E8 01 01 B1 0B E8 70 06 E8 A3 01  // ...........p....
    2220: C3 8D 9C C0 03 E8 0F 00 8A E8 C3 53 8D 9C C4 03  // ...........S....
    2230: E8 04 00 5B 8A D8 C3 51 E8 68 0F C0 E1 02 D3 E8  // ...[...Q.h......
    2240: 24 0F 59 C3 8D 9C C2 03 E8 58 0F A8 01 C3 8D 9C  // $.Y......X......
    2250: B8 03 E8 0A 0F C3 8D 9C B8 03 E8 EA 0E C3 33 C9  // ..............3.
    2260: 33 D2 E8 E9 FF 38 D5 76 02 8A D5 FE C1 E8 BA F0  // 3....8.v........
    2270: 38 D9 72 EE 33 C9 8A EA 8D 9C 5C 03 E8 C8 0E B1  // 8.r.3.....\.....
    2280: 0B E8 7F 06 C3 E8 93 F0 8D 9C B8 03 E8 14 0F 66  // ...............f
    2290: BA 03 01 80 83 E8 64 07 C3 51 53 8D 9C B0 03 E8  // ......d..QS.....
    22A0: BD 0E FE C5 E8 A0 0E 80 FD 06 72 07 B5 02 E8 57  // ..........r....W
    22B0: 01 33 C9 5B 59 C3 66 33 C0 8D 9C B0 03 E8 43 0E  // .3.[Y.f3......C.
    22C0: C3 32 ED E8 65 FF 80 E3 0C C0 EB 02 B7 03 2A FB  // .2..e.........*.
    22D0: C0 E3 03 8A EB 80 FB 18 72 03 80 CD 20 E8 4B FF  // ........r... .K.
    22E0: 80 E3 03 38 FB 72 02 8A DF 80 FB 03 75 03 80 CD  // ...8.r......u...
    22F0: 04 0A EB E8 60 FF C3 E8 21 F0 8D 9C C0 03 66 BA  // ....`...!.....f.
    2300: 02 02 90 45 E8 F5 06 C3 E8 10 F0 66 BA 00 01 90  // ...E.......f....
    2310: 42 8D 9C B4 03 E8 E4 06 C3 E8 FF EF 66 BA 02 01  // B...........f...
    2320: 80 50 E8 D7 06 C3 E8 E1 EF 8B C2 66 33 D2 B9 8C  // .P.........f3...
    2330: 0A F7 F1 C3 E8 E4 EF 66 BA 00 06 80 50 E8 BC 06  // .......f....P...
    2340: C3 E8 D7 EF 66 BA 11 01 80 50 B0 04 E8 AD 06 C3  // ....f....P......
    2350: E8 C8 EF 66 BA 00 06 90 40 8D 9C C8 03 E8 9C 06  // ...f....@.......
    2360: 8D 9C C8 03 E8 3C 0E C3 E8 BB FF E8 BC EF 8A E3  // .....<..........
    2370: 80 CC 80 50 E8 A4 EF 58 66 BA 00 01 80 61 E8 7B  // ...P...Xf....a.{
    2380: 06 33 C9 E8 2F EF 0B C0 74 02 B5 10 8D 9C BC 03  // .3../...t.......
    2390: E8 B4 0D 8A C5 E8 83 EF 66 BA 07 01 80 50 E8 5B  // ........f....P.[
    23A0: 06 E8 BB EF E8 21 07 75 19 8D 9C 48 03 E8 F3 0D  // .....!.u...H....
    23B0: 0A C0 74 0E E8 64 EF 66 BA 0A 01 80 50 B0 01 E8  // ..t..d.f....P...
    23C0: 3A 06 C3 E8 42 FF E8 2E FF E8 84 FF 3C 01 75 1C  // :...B.......<.u.
    23D0: E8 71 FE 74 17 33 C9 E8 47 FE 80 FD 07 75 0D FE  // .q.t.3..G....u..
    23E0: C1 E8 46 EF 38 D9 75 EF B5 01 EB 02 B5 00 E8 01  // ..F.8.u.........
    23F0: 00 C3 8D 9C AC 03 B1 02 E8 4C 0D C3 51 8D 9C AC  // .........L..Q...
    2400: 03 32 C9 E8 41 0D 59 C3 51 8D 9C AC 03 B1 01 E8  // .2..A.Y.Q.......
    2410: 35 0D 59 C3 8D 9C 32 01 E8 88 0D 0A C0 75 15 B9  // 5.Y...2......u..
    2420: 64 00 8D 9C AC 03 E8 7A 0D 3C 02 74 03 B9 90 01  // d......z.<.t....
    2430: E8 12 0A C3 32 E4 B1 04 33 D2 F6 E1 8B C8 E8 0F  // ....2...3.......
    2440: 0A C3 51 8D 5C 14 E8 5A 0D 66 C1 E0 10 E8 98 01  // ..Q.\..Z.f......
    2450: 59 C3 33 C9 E8 96 09 38 C1 73 05 B5 00 E8 A7 00  // Y.3....8.s......
    2460: B5 00 E8 9B 00 FE C1 E8 86 09 38 C1 72 E6 B1 14  // ..........8.r...
    2470: 8A E9 E8 7E 09 38 C1 74 05 B5 03 E8 80 02 FE C1  // ...~.8.t........
    2480: E8 67 09 04 14 38 C1 76 E7 C3 83 EC 0C 8B EC 0B  // .g...8.v........
    2490: F6 74 29 E8 E4 F8 66 C1 C8 10 80 FD 10 75 06 8D  // .t)...f......u..
    24A0: 5C 18 E8 FE 0C 66 89 46 00 8D 5C 04 E8 F4 0C 66  // \....f.F..\....f
    24B0: 89 46 04 8D 5C 08 E8 EA 0C 88 46 0A 89 4E 08 8C  // .F..\.....F..N..
    24C0: D0 66 C1 E0 10 8B C4 BB 2B 00 E8 7B 08 83 C4 0C  // .f......+..{....
    24D0: C3 33 DB 83 EC 08 8B EC 89 5E 00 8C D0 66 C1 E0  // .3.......^...f..
    24E0: 10 8B C4 BB 01 00 E8 5F 08 8B EC 8B 4E 00 8B 56  // ......._....N..V
    24F0: 02 66 8B 46 04 83 C4 08 C3 BB 25 00 E8 0F 00 C3  // .f.F......%.....
    2500: BB 23 00 E8 08 00 C3 BB 0D 00 E8 01 00 C3 83 EC  // .#..............
    2510: 04 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 E8 27  // ....N...f......'
    2520: 08 83 C4 04 C3 BB 22 00 E8 E3 FF 80 FD 01 74 08  // ......".......t.
    2530: B5 01 BB 06 00 E8 D6 FF C3 BB 2C 00 E8 CF FF C3  // ..........,.....
    2540: E8 60 0C 66 A9 00 00 FF FF 74 40 83 EC 18 8B EC  // .`.f.....t@.....
    2550: 55 51 B9 04 00 83 C3 02 E8 48 0C 66 89 46 00 83  // UQ.......H.f.F..
    2560: C5 04 83 C3 04 E2 F1 83 C3 04 E8 36 0C 66 C1 C8  // ...........6.f..
    2570: 10 66 89 46 00 59 5D 88 4E 14 8C D0 66 C1 E0 10  // .f.F.Y].N...f...
    2580: 8B C4 BB 31 00 E8 C0 07 83 C4 18 C3 E8 30 ED 8D  // ...1.........0..
    2590: 9C D0 02 E8 0D 0C 8A E8 BB 21 00 E8 70 FF C3 8D  // .........!..p...
    25A0: 9C 3C 03 E8 FD 0B 8A F8 E8 FA EC 8A DD 53 8D 9C  // .<...........S..
    25B0: 42 03 E8 EE 0B 8A E8 5B E8 04 ED E8 A1 ED E8 07  // B......[........
    25C0: 05 75 02 B3 01 83 EC 04 8B EC 88 4E 00 88 7E 01  // .u.........N..~.
    25D0: 88 5E 02 88 6E 03 8C D0 66 C1 E0 10 8B C4 BB 2A  // .^..n...f......*
    25E0: 00 E8 64 07 83 C4 04 C3 83 EC 10 8B EC 66 8B C8  // ..d..........f..
    25F0: 66 33 C0 66 89 46 04 BB 00 17 E8 06 0B 66 B8 00  // f3.f.F.......f..
    2600: 80 20 50 66 89 46 0C 66 33 C0 66 89 46 08 56 E8  // . Pf.F.f3.f.F.V.
    2610: 11 07 66 8B 44 04 66 50 66 C1 E8 16 88 46 08 66  // ..f.D.fPf....F.f
    2620: 58 66 C1 E0 0A 66 05 00 17 00 00 66 89 46 00 5E  // Xf...f.....f.F.^
    2630: 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8 0A 07 8B EC  // ..f......5......
    2640: 66 B8 00 80 00 00 66 2B C8 66 89 46 04 66 05 00  // f.....f+.f.F.f..
    2650: 00 20 40 66 89 46 0C 66 33 C0 66 89 46 08 66 89  // . @f.F.f3.f.F.f.
    2660: 46 00 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8 D8 06  // F...f......5....
    2670: 8B EC 66 8B 46 0C 66 25 FF FF 1F 00 66 01 46 04  // ..f.F.f%....f.F.
    2680: 66 3B C8 76 1F 66 2B C8 66 8B 46 04 66 3D 00 FF  // f;.v.f+.f.F.f=..
    2690: 01 00 76 06 66 B8 00 FF 01 00 66 3B C8 73 AE 66  // ..v.f.....f;.s.f
    26A0: 8B C1 EB A9 83 C4 10 C3 83 EC 08 8B EC 89 4E 00  // ..............N.
    26B0: 66 89 56 02 89 5E 06 8C D0 66 C1 E0 10 8B C4 BB  // f.V..^...f......
    26C0: 2D 00 E8 83 06 83 C4 08 C3 3D C0 7F 76 04 B8 C0  // -........=..v...
    26D0: 7F C3 83 C0 3F 24 C0 C3 51 E8 C7 0A 66 33 D2 B9  // ....?$..Q...f3..
    26E0: 0A 00 F7 F1 8B C8 E8 BA 0A 03 C1 66 25 FF FF 00  // ...........f%...
    26F0: 00 59 3D 10 27 73 03 B8 10 27 C3 32 D2 C3 80 FD  // .Y=.'s...'.2....
    2700: 02 75 19 E8 A9 EC 66 BB 00 08 00 00 E8 8E 00 66  // .u....f........f
    2710: 33 D2 66 BB 01 08 00 00 E8 82 00 C3 80 FD 03 75  // 3.f............u
    2720: 10 66 33 C0 8A C1 66 33 D2 66 BB FF 00 00 00 EB  // .f3...f3.f......
    2730: 36 51 33 D2 E8 6E EB 8A D5 66 C1 E2 10 E8 9F EB  // 6Q3..n...f......
    2740: 8A F2 8A D1 66 8B C2 66 0D 00 00 00 80 E8 DA EB  // ....f..f........
    2750: 80 FB 04 76 06 66 0D 00 00 00 08 E8 0E EC E8 5E  // ...v.f.........^
    2760: EB 66 33 DB 8A D9 59 83 EC 14 8B EC 66 89 46 04  // .f3...Y.....f.F.
    2770: 66 89 5E 08 66 8B C2 66 33 D2 66 BB 64 00 00 00  // f.^.f..f3.f.d...
    2780: 66 F7 E3 66 89 46 00 BB 0C 00 8C D0 66 C1 E0 10  // f..f.F......f...
    2790: 8B C4 E8 B3 05 8B EC B3 01 83 C4 14 C3 83 EC 10  // ................
    27A0: 8B EC 66 89 56 00 66 89 5E 04 BB 2E 00 8C D0 66  // ..f.V.f.^......f
    27B0: C1 E0 10 8B C4 E8 90 05 B3 01 83 C4 10 C3 C3 53  // ...............S
    27C0: 51 66 50 B9 A0 8C 80 FB 00 75 1C B9 90 7E E8 0E  // QfP......u...~..
    27D0: 05 83 E3 03 80 FB 03 75 0E E8 E4 05 66 3D 50 C3  // .......u....f=P.
    27E0: 00 00 72 03 B9 F0 D2 66 33 D2 8B D1 66 58 59 5B  // ..r....f3...fXY[
    27F0: C3 66 52 B3 00 66 F7 C2 00 00 FF FF 75 13 80 FD  // .fR..f......u...
    2800: 13 74 0E 80 FD 14 74 09 B3 01 80 FD 0E 74 02 B3  // .t....t......t..
    2810: 02 66 5A C3 B5 11 80 FA 23 74 07 80 FA 22 74 02  // .fZ.....#t..."t.
    2820: B5 00 C3 B5 02 C3 B1 01 80 FD 00 75 06 C7 46 00  // ...........u..F.
    2830: 0B 01 C3 50 33 C0 E8 79 01 04 14 89 46 00 58 C3  // ...P3..y....F.X.
    2840: C3 C3 0C 01 C3 E8 5B 09 66 C1 E8 10 0B C0 74 1A  // ......[.f.....t.
    2850: 53 83 C3 06 E8 4C 09 5B 3D E0 01 72 0D 53 83 C3  // S....L.[=..r.S..
    2860: 18 E8 3F 09 5B A9 10 00 74 03 32 C0 C3 0C 01 C3  // ..?.[...t.2.....
    2870: B5 0C C3 32 ED B5 02 C3 57 E8 01 01 8B 4D 06 5F  // ...2....W....M._
    2880: C3 80 FA 22 75 05 C7 46 00 78 69 C3 C3 E8 04 01  // ..."u..F.xi.....
    2890: 80 FD FF 74 35 83 EC 0C 8B EC 88 4E 01 88 6E 00  // ...t5......N..n.
    28A0: 80 F9 0F 75 05 E8 24 00 EB 0F 80 F9 10 75 0A 8D  // ...u..$......u..
    28B0: 9C 48 03 E8 ED 08 88 46 02 8C D0 66 C1 E0 10 8B  // .H.....F...f....
    28C0: C4 BB 04 00 E8 81 04 83 C4 0C C3 C3 66 53 E8 39  // ............fS.9
    28D0: EA 66 8B C2 66 33 D2 66 BB 8C 0A 00 00 66 F7 F3  // .f..f3.f.....f..
    28E0: 66 5B 8A E8 88 6E 09 8D 9C 40 03 E8 B5 08 88 46  // f[...n...@.....F
    28F0: 02 88 66 03 66 C1 E8 10 88 46 08 E8 FB E9 66 89  // ..f.f....F....f.
    2900: 56 04 C3 80 F9 04 74 03 E8 D4 E9 83 EC 10 8B EC  // V.....t.........
    2910: 80 F9 04 75 0A 88 4E 01 32 C0 88 46 00 EB 4C E8  // ...u..N.2..F..L.
    2920: 90 00 88 46 00 88 4E 01 E8 34 EA 88 56 0A 80 F9  // ...F..N..4..V...
    2930: 01 74 11 80 F9 0B 75 33 8D 9C 5C 03 E8 64 08 88  // .t....u3..\..d..
    2940: 46 02 EB 27 E8 D4 E9 88 6E 08 E8 AC E9 66 89 56  // F..'....n....f.V
    2950: 04 E8 D6 E9 88 5E 03 E8 4B E9 88 6E 02 51 E8 33  // .....^..K..n.Q.3
    2960: 00 8A CD B0 01 D2 E0 59 88 46 09 8C D0 66 C1 E0  // .......Y.F...f..
    2970: 10 8B C4 BB 4C 00 E8 CF 03 83 C4 10 C3 E8 AC 03  // ....L...........
    2980: 03 7D 04 83 3D FF 74 0B 3B 15 74 05 83 C7 0A EB  // .}..=.t.;.t.....
    2990: F2 0B FF C3 8D 9C 3C 03 E8 08 08 32 ED 3C 03 74  // ......<....2.<.t
    29A0: 0C 3C 09 72 09 3C 0E 77 05 2C 08 8A E8 C3 B5 FF  // .<.r.<.w.,......
    29B0: C3 C3 52 32 C0 80 EE 21 80 FA 1E 74 10 B0 02 80  // ..R2...!...t....
    29C0: FA 20 74 09 B0 04 80 FA 21 74 02 B0 06 02 C6 5A  // . t.....!t.....Z
    29D0: C3 83 EC 08 8B EC 89 7E 00 89 5E 02 89 56 04 89  // .......~..^..V..
    29E0: 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36 00 E8 58 03  // N...f......6..X.
    29F0: 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3 56 33 F6 66  // ...^..~.....V3.f
    2A00: F7 C2 00 00 80 00 75 0A 50 33 C0 8A C6 8B F0 32  // ......u.P3.....2
    2A10: F6 58 53 BB 04 3E E8 EA 06 66 8B C2 BB 00 3E E8  // .XS..>...f....>.
    2A20: E1 06 5B 66 F7 C2 00 00 10 00 75 02 33 DB 8B D3  // ..[f......u.3...
    2A30: 66 C1 E2 10 BA 00 3E 83 EC 08 8B EC 66 89 56 00  // f.....>.....f.V.
    2A40: 88 4E 04 8A C5 FE C8 88 46 07 C6 46 05 00 C6 46  // .N......F..F...F
    2A50: 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E 00 E8 E8 02  // ....f......N....
    2A60: 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A DB 74 32 51  // ...^..~......t2Q
    2A70: B9 90 01 80 FB 20 74 05 80 FB 80 75 13 B9 0A 00  // ..... t....u....
    2A80: 8B C6 0A C0 74 0A B9 90 01 3C 01 74 03 B9 E8 03  // ....t....<.t....
    2A90: E8 B2 03 59 8B C6 FE C4 8B F0 80 FC 06 76 98 0A  // ...Y.........v..
    2AA0: DB 5E C3 8D 5C 04 E8 FA 06 8B D0 B5 02 E8 14 00  // .^..\...........
    2AB0: 74 11 B5 01 80 FA 13 75 0A E8 61 00 80 FA 13 75  // t......u..a....u
    2AC0: 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74 03 80 FA 0E  // ...........t....
    2AD0: C3 80 FA 05 C3 80 FA 02 74 03 80 FA 04 C3 80 FA  // ........t.......
    2AE0: 01 74 03 80 FA 02 C3 80 FA 02 75 03 B2 01 C3 80  // .t........u.....
    2AF0: FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8 FF 74 02 B5  // ..u..........t..
    2B00: 04 C3 8D 5C 09 E8 9B 06 8A C8 0A C9 75 03 32 C0  // ...\........u.2.
    2B10: C3 B5 02 E8 B4 02 8A C5 24 02 D0 E8 C3 8D 5C 08  // ........$.....\.
    2B20: E8 80 06 8A D0 B6 01 83 EC 08 8B EC 89 56 02 8C  // .............V..
    2B30: D0 66 C1 E0 10 8B C4 BB 4F 00 E8 0B 02 8B EC 8A  // .f......O.......
    2B40: 56 04 83 C4 08 C3 53 81 C3 C9 05 E8 23 06 5B C3  // V.....S.....#.[.
    2B50: 53 81 C3 C9 05 E8 74 05 5B C3 66 53 81 C3 00 10  // S.....t.[.fS....
    2B60: E8 0E 06 66 5B C3 57 E8 82 01 8A 45 2D B4 FF F7  // ...f[.W....E-...
    2B70: 45 50 20 00 5F C3 50 56 0F BC D8 8D 36 1D 2B E8  // EP ._.PV....6.+.
    2B80: 63 03 5E 58 C3 00 20 00 24 00 00 00 28 00 2C 00  // c.^X.. .$...(.,.
    2B90: 30 00 34 00 38 00 00 00 3C 00 40 00 44 53 56 51  // 0.4.8...<.@.DSVQ
    2BA0: 8B F7 B3 00 E8 30 00 0B F6 74 16 49 0B C9 75 04  // .....0...t.I..u.
    2BB0: 33 FF EB 0D 8B DF 03 7D 02 3B F3 74 04 E2 F5 33  // 3......}.;.t...3
    2BC0: FF 0B FF 59 5E 5B C3 0E 00 00 00 0A 00 06 00 08  // ...Y^[..........
    2BD0: 00 0C 00 0E 00 10 00 56 8D 36 5F 2B E8 06 03 E8  // .......V.6_+....
    2BE0: 13 01 03 DE 8B 3F 0B FF 74 0B 03 FE 33 C9 8A 0D  // .....?..t...3...
    2BF0: 83 C7 04 0B FF 5E C3 51 56 53 C1 EB 0C E8 D7 FF  // .....^.QVS......
    2C00: 5B 75 04 33 FF EB 0B 3B 1D 74 07 83 C7 08 E2 F7  // [u.3...;.t......
    2C10: 33 FF 0B FF 5E 59 C3 57 E8 DC FF 75 04 33 DB 5F  // 3...^Y.W...u.3._
    2C20: C3 E8 02 00 5F C3 52 51 8B 5D 04 0B DB 74 1B 56  // ...._.RQ.]...t.V
    2C30: E8 C2 00 03 DE 5E 33 C9 8A 4F 01 80 3F FF 74 08  // .....^3..O..?.t.
    2C40: 3A 07 74 06 03 D9 EB F0 33 DB 0B DB 59 5A C3 50  // :.t.....3...YZ.P
    2C50: 8D 1C E8 AE 04 8B D8 E8 72 00 23 C3 74 6C 33 FF  // ........r.#.tl3.
    2C60: E8 3A FF 0B FF 74 63 39 05 75 F5 66 33 C0 8B 45  // .:...tc9.u.f3..E
    2C70: 08 8B 4D 02 83 F9 0A 74 18 8B 4D 0A 8B D1 81 E2  // ..M....t..M.....
    2C80: 00 70 80 FE 20 75 0A 66 C1 C8 10 8B C1 66 C1 C8  // .p.. u.f.....f..
    2C90: 10 8D 5C 0C E8 6C 04 66 33 C0 8B 45 04 8D 5C 04  // ..\..l.f3..E..\.
    2CA0: E8 60 04 33 C9 8B D8 50 B0 01 E8 6A FF 58 74 0F  // .`.3...P...j.Xt.
    2CB0: 8A 4F 02 8B D8 B0 02 E8 5D FF 74 03 8A 6F 02 8D  // .O......].t..o..
    2CC0: 5C 08 66 33 C0 8B C1 E8 39 04 58 C3 56 E8 25 00  // \.f3....9.X.V.%.
    2CD0: 8B 44 04 5E C3 56 E8 1C 00 89 44 04 5E C3 C3 8B  // .D.^.V....D.^...
    2CE0: DA B0 14 E8 31 FF 74 03 8B 5F 02 C3 BF 4C 02 8B  // ....1.t.._...L..
    2CF0: 3D 8B 7D 0C C3 BE 4C 02 8B 34 8B 74 30 C3 1E 0E  // =.}...L..4.t0...
    2D00: 1F BF 4C 02 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE 4C  // ..L..=.}.......L
    2D10: 02 8B 34 8B 74 10 C3 BF 4C 02 8B 3D 8B 7D 26 83  // ..4.t...L..=.}&.
    2D20: C7 04 C3 BE 4C 02 8B 34 8B 74 1A C3 BF 4C 02 8B  // ....L..4.t...L..
    2D30: 3D 8B 7D 3A C3 BF 4C 02 8B 3D 8B 7D 0A 83 C7 04  // =.}:..L..=.}....
    2D40: B9 08 00 C3 E8 01 00 CB 83 EC 06 8B EC 89 46 00  // ..............F.
    2D50: 66 33 C0 C6 46 04 00 89 46 02 06 52 8A D3 8B C5  // f3..F...F..R....
    2D60: E8 68 16 5A 07 83 C4 06 C3 E8 80 FF F7 45 50 01  // .h.Z.........EP.
    2D70: 00 C3 E8 77 FF 83 4D 50 01 C3 E8 6F FF 88 45 58  // ...w..MP...o..EX
    2D80: C3 66 53 83 EC 28 8B EC 66 89 5E 00 66 89 4E 04  // .fS..(..f.^.f.N.
    2D90: 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8 AA FF 83 C4  // ..f.............
    2DA0: 28 66 5B E8 48 01 BB 04 00 E8 9A FD 66 C1 E8 10  // (f[.H.......f...
    2DB0: E8 C7 FF C3 E8 35 FF 66 8B 5D 08 66 8B 4D 0C C3  // .....5.f.].f.M..
    2DC0: 57 E8 28 FF 66 8B 45 28 5F C3 83 EC 04 8B EC 89  // W.(.f.E(_.......
    2DD0: 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38 00 E8 68 FF  // N...f......8..h.
    2DE0: 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 05 C3 B0 02 C3  // ...n............
    2DF0: B0 05 C3 B0 08 C3 E8 F3 FE 8B 45 56 0B C0 C3 53  // ..........EV...S
    2E00: 66 50 66 33 C0 E8 FB 02 83 C3 04 E2 F8 66 58 5B  // fPf3.........fX[
    2E10: C3 32 C0 C3 FC E8 8B 03 66 C1 CB 10 E8 E4 02 66  // .2......f......f
    2E20: C1 CB 10 66 81 C3 04 00 04 00 E2 E9 C3 FC 66 AD  // ...f..........f.
    2E30: E8 D0 02 83 C3 04 E2 F6 C3 FC E8 66 03 66 AB 83  // ...........f.f..
    2E40: C3 04 E2 F6 C3 66 50 B8 19 00 E8 10 00 66 58 C3  // .....fP......fX.
    2E50: 66 50 B8 D4 30 D1 E1 E8 03 00 66 58 C3 52 F7 E1  // fP..0.....fX.R..
    2E60: 8B CA E8 63 01 66 53 8B D9 66 C1 E3 10 8B D8 66  // ...c.fS..f.....f
    2E70: B8 04 B1 03 00 B2 00 66 EF B2 04 66 33 C0 66 EF  // .......f...f3.f.
    2E80: 66 B8 08 B1 03 00 B2 00 66 EF B2 04 66 ED 33 C9  // f.......f...f.3.
    2E90: 66 03 D8 73 0A 66 ED 66 A9 00 00 00 80 75 F6 66  // f..s.f.f.....u.f
    2EA0: ED 66 3B C3 73 0C 66 C1 E8 10 3B C1 72 04 8B C8  // .f;.s.f...;.r...
    2EB0: EB ED 66 5B 5A C3 BB 42 EC E8 B5 02 66 33 D2 66  // ..f[Z..B....f3.f
    2EC0: BB 19 00 00 00 66 F7 F3 C3 66 50 53 BB 07 00 E8  // .....f...fPS....
    2ED0: 74 FC 25 00 02 35 00 02 0B C0 5B 66 58 C3 BB 0A  // t.%..5....[fX...
    2EE0: 15 E8 8D 02 C3 32 FF D1 E3 03 F3 8B 1C C3 E8 ED  // .....2..........
    2EF0: FF 66 C1 E0 0A 66 83 E8 20 E8 27 FE 66 89 44 04  // .f...f.. .'.f.D.
    2F00: C7 44 08 20 00 C3 56 1E 0E 1F E8 16 FE 66 8B 44  // .D. ..V......f.D
    2F10: 04 66 C1 E0 0A 1F 5E C3 C3 56 E8 F1 FD 8B 4C 22  // .f....^..V....L"
    2F20: 8A 44 29 5E C3 BE 4C 02 8B 34 8B 74 1E 83 C6 04  // .D)^..L..4.t....
    2F30: B9 1C 00 C3 33 FF C3 56 E8 D3 FD 8A 6C 28 80 E5  // ....3..V....l(..
    2F40: 70 C0 ED 04 5E C3 56 E8 C4 FD 53 81 C3 09 01 E8  // p...^.V...S.....
    2F50: 51 02 8A E8 5B 53 81 C3 00 01 E8 46 02 5B 8A C5  // Q...[S.....F.[..
    2F60: 66 89 44 3C 5E C3 56 E8 A4 FD 66 8B 44 3C 53 81  // f.D<^.V...f.D<S.
    2F70: C3 00 01 E8 8D 01 5B 53 81 C3 08 01 B1 01 8A E8  // ......[S........
    2F80: E8 C4 01 5B 5E C3 56 E8 84 FD 8B FE 83 C7 04 5E  // ...[^.V........^
    2F90: C3 56 E8 79 FD 8A 44 28 80 FD 00 74 0E 24 8F C0  // .V.y..D(...t.$..
    2FA0: E5 04 0A C5 80 FD 20 75 02 0C 02 24 FE 81 7C 04  // ...... u...$..|.
    2FB0: 34 21 76 02 0C 01 88 44 28 E8 08 FB 75 04 80 4C  // 4!v....D(...u..L
    2FC0: 30 01 5E C3 32 C0 C3 00 66 50 53 2E 8B 1E 40 02  // 0.^.2...fPS...@.
    2FD0: B2 20 E8 DD 00 A8 01 75 05 B2 14 E8 D4 00 8A F4  // . .....u........
    2FE0: 5B 32 D2 66 58 C3 2E 8B 1E 40 02 C3 0B C9 75 1A  // [2.fX....@....u.
    2FF0: 4B 74 16 43 3B DA 77 09 8B C8 8B C2 2B D2 F7 F3  // Kt.C;.w.....+...
    3000: 91 F7 F3 8B DA 8B D1 2B C9 C3 3B CA 72 1A 75 10  // .......+..;.r.u.
    3010: 3B D8 77 0C 2B C3 8B D8 2B C9 2B D2 B8 01 00 C3  // ;.w.+...+.+.....
    3020: 2B C9 2B DB 93 87 CA C3 55 56 2B F6 8B EE 03 DB  // +.+.....UV+.....
    3030: 13 C9 72 11 45 3B CA 72 F5 77 04 3B D8 76 EF F8  // ..r.E;.r.w.;.v..
    3040: 13 F6 4D 78 20 D1 D9 D1 DB 2B C3 1B D1 F5 72 F0  // ..Mx ....+....r.
    3050: 03 F6 4D 78 0C D1 E9 D1 DB 03 C3 13 D1 73 F1 EB  // ..Mx.........s..
    3060: DF 03 C3 13 D1 8B D8 8B CA 8B C6 33 D2 5E 5D C3  // ...........3.^].
    3070: 93 50 92 0B C0 74 02 F7 E2 91 0B C0 74 04 F7 E3  // .P...t......t...
    3080: 03 C8 58 F7 E3 03 D1 C3 52 66 50 B4 80 8A C7 66  // ..X.....RfP....f
    3090: C1 E0 10 8A E3 8A C2 24 FC BA F8 0C 66 EF 66 58  // .......$....f.fX
    30A0: 5A C3 52 BA FC 0C 66 ED 5A C3 52 BA FC 0C 66 EF  // Z.R...f.Z.R...f.
    30B0: 5A C3 E8 31 FF 9C FA E8 CE FF E8 E5 FF 9D C3 E8  // Z..1............
    30C0: 24 FF 9C FA E8 C1 FF E8 E0 FF 9D C3 52 66 53 66  // $...........RfSf
    30D0: 50 E8 06 00 66 58 66 5B 5A C3 66 C1 E3 10 66 C1  // P...fXf[Z.f...f.
    30E0: EB 0E E8 E3 FE E8 71 01 C3 66 50 66 C1 E3 10 66  // ......q..fPf...f
    30F0: C1 EB 10 E8 10 FE 66 03 D8 66 81 CB 00 00 00 80  // ......f..f......
    3100: 66 58 C3 52 66 53 E8 04 00 66 5B 5A C3 66 50 E8  // fX.RfS...f[Z.fP.
    3110: B6 FE E8 D4 FF E8 41 01 66 58 C3 52 51 66 53 66  // ......A.fX.RQfSf
    3120: 50 8A CB 80 E3 FC 80 E1 03 C0 E1 03 E8 99 FE E8  // P...............
    3130: B7 FF E8 0B 01 66 D3 C8 58 50 66 D3 C0 E8 19 01  // .....f..XPf.....
    3140: 66 58 66 5B 59 5A C3 66 50 51 C0 E1 03 E8 53 00  // fXf[YZ.fPQ....S.
    3150: 66 D3 C8 8A C5 66 D3 C0 E8 A8 FF 59 66 58 C3 66  // f....f.....YfX.f
    3160: 50 51 C0 E1 03 E8 3B 00 66 D3 C8 59 8A E8 66 58  // PQ....;.f..Y..fX
    3170: C3 E8 5F 00 C3 E8 50 FE 66 C1 E3 10 66 C1 EB 0E  // .._...P.f...f...
    3180: E8 BD 00 C3 E8 41 FE 66 C1 E3 02 E8 B2 00 C3 52  // .....A.f.......R
    3190: 66 53 E8 04 00 66 5B 5A C3 E8 2C FE E8 4A FF E8  // fS...f[Z..,..J..
    31A0: 9E 00 C3 51 66 52 8A EB 8A CB 80 E1 03 C0 E1 03  // ...QfR..........
    31B0: 80 E3 FC E8 D9 FF 80 F9 00 74 14 66 8B D0 83 C3  // .........t.f....
    31C0: 04 E8 CB FF 83 EB 04 66 92 66 0F AD D0 8A DD 66  // .......f.f.....f
    31D0: 5A 59 C3 52 66 53 E8 9C FF 66 5B 5A C3 52 E8 A3  // ZY.RfS...f[Z.R..
    31E0: FF 5A C3 66 50 55 52 66 50 8B EC 8B 56 0C 89 56  // .Z.fPURfP...V..V
    31F0: 08 E8 D4 FD 2E A1 95 02 B2 18 EF B2 00 66 ED 66  // .............f.f
    3200: 89 46 0A 66 58 5A 5D C3 66 50 55 52 8B EC E8 B7  // .F.fXZ].fPUR....
    3210: FD B2 00 66 8B 46 0A 66 EF 8B 56 08 89 56 0C 66  // ...f.F.f..V..V.f
    3220: 8B 46 04 66 89 46 08 5A 5D 66 58 66 58 C3 66 50  // .F.f.F.Z]fXfX.fP
    3230: 52 E8 94 FD B2 18 66 ED 2E A3 95 02 5A 66 58 C3  // R.....f.....ZfX.
    3240: 66 81 FB FF 00 00 00 77 04 8A D3 EB 09 66 8B C3  // f......w.....f..
    3250: B2 00 66 EF B2 04 66 ED C3 66 81 FB FF 00 00 00  // ..f...f..f......
    3260: 77 04 8A D3 EB 0A 66 93 B2 00 66 EF 66 93 B2 04  // w.....f...f.f...
    3270: 66 EF C3 C3 C3 C3 C3 C3 C3 C3 C3 C3 C3 55 8B EC  // f............U..
    3280: 53 51 8B F0 26 8B 5C 14 26 8B 4C 16 E8 28 00 8D  // SQ..&.\.&.L..(..
    3290: 66 FC 59 5B 5D C3 53 51 8B F0 26 8B 5C 24 33 C9  // f.Y[].SQ..&.\$3.
    32A0: E8 14 00 59 5B C3 55 8B EC 53 51 8B F0 26 8B 5C  // ...Y[.U..SQ..&.\
    32B0: 08 26 8B 4C 0A EB D5 52 56 57 C8 06 00 00 8B F0  // .&.L...RVW......
    32C0: 89 4E FE 8C D0 8E C0 26 8B 7C 26 8A 45 01 32 E4  // .N.....&.|&.E.2.
    32D0: B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8  // . .+............
    32E0: E2 FA 8A 4D 03 32 ED 8B FA E3 06 D1 E0 D1 D7 E2  // ...M.2..........
    32F0: FA F7 D0 F7 D7 26 21 44 1C 26 21 7C 1E 8C D0 8E  // .....&!D.&!|....
    3300: C0 26 8B 7C 26 8A 4D 01 32 ED B8 20 00 2B C1 8B  // .&.|&.M.2.. .+..
    3310: C8 66 C7 46 FA FF FF FF FF E3 08 D1 6E FC D1 5E  // .f.F........n..^
    3320: FA E2 F8 8A 4D 02 32 ED 8B C3 8B 56 FE E3 06 D1  // ....M.2....V....
    3330: EA D1 D8 E2 FA 23 46 FA 23 56 FC 8A 4D 03 32 ED  // .....#F.#V..M.2.
    3340: E3 06 D1 E0 D1 D2 E2 FA 26 09 44 1C 26 09 54 1E  // ........&.D.&.T.
    3350: C9 5F 5E 5A C3 55 8B EC 53 51 52 57 50 8B D8 26  // ._^Z.U..SQRWP..&
    3360: 8B 7F 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF  // ..&.E.2.. .+....
    3370: 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 02 88 4E F6  // ...........M..N.
    3380: C6 46 F7 00 8B FA 8B 4E F6 E3 06 D1 E0 D1 D7 E2  // .F.....N........
    3390: FA 26 09 47 1C 26 09 7F 1E 8D 66 F8 5F 5A E9 F1  // .&.G.&....f._Z..
    33A0: FE 53 51 52 57 8B D8 8C D0 8E C0 26 8B 77 26 8A  // .SQRW......&.w&.
    33B0: 4C 01 32 ED B8 20 00 2B C1 8B C8 BE FF FF 8B D6  // L.2.. .+........
    33C0: E3 06 D1 EA D1 DE E2 FA 26 8B 7F 26 8A 4D 02 32  // ........&..&.M.2
    33D0: ED 8B C6 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26  // ...............&
    33E0: 21 47 1C 26 21 57 1E 5F E9 CC 05 53 56 8B D8 8C  // !G.&!W._...SV...
    33F0: D2 8E C2 26 8B 77 26 80 3C 00 74 73 80 3C 01 75  // ...&.w&.<.ts.<.u
    3400: 58 8A 44 01 32 E4 26 83 7F 1E 00 75 4C 26 3B 47  // X.D.2.&....uL&;G
    3410: 1C 75 46 8A 04 6B F0 03 8A 84 FC 4E 26 01 47 26  // .uF..k.....N&.G&
    3420: 8C D0 8E C0 26 8B 77 26 80 3C 09 74 17 8A 04 32  // ....&.w&.<.t...2
    3430: E4 6B F0 03 8B C3 FF 94 FA 4E 26 8B 77 26 8A 04  // .k.......N&.w&..
    3440: 32 E4 EB D1 8B 44 01 26 29 47 26 26 FF 47 26 26  // 2....D.&)G&&.G&&
    3450: 8B 47 1C 26 8B 77 1E EB 1A 26 8B 77 26 8A 04 32  // .G.&.w...&.w&..2
    3460: E4 6B F0 03 8A 84 FC 4E 26 01 47 26 E9 80 FF 33  // .k.....N&.G&...3
    3470: C0 33 F6 8B D6 5E 5B C3 53 51 52 56 8B D8 8D 77  // .3...^[.SQRV...w
    3480: 35 26 8B 54 02 26 89 57 14 26 C7 47 16 00 00 8B  // 5&.T.&.W.&.G....
    3490: F0 26 8B 47 20 33 D2 26 01 47 14 26 11 54 16 8C  // .&.G 3.&.G.&.T..
    34A0: D1 8E C1 26 F6 47 2F 06 0F 85 0A 05 26 80 7F 34  // ...&.G/.....&..4
    34B0: 00 75 22 26 8B 77 16 26 0B 77 14 75 10 26 D1 67  // .u"&.w.&.w.u.&.g
    34C0: 08 26 D1 57 0A 26 D1 67 08 26 D1 57 0A 8B C3 E8  // .&.W.&.g.&.W....
    34D0: 79 11 E9 E1 04 26 8A 47 34 32 E4 05 80 00 99 26  // y....&.G42.....&
    34E0: 89 47 1C 26 89 57 1E 8B C3 E8 FF FE E9 C7 04 53  // .G.&.W.........S
    34F0: 56 8B D8 8D 77 35 26 8A 44 02 32 E4 C1 E0 02 26  // V...w5&.D.2....&
    3500: 8B 37 26 8B 34 03 F0 26 8B 47 08 26 8B 5F 0A 26  // .7&.4..&.G.&._.&
    3510: 89 04 26 89 5C 02 5E 5B C3 53 52 56 8B D8 8C D0  // ..&.\.^[.SRV....
    3520: 8D 77 35 8E C0 26 8A 54 02 80 FA 40 73 21 26 8B  // .w5..&.T...@s!&.
    3530: 77 02 32 F6 C1 E2 02 26 8B 74 04 03 F2 26 8B 57  // w.2....&.t...&.W
    3540: 08 26 8B 47 0A 26 89 14 26 89 44 02 E9 7F 00 80  // .&.G.&..&.D.....
    3550: FA 41 75 12 26 8B 47 08 26 8B 57 0A 26 89 47 10  // .Au.&.G.&.W.&.G.
    3560: 26 89 57 12 EB 68 80 FA 40 75 12 26 8B 47 08 26  // &.W..h..@u.&.G.&
    3570: 8B 57 0A 26 89 47 0C 26 89 57 0E EB 51 80 FA 42  // .W.&.G.&.W..Q..B
    3580: 75 0A 26 8B 47 08 26 89 47 22 EB 42 80 FA 43 75  // u.&.G.&.G".B..Cu
    3590: 0A 26 8A 47 08 26 88 47 33 EB 33 80 FA 46 75 12  // .&.G.&.G3.3..Fu.
    35A0: 26 8B 57 08 26 8B 47 0A 26 89 57 18 26 89 47 1A  // &.W.&.G.&.W.&.G.
    35B0: EB 1C 80 FA 47 75 0A 26 8B 47 08 26 89 47 24 EB  // ....Gu.&.G.&.G$.
    35C0: 0D 80 FA 48 75 08 26 8B 47 08 26 89 47 20 5E 5A  // ...Hu.&.G.&.G ^Z
    35D0: 5B C3 53 56 8B D8 8D 77 35 26 8A 44 02 32 E4 26  // [.SV...w5&.D.2.&
    35E0: 89 47 14 26 C7 47 16 00 00 5E 5B C3 53 56 8B D8  // .G.&.G...^[.SV..
    35F0: 26 8B 77 02 26 8B 74 02 8A 04 32 E4 26 89 47 14  // &.w.&.t...2.&.G.
    3600: 26 C7 47 16 00 00 26 8B 5F 02 26 FF 47 02 5E 5B  // &.G...&._.&.G.^[
    3610: C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B 34 26  // .SV..&.w.&.t..4&
    3620: 89 77 14 26 C7 47 16 00 00 26 8B 5F 02 26 83 47  // .w.&.G...&._.&.G
    3630: 02 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74  // ..^[.SV..&.w.&.t
    3640: 02 8B 04 8B 74 02 26 89 47 14 26 89 77 16 26 8B  // ....t.&.G.&.w.&.
    3650: 5F 02 26 83 47 02 04 5E 5B C3 53 52 56 8B D8 E8  // _.&.G..^[.SRV...
    3660: 70 FF 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1 D8  // p...&.G.&.W.....
    3670: D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3 E8 2B  // ....&.G.&.T....+
    3680: 10 E9 4A FF 53 8B D8 26 8B 5F 02 26 FF 47 02 5B  // ..J.S..&._.&.G.[
    3690: C3 53 8B D8 26 8B 5F 02 26 83 47 02 02 5B C3 53  // .S..&._.&.G..[.S
    36A0: 56 8B D8 E8 6B FF 8B F3 26 8B 57 20 33 C0 26 01  // V...k...&.W 3.&.
    36B0: 57 14 26 11 44 16 8C D2 8E C2 26 8B 47 2E 32 C0  // W.&.D.....&.G.2.
    36C0: 80 E4 06 3D 00 02 75 07 32 E4 33 D2 5E 5B C3 26  // ...=..u.2.3.^[.&
    36D0: 8B 47 2E 32 C0 80 E4 06 3D 00 04 74 EB 26 80 7F  // .G.2....=..t.&..
    36E0: 34 00 75 08 8B C3 E8 2F 0F 5E 5B C3 26 8A 47 34  // 4.u..../.^[.&.G4
    36F0: 32 E4 26 89 47 1C 26 C7 47 1E 00 00 8B C3 E8 EA  // 2.&.G.&.G.......
    3700: FC 5E 5B C3 53 8B D8 E8 E2 FE 26 8B 47 14 C1 E0  // .^[.S.....&.G...
    3710: 02 26 8B 1F 26 8B 1F 03 D8 26 8B 07 26 8B 57 02  // .&..&....&..&.W.
    3720: 5B C3 28 37 1D 37 33 37 82 37 39 37 51 37 6B 37  // [.(7.737.797Q7k7
    3730: 76 37 7C 37 53 51 56 8B D8 E8 B0 FE 8C D2 8E C2  // v7|7SQV.........
    3740: 26 83 7F 16 00 75 22 26 83 7F 14 40 73 1B 26 8B  // &....u"&...@s.&.
    3750: 77 02 26 8B 5F 14 C1 E3 02 26 8B 44 04 03 D8 26  // w.&._....&.D...&
    3760: 8B 07 26 8B 57 02 E9 7B 05 26 8B 77 14 26 8B 47  // ..&.W..{.&.w.&.G
    3770: 16 83 C6 C0 83 D0 FF 75 71 83 FE 08 77 6C 03 F6  // .......uq...wl..
    3780: 2E FF A4 BA 36 26 8B 47 10 26 8B 57 12 E9 54 05  // ....6&.G.&.W..T.
    3790: 26 8B 47 0C 26 8B 57 0E E9 49 05 26 8B 47 22 EB  // &.G.&.W..I.&.G".
    37A0: 4B 26 8A 4F 33 32 ED BB 01 00 33 D2 E3 06 D1 E3  // K&.O32....3.....
    37B0: D1 D2 E2 FA 8B C3 E9 2B 05 26 8A 4F 33 32 ED B8  // .......+.&.O32..
    37C0: 01 00 33 D2 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..3.............
    37D0: E9 11 05 26 8B 47 18 26 8B 57 1A E9 06 05 26 8B  // ...&.G.&.W....&.
    37E0: 47 24 EB 08 26 8B 47 20 EB 02 33 C0 33 D2 E9 F3  // G$..&.G ..3.3...
    37F0: 04 53 56 8B D8 E8 F4 FD 8B F3 26 8B 47 18 26 8B  // .SV.......&.G.&.
    3800: 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14 26 11  // W.........&.G.&.
    3810: 54 16 8B C3 E8 16 0E 5E 5B C3 33 C0 33 D2 C3 53  // T......^[.3.3..S
    3820: 56 8B D8 E8 EB FD 26 8B 77 14 26 03 77 22 8B 04  // V.....&.w.&.w"..
    3830: 8B 54 02 5E 5B C3 53 8B D8 26 C6 47 2B 04 E8 AB  // .T.^[.S..&.G+...
    3840: FD 26 8B 47 14 26 8B 57 16 5B C3 53 8B D8 26 C6  // .&.G.&.W.[.S..&.
    3850: 47 2B 01 E8 BB FD EB E9 53 8B D8 26 C6 47 2B 00  // G+......S..&.G+.
    3860: E8 D2 FD EB DC 53 8B D8 83 C3 35 26 8A 5F 01 C0  // .....S....5&._..
    3870: EB 03 80 E3 07 32 FF 03 DB FF 97 8A 4E 5B C3 53  // .....2......N[.S
    3880: 52 56 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // RV..&.G,2.......
    3890: FF 94 A6 4E 26 89 47 08 26 89 57 0A 26 8A 47 2D  // ...N&.G.&.W.&.G-
    38A0: 32 E4 8B F0 03 F0 8B C3 FF 94 BE 4E 26 89 47 04  // 2..........N&.G.
    38B0: 26 89 57 06 E9 17 FD 53 51 56 8B D8 26 8A 4F 2B  // &.W....SQV..&.O+
    38C0: 32 ED 8B F1 8A 8C EE 4E E3 0A 26 D1 6F 06 26 D1  // 2......N..&.o.&.
    38D0: 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B  // _...&.O+2.......
    38E0: 8C CE 4E 8B B4 D0 4E 26 21 4F 04 26 21 77 06 26  // ..N...N&!O.&!w.&
    38F0: 8A 4F 2A 32 ED 8B F1 8A 8C F6 4E E3 0A 26 D1 67  // .O*2......N..&.g
    3900: 04 26 D1 57 06 E2 F6 26 8B 4F 08 26 8B 77 0A 26  // .&.W...&.O.&.w.&
    3910: 89 4F 14 26 89 77 16 E9 CA 03 53 51 52 56 57 8B  // .O.&.w....SQRVW.
    3920: D8 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02  // .....&.G+2......
    3930: 26 8A 47 2A 8B F8 8A 8D F6 4E 32 ED 8B 84 CE 4E  // &.G*.....N2....N
    3940: 8B 94 D0 4E E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ...N............
    3950: 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4 8B F0  // &!G.&!W.&.G*2...
    3960: 8A 8C F6 4E 32 ED E3 0A 26 D1 6F 0A 26 D1 5F 08  // ...N2...&.o.&._.
    3970: E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84 CE 4E 8B  // ..&.G+........N.
    3980: 94 D0 4E 26 21 47 08 26 21 57 0A 26 8A 47 2A 32  // ..N&!G.&!W.&.G*2
    3990: E4 8B F0 8A 8C F6 4E 32 ED E3 0A 26 D1 67 08 26  // ......N2...&.g.&
    39A0: D1 57 0A E2 F6 26 8B 47 14 26 8B 57 16 26 09 47  // .W...&.G.&.W.&.G
    39B0: 08 26 09 57 0A 5F 5E 5A 59 5B C3 53 51 56 8B D8  // .&.W._^ZY[.SQV..
    39C0: 26 8A 4F 2B 32 ED 8B F1 8A 8C EE 4E E3 0A 26 D1  // &.O+2......N..&.
    39D0: 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1  // o.&._...&.O+2...
    39E0: C1 E6 02 8B 8C CE 4E 8B B4 D0 4E 26 21 4F 04 26  // ......N...N&!O.&
    39F0: 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C F6 4E E3  // !w.&.O*2......N.
    3A00: 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 4F 2B 32  // .&.o.&._...&.O+2
    3A10: ED 8B F1 C1 E6 02 8B 8C CE 4E 8B B4 D0 4E 26 21  // .........N...N&!
    3A20: 4F 08 26 21 77 0A E9 BB 02 51 52 57 8B D8 8C D0  // O.&!w....QRW....
    3A30: 8E C0 26 80 7F 2B 00 74 1A 26 8A 47 2C 32 E4 8B  // ..&..+.t.&.G,2..
    3A40: F0 03 F0 8B C3 FF 94 A6 4E 26 89 47 08 26 89 57  // ........N&.G.&.W
    3A50: 0A EB 10 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // ...&.G,2........
    3A60: 94 B2 4E 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF  // ..N&.G-2........
    3A70: 94 BE 4E 26 89 47 04 26 89 57 06 8C D2 8E C2 26  // ..N&.G.&.W.....&
    3A80: 80 7F 2B 00 74 4A 26 8A 47 2B 32 E4 8B F0 C1 E6  // ..+.tJ&.G+2.....
    3A90: 02 26 8A 47 2A 8B F8 8A 8D F6 4E 32 ED 8B 84 CE  // .&.G*.....N2....
    3AA0: 4E 8B 94 D0 4E E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7  // N...N...........
    3AB0: D2 26 21 47 08 26 21 57 0A 8B C3 E8 F9 FD 26 8B  // .&!G.&!W......&.
    3AC0: 47 04 26 8B 57 06 26 09 47 08 26 09 57 0A EB 10  // G.&.W.&.G.&.W...
    3AD0: 26 8B 57 04 26 8B 47 06 26 89 57 08 26 89 47 0A  // &.W.&.G.&.W.&.G.
    3AE0: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 9A 4E  // &.G,2..........N
    3AF0: 5F 5A 59 C3 53 51 52 56 57 8B D8 26 8A 47 2A 32  // _ZY.SQRVW..&.G*2
    3B00: E4 8B F0 8A 8C F6 4E 32 ED E3 0A 26 D1 67 04 26  // ......N2...&.g.&
    3B10: D1 57 06 E2 F6 8C D0 8E C0 26 8A 47 2B 32 E4 8B  // .W.......&.G+2..
    3B20: F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D F6 4E 32 ED  // ....&.G*.....N2.
    3B30: 8B 84 CE 4E 8B 94 D0 4E E3 06 D1 E0 D1 D2 E2 FA  // ...N...N........
    3B40: F7 D0 F7 D2 26 09 47 04 26 09 57 06 26 8B 47 04  // ....&.G.&.W.&.G.
    3B50: 26 8B 57 06 26 21 47 08 26 21 57 0A E9 56 FE 55  // &.W.&!G.&!W..V.U
    3B60: 8B EC 51 52 50 8B D8 26 8A 47 2C 32 E4 8B F0 03  // ..QRP..&.G,2....
    3B70: F0 8B C3 FF 94 A6 4E 26 89 47 08 26 89 57 0A 26  // ......N&.G.&.W.&
    3B80: 8A 47 2B 88 46 FA 8B C3 E8 DA FC 26 89 47 04 26  // .G+.F......&.G.&
    3B90: 89 57 06 26 8A 4F 2D 32 ED 8B F1 03 F1 8B C3 FF  // .W.&.O-2........
    3BA0: 94 BE 4E 26 89 47 14 26 89 57 16 8B C3 E8 44 FF  // ..N&.G.&.W....D.
    3BB0: 8A 46 FA 32 E4 8B F0 8A 8C EE 4E E3 0A 26 D1 6F  // .F.2......N..&.o
    3BC0: 16 26 D1 5F 14 E2 F6 26 8A 57 2B 32 F6 8B F2 C1  // .&._...&.W+2....
    3BD0: E6 02 8B 84 CE 4E 8B 94 D0 4E 26 21 47 14 26 21  // .....N...N&!G.&!
    3BE0: 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C F6 4E 32 ED  // W.&.G*2......N2.
    3BF0: E3 0A 26 D1 67 14 26 D1 57 16 E2 F6 26 8B 47 14  // ..&.g.&.W...&.G.
    3C00: 26 8B 57 16 26 09 47 08 26 09 57 0A 26 8A 47 2C  // &.W.&.G.&.W.&.G,
    3C10: 32 E4 8B F0 03 F0 8B C3 FF 94 9A 4E 8D 66 FC 5A  // 2..........N.f.Z
    3C20: 59 5D C3 51 8B D8 E8 56 FC 26 8A 4F 2B 32 ED 8B  // Y].Q...V.&.O+2..
    3C30: F1 8A 8C EE 4E E3 0A 26 D1 6F 06 26 D1 5F 04 E2  // ....N..&.o.&._..
    3C40: F6 8B C3 E8 AE FE 26 8A 4F 2C 32 ED 8B F1 03 F1  // ......&.O,2.....
    3C50: 8B C3 FF 94 9A 4E 59 C3 8B D8 E8 22 FC 8B C3 E8  // .....NY...."....
    3C60: 55 FC 26 8B 47 04 26 8B 77 06 26 09 47 08 26 09  // U.&.G.&.w.&.G.&.
    3C70: 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // w.&.G,2.........
    3C80: 9A 4E C3 53 56 8B D8 E8 F5 FB 8B C3 E8 28 FC 26  // .N.SV........(.&
    3C90: 8B 47 04 26 8B 77 06 26 31 47 08 26 31 77 0A 26  // .G.&.w.&1G.&1w.&
    3CA0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 9A 4E 5E  // .G,2..........N^
    3CB0: 5B C3 53 51 56 8B D8 E8 C5 FB 8B C3 E8 F8 FB 26  // [.SQV..........&
    3CC0: 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 8B  // .O...&.g.&.W....
    3CD0: C3 E8 46 FC 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3  // ..F.&.O,2.......
    3CE0: FF 94 9A 4E 5E 59 5B C3 53 51 56 8B D8 E8 8F FB  // ...N^Y[.SQV.....
    3CF0: 8B C3 E8 C2 FB 26 8B 4F 04 E3 0A 26 D1 6F 0A 26  // .....&.O...&.o.&
    3D00: D1 5F 08 E2 F6 EB C8 52 8B D8 E8 72 FB 8B C3 E8  // ._.....R...r....
    3D10: A5 FB 8B F3 26 8B 47 04 26 8B 57 06 26 01 47 08  // ....&.G.&.W.&.G.
    3D20: 26 11 54 0A 8B C3 E8 F1 FB 26 8A 47 2C 32 E4 8B  // &.T......&.G,2..
    3D30: F0 03 F0 8B C3 FF 94 9A 4E 5A C3 52 8B D8 E8 3E  // ........NZ.R...>
    3D40: FB 8B C3 E8 71 FB 8B F3 26 8B 47 04 26 8B 57 06  // ....q...&.G.&.W.
    3D50: 26 29 47 08 26 19 54 0A EB CA 51 52 8B F0 E8 1E  // &)G.&.T...QR....
    3D60: FB 8B C6 E8 55 FC 26 8B 44 08 26 8B 54 0A 26 8B  // ....U.&.D.&.T.&.
    3D70: 5C 04 26 8B 4C 06 E8 F7 F2 26 89 44 0C 26 89 54  // \.&.L....&.D.&.T
    3D80: 0E 5A 59 C3 52 8B D0 E8 F5 FA 8B C2 E8 2C FC 8B  // .ZY.R........,..
    3D90: C2 E8 5C 08 5A C3 51 52 57 8B F0 E8 E1 FA 8B C6  // ..\.Z.QRW.......
    3DA0: E8 18 FC 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26  // ...&.D.&.T.&.\.&
    3DB0: 8B 4C 06 E8 36 F2 26 89 44 0C 26 89 54 0E 8C D7  // .L..6.&.D.&.T...
    3DC0: 8E C7 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B  // ..&.D.&.T.&.\.&.
    3DD0: 4C 06 E8 17 F2 26 89 5C 10 26 89 4C 12 E9 10 FD  // L....&.\.&.L....
    3DE0: 52 8B D0 E8 99 FA 8B C2 E8 D0 FB 8B C2 E8 D3 07  // R...............
    3DF0: 5A C3 51 52 8B D8 E8 86 FA 8B C3 E8 BD FB 8C D1  // Z.QR............
    3E00: 8E C1 26 8B 47 08 26 8B 57 0A 26 3B 57 06 75 0E  // ..&.G.&.W.&;W.u.
    3E10: 26 3B 47 04 75 08 26 C6 47 30 01 5A 59 C3 8B D0  // &;G.u.&.G0.ZY...
    3E20: 26 8B 47 0A 26 3B 47 06 72 08 75 0A 26 3B 57 04  // &.G.&;G.r.u.&;W.
    3E30: 73 04 33 C0 EB 03 B8 02 00 26 88 47 30 5A 59 C3  // s.3......&.G0ZY.
    3E40: 51 52 57 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // QRW..&.G,2......
    3E50: C3 FF 94 A6 4E 26 89 47 08 26 89 57 0A 8C D0 8E  // ....N&.G.&.W....
    3E60: C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D  // .&.G+2..........
    3E70: EE 4E 32 ED 8B 84 CE 4E 8B 94 D0 4E E3 06 D1 E0  // .N2....N...N....
    3E80: D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21 57 0A  // ........&!G.&!W.
    3E90: E9 4D FC 55 8B EC 51 52 57 83 EC 06 8B D8 26 8A  // .M.U..QRW.....&.
    3EA0: 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D EE 4E 32  // G+2...........N2
    3EB0: ED 8B 84 CE 4E 89 46 F4 8B 84 D0 4E 89 46 F6 E3  // ....N.F....N.F..
    3EC0: 08 D1 66 F4 D1 56 F6 E2 F8 8B 7E F4 8B 46 F6 89  // ..f..V....~..F..
    3ED0: 46 F8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // F.&.G,2.........
    3EE0: A6 4E 26 89 47 08 26 89 57 0A 8B C3 E8 47 F9 26  // .N&.G.&.W....G.&
    3EF0: 89 47 04 26 89 57 06 8B C7 F7 D0 8B 56 F6 F7 D2  // .G.&.W......V...
    3F00: 26 23 47 08 26 23 57 0A 26 89 47 14 26 89 57 16  // &#G.&#W.&.G.&.W.
    3F10: 26 21 7F 08 8B 46 F6 26 21 47 0A 8C D1 8D 77 35  // &!...F.&!G....w5
    3F20: 8E C1 26 80 3C 19 73 12 26 8B 4F 04 E3 0A 26 D1  // ..&.<.s.&.O...&.
    3F30: 67 08 26 D1 57 0A E2 F6 EB 10 26 8B 4F 04 E3 0A  // g.&.W.....&.O...
    3F40: 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 21 7F 08 8B 46  // &.o.&._...&!...F
    3F50: F8 26 21 47 0A 26 8B 57 14 26 8B 47 16 26 09 57  // .&!G.&.W.&.G.&.W
    3F60: 08 26 09 47 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .&.G.&.G,2......
    3F70: C3 FF 94 9A 4E 8D 66 FA 5F E9 A3 FC 52 8B D8 E8  // ....N.f._...R...
    3F80: FD F8 8B C3 E8 34 FA 26 8B 47 08 26 8B 57 0A 26  // .....4.&.G.&.W.&
    3F90: 85 57 06 75 06 26 85 47 04 74 05 B8 03 00 EB 03  // .W.u.&.G.t......
    3FA0: B8 01 00 26 88 47 30 5A C3 53 51 52 56 8B D8 26  // ...&.G0Z.SQRV..&
    3FB0: 8A 4F 2D 32 ED 8B F1 03 F1 FF 94 BE 4E 26 89 47  // .O-2........N&.G
    3FC0: 04 26 89 57 06 26 8A 47 2B 32 E4 8B F0 8A 8C EE  // .&.W.&.G+2......
    3FD0: 4E E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 47  // N..&.o.&._...&.G
    3FE0: 2B 8B F0 C1 E6 02 8B 84 CE 4E 8B 94 D0 4E 26 21  // +........N...N&!
    3FF0: 47 04 26 21 57 06 E9 BD F9 52 8B D8 E8 AA FF 26  // G.&!W....R.....&
    4000: 8B 47 04 26 8B 57 06 26 89 47 18 26 89 57 1A 5A  // .G.&.W.&.G.&.W.Z
    4010: C3 51 52 8B D8 E8 91 FF 8C D0 8E C0 26 8B 77 02  // .QR.........&.w.
    4020: 26 8B 74 02 81 3C 5A 5A 74 5B 26 8B 77 02 26 8B  // &.t..<ZZt[&.w.&.
    4030: 74 02 80 3C 63 75 E1 26 8B 77 02 26 FF 44 02 8B  // t..<cu.&.w.&.D..
    4040: C3 E8 21 F8 26 89 47 08 26 89 57 0A 8B C3 E8 FA  // ..!.&.G.&.W.....
    4050: F7 26 89 47 14 26 89 57 16 8C D1 8E C1 26 8B 57  // .&.G.&.W.....&.W
    4060: 04 26 8B 47 06 26 3B 47 0A 75 AD 26 3B 57 08 75  // .&.G.&;G.u.&;W.u
    4070: A7 26 8B 77 02 26 8B 04 26 03 47 14 8B DE 26 89  // .&.w.&..&.G...&.
    4080: 47 02 5A 59 C3 26 8B 5F 02 26 83 47 02 02 5A 59  // G.ZY.&._.&.G..ZY
    4090: C3 52 57 8B D8 8C D0 8E C0 26 8B 77 02 26 8B 74  // .RW......&.w.&.t
    40A0: 02 8A 54 01 84 D2 75 08 26 C7 47 22 00 00 EB 2F  // ..T...u.&.G".../
    40B0: 80 FA FF 75 14 26 8B 77 02 26 8B 3F 26 8B 34 26  // ...u.&.w.&.?&.4&
    40C0: 2B 75 02 26 89 77 22 EB 16 26 8B 07 E8 E3 02 8B  // +u.&.w"..&......
    40D0: F0 8A C2 32 E4 03 C0 03 F0 8B 04 26 89 47 22 26  // ...2.......&.G"&
    40E0: 8B 5F 02 26 83 47 02 02 5F 5A C3 8B D8 26 80 67  // ._.&.G.._Z...&.g
    40F0: 2F F9 26 8B 77 02 26 8B 74 02 8A 44 01 26 88 47  // /.&.w.&.t..D.&.G
    4100: 34 26 8B 5F 02 26 83 47 02 03 C3 8B D8 26 8B 77  // 4&._.&.G.....&.w
    4110: 02 26 8B 74 02 8B 74 01 26 89 77 20 EB E3 53 8B  // .&.t..t.&.w ..S.
    4120: D8 26 8A 47 2C 32 E4 24 03 26 80 67 2F F9 C1 E0  // .&.G,2.$.&.g/...
    4130: 09 26 09 47 2E E9 4F F5 8B D8 26 8B 77 02 26 8B  // .&.G..O...&.w.&.
    4140: 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00  // t..D.2.&.G.&.G..
    4150: 00 8B C3 E8 40 04 26 8B 5F 02 26 83 47 02 02 C3  // ....@.&._.&.G...
    4160: 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26  // ..&.w.&.t..D.2.&
    4170: 89 47 04 26 C7 47 06 00 00 8B C3 E8 08 04 EB D6  // .G.&.G..........
    4180: 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32  // SV..&.w.&.t..D.2
    4190: E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 06 04  // .&.G.&.G........
    41A0: E9 86 F4 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A  // ...SV..&.w.&.t..
    41B0: 44 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3  // D.2.&.G.&.G.....
    41C0: E8 F0 03 E9 63 F4 53 56 8B D8 26 8B 77 02 8B DE  // ....c.SV..&.w...
    41D0: 26 8B 5F 02 8B 5F 01 83 C3 03 26 01 5C 02 5E 5B  // &._.._....&.\.^[
    41E0: C3 51 52 8B D8 26 8B 77 02 26 83 44 02 02 26 8B  // .QR..&.w.&.D..&.
    41F0: 07 E8 A0 01 8B C8 26 8B 77 28 8A 44 01 32 E4 03  // ......&.w(.D.2..
    4200: C0 8B F1 03 F0 83 3C 00 74 4F 26 8B 77 28 8A 54  // ......<.tO&.w(.T
    4210: 01 32 F6 8B C3 E8 B0 01 26 88 47 31 26 8B 77 02  // .2......&.G1&.w.
    4220: 26 8B 34 8B 44 04 C1 E8 08 32 E4 24 7F C1 E8 02  // &.4.D....2.$....
    4230: 32 E4 24 1F 26 80 67 2F 07 C1 E0 0B 26 09 47 2E  // 2.$.&.g/....&.G.
    4240: 26 8B 37 26 8B 47 2E C1 E8 0B C1 E0 02 26 01 04  // &.7&.G.......&..
    4250: 26 C6 47 32 01 26 89 4F 28 5A 59 C3 53 8B D8 26  // &.G2.&.O(ZY.S..&
    4260: C6 47 32 82 5B C3 57 8B D8 8C D6 8E C6 26 80 7F  // .G2.[.W......&..
    4270: 2C 05 74 0A 26 8A 47 2C 26 3A 47 30 75 1E 26 8B  // ,.t.&.G,&:G0u.&.
    4280: 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01  // w.&.t.&...&.=.t.
    4290: 03 F7 26 8B 5F 02 26 89 77 02 5F C3 26 8B 5F 02  // ..&._.&.w._.&._.
    42A0: 26 83 47 02 03 5F C3 53 56 57 8B D8 8C D6 8E C6  // &.G.._.SVW......
    42B0: 26 80 7F 30 01 74 0A 26 8A 47 30 26 3A 47 2C 75  // &..0.t.&.G0&:G,u
    42C0: 20 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D  //  &.w.&.t.&...&.=
    42D0: 8B 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F 5E 5B  // .t...&._.&.w._^[
    42E0: C3 26 8B 5F 02 26 83 47 02 03 EB F1 53 56 57 8B  // .&._.&.G....SVW.
    42F0: D8 8C D0 8E C0 26 80 7F 30 01 74 E5 EB C3 55 8B  // .....&..0.t...U.
    4300: EC 53 51 52 57 8B D8 26 8B 77 02 26 8B 74 02 8A  // .SQRW..&.w.&.t..
    4310: 04 26 C6 47 3D 00 8C D1 8E C1 26 80 7F 3D 08 73  // .&.G=.....&..=.s
    4320: 20 26 8B 77 02 26 8A 57 3D 32 F6 26 8B 7C 02 03  //  &.w.&.W=2.&.|..
    4330: FA 8B F3 03 F2 8A 15 26 88 54 35 26 FE 47 3D EB  // .......&.T5&.G=.
    4340: D5 26 8B 7F 02 8A D0 32 F6 8B F2 C1 E6 02 8A 94  // .&.....2........
    4350: 1B 4F 26 01 55 02 26 8B 7F 28 8A 55 01 80 E2 07  // .O&.U.&..(.U....
    4360: 26 88 57 2D 26 8B 7F 28 8A 55 01 C0 EA 03 80 E2  // &.W-&..(.U......
    4370: 07 26 88 57 2B 26 8B 7F 28 8A 55 01 C0 EA 06 26  // .&.W+&..(.U....&
    4380: 88 57 2A 8A 94 1A 4F 26 88 57 2C 8D 66 F8 5F 5A  // .W*...O&.W,.f._Z
    4390: 59 5B 5D C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74  // Y[].SV..&.w....t
    43A0: 48 03 F0 8B D8 8B 74 1E 8B C6 03 C3 83 C0 04 5E  // H.....t........^
    43B0: 5B C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74 48 03  // [.SV..&.w....tH.
    43C0: F0 8B D8 8B 74 20 EB E0 8A C2 C3 16 07 55 8B EC  // ....t .......U..
    43D0: 53 51 56 57 83 EC 40 8B F8 89 46 B8 E8 D3 FF 8B  // SQVW..@...F.....
    43E0: D8 89 46 E0 26 8B 45 02 8B 5F 2E 03 D8 89 5E DE  // ..F.&.E.._....^.
    43F0: 83 46 DE 04 8B C7 E8 9B FF 89 46 E0 32 F6 8D 46  // .F........F.2..F
    4400: B8 E8 C4 FF 8A D0 32 F6 03 D2 8B 5E E0 03 DA 83  // ......2....^....
    4410: 3F 00 0F 84 65 01 88 46 E9 80 66 E7 F9 C6 46 EC  // ?...e..F..f...F.
    4420: 00 C7 46 D8 00 00 66 C7 46 D0 00 00 00 00 C7 46  // ..F...f.F......F
    4430: F6 00 00 C6 46 EA 01 EB 06 3C 01 0F 85 8C 00 8A  // ....F....<......
    4440: 56 E9 8A C2 32 E4 03 C0 8B 5E E0 03 D8 83 3F 00  // V...2....^....?.
    4450: 74 75 26 8B 45 02 8B 1F 03 D8 8B 47 04 32 E4 8B  // tu&.E......G.2..
    4460: C8 83 C1 09 32 ED 80 E1 FE 83 F9 00 74 07 D1 E9  // ....2.......t...
    4470: 33 C0 50 E2 FD 8B C4 8B D8 89 46 BA 85 C0 74 41  // 3.P.......F...tA
    4480: 83 C0 08 26 89 47 04 8A C2 32 E4 03 C0 8B 5E E0  // ...&.G...2....^.
    4490: 03 D8 26 8B 45 02 03 07 8B 5E BA 26 89 07 8B 5E  // ..&.E....^.&...^
    44A0: BA 26 8B 07 83 C0 06 26 89 47 02 8B 5E BA 8B 76  // .&.....&.G..^..v
    44B0: F6 26 89 77 06 8B 5E BA 89 5E F6 C6 46 EA 00 EB  // .&.w..^..^..F...
    44C0: 0A C6 46 EA 87 EB 04 C6 46 EA 83 8A 46 EA 32 E4  // ..F.....F...F.2.
    44D0: 83 F8 10 0F 8F 99 00 88 66 EA 8A 46 EA 32 E4 85  // ........f..F.2..
    44E0: C0 0F 8F 83 00 8C D0 8B 5E BA 8E C0 26 8B 5F 02  // ........^...&._.
    44F0: 89 5E E0 8B 5E BA 26 8B 5F 02 80 3F 5B 75 4A C6  // .^..^.&._..?[uJ.
    4500: 46 EA 10 8B 5E BA 26 8B 5F 06 89 5E F6 8B 5E BA  // F...^.&._..^..^.
    4510: 26 8B 1F 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80  // &...G.2......2..
    4520: E1 FE 03 E1 8B 5E F6 89 5E BA 85 DB 74 AC 26 8B  // .....^..^...t.&.
    4530: 1F 8B 47 04 C1 E8 08 32 E4 24 7F C1 E8 02 C1 E0  // ..G....2.$......
    4540: 02 8B 5E B8 26 29 07 EB 91 8D 46 B8 E8 AF FD 8A  // ..^.&)....F.....
    4550: D0 8D 46 B8 E8 2E 00 8A DA 32 FF C1 E3 02 8D 46  // ..F......2.....F
    4560: B8 FF 97 18 4F E9 72 FF 83 7E F6 00 0F 85 C9 FE  // ....O.r..~......
    4570: 80 7E EA 10 74 05 8A 46 EA EB 02 32 C0 8D 66 F8  // .~..t..F...2..f.
    4580: 5F 5E E9 0B FE C3 53 51 8B D8 26 8A 4F 04 32 ED  // _^....SQ..&.O.2.
    4590: E8 B2 E8 59 5B C3 53 51 8B D8 26 8A 4F 04 32 ED  // ...Y[.SQ..&.O.2.
    45A0: E8 AD E8 59 5B C3 53 8B D8 26 8A 47 04 32 E4 E6  // ...Y[.S..&.G.2..
    45B0: 80 5B C3 53 51 8B D8 26 8A 4F 04 32 ED E8 36 D8  // .[.SQ..&.O.2..6.
    45C0: 59 5B C3 53 8B D8 66 50 66 52 66 51 66 26 8B 47  // Y[.S..fPfRfQf&.G
    45D0: 08 66 26 8B 57 10 66 26 8B 4F 04 66 F7 F1 66 26  // .f&.W.f&.O.f..f&
    45E0: 89 47 0C 66 26 89 57 10 66 59 66 5A 66 58 5B C3  // .G.f&.W.fYfZfX[.
    45F0: 53 8B D8 66 50 66 52 66 51 66 26 8B 47 08 66 26  // S..fPfRfQf&.G.f&
    4600: 8B 4F 04 66 F7 E1 66 26 89 47 0C 66 26 89 57 10  // .O.f..f&.G.f&.W.
    4610: 66 59 66 5A 66 58 5B C3 53 57 8B D8 26 8B 5F 14  // fYfZfX[.SW..&._.
    4620: E8 52 EB 8B D0 66 C1 E8 10 92 5F 5B C3 53 57 8B  // .R...f...._[.SW.
    4630: D8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66 C1 E3  // .&.G.&.W.....f..
    4640: 10 8B DA C1 E3 02 E8 50 EB EB D8 53 52 57 8B D8  // .......P...SRW..
    4650: 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B C2 26  // &.G.&.W..f.....&
    4660: 8B 5F 14 E8 74 EA 5F 5A 5B C3 53 52 8B D8 26 8B  // ._..t._Z[.SR..&.
    4670: 47 1C 26 8B 57 1E 92 66 C1 E0 10 8B C2 26 8B 5F  // G.&.W..f.....&._
    4680: 26 8B 5F 01 E8 53 EA 5A 5B C3 53 52 56 8B F0 26  // &._..S.Z[.SRV..&
    4690: 8B 5C 26 8B 5F 01 E8 DC EA 8B D0 66 C1 E8 10 92  // .\&._......f....
    46A0: 26 89 44 1C 26 89 54 1E 5E 5A 5B C3 53 51 52 57  // &.D.&.T.^Z[.SQRW
    46B0: 8B D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B  // ..&.G.&.W..f....
    46C0: C2 8B C8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66  // ...&.G.&.W.....f
    46D0: C1 E3 10 8B DA C1 E3 02 8B C1 E8 30 EA 5F 5A 59  // ...........0._ZY
    46E0: 5B C3 8B D0 66 C1 E8 10 92 C3 1E 06 66 50 66 51  // [...f.......fPfQ
    46F0: 66 52 66 53 66 55 66 56 66 57 0E 1F 0A C0 75 06  // fRfSfUfVfW....u.
    4700: E8 37 01 E9 D8 00 3C 01 75 06 E8 67 01 E9 CE 00  // .7....<.u..g....
    4710: 3C 02 75 06 E8 9B 02 E9 C4 00 3C 03 75 0B E8 BF  // <.u.......<.u...
    4720: 03 8B EC 89 5E 0C E9 B5 00 3C 04 75 0B E8 CE 03  // ....^....<.u....
    4730: 8B EC 89 5E 0C E9 A6 00 3C 05 75 0B E8 F9 04 8B  // ...^....<.u.....
    4740: EC 89 56 10 E9 97 00 3C 06 75 11 E8 76 04 8B EC  // ..V....<.u..v...
    4750: 89 5E 0C 89 4E 14 89 56 10 E9 82 00 3C 07 75 10  // .^..N..V....<.u.
    4760: E8 68 05 8B EC 88 7E 0D 89 4E 14 89 56 10 EB 6E  // .h....~..N..V..n
    4770: 3C 08 75 0A E8 AB 04 8B EC 88 7E 0D EB 60 3C 09  // <.u.......~..`<.
    4780: 75 05 E8 A4 05 EB 57 3C 0A 75 10 E8 EC 05 8B EC  // u.....W<.u......
    4790: 89 4E 14 89 7E 00 8C 46 1C EB 43 3C 0B 75 0B E8  // .N..~..F..C<.u..
    47A0: E6 05 8B EC 66 89 4E 14 EB 34 3C 10 75 0A E8 DB  // ....f.N..4<.u...
    47B0: 05 8B EC 89 5E 0C EB 26 3C 11 75 0D E8 0F 06 8B  // ....^..&<.u.....
    47C0: EC 89 5E 0C 89 4E 14 EB 15 3C 15 75 0F E8 3A 06  // ..^..N...<.u..:.
    47D0: 8B EC 89 5E 0C EB 07 B8 4F 01 EB 02 32 C0 8B EC  // ...^....O...2...
    47E0: 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66  // .F.f_f^f]f[fZfYf
    47F0: 58 07 1F C3 50 1E 2E 8E 1E A7 03 8C D8 A3 C7 4D  // X...P..........M
    4800: A3 D7 4D A3 E9 4D 2E 8E 1E 9F 03 A3 AA 04 1F 58  // ..M..M.........X
    4810: CB 00 30 31 2E 30 30 00 56 45 53 41 00 03 68 02  // ..01.00.VESA..h.
    4820: 00 00 03 00 00 00 00 00 00 00 00 03 32 0F 75 01  // ............2.u.
    4830: 00 00 04 01 00 00 AA 47 00 00 B9 3F 00 8B DF 83  // .......G...?....
    4840: C7 04 FC 66 33 C0 F3 66 AB 8B FB BE B0 47 B9 22  // ...f3..f.....G."
    4850: 00 F3 A4 06 1F 8C 4F 08 8C 47 10 8C 4F 18 8C 4F  // ......O..G..O..O
    4860: 1C 8C 4F 20 83 C7 22 89 7F 0E 0E 1F E8 62 D4 B0  // ..O .."......b..
    4870: 4F 32 E4 C3 56 51 57 B9 10 00 66 33 C0 F3 66 AB  // O2..VQW...f3..f.
    4880: 5F 59 8C DB 06 1F C7 05 BB 00 C6 45 02 07 C7 45  // _Y.........E...E
    4890: 04 40 00 C7 45 06 40 00 C6 45 1B 04 C6 45 18 01  // .@..E.@..E...E..
    48A0: C6 45 1A 01 C6 45 1E 01 66 C7 45 3E 00 84 D7 17  // .E...E..f.E>....
    48B0: 8E DB E8 91 BE 66 0B C0 0F 84 EE 00 06 1F 66 89  // .....f........f.
    48C0: 45 28 8C C8 66 C1 E0 10 B8 2D 4C 66 89 45 0C 81  // E(..f....-Lf.E..
    48D0: F9 FF 81 0F 84 CF 00 80 E5 03 B2 01 53 8E DB BE  // ............S...
    48E0: 80 1C E8 1D D2 5B 06 1F 0F 84 BE 00 53 E8 8A D4  // .....[......S...
    48F0: 66 89 45 12 C7 45 16 08 10 8D 5C 0C E8 A4 E8 66  // f.E..E....\....f
    4900: 89 45 1F 66 89 45 36 8D 5C 10 E8 96 E8 66 89 45  // .E.f.E6.\....f.E
    4910: 23 66 89 45 3A 8D 5C 08 E8 88 E8 0A C0 75 04 5B  // #f.E:.\......u.[
    4920: E9 87 00 E8 54 D4 66 C1 E8 10 3D 58 02 74 0D 3D  // ....T.f...=X.t.=
    4930: 5E 01 74 08 77 0A C6 45 17 08 EB 04 C6 45 17 0E  // ^.t.w..E.....E..
    4940: E8 FE D3 80 F9 00 74 04 C6 45 1B 06 2E A1 A1 03  // ......t..E......
    4950: 89 45 08 8D 5C 04 E8 4A E8 66 8B C8 66 C1 E9 10  // .E..\..J.f..f...
    4960: D3 E0 89 45 10 89 45 32 B0 08 D2 E0 88 45 19 8D  // ...E..E2.....E..
    4970: 5C 14 E8 2E E8 5B 3D 00 03 77 2F 53 8B D8 B8 00  // \....[=..w/S....
    4980: 03 33 D2 F7 F3 5B FE C8 88 45 1D 88 45 35 88 45  // .3...[...E..E5.E
    4990: 34 8E DB 57 53 BE 80 1C E8 02 BE 5B 5F 0B C9 75  // 4..WS......[_..u
    49A0: 05 06 1F 83 25 FE 32 E4 EB 02 B4 03 B0 4F 8E DB  // ....%.2......O..
    49B0: 5E C3 81 FB FF 81 74 67 0A FF 75 04 8B C3 EB 21  // ^.....tg..u....!
    49C0: F6 C7 08 75 60 8B CB B2 01 BE 20 1C E8 33 D1 74  // ...u`..... ..3.t
    49D0: 54 E8 85 D3 0A C0 75 0B 66 C1 E8 10 80 E7 80 0A  // T.....u.f.......
    49E0: C7 EB 3C E8 A2 C1 74 05 E8 C7 BE EB 00 E8 C4 C2  // ..<...t.........
    49F0: BE 20 1C E8 7B BD 74 2D E8 98 00 E8 2C 00 66 BB  // . ..{.t-....,.f.
    4A00: 20 1C 00 1C E8 49 D3 BE 00 1C E8 4C D3 66 C1 E8  //  ....I.....L.f..
    4A10: 10 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 BB BD B0  // ...2....t..@....
    4A20: 4F 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0 8E C0  // O2....O...V.3...
    4A30: BE 20 1C E8 44 D3 8B C8 66 C1 E8 10 8B D0 C1 E9  // . ..D...f.......
    4A40: 03 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16 84 04  // .&..J......&....
    4A50: 26 C6 06 51 04 00 26 C6 06 50 04 00 26 C6 06 49  // &..Q..&..P..&..I
    4A60: 04 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04 10 07  // .b&..L...&......
    4A70: 5E C3 01 0F 00 0A 00 00 00 00 00 40 05 0F FF 00  // ^..........@....
    4A80: 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01  // ................
    4A90: 00 0F 00 FC BA C4 03 B8 00 01 EF B9 04 00 B4 01  // ................
    4AA0: BE 0A 4A AC 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03  // ..J.............
    4AB0: EF B9 09 00 BA CE 03 32 E4 BE 0E 4A 8A C4 EE AC  // .......2...J....
    4AC0: 42 EE 4A FE C4 E2 F5 BA DA 03 EC B9 14 00 BA C0  // B.J.............
    4AD0: 03 32 E4 BE 17 4A 8A C4 EE AC EE FE C4 E2 F7 C3  // .2...J..........
    4AE0: BE 00 1C E8 73 D2 66 C1 E8 10 8B D8 E8 43 D2 75  // ....s.f......C.u
    4AF0: 05 E8 2F D2 75 04 B8 4F 00 C3 B8 4F 03 C3 83 E1  // ../.u..O...O....
    4B00: 0F 0F 84 BB 00 0A D2 75 0C B8 00 1C E8 1D 03 83  // .......u........
    4B10: C3 11 E9 A6 00 80 FA 01 75 33 8B FB BB C9 05 B9  // ........u3......
    4B20: 08 00 FC E8 4B E6 66 AB 43 E2 F8 66 C1 E7 10 66  // ....K.f.C..f...f
    4B30: C1 EF 10 B9 00 01 BA 00 01 0E 1F E8 F7 BE 06 1F  // ................
    4B40: B8 01 1C B9 07 00 8B DF E8 E1 02 EB 6E 80 FA 02  // ............n...
    4B50: 75 6E 8B F3 06 1F FC BB C9 05 B9 08 00 66 AD E8  // un...........f..
    4B60: 6A E5 43 E2 F8 06 56 0E 1F BB D0 05 E8 02 E6 8A  // j.C...V.........
    4B70: D0 80 E2 03 66 C1 E8 10 8B C8 BE 00 1C E8 82 CF  // ....f...........
    4B80: BB CE 05 E8 EB E5 8B C8 66 C1 E8 10 8B D0 B0 18  // ........f.......
    4B90: B7 01 E8 E8 B8 5B 07 53 81 C3 00 04 B8 02 1C B9  // .....[.S........
    4BA0: 07 00 E8 87 02 5E 8B FE 66 C1 E7 10 66 C1 EF 10  // .....^..f...f...
    4BB0: B9 00 01 BA 00 01 0E 1F E8 C9 BE B0 4F 32 E4 C3  // ............O2..
    4BC0: 32 C0 C3 00 E8 6B D1 74 53 BE 00 1C 80 FB 00 74  // 2....k.tS......t
    4BD0: 18 80 FB 01 75 05 E8 A9 D1 EB 1D 80 FB 02 75 10  // ....u.........u.
    4BE0: 8B C1 E8 5C D1 D3 E8 8B C8 E8 05 BE 74 2E EB 08  // ...\........t...
    4BF0: 80 FB 03 75 24 E8 00 D1 E8 46 D1 8B D8 D3 E3 50  // ...u$....F.....P
    4C00: 33 C0 BA 00 03 3B DA 77 05 BA FF FF EB 04 F7 F3  // 3....;.w........
    4C10: 8B D0 58 8B C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03  // ..X...O..2...O..
    4C20: C3 00 0A DB 75 07 8A EF E8 DF BF EB 05 E8 C4 BF  // ....u...........
    4C30: 8A F8 B0 4F 32 E4 C3 00 E8 F7 D0 74 2C BE 00 1C  // ...O2......t,...
    4C40: E8 16 D1 66 C1 E8 10 F6 C4 40 75 1D 0A FF 75 05  // ...f.....@u...u.
    4C50: E8 1E 00 EB 0F 80 FF 01 75 14 BB 13 00 E8 11 E5  // ........u.......
    4C60: D1 E8 8B D0 B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0  // .....O2...O...2.
    4C70: C3 52 53 66 50 81 E2 FF 02 D1 E2 8B C2 40 66 C1  // .RSfP........@f.
    4C80: E0 10 8B C2 BB 13 00 E8 42 E4 BB 12 00 E8 3C E4  // ........B.....<.
    4C90: 66 58 5B 5A C3 9C 1E 06 66 50 66 51 66 52 66 53  // fX[Z....fPfQfRfS
    4CA0: 66 55 66 56 66 57 0E 1F E8 38 E5 E8 8A FF E8 57  // fUfVfW...8.....W
    4CB0: E5 8B EC 89 56 10 89 46 18 66 5F 66 5E 66 5D 66  // ....V..F.f_f^f]f
    4CC0: 5B 66 5A 66 59 66 58 07 1F 9D CB E8 64 D0 74 54  // [fZfYfX.....d.tT
    4CD0: F6 C3 7F 75 38 53 BE 00 1C E8 A6 D0 F7 E2 66 C1  // ...u8S........f.
    4CE0: E2 10 8B D0 66 81 E1 FF FF 00 00 66 03 D1 E8 50  // ....f......f...P
    4CF0: D0 80 E2 FC 66 D3 E2 66 81 E2 FF FF FF 02 8D 5C  // ....f..f.......\
    4D00: 18 66 8B C2 E8 FC E3 5B E8 CE BC EB 0F 80 FB 82  // .f.....[........
    4D10: 74 C3 80 FB 01 75 0A E8 B3 BC 32 FF B0 4F 32 E4  // t....u....2..O2.
    4D20: C3 32 C0 C3 B0 4F B4 03 C3 E8 06 D0 74 47 80 FF  // .2...O......tG..
    4D30: 20 74 08 66 C1 E7 10 66 C1 EF 10 81 F9 00 01 77  //  t.f...f.......w
    4D40: 31 0A DB 74 05 80 FB 80 75 10 32 F6 E8 A5 BE 3C  // 1..t....u.2....<
    4D50: 06 74 02 B6 01 E8 2C BD EB 13 80 FB 01 75 13 32  // .t....,......u.2
    4D60: F6 E8 90 BE 3C 06 74 02 B6 01 E8 C8 BC B0 4F 32  // ....<.t.......O2
    4D70: E4 C3 32 C0 C3 B0 4F B4 03 C3 0E 07 BF 02 4E 2E  // ..2...O.......N.
    4D80: 8B 0E 00 4E B8 4F 00 C3 32 C0 C3 00 0A DB 75 06  // ...N.O..2.....u.
    4D90: B7 04 B3 10 EB 2F 80 FB 01 75 1D 53 32 C9 0A FF  // ...../...u.S2...
    4DA0: 74 02 B1 01 E8 0A BE B1 01 0A FF 74 02 B1 00 E8  // t..........t....
    4DB0: EB BE E8 D4 BB 5B EB 0D 80 FB 02 75 0D E8 03 BE  // .....[.....u....
    4DC0: 8A F8 C0 E7 02 B0 4F 32 E4 C3 B8 4F 03 C3 80 FB  // ......O2...O....
    4DD0: 01 75 09 33 C0 E8 69 BE 74 2B EB 24 80 FB 07 75  // .u.3..i.t+.$...u
    4DE0: 24 0A FF 75 0E B0 82 E8 93 B6 0A C9 74 12 B9 03  // $..u........t...
    4DF0: 03 EB 0D 0B C9 B1 00 74 02 B1 03 B0 82 E8 7D B6  // .......t......}.
    4E00: B0 4F 32 E4 C3 B0 4F B4 03 C3 80 E3 01 0A DB 75  // .O2...O........u
    4E10: 05 BB 02 01 EB 0C 33 C0 53 E8 81 BE E8 C9 C5 5B  // ......3.S......[
    4E20: 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3 C3 00 00 00  // t..O2...O.......
    4E30: C0 00 00 00 00 00 00 00 00 00 00 00 00 E5 4D 00  // ..............M.
    4E40: C0 00 00 00 00 00 00 00 00 00 00 00 00 1A 00 00  // ................
    4E50: 00 00 C0 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4E60: 00 00 00 00 00 00 00 00 88 00 34 00 4E 00 54 00  // ..........4.N.T.
    4E70: 00 00 00 00 00 00 5F 57 C3 90 50 66 52 E8 F4 FF  // ......_W..PfR...
    4E80: FF FF 81 EF 10 00 00 00 2E 8B 07 66 BA F8 0C EF  // ...........f....
    4E90: 66 BA FC 0C ED 32 C0 66 8B F8 66 5A 58 C3 66 B8  // f....2.f..fZX.f.
    4EA0: 4F 03 66 52 66 56 53 57 50 66 58 32 E4 66 50 58  // O.fRfVSWPfX2.fPX
    4EB0: 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03 C3 90 66 B8  // _[f^fZ..f.O...f.
    4EC0: 4F 03 C3 90 66 52 E8 11 00 00 00 ED 66 5A C3 90  // O...fR......fZ..
    4ED0: 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B D7 50  // fR......fZ..f..P
    4EE0: 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83 C2 04  // 3.f..f......f...
    4EF0: 58 C3 F0 37 E3 37 E3 37 E3 37 CE 37 CE 37 CE 37  // X..7.7.7.7.7.7.7
    4F00: CE 37 10 34 87 34 B1 34 F2 35 F1 35 F1 35 37 36  // .7.4.4.4.5.5.576
    4F10: 9C 36 CC 36 89 37 B2 37 B2 37 29 36 1C 36 1C 36  // .6.6.7.7.7)6.6.6
    4F20: 1C 36 1C 36 1C 36 37 36 9C 36 CC 36 89 37 B7 37  // .6.6.676.6.6.7.7
    4F30: FD 37 B2 37 B2 37 FF FF FF FF FF FF 00 00 FF FF  // .7.7.7..........
    4F40: 00 00 FF FF 00 00 FF 00 00 00 FF 00 00 00 FF 00  // ................
    4F50: 00 00 FF 00 00 00 00 00 08 10 00 08 10 18 00 08  // ................
    4F60: 10 18 14 32 01 14 32 02 22 46 03 02 46 03 39 33  // ...2..2."F..F.93
    4F70: 03 ED 32 03 15 32 04 2E 32 04 3E 32 04 14 32 03  // ..2..2..2.>2..2.
    4F80: 00 00 00 00 C1 39 00 02 C1 39 01 02 C1 39 02 02  // .....9...9...9..
    4F90: C1 39 03 02 C1 39 04 02 C1 39 05 02 BB 3B 00 02  // .9...9...9...;..
    4FA0: BB 3B 01 02 BB 3B 02 02 BB 3B 03 02 BB 3B 04 02  // .;...;...;...;..
    4FB0: BB 3B 05 02 F0 3B 00 02 F0 3B 01 02 F0 3B 02 02  // .;...;...;...;..
    4FC0: F0 3B 03 02 F0 3B 04 02 F0 3B 05 02 2B 3E 00 02  // .;...;...;..+>..
    4FD0: 2B 3E 01 02 2B 3E 02 02 2B 3E 03 02 2B 3E 04 02  // +>..+>..+>..+>..
    4FE0: 2B 3E 05 02 2B 3E 00 02 2B 3E 01 02 2B 3E 02 02  // +>..+>..+>..+>..
    4FF0: 2B 3E 03 02 2B 3E 04 02 2B 3E 05 02 F2 3C 00 02  // +>..+>..+>...<..
    5000: F2 3C 01 02 F2 3C 02 02 F2 3C 03 02 F2 3C 04 02  // .<...<...<...<..
    5010: F2 3C 05 02 2E 3D 00 02 2E 3D 01 02 2E 3D 02 02  // .<...=...=...=..
    5020: 2E 3D 03 02 2E 3D 04 02 2E 3D 05 02 9F 3C 00 02  // .=...=...=...<..
    5030: 9F 3C 01 02 9F 3C 02 02 9F 3C 03 02 9F 3C 04 02  // .<...<...<...<..
    5040: 9F 3C 05 02 D3 3C 00 02 D3 3C 01 02 D3 3C 02 02  // .<...<...<...<..
    5050: D3 3C 03 02 D3 3C 04 02 D3 3C 05 02 83 40 00 00  // .<...<...<...@..
    5060: B6 40 01 00 B6 40 02 00 A3 40 00 00 91 3F 00 02  // .@...@...@...?..
    5070: 8A 3D 00 02 8A 3D 01 02 8A 3D 02 02 8A 3D 03 02  // .=...=...=...=..
    5080: 8A 3D 04 02 8A 3D 05 02 A9 3F 00 02 FE 41 05 00  // .=...=...?...A..
    5090: FE 41 01 00 FE 41 00 00 FE 41 02 00 3F 42 00 00  // .A...A...A..?B..
    50A0: 3F 42 02 00 84 42 00 00 14 3F 00 02 14 3F 01 02  // ?B...B...?...?..
    50B0: 14 3F 02 02 14 3F 03 02 14 3F 04 02 14 3F 05 02  // .?...?...?...?..
    50C0: D0 40 00 00 F8 40 00 00 79 41 00 00 F4 41 00 00  // .@...@..yA...A..
    50D0: D8 3D 00 02 D8 3D 01 02 D8 3D 02 02 D8 3D 03 02  // .=...=...=...=..
    50E0: D8 3D 04 02 D8 3D 05 02 F3 41 00 01 F3 41 00 01  // .=...=...A...A..
    50F0: F7 3A 00 02 F7 3A 01 02 F7 3A 02 02 F7 3A 03 02  // .:...:...:...:..
    5100: F7 3A 04 02 F7 3A 05 02 18 41 00 00 F4 41 00 00  // .:...:...A...A..
    5110: F4 41 00 00 F4 41 00 00 29 40 00 00 1B 3C 00 02  // .A...A..)@...<..
    5120: 1B 3C 01 02 1B 3C 02 02 1B 3C 03 02 1B 3C 04 02  // .<...<...<...<..
    5130: 1B 3C 05 02 4A 3C 00 02 4A 3C 01 02 4A 3C 02 02  // .<..J<..J<..J<..
    5140: 4A 3C 03 02 4A 3C 04 02 4A 3C 05 02 80 3C 00 02  // J<..J<..J<...<..
    5150: 80 3C 01 02 80 3C 02 02 80 3C 03 02 80 3C 04 02  // .<...<...<...<..
    5160: 80 3C 05 02 3B 41 00 00 5E 41 00 00 1C 3D 01 02  // .<..;A..^A...=..
    5170: 1C 3D 02 02 78 3D 01 02 78 3D 02 02 A6 00 01 01  // .=..x=..x=......
    5180: DE B5 66 B6 BE B6 12 D3 08 DD 7E B7 00 00 B0 D3  // ..f.......~.....
    5190: 00 00 92 B8 92 B9 26 BB 48 BC 14 C1 9C C2 A4 C2  // ......&.H.......
    51A0: 32 DB 64 DB 2C C6 3E C7 60 C7 00 00 00 00 00 00  // 2.d.,.>.`.......
    51B0: 00 00 00 00 00 00 EE C7 00 00 00 00 EE E6 84 E7  // ................
    51C0: 0E E9 AE CA 26 CB 9A CB 00 00 00 00 D8 CB 00 00  // ....&...........
    51D0: FA CB 14 CC 94 CC 5A CD 0A CF 54 CF D8 ED EA CF  // ......Z...T.....
    51E0: 28 D0 00 D1 00 00 C6 EA 54 D2 0A ED CA D3 E0 E9  // (.......T.......
    51F0: FC D5 00 00 5C D6 66 D6 A2 D6 1E D8 70 DF 26 D8  // ....\.f.....p.&.
    5200: 8C D9 A6 DA 00 00 74 DB 00 00 98 EC 00 00 AC C2  // ......t.........
    5210: DA C5 00 00 00 00 00 00 9A DF E0 E0 46 E4 92 E6  // ............F...
    5220: 84 DC 4A 00 01 01 00 00 00 00 00 00 04 52 E8 52  // ..J..........R.R
    5230: 54 53 88 53 00 00 50 B5 00 00 D6 53 B2 54 BE 54  // TS.S..P....S.T.T
    5240: E6 54 5A 55 72 55 00 00 38 B5 00 00 00 00 00 00  // .TZUrU..8.......
    5250: 00 00 16 58 48 5C 74 59 00 00 C4 B4 E0 B4 C6 5C  // ...XH\tY.......\
    5260: E6 6B 00 00 9C B3 A8 B4 00 00 88 B5 E4 00 01 02  // .k..............
    5270: 4E 0C 80 02 C0 00 90 01 2D 00 20 00 40 00 01 00  // N.......-. .@...
    5280: 03 00 00 00 00 00 00 00 02 00 E6 55 D6 09 80 02  // ...........U....
    5290: A0 00 E0 01 2D 00 10 00 60 00 0A 00 02 00 00 00  // ....-...`.......
    52A0: 00 00 08 08 06 00 12 3C A0 0F 20 03 00 01 58 02  // .......<.. ...X.
    52B0: 1C 00 28 00 80 00 01 00 04 00 00 00 00 00 00 00  // ..(.............
    52C0: 00 00 6A 3C 64 19 00 04 40 01 00 03 26 00 18 00  // ..j<d...@...&...
    52D0: 88 00 03 00 06 00 00 00 00 00 00 00 06 00 55 3C  // ..............U<
    52E0: 30 2A 00 05 08 02 C0 03 28 00 60 00 70 00 01 00  // 0*......(.`.p...
    52F0: 03 00 00 00 00 00 00 00 00 00 E9 3C 30 2A 00 05  // ...........<0*..
    5300: 98 01 00 04 2A 00 30 00 70 00 01 00 03 00 00 00  // ....*.0.p.......
    5310: 00 00 00 00 00 00 EA 3C 8F 2F 78 05 D0 01 1A 04  // .......<./x.....
    5320: 27 00 58 00 90 00 03 00 04 00 00 00 00 00 00 00  // '.X.............
    5330: 02 00 EB 3C 48 3F 40 06 30 02 B0 04 32 00 40 00  // ...<H?@.0...2.@.
    5340: C0 00 01 00 03 00 00 00 00 00 00 00 00 00 EC 3C  // ...............<
    5350: 6C 00 02 02 01 00 32 0F 98 53 00 00 30 75 00 00  // l.....2..S..0u..
    5360: 00 00 00 00 40 7E 05 00 00 00 00 00 00 00 00 00  // ....@~..........
    5370: C0 27 09 00 00 00 00 00 92 F4 00 00 00 00 84 03  // .'..............
    5380: 9A 0B 70 17 00 00 00 00 28 88 04 00 00 00 00 00  // ..p.....(.......
    5390: 00 00 00 00 00 00 00 00 40 9C C4 09 10 27 20 03  // ........@....' .
    53A0: 3E 40 10 27 10 27 10 27 FF 00 00 00 00 00 00 00  // >@.'.'.'........
    53B0: 00 00 00 00 00 00 00 00 00 00 00 00 34 00 02 01  // ............4...
    53C0: 00 00 00 00 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A  // .....*.*..***..*
    53D0: 00 2A 2A 15 00 2A 2A 2A 15 15 15 15 15 3F 15 3F  // .**..***.....?.?
    53E0: 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F  // ..???..?.???.???
    53F0: 4E 00 01 03 00 00 00 00 00 00 00 00 00 00 00 00  // N...............
    5400: 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00  // ................
    5410: 00 00 20 00 00 00 00 00 1D 3C 01 00 00 00 00 00  // .. ......<......
    5420: 00 48 C8 00 07 5A 5A 07 7D 00 00 00 00 00 00 00  // .H...ZZ.}.......
    5430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 DC 00  // ................
    5440: 01 01 68 48 6A 48 6B 48 69 48 68 48 6A 48 6B 48  // ..hHjHkHiHhHjHkH
    5450: 69 48 90 00 00 00 00 08 08 08 08 00 00 6C 48 6E  // iH...........lHn
    5460: 48 6F 48 6D 48 6C 48 6E 48 6F 48 6D 48 91 00 00  // HoHmHlHnHoHmH...
    5470: 00 00 08 08 08 08 00 00 70 48 72 48 73 48 71 48  // ........pHrHsHqH
    5480: 70 48 72 48 73 48 71 48 92 00 00 00 00 08 08 08  // pHrHsHqH........
    5490: 08 00 00 74 48 76 48 77 48 75 48 74 48 76 48 77  // ...tHvHwHuHtHvHw
    54A0: 48 75 48 93 00 00 00 00 08 08 08 08 00 00 78 48  // HuH...........xH
    54B0: 7A 48 7B 48 79 48 78 48 7A 48 7B 48 79 48 94 00  // zH{HyHxHzH{HyH..
    54C0: 00 00 00 08 08 08 08 00 00 7C 48 7E 48 7F 48 7D  // .........|H~H.H}
    54D0: 48 7C 48 7E 48 7F 48 7D 48 95 00 00 00 00 08 08  // H|H~H.H}H.......
    54E0: 08 08 00 00 98 48 9A 48 9B 48 99 48 98 48 9A 48  // .....H.H.H.H.H.H
    54F0: 9B 48 99 48 96 00 00 00 00 01 01 01 01 00 00 80  // .H.H............
    5500: 48 82 48 83 48 81 48 80 48 82 48 83 48 81 48 97  // H.H.H.H.H.H.H.H.
    5510: 00 00 00 00 08 08 08 08 00 00 0C 00 01 05 00 00  // ................
    5520: 00 00 00 00 20 00 28 00 01 01 8D 48 00 01 8D 48  // .... .(....H...H
    5530: 08 02 8D 48 10 03 8D 48 18 04 8D 48 1A 05 8D 48  // ...H...H...H...H
    5540: 1C 06 83 01 05 3C 83 01 06 3D 83 01 11 41 74 00  // .....<...=...At.
    5550: 01 01 10 01 06 12 11 01 16 12 13 01 06 6A 14 01  // .............j..
    5560: 16 6A 16 01 06 55 17 01 16 55 19 01 06 EA 1A 01  // .j...U...U......
    5570: 16 EA 65 01 16 E9 66 01 0A E9 21 01 0A 12 22 01  // ..e...f...!...".
    5580: 0A 6A 23 01 0A 55 24 01 0A EA 45 01 16 EB 46 01  // .j#..U$...E...F.
    5590: 0A EB 75 01 16 EC 76 01 0A EC D2 01 16 70 D4 01  // ..u...v......p..
    55A0: 0A 70 D8 01 16 71 D9 01 0A 71 E2 01 16 72 E4 01  // .p...q...q...r..
    55B0: 0A 72 E8 01 16 73 E9 01 0A 73 F5 01 16 74 F6 01  // .r...s...s...t..
    55C0: 0A 74 18 00 02 03 01 08 02 04 08 01 02 04 00 00  // .t..............
    55D0: 00 00 00 00 00 00 00 00 00 00 A4 02 07 01 00 4D  // ...............M
    55E0: 00 25 06 00 00 A4 25 00 00 1A 00 00 00 02 00 00  // .%....%.........
    55F0: 03 00 00 00 00 00 00 00 00 00 00 23 00 4D 00 00  // ...........#.M..
    5600: 00 1B 02 00 00 A1 01 27 01 8B 00 E5 00 BD 01 69  // .......'.......i
    5610: 02 00 00 24 02 59 02 83 02 9D 02 F0 4F 01 00 53  // ...$.Y......O..S
    5620: 07 00 00 00 00 00 00 01 03 00 00 00 00 00 00 00  // ................
    5630: 00 08 00 00 00 00 00 00 00 00 00 00 00 07 00 01  // ................
    5640: 00 00 00 00 00 05 00 00 40 00 00 00 00 00 00 00  // ........@.......
    5650: 00 07 00 01 00 00 00 00 00 01 00 00 00 00 00 00  // ................
    5660: 00 00 00 00 00 00 0B EE 02 00 00 00 00 00 00 07  // ................
    5670: 03 00 00 00 00 00 00 20 03 00 00 00 00 00 00 39  // ....... .......9
    5680: 03 00 00 00 00 00 00 02 FF 00 00 00 00 00 00 03  // ................
    5690: FF 00 00 00 00 00 00 04 FF 00 00 00 00 00 00 05  // ................
    56A0: FF 00 00 00 00 00 00 06 FF 00 00 00 00 00 00 07  // ................
    56B0: FF 00 00 00 00 00 00 08 FF 00 00 00 00 00 00 00  // ................
    56C0: 08 84 03 00 00 00 00 00 00 02 FF 00 00 00 00 00  // ................
    56D0: 00 03 FF 00 00 00 00 00 00 04 FF 00 00 00 00 00  // ................
    56E0: 00 05 FF 00 00 00 00 00 00 06 FF 00 00 00 00 00  // ................
    56F0: 00 07 FF 00 00 00 00 00 00 08 FF 00 00 00 00 00  // ................
    5700: 00 01 08 00 00 00 98 53 00 00 00 00 00 80 00 00  // .......S........
    5710: 00 00 04 E6 FF 34 6C 00 00 00 00 00 80 00 00 00  // .....4l.........
    5720: 00 05 E6 FF 64 96 00 00 00 00 00 80 00 00 00 00  // ....d...........
    5730: 06 E6 FF 3C BE 00 00 00 00 00 80 00 00 00 00 07  // ...<............
    5740: E6 FF 78 E6 00 00 00 00 00 80 00 00 00 00 08 E6  // ..x.............
    5750: FF B4 0E 01 00 00 00 00 80 00 00 00 00 09 E6 FF  // ................
    5760: 78 31 01 00 00 00 00 80 00 00 00 00 0A CD FF FC  // x1..............
    5770: 4D 01 00 00 00 00 80 00 00 00 00 00 02 00 20 03  // M............. .
    5780: 00 00 E8 03 30 75 00 00 00 00 00 E8 03 00 00 E8  // ....0u..........
    5790: 03 18 F0 01 00 00 00 00 04 00 00 00 08 CF 00 00  // ................
    57A0: 70 11 01 00 A8 DE 00 00 00 00 00 00 50 C3 00 00  // p...........P...
    57B0: 01 B4 FF C0 DA 00 00 34 1B 01 00 60 EA 00 00 00  // .......4...`....
    57C0: 00 00 00 F0 D2 00 00 02 9B FF 90 E2 00 00 F8 24  // ...............$
    57D0: 01 00 18 F6 00 00 00 00 00 00 A8 DE 00 00 03 82  // ................
    57E0: FF 48 EE 00 00 BC 2E 01 00 D0 01 01 00 00 00 00  // .H..............
    57F0: 00 48 EE 00 00 01 17 00 00 80 00 00 00 00 04 23  // .H.............#
    5800: 00 00 00 28 00 23 00 23 00 00 00 00 00 23 00 69  // ...(.#.#.....#.i
    5810: 00 00 00 00 00 6C 00 02 00 69 00 50 00 50 00 00  // .....l...i.P.P..
    5820: 00 00 00 50 00 00 00 90 00 90 00 90 23 00 05 00  // ...P........#...
    5830: 00 00 00 01 01 FC 4D 01 00 18 F0 01 00 E8 03 00  // ......M.........
    5840: 00 E8 03 01 06 00 00 04 01 00 01 04 01 00 02 04  // ................
    5850: 01 00 02 04 01 00 02 04 01 00 02 04 01 01 03 00  // ................
    5860: 08 00 00 FC 0A 00 00 00 08 00 00 F4 65 00 00 02  // ............e...
    5870: 08 00 00 F4 65 00 00 00 01 00 00 00 00 00 5E 01  // ....e.........^.
    5880: 01 03 8A 06 48 00 00 00 FB 00 00 00 12 00 00 00  // ....H...........
    5890: 05 01 00 00 02 00 0A 00 14 31 00 11 1E 22 08 00  // .........1..."..
    58A0: 0A 00 13 31 00 11 1E 21 80 00 0A 00 13 32 00 11  // ...1...!.....2..
    58B0: 20 22 00 02 0A 00 13 33 00 11 20 21 00 04 0A 00  //  ".....3.. !....
    58C0: 13 34 00 11 21 21 05 00 00 00 14 31 74 00 7A 00  // .4..!!.....1t.z.
    58D0: 00 00 13 31 8F 00 95 00 00 00 13 32 AA 00 B0 00  // ...1.......2....
    58E0: 00 00 13 33 C5 00 CB 00 00 00 13 34 E0 00 E6 00  // ...3.......4....
    58F0: 00 00 01 1E 22 00 00 00 04 0C 01 00 10 01 00 00  // ...."...........
    5900: 02 00 00 00 01 04 90 00 02 04 01 00 FF 01 1E 21  // ...............!
    5910: 00 00 00 04 0C 01 00 10 02 00 00 08 00 00 00 01  // ................
    5920: 04 91 00 02 04 02 00 FF 01 20 22 00 00 00 04 0C  // ......... ".....
    5930: 01 00 20 02 00 00 80 00 00 00 01 04 92 00 02 04  // .. .............
    5940: 03 00 FF 01 20 21 00 00 00 04 0C 01 00 30 02 00  // .... !.......0..
    5950: 00 00 02 00 00 01 04 93 00 02 04 04 00 FF 01 21  // ...............!
    5960: 21 00 00 00 04 0C 01 00 40 02 00 00 00 04 00 00  // !.......@.......
    5970: 01 04 94 00 02 04 05 00 FF 05 00 00 00 1E 22 27  // .............."'
    5980: 01 2D 01 00 00 1E 21 32 01 38 01 00 00 20 22 3D  // .-....!2.8... "=
    5990: 01 43 01 00 00 20 21 48 01 4E 01 00 00 21 21 53  // .C... !H.N...!!S
    59A0: 01 59 01 00 00 01 00 11 01 14 31 14 04 0F 00 FF  // .Y........1.....
    59B0: 01 00 11 01 13 31 14 04 0F 00 FF 01 00 11 01 13  // .....1..........
    59C0: 32 14 04 0F 00 FF 01 00 11 01 13 33 14 04 0F 00  // 2..........3....
    59D0: FF 01 00 11 01 13 34 14 04 0F 00 FF D4 02 02 01  // ......4.........
    59E0: 00 00 00 00 00 00 00 00 00 00 00 00 14 00 00 00  // ................
    59F0: DC 0C 14 00 00 00 D5 0C 33 03 00 00 D4 0C 00 02  // ........3.......
    5A00: 0C 00 00 0B 29 00 20 0F D3 0B E0 1F 12 00 ED 09  // ....). .........
    5A10: 10 A8 08 00 92 09 00 04 0C 00 94 09 00 04 0C 00  // ................
    5A20: 93 09 00 04 0C 00 6D 09 1F 10 14 01 2E 08 00 04  // ......m.........
    5A30: 0C 00 30 08 80 0C 0C 00 2F 08 00 04 0C 00 4F 09  // ..0...../.....O.
    5A40: B4 00 01 00 1E 09 00 04 0C 00 F3 09 1B 90 00 00  // ................
    5A50: E9 09 AA AA FF 00 EA 09 AA AA FF 00 EE 09 14 0C  // ................
    5A60: 00 00 EF 09 10 0C 00 00 E5 09 FC FB FC FC E6 09  // ................
    5A70: FC F8 F3 FC E7 09 FC FC FC FC E8 09 FC FC F9 FC  // ................
    5A80: F0 09 08 20 C3 00 F1 09 06 20 C3 00 DA 09 FC 3D  // ... ..... .....=
    5A90: 04 00 D6 09 03 F8 6F 00 F2 09 10 10 87 01 F4 09  // ......o.........
    5AA0: 30 44 70 08 F5 09 1F 20 02 03 DB 09 02 03 00 00  // 0Dp.... ........
    5AB0: E1 09 00 00 00 00 E2 09 08 00 00 00 74 09 C7 00  // ............t...
    5AC0: 00 00 76 09 80 30 00 00 7F 09 59 92 38 02 80 09  // ..v..0....Y.8...
    5AD0: 51 92 86 02 3B 08 1C 3E 00 70 56 08 3D 3B 00 00  // Q...;..>.pV.=;..
    5AE0: 57 08 10 10 00 00 5A 08 91 08 00 00 E7 0D 99 00  // W.....Z.........
    5AF0: C1 50 E8 0D B9 00 C1 50 E9 0D 91 00 C1 50 EA 0D  // .P.....P.....P..
    5B00: 99 00 C1 50 51 08 99 00 C1 50 52 08 99 00 C1 50  // ...PQ....PR....P
    5B10: 53 08 99 00 C1 50 54 08 91 00 C1 50 5C 08 91 09  // S....PT....P\...
    5B20: 00 00 83 08 15 59 00 00 59 08 91 49 00 00 5B 08  // .....Y..Y..I..[.
    5B30: A1 09 00 00 5D 08 91 03 00 00 58 08 93 11 00 00  // ....].....X.....
    5B40: 64 08 01 00 00 00 84 08 91 21 00 00 3D 08 49 92  // d........!..=.I.
    5B50: 24 00 80 08 91 39 00 00 35 08 1E 00 F9 00 41 08  // $....9..5.....A.
    5B60: 33 6C 8D F6 42 08 1A 6E 8D EE 77 08 91 3B 00 00  // 3l..B..n..w..;..
    5B70: 70 08 91 79 00 00 EB 0D 25 D0 80 40 EC 0D 35 70  // p..y....%..@..5p
    5B80: 80 40 ED 0D 3D 50 80 40 EE 0D 25 50 36 40 66 08  // .@..=P.@..%P6@f.
    5B90: 3D 50 80 40 67 08 65 F0 43 40 68 08 3D 50 3E 40  // =P.@g.e.C@h.=P>@
    5BA0: 69 08 75 50 80 40 6D 08 93 09 01 00 71 08 91 09  // i.uP.@m.....q...
    5BB0: 00 00 88 08 91 09 00 00 78 08 93 2B 00 00 6B 08  // ........x..+..k.
    5BC0: 91 09 00 00 72 08 13 20 00 00 6C 08 91 09 00 00  // ....r.. ..l.....
    5BD0: 74 08 91 0C 00 00 4D 08 91 09 00 00 4E 08 91 09  // t.....M.....N...
    5BE0: 00 00 73 08 81 09 00 00 75 08 91 09 00 00 7D 08  // ..s.....u.....}.
    5BF0: 91 09 00 00 89 08 91 19 00 00 3E 08 C9 97 2C 00  // ..........>...,.
    5C00: 7F 08 91 61 00 00 7E 08 11 0B 03 00 6F 08 91 5F  // ...a..~.....o.._
    5C10: 00 00 3C 08 07 00 00 80 81 09 91 09 00 00 82 09  // ..<.............
    5C20: 13 0C 00 00 85 09 93 01 00 00 83 09 91 09 00 00  // ................
    5C30: 84 09 81 09 00 00 86 09 D1 01 00 00 87 09 05 08  // ................
    5C40: 00 00 88 09 91 41 00 00 7B 09 91 1C 00 00 7C 09  // .....A..{.....|.
    5C50: 91 09 00 00 70 05 00 04 0C 00 8E 0C 00 00 00 00  // ....p...........
    5C60: 83 08 15 59 00 00 84 08 91 21 00 00 85 08 91 21  // ...Y.....!.....!
    5C70: 00 00 88 08 91 09 00 00 89 08 91 19 00 00 8A 08  // ................
    5C80: 13 4E 00 00 50 08 11 11 02 00 3F 08 28 28 72 72  // .N..P.....?.((rr
    5C90: 40 08 50 50 28 28 43 08 80 80 00 00 CD 09 10 00  // @.PP((C.........
    5CA0: 00 00 C0 09 40 0F 50 00 60 08 E1 09 02 00 00 00  // ....@.P.`.......
    5CB0: 7D 00 01 01 01 02 04 20 00 06 20 00 00 03 91 0A  // }...... .. .....
    5CC0: 02 92 0A 09 10 00 01 82 04 20 00 06 20 00 00 03  // ......... .. ...
    5CD0: 91 0A 08 20 00 00 03 92 0A 09 26 00 01 03 02 0E  // ... ......&.....
    5CE0: 00 06 10 00 00 03 0E 00 02 0F 00 09 38 00 01 83  // ............8...
    5CF0: 02 0E 00 06 10 00 00 03 0E 00 08 20 00 00 03 0F  // ........... ....
    5D00: 00 09 4E 00 01 05 02 82 00 06 10 00 00 03 82 00  // ..N.............
    5D10: 02 83 00 09 60 00 01 85 02 82 00 06 10 00 00 03  // ....`...........
    5D20: 82 00 08 20 00 00 03 83 00 09 76 00 00 00 1F 0F  // ... ......v.....
    5D30: 02 02 D1 01 CC 02 F6 0D A8 0E 64 0E 00 00 07 01  // ..........d.....
    5D40: 08 02 32 10 00 00 2D 00 62 60 0F 00 00 50 02 05  // ..2...-.b`...P..
    5D50: 53 09 04 00 00 00 00 08 00 0B 00 40 00 61 00 02  // S..........@.a..
    5D60: 02 00 00 00 00 00 32 54 07 00 00 00 00 00 00 32  // ......2T.......2
    5D70: 10 00 00 42 00 62 60 0F 00 01 50 02 05 53 09 04  // ...B.b`...P..S..
    5D80: 00 00 00 00 08 00 0B 00 40 00 61 91 02 02 00 00  // ........@.a.....
    5D90: 00 00 00 32 54 07 00 00 00 00 00 4B 34 47 34 31  // ...2T......K4G41
    5DA0: 33 32 35 46 45 5F 31 5F 33 35 56 5F 31 32 37 30  // 325FE_1_35V_1270
    5DB0: 00 32 10 00 00 43 00 62 60 0F 00 01 50 02 05 53  // .2...C.b`...P..S
    5DC0: 09 04 00 00 00 00 08 01 0B 00 40 00 61 66 02 02  // ..........@.af..
    5DD0: 00 00 00 00 00 32 54 07 00 00 00 00 00 48 35 47  // .....2T......H5G
    5DE0: 43 34 48 32 34 41 4A 52 5F 31 5F 33 35 56 5F 31  // C4H24AJR_1_35V_1
    5DF0: 32 37 30 00 32 10 00 00 43 00 62 60 0F 00 01 50  // 270.2...C.b`...P
    5E00: 02 05 53 09 04 00 00 00 00 08 02 0B 00 40 00 61  // ..S..........@.a
    5E10: 03 02 02 00 00 00 00 00 32 54 07 00 00 00 00 00  // ........2T......
    5E20: 45 44 57 34 30 33 32 42 41 42 47 5F 31 5F 33 35  // EDW4032BABG_1_35
    5E30: 56 5F 31 32 37 30 00 32 10 00 00 42 00 62 60 0F  // V_1270.2...B.b`.
    5E40: 00 00 50 02 05 53 09 04 00 00 00 00 08 03 0B 00  // ..P..S..........
    5E50: 40 00 61 91 02 02 00 00 00 00 00 32 54 07 00 00  // @.a........2T...
    5E60: 00 00 00 4B 34 47 34 31 33 32 35 46 45 5F 31 5F  // ...K4G41325FE_1_
    5E70: 33 35 56 5F 31 32 37 30 00 32 10 00 00 43 00 62  // 35V_1270.2...C.b
    5E80: 60 0F 00 00 50 02 05 53 09 04 00 00 00 00 08 04  // `...P..S........
    5E90: 0B 00 40 00 61 66 02 02 00 00 00 00 00 32 54 07  // ..@.af.......2T.
    5EA0: 00 00 00 00 00 48 35 47 43 34 48 32 34 41 4A 52  // .....H5GC4H24AJR
    5EB0: 5F 31 5F 33 35 56 5F 31 32 37 30 00 32 10 00 00  // _1_35V_1270.2...
    5EC0: 43 00 62 60 0F 00 00 50 02 05 53 09 04 00 00 00  // C.b`...P..S.....
    5ED0: 00 08 05 0B 00 40 00 61 03 02 02 00 00 00 00 00  // .....@.a........
    5EE0: 32 54 07 00 00 00 00 00 45 44 57 34 30 33 32 42  // 2T......EDW4032B
    5EF0: 41 42 47 5F 31 5F 33 35 56 5F 31 32 37 30 00 1B  // ABG_1_35V_1270..
    5F00: 00 24 00 80 0A 04 8C 0A 04 95 0A 04 96 0A 04 01  // .$..............
    5F10: 00 44 03 00 44 0C 00 44 0F 00 44 FF FF 00 FF FF  // .D..D..D..D.....
    5F20: FF 00 72 91 60 50 F8 CF 00 E0 32 C8 8F 60 0C E0  // ..r.`P....2..`..
    5F30: E6 30 04 00 00 01 00 03 00 52 00 E6 3E 01 00 00  // .0.......R..>...
    5F40: 60 30 FF FF FF 01 72 66 60 50 08 C0 00 E0 32 CC  // `0....rf`P....2.
    5F50: 8F 60 0C E0 1C 30 04 04 01 00 00 03 00 52 00 1C  // .`...0.......R..
    5F60: 3E 01 00 00 60 80 FF FF FF 02 72 03 60 50 08 C0  // >...`.....r.`P..
    5F70: 00 E1 32 C8 8F 60 0C E0 E9 30 04 04 00 00 00 03  // ..2..`...0......
    5F80: 00 63 00 E9 3E 01 00 00 60 70 FF FF FF 03 72 91  // .c..>...`p....r.
    5F90: 60 50 F8 CF 00 E0 32 C8 8F 60 0C E0 E6 30 04 00  // `P....2..`...0..
    5FA0: 00 01 00 03 00 52 00 E6 3E 01 00 00 60 30 FF FF  // .....R..>...`0..
    5FB0: FF 04 72 66 60 50 08 C0 00 E0 32 CC 8F 60 0C E0  // ..rf`P....2..`..
    5FC0: 1C 30 04 04 01 00 00 03 00 52 00 1C 3E 01 00 00  // .0.......R..>...
    5FD0: 60 80 FF FF FF 05 72 03 60 50 08 C0 00 E1 32 C8  // `.....r.`P....2.
    5FE0: 8F 60 0C E0 E9 30 04 04 00 00 00 03 00 63 00 E9  // .`...0.......c..
    5FF0: 3E 01 00 00 60 70 00 00 00 00 2A 00 34 00 2F 0A  // >...`p....*.4./.
    6000: 04 30 0A 00 D5 0A 04 2C 0A 04 28 0A 04 29 0A 04  // .0.....,..(..)..
    6010: 2A 0A 04 2B 0A 04 81 0A 04 8B 0A 04 5F 0A 04 DD  // *..+........_...
    6020: 09 84 DE 09 84 FF FF 00 6C 6B 00 01 33 30 00 00  // ........lk..30..
    6030: 00 00 00 00 22 CC 1C 00 62 10 12 0E 20 57 0A 09  // ...."...b... W..
    6040: 8F 03 E1 01 00 20 43 00 2A 01 14 20 BA 88 00 A0  // ..... C.*.. ....
    6050: 00 00 00 00 05 03 0A 0C 1E 0F 10 0F 40 9C 00 01  // ............@...
    6060: 33 30 00 00 00 00 00 00 22 CC 1C 00 62 18 23 13  // 30......"...b.#.
    6070: 40 57 0B 0B 12 44 B1 02 00 22 64 00 3A 03 14 20  // @W...D..."d.:.. 
    6080: CA 88 00 A0 00 00 00 00 07 03 0D 11 2B 12 13 10  // ............+...
    6090: 60 EA 00 01 33 30 00 00 00 00 00 00 22 CC 1C 00  // `...30......"...
    60A0: 84 A4 34 1D 60 57 0B 0D 98 05 12 04 00 24 85 00  // ..4.`W.......$..
    60B0: 4A 06 14 20 DA 88 00 A0 00 00 00 00 0A 05 14 19  // J.. ............
    60C0: 41 17 19 11 F8 24 01 01 33 30 00 00 00 00 00 00  // A....$..30......
    60D0: 22 CC 1C 00 C6 AC 45 24 80 57 0B 0F 9C 86 22 05  // ".....E$.W....".
    60E0: 00 46 A6 00 5A 08 14 20 6A 89 00 A0 00 00 00 00  // .F..Z.. j.......
    60F0: 0C 07 19 1E 52 1B 1D 12 90 5F 01 01 33 30 00 00  // ....R...._..30..
    6100: 00 00 00 00 22 CC 1C 00 08 39 57 2B A0 57 0C 11  // ...."....9W+.W..
    6110: A1 07 23 06 00 48 C7 00 6A 0B 14 20 7A 89 00 A0  // ..#..H..j.. z...
    6120: 00 00 00 00 0F 09 1D 23 62 1F 22 14 A0 86 01 01  // .......#b.".....
    6130: 33 30 00 00 00 00 00 00 22 CC 1C 00 29 BD 57 2F  // 30......"...).W/
    6140: B0 57 0C 12 23 48 D3 06 00 48 C7 00 72 0C 14 20  // .W..#H...H..r.. 
    6150: 7A 89 00 A0 00 00 00 00 10 0A 20 26 6D 21 24 14  // z......... &m!$.
    6160: 74 B7 01 01 33 30 00 00 00 00 00 00 22 CC 1C 00  // t...30......"...
    6170: 6B C5 68 36 C0 57 0D 13 27 C9 B3 07 00 4A E7 00  // k.h6.W..'....J..
    6180: 7A 0E 14 20 7A 89 00 A0 00 00 00 00 12 0C 25 2B  // z.. z.........%+
    6190: 7B 24 28 15 94 05 02 01 55 50 00 00 00 00 00 00  // {$(.....UP......
    61A0: 22 CC 1C 00 AD CD 79 3C C0 57 0E 14 2C 4A 94 08  // ".....y<.W..,J..
    61B0: 00 4C 07 01 03 00 14 20 7A 89 00 A0 03 00 00 00  // .L..... z.......
    61C0: 14 0E 29 2F 89 27 2D 16 1C 19 02 01 55 50 00 00  // ..)/.'-.....UP..
    61D0: 00 00 00 00 22 CC 1C 00 CE D5 8A 42 D0 57 0E 15  // ...."......B.W..
    61E0: 30 CB 74 09 00 4E 27 01 0B 02 14 20 7A 89 00 A0  // 0.t..N'.... z...
    61F0: 03 00 00 00 16 0F 2D 34 97 2A 31 16 F0 49 02 01  // ......-4.*1..I..
    6200: 55 50 00 00 00 00 00 00 22 CC 1C 00 10 DE 8B 47  // UP......"......G
    6210: E0 57 0E 16 B3 0B 45 0A 00 4E 27 01 13 04 14 20  // .W....E..N'.... 
    6220: 7A 89 00 A0 03 00 00 00 18 11 30 37 A4 2C 34 17  // z.........07.,4.
    6230: 40 9C 00 02 55 50 00 00 00 00 00 00 22 AA 1C 00  // @...UP......"...
    6240: A5 9C 33 13 40 55 0A 0C 94 84 F1 02 00 24 83 00  // ..3.@U.......$..
    6250: 43 03 14 20 BA 88 00 A0 00 00 00 00 08 06 0C 0E  // C.. ............
    6260: 2F 14 15 10 60 EA 00 02 55 50 00 00 00 00 00 00  // /...`...UP......
    6270: 22 AA 1C 00 08 AD 35 1E 50 55 0C 0D 9C 86 72 04  // ".....5.PU....r.
    6280: 00 24 83 00 4B 07 14 20 BA 88 00 A0 00 00 00 00  // .$..K.. ........
    6290: 0C 09 13 16 47 19 1D 11 80 38 01 02 77 70 00 00  // ....G....8..wp..
    62A0: 00 00 00 00 22 AA 1C 00 6B 39 47 26 50 55 0E 0E  // ...."...k9G&PU..
    62B0: A1 07 F3 05 00 46 A3 00 54 09 14 20 3A 89 00 A0  // .....F..T.. :...
    62C0: 00 00 00 00 0F 0C 18 1B 5F 1C 22 12 90 5F 01 02  // ........_.".._..
    62D0: 77 70 00 00 00 00 00 00 22 AA 1C 00 6B 41 48 2C  // wp......"...kAH,
    62E0: 50 55 0F 0E A5 88 B3 06 00 46 A6 00 54 0B 14 20  // PU.......F..T.. 
    62F0: 6A 89 00 A0 00 00 00 00 11 0C 1C 21 6B 1E 26 13  // j..........!k.&.
    6300: A0 86 01 02 77 70 00 00 00 00 00 00 22 AA 1C 00  // ....wp......"...
    6310: 6B C5 48 2F 60 55 0F 0F 27 C9 73 07 00 46 A6 00  // k.H/`U..'.s..F..
    6320: 5C 0C 14 20 6A 89 00 A0 00 00 00 00 12 0C 1E 24  // \.. j..........$
    6330: 77 20 28 13 74 B7 01 02 77 70 00 00 00 00 00 00  // w (.t...wp......
    6340: 22 AA 1C 00 6B C5 68 2F 70 55 0F 10 27 C9 73 07  // "...k.h/pU..'.s.
    6350: 00 4A E6 00 64 0C 14 20 6A 89 00 A0 00 00 00 00  // .J..d.. j.......
    6360: 12 0C 1E 24 77 21 28 14 94 05 02 02 99 90 00 00  // ...$w!(.........
    6370: 00 00 00 00 22 DD 1C 00 CE 59 6B 3B 70 55 12 11  // ...."....Yk;pU..
    6380: 30 CB 54 09 00 4A E7 00 6D 00 14 20 7A 89 00 A0  // 0.T..J..m.. z...
    6390: 02 00 00 00 17 0F 25 2D 95 26 31 15 F0 49 02 02  // ......%-.&1..I..
    63A0: 99 90 00 00 00 00 00 00 22 F0 9C 00 31 6A 7D 47  // ........"...1j}G
    63B0: 80 55 12 12 38 CD 35 0B 00 4C 07 01 75 04 14 20  // .U..8.5..L..u.. 
    63C0: 7A 89 00 A0 02 00 00 00 1B 12 2D 36 B3 2B 39 16  // z.........-6.+9.
    63D0: 20 4E 00 03 99 90 00 00 00 00 00 00 22 AA 1C 00  //  N.........."...
    63E0: 60 8C 11 09 C0 54 0B 07 10 C3 10 01 00 20 41 00  // `....T....... A.
    63F0: 15 00 14 20 9A 88 80 A1 00 00 04 C0 04 01 06 09  // ... ............
    6400: 11 0B 11 0C 40 9C 00 03 99 90 00 00 00 00 00 00  // ....@...........
    6410: 22 AA 1C 00 60 18 13 11 E0 54 0C 09 97 84 31 02  // "...`....T....1.
    6420: 00 20 41 00 25 04 14 20 9A 88 C0 A2 00 00 04 C0  // . A.%.. ........
    6430: 07 01 0B 11 23 10 18 0E 80 38 01 03 99 90 00 00  // ....#....8......
    6440: 00 00 00 00 22 AA 1C 00 E7 B4 36 23 20 55 0E 0D  // ....".....6# U..
    6450: 25 48 73 04 00 44 82 00 45 0B 14 20 2A 89 80 A5  // %Hs..D..E.. *...
    6460: 00 00 04 C0 0E 08 16 1C 47 1B 26 11 90 5F 01 03  // ........G.&.._..
    6470: 99 90 00 00 00 00 00 00 22 AA 1C 00 29 BD 47 28  // ........"...).G(
    6480: 30 55 0E 0E 29 C9 03 05 00 66 A3 00 4D 0D 14 20  // 0U..)....f..M.. 
    6490: BA 89 40 A6 00 00 04 C0 10 0A 19 1F 50 1E 2A 11  // ..@.........P.*.
    64A0: A0 86 01 03 77 70 00 00 00 00 00 00 22 AA 1C 00  // ....wp......"...
    64B0: 6B 41 68 2B 50 55 0D 0F AA 09 94 05 00 6A E3 00  // kAh+PU.......j..
    64C0: 54 0E 14 20 BA 89 C0 A6 00 00 04 C0 11 0C 1B 20  // T.. ........... 
    64D0: 59 20 2B 12 74 B7 01 03 77 70 00 00 00 00 00 00  // Y +.t...wp......
    64E0: 22 AA 1C 00 CE CD 79 32 70 55 0E 11 30 CB 54 06  // ".....y2pU..0.T.
    64F0: 00 6C 05 01 64 01 14 20 DA 89 80 A7 02 00 04 C0  // .l..d.. ........
    6500: 14 0F 1F 24 65 25 31 13 94 05 02 03 77 70 00 00  // ...$e%1.....wp..
    6510: 00 00 00 00 22 AA 1C 00 10 D6 7A 35 80 55 0E 13  // ....".....z5.U..
    6520: 34 4C 05 07 00 6C 05 01 6C 03 14 20 DA 89 00 A8  // 4L...l..l.. ....
    6530: 02 00 04 C0 16 11 20 25 70 28 35 14 A4 2C 02 03  // ...... %p(5..,..
    6540: 77 70 00 00 00 00 00 00 22 AA 1C 00 73 62 7C 3F  // wp......"...sb|?
    6550: A0 55 0F 15 BA 0D 06 08 00 6C 05 01 7C 06 14 20  // .U.......l..|.. 
    6560: DA 89 C0 A9 02 00 04 C0 19 14 27 2C 80 2D 3B 15  // ..........',.-;.
    6570: F0 49 02 03 77 70 00 00 00 00 00 00 22 AA 1C 00  // .I..wp......"...
    6580: 94 E6 7C 42 B0 55 11 16 3C 4E 66 08 00 6C 05 01  // ..|B.U..<Nf..l..
    6590: 04 07 14 20 DA 89 00 A4 03 00 04 C0 1A 15 29 2E  // ... ..........).
    65A0: 86 2F 3D 17 6C 6B 00 04 33 30 00 00 00 00 00 00  // ./=.lk..30......
    65B0: 22 CC 1C 00 62 10 12 0E 20 57 0A 09 8F 03 E1 01  // "...b... W......
    65C0: 00 20 43 00 2A 01 14 20 BA 88 00 A0 00 00 00 00  // . C.*.. ........
    65D0: 05 03 0A 0C 1E 0F 10 0F 40 9C 00 04 33 30 00 00  // ........@...30..
    65E0: 00 00 00 00 22 CC 1C 00 62 18 23 13 40 57 0B 0B  // ...."...b.#.@W..
    65F0: 12 44 B1 02 00 22 64 00 3A 03 14 20 CA 88 00 A0  // .D..."d.:.. ....
    6600: 00 00 00 00 07 03 0D 11 2B 12 13 10 60 EA 00 04  // ........+...`...
    6610: 33 30 00 00 00 00 00 00 22 CC 1C 00 84 A4 34 1D  // 30......".....4.
    6620: 60 57 0B 0D 98 05 12 04 00 24 85 00 4A 06 14 20  // `W.......$..J.. 
    6630: DA 88 00 A0 00 00 00 00 0A 05 14 19 41 17 19 11  // ............A...
    6640: F8 24 01 04 33 30 00 00 00 00 00 00 22 CC 1C 00  // .$..30......"...
    6650: C6 AC 45 24 80 57 0B 0F 9C 86 22 05 00 46 A6 00  // ..E$.W...."..F..
    6660: 5A 08 14 20 6A 89 00 A0 00 00 00 00 0C 07 19 1E  // Z.. j...........
    6670: 52 1B 1D 12 90 5F 01 04 33 30 00 00 00 00 00 00  // R...._..30......
    6680: 22 CC 1C 00 08 39 57 2B A0 57 0C 11 A1 07 23 06  // "....9W+.W....#.
    6690: 00 48 C7 00 6A 0B 14 20 7A 89 00 A0 00 00 00 00  // .H..j.. z.......
    66A0: 0F 09 1D 23 62 1F 22 14 A0 86 01 04 33 30 00 00  // ...#b.".....30..
    66B0: 00 00 00 00 22 CC 1C 00 29 BD 57 2F B0 57 0C 12  // ...."...).W/.W..
    66C0: 23 48 D3 06 00 48 C7 00 72 0C 14 20 7A 89 00 A0  // #H...H..r.. z...
    66D0: 00 00 00 00 10 0A 20 26 6D 21 24 14 74 B7 01 04  // ...... &m!$.t...
    66E0: 33 30 00 00 00 00 00 00 22 CC 1C 00 6B C5 68 36  // 30......"...k.h6
    66F0: C0 57 0D 13 27 C9 B3 07 00 4A E7 00 7A 0E 14 20  // .W..'....J..z.. 
    6700: 7A 89 00 A0 00 00 00 00 12 0C 25 2B 7B 24 28 15  // z.........%+{$(.
    6710: 94 05 02 04 55 50 00 00 00 00 00 00 22 CC 1C 00  // ....UP......"...
    6720: AD CD 79 3C C0 57 0E 14 2C 4A 94 08 00 4C 07 01  // ..y<.W..,J...L..
    6730: 03 00 14 20 7A 89 00 A0 03 00 00 00 14 0E 29 2F  // ... z.........)/
    6740: 89 27 2D 16 1C 19 02 04 55 50 00 00 00 00 00 00  // .'-.....UP......
    6750: 22 CC 1C 00 CE D5 8A 42 D0 57 0E 15 30 CB 74 09  // "......B.W..0.t.
    6760: 00 4E 27 01 0B 02 14 20 7A 89 00 A0 03 00 00 00  // .N'.... z.......
    6770: 16 0F 2D 34 97 2A 31 16 F0 49 02 04 55 50 00 00  // ..-4.*1..I..UP..
    6780: 00 00 00 00 22 CC 1C 00 10 DE 8B 47 E0 57 0E 16  // ...."......G.W..
    6790: B3 0B 45 0A 00 4E 27 01 13 04 14 20 7A 89 00 A0  // ..E..N'.... z...
    67A0: 03 00 00 00 18 11 30 37 A4 2C 34 17 40 9C 00 05  // ......07.,4.@...
    67B0: 55 50 00 00 00 00 00 00 22 AA 1C 00 A5 9C 33 13  // UP......".....3.
    67C0: 40 55 0A 0C 94 84 F1 02 00 24 83 00 43 03 14 20  // @U.......$..C.. 
    67D0: BA 88 00 A0 00 00 00 00 08 06 0C 0E 2F 14 15 10  // ............/...
    67E0: 60 EA 00 05 55 50 00 00 00 00 00 00 22 AA 1C 00  // `...UP......"...
    67F0: 08 AD 35 1E 50 55 0C 0D 9C 86 72 04 00 24 83 00  // ..5.PU....r..$..
    6800: 4B 07 14 20 BA 88 00 A0 00 00 00 00 0C 09 13 16  // K.. ............
    6810: 47 19 1D 11 80 38 01 05 77 70 00 00 00 00 00 00  // G....8..wp......
    6820: 22 AA 1C 00 6B 39 47 26 50 55 0E 0E A1 07 F3 05  // "...k9G&PU......
    6830: 00 46 A3 00 54 09 14 20 3A 89 00 A0 00 00 00 00  // .F..T.. :.......
    6840: 0F 0C 18 1B 5F 1C 22 12 90 5F 01 05 77 70 00 00  // ...._.".._..wp..
    6850: 00 00 00 00 22 AA 1C 00 6B 41 48 2C 50 55 0F 0E  // ...."...kAH,PU..
    6860: A5 88 B3 06 00 46 A6 00 54 0B 14 20 6A 89 00 A0  // .....F..T.. j...
    6870: 00 00 00 00 11 0C 1C 21 6B 1E 26 13 A0 86 01 05  // .......!k.&.....
    6880: 77 70 00 00 00 00 00 00 22 AA 1C 00 6B C5 48 2F  // wp......"...k.H/
    6890: 60 55 0F 0F 27 C9 73 07 00 46 A6 00 5C 0C 14 20  // `U..'.s..F..\.. 
    68A0: 6A 89 00 A0 00 00 00 00 12 0C 1E 24 77 20 28 13  // j..........$w (.
    68B0: 74 B7 01 05 77 70 00 00 00 00 00 00 22 AA 1C 00  // t...wp......"...
    68C0: 6B C5 68 2F 70 55 0F 10 27 C9 73 07 00 4A E6 00  // k.h/pU..'.s..J..
    68D0: 64 0C 14 20 6A 89 00 A0 00 00 00 00 12 0C 1E 24  // d.. j..........$
    68E0: 77 21 28 14 94 05 02 05 99 90 00 00 00 00 00 00  // w!(.............
    68F0: 22 DD 1C 00 CE 59 6B 3B 70 55 12 11 30 CB 54 09  // "....Yk;pU..0.T.
    6900: 00 4A E7 00 6D 00 14 20 7A 89 00 A0 02 00 00 00  // .J..m.. z.......
    6910: 17 0F 25 2D 95 26 31 15 F0 49 02 05 99 90 00 00  // ..%-.&1..I......
    6920: 00 00 00 00 22 F0 9C 00 31 6A 7D 47 80 55 12 12  // ...."...1j}G.U..
    6930: 38 CD 35 0B 00 4C 07 01 75 04 14 20 7A 89 00 A0  // 8.5..L..u.. z...
    6940: 02 00 00 00 1B 12 2D 36 B3 2B 39 16 20 4E 00 06  // ......-6.+9. N..
    6950: 99 90 00 00 00 00 00 00 22 AA 1C 00 60 8C 11 09  // ........"...`...
    6960: C0 54 0B 07 10 C3 10 01 00 20 41 00 15 00 14 20  // .T....... A.... 
    6970: 9A 88 80 A1 00 00 04 C0 04 01 06 09 11 0B 11 0C  // ................
    6980: 40 9C 00 06 99 90 00 00 00 00 00 00 22 AA 1C 00  // @..........."...
    6990: 60 18 13 11 E0 54 0C 09 97 84 31 02 00 20 41 00  // `....T....1.. A.
    69A0: 25 04 14 20 9A 88 C0 A2 00 00 04 C0 07 01 0B 11  // %.. ............
    69B0: 23 10 18 0E 80 38 01 06 99 90 00 00 00 00 00 00  // #....8..........
    69C0: 22 AA 1C 00 E7 B4 36 23 20 55 0E 0D 25 48 73 04  // ".....6# U..%Hs.
    69D0: 00 44 82 00 45 0B 14 20 2A 89 80 A5 00 00 04 C0  // .D..E.. *.......
    69E0: 0E 08 16 1C 47 1B 26 11 90 5F 01 06 99 90 00 00  // ....G.&.._......
    69F0: 00 00 00 00 22 AA 1C 00 29 BD 47 28 30 55 0E 0E  // ...."...).G(0U..
    6A00: 29 C9 03 05 00 66 A3 00 4D 0D 14 20 BA 89 40 A6  // )....f..M.. ..@.
    6A10: 00 00 04 C0 10 0A 19 1F 50 1E 2A 11 A0 86 01 06  // ........P.*.....
    6A20: 77 70 00 00 00 00 00 00 22 AA 1C 00 6B 41 68 2B  // wp......"...kAh+
    6A30: 50 55 0D 0F AA 09 94 05 00 6A E3 00 54 0E 14 20  // PU.......j..T.. 
    6A40: BA 89 C0 A6 00 00 04 C0 11 0C 1B 20 59 20 2B 12  // ........... Y +.
    6A50: 74 B7 01 06 77 70 00 00 00 00 00 00 22 AA 1C 00  // t...wp......"...
    6A60: CE CD 79 32 70 55 0E 11 30 CB 54 06 00 6C 05 01  // ..y2pU..0.T..l..
    6A70: 64 01 14 20 DA 89 80 A7 02 00 04 C0 14 0F 1F 24  // d.. ...........$
    6A80: 65 25 31 13 94 05 02 06 77 70 00 00 00 00 00 00  // e%1.....wp......
    6A90: 22 AA 1C 00 10 D6 7A 35 80 55 0E 13 34 4C 05 07  // ".....z5.U..4L..
    6AA0: 00 6C 05 01 6C 03 14 20 DA 89 00 A8 02 00 04 C0  // .l..l.. ........
    6AB0: 16 11 20 25 70 28 35 14 A4 2C 02 06 77 70 00 00  // .. %p(5..,..wp..
    6AC0: 00 00 00 00 22 AA 1C 00 73 62 7C 3F A0 55 0F 15  // ...."...sb|?.U..
    6AD0: BA 0D 06 08 00 6C 05 01 7C 06 14 20 DA 89 C0 A9  // .....l..|.. ....
    6AE0: 02 00 04 C0 19 14 27 2C 80 2D 3B 15 F0 49 02 06  // ......',.-;..I..
    6AF0: 77 70 00 00 00 00 00 00 22 AA 1C 00 94 E6 7C 42  // wp......".....|B
    6B00: B0 55 11 16 3C 4E 66 08 00 6C 05 01 04 07 14 20  // .U..<Nf..l..... 
    6B10: DA 89 00 A4 03 00 04 C0 1A 15 29 2E 86 2F 3D 17  // ..........)../=.
    6B20: 00 00 00 00 06 00 08 00 0E 00 44 FF FF 00 FF FF  // ..........D.....
    6B30: FF 00 00 00 00 00 FF FF FF 01 00 42 00 00 FF FF  // ...........B....
    6B40: FF 02 00 00 00 00 FF FF FF 03 00 42 00 00 FF FF  // ...........B....
    6B50: FF 04 00 00 00 00 FF FF FF 05 00 42 00 00 FF FF  // ...........B....
    6B60: FF 06 00 00 00 00 FF FF FF 07 00 42 00 00 FF FF  // ...........B....
    6B70: FF 08 00 00 00 00 FF FF FF 09 00 42 00 00 FF FF  // ...........B....
    6B80: FF 0A 00 00 00 00 FF FF FF 0B 00 42 00 00 00 00  // ...........B....
    6B90: 00 00 E4 E4 88 C6 FA 00 88 C6 FA 00 88 C6 FA 00  // ................
    6BA0: 88 C6 FA 00 88 C6 FA 00 88 C6 FA 00 88 C6 FA 00  // ................
    6BB0: 88 C6 FA 00 E4 E4 88 C6 FA 00 88 C6 FA 00 88 C6  // ................
    6BC0: FA 00 88 C6 FA 00 88 C6 FA 00 88 C6 FA 00 88 C6  // ................
    6BD0: FA 00 88 C6 FA 00 33 00 3C 00 99 0A 04 82 0A 04  // ......3.<.......
    6BE0: 74 0A 04 75 0A 04 00 00 44 02 00 44 04 00 44 05  // t..u....D..D..D.
    6BF0: 00 44 09 00 44 0A 00 44 0B 00 44 0D 00 44 4E 0A  // .D..D..D..D..DN.
    6C00: 04 54 0A 00 97 0A 04 98 0A 00 FF FF 00 FF FF FF  // .T..............
    6C10: 00 00 E0 02 70 1B 40 03 61 00 00 00 00 00 00 1B  // ....p.@.a.......
    6C20: 00 FF FF 04 04 1F 3C 00 00 04 06 00 00 23 00 00  // ......<......#..
    6C30: 00 00 00 00 00 9A 00 02 00 85 08 00 00 30 00 00  // .............0..
    6C40: 00 61 18 86 00 5D 87 02 00 00 00 00 00 00 B6 47  // .a...].........G
    6C50: 03 01 60 D3 B4 00 18 00 98 1F 10 00 A0 00 7C 00  // ..`...........|.
    6C60: 00 00 00 00 7D 00 40 04 03 18 7E 00 40 14 00 FF  // ....}.@...~.@...
    6C70: 7F 00 00 00 00 00 81 00 08 00 00 00 83 00 00 00  // ................
    6C80: 00 00 84 00 00 01 00 00 85 00 01 00 00 00 86 00  // ................
    6C90: 00 00 00 00 88 00 00 00 04 00 89 00 00 01 00 00  // ................
    6CA0: 8B 00 00 00 00 FF 8D 00 FF EF FF FF 8E 00 FF EF  // ................
    6CB0: F3 FF 8F 00 BF EF F3 FF 90 00 FF FF FF F7 91 00  // ................
    6CC0: 7F FF FF FF 92 00 FF 0F 00 00 93 00 FF 6F 11 00  // .............o..
    6CD0: 94 00 00 00 01 60 95 00 00 00 01 10 97 00 00 00  // .....`..........
    6CE0: 00 00 98 00 01 02 0F 01 9F 00 60 D3 B4 00 01 BE  // ..........`.....
    6CF0: 06 E0 CF 96 74 97 D0 7F BF 3E 00 C9 96 76 08 D8  // ....t....>...v..
    6D00: 2A D1 8D 45 C7 96 74 09 D0 06 BF AE E8 F3 C0 2B  // *..E..t........+
    6D10: C7 93 15 FA 58 BC FE A0 8F 11 E9 4E A1 06 C0 4F  // ....X......N...O
    6D20: 20 0A 5B D2 40 BF 3E 00 19 00 3F 6E 71 4A B0 F6  //  .[.@.>...?nqJ..
    6D30: C4 2A 20 2B 1B DA 40 48 57 27 2D F0 EB 47 98 04  // .* +..@HW'-..G..
    6D40: B0 C2 FF 7A FF E4 03 98 40 68 F3 25 1D F1 EB 03  // ...z....@h.%....
    6D50: 98 7C 69 53 21 0D FE EB 03 98 54 68 2B 20 FD F7  // .|iS!.....Th+ ..
    6D60: 2B 3E 9A EF B2 06 82 3E FC EB 03 90 25 40 FF CF  // +>.....>....%@..
    6D70: FA 1F AB D7 93 02 F0 CF E7 9A 22 24 18 DA 40 48  // .........."$..@H
    6D80: CB 3F BE CF 2B 47 90 1F 61 02 A1 BD 86 36 5F D2  // .?..+G..a....6_.
    6D90: 04 B4 52 84 C9 97 36 A5 D2 11 62 B8 E8 31 03 BC  // ..R...6...b..1..
    6DA0: 08 F0 11 C0 03 00 0F 14 36 5B D2 55 48 03 FE FA  // ........6[.UH...
    6DB0: 00 26 5B DA C0 B7 56 A1 BD 86 F6 1A DA 00 D2 01  // .&[...V.........
    6DC0: FC 0F E0 3F C0 FF 64 48 DB 20 0D 44 2B 41 AD 40  // ...?..dH. .D+A.@
    6DD0: 44 62 15 59 44 E6 1C 40 10 B4 92 18 39 00 FF 34  // Db.YD..@....9..4
    6DE0: 74 00 F4 6F 01 C4 46 2B 89 91 CD 1D 01 D0 1F 03  // t..o..F+........
    6DF0: 10 19 D2 EA 8C 5B C8 C3 C0 64 37 40 34 48 27 2C  // .....[...d7@4H',
    6E00: 4D C0 2B 30 93 78 00 59 88 43 44 26 33 60 4E A0  // M.+0.x.Y.CD&3`N.
    6E10: 3A 02 34 68 5C C2 D2 00 FF 07 D4 9A B0 F6 00 AF  // :.4h\...........
    6E20: C4 A0 0A C0 0F 40 FF 16 40 10 BF 9E 44 97 B0 B4  // .....@..@...D...
    6E30: 00 AF C4 A0 72 02 B4 6D 5C C2 D2 00 FF 0B D4 9A  // ....r..m\.......
    6E40: B0 F6 00 AF C4 A0 0A C0 0F 40 FF 16 40 03 BC 12  // .........@..@...
    6E50: 83 0A 0B 10 33 74 70 40 0F F0 CA F0 2B FC 93 F2  // ....3tp@....+...
    6E60: AD 03 33 39 00 7F 49 77 04 F4 13 C0 1F C0 6B 49  // ..39..Iw......kI
    6E70: 77 02 BC 96 74 07 40 7F 31 40 05 BC 12 83 6A 0B  // w...t.@.1@....j.
    6E80: 10 C3 71 00 F4 17 03 64 C0 2B 31 A8 BC 00 D9 15  // ..q....d.+1.....
    6E90: 07 40 7F 31 40 07 BC 12 83 1A 0C 10 00 FD CB 00  // .@.1@...........
    6EA0: 21 F0 4A 0C 6A 10 FC B8 C5 21 2C 0D F0 3F 44 F0  // !.J.j....!,..?D.
    6EB0: 08 6B 03 D0 1F 03 10 6E 71 3E 49 0B F0 0A F1 EB  // .k.....nq>I.....
    6EC0: 23 92 01 F0 67 49 C7 0C 1D 0A D2 F0 BF D6 C8 FA  // #...gI..........
    6ED0: 11 A4 47 98 28 68 B3 A0 6D 55 1C 00 FD ED 00 09  // ..G.(h..mU......
    6EE0: 21 4D 9D F4 8B 0C 10 B5 02 F1 FA A2 49 32 93 EC  // !M..........I2..
    6EF0: 80 8D 81 CA 0E 10 84 3C BD DA AD A1 0D 40 7F 0C  // .......<.....@..
    6F00: 40 CC D0 E5 15 37 26 5D 9A 74 00 E8 43 08 02 C0  // @....7&].t..C...
    6F10: 2B 1F 71 00 BC 6A 11 67 AA 34 7C AD 95 69 2A E0  // +.q..j.g.4|..i*.
    6F20: 6A AA 36 04 D0 F0 E8 67 E8 C3 A1 0F 08 FA 30 E8  // j.6....g......0.
    6F30: 43 80 8D 03 B4 8B 1E 00 FF 03 80 59 00 FF FF 9B  // C..........Y....
    6F40: 41 F0 1B 80 0E 1C 7C 96 74 8F D1 5D 45 87 80 F4  // A.....|.t..]E...
    6F50: 27 AD 04 40 22 A0 ED 1E 5D CD D1 DF BF 02 FC FF  // '..@"...].......
    6F60: 44 E4 57 91 6F 46 FE 1D 59 73 76 DD D9 39 67 E7  // D.W.oF..Ysv..9g.
    6F70: 9D ED AF F4 F3 AF 8F 48 FA AB 2D B0 76 70 D2 11  // .......H..-.vp..
    6F80: 62 98 00 CD 52 F4 C3 AF 6F 40 32 B3 19 00 FF 2F  // b...R...o@2..../
    6F90: 90 F0 BF 7E 04 19 00 A6 50 76 00 48 17 20 FD B3  // ...~....Pv.H. ..
    6FA0: EB 2F AF 23 92 90 28 82 22 88 89 2E 1B 41 EE EF  // ./.#..(."....A..
    6FB0: CA 00 24 00 DA FE BC F2 1D 59 80 36 04 D2 F1 BB  // ..$......Y.6....
    6FC0: 0A F0 7A A2 C8 46 90 1C 61 42 A0 1D 82 74 F0 AC  // ..z..F..aB...t..
    6FD0: 73 47 86 A0 5D 82 74 F0 AC 73 47 96 A0 9D 82 34  // sG..].t..sG....4
    6FE0: 5C D2 12 40 1F FC FA 00 24 00 E0 01 BF 3E 00 8C  // \..@....$....>..
    6FF0: F8 FA 03 B0 0E 40 1B 10 6E 55 B8 55 E9 06 BF E2  // .....@..nU.U....
    7000: 3F 49 FF F8 D3 C3 5F 65 02 91 99 82 76 0B DA C2  // ?I...._e....v...
    7010: 4A 03 FE FA 88 A4 B0 DA 11 B0 0E F4 4A 14 1D 00  // J...........J...
    7020: FA 10 E8 93 A3 4D 90 36 10 FA 04 D2 81 2D DD 02  // .....M.6.....-..
    7030: B4 03 98 60 6B 03 F0 8A 43 1D 00 AF 08 DB 01 F0  // ...`k...C.......
    7040: 0A 28 DD 4F 71 D0 49 5B 27 1D 21 06 80 74 CC 6C  // .(.Oq.I['.!..t.l
    7050: 1E 06 06 F4 EB FC 93 36 82 11 D0 EF 6F 99 0D D0  // .......6....o...
    7060: 00 D2 F9 3E 69 23 58 A5 D2 00 FF 07 86 CD 25 34  // ...>i#X.......%4
    7070: 80 74 E4 68 13 A4 3D D0 AB 61 71 19 D1 51 2A 0D  // .t.h..=..aq..Q*.
    7080: F0 3F 61 D8 03 BD 0A 21 47 A9 74 86 18 8C 61 03  // .?a....!G.t...a.
    7090: FC CF CC 26 E1 40 7E C5 1D F0 8A A7 1D 62 AC 78  // ...&.@~......b.x
    70A0: B0 BA 45 07 44 6B 84 18 76 0F 0B C1 0F 48 EB 3F  // ..E.Dk..v....H.?
    70B0: F0 CC 6C 2A 07 F4 C0 6B 71 91 CA 81 D1 BF 5E 4F  // ..l*...kq.....^O
    70C0: FE FF 9B CA 81 7D 80 4D 15 3C 59 F0 74 C1 EB 24  // .....}.M.<Y.t..$
    70D0: CD CF 2B AB 92 3A 69 0F E4 3A 80 AB 09 DB 81 64  // ..+..:i..:.....d
    70E0: FB 3F 0C 1C 10 20 FA 90 E8 9B B0 AD 93 F4 00 AF  // .?... ..........
    70F0: AC 6A EA A4 4D A9 34 C0 FF 88 61 D3 00 8D F0 2B  // .j..M.4...a....+
    7100: C0 FF F2 4C A2 07 F6 33 26 0D D8 01 BC 02 4A 37  // ...L...3&.....J7
    7110: D0 6B 00 AD 04 D2 79 47 87 02 34 C8 AF 2D EA C4  // .k....yG..4..-..
    7120: 3F 49 00 7F 40 AF 55 D6 09 F4 DA A2 46 95 75 60  // ?I..@.U.....F.u`
    7130: 4A DF FF FA 00 24 98 DA 70 48 D7 21 8D 0A 36 0D  // J....$..pH.!..6.
    7140: D0 AD 60 0B FC 2A FF 64 10 FC F8 C4 51 2A 0D F0  // ..`..*.d....Q*..
    7150: 3F 64 D8 02 BF 5E 4A 37 4D 1C 89 74 69 D2 AD A1  // ?d...^J7M..ti...
    7160: 0D 80 FE 40 AF 2F D1 75 5F 47 A9 74 86 18 11 40  // ...@./.u_G.t...@
    7170: 53 86 8D 19 36 C0 AF CC 6C 06 C0 4F F0 EB 9B 99  // S...6...l..O....
    7180: 11 60 33 B3 49 38 90 C0 AF 97 D2 45 C0 3A D0 2B  // .`3.I8.....E.:.+
    7190: 51 74 46 D8 51 2A 9D 21 46 04 D0 9C 61 83 86 0D  // QtF.Q*.!F...a...
    71A0: F0 2B 33 9B 01 F0 83 FC FA 66 66 04 D8 CC 6C 12  // .+3......ff...l.
    71B0: 0E 44 21 06 0D D0 10 BF 32 B3 69 33 90 FC 93 36  // .D!.....2.i3...6
    71C0: 83 A1 08 47 40 BF D4 60 08 48 83 FD FA 00 26 02  // ...G@..`.H....&.
    71D0: DA 98 49 E7 FF FA 11 24 66 DA 30 E8 BB 04 0F 83  // ..I....$f.0.....
    71E0: 36 D4 74 6A D3 01 B0 0F 00 B4 0B D0 10 B6 32 D0  // 6.tj..........2.
    71F0: EA A2 02 89 90 22 A2 D3 0C 39 C2 26 9A 91 03 F0  // ....."...9.&....
    7200: 7B 81 1A 00 3F 30 FA 0C E2 20 00 FD 43 6B 84 1E  // {...?0... ..Ck..
    7210: 42 42 06 C1 8F 20 AB 3F A8 41 F0 13 C8 0A 22 09  // BB... .?.A....".
    7220: 00 D0 00 FF 03 FD 0A 11 E6 C7 93 58 82 0D F4 6A  // ...........X...j
    7230: 58 5C 46 74 00 40 03 FC 2F 40 2B 09 91 02 F0 07  // X\Ft.@../@+.....
    7240: F4 CA 7B 1C 00 D0 00 FF 0B D0 4A 43 A4 00 FC 02  // ..{.......JC....
    7250: BD F2 1E 47 A9 34 C0 FF 84 61 5F 45 47 03 34 C0  // ...G.4...a_EG.4.
    7260: FF 10 BF C2 3F 39 27 D8 40 AF 42 C8 11 D0 0F 28  // ....?9'.@.B....(
    7270: 18 00 D0 00 FF 07 F4 EA 40 64 00 FC 42 C8 5D 45  // ........@d..B.]E
    7280: 07 00 34 C0 FF 02 BD 7A 10 19 00 BF 10 72 94 4A  // ..4....z.....r.J
    7290: 67 88 01 F0 3F 62 D8 CC 6C 12 0E E4 57 1C 89 74  // g...?b..l...W..t
    72A0: 69 D2 AD A1 4D 03 B4 09 D0 10 B4 02 11 69 44 7A  // i...M........iDz
    72B0: 81 28 94 4A 03 FC CF 18 36 00 D0 05 2A 08 D0 0A  // .(.J....6...*...
    72C0: 44 64 A7 60 01 BD 7A 15 19 00 FF 40 AF 26 CB 51  // Dd.`..z....@.&.Q
    72D0: 2A 0D F0 3F 63 D8 00 40 17 A8 20 40 6B 10 91 A9  // *..?c..@.. @k...
    72E0: 82 79 15 99 2A 90 40 AF 26 CB 51 2A 9D 21 06 C0  // .y..*.@.&.Q*.!..
    72F0: FF 90 61 33 B3 49 38 10 00 D0 05 2A 10 D0 0A 44  // ..a3.I8....*...D
    7300: 64 01 FC 01 BD 7A 15 19 00 FF 40 AF 87 CC 01 00  // d....z....@.....
    7310: 5D A0 02 01 AD 41 44 12 C0 EF 55 A4 10 FC 02 BD  // ]....AD...U.....
    7320: 1E 32 47 A9 74 86 18 00 FF 53 86 CD CC A6 00 FC  // .2G.t....S......
    7330: 00 F4 13 0E 44 03 34 C0 FF 00 FF FB 3C 29 2E 10  // ....D.4.....<)..
    7340: 00 D0 05 2A 40 D0 0A 44 64 B6 60 01 BD 7A 15 19  // ...*@..Dd.`..z..
    7350: 00 FF 40 AF 3E CD 01 00 5D A0 02 04 AD 41 44 8A  // ..@.>...]....AD.
    7360: 0B E6 55 A4 B8 40 02 BD FA 34 47 A9 74 86 18 00  // ..U..@...4G.t...
    7370: FF 63 86 CD CC 26 E1 40 00 40 17 A8 00 42 2B 10  // .c...&.@.@...B+.
    7380: 91 05 F0 07 F4 EA 05 6A 10 FC 03 BD EA 3A 07 00  // .......j.....:..
    7390: 74 81 0A 20 B4 06 11 49 00 BF 17 A8 02 F0 0B F4  // t.. ...I........
    73A0: AA EB 1C A5 D2 19 62 00 FC CF 19 36 33 9B 84 03  // ......b....63...
    73B0: D9 00 CD 20 40 81 0A BE 4B BA 0C 14 40 2B 01 91  // ... @...K...@+..
    73C0: 06 F0 07 F4 EA 05 6A 10 FC 03 BD FA 07 3F F3 1C  // ......j......?..
    73D0: 83 00 05 2A 10 D0 4A 40 64 01 FC 5E 45 0E C1 2F  // ...*..J@d..^E../
    73E0: D0 AB 7F F0 33 CF 31 08 50 A0 82 00 AD 04 44 1A  // ....3.1.P.....D.
    73F0: C0 1F D0 AB 17 A8 41 F0 0F F4 0A 8F FE CC 73 0C  // ......A.......s.
    7400: 02 14 A8 80 40 2B 01 91 05 F0 7B 15 39 04 BF 40  // ....@+....{.9..@
    7410: AF F0 E8 CF 3C 97 21 06 C0 FF 00 FF 33 B3 49 38  // ....<.!.....3.I8
    7420: 10 A5 D2 00 FF 83 86 0D 00 34 C0 FF 08 B4 06 80  // .........4......
    7430: 49 40 24 03 FC 08 48 03 FC 0F 44 2B 01 98 08 68  // I@$...H...D+...h
    7440: 63 26 DD 4F 2B 45 90 98 69 C3 A0 EF 12 3C 0C DA  // c&.O+E..i....<..
    7450: 00 40 03 FC 0F 58 2B 44 98 15 45 06 C0 5F B4 1D  // .@...X+D..E.._..
    7460: A5 D2 00 FF 93 86 8D B0 74 0D D0 0E 62 00 FE FA  // ........t...b...
    7470: F6 64 E0 60 7E 4F F6 0D 64 FF F8 FC 93 7E 67 D6  // .d.`~O..d....~g.
    7480: 80 FD C1 2B 9E 76 11 7A 00 48 F7 FF 26 DE 40 10  // ...+.v.z.H..&.@.
    7490: BC DA 60 17 D0 6B 00 AD 02 BF 9E 4F 27 D0 6B 00  // ..`..k.....O'.k.
    74A0: AD 02 BF 9E 4F A7 48 5C 5C D2 FC BF 1A 04 FF 17  // ....O.H\\.......
    74B0: A4 4B F0 30 E8 C3 A0 4D 40 BF 63 60 02 BF 5E 4A  // .K.0...M@.c`..^J
    74C0: 87 B0 B4 83 18 00 D2 19 33 CE F3 24 CF 98 08 6B  // ........3..$...k
    74D0: 03 A0 4F 21 88 22 71 11 62 7C EE 0A F8 2B 33 9B  // ..O!."q.b|...+3.
    74E0: 9D 83 11 27 9D 80 34 C0 FF 4B 44 26 A0 3D FF 64  // ...'..4..KD&.=.d
    74F0: E7 40 EE D1 01 D0 4A 20 1D 66 D2 0F BF 3E 80 89  // .@....J .f...>..
    7500: 99 36 0C FA 2E C1 C3 A0 0D 20 1D 09 AF 38 D4 FD  // .6....... ...8..
    7510: 4C 17 C0 2B A0 74 24 D2 01 20 5D 80 B4 5B D2 24  // L..+.t$.. ]..[.$
    7520: 0A A0 08 30 22 81 89 0E 20 BF 02 A0 8D FF 24 FC  // ...0"... .....$.
    7530: EB EF BC 72 15 F9 55 66 01 DA 10 48 77 27 7D A2  // ...r..Uf...Hw'}.
    7540: 40 8A 0A 00 FF 43 A0 DD 9D 76 5C D2 01 B2 C2 A0  // @....C...v\.....
    7550: 6F 10 FC 45 F0 30 68 03 48 77 15 5D 86 00 12 40  // o..E.0h.Hw.]...@
    7560: 57 00 CD A1 80 03 A8 02 F0 03 D0 FF 3D 90 47 B0  // W...........=.G.
    7570: 1C 8A E8 AE B9 55 A6 9B B1 41 F0 BB 19 5C 01 F6  // .....U...A...\..
    7580: 83 AC 42 44 52 94 AA 3D 18 28 FA B0 E8 4B 80 0D  // ..BDR..=.(...K..
    7590: 80 7E 86 20 00 F4 33 04 44 03 34 C0 FF 10 B4 52  // .~. ..3.D.4....R
    75A0: 84 49 03 36 0D D0 08 B4 02 FC 3F 04 A4 10 FC 04  // .I.6......?.....
    75B0: C5 BD 13 17 21 86 C0 AF 00 FF 33 B3 19 04 FF A5  // ....!.....3.....
    75C0: 74 D2 49 03 F0 FA F0 AB FE 93 FA 83 A1 00 1D A1  // t.I.............
    75D0: 02 C4 AF F0 4F 12 C0 EF 11 64 54 91 41 F0 07 F0  // ....O....dT.A...
    75E0: 7A 52 1C 08 D0 00 FF 03 FC EF 22 2C 11 FC 3E C3  // zR........",..>.
    75F0: 0A C1 FF 2F EB FF AC 20 60 5F 45 67 51 1C 00 D0  // .../... `_EgQ...
    7600: 03 BD 02 D1 4A 42 A4 06 61 70 40 0F F0 CA F0 2B  // ....JB..ap@....+
    7610: FC 93 F2 AD 03 33 39 00 7F 49 77 04 F4 13 C0 1F  // .....39..Iw.....
    7620: C0 6B 49 77 02 BC 96 74 07 00 B4 1C D0 0C BC 02  // .kIw...t........
    7630: D2 4A 42 E4 00 FC C0 4C 0A B7 AE CD 1D 0A D0 C0  // .JB....L........
    7640: BC 02 FD 3A CC 24 01 FC 3F 03 A3 80 4D 40 BF 3C  // ...:.$..?...M@.<
    7650: 60 C5 49 4B 27 1D A1 07 01 AF 00 FF FF BF 89 43  // `.IK'..........C
    7660: D0 32 93 42 F0 07 F0 AA 45 5C 1C 71 2C 40 03 E1  // .2.B....E\.q,@..
    7670: 0A 98 EB FF AE A5 4A 63 20 19 04 FF F3 AE 19 49  // ......Jc ......I
    7680: 0A C1 FF A3 AB EE 92 5B 45 96 AA 1D 01 B4 05 D0  // .......[E.......
    7690: 88 B1 F2 C1 9A 14 BC 56 F0 7F D1 21 2C ED 20 C6  // .......V...!,. .
    76A0: C1 AF 10 E8 3F 80 1A 04 FF 41 AC F0 BF FE 0C C9  // ....?....A......
    76B0: 33 26 C2 DA 00 F4 C7 00 74 18 2B 33 AC 6E D1 49  // 3&......t.+3.n.I
    76C0: 27 CD 2D AB C8 AF 08 B3 EE 0C 29 00 FF 13 99 FE  // '.-.......).....
    76D0: B2 0A 11 F9 FD AB 33 93 06 F0 0F C8 3A 33 A6 00  // ......3.....:3..
    76E0: FC 4F 44 06 C8 2A 44 E6 5F 74 00 EC 4B 27 0D F8  // .OD..*D._t..K'..
    76F0: 2B 00 AF FA 4F 1A C0 0F 8C F4 73 AD 25 42 02 A3  // +...O.....s.%B..
    7700: 4D 8C 76 00 AF 87 B1 02 C1 EA 16 9D BF AC 42 44  // M.v...........BD
    7710: 32 91 F9 17 1D 0E D0 CC 6C 06 C1 0F C0 FE 70 F0  // 2.......l.....p.
    7720: 59 D2 01 B0 DF 03 74 86 00 0E 1A 04 FC 0A 00 66  // Y.....t........f
    7730: 00 FC 00 EC FB 04 19 00 3F 00 FB F0 DC 13 C8 0A  // ........?.......
    7740: 15 AB 1D E3 66 8F CB 80 4A 04 3F 5A AC F0 BF DE  // ....f...J.?Z....
    7750: 33 69 FF 24 04 F6 06 FA A0 20 DD 82 B4 B0 D2 CC  // 3i.$..... ......
    7760: 6C D2 12 F6 F0 EB 47 90 C0 BF 3E 22 09 F8 EB 33  // l.....G...>"...3
    7770: B3 42 F0 FF FC FA 88 26 47 98 C6 A0 33 80 09 14  // .B.....&G...3...
    7780: 7C 54 F0 06 7A 78 50 0F B0 BF 17 F5 00 FB 7B 52  // |T..zxP.......{R
    7790: 0F B0 3F 08 D2 25 48 6B 20 FD FF 66 33 61 0F BC  // ..?..%Hk ..f3a..
    77A0: B2 08 C9 66 A4 3F AF 3C 43 F2 1D 09 C8 2B FF B3  // ...f.?.<C....+..
    77B0: 42 F0 FB 8C E9 77 E6 8B 98 6F 66 7A 50 0F B0 BF  // B....w...ofzP...
    77C0: 17 F5 00 FB 7B 52 0F C0 BE 83 18 01 BF C2 73 4F  // ....{R........sO
    77D0: F0 2B 54 AC CF A0 06 C1 8F 16 2B 04 F6 1E D0 03  // .+T.......+.....
    77E0: EC EF 05 3D C0 FE 9E D0 03 EC 8F 82 76 0B DA C2  // ...=........v...
    77F0: 6A 7B 40 0F B0 BF 17 F4 00 FB 7B 42 0F 82 76 09  // j{@.......{B..v.
    7800: DA 00 FF 6B A0 0D C0 7E 84 16 00 D2 ED AE 19 00  // ...k...~........
    7810: 3F 00 FB 01 BD 26 58 27 D0 6B 82 75 D1 49 03 23  // ?....&X'.k.u.I.#
    7820: 6D 8C 34 84 AD 67 46 0E C0 0F 53 6B 89 98 A5 6A  // m.4..gF...Sk...j
    7830: 02 A3 6D 8C 36 00 FB 08 48 47 68 F1 4B 2B 9D D8  // ..m.6...HGh.K+..
    7840: 04 40 22 A0 BD BB A6 44 41 01 BD 6E 57 27 D0 EB  // .@"....DA..nW'..
    7850: 76 75 03 BD 0E 51 67 27 34 D1 74 0A 68 03 B0 0F  // vu...Qg'4.t.h...
    7860: B6 B4 23 F0 08 40 82 AD 8D 94 B4 0A D0 3F B4 02  // ..#..@.......?..
    7870: D6 0A 64 2B 9A 91 45 F0 D3 0C 59 33 26 52 DA 34  // ..d+..E...Y3&R.4
    7880: 43 22 A5 0D C0 7E 24 D3 DF BF 3E 11 89 CC 38 13  // C"...~$...>...8.
    7890: 99 91 6C 23 32 0D F1 EB 03 98 88 6C 03 48 97 B4  // ..l#2......l.H..
    78A0: 34 C0 FF 4E 44 C6 14 F4 0F FC 03 90 88 6C 03 48  // 4..ND........l.H
    78B0: 97 B4 34 C0 FF 4E 44 E6 14 06 C0 7E C0 AC 00 B2  // ..4..ND....~....
    78C0: 0A C4 1A 00 2B 9A DA 00 B3 42 CA 2A 10 EB 04 AC  // ....+....B.*....
    78D0: 70 6A 87 09 1D 30 2B 82 AC 02 B1 86 C0 4A A7 76  // pj...0+......J.v
    78E0: 9E DA 04 B3 02 C8 2A 10 6B 00 AC 7C 6A 03 B0 EF  // ......*.k..|j...
    78F0: 00 74 00 AF 2E E2 C0 A3 1F A1 8F 2D E8 D5 49 47  // .t.........-..IG
    7900: E8 63 47 3A 50 A9 02 F0 03 A3 EF 22 CE 43 AC 1B  // .cG:P......".C..
    7910: 43 0E 95 2A 00 7F C0 AF 11 FA 08 33 FE CC 26 33  // C..*.......3..&3
    7920: 9B 41 F0 0B F0 EA 20 0E 00 FB 54 C1 93 05 4F 17  // .A.... ...T...O.
    7930: 7C 2A D9 E9 64 03 B0 3F 68 DC A2 71 00 EC 17 20  // |*..d..?h..q... 
    7940: FD FE EB 57 91 05 68 03 B0 1F 94 74 84 1E 00 D2  // ...W..h....t....
    7950: FD BF 29 00 BF 71 F0 08 DB 01 B0 EF 25 34 C1 AF  // ..)..q......%4..
    7960: F0 DC 03 A1 0F 84 7D C2 AF 9E D4 03 EC EF FF 30  // ......}........0
    7970: 63 41 EA 84 03 61 9F F0 AB 27 F5 00 FB FB 3F 3C  // cA...a...'....?<
    7980: 59 10 E0 AF F0 D8 23 FC EA 49 3D C0 FE FE 0F 6B  // Y.....#..I=....k
    7990: 16 04 FC 2B 3C F6 08 BF 7A 52 0F B0 BF FF C3 A1  // ...+<...zR......
    79A0: 05 A9 92 AD 4E 36 00 FB 5F D0 07 EC FF C3 2B 11  // ....N6.._.....+.
    79B0: F0 4C 44 56 01 CF 55 A4 19 F0 6C 46 DE 01 CF 77  // .LDV..U...lF...w
    79C0: A4 17 F5 00 FB FB 3F 8C 5A 10 00 FB 2A D1 61 22  // ......?.Z...*.a"
    79D0: 0D F8 EB CF 98 BF BF FE 0C 89 89 36 2C DA E6 D9  // ...........6,...
    79E0: 31 1D 57 88 9D 54 76 98 48 1F FC FA 22 26 26 DA  // 1.W..Tv.H..."&&.
    79F0: B0 68 B7 00 0D F2 EB 49 74 3F BF FE 0C 09 F8 EB  // .h.....It?......
    7A00: CF 98 02 BF 3E 11 29 00 3F D0 AF 3F 63 62 A2 0D  // ....>.).?..?cb..
    7A10: 8B F6 92 74 F3 C5 2D 49 F7 F3 EB CF 90 98 68 C3  // ...t..-I......h.
    7A20: A2 CD 96 34 C2 AF F0 4F 06 C0 3F 6B 1C 5B D2 04  // ...4...O..?k.[..
    7A30: BF 3E 00 29 00 7F 21 76 52 D9 A5 66 67 55 5C 3F  // .>.)..!vR..fgU\?
    7A40: 74 87 B1 B2 C2 EA 16 9D 13 99 7F D1 31 1C 07 C0  // t...........1...
    7A50: 7E 01 D2 EF BF FE 1D 59 80 36 00 FB 54 48 83 FD  // ~......Y.6..TH..
    7A60: FA 22 26 15 DA 1C 4B FB FF FA 11 24 C7 DA 00 D2  // ."&...K....$....
    7A70: 21 18 B7 66 1C 15 D2 9F BF BE 08 49 85 36 00 FB  // !..f.......I.6..
    7A80: 10 E8 83 A0 5F 9D B4 24 D3 70 A0 7F FE FA AA 24  // ...._..$.p.....$
    7A90: FF AF 8F 48 F2 FC FA 57 2A 87 61 07 C1 83 F0 CA  // ...H...W*.a.....
    7AA0: AA 26 CA AF 7F A5 72 18 06 07 38 AB B2 92 6C 4B  // .&....r...8...lK
    7AB0: 27 0D 30 AB DF 93 01 F0 03 CE 0A F7 AB FE 93 3F  // '.0............?
    7AC0: 63 62 B2 8D CB B4 25 D3 00 B0 3E FC FA AA 26 DE  // cb....%...>...&.
    7AD0: AF 7F A5 1E C0 1F 00 2B CF AF 7F A5 0E C0 3F 00  // .......+......?.
    7AE0: EB FD AF AF 4A E2 B2 6D C9 76 26 D3 D2 49 1F FC  // ....J..m.v&..I..
    7AF0: AA FF E4 E8 AC 34 E5 8F CA 4A 42 FE 0F F9 62 C1  // .....4...JB...b.
    7B00: BF 95 6F 33 EC 0B F9 C3 C1 9B 08 1C 04 BF CF C0  // ..o3............
    7B10: 37 03 07 C0 EF 44 F0 1C F0 62 C0 77 B2 0D 00 2B  // 7....D...b.w...+
    7B20: 40 AC C4 A2 83 8C 0E 43 3A 50 E9 23 C2 96 08 4B  // @......C:P.#...K
    7B30: 22 30 0C FA B4 6C 43 32 9D 02 F4 F7 AF 0F 40 02  // "0...lC2......@.
    7B40: FE 4A FF 64 00 FC 90 6C 23 32 0D C1 2B 03 98 88  // .J.d...l#2..+...
    7B50: 6C 83 FC 7A 12 1D 33 F0 0C 40 22 B2 0D C0 3E C7  // l..z..3..@"...>.
    7B60: D2 BE B8 62 04 C9 B1 36 80 74 40 B8 62 84 C9 B1  // ...b...6.t@.b...
    7B70: 36 80 74 FF BF 72 2C 0D 20 9D FF C3 FF 6F 0A C0  // 6.t..r,. ....o..
    7B80: EF 82 64 9D 61 BF B8 62 04 C9 B1 36 80 74 1E 61  // ..d.a..b...6.t.a
    7B90: 72 AC 0D C0 7E 5E 71 40 E8 43 A1 4F 60 2B 1C FA  // r...~^q@.C.O`+..
    7BA0: 31 68 03 48 07 C0 3E AF D2 30 BF 3E 80 C9 AB 36  // 1h.H..>..0.>...6
    7BB0: 92 D2 0C BF C2 A0 FF 33 26 92 DA 4C 6A 77 2C 2D  // .......3&..Ljw,-
    7BC0: 80 2B 9A 99 1D 6B 17 FC 7A 12 1D CA D2 FE BF 8E  // .+...k..z.......
    7BD0: 08 89 B2 36 00 FB BC 4A C3 FC FA 00 E6 C0 AF 1F  // ...6...J........
    7BE0: 41 F2 AA 3D 5F 1C 92 D2 0C BF C2 A0 FF 33 26 92  // A..=_........3&.
    7BF0: DA 4C 6A F3 24 8D F0 EB CF 98 3C 69 03 A5 0D C0  // .Lj.$.....<i....
    7C00: 3E 26 D2 BF BF FE 0C 09 F8 EB CF 98 98 68 C3 A2  // >&...........h..
    7C10: CD 93 F4 FD AF 3F 43 F2 A4 0D 94 36 AF D2 FC BF  // .....?C....6....
    7C20: 7E 84 C9 AB 36 C4 AF 27 D1 BD FF FA 00 24 AF DA  // ~...6..'.....$..
    7C30: 48 4A DF FF FA 33 24 92 DA 4C 6A 63 22 0D FC EB  // HJ...3$..Ljc"...
    7C40: CF 98 98 68 C3 A2 FD F3 EB CF 90 98 68 C3 A2 DD  // ...h........h...
    7C50: 96 F4 FD AF F4 44 B6 A5 0D C0 3E 26 D2 C0 B4 D2  // .....D....>&....
    7C60: 8C 89 89 F6 0F AD 34 43 62 A2 0D 8B 34 30 AD 34  // ......4Cb...40.4
    7C70: 63 C2 A2 FD 43 2B CD 90 B0 68 03 B0 1F 21 84 8B  // c...C+...h...!..
    7C80: 12 00 BC 02 73 0F F4 2B 22 9A 44 F0 83 F0 9A 99  // ....s..+".D.....
    7C90: 66 00 FC 40 BC F2 3F 0B 8F BD C1 71 0C 68 1B 1C  // f..@..?....q.h..
    7CA0: 07 81 B6 C1 71 14 68 1B 1C 87 81 B6 C1 71 70 69  // ....q.h......qpi
    7CB0: 1B 1C 87 99 B6 C1 71 E8 68 03 B0 EF 01 3D C0 FF  // ......q.h....=..
    7CC0: 00 FF 03 FC 0F B0 3F 00 FB A4 4A C3 FF 8A 26 F6  // ......?...J...&.
    7CD0: 47 90 A4 6A 03 F0 8A 43 1D 24 D2 F0 BF 7E 04 09  // G..j...C.$...~..
    7CE0: 89 36 25 DA A8 68 B3 A2 CD 89 34 E1 AF 0F 60 72  // .6%..h....4...`r
    7CF0: A2 0D 8A 36 2D DA B8 68 23 2C 0D B0 6B 80 AE 61  // ...6-..h#,..k..a
    7D00: B9 02 E1 2A F0 AB FC 93 01 F0 03 E2 2A 83 36 C4  // ...*........*.6.
    7D10: AF 27 D1 95 25 ED F2 64 00 FC 69 49 23 C6 CA 07  // .'..%..d..iI#...
    7D20: EB 5F 74 9C 48 EF FD FA 00 24 27 DA A0 68 D3 A2  // ._t.H....$'..h..
    7D30: 8D 8B 36 24 D2 04 BF 7E 84 09 89 36 25 DA A8 68  // ..6$...~...6%..h
    7D40: B3 A2 4D 97 34 C0 AE 01 BA 4E 06 2F 18 BC 0C DA  // ..M.4....N./....
    7D50: 68 42 03 48 47 AA 36 00 FB 00 BC E2 50 27 06 2B  // hB.HG.6.....P'.+
    7D60: 41 AC 00 B2 02 CC 0A 89 36 2A DA 94 68 B3 A2 DD  // A.......6*..h...
    7D70: 96 74 C2 AC 01 B2 1E C4 DA 0B EB FB AF 1F 41 42  // .t............AB
    7D80: FC 4A FF A4 10 FC 10 BF FE 8C 49 80 B6 CA AC 00  // .J........I.....
    7D90: B2 02 C6 3A 03 2B 02 DA 87 B1 82 C1 EA 16 5D 2F  // ...:.+........]/
    7DA0: D8 CF B3 0E CB 0A 18 2B 10 AC 4A AF 2B 11 6E 44  // .......+..J.+.nD
    7DB0: FA 03 98 04 60 02 A0 0D 03 2B 50 AC 07 B2 02 CC  // ....`....+P.....
    7DC0: 8A 8C 36 00 D3 F0 BF 7E 04 99 F0 EB 47 98 24 B0  // ..6....~....G.$.
    7DD0: 02 B0 6D 03 34 C0 AC E0 B2 CA C4 8A 07 EB C1 AF  // ..m.4...........
    7DE0: F8 4F 3E 80 09 82 36 09 DA 20 B3 D6 C8 1A 16 EB  // .O>...6.. ......
    7DF0: 1D AC 28 68 B3 A0 2D 3A 6B A4 AC A2 B1 46 C2 CA  // ..(h..-:k....F..
    7E00: 94 36 20 FA 90 E8 83 A2 0F 8B BE 52 DA 1C 4B 7F  // .6 ........R..K.
    7E10: E3 8A 11 24 C7 DA 1C 48 03 FC 0F 31 2B 07 DA 28  // ...$...H...1+..(
    7E20: 40 03 F0 8A 80 2B 20 92 01 F0 07 F0 0A 82 F4 01  // @....+ .........
    7E30: AE FC B9 22 00 99 11 24 20 AE 00 B9 3A 33 29 00  // ..."...$ ...:3).
    7E40: 3F 1E AE 02 B9 22 80 99 11 26 3F AE 28 42 82 A0  // ?...."...&?.(B..
    7E50: 4D 82 36 00 FB 00 EC 3F 04 FF 11 FC 4B F0 3F C1  // M.6....?....K.?.
    7E60: 7B 9B 5A 00 3F 2C D9 B4 64 E3 92 0D 40 FF 10 FC  // {.Z.?,..d...@...
    7E70: F0 64 D3 93 8D 4F F6 F6 71 00 EC 3F 04 FF 11 FC  // .d...O..q..?....
    7E80: 4B F0 3F C1 7B 9B 4A 00 3F 2B D9 BC 64 03 D0 2F  // K.?.{.J.?+..d../
    7E90: 04 3F 3B D9 FC 64 6F 1F 07 C0 3E 32 D2 F3 B4 12  // .?;..do...>2....
    7EA0: D4 4A 00 64 01 98 C8 68 13 00 89 8C 36 00 FB DE  // .J.d...h....6...
    7EB0: A6 0E C0 4F 73 34 00 FD 41 F0 D3 1D 9D A0 02 BE  // ...Os4..A.......
    7EC0: AD 4E 44 0E C1 5F 10 3C 00 FD 42 F0 27 08 62 00  // .ND.._.<..B.'.b.
    7ED0: 24 44 F0 20 C1 C3 04 EF 6D 2A 01 FC 34 67 E3 9C  // $D. ....m*..4g..
    7EE0: 0D 40 BF 10 FC 74 67 E3 9D 0D C0 3E 04 AC 1E C8  // .@...tg....>....
    7EF0: 71 28 4D 83 1C 63 F0 20 4A D3 20 67 CC 38 23 9A  // q(M..c. J. g.8#.
    7F00: 24 4A D3 20 C7 19 3C 8A D2 34 C8 19 33 CE 99 26  // $J. ..<..4..3..&
    7F10: 8B D2 34 C8 B1 06 0F A3 34 0D 72 C6 8C B3 AA 49  // ..4.....4.r....I
    7F20: A3 34 0D 72 BC C1 E3 28 4D 83 9C 31 E3 BC 6B 02  // .4.r...(M..1..k.
    7F30: B0 6F A4 B4 3F AD 9E 69 1A A9 4D 99 A4 91 DA 6B  // .o..?..i..M....k
    7F40: 68 23 E4 0A 8C 2B 20 F7 90 D8 43 A0 0F 82 3E 0C  // h#...+ ...C...>.
    7F50: FA 00 FE 7B 50 BF 86 F6 63 F0 10 BF 9E 44 87 1F  // ...{P...c....D..
    7F60: 3C 00 FB C0 E8 F3 1C 6E 77 3A 8B E1 68 A6 73 14  // <......nw:..h.s.
    7F70: AE 55 3A 03 E1 4C A4 1F B3 69 CC 66 31 9B C4 6C  // .U:..L...i.f1..l
    7F80: 02 B0 9F A0 8E 8F 72 54 48 DB 00 8D FD F8 8B 98  // ......rTH.......
    7F90: 54 68 D7 25 0D F1 EB 1B 98 17 C1 BB 04 DF 03 FC  // Th.%............
    7FA0: C0 AF 3F 43 C2 A0 4D 9D 34 02 AF 34 AF F3 3F 7B  // ..?C..M.4..4..?{
    7FB0: 12 9D 71 D2 11 7A 00 48 F7 FF A4 10 FC 00 F4 1F  // ..q..z.H........
    7FC0: 25 F4 C0 6B F2 93 4E 89 11 27 8D C0 AB C0 AF F1  // %..k..N..'......
    7FD0: 4F 0E C0 8F A7 1D 01 FD 7D 88 45 88 E0 A2 02 30  // O.......}.E....0
    7FE0: FA 1E 4F 06 C0 0F C1 2B 82 38 45 41 13 91 49 04  // ..O....+.8EA..I.
    7FF0: 7F 53 D0 55 65 06 C1 9F 14 74 40 AF 20 CA 21 88  // .S.Ue....t@. .!.
    8000: 21 D0 2B 88 72 09 6A C8 25 47 9C 34 D0 AF F1 4F  // !.+.r.j.%G.4...O
    8010: EE 24 D6 A2 0E 01 AF C0 DC A3 F2 0A 8C 7D 40 AF  // .$...........}@.
    8020: EF C8 11 27 8D A0 45 00 AF 04 B0 06 00 09 8A D0  // ...'..E.........
    8030: EE 9A 03 F0 FF BF 19 00 3F 30 FA 0F BB 22 23 07  // ........?0..."#.
    8040: B0 2B 33 9B A0 08 01 F0 FA FF 66 00 FC 01 BC BE  // .+3.......f.....
    8050: EC 8A 8C 1C C2 AE CB C4 C6 82 2D D0 AB 8F 72 04  // ..........-...r.
    8060: BC 02 73 8F CE 2B 30 F6 EF C8 11 27 8D A0 45 00  // ..s..+0....'..E.
    8070: AF 04 B0 06 00 09 8C D0 EE 9A 03 F0 FF BF 19 00  // ................
    8080: 3F 30 FA 0F BB 22 23 07 B0 2B 33 9B C0 08 01 F0  // ?0..."#..+3.....
    8090: FA FF 66 00 FC 01 BC BE EC 8A 8C 1C C2 AE B1 40  // ..f............@
    80A0: 03 FC 0F F0 FF 72 B1 B1 60 B7 A8 01 40 7F 57 42  // .....r..`...@.WB
    80B0: 1E D0 0B E4 CA CC 66 10 FC FE B9 FE E8 FA 8F 6B  // ......f........k
    80C0: 00 AF BE 0B B7 23 96 00 AC 02 90 19 C1 2A 00 99  // .....#.......*..
    80D0: 22 AC 02 90 39 C3 2A 00 E9 41 BD 33 C3 D2 08 05  // "...9.*..A.3....
    80E0: 29 FD FF A6 39 62 45 64 1A 91 79 44 E6 33 62 04  // )...9bEd..yD.3b.
    80F0: F4 AF 23 56 44 A4 11 91 47 44 22 81 FA 8C 58 00  // ..#VD...GD"...X.
    8100: AF 00 EC 03 A3 0F C0 FE 01 AF 00 BF 02 48 07 A4  // .............H..
    8110: B4 90 D2 74 62 BB 89 0D A4 B4 90 D2 1D C9 39 33  // ...tb.........93
    8120: 9C 90 D8 42 72 FF B4 3E 81 1A 8F 10 90 D2 42 4A  // ...Br..>......BJ
    8130: 07 BC 29 FF E6 FC 9B F8 6F E6 BF A9 FF E6 FE 9B  // ..).....o.......
    8140: 00 EC 67 C8 03 C0 7E C0 93 F2 4F CE 3F 49 27 34  // ..g...~...O.?I'4
    8150: FE 93 F9 4F EA 3F B9 FF A4 9B D0 F0 4F C6 3F 29  // ...O.?......O.?)
    8160: FF E4 FC 93 F8 4F E6 3F A9 FF E4 FE 93 00 EC 7B  // .....O.?.......{
    8170: 83 DA 92 50 39 D2 11 B6 CE DC FA 77 64 10 FC 46  // ...P9......wd..F
    8180: C4 32 DF FA 77 64 10 FC 56 C5 82 A1 0F 87 7E 39  // .2..wd..V.....~9
    8190: DA 00 EC 17 24 1D 61 EB CC AD 7F 47 06 C1 6F 44  // ....$.a....G..oD
    81A0: 2C F3 AD 7F 47 06 C1 6F 55 2C 18 FA 70 E8 17 A4  // ,...G..oU,..p...
    81B0: 0D C0 3E 00 FD 5D 09 01 48 07 20 1D 80 74 40 4A  // ..>..]..H. ..t@J
    81C0: FF EF CA 44 2C 57 B1 1E D4 03 EC 0F C0 3E 0D D0  // ...D,W.......>..
    81D0: 40 BF 02 FC 2F FF A4 00 FC 3E 4F 86 21 24 97 9C  // @.../....>O.!$..
    81E0: F7 93 03 F0 07 F4 DA A2 0E 5E 72 09 6A 00 FC 2F  // .........^r.j../
    81F0: F0 6B FF 93 5D 89 09 F4 EA A3 5C 8B 3A 78 C9 D5  // .k..].....\.:x..
    8200: 25 9D A0 46 86 18 2E C1 1B 04 7F 11 7C 0F F0 03  // %..F........|...
    8210: BF FE 0C 09 83 B6 73 A9 71 09 45 00 ED 6D EA 00  // ......s.q.E..m..
    8220: FC 6E 66 02 D0 1F 04 BF DF 99 11 60 03 B0 4F 85  // .nf........`..O.
    8230: 34 F6 E3 FF C0 BF 08 49 85 36 00 FB 03 F2 08 C8  // 4......I.6......
    8240: 83 FA AB B7 A9 41 F0 A3 FF 2A DE 38 34 F7 F0 D8  // .....A...*.84...
    8250: 93 00 4D C0 EB 81 38 06 E2 08 FC 8A C0 2B 30 93  // ..M...8......+0.
    8260: 01 F0 0F FC 0A 8C FE 33 C3 08 E2 60 C8 43 20 04  // .......3...`.C .
    8270: 34 FA 00 FF A3 06 FF CF 2B 8B 38 3A D5 05 DC 4A  // 4.......+.8:...J
    8280: 20 04 2C FA 18 DA F8 81 1A 00 3F 20 EA 08 7A CC  //  .,.......? ..z.
    8290: F4 8A 1A FC 3F AF 2C E2 E8 54 17 27 76 84 1E 11  // ....?.,..T.'v...
    82A0: 40 83 23 EE 0F 2A 11 FC 48 44 0A C0 0F 40 FF 7B  // @.#..*..HD...@.{
    82B0: 42 01 B7 12 08 01 F0 BF 1F A8 01 F0 03 A2 0E 8D  // B...............
    82C0: BE C0 AF A8 C1 FF F3 CA 22 8E 4E 75 57 D1 B5 A8  // ........".NuW...
    82D0: 01 27 F4 CF AF 20 BC 02 21 0B 88 3A 81 A9 41 F0  // .'... ..!..:..A.
    82E0: 33 22 FB 88 A4 98 B2 A0 AA 9B 98 1A 04 3F AB B2  // 3"...........?..
    82F0: AF 4A 12 02 2C 02 BF 13 C1 7C D5 51 05 6F 2A B0  // .J..,....|.Q.o*.
    8300: 08 FC 6E 06 2B 56 67 17 BC 17 F5 02 60 26 27 64  // ..n.+Vg.....`&'d
    8310: 03 34 80 74 BE 4B BE 27 14 A1 87 8B 16 E0 DC 13  // .4.t.K.'........
    8320: F1 FA FF 26 11 FC 4C BC EE AE 19 04 3F 12 AF C0  // ...&..L.....?...
    8330: D8 7B 40 EF FD 24 01 FC 04 C1 5B 04 4F 40 BF 10  // .{@..$....[.O@..
    8340: FC 24 C1 DB 04 EF 41 7D 8B 1A 02 BF 9E 44 17 97  // .$....A}.....D..
    8350: 34 79 E0 06 C1 B3 89 EE 02 6A 82 42 71 61 BA 04  // 4y.......j.Bqa..
    8360: EF 13 BC B7 A9 01 F0 C3 0C 0E 66 F8 11 FC 30 68  // ..........f...0h
    8370: B7 3F 7E 12 5D FB E3 27 D1 B5 3F 7E 12 5D FB E3  // .?~.]..'..?~.]..
    8380: 27 D1 01 B0 3F 90 2B 80 AE BE A1 06 C0 FF AF 2B  // '...?.+........+
    8390: 90 D2 BE A1 1A C0 1F 00 A4 00 90 03 40 82 2A 49  // ............@.*I
    83A0: 40 3F 01 FC 01 60 0A 80 39 00 26 A8 9A 9E 09 3F  // @?...`..9.&....?
    83B0: 28 A4 10 3C 00 FB A8 B1 7A 3F 39 04 3F 7A AC 46  // (..<....z?9.?z.F
    83C0: C1 5F 05 4F 00 6B 00 F7 11 D8 7F 40 FF F3 2B 13  // ._.O.k.....@..+.
    83D0: B1 4F 44 72 15 FB 55 A4 00 AF 04 A5 0A C0 CF 00  // .ODr..U.........
    83E0: 2C 47 B0 25 A5 0A C0 CF 22 2C CF B0 1F D4 13 94  // ,G.%....",......
    83F0: 0A A3 50 49 A9 30 0A 01 B0 5F A6 5C 68 D2 A4 49  // ..PI.0..._.\h..I
    8400: 03 ED FA AB 6B 69 91 02 BF 7E 83 3A 00 FF E8 90  // ....ki...~.:....
    8410: 00 F4 07 C1 3F 3B 26 69 DA A1 69 A7 49 07 80 3E  // ....?;&i..i.I..>
    8420: 08 FA 30 E8 0B FC FA 0D EA 00 FC 04 B1 02 D0 1F  // ..0.............
    8430: 04 3F 51 AC C0 B8 AE A1 0D 80 3D 20 F7 00 FE 7B  // .?Q.......= ...{
    8440: 50 BF 86 36 75 D2 08 BC D2 BC CE FF EC 49 74 00  // P..6u........It.
    8450: EC 63 26 3D F0 6B 0F F0 3F 43 06 C8 FA F0 EB 03  // .c&=.k..?C......
    8460: 98 F7 BF 7E 04 09 83 36 00 FB 98 49 0F FC DA 03  // ...~...6...I....
    8470: FC CF 90 01 B2 C2 A0 0D C0 BE 43 F0 11 B1 42 C8  // ..........C...B.
    8480: 4A A4 36 44 AC 20 E8 13 A9 0D C0 6B E6 74 4A D3  // J.6D. .....k.tJ.
    8490: AD A8 00 64 2B C1 AC D0 80 5B 15 5E 00 E6 44 AC  // ...d+....[.^..D.
    84A0: AE A0 06 C1 8F 11 2B 2B E1 64 62 12 D0 4A 22 26  // ......++.db..J"&
    84B0: 98 DA 60 4A DF FF FA 00 A4 03 98 60 6A FB FF FA  // ..`J.......`j...
    84C0: 00 24 C2 AF 0F 60 82 A9 1D FE F8 49 74 6B 68 03  // .$...`.....Itkh.
    84D0: FC 0F E0 3F 07 AF 0A BB 06 63 1F CB FD F8 E3 27  // ...?.....c.....'
    84E0: D1 7D 40 FF CE 38 C2 AF AE A0 06 C0 9F F0 6B 00  // .}@..8........k.
    84F0: 90 23 42 0A 00 09 CC 64 C0 FE 1F D0 FB 3F BC AA  // .#B....d.....?..
    8500: 10 33 F0 E3 0A B9 82 DA AC 98 B7 A9 03 F0 87 20  // .3............. 
    8510: 0D 40 7F 10 FC 25 48 9B 33 CE 66 6C 10 FC 7E C7  // .@...%H.3.fl..~.
    8520: 7A 9B 4A 00 7F 08 DA 89 6A 03 D0 2F 04 7F 09 DA  // z.J.....j../....
    8530: 8D 6A FB 95 4A AD 18 00 FD 90 0A 1D 48 03 40 AB  // .j..J.......H.@.
    8540: C0 AF E7 D3 1D 48 C1 CC 26 A4 42 11 40 23 C0 EA  // .....H..&.B.@#..
    8550: 0A 6A 10 FC 40 B0 66 C8 E3 6D EA 00 FC 60 66 02  // .j..@.f..m...`f.
    8560: D0 1F 04 3F DC 99 11 60 07 F0 0A C0 3E 00 AF 00  // ...?...`....>...
    8570: EC 03 A0 FF 12 5D 80 3C 00 E8 03 08 C2 00 74 0B  // .....].<......t.
    8580: D0 10 B8 22 E4 8A A1 A4 A9 EA 49 4B D2 AE 4E 30  // ..."......IK..N0
    8590: EB EA 9B 41 F0 0B CC BA FA 64 00 FC 06 B3 B6 00  // ...A.....d......
    85A0: 1D A1 00 10 AC 40 40 06 C1 0F 83 BE 47 90 01 F0  // .....@@.....G...
    85B0: C3 A0 FF 9F 89 DA 74 10 B8 FA E7 EA 4D E4 01 FC  // ......t.....M...
    85C0: 21 48 3F E8 AA 66 64 DE 91 68 66 86 A0 9D A8 B6  // !H?..fd..hf.....
    85D0: 00 AD 4D 44 1E C0 5F 82 F4 83 AE 6A 46 E6 1D 89  // ..MD.._....jF...
    85E0: 66 66 09 DA 8D 6A 13 4D 37 F0 2B C4 74 64 BF 9E  // ff...j.M7.+.td..
    85F0: 44 E7 6D EA 00 FC 00 BB 02 D0 1F 04 3F D0 AE 21  // D.m.........?..!
    8600: DA 00 B0 8F A0 0E C1 D2 0F B6 9A 08 19 34 2B C1  // .............4+.
    8610: DA 02 BC 72 33 79 00 BF 40 AF E5 CA 01 E8 7A A7  // ...r3y..@.....z.
    8620: 1C 82 1A CC 4C 16 32 E4 CD E4 01 FC 01 BD 96 2B  // ....L.2........+
    8630: 07 A0 EB 9D 72 08 6A 30 33 59 C8 50 38 E0 06 81  // ....r.j03Y.P8...
    8640: 7B 84 79 2E 38 91 DA 06 81 83 A0 4F A4 36 D1 74  // {.y.8......O.6.t
    8650: 2C 40 13 D0 0A 8F 3E 10 91 01 F0 07 FC 0A 31 DD  // ,@....>.......1.
    8660: 87 3C 1D F2 44 4A 47 34 DD 8A 02 40 B2 12 CC 0A  // .<..DJG4...@....
    8670: 0D B8 45 E0 01 60 CE C4 0A A6 B6 02 D0 01 B0 0A  // ..E..`..........
    8680: C4 0A 20 6B C0 AC AA AA EB 0C 8B A6 36 9C D2 00  // .. k........6...
    8690: FF 27 C8 6A 22 38 9C DA 74 4A B7 00 1D 21 06 88  // .'.j"8..tJ...!..
    86A0: 04 02 B1 86 C0 0A F4 EB D3 93 03 F0 3B 83 1A 00  // ............;...
    86B0: 3F 82 AC 74 6A 07 CC FA 20 AB 40 AC 01 B0 E2 A9  // ?..tj... .@.....
    86C0: 4D 30 2B 80 AC 7C 6A 03 08 00 F0 3F C0 FF 0E C0  // M0+..|j....?....
    86D0: 02 08 F2 33 DD 87 00 0A 40 37 00 ED 00 6A 01 FC  // ...3....@7...j..
    86E0: 01 B0 16 00 69 00 38 01 FD 03 F0 13 C0 9A 00 A4  // ....i.8.........
    86F0: 00 E0 03 B1 06 A0 49 A6 34 20 AD 21 12 10 00 89  // ......I.4 .!....
    8700: 00 26 02 AD 03 BC 72 83 1A 04 3F 45 98 22 A2 07  // .&....r...?E."..
    8710: CC 4A A6 76 D7 74 A0 D3 05 E8 C1 02 74 02 D0 FE  // .J.v.t......t...
    8720: A0 26 2F E4 FD 64 ED 62 04 BF C2 73 0F 8F 3E 3C  // .&/..d.b...s..><
    8730: F6 09 BC FE FC FA B1 24 C1 AF F5 4A 0A C0 2F AA  // .......$...J../.
    8740: 3A EC EA A4 D4 B1 00 9D 00 B4 C0 AF DF 4F 1E 2F  // :............O./
    8750: 46 F0 2B 3C F7 EA 8F C3 63 9F C0 EB CF AF 1F 4B  // F.+<....c......K
    8760: 12 FC 5A AF A4 00 FC A2 AA C3 AE 4E 4A 1D 3C FA  // ..Z........NJ.<.
    8770: 01 FA 00 08 00 F0 3F C0 FF 0E C0 02 08 F2 9F 80  // ......?.........
    8780: 0B D0 00 FF 07 80 AA BE 50 00 AC 08 41 16 C0 EF  // ........P...A...
    8790: 22 00 C0 FF 00 FF 3B 80 AA BE 10 9D D2 3D 49 03  // ".....;......=I.
    87A0: FC 4F 25 3A 88 E0 2E A5 06 C0 8F 20 AB C0 AD 57  // .O%:....... ...W
    87B0: 45 06 C1 0F 22 01 C0 FF 00 FF D3 A9 FD 33 DD 87  // E..."........3..
    87C0: 00 0A 40 37 00 ED 00 6A 01 FC 04 B0 16 00 29 00  // ..@7...j......).
    87D0: 38 01 FD 02 F0 43 C0 9A 00 E4 50 AC 01 68 92 29  // 8....C....P..h.)
    87E0: 0D 48 6B 88 04 04 40 22 80 29 22 BA 4F F0 64 6A  // .Hk...@".)".O.dj
    87F0: 77 4D 07 3A 1D 83 10 02 B0 7A 9B 1A 04 BF 00 E0  // wM.:.....z......
    8800: 08 40 0A C0 0F 40 BF 06 43 0E 40 43 C0 0A F0 7F  // .@...@..C.@C....
    8810: 42 90 10 A0 6A 30 F4 21 00 C0 FF 00 FF 3B 00 FB  // B...j0.!.....;..
    8820: 21 88 40 AC 01 A4 F6 2D E4 0D A4 09 63 04 B0 02  // !.@....-....c...
    8830: E0 0A 88 3D 00 F7 09 BF 02 C0 1A C0 3D 30 AC 01  // ...=........=0..
    8840: D8 63 56 27 00 2B 34 90 33 8C 11 C0 0A 84 2B 20  // .cV'.+4.3.....+ 
    8850: F6 00 DC 27 FC 1A 00 6B 00 F7 00 B0 06 60 8F 59  // ...'...k.....`.Y
    8860: 1D 80 00 00 FF 03 FC EF 00 2C 80 20 3F D3 29 00  // .........,. ?.).
    8870: 0D 04 2B C0 FF 09 40 0A 80 3E 10 6B 00 9A FE 81  // ..+...@..>.k....
    8880: 90 29 0D 48 6B 88 04 04 40 22 80 29 22 7A C0 AC  // .).Hk...@".)"z..
    8890: 64 6A 77 4D 07 3A 5D 09 D0 0C 42 80 C0 5A 00 24  // djwM.:]...B..Z.$
    88A0: 12 FC 02 B0 7A 9B 1A 04 BF 00 E0 08 40 0A C0 0F  // ....z.......@...
    88B0: 40 7F 1B 43 2E 40 03 FC 8F 00 2B 42 90 10 A0 B6  // @..C.@....+B....
    88C0: 31 04 08 2B 42 90 05 F0 BB 08 00 F0 3F C0 FF 0E  // 1..+B.......?...
    88D0: A0 B6 31 D4 21 00 C0 FF 00 FF 43 A0 DF A1 88 03  // ..1.!.....C.....
    88E0: A9 C9 0B FD 4C 87 02 34 00 AF 40 B8 06 22 19 00  // ....L..4..@.."..
    88F0: FF B0 75 DE 4C 1A C0 1F D0 2B 00 AF 09 BF 0A 4F  // ..u.L....+.....O
    8900: 87 A0 06 C0 FF 02 BC 72 33 69 00 BF 40 AF 00 BC  // .......r3i..@...
    8910: 26 FC 2A 3C 1D 82 1A 00 FF D7 4C 07 C0 3E 82 3A  // &.*<......L..>.:
    8920: 34 40 03 FC 0F F0 BF CF 90 9D 0C 79 0F 49 00 7F  // 4@.........y.I..
    8930: 08 D2 F8 CC 85 A0 9D A8 B6 C0 AC D3 43 76 32 36  // ............Cv26
    8940: 30 6B 0F A8 02 F0 97 20 8D CF 5C 09 DA 8D 6A 03  // 0k..... ..\...j.
    8950: A0 FF 12 1D C1 D2 0F B6 9A 08 09 66 AB 89 98 18  // ...........f....
    8960: B3 12 AC 0D 35 1D D1 74 02 BF 42 4C A7 34 5D CD  // ....5..t..BL.4].
    8970: 74 15 CD 45 4A 07 87 3E 99 D2 80 B4 12 00 79 4F  // t..EJ..>......yO
    8980: 2B 45 90 20 E8 C3 A0 4F A6 36 99 D2 80 B4 12 00  // +E. ...O.6......
    8990: 29 26 AB 00 AD D4 A0 06 C1 8F 26 EB 00 AD 04 60  // )&........&....`
    89A0: 42 CC 4A 0D AA 10 FC 08 B4 52 84 49 A6 76 D7 74  // B.J......R.I.v.t
    89B0: 64 4A 23 D0 0A 44 24 DD 99 7E A5 DA 33 04 80 FE  // dJ#..D$..~..3...
    89C0: 4B 74 DE 4C 6A 33 26 82 34 04 AF AC CA 06 C1 EF  // Kt.Lj3&.4.......
    89D0: BB AC 08 DA 8A 6A AF 04 2F C0 2B 37 93 E5 8C 99  // .....j../.+7....
    89E0: 20 0D C1 2B AB B2 41 F0 FB 2E 6B 82 B6 A3 DA 3B  //  ..+..A...k....;
    89F0: C1 C3 A1 3F B2 A6 AF A9 02 F0 03 D0 FF CA 90 04  // ...?............
    8A00: D0 19 F2 10 FC EA 0D 64 00 FC AF 6A 0A C0 0A 0D  // .......d...j....
    8A10: 64 00 FC BF 6B 4A 80 5D 33 1D 00 FB 01 B3 9A 89  // d...kJ.]3.......
    8A20: 6E 16 B8 45 E8 76 87 9F 80 39 00 B0 C1 E9 06 82  // n..E.v...9......
    8A30: 87 98 09 C0 FE 8A 02 40 B2 12 CC 8A F0 2B 34 E0  // .......@.....+4.
    8A40: 0F 60 5A 04 1E 00 26 43 AC 21 62 5A C4 0A A6 76  // .`Z...&C.!bZ...v
    8A50: C1 AF 27 D1 AD A1 0D F0 3F 80 FF 00 EC 1B C4 0A  // ..'.....?.......
    8A60: 0D B8 45 E0 01 60 12 CB 4A 30 EB 44 AC 60 6A 2B  // ..E..`..J0.D.`j+
    8A70: 00 1D 00 AB 40 AC 12 B2 0E D0 4A 0D 2A 11 FC 7F  // ....@.....J.*...
    8A80: B7 1E 0A 19 04 BF 86 AC 30 E8 A3 A9 9D 20 2B 20  // ........0.... + 
    8A90: AC 13 B0 0A C4 6A 22 38 0C FA 70 6A 87 09 1D 02  // .....j"8..pj....
    8AA0: AB 40 AC 01 B2 06 CC 4A A7 76 9E DA 02 B0 0A C4  // .@.....J.v......
    8AB0: 0A 20 2B C1 AC 7C 6A 03 B0 8F A0 0E C1 D2 0F B6  // . +..|j.........
    8AC0: 9A 08 19 34 2B C1 DA 01 F2 00 A0 3F 21 48 0B D0  // ...4+......?!H..
    8AD0: 08 B9 12 CC 9A 94 64 10 FC 02 B3 B6 00 1D A1 00  // ......d.........
    8AE0: 10 AC 40 40 06 C1 0F 83 BE 47 90 01 F0 C3 A0 2F  // ..@@.....G...../
    8AF0: A1 49 86 08 50 E8 D3 00 BD 21 4A 86 2A 20 B4 02  // .I..P....!J.* ..
    8B00: 11 F9 D8 18 D1 74 03 BF 5E 4A E7 0D 24 5E 63 01  // .....t..^J..$^c.
    8B10: BD AA 4D 87 82 74 03 D0 0F B8 62 04 69 80 2B 21  // ..M..t....b.i.+!
    8B20: 92 84 88 C3 E4 8A 99 70 46 98 33 B0 A2 A0 8D 9E  // .......pF.3.....
    8B30: 76 80 AE 77 CA 21 A8 F1 CC 24 AE 43 02 B0 42 03  // v..w.!...$.C..B.
    8B40: F9 D8 18 0B D2 0D 40 3F E0 8A 11 A4 01 AE 84 48  // ......@?.......H
    8B50: 12 22 0E 93 2B 66 C2 19 61 CE C0 CA 82 36 7B DA  // ."..+f..a....6{.
    8B60: 02 BD AA 4D 17 A0 EB 9D 72 08 6A 3C 33 89 EB 10  // ...M....r.j<3...
    8B70: F0 AE 02 BA 6A 83 1A 00 3F E0 AE 21 DA 10 4D C7  // ....j...?..!..M.
    8B80: 02 34 01 AD F0 E8 03 11 19 00 7F C0 AF 97 D2 79  // .4.............y
    8B90: C8 D3 21 4F A4 74 44 D3 AD 28 50 01 34 90 AC 04  // ..!O.tD..(P.4...
    8BA0: B3 42 03 6E 11 78 00 98 80 B1 86 88 09 6F AB 11  // .B.n.x.......o..
    8BB0: 91 08 B1 52 84 09 A6 B6 02 D0 01 B0 0A C4 0A 20  // ...R........... 
    8BC0: 6B C0 AC AA AA EB 0C 8B A6 36 9C D2 00 FF 03 CA  // k........6......
    8BD0: 0A A7 36 9D D2 2D 40 47 88 01 22 81 40 AC 21 B0  // ..6..-@G..".@.!.
    8BE0: 02 FD FA F4 E4 00 FC CE A0 06 C0 8F 20 2B 9D DA  // ............ +..
    8BF0: 01 B3 3E C8 2A 10 6B 00 AC 78 6A 13 CC 0A 20 2B  // ..>.*.k..xj... +
    8C00: 9F DA 13 02 00 FC 0F F0 BF 03 B0 13 82 FC 4C E7  // ..............L.
    8C10: 21 80 02 D0 0D 40 3B 80 5A 00 BF 00 AC 05 40 12  // !....@;.Z.....@.
    8C20: 00 4E 40 FF 00 FC 08 B0 26 00 09 00 F8 40 AC 01  // .N@.....&....@..
    8C30: 68 92 29 0D 48 6B 88 04 04 40 22 80 89 40 EB 00  // h.).Hk...@"..@..
    8C40: AF DC A0 06 C1 4F 11 A6 88 E8 01 B3 92 A9 DD 35  // .....O.........5
    8C50: 1D E8 74 01 7A B0 00 9D 00 B4 3F A8 1C 0E 79 3F  // ..t.z.....?...y?
    8C60: 89 E0 18 C1 AF F0 DC 03 FE 0A 8F 3D 39 E3 3F BF  // ...........=9.?.
    8C70: 7E 2C 49 F0 6B BD 92 02 F0 8B AA 0E BB 3A 29 75  // ~,I.k........:)u
    8C80: 02 BC 72 33 A9 E1 18 0B D0 09 40 13 FC 0A CF 3D  // ..r3......@....=
    8C90: F0 AF F0 D8 93 33 FE F3 EB C7 92 04 BF D6 2B 29  // .....3........+)
    8CA0: 00 BF A8 EA B0 AB 93 52 07 8F 7E 80 3E 13 02 00  // .......R..~.>...
    8CB0: FC 0F F0 BF 03 B0 13 82 48 28 30 21 80 0B D0 00  // ........H(0!....
    8CC0: FF 07 80 5A E3 50 00 AC 08 41 16 C0 EF 22 00 C0  // ...Z.P...A..."..
    8CD0: FF 00 FF 3B 80 5A E3 10 9D D2 20 7A 00 FC 0F F0  // ...;.Z.... z....
    8CE0: FF 4B F0 74 6A FF 4C E7 21 80 02 D0 0D 40 3B 80  // .K.tj.L.!....@;.
    8CF0: 5A 00 3F 02 AC 05 40 02 00 4E 40 FF 00 FC 20 B0  // Z.?...@..N@... .
    8D00: 26 00 09 00 FA 50 AC 01 68 92 29 0D 48 6B 88 04  // &....P..h.).Hk..
    8D10: 04 40 22 80 29 22 7A C0 AC 64 6A 77 4D 07 3A 1D  // .@".)"z..djwM.:.
    8D20: 83 10 01 B0 7A 9B 1A 04 BF 00 E0 08 40 0A C0 0F  // ....z.......@...
    8D30: 40 3F 96 43 DE 40 92 39 46 00 2B 20 AE 80 D8 03  // @?.C.@.9F.+ ....
    8D40: 70 8F F0 2B 30 AC 01 D8 03 C0 1A C0 3D 66 75 02  // p..+0.......=fu.
    8D50: B0 42 03 19 E7 18 01 AC C0 B8 02 62 0F C0 3D C2  // .B.........b..=.
    8D60: AF 00 B0 06 60 1F 00 6B 00 F7 98 D5 4D 08 00 F0  // ....`..k....M...
    8D70: 3F C0 FF 0E C0 4E 08 F2 33 9D 02 D0 80 B4 0E D4  // ?....N..3.......
    8D80: 9A 84 24 21 EA FE C1 14 A2 89 00 26 99 DA 5D D3  // ..$!.......&..].
    8D90: 81 4E C7 20 44 00 AC DE A6 06 C1 2F 00 38 02 90  // .N. D....../.8..
    8DA0: 02 F0 03 D0 0F EA 90 0B D0 00 FF 23 C0 8A 10 24  // ...........#...$
    8DB0: 04 A8 A0 0E 01 C2 8A 10 64 01 FC 2E 02 00 FC 0F  // ........d.......
    8DC0: F0 BF 03 A8 A0 0E 75 08 00 F0 3F C0 FF 10 E8 77  // ......u...?....w
    8DD0: 28 E2 40 2A 87 43 3F D3 A1 00 1D C0 2B 20 AE 81  // (.@*.C?.....+ ..
    8DE0: 48 06 C0 3F 6C 9D 37 93 06 F0 07 F4 1A C0 2B C2  // H..?l.7.......+.
    8DF0: AF C2 D3 21 A8 01 F0 BF 00 AF DC 4C 1A C0 2F D0  // ...!.......L../.
    8E00: 6B 00 AF 08 BF 0A 4F 87 A0 06 C0 FF 35 D3 01 B0  // k.....O.....5...
    8E10: 8F A0 0E C1 D2 0F B6 9A 08 09 68 AB 89 98 20 B3  // ..........h... .
    8E20: 12 AC 1D 01 2B 51 74 00 E8 03 C5 0A 82 3E 0C FA  // ....+Qt......>..
    8E30: 44 6A 13 4D 27 F0 EB A5 74 06 B1 42 03 6E 11 78  // Dj.M'...t..B.n.x
    8E40: 00 98 C4 B2 12 CC 8A 11 2B 98 DA 31 40 7F CC AA  // ........+..1@...
    8E50: 20 EB 00 AD D4 A0 0E C1 3F 26 64 10 FC 16 B2 06  //  .......?&d.....
    8E60: C0 2A 10 2B 0C FA 68 6A 4F C0 2A 10 2B 82 AC 26  // .*.+..hjO.*.+..&
    8E70: 82 C3 A0 0F A7 76 98 D0 21 B8 0A E4 1A A0 6B C0  // .....v..!.....k.
    8E80: AE 76 6A E7 A9 2D 00 AB 40 AC 00 B2 12 CC CA A7  // .vj..-..@.......
    8E90: 76 A4 74 70 E8 FF 4C 47 A6 34 20 AD 04 40 4E C9  // v.tp..LG.4 ..@N.
    8EA0: 2A 40 2B 35 A8 41 F0 6F C9 3A 40 2B 01 98 D4 A0  // *@+5.A.o.:@+....
    8EB0: 0A C1 8F 40 2B 45 98 10 B3 92 A9 DD 35 1D 99 D2  // ...@+E......5...
    8EC0: 08 B4 02 11 49 77 A6 5F A9 30 0F 45 C0 4A 14 DD  // ....Iw._.0.E.J..
    8ED0: 7F AD DE 44 1A C0 1F D0 2B 00 AD 01 BF 9E 4F 87  // ...D....+.....O.
    8EE0: A0 06 57 F0 02 B4 52 13 59 00 BF 40 AF 00 B4 06  // ..W...R.Y..@....
    8EF0: FC 7A 3E 1D 82 1A 01 BB B2 68 03 87 7E 31 93 F5  // .z>......h..~1..
    8F00: 0E 49 00 9D 21 0F C8 AF DE 40 06 C0 FF AA A6 00  // .I..!....@......
    8F10: AC D0 40 06 C0 FF BB A6 04 D8 44 D3 FD 4C 07 C0  // ..@.......D..L..
    8F20: 3E 82 3A 07 FA 10 2C FD 60 AB 89 90 41 B7 DE 8C  // >.:...,.`...A...
    8F30: 49 B0 36 00 FA 0A 82 6C 08 02 BC AB 00 AC D0 A0  // I.6....l........
    8F40: 06 C0 0F B8 EB 1F AC FE A1 06 C1 0F BB 64 88 36  // .............d.6
    8F50: 2A 40 FF D0 0A F0 3F ED 92 BB 48 06 C1 8F 81 6B  // *@....?...H....k
    8F60: 82 30 65 4A 87 48 11 B8 6B C0 AD A2 A6 97 A9 6D  // .0eJ.H..k......m
    8F70: 69 1D 08 AF 1A D5 0D F0 CA 0D 6A D9 43 65 4A 03  // i.........j.CeJ.
    8F80: E5 9A AA 6C C0 AD A2 A6 97 A9 6D 69 1D 08 AF 1A  // ...l......mi....
    8F90: D5 45 4A 47 34 DD 8A 02 15 40 03 C9 4A 30 2B 34  // .EJG4....@..J0+4
    8FA0: E0 16 81 07 80 09 18 6B 88 98 08 B1 C2 DB 6A 44  // .......k......jD
    8FB0: 24 45 98 60 6A 07 C0 2A 10 2B 80 AC 02 B3 A2 A9  // $E.`j..*.+......
    8FC0: 8D 20 EB 04 AC 02 B1 9A 08 0E 83 3E 9C DA 09 40  // . .........>...@
    8FD0: 8B 09 1D 02 AB 40 AC 01 B3 FE D0 7A 24 64 10 FC  // .....@.....z$d..
    8FE0: 0F B2 D2 A9 AD A7 76 00 AC 02 B1 82 A0 4F 30 2B  // ......v......O0+
    8FF0: 9F DA 21 62 00 C2 0A 8F 3E 70 A8 41 F0 FB 07 1F  // ..!b....>p.A....
    9000: C1 EB 09 74 3F D3 29 08 50 02 34 C4 AF 0E C0 2A  // ...t?.).P.4....*
    9010: 08 F2 F5 E4 00 FC 7F D0 01 D0 CF FA 10 C2 AF 0E  // ................
    9020: A0 06 C0 EF 1F BC 88 75 80 4A FB 83 1A 04 3F A1  // .......u.J....?.
    9030: DA 3F D3 85 48 00 81 FE C0 AC D3 A0 06 C1 8F 10  // .?..H...........
    9040: EB 08 AC 22 A2 07 CC 4A A6 76 D7 74 25 40 2B 08  // ..."...J.v.t%@+.
    9050: 00 F1 EB D7 93 42 F0 3B 80 8A F9 98 82 18 DE 40  // .....B.;.......@
    9060: 32 3F 16 22 00 41 AC 10 DC 03 60 8F F0 2B 30 AC  // 2?.".A....`..+0.
    9070: 00 B1 06 60 1F C1 3D 66 75 02 B0 42 03 E9 FD 58  // ...`..=fu..B...X
    9080: 88 00 04 B1 42 70 3F 10 6B 34 A8 42 F0 03 C5 1A  // ....Bp?.k4.B....
    9090: 00 2C 00 F6 08 BF 02 C0 1A 10 6B 00 F6 11 DC 63  // .,........k....c
    90A0: 56 17 22 06 20 AC FE C1 03 87 1A 04 3F 3C FA 11  // V.". .......?<..
    90B0: BC 9E 40 F7 33 9D 82 00 25 40 43 FC EA 00 AC 82  // ..@.3...%@C.....
    90C0: 20 5F 4F E2 3F 84 F0 EB 00 AD 04 A0 06 C0 EF 1F  //  _O.?...........
    90D0: BC 88 75 80 4A FB 83 1A 04 3F A1 DA 3F D3 85 48  // ..u.J....?..?..H
    90E0: 30 00 2B 04 FA D0 A0 06 C1 8F 10 AB 88 E8 01 B3  // 0.+.............
    90F0: 92 A9 DD 35 1D E8 74 25 40 2B 08 00 F1 EB D7 93  // ...5..t%@+......
    9100: 43 F0 0F D4 5A 00 AA F9 63 3F D3 A1 00 7D 20 06  // C...Z...c?...} .
    9110: C0 FF 1A A1 7B 04 CC 01 6A 10 FC C3 D6 1D 88 E1  // ....{...j.......
    9120: 9D 64 01 FC 01 BD 22 FC 2A 3C 1D 82 1A 07 62 08  // .d....".*<....b.
    9130: E4 9A 9D 64 01 FC 02 BD 22 FC 2A 3C 1D 82 1A 00  // ...d....".*<....
    9140: FF D7 4C 07 C0 BE 37 90 3D 90 31 23 1D 8D 74 15  // ..L...7.=.1#..t.
    9150: 74 CC 68 47 A3 4D 8D 74 36 D2 55 D0 51 A3 9D 8D  // t.hG.M.t6.U.Q...
    9160: 36 37 D2 FE A0 12 C0 CF 00 2C 47 B0 00 F4 0B C1  // 67.......,G.....
    9170: CF 00 30 47 C0 DC 68 0B C0 0A 0D 24 15 64 EC 48  // ..0G..h....$.d.H
    9180: C7 23 5D 05 1D 3B DA F1 68 D3 23 9D 8F 74 15 74  // .#]..;..h.#..t.t
    9190: F4 68 E7 A3 CD 8F B4 3F A8 04 F0 33 00 CB 11 2C  // .h.....?...3...,
    91A0: 00 FD 42 F0 33 00 CC 11 30 3F DA 00 EC FB 83 0A  // ..B.3...0?......
    91B0: 06 19 03 B0 1C C1 B2 08 CB 33 2C 13 B1 5C C5 B2  // .........3,..\..
    91C0: 19 CB 77 2C 00 FB 0C 00 73 04 CC 22 30 CF C0 4C  // ..w,....s.."0..L
    91D0: 04 73 15 CC 66 30 DF C1 00 EC 3F E0 0A 9F 2B 82  // .s..f0....?...+.
    91E0: 92 09 4B E2 41 87 A1 64 C6 92 78 D0 A1 28 99 B2  // ..K.A..d..x..(..
    91F0: 24 1E 74 38 4A E6 2C 89 07 1D 00 FB AE A1 06 C1  // $.t8J.,.........
    9200: BF 21 8F 6F A8 41 F0 6F C8 03 C0 7E 9A 74 6B 68  // .!.o.A.o...~.tkh
    9210: C7 00 4D 11 2B 30 AC 00 DC 43 60 3F F0 EB 53 91  // ..M.+0...C`?..S.
    9220: 02 BC 02 D0 EA 15 2A 01 FC 55 B4 7A 81 1A 00 FF  // ......*..U.z....
    9230: 1F AD 44 C0 7B 99 4A 04 3F 11 F0 FC A6 06 C0 3F  // ..D.{.J.?......?
    9240: 44 3A 41 F0 14 C1 93 04 4F 13 3C 80 FF 1E D4 AF  // D:A.....O.<.....
    9250: A1 0D B0 BF FF C3 90 10 0D FC CA 05 6A 10 FC BF  // ............j...
    9260: B4 12 01 EF 65 2A 11 FC 44 C0 F3 9B 1A 00 FF 10  // ....e*..D.......
    9270: E9 04 C1 53 04 4F 12 3C 4D F0 00 FE 7B 50 BF 86  // ...S.O.<M...{P..
    9280: 36 C0 FE FE 0F 97 42 04 3F EB 48 F0 5C A0 0A C1  // 6.....B.?.H.\...
    9290: FF 30 EB BF AC 12 C1 07 04 4F A8 36 7C AC 5E A1  // .0.......O.6|.^.
    92A0: 06 C0 FF 10 6B 40 F0 5C A0 0A C1 FF 10 EB 3F AC  // ....k@.\......?.
    92B0: 20 C1 C3 04 0F A8 36 00 FB 54 48 FF D4 3A 35 E4  //  .....6..TH..:5.
    92C0: C3 AD 37 63 52 A1 0D C0 7E 0D D0 11 5A 10 FC 6A  // ..7cR...~...Z..j
    92D0: FF E4 37 64 BB 6B 7E 43 D4 C1 AB 9B 91 01 F0 7F  // ..7d.k~C........
    92E0: F0 8A A7 9D 55 71 88 4C 47 27 3D C0 EB B1 90 88  // ....Uq.LG'=.....
    92F0: 6C E3 00 1D A1 87 8B 16 11 61 D2 43 66 C1 FA FF  // l........a.Cf...
    9300: 9B F3 10 59 30 6E CC FA EE 9A 42 F0 DB 30 6E CC  // ...Y0n....B..0n.
    9310: 7A 96 74 EA C6 E1 17 D7 0F 1D 5F D2 FB B4 52 04  // z.t......._...R.
    9320: C9 97 F6 1A DA 00 EC 47 88 31 F0 2B 3C F7 80 BF  // .......G.1.+<...
    9330: C2 63 EF 01 FD C7 AF 80 BB 3E 00 C9 CC 66 10 FC  // .c.......>...f..
    9340: 0B 60 42 04 0F 12 3C 4C F0 0A BF 7A 50 0F B0 BF  // .`B...<L...zP...
    9350: FF C3 0D 11 01 FF 0A 8F BD C2 AF 1E D4 03 EC EF  // ................
    9360: FF 30 45 44 00 EC 2B 23 4D F0 2B 4A F0 2F 68 2A  // .0ED..+#M.+J./h*
    9370: A3 2D 18 BC 32 DA 40 BF A2 04 FF 82 A6 32 DA 82  // .-..2.@......2..
    9380: C1 2B A3 0D C0 BE FF C3 27 11 01 B0 4F 85 F4 C3  // .+......'...O...
    9390: AF 3F 63 52 A1 0D C0 3E 44 F0 20 C1 C3 04 EF CD  // .?cR...>D. .....
    93A0: A4 01 FC 08 69 33 A4 0D 91 36 45 DA 18 69 73 A4  // ....i3...6E..is.
    93B0: 2D C0 2B 37 93 06 F0 83 A4 4D 92 36 4A DA 2C 69  // -.+7.....M.6J.,i
    93C0: C3 A4 4D 93 36 00 FB 10 C1 83 04 0F 13 BC 37 93  // ..M.6.........7.
    93D0: 05 F0 33 A3 0D 8D 36 35 DA D8 68 73 A3 2D C0 2B  // ..3...65..hs.-.+
    93E0: 37 93 05 F0 B3 A3 0D 8F 36 3D DA F8 68 F3 A3 0D  // 7.......6=..h...
    93F0: C0 3E 00 FA 10 E8 0F C8 0A 30 2B 0C DA 00 EC C3  // .>.......0+.....
    9400: A0 0F 2E 38 04 FA 00 E8 C3 A0 0D C0 3E 0B D0 00  // ...8........>...
    9410: FF 03 FC 0F 82 3E 0C FA 2C 60 03 A0 0F 81 3E 06  // .....>..,`....>.
    9420: D8 1C 60 03 B0 5F 24 34 00 F6 10 DC 87 A1 BD 86  // ..`.._$4........
    9430: 36 C0 FF 00 FE 07 09 0D F0 BF 27 F4 61 68 AF A1  // 6.........'.ah..
    9440: 0D F0 3F 80 FF 1D 4C AF A1 0D C0 BE 91 D0 00 D8  // ..?...L.........
    9450: 43 70 2F 86 F6 1A DA 00 FF 03 F8 EF 45 3D 00 FB  // Cp/.........E=..
    9460: D4 49 3B 33 EB F3 EC 49 74 CE 0C 2B 46 04 C0 7E  // .I;3...It..+F..~
    9470: 76 74 5D D1 31 20 3D C0 2B CD EB 27 D1 71 26 1D  // vt].1 =.+..'.q&.
    9480: 21 86 0A D0 00 B4 32 B3 F9 19 99 40 AD 5A 45 06  // !.....2....@.ZE.
    9490: C0 8F 40 EB BD AD 26 42 92 88 C9 99 76 74 D2 00  // ..@...&B....vt..
    94A0: FF 07 D8 0A 71 2B 80 74 70 49 C3 A1 1F 15 3C 50  // ....q+.tpI....<P
    94B0: F0 31 68 F3 E3 3A 15 BC 50 F0 58 45 D2 25 0D 20  // .1h..:..P.XE.%. 
    94C0: 5D 0C DA 51 C1 03 05 0F 20 5D 0C DA 53 C1 0B 05  // ]..Q.... ]..S...
    94D0: 8F 99 34 80 74 31 68 47 05 0F 14 3C 80 74 31 68  // ..4.t1hG...<.t1h
    94E0: 4F 05 2F 14 3C 67 D2 00 D2 C5 A0 1D 15 3C 50 F0  // O./.<g.......<P.
    94F0: 00 D2 C5 A0 3D 15 BC 50 F0 E8 48 03 48 17 83 F6  // ....=..P..H.H...
    9500: 54 F0 42 C1 43 DC 0A 20 5D 0C DA 51 C1 03 05 0F  // T.B.C.. ]..Q....
    9510: 20 5D 0C DA 00 EC 5B 27 0D F0 3F ED EB 27 D1 01  //  ]....['..?..'..
    9520: B0 0F 8C B4 EC D0 F3 BC 72 04 39 C0 2B 47 98 C0  // ........r.9.+G..
    9530: 68 83 F0 CA 88 26 67 9A AC 6A F2 AE 29 3B 36 31  // h....&g..j..);61
    9540: DA F2 63 03 B0 0F 8C B4 EC D0 F0 B4 3E D4 4A 11  // ..c.........>.J.
    9550: 64 89 90 35 43 02 A3 4D 8C F6 F7 AF 8F 48 7E 26  // d..5C..M.....H~&
    9560: F9 AA E4 EF 92 35 47 CB 8E 2D 3F 36 00 FB 00 FF  // .....5G..-?6....
    9570: 03 FC 0F F0 3F 00 FB 34 47 7F DB 8A 54 B8 01 90  // ....?..4G...T...
    9580: 05 60 42 04 0F 12 3C 4C F0 34 67 E3 9C 4D 77 36  // .`B...<L.4g..Mw6
    9590: DE D9 C0 48 FF D8 FA 7C AB 89 90 37 43 CA 00 0D  // ...H...|...7C...
    95A0: 6C 2B CC AD BE 4B 06 C0 0F 70 AB 13 A8 02 F0 83  // l+...K...p......
    95B0: A1 0F 70 AB 89 98 37 63 02 A3 4D 8C 36 00 FB 69  // ..p...7c..M.6..i
    95C0: D2 AD A1 AD 24 B4 43 F0 10 E8 83 A0 0F 83 FE 04  // ....$.C.........
    95D0: E9 10 D8 03 71 0F E0 BF 07 F5 6B 68 0B FC 7A 12  // ....q.....kh..z.
    95E0: 1D 69 DA A2 69 03 A0 0F E0 BF 07 F5 6B 68 13 FC  // .i..i.......kh..
    95F0: 7A 12 1D 69 DA 6B 68 03 B0 EF 44 AC 12 FC 5E C5  // z..i.kh...D...^.
    9600: 22 C1 EF 66 AC 11 FC 7E C7 12 C1 FF 4F EB 7F AD  // "..f...~....O...
    9610: FF B6 FE DF 0A C0 7E 75 D2 03 BB DE 96 BF BB 66  // ......~u.......f
    9620: 01 FC BE 0B FF F3 9A 25 9D EF C2 51 12 0D F0 7A  // .......%...Q...z
    9630: 4C 7E 96 74 00 EC 3B 87 7A 00 BF 33 C3 7C BF 9E  // L~.t..;.z..3.|..
    9640: 44 07 F0 3F C0 FF CE 0C 73 49 04 C0 FE 3F AC FF  // D..?....sI...?..
    9650: B1 FE CB FA 3F 2B A4 DA 00 EC FF C1 FA 1F EB BF  // ....?+..........
    9660: AC FF B3 82 A1 0D C0 BE 58 F0 6E 06 43 70 0F 80  // ........X.n.Cp..
    9670: BD 27 F4 00 FF 03 FC 5F 88 E4 20 9A 98 C1 A3 06  // .'....._.. .....
    9680: 8F 1B BC 27 F5 00 FB BB 19 3C 27 11 00 FB 98 49  // ...'.....<'....I
    9690: 3F E0 5A 9F 2B 0C FA 2E C1 3B 83 2A 00 3F 02 98  // ?.Z.+....;.*.?..
    96A0: 19 41 C2 A0 8D 80 34 10 AE CE A0 0A C0 8F 00 26  // .A....4........&
    96B0: 02 DA 00 EC FF C3 FA 1B EB BF AC FF B3 82 A1 0D  // ................
    96C0: C0 FE 1F AC FF B1 FE CB FA 3F 2B 18 DA 6B 68 53  // .........?+..khS
    96D0: C4 0A 0C 2B 00 F7 10 D8 FB 83 4A 00 3F 00 FA 10  // ...+......J.?...
    96E0: E8 83 A0 0F 83 BE 3F A8 44 F0 57 C1 0A 11 3C 48  // ......?.D.W...<H
    96F0: F0 30 C1 FB 83 4A 00 FF 3F AD 54 C1 93 05 4F 17  // .0...J..?.T...O.
    9700: BC 3F A8 44 F0 AB D2 4A 15 3C 59 F0 74 C1 1F F0  // .?.D...J.<Y.t...
    9710: EA 3F 2A B7 44 00 FE 7B 50 BF 86 36 C0 FE CE 0C  // .?*.D..{P..6....
    9720: 03 F8 EF 45 FD 1A DA 00 FB 3B 33 CC 2B 11 18 FA  // ...E.....;3.+...
    9730: A0 E8 C3 A2 0F 4F AB 12 98 10 C1 83 04 0F 13 3C  // .....O.........<
    9740: A1 DA FE A0 0E C0 0F 4F 2B 01 FD 01 F0 3F D0 BA  // .......O+....?..
    9750: 04 26 44 F0 20 C1 C3 04 0F A8 36 00 FB 00 FE 7B  // .&D. .....6....{
    9760: 50 BF 86 36 C0 FE CE 0C 0F E4 9A 5F 2A 11 FC 40  // P..6......._*..@
    9770: E8 43 A1 0F 86 3E 1C FA 00 FE 7B 51 BF 86 36 C0  // .C...>....{Q..6.
    9780: FE CE 0C A3 4B 94 6F AA BE 44 FF B4 FE D7 FA 6F  // ....K.o..D.....o
    9790: EB FF AD 00 FD 03 F4 0F D0 3F 80 FF 5E D4 AF A1  // .........?..^...
    97A0: 0D 0F EB 7F AC F9 A1 0A C0 0F 80 3E 04 FA 21 C1  // ...........>..!.
    97B0: C7 04 9F 6F 6A 10 FC F0 B2 12 AA 0D A8 36 00 FB  // ...oj........6..
    97C0: 9F D0 07 EC 0F F0 BF 27 F5 00 FB FB 3F 8C 30 11  // .......'....?.0.
    97D0: 00 FB 08 B0 C2 83 3A 00 FF A5 74 04 F4 07 C0 FF  // ......:...t.....
    97E0: 07 DD 73 F0 20 BF 9E 44 C7 1F BC D2 74 2B 0A 20  // ..s. ..D....t+. 
    97F0: C8 0A 0D B8 00 98 16 81 07 80 69 11 2B C1 AC 02  // ..........i.+...
    9800: B2 12 D0 EA 3F EA 00 FC F4 A0 06 C0 4F 20 2B 90  // ....?.......O +.
    9810: AD 26 62 82 A9 5D F0 EB 49 74 6B 68 03 FC 0F E0  // .&b..]..Itkh....
    9820: 3F C0 FF 00 EC 83 29 0D F0 3F 0C FA 0E 60 82 A9  // ?.....)..?...`..
    9830: 4D A6 B4 3C AD 04 40 92 A9 0D C0 3E 99 D2 80 B4  // M..<..@....>....
    9840: 12 00 49 A6 36 00 FB 01 B0 42 A0 0F 82 3E 0C FA  // ..I.6....B...>..
    9850: 60 6A 03 B0 FF 0F EB 7F AC FD B2 FE CF 0A 86 36  // `j.............6
    9860: 00 FB 00 E8 83 C5 0A 82 3E 0C FA A0 69 03 A0 0F  // ........>...i...
    9870: 11 2B 84 AC 30 E8 13 A9 0D 82 3E 91 DA 00 EC 13  // .+..0.....>.....
    9880: FC 4A A6 34 C0 FF 00 FF 3F 04 E9 35 51 A4 74 64  // .J.4....?..5Q.td
    9890: 4A AF A1 0D F0 3F C0 FF 00 FE 03 B0 9F 26 DD 1A  // J....?.......&..
    98A0: DA 09 E2 38 04 0F 81 3E 08 FA 30 E8 4F 90 0E 81  // ...8...>..0.O...
    98B0: 3D 10 F7 00 FE 7B 50 BF 86 36 69 DA 00 E8 03 F8  // =....{P..6i.....
    98C0: EF 41 FD 1A DA A4 69 07 C8 EA CD 64 00 FC 10 B3  // .A....i....d....
    98D0: 0A D0 DA 44 A4 00 FC 60 B4 D2 8C D9 24 34 69 DA  // ...D...`....$4i.
    98E0: 30 E8 83 A0 1F 9A B6 37 93 01 F0 43 C4 2A 40 6B  // 0......7...C.*@k
    98F0: 13 91 02 F0 83 D1 4A 11 26 80 FF 1E D4 AF A1 9D  // ......J.&.......
    9900: 20 C6 1A DA 00 EC 93 29 7D 8F 2B 46 90 01 B3 B2  //  ......)}.+F....
    9910: 04 4F A6 36 00 FB 64 4A 03 FC 8F F0 EB 43 90 1F  // .O.6..dJ.....C..
    9920: A0 06 4F 24 01 34 44 AD 25 A5 12 C0 2F F0 EB AB  // ..O$.4D.%.../...
    9930: 9A 00 F4 FB 4E 54 45 2C 49 A9 04 F0 0B FC FA BB  // ....NTE,I.......
    9940: 26 00 FD BE 13 15 11 4B 52 2A 01 FC 10 BF BE AA  // &......KR*......
    9950: 09 40 BF EF 44 10 BF FE AE 99 21 8F 04 D8 A0 D5  // .@..D.....!.....
    9960: 01 B0 CF 8C 38 00 AC DE 42 06 C1 0F 04 2B 02 B0  // ....8...B....+..
    9970: 04 B8 02 72 0F 80 3D 00 AC C0 B1 7A 0B 29 04 7F  // ...r..=....z.)..
    9980: 00 AC 00 B1 3A 00 1D C0 7D 04 F6 64 4A 03 E4 EA  // ....:...}..dJ...
    9990: 6D 6A 10 FC 10 B9 06 CC 8A 2C 78 8A B0 64 6A A7  // mj.......,x..dj.
    99A0: 49 B7 86 36 85 AC C0 B3 42 A3 4F 27 B6 33 75 FE  // I..6....B.O'.3u.
    99B0: 61 68 54 07 C0 BE B7 A9 03 F0 AB 20 0D 40 7F 10  // ahT........ .@..
    99C0: FC 2E 48 07 D8 1A 70 EB 73 F0 F6 8F 3F B3 E9 44  // ..H...p.s...?..D
    99D0: E4 FF 44 9F C9 06 C1 0F 70 2B 23 B2 08 14 01 D8  // ..D.....p+#.....
    99E0: 6A C8 B8 31 EA 8C 68 12 D0 8F 40 D9 67 C2 41 F0  // j..1..h...@.g.A.
    99F0: 03 DC CA 88 30 02 45 00 B6 1A 32 6E 8C 3A 23 9A  // ....0.E...2n.:#.
    9A00: DE A6 0E C0 AF 82 36 00 FD 41 F0 BB A0 0D AC B4  // ......6..A......
    9A10: 13 91 24 14 0D FC EA 6D 6A 10 FC 18 BF BA 85 4A  // ..$....mj......J
    9A20: 04 3F FC 92 01 F0 03 F0 FA 00 E6 DD 99 45 F0 13  // .?...........E..
    9A30: EC EA 6D 6A 10 FC 20 BB 2E 80 09 AC 36 00 FB FC  // ..mj.. .....6...
    9A40: BF 7A 9B 1A 04 FF F9 AF FF BB 2E 82 1A 04 FF 03  // .z..............
    9A50: 90 F0 BF E6 23 89 0F 6A 11 FC FB BB 7A 9B 1A 04  // ....#..j....z...
    9A60: FF F7 AE 0B 40 02 AB 4D AC 36 00 FB 24 43 6F FF  // ....@..M.6..$Co.
    9A70: 0A F0 FF 03 90 0C 60 42 04 0F 12 3C 4C F0 24 63  // ......`B...<L.$c
    9A80: 93 8D 0D C0 7E 74 D2 28 40 23 FC 0A C2 EB C3 93  // ....~t.(@#......
    9A90: 7C 4C F2 83 19 04 3F 00 FB 01 B4 12 48 E7 1D 9D  // |L....?.....H...
    9AA0: 8B 18 28 40 D3 BF CE CF 24 19 65 07 BC 02 33 69  // ..(@....$.e...3i
    9AB0: 46 19 08 AF C1 4C 0E C0 1F D0 6B 95 75 02 BD 56  // F....L....k.u..V
    9AC0: 59 37 D0 2B 0A D0 08 BC 02 FC CF 22 A4 00 FC 40  // Y7.+......."...@
    9AD0: E8 13 48 07 C0 FE 1A DA 69 D2 31 C4 0A 80 FE 00  // ..H.....i.1.....
    9AE0: E8 00 DC 43 60 0F 80 3E 04 FA 20 E8 C3 A0 0F E0  // ...C`..>.. .....
    9AF0: BF 07 F5 6B 68 03 EC 0F B0 FF 38 E2 00 FE 7B 50  // ...kh.....8...{P
    9B00: BF 86 36 C0 FE 8E 08 E3 51 04 C0 7E 08 AD 50 E8  // ..6.....Q..~..P.
    9B10: 83 A1 0F 87 3E 42 AE C0 B8 06 72 1F 89 7D A3 75  // ....>B....r..}.u
    9B20: 00 FE 7F 51 BF 86 36 75 D2 8F C1 D3 BC 7E 12 5D  // ...Q..6u.....~.]
    9B30: 06 AD 00 FE 7F 51 BF 86 36 CD EB 27 D1 E1 07 5F  // .....Q..6..'..._
    9B40: 9A 34 C0 FF 00 FF 13 04 5F 11 3C B8 E0 26 62 DE  // .4......_.<..&b.
    9B50: 04 4F 9A 36 42 AE 9E 09 83 52 54 9A 36 00 FB BE  // .O.6B....RT.6...
    9B60: A1 D6 52 E6 AA AC 07 F4 BE 0F FF E4 AA 00 70 02  // ..R...........p.
    9B70: 90 1A 01 67 04 A9 22 70 8A 90 3A 03 E7 0C E9 41  // ...g.."p..:....A
    9B80: BD FF C3 AA 14 01 EC EF CC F0 29 45 00 EC FB 86  // ..........)E....
    9B90: AA 4C 99 AB B2 1E D0 FB 3E FC 93 AB 02 B0 09 40  // .L......>......@
    9BA0: 6A 04 9B 11 A4 8A B0 29 42 EA 0C 9B 33 A4 07 F5  // j......)B...3...
    9BB0: FE 0F FF 52 04 B0 BF 33 C3 BC 14 01 B0 DF A2 8E  // ...R...3........
    9BC0: 27 F4 1F D0 FF F0 CA 88 24 67 92 AC 4A F2 2E C9  // '.......$g..J...
    9BD0: 40 24 47 91 2C 46 F2 1C 09 C2 2B 21 B0 00 A0 23  // @$G.,F....+!...#
    9BE0: 8D 1A 04 3F 03 B0 95 C1 42 84 9E 35 6A 10 FC 1C  // ...?....B..5j...
    9BF0: C1 9A 0A 0B 22 BA DA A8 41 F0 B3 08 7B 3B 2C CC  // ...."...A...{;,.
    9C00: E8 7B A3 06 C1 CF 33 AC 7F 18 00 FF 03 FC CF CC  // .{....3.........
    9C10: 66 01 FC FE BC F2 0C C9 22 24 47 90 0C 40 1E F0  // f......."$G..@..
    9C20: CA 3D AA 42 45 74 72 DB 49 0D F0 3F C0 FF 00 FE  // .=.BEtr.I..?....
    9C30: 7B 50 BF 86 36 C0 FE 76 72 D3 49 0D F0 3F C0 FF  // {P..6..vr.I..?..
    9C40: 04 F4 4B 54 86 C0 2B 37 A9 01 F0 13 AA 9D C0 2B  // ..KT..+7.......+
    9C50: 37 A9 01 F0 03 AA 1D 29 1D C0 FE 01 FB 7B 37 FB  // 7......).....{7.
    9C60: 6D EA 33 45 2D 6A 00 B0 FF 33 1D 00 AC 00 B1 02  // m.3E-j...3......
    9C70: C8 1A 30 2B 9D DA 31 B0 1A C4 4A 20 2B C0 AC 78  // ..0+..1...J +..x
    9C80: 6A F3 29 0D F0 7F 00 AC 01 B1 02 CC CA A7 36 99  // j.)...........6.
    9C90: D2 C0 B4 12 00 C9 00 E6 3D AD 14 41 3A 80 49 A6  // ........=..A:.I.
    9CA0: 76 D7 74 64 4A 03 D2 4A 00 24 99 DA 57 D1 01 B0  // v.tdJ..J.$..W...
    9CB0: CF A2 C4 0F AF 00 FF 7B 26 2C 04 7F 86 3C 00 EC  // .......{&,...<..
    9CC0: B3 28 03 A4 B4 17 F4 18 5A 74 B7 59 04 7F 00 98  // .(......Zt.Y....
    9CD0: 02 60 0E 80 49 40 FF 00 FC 01 40 0A 00 39 00 A4  // .`..I@....@..9..
    9CE0: 80 E8 33 B9 26 00 99 22 A4 63 A9 5D 15 39 22 DC  // ..3.&..".c.].9".
    9CF0: 00 6A 57 65 04 42 3C 11 CB 57 9D 2F A8 6C 95 B9  // .jWe.B<..W./.l..
    9D00: 96 7A 56 91 AB C2 2D A0 9E 55 46 20 C5 9B B1 8A  // .zV...-..UF ....
    9D10: D5 F9 82 4A 57 99 17 F5 2C 4A 28 AE D9 53 11 00  // ...JW...,J(..S..
    9D20: FB 5E D4 3F 11 CB 57 9D 17 F5 4F C4 F2 55 47 40  // .^.?..W...O..UG@
    9D30: 7F 57 65 5E D4 BF 19 AB 58 9D 17 F5 6F C6 2A 56  // .We^....X...o.*V
    9D40: 47 40 FF 59 65 07 0A FC F0 0A 5F 2B 93 A9 86 15  // G@.Ye....._+....
    9D50: 15 99 2A 00 BF 47 B0 41 F0 7B 04 CC 44 E4 81 22  // ..*..G.A.{..D.."
    9D60: 54 C1 03 B0 6F A0 C0 0F AF F0 B7 B2 99 4A 59 D1  // T...o........JY.
    9D70: 99 A9 02 F0 7B 04 1B 04 BF 47 C0 6C 46 1A 28 62  // ....{....G.lF.(b
    9D80: 17 3C 00 FB 9E D0 03 EC 0F F0 FF 27 F5 01 FB FB  // .<.........'....
    9D90: 3F 8C 59 11 00 FB 70 4A 03 FC 2F 1C BC 0B D0 01  // ?.Y...pJ../.....
    9DA0: B0 7A 83 1A 00 BF 04 AC A8 6A 03 FC 0F F0 3F C0  // .z.......j....?.
    9DB0: FF AC 4A 0B D0 9A AA 36 00 F0 11 C0 8B 00 3F 03  // ..J....6......?.
    9DC0: 7C AB D2 90 BF 7A 83 1A 00 7F 51 F0 CF A0 16 C0  // |....z....Q.....
    9DD0: 4F 04 FC C3 AF 4F 4F 02 D0 1F 04 3F 3D F0 19 40  // O....OO....?=..@
    9DE0: 7B 33 69 00 3F 10 99 51 65 8A 99 39 77 66 06 D8  // {3i.?..Qe..9wf..
    9DF0: AF 6A 76 00 ED 6D AA 11 FC 40 64 46 95 29 66 E6  // .jv..m...@dF.)f.
    9E00: DC 99 1D 60 FF AE E9 02 36 00 FB 46 C4 A6 AA 0D  // ...`....6..F....
    9E10: F0 3F C0 FF 00 FF B3 2A 0D C0 BE 01 D0 35 40 23  // .?.....*.....5@#
    9E20: F0 4A F0 AB AA 9A F3 95 F9 1D 19 00 3F 00 FB 04  // .J..........?...
    9E30: B9 42 72 0F 94 AB B7 A9 01 F0 43 A2 0F 89 BD 6E  // .Br.......C....n
    9E40: F0 00 BA E2 3F 39 04 3F 29 75 00 F4 07 C1 9F 4B  // ....?9.?)u.....K
    9E50: 9D 09 D0 00 BC 12 FC AA 1B BC AA 92 41 F0 03 B0  // ............A...
    9E60: 4F 90 2B 24 F7 64 B9 7A 9B 1A 00 3F 49 AE 90 D8  // O.+$.d.z...?I...
    9E70: 03 E8 8A FF E4 10 FC A4 D4 01 D0 1F 04 7F 2E 75  // ...............u
    9E80: 00 EC 1B 00 5D 03 34 02 AF 04 BF EE AE 19 04 3F  // ....].4........?
    9E90: 00 FB 7E 47 06 C0 0F C0 3E 81 AE C0 B8 7A 9B 1A  // ..~G....>....z..
    9EA0: 00 3F 20 AE 80 D8 83 72 0F A0 6B FE 93 43 F0 93  // .? ....r..k..C..
    9EB0: 52 07 40 7F 10 FC B9 D4 01 B0 9F 26 DD 1A DA 14  // R.@........&....
    9EC0: B1 02 A0 3F 00 3A 00 F7 10 D8 0F F0 7A 0F AB 3F  // ...?.:......z..?
    9ED0: A8 41 F0 FF C1 0A 11 3C 48 F0 30 C1 FF D3 4A 15  // .A.....<H.0...J.
    9EE0: 3C 59 F0 74 C1 03 F8 EF 41 FD 1A DA 01 A0 47 84  // <Y.t....A.....G.
    9EF0: 1E 22 7A CC E8 00 FB 03 F8 EF 45 FD 1A DA 00 FB  // ."z.......E.....
    9F00: 3B 33 5C 63 D1 3F AC 08 BC 42 04 0F 12 3C 4C F0  // ;3\c.?...B...<L.
    9F10: 80 6A FB 93 FA 64 11 3F A8 02 F0 13 AA 0D C0 FE  // .j...d.?........
    9F20: 3D AC 01 A1 47 88 1E 32 3A A1 DA 00 EC 13 4D 17  // =...G..2:.....M.
    9F30: F0 2B C4 74 10 BF 9E 44 37 67 9D A5 D2 29 40 1F  // .+.t...D7g...)@.
    9F40: F0 0A F0 3F 13 91 44 85 7B 15 5B 1C 3C 10 FA 60  // ...?..D.{.[.<..`
    9F50: E8 C3 A1 1F A9 F6 A1 75 6B 68 03 FC 0F E0 3F 67  // .......ukh....?g
    9F60: C2 43 F0 BB 2A 1C 04 BF EF C2 92 6A 03 5A 07 C0  // .C..*......j.Z..
    9F70: 3E 98 D2 F1 BF 4E C4 FA 00 64 F4 E3 0F 60 82 A9  // >....N...d...`..
    9F80: 8D C8 AB 7F AD 05 40 32 80 09 A6 36 00 FB 60 4A  // ......@2...6..`J
    9F90: FF FD FA 00 24 98 DA 10 BF 9E 44 07 C0 FE 3F AD  // ....$.....D...?.
    9FA0: 7F B5 FE DB FA 7F 6B 18 DA 00 EC 03 CC 0A 21 6B  // ......k.......!k
    9FB0: 44 AC 01 B0 12 A9 0D 82 BE 47 C0 44 6A 03 B0 4F  // D........G.Dj..O
    9FC0: 11 2B 30 AC 01 DC 47 60 4F 00 2B 00 F7 A0 D8 A7  // .+0...G`O.+.....
    9FD0: 49 B7 86 F6 C1 AF 3F B9 C2 5A 07 E0 FF 07 F5 6B  // I.....?..Z.....k
    9FE0: 68 07 EC EF FF 70 A8 45 B0 D6 11 AA 0D F9 EB 6F  // h....p.E.......o
    9FF0: A9 42 F0 C3 5A 07 A8 36 00 FB 1E D0 03 EC EF CB  // .B..Z..6........
    A000: A4 AE 45 08 C0 62 04 8B 22 2C CE B0 00 F4 13 C1  // ..E..b..",......
    A010: 8F 00 30 46 C0 28 02 E3 0C 9C 00 64 46 90 29 42  // ..0F.(.....dF.)B
    A020: E6 0C 09 C0 7E C2 AF CE 4C 06 C0 8F F0 AB 37 90  // ....~...L.....7.
    A030: D4 96 11 E0 0A C8 3D 33 E0 00 D8 03 C1 0A 80 6B  // ......=3.......k
    A040: 00 F6 81 DC 03 E7 0A A0 2B B9 75 DE A6 8E 5B 44  // ........+.u...[D
    A050: 80 2B 20 F7 CC 80 03 E1 8A 00 2C 00 F6 80 B0 02  // .+ .......,.....
    A060: E0 1A 80 7D 20 F7 00 B9 06 E8 4A 6E 1D 00 FB BF  // ...} .....Jn....
    A070: C1 D7 C9 1D 89 7D 28 F7 3F B8 7A 40 FF 05 3D C0  // .....}(.?.z@..=.
    A080: FE 01 FB 13 00 8C 00 E4 9D DC 15 01 63 04 59 27  // ............c.Y'
    A090: B5 89 C0 28 42 DE 0C 8C 33 E4 07 F5 01 FB D7 C9  // ...(B...3.......
    A0A0: 7D 27 B5 EF C2 E9 16 01 B0 4F A9 34 C0 FF 80 61  // }'.......O.4...a
    A0B0: 27 E8 33 D0 AB 61 71 19 D1 51 2A 0D F0 3F 61 D8  // '.3..aq..Q*..?a.
    A0C0: 03 BD 0A 21 47 A9 74 86 18 88 61 33 86 0D 19 36  // ...!G.t...a3...6
    A0D0: 33 9B 84 03 01 25 0D 20 9D 70 F0 08 DB 11 27 2D  // 3....%. .p....'-
    A0E0: 03 F4 01 AF 20 B4 0E 11 09 72 D1 19 AF 40 BF EA  // .... ....r...@..
    A0F0: 3F 19 00 7F 19 AF 78 DA 11 27 0D F2 6B FC 93 2E  // ?.....x..'..k...
    A100: 97 05 F0 0A 28 9D 77 74 30 40 83 FC 0A F0 BF FC  // ....(.wt0@......
    A110: 93 01 F0 43 5F 47 22 5D 9A 74 6B 68 0B FC 7A 29  // ...C_G"].tkh..z)
    A120: DD 40 AF C6 49 03 FC 6F F8 38 08 D2 0F BC B2 08  // .@..I..o.8......
    A130: E9 CF 2B CF 90 2F 62 82 A0 4D 82 B6 71 D2 30 BF  // ..+../b..M..q.0.
    A140: E2 3F 69 0F FA 03 98 2F D1 29 82 6E F0 F8 03 98  // .?i..../.).n....
    A150: 44 D1 51 2A 0D F0 3F 63 D8 90 61 13 27 0D F8 6B  // D.Q*..?c..a.'..k
    A160: FC 93 01 F0 77 5F 47 A9 74 86 18 11 40 53 86 8D  // ....w_G.t...@S..
    A170: 19 36 C0 AF CC 6C 06 C0 8F F0 EB 9B 99 11 60 33  // .6...l........`3
    A180: B3 49 38 90 71 D2 20 48 0F FC BA FF 24 01 AF FC  // .I8.q. H....$...
    A190: 6F 9A B0 CE FF 2C 06 D2 E0 BC B2 08 F9 22 26 06  // o....,......."&.
    A1A0: DA 28 48 07 2B CD F0 EB FE 93 F2 8F 83 F1 CA CF  // .(H.+...........
    A1B0: 2C 63 F0 0C CC 0A C1 BF F1 EB 13 99 C6 AF DB 33  // ,c.............3
    A1C0: CE 0F 26 46 B0 42 F0 93 FC FA 44 26 0A DA 2C 68  // ..&F.B....D&..,h
    A1D0: 07 AB 0D 03 34 D0 AF 00 FF CB 3F 89 7A 19 9F D2  // ....4.....?.z...
    A1E0: 79 4A DB 29 0D 0A 76 29 D8 AA 60 A3 29 5D B0 B4  // yJ.)..v)..`.)]..
    A1F0: 9C D2 AC 60 E7 82 ED 0B B6 4F 73 2D EA 04 F4 9A  // ...`.....Os-....
    A200: 60 9D 40 AF 09 D6 B5 A8 21 F0 EB A5 74 A0 40 97  // `.@.....!...t.@.
    A210: 02 AD 0A 34 9F DA 79 6A DB A9 CD 0A 74 2E D0 BE  // ...4..yj....t...
    A220: 40 A3 A9 5D B0 B6 9C DA 34 40 03 FD 0A F0 3F FC  // @..]....4@....?.
    A230: 93 01 F0 E3 13 47 9C 34 C4 AF F3 4F 06 C0 6F 84  // .....G.4...O..o.
    A240: 1D A5 D2 19 62 44 00 CD 19 36 68 D8 00 BF 32 B3  // ....bD...6h...2.
    A250: 19 00 3F D0 AF 6F 66 46 80 CD CC 26 E1 40 01 B0  // ..?..ofF...&.@..
    A260: 42 A0 0F 82 3E 0C FA 60 6A 13 27 0D F4 EB FC 93  // B...>..`j.'.....
    A270: 36 03 A1 08 47 A9 34 C0 FF A0 61 93 86 0D 40 3F  // 6...G.4...a...@?
    A280: E1 40 08 48 FF D2 4A 27 36 01 90 08 68 0F F4 1A  // .@.H..J'6...h...
    A290: 40 2B 81 74 55 D6 D9 09 4D 34 9D 02 DA 00 EC 0F  // @+.tU...M4......
    A2A0: F4 0A 35 1D D1 74 02 BF 6E 4C 17 A6 34 FC AF 4F  // ..5..t..nL..4..O
    A2B0: 44 86 A9 4D 30 2B 08 FA 02 B1 0A C0 CA A7 76 C0  // D..M0+........v.
    A2C0: AC 0F B2 06 C0 8A A7 76 80 AC 21 B0 D2 A9 8D A6  // .......v..!.....
    A2D0: 74 C1 D2 72 4A 03 CC 1A 22 2B 9A DA 18 B7 82 D9  // t..rJ..."+......
    A2E0: 5A B0 36 A4 AE 72 6A 13 DC CA 64 EB 44 AD 66 B4  // Z.6..rj...d.D.f.
    A2F0: 86 A9 1D 29 1D 99 D2 80 B4 12 00 79 4F 2B 45 90  // ...).......yO+E.
    A300: 20 E8 C3 A0 4F A6 76 00 AF 08 E2 40 CC 2A 26 2B  //  ...O.v....@.*&+
    A310: 42 AC 03 B0 92 A9 DD 35 9D 99 D2 35 40 23 FC 8A  // B......5...5@#..
    A320: FF 64 0D 66 F2 AF 7F 95 59 03 36 00 FA 2F D1 C1  // .d.f....Y.6../..
    A330: FF FA 88 A4 99 DA 08 7A 00 FC 0F C1 EB FF 9B 43  // .......z.......C
    A340: F0 DB 60 47 40 BF 01 FC F0 BC DA 60 07 CF AB 0D  // ..`G@......`....
    A350: 76 F0 BC DA 60 87 20 06 80 74 CE 0C 23 88 C3 CC  // v...`. ..t..#...
    A360: 66 03 46 19 F2 00 B0 0F 82 34 E0 AF CF A6 02 61  // f.F......4.....a
    A370: E4 FF 2B 8B B0 01 F0 FF 0C 49 40 FF 00 FC 2C C2  // ..+......I@...,.
    A380: 06 C1 EF 33 26 08 DA 24 68 03 B0 4F A6 74 98 D2  // ...3&..$h..O.t..
    A390: 00 B0 02 C4 4A A6 B6 3D AC 40 44 62 D4 1A A6 36  // ....J..=.@Db...6
    A3A0: 9A D2 05 4B C3 A0 EF 21 2B 9A DA 20 B7 02 DA 5A  // ...K...!+.. ...Z
    A3B0: B0 36 9C D2 61 4A 03 CA 0A A7 36 B1 AD 18 B5 86  // .6..aJ....6.....
    A3C0: A9 5D C0 EB 81 38 10 B3 4E C9 8A 10 EB 00 AC 64  // .]...8..N......d
    A3D0: 6A 77 4D 67 A6 74 0D D0 08 BF E2 3F 29 88 D9 57  // jwMg.t.....?)..W
    A3E0: 99 35 60 47 C0 4A 14 5D 40 AF 00 B4 0A FC 7A 3E  // .5`G.J.]@.....z>
    A3F0: 9D 40 AF 00 B4 0A FC 7A 3E 9D 99 D2 03 BD 1E 88  // .@.....z>.......
    A400: 01 FF EB 23 92 66 6A 3B 33 7C 20 0E 33 9B 60 18  // ...#.fj;3| .3.`.
    A410: 65 C8 43 34 DD CF 74 00 EC 0B FC 0A CF 3D E0 AF  // e.C4..t......=..
    A420: F0 D8 03 A2 0F 89 3E 28 FA B0 E8 07 F0 FA FA AB  // ......>(........
    A430: 27 F5 00 FB FB 3F FC 88 91 33 C3 8E 18 65 44 87  // '....?...3...eD.
    A440: 93 34 7F AD 25 42 CE D7 5A 22 24 4E DA C0 E8 83  // .4..%B..Z"$N....
    A450: E0 8A 19 3C 6A F0 B8 C1 BB 9C 2D 73 B6 DB D9 72  // ...<j.....-s...r
    A460: 67 BB 8E ED 3E 36 50 D2 C0 BF CA 3F 89 80 EB 23  // g...>6P....?...#
    A470: 9A 98 C1 A3 06 8F 1B BC EC D8 F2 63 07 27 8D 80  // ...........c.'..
    A480: EB 23 9A 5C A5 17 A2 89 19 3C 6A F0 B8 C1 DB 9C  // .#.\.....<j.....
    A490: AD 73 B6 DD D9 7A 67 7B 22 9D 02 34 80 74 14 C0  // .s...zg{"..4.t..
    A4A0: 73 84 4E 11 F8 3D AC 80 48 06 A2 E9 89 B6 28 DA  // s.N..=..H.....(.
    A4B0: B6 68 EB A2 AD AE F4 3E AC 22 81 83 2A 19 AA A6  // .h.....>."..*...
    A4C0: BA DA EE 6A CB AB 6D AF 76 00 AC 10 C1 83 04 0F  // ...j..m.v.......
    A4D0: 13 3C CB D8 6C 63 F3 8C CD 37 F6 00 AC 10 C1 83  // .<..lc...7......
    A4E0: 04 0F 13 3C CC D8 70 63 D3 8C 4D 37 36 CE D8 78  // ...<..pc..M76..x
    A4F0: 63 83 C0 0A 11 3C 48 F0 30 C1 A3 8C 8D 36 B6 70  // c....<H.0....6.p
    A500: D2 41 49 9B 82 0E 11 3C 48 F0 30 C1 D3 9E 4D 7F  // .AI....<H.0...M.
    A510: 36 00 AD 0F BF EE 03 09 F8 2B FE 93 02 F0 03 05  // 6........+......
    A520: 0F 80 3E 44 F0 20 C1 C3 04 4F 4B 36 3D D9 B0 64  // ..>D. ...OK6=..d
    A530: C3 93 8D 4B 36 3E D9 54 C1 93 05 4F 17 7C 2B D9  // ...K6>.T...O.|+.
    A540: BD 64 B7 93 DD 4F F6 C3 AF AF 40 02 FE FA 00 A6  // .d...O....@.....
    A550: 50 76 41 49 1B FC 0A CF 3D C0 AF F0 D8 3F F0 4A  // PvAI....=....?.J
    A560: 0C A4 C2 AF DE D9 19 81 4E F0 AB 77 76 C4 40 2A  // ........N..wv.@*
    A570: FC EA 9D 9D 11 E8 04 BF 7A 67 57 0C A4 C2 AF DE  // ........zgW.....
    A580: D9 59 81 4E F0 AB 77 76 C5 40 2A FC EA 9D 9D 15  // .Y.N..wv.@*.....
    A590: E8 04 BF 7A 67 F7 F7 6B 3E 90 05 B5 02 D0 9A C0  // ...zg..k>.......
    A5A0: 6B BD 76 7F BF E2 03 79 50 2B 00 AD 0A BC D6 6B  // k.v....yP+.....k
    A5B0: A7 0A 6B 55 AC 20 C1 C7 04 8F 5A 36 7A D9 19 D1  // ..kU. ....Z6z...
    A5C0: 01 B0 0F 11 3C 48 F0 30 C1 B3 94 CD 56 36 4C D9  // ....<H.0....V6L.
    A5D0: 70 65 D3 94 4D 57 36 4E D9 78 65 F3 94 CD 57 36  // pe..MW6N.xe...W6
    A5E0: ED D8 F4 63 03 B0 2F 06 2B 41 AC 07 B2 02 CC 0A  // ...c../.+A......
    A5F0: 89 36 2A DA 94 68 B3 A2 0D 00 2B 41 AC 87 B2 02  // .6*..h....+A....
    A600: CC 8A 89 36 2C DA 4A B0 22 C6 1A 20 2B C8 AC 9C  // ...6,.J.".. +...
    A610: 68 83 A2 4D 8B 36 2E DA 22 B0 B6 C4 3A 20 2B C0  // h..M.6.."...: +.
    A620: AC E8 6A C3 AB CD AE 36 BD DA C9 49 93 22 0D B3  // ..j....6...I."..
    A630: 2B DC AF 7B 67 FE 8C 99 9C 76 73 DA A4 68 F3 A2  // +..{g....vs..h..
    A640: 0D 20 DD F3 AF 3F 43 FE 1D 99 9C 76 73 DA A4 68  // . ...?C....vs..h
    A650: F3 A2 0D 8C 74 70 D2 0F BF DA 03 69 F0 F8 03 98  // ....tp.....i....
    A660: C0 68 13 A3 0D 84 3E 14 FA 60 E8 C3 A1 DF A9 76  // .h....>..`.....v
    A670: A8 DA 38 49 0F D4 5A 22 26 4E DA 00 4C 03 FD FA  // ..8I..Z"&N..L...
    A680: 22 26 00 DB 22 B4 FE D7 FA 6F EB FF AD BD 6A 03  // "&.."....o....j.
    A690: 48 F7 FB EB 8B 90 00 6C 03 48 87 A4 34 C1 AF 3F  // H......l.H..4..?
    A6A0: 63 22 A9 CD A4 76 46 74 00 EC D7 00 0D F0 3F C8  // c"...vFt......?.
    A6B0: AF 7F 4F 76 67 14 21 0F 30 FA 2E E2 10 27 FD F0  // ..Ovg.!.0....'..
    A6C0: EB 07 91 42 84 C3 15 F7 42 A4 10 E1 01 B8 1E E4  // ...B....B.......
    A6D0: 6A C2 36 55 F0 64 C1 D3 05 1F 40 B6 09 E9 42 84  // j.6U.d....@...B.
    A6E0: 53 05 4F 16 3C 5D F0 81 64 C3 00 2D 80 EB 41 AE  // S.O.<]..d..-..A.
    A6F0: 26 6C 5B 10 2E 44 3A 55 F0 64 C1 D3 05 1F 44 B6  // &l[..D:U.d....D.
    A700: 05 E9 42 84 53 05 4F 16 3C 5D F0 C1 64 FF F1 8A  // ..B.S.O.<]..d...
    A710: A7 1D 10 FA 50 E8 97 B0 0D 57 DC 41 F0 66 DA 01  // ....P....W.A.f..
    A720: B0 0F 11 3C 48 F0 30 C1 7B 50 0F B0 BF FF C3 E1  // ...<H.0.{P......
    A730: 19 01 B0 5F A5 1D CA D2 6D 49 07 C8 8A B2 36 80  // ..._....mI....6.
    A740: 74 08 BF D2 3F 19 00 3F A8 71 28 4B 03 FC 9F 20  // t...?..?.q(K... 
    A750: 2B CA DA C1 49 0F C4 6A F7 BA 3D E0 F0 60 82 AC  // +...I..j..=..`..
    A760: 1D B4 F4 C0 AF 4F 64 06 AD AD C8 34 C8 AF 8F 68  // .....Od....4...h
    A770: 2A B2 0D F1 EB 49 74 6D 49 DF FF FA 88 E4 7F AE  // *....ItmI.......
    A780: 64 BB 22 FC 6A FF 64 00 FC 1B BB 2A B2 1D C9 F4  // d.".j.d....*....
    A790: F7 AF 4F 44 46 B2 4D CA B4 C0 AF 0F 60 92 B2 0D  // ..ODF.M.....`...
    A7A0: 01 2B 7A AC 0F B2 02 CC 0A C9 76 74 D2 B4 40 03  // .+z.......vt..@.
    A7B0: FE 7A FF 24 11 FC 10 B0 4A C6 FA 27 2B C0 AC 94  // .z.$....J..'+...
    A7C0: 6C 23 18 87 C8 34 D2 AF 0F 60 22 B2 0D B4 F4 EE  // l#...4...`".....
    A7D0: AF 2F 42 FE 0C 09 B4 36 C1 AF 27 D1 01 48 87 B4  // ./B....6..'..H..
    A7E0: 34 C0 FF 0E 40 C6 68 86 18 2B 22 AC 6E D1 7D FC  // 4...@.h..+".n.}.
    A7F0: FA 44 E4 5F 74 00 D2 A1 2C FD FB EB 03 90 28 6B  // .D._t...,.....(k
    A800: 43 32 0D C1 2B 8B 98 90 6C 43 FC 7A 12 1D 33 F0  // C2..+...lC.z..3.
    A810: 2C 42 42 B2 CD B1 34 C2 AF 1F 61 72 AC AD A9 1D  // ,BB...4...ar....
    A820: 5B D2 40 BF CA 3F 19 00 FF 9A 71 00 EC 77 2C 7D  // [.@..?....q..w,}
    A830: FF EB 57 91 1D 6B 23 C6 8A 08 AB 5B 74 E1 BF 3E  // ..W..k#....[t..>
    A840: 11 09 FE EB 13 99 7F D1 A1 2C 0D F4 EB 03 98 28  // .........,.....(
    A850: 6B 03 B0 0F 08 EB 40 AC 0B B2 0A CE 0A 85 FE 9B  // k.....@.........
    A860: 74 C0 B0 0E C4 BA 20 AB E0 AC 50 E8 BF 49 07 01  // t..... ...P..I..
    A870: 2B 48 AC 40 B2 02 CC 8A 7F 36 00 FB 11 42 B8 28  // +H.@.....6...B.(
    A880: 11 A0 2B AA C2 A9 CA A2 2A 0E F7 2B 3F 90 0A 60  // ..+.....*..+?..`
    A890: 42 04 0F 12 3C 4C F0 BC 6C 3F FC FA CC 24 03 98  // B...<L..l?...$..
    A8A0: 10 C1 83 04 0F 13 3C 2F DB 0F BF 9E 44 C7 0C 3C  // ......</....D..<
    A8B0: 03 90 10 C1 83 04 0F 13 3C 2F DB 00 E8 43 A0 0F  // ........</...C..
    A8C0: 82 3E 0C FA BC 6C 03 B0 EF 96 34 1C FA 60 E8 C3  // .>...l....4..`..
    A8D0: F0 AA FC 64 AA 46 E5 B3 F6 C8 2A 14 2B 04 AC 0F  // ...d.F....*.+...
    A8E0: B6 1E D6 6A 49 2B 01 FD BA 9A 41 F0 FA 0C 2A AD  // ...jI+....A...*.
    A8F0: 46 9C B3 EA CA 2A 13 2B 04 AC 0F B5 1E D2 4A 40  // F....*.+......J@
    A900: BF AE 66 96 B3 8E CB 2A 1D 2B 04 AC 0F B5 1E D2  // ..f....*.+......
    A910: 4A B1 76 C6 DA 00 EC 0F F4 5A A6 1C 80 74 9C 49  // J.v......Z...t.I
    A920: A7 00 4D F0 2B 2C FA 01 BA DA 3F 29 FF F8 0B 9A  // ..M.+,....?)....
    A930: 93 C1 CB A0 0D 20 1D 0A D0 00 D2 41 F0 1A CC 24  // ..... .....A...$
    A940: 11 FC 54 48 83 F1 CA 22 26 15 DA 76 49 43 F0 CA  // ..TH..."&..vIC..
    A950: 4A E6 56 F0 6E C1 C3 A1 1F 83 36 80 74 00 D2 01  // J.V.n.....6.t...
    A960: 48 47 85 F4 27 AF 2C 42 52 A1 0D 20 1D 80 74 40  // HG..'.,BR.. ..t@
    A970: 4A 03 FC CF 07 36 80 74 4A C1 C7 A0 0D 20 1D 80  // J....6.tJ.... ..
    A980: 74 00 D2 45 E8 31 D0 2B C0 FF FF 6F 06 C1 0F A7  // t..E.1.+...o....
    A990: 1C 80 74 00 EC 43 71 0F 84 3D 7F F0 10 C1 83 04  // ..t..Cq..=......
    A9A0: 0F 13 BC 07 F5 00 FB FB 3F BC AF 11 D0 AF F4 CF  // ........?.......
    A9B0: C2 63 CF 1F BC 07 F5 00 FB FB 3F 3C B0 11 00 FB  // .c........?<....
    A9C0: 9D 48 EF FD FA 44 A4 F3 93 02 F0 13 FE FA 44 66  // .H...D........Df
    A9D0: 27 DA A1 68 D7 A2 9D 8B 76 24 D2 F0 BF 12 EC FA  // '..h....v$......
    A9E0: 55 A4 C1 AF CF 48 12 C0 8F 1B FC 23 A8 41 F0 C3  // U....H.....#.A..
    A9F0: A2 BF 55 66 24 DA 95 68 A7 A2 DD 8A 36 C8 D2 FC  // ..Uf$..h....6...
    AA00: BF 7E 04 89 F0 2B FF 93 42 F0 0F FC FA 11 26 C8  // .~...+..B.....&.
    AA10: DA 2E DB 01 B0 0F F1 2B 3F 90 02 80 43 04 0F 12  // .......+?...C...
    AA20: 3C 4C F0 02 BF C2 73 0F F8 2B 3C F6 09 BF 7A 50  // <L....s..+<...zP
    AA30: 0F B0 BF FF C3 39 1B 01 FF 0A 8F 7D C2 AF 1E D4  // .....9.....}....
    AA40: 03 EC EF FF 30 D0 46 00 EC 13 4D F7 33 5D 08 D2  // ....0.F...M.3]..
    AA50: 26 48 03 00 1D FC EB DF 91 BF 4B 86 A0 6D 82 36  // &H........K..m.6
    AA60: 03 E8 1C A1 43 04 0E 11 66 7C F0 02 BD F6 83 1A  // ....C...f|......
    AA70: 00 7F 40 AF CE C1 23 20 0D F0 3F 3A E1 04 60 22  // ..@...# ..?:..`"
    AA80: A0 8D 99 F4 7E AD 15 41 62 A6 FD 40 2B 01 98 30  // ....~..Ab..@+..0
    AA90: E8 BB 04 0F 83 36 1C AD 40 44 32 00 6D 44 FA 41  // .....6..@D2.mD.A
    AAA0: AD 52 45 C2 25 CD 60 AB 11 B1 07 B6 82 19 69 74  // .RE.%.`.......it
    AAB0: 6C DD B2 08 DA C4 25 1D 1E B8 41 F0 71 61 BA 04  // l.....%...A.qa..
    AAC0: 0F 83 3E 0C DA 00 D2 5D 45 77 46 9D 00 AC F0 A0  // ..>....]EwF.....
    AAD0: 0A C0 0F 0D 6A 10 FC A0 0B AF 06 FF 21 EB 81 24  // ....j.......!..$
    AAE0: 19 48 83 CF 3A 66 E4 9A 99 B2 01 0F C1 9F 81 36  // .H..:f.........6
    AAF0: 01 FD 95 9B 8D 19 29 66 66 06 DA 02 DC 31 06 AF  // ......)ff....1..
    AB00: 36 1D 72 F0 7F D4 51 27 FD 14 3C CE EB FE CF 9E  // 6.r...Q'..<.....
    AB10: 44 47 1F 3C 90 D2 0F B4 02 91 6A 00 7F 10 A9 04  // DG.<......j.....
    AB20: F0 0B 91 2A 00 FF 10 A8 C5 9B B9 2A 7B 20 C0 47  // ...*.......*{ .G
    AB30: AC 00 FF 07 00 0B 0A EA 10 FC A0 E8 43 A0 2F C0  // ............C./.
    AB40: DD 2A A8 F2 9B 65 20 7D 20 01 F8 AC 63 46 AA 99  // .*...e } ...cF..
    AB50: 29 1A F0 10 FC 19 68 13 D0 8F B9 D9 98 91 62 66  // ).....h.......bf
    AB60: 66 A0 2D C0 1D 01 FD 98 9B 09 E0 8A 3F 2A FF 66  // f.-.........?*.f
    AB70: FB D1 60 83 FA BC 19 7F 34 DE CD 12 D0 FF B7 19  // ..`.....4.......
    AB80: 7F 10 00 FF 03 FC 8F 0A 2A FF 66 1F B3 A2 86 2A  // ........*.f....*
    AB90: BE D1 68 A8 FC 1B 85 20 1D 2C AB DC 91 8A 03 C3  // ..h.... .,......
    ABA0: 0C 3E 77 66 08 DA 04 F4 F3 6F 36 18 2A FF 46 19  // .>wf.....o6.*.F.
    ABB0: 48 83 CB 2A 66 24 9A 99 19 68 97 20 1D 2C AB DC  // H..*f$...h. .,..
    ABC0: 91 A8 03 C3 0C 3E 77 66 09 DA 04 F4 F3 6F 16 01  // .....>wf.....o..
    ABD0: 34 30 FA 19 F2 00 E2 8A 77 66 04 D8 98 49 13 D4  // 40......wf...I..
    ABE0: 5A 11 26 66 DA 08 48 03 FC 8F 4C 38 01 98 08 68  // Z.&f..H...L8...h
    ABF0: 03 B0 1F 82 B4 B7 A9 01 F0 97 20 1D 0C 2B DC 91  // .......... ..+..
    AC00: 10 81 C7 9D E9 6D EA 00 FC 21 68 13 D0 1F 00 7F  // .....m...!h.....
    AC10: 09 DA 00 EC 03 A0 0F 00 FC 6F AC 20 C1 FF CF 0A  // .........o. ....
    AC20: 86 36 D1 74 3F D3 AD 28 00 24 2B C1 AC 02 B0 7A  // .6.t?..(.$+....z
    AC30: 9B 1A 04 3F 01 AC 16 81 07 80 49 18 6B 88 98 1F  // ...?......I.k...
    AC40: C1 83 A9 4D A6 34 20 AD FD 11 10 00 39 40 2B 01  // ...M.4 .....9@+.
    AC50: 98 10 B3 92 A9 DD 35 1D C2 AF F0 4F 06 C0 BF 21  // ......5....O...!
    AC60: 0F 00 FB 01 B0 0A C4 4A 12 3C 0C FA 68 6A 97 04  // .......J.<..hj..
    AC70: 3F 01 AB 40 AC 26 82 C3 A0 0F A7 76 08 AC 02 B1  // ?..@.&.....v....
    AC80: 9A 04 1F 30 2B 9D DA 01 B0 0A C4 FA 20 6B C0 AC  // ...0+....... k..
    AC90: 78 6A F3 29 0D F0 3F 00 AC 00 B1 12 CC CA A7 36  // xj.)..?........6
    ACA0: 00 FB 01 B0 46 C4 0A 21 2B 91 DA 10 B1 82 A0 4F  // ....F..!+......O
    ACB0: A4 B6 B7 A9 03 F0 4F ED 0A 40 7F 10 FC 5B BB F6  // ......O..@...[..
    ACC0: 67 83 80 34 10 AD 1A 82 10 80 89 80 76 00 D2 BF  // g..4........v...
    ACD0: B0 02 11 19 80 36 00 FA 40 B1 82 A0 0F 83 3E 91  // .....6..@.....>.
    ACE0: DA 01 B0 42 A0 0F 82 3E 0C FA 60 6A 03 B0 4F 34  // ...B...>..`j..O4
    ACF0: DD CF 74 1A 22 00 FC 8F 80 34 C0 FF 04 C1 23 A0  // ..t."....4....#.
    AD00: 0D C0 3E 62 AC 14 B0 BA 45 17 C0 2B 13 99 FD BC  // ..>b....E..+....
    AD10: 32 11 F9 17 9D 3C AF 4C 44 FE 45 47 9A B4 3F AF  // 2....<.LD.EG..?.
    AD20: 0E 60 92 A6 CD 00 24 69 DA 00 EC 03 20 1D 07 34  // .`....$i.... ..4
    AD30: 9C D8 20 BC 32 80 09 80 36 04 D2 DE 49 D3 89 ED  // .. .2...6...I...
    AD40: 26 B6 11 E9 F0 BC 32 00 C9 88 24 01 98 84 68 42  // &.....2...$...hB
    AD50: A0 ED 9D 76 9A 74 6B 68 03 B0 0F 1C 2B 00 FA 10  // ...v.tkh....+...
    AD60: DC 03 60 0F 0D BA 02 E0 D6 81 43 84 09 E0 3F 00  // ..`.......C...?.
    AD70: FA 1E D4 AF A1 8D 26 76 69 D2 00 FF C7 05 5F 9A  // ......&vi....._.
    AD80: 36 00 FB 70 40 03 FC 3F F0 AB 50 F0 52 C1 8B 05  // 6..p@..?..P.R...
    AD90: 2F 17 FC 60 F0 93 C1 8F 06 3F 1B 3C 45 AC C0 B0  // /..`.....?.<E...
    ADA0: 06 70 1F 81 3D 80 FF 5F D4 AF A1 1D B0 3F 80 FF  // .p..=.._.....?..
    ADB0: 9F D4 AF A1 1D B0 BF FF C3 C3 1C FD E3 8A 19 3C  // ...............<
    ADC0: 6A F0 B8 C1 03 F8 FF 49 FD 1A DA 00 EC 1F E8 01  // j......I........
    ADD0: F0 3F C0 FF 27 D1 01 B0 0F 07 34 C0 FF 00 FF 07  // .?..'.....4.....
    ADE0: 07 9F 25 1D 00 FB 04 BB C2 A0 0F 82 3E 04 FA 00  // ..%.........>...
    ADF0: E8 03 F8 EF 41 FD 1A DA D5 DC 85 D0 0A E0 FF 17  // ....A...........
    AE00: F5 6B 68 57 73 97 41 2B 80 FF 5F D4 AF A1 ED 00  // .khWs.A+.._.....
    AE10: AC EF C2 E5 1C 01 B0 4F B0 2B 0C FA 20 E8 43 A0  // .......O.+.. .C.
    AE20: 0F 80 3E 80 FF 1E D4 AF A1 5D CD 1D 06 AD 00 FE  // ..>......]......
    AE30: 7F 51 BF 86 B6 03 B0 BE 0B EF 73 04 C0 3E C1 AE  // .Q........s..>..
    AE40: 30 E8 83 A0 0F 81 3E 00 FA 00 FE 7B 50 BF 86 76  // 0.....>....{P..v
    AE50: 35 77 21 B4 02 F8 FF 45 FD 1A DA D5 DC 45 D0 0A  // 5w!....E.....E..
    AE60: E0 FF 17 F5 6B 68 43 D0 0A E0 FF 17 F5 6B 68 3B  // ....khC......kh;
    AE70: 00 EB BB 30 43 47 18 B4 02 F8 FF 45 FD 1A DA 00  // ...0CG.....E....
    AE80: EC 27 88 63 51 1C 75 D2 08 BF CE 3F 7B A0 0F 00  // .'.cQ.u....?{...
    AE90: AC 00 B1 02 C8 0A 30 2B 69 DA 68 62 C3 01 0D F0  // ......0+i.hb....
    AEA0: 3F C0 FF C1 C1 67 49 D7 C8 DD 1E 77 A2 DC FD C3  // ?....gI....w....
    AEB0: FA 1F AB 88 AC DE A6 06 C1 EF 22 2C 0C FA A0 69  // ..........",...i
    AEC0: D3 72 07 0C 2B 43 AC 01 DC 47 60 0F 80 3E 04 FA  // .r..+C...G`..>..
    AED0: 20 E8 C3 A0 0F E0 FF 07 F5 6B 68 57 73 47 07 74  //  ........khWsG.t
    AEE0: C0 FE 00 FF 03 F8 FF 41 FD 1A DA C0 B3 C2 70 4F  // .......A......pO
    AEF0: 30 2B 0C F6 03 B3 82 A0 0F 81 3E 00 FA 00 FE 7B  // 0+........>....{
    AF00: 50 BF 86 76 82 00 D5 DC C1 A0 0F E0 BF 07 F5 6B  // P..v...........k
    AF10: 68 EF 71 A7 06 34 70 AC 00 E8 43 70 0F 80 3D 9A  // h.q..4p...Cp..=.
    AF20: D0 07 BB 2E 22 89 20 0C 01 AD 8E 4B 06 C0 CF 40  // ....". ....K...@
    AF30: AB 0C AC 14 61 02 F8 EF 41 FD 1A DA 68 62 83 FC  // ....a...A...hb..
    AF40: 7A 12 9D 23 A8 44 F0 D7 01 0D 20 9D 57 A8 7D 1D  // z..#.D.... .W.}.
    AF50: A1 09 0D F0 7F FF AF 0F 40 02 F8 EF 41 FD 1A DA  // ........@...A...
    AF60: 02 BC 32 82 0A D9 51 1B D0 09 62 A8 76 47 40 BF  // ..2...Q...b.vG@.
    AF70: 65 67 88 B1 52 C0 EA 16 1D 90 AC 27 42 42 76 06  // eg..R......'BBv.
    AF80: 9A 74 69 D2 00 FF AB 90 2E C3 38 13 99 3A A5 F7  // .ti.......8..:..
    AF90: 81 4D 22 5D 57 74 00 D2 5D 45 E7 DB 1D 9C D0 75  // .M"]Wt..]E.....u
    AFA0: 42 BB 09 0D 80 76 04 DA DE 69 03 B0 0F 95 B4 37  // B....v...i.....7
    AFB0: A8 01 F0 53 25 ED 6C 2A 01 FC D0 4A 7B 83 1A 00  // ...S%.l*...J{...
    AFC0: 3F B5 D2 00 FF DF 80 AA DA 91 18 A8 AA 1D 45 81  // ?.............E.
    AFD0: AA DA 11 41 A9 AA 1D 01 B0 0F 95 74 55 D2 5A 49  // ...A.......tU.ZI
    AFE0: A3 82 DD 0A B6 2C D8 5C 49 47 2B 6D AD 34 2D D8  // .....,.\IG+m.4-.
    AFF0: B9 60 FB 82 0D C0 3E 00 FB 00 EC 93 21 CD D0 AB  // .`....>.....!...
    B000: 74 92 D9 A0 66 77 34 F0 EB 8D 77 03 BF 02 F4 8A  // t...fw4...w.....
    B010: E1 1D 00 FD EB 1D 11 F4 2A 9D E4 78 67 01 BF DE  // ........*..xg...
    B020: 78 17 F0 2B 40 AF 18 DE 01 D0 BF DE 11 42 AF D2  // x..+@........B..
    B030: 49 AE 77 26 F0 EB 8D 77 02 BF 02 F4 8A E1 DD 98  // I.w&...w........
    B040: 74 6B 68 03 48 07 F0 3F 80 FF 00 FF E7 02 ED 23  // tkh.H..?.......#
    B050: 5D 2E D8 63 D2 91 21 0D D6 AB 74 92 D9 A0 22 C1  // ]..c..!...t...".
    B060: 3F F0 2B AA 77 03 BF 06 F4 1A C0 2B 86 77 00 F4  // ?.+.w......+.w..
    B070: 6F 01 04 D2 AB 74 92 08 F0 07 FC 8A EA 5D C0 AF  // o....t.......]..
    B080: 01 BD 06 F0 8A E1 1D 00 FD 5B 00 01 F5 2A 9D A4  // .........[...*..
    B090: 01 FC 02 BF A2 7A 27 F0 6B 40 AF 01 BC 62 78 07  // .....z'.k@...bx.
    B0A0: 40 FF 16 40 62 48 3B 33 A9 E2 99 3C E0 00 C0 E3  // @..@bH;3...<....
    B0B0: 07 1E 01 BC 77 93 45 F0 03 00 0F AA 66 A8 92 04  // ....w.E.....f...
    B0C0: F4 0F C0 1F 01 3C A8 92 A1 6A 8A A1 2D 0F 2B A8  // .....<...j..-.+.
    B0D0: 9A 0A A0 1E C1 0F 84 34 02 AD F7 B5 52 84 09 84  // .......4....R...
    B0E0: 76 45 90 40 68 AF A1 0D C0 3E 15 D2 80 E8 0F E4  // vE.@h....>......
    B0F0: EA BF 64 00 FC 89 68 0A E8 CA 90 AB FE 92 01 F0  // ..d...h.........
    B100: 27 A2 89 33 26 15 DA 90 E8 13 D0 EA BF 64 00 FC  // '..3&........d..
    B110: 9A 69 EA 2F 19 00 3F 65 9A 60 49 AF A1 0D F0 3F  // .i./..?e.`I....?
    B120: C0 FF 65 48 03 FC 6F BD 64 2F A8 9F 1E 4D 2E C9  // ..eH..o.d/...M..
    B130: E4 11 0A D0 F0 84 43 88 62 22 3A 80 74 2E 02 6F  // ......C.b":.t..o
    B140: 79 44 80 F4 3B AD 2A 8A 50 04 49 80 F6 E0 77 04  // yD..;.*.P.I...w.
    B150: B6 C6 A0 5D 9D F4 73 F0 76 AF 9F 44 C7 1F 7C 0A  // ...]..s.v..D..|.
    B160: D0 00 FF 03 FC AF 55 64 A4 67 80 B8 FA 33 69 00  // ......Ud.g...3i.
    B170: 3F 4F D2 99 48 E3 8C 89 44 26 4F DA 99 68 EB 33  // ?O..H...D&O..h.3
    B180: 69 00 3F 50 D2 B1 48 E3 8C 89 44 26 50 DA B1 68  // i.?P..H...D&P..h
    B190: FB 33 69 00 3F 24 D2 95 48 23 80 89 44 26 24 DA  // .3i.?$..H#..D&$.
    B1A0: 95 68 EB 33 69 00 3F 2A D2 AD 48 23 80 89 44 26  // .h.3i.?*..H#..D&
    B1B0: 2A DA AD 68 03 21 0D 88 AB FF 92 01 F0 63 84 A9  // *..h.!.......c..
    B1C0: BF 64 00 FC 28 62 02 A1 4D A9 34 C0 FF BC 60 07  // .d..(b..M.4...`.
    B1D0: F0 0A C0 3E 15 D2 B1 40 23 02 8F 33 24 15 DA 3E  // ...>...@#..3$..>
    B1E0: D2 C5 82 0D C0 2B 00 FB 28 40 CB E7 83 02 34 C0  // .....+..(@....4.
    B1F0: FF 02 B8 62 04 59 ED 99 FF 92 B8 9E F1 24 9D 89  // ...b.Y.......$..
    B200: F4 1F AE 38 43 22 11 C9 93 76 26 DA 02 BC F2 2F  // ...8C"...v&..../
    B210: 29 EC 19 50 D2 B1 48 FF E1 8A 33 24 12 91 40 69  // )..P..H...3$..@i
    B220: C7 A2 ED BF E4 B2 67 90 48 57 22 FD 87 2B 02 90  // ......g.HW"..+..
    B230: 48 44 42 A2 5D 89 B6 00 AF FC 4B 56 7B 86 8A 74  // HDB.].....KV{..t
    B240: 2B D2 7F B8 22 00 89 44 24 2A DA AD 68 FB 2F C9  // +..."..D$*..h./.
    B250: ED 19 26 D2 C0 B4 D2 8C 49 33 24 26 DA 02 BC F2  // ..&.....I3$&....
    B260: 2F 49 EE 19 2C D2 C0 B4 D2 8C 49 33 24 2C DA D6  // /I..,.....I3$,..
    B270: 49 93 00 0D F0 BF C0 AF F1 4F 16 C0 4F FB 3A EE  // I........O..O.:.
    B280: EA FB CF 9E 44 D7 15 1D EE EB 27 D1 C9 87 D1 F5  // ....D.....'.....
    B290: 9D BB 93 F7 1E 21 F0 0A F8 1D 10 D2 7F B8 FA 2F  // .....!........./
    B2A0: 19 00 3F 46 90 02 BC F2 2F 19 00 3F 8A 90 40 68  // ..?F..../..?..@h
    B2B0: CB E7 01 F0 3F C0 FF FE 4B 12 C0 8F 89 F4 0F AD  // ....?...K.......
    B2C0: 34 43 62 A2 2D C0 2B FF 92 04 F0 C3 22 FD 43 2B  // 4Cb.-.+.....".C+
    B2D0: CD 90 B0 68 03 21 0D 82 6B 20 92 18 9F 0D 7E 27  // ...h.!..k ....~'
    B2E0: 60 6B 0C DA 40 48 0B E0 0A 88 E4 C7 67 3D 48 0F  // `k..@H......g=H.
    B2F0: 7E 17 83 36 02 D2 10 B8 62 04 49 00 3F 10 D2 20  // ~..6....b.I.?.. 
    B300: BC 0E 93 0F F8 1D 01 D2 2A 22 00 FC 0F F0 3F 45  // ........*"....?E
    B310: F0 04 68 CB E7 01 80 AB 00 AF 54 48 FB 2F 19 00  // ..h.......TH./..
    B320: FF 00 AE FC 4B 0A C0 CF C0 2B 23 9A 88 C0 E3 0C  // ....K....+#.....
    B330: 49 85 36 3E E0 10 82 00 B0 8F 93 B4 3C E1 44 C0  // I.6>........<.D.
    B340: 93 08 89 93 36 C0 D0 4F C1 1F D4 5A C2 36 09 AC  // ....6..O...Z.6..
    B350: 10 C1 83 04 0F 13 3C C0 D8 40 E8 43 A1 5F C2 B6  // ......<..@.C._..
    B360: FF 92 04 F0 63 22 FD 47 2B 89 90 98 68 0B EC FA  // ....c".G+...h...
    B370: BB 24 01 FC B0 48 FF D1 4A 22 24 2C DA 00 EC 67  // .$...H..J"$,...g
    B380: 47 87 99 F4 C3 AF 0F 64 46 05 3F F8 5D 0C DA 54  // G......dF.?.]..T
    B390: 48 23 3F FE 22 26 15 DA 74 49 43 FC FA 42 E6 54  // H#?."&..tIC..B.T
    B3A0: F0 83 DF C5 A0 0D 20 1D 15 D2 9F BF BE 08 49 85  // ...... .......I.
    B3B0: 36 5D D2 00 FF 0B 05 3F 15 FC E0 77 31 68 63 26  // 6].....?...w1hc&
    B3C0: 0D F0 3F 50 F0 51 C1 0F 7E 17 83 36 00 FB CE 0C  // ..?P.Q..~..6....
    B3D0: 03 7E 04 C0 BE 5B F0 03 B7 F2 81 3A 00 3F 40 AF  // .~...[.....:.?@.
    B3E0: 04 F4 4B 7E E6 DC A4 00 FC 02 BD F6 1D 29 D0 6B  // ..K~.........).k
    B3F0: 73 93 02 F0 07 F4 DA 77 24 00 FB 00 FF 03 FC 0F  // s......w$.......
    B400: F0 3F C0 FF 0C 01 03 06 EC 3F 01 00 F8 24 01 00  // .?.......?...$..
    B410: 38 00 06 0A F6 05 09 00 50 A5 05 00 E8 03 00 00  // 8.......P.......
    B420: 0C 01 18 08 E8 03 00 00 4C 04 00 00 EC 3F 01 00  // ........L....?..
    B430: EC 3F 01 00 00 00 00 00 00 00 00 00 00 00 00 00  // .?..............
    B440: 43 6F 02 00 68 06 00 00 00 00 00 00 00 00 00 00  // Co..h...........
    B450: 36 68 D8 12 1B 67 2B 10 00 00 00 00 00 00 01 00  // 6h...g+.........
    B460: 00 00 00 00 00 00 00 00 2F 00 00 00 00 00 00 00  // ......../.......
    B470: 19 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  // ................
    B480: 9B 02 00 00 06 00 00 00 C8 00 00 00 DC 00 00 00  // ................
    B490: F0 00 00 00 04 01 00 00 18 01 00 00 2C 01 00 00  // ............,...
    B4A0: 40 01 00 00 4A 01 00 00 B0 71 0B 00 90 1D 0C 00  // @...J....q......
    B4B0: 90 1D 0C 00 90 1D 0C 00 90 1D 0C 00 90 1D 0C 00  // ................
    B4C0: 70 4C 0C 00 38 7F 0C 00 14 00 00 00 2A 03 00 00  // pL..8.......*...
    B4D0: 30 01 00 00 1B 00 00 00 00 00 CD 3F 63 F5 B4 5F  // 0..........?c.._
    B4E0: 02 00 0D 33 02 00 9A 99 D1 FB 30 2A 02 00 00 00  // ...3......0*....
    B4F0: 00 00 0C 0E 00 00 35 F9 E5 00 00 00 00 00 00 00  // ......5.........
    B500: 87 00 F7 FF FF FF CC 0C 01 00 01 00 00 01 00 00  // ................
    B510: 1C 00 03 01 01 07 0C 00 0E 00 00 00 00 00 00 00  // ................
    B520: 04 07 0C 00 0E 00 00 00 00 00 00 00 1C 00 03 01  // ................
    B530: FF FF FF 00 32 00 B8 0B 01 00 00 00 FF FF FF 00  // ....2...........
    B540: 7C 01 4E 0C 07 12 00 00 57 00 02 03 14 00 00 00  // |.N.....W.......
    B550: DC 2C 00 00 70 05 02 05 00 00 00 00 1E 21 48 00  // .,..p........!H.
    B560: 4C 00 03 FF FF 00 1E 22 4B 00 4C 00 09 FF FF 00  // L......"K.L.....
    B570: 20 21 4E 00 4C 00 0A FF FF 00 20 22 51 00 4C 00  //  !N.L..... "Q.L.
    B580: 0B FF FF 00 21 21 54 00 4C 00 0C FF FF 00 FF FF  // ....!!T.L.......
    B590: 14 04 FF 15 04 FF 16 04 FF 17 04 FF 18 04 FF 00  // ................
    B5A0: 18 00 02 01 02 00 08 00 80 00 00 02 00 04 00 08  // ................
    B5B0: 40 00 01 00 10 00 FF FF 38 00 02 01 04 4A 00 00  // @.......8....J..
    B5C0: 7C 92 00 00 01 04 1E 00 3C 00 00 00 F8 24 01 00  // |.......<....$..
    B5D0: 01 03 1E 00 3C 00 1E 00 F0 49 02 00 01 02 1E 00  // ....<....I......
    B5E0: 3C 00 1E 00 E0 93 04 00 01 01 1E 00 00 00 1E 00  // <...............
    B5F0: 55 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00  // U...............
    B600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B640: 00 00 00 00 00 00 87 00 01 02 00 08 02 01 02 00  // ................
    B650: 52 47 52 02 02 65 02 07 52 0D 55 00 02 52 0D 52  // RGR..e..R.U..R.R
    B660: 23 2C 25 02 01 3D 25 02 05 45 17 00 51 02 52 3D  // #,%..=%..E..Q.R=
    B670: 02 05 02 00 00 06 08 52 20 52 39 66 04 02 8C 02  // .......R R9f....
    B680: 2E 00 02 0D 02 01 00 52 43 02 05 02 04 00 20 03  // .......RC..... .
    B690: 52 43 02 F9 02 01 52 05 02 01 02 00 0E E5 02 08  // RC....R.........
    B6A0: 52 0A 02 05 02 02 00 00 00 52 43 02 05 02 18 F0  // R........RC.....
    B6B0: 01 40 52 0B 02 05 02 30 75 00 40 52 0B 02 01 02  // .@R....0u.@R....
    B6C0: 01 0E E5 02 08 52 0B 0D 65 D0 05 02 5B 00 57 00  // .....R..e...[.W.
    B6D0: 01 02 00 00 37 00 00 52 14 02 08 00 0D 1A 32 08  // ....7..R......2.
    B6E0: 00 0B 1A 02 88 00 0E 1A 32 88 00 0C 1A 03 00 46  // ........2......F
    B6F0: 04 1A 09 05 46 FF FF FF 02 56 00 40 03 20 40 01  // ....F....V.@. @.
    B700: 1A 09 25 40 03 75 02 46 40 03 18 40 5C 1B 2D 02  // ..%@.u.F@..@\.-.
    B710: 46 40 27 00 46 06 1A 2D 08 40 5C 1B 02 0A 01 41  // F@'.F..-.@\....A
    B720: 02 8A 01 40 5B 00 C0 00 01 01 04 00 37 00 00 01  // ...@[.......7...
    B730: 05 0E 00 02 00 40 01 37 03 00 5C 05 02 00 FC 7F  // .....@.7..\.....
    B740: FF FF 00 00 00 00 5C 05 10 00 FF FF 9D FF 00 09  // ......\.........
    B750: 41 00 5C 05 21 00 7F FF FF FF 80 00 00 00 5C 05  // A.\.!.........\.
    B760: 40 00 BE 3F FF FF 40 40 01 00 37 00 00 01 05 0E  // @..?..@@..7.....
    B770: 00 70 00 01 10 37 03 00 01 05 70 00 00 40 00 01  // .p...7....p..@..
    B780: 5C 05 A0 00 0F FF FE DF 10 00 01 60 5C 05 A2 00  // \..........`\...
    B790: 7F F3 97 FF 86 04 88 5A 5C 05 A4 00 1B F0 FF FF  // .......Z\.......
    B7A0: 20 0D 40 04 5C 05 B1 00 FF 2D FF FF 80 50 18 96  //  .@.\....-...P..
    B7B0: 37 00 00 54 00 06 00 01 25 C5 14 02 01 05 C2 14  // 7..T....%.......
    B7C0: 7F 00 00 00 01 05 E8 15 70 3D 29 0A 01 05 E9 15  // ........p=).....
    B7D0: 9C A4 0D 20 01 05 EA 15 20 95 87 00 02 05 00 41  // ... .... ......A
    B7E0: 00 00 01 52 09 5B 13 01 01 01 04 00 37 00 00 03  // ...R.[......7...
    B7F0: 01 00 00 54 20 24 15 01 25 00 08 03 01 25 28 08  // ...T $..%....%(.
    B800: 03 5C 25 2B 08 F8 01 55 00 00 52 34 52 3E 03 24  // .\%+...U..R4R>.$
    B810: 40 0C 00 15 25 40 04 5C 62 01 08 0F 40 01 04 D7  // @...%@.\b...@...
    B820: 09 24 00 01 04 02 08 00 00 01 04 1C 08 20 00 66  // .$........... .f
    B830: 18 2D 0C 42 10 00 56 00 40 03 0C 40 00 00 3E 0D  // .-.B..V.@..@..>.
    B840: 40 00 00 44 73 00 01 02 00 00 40 01 04 01 00 02  // @..Ds.....@.....
    B850: 00 2D 0D 42 06 00 43 53 00 0D 25 68 15 03 54 00  // .-.B..CS..%h..T.
    B860: 34 FE 01 05 35 FE 03 0A 03 0A 01 05 35 FE 04 0A  // 4...5.......5...
    B870: 04 0A 01 00 03 0A 69 15 01 00 04 0A 69 15 5C 25  // ......i.....i.\%
    B880: D5 09 FB 01 0D 05 D5 09 00 08 00 40 54 00 34 FE  // ...........@T.4.
    B890: 01 05 35 FE 03 0A 0C 00 01 05 35 FE 04 0A 0C 00  // ..5.......5.....
    B8A0: 52 0F 66 1C 2D 0C 42 0A 00 55 00 00 52 12 66 1C  // R.f.-.B..U..R.f.
    B8B0: 2D 0C 42 0C 00 02 0D 00 01 00 52 1F 52 1E 02 05  // -.B.......R.R...
    B8C0: 00 30 75 00 00 52 10 4C E5 00 20 44 ED 00 0D 25  // .0u..R.L.. D...%
    B8D0: 80 0A 18 02 25 00 FF 52 40 4A 65 80 0A 0F 49 0E  // ....%..R@Je...I.
    B8E0: 01 52 03 03 20 00 80 0A 09 25 00 FC 52 1E 5C 22  // .R.. ....%..R.\"
    B8F0: 80 0A 03 00 52 07 52 48 5B 00 FF 00 02 01 00 04  // ....R.RH[.......
    B900: 37 00 00 66 0C 03 0C 41 00 00 2D 0A 41 42 2D 0D  // 7..f...A..-.AB-.
    B910: 42 04 00 3D 24 00 03 00 44 30 00 2D 0D 42 04 00  // B..=$...D0.-.B..
    B920: 3E 0A 42 41 44 FB 00 43 19 00 56 00 43 03 A4 41  // >.BAD..C..V.C..A
    B930: 02 00 03 F2 41 41 03 0C 41 00 00 3E 0D 41 00 00  // ....AA..A..>.A..
    B940: 44 FB 00 3E 0D 41 61 48 49 6B 00 3E E5 41 10 46  // D..>.AaHIk.>.A.F
    B950: 5F 00 1B 3D 41 01 43 6B 00 09 E5 41 03 15 3D 41  // _..=A.Ck...A..=A
    B960: 02 2D E5 41 0C 03 3A 43 41 54 00 00 00 33 0D 41  // .-.A..:CAT...3.A
    B970: 01 00 01 0A 00 00 41 0D 02 01 00 44 2D 0D 41 02  // ......A....D-.A.
    B980: 00 01 0A 00 00 41 03 32 43 41 4B E5 00 01 49 D7  // .....A.2CAK...I.
    B990: 00 07 02 01 00 45 2D 0D 41 01 00 01 0A 00 00 41  // .....E-.A......A
    B9A0: 4A 02 01 00 44 44 B9 00 03 29 43 00 0E A2 00 44  // J...DD...)C....D
    B9B0: 43 C1 00 03 29 43 00 08 A2 00 45 33 0D 41 03 00  // C...)C....E3.A..
    B9C0: 01 0A 00 00 41 03 3A 43 41 07 02 01 00 45 43 FA  // ....A.:CA....EC.
    B9D0: 00 0D 02 01 00 44 33 0D 41 01 00 01 0A 00 00 41  // .....D3.A......A
    B9E0: 3D A5 00 01 44 F5 00 07 02 01 00 45 43 FA 00 0D  // =...D......EC...
    B9F0: 02 01 00 44 5B 55 20 00 5B 00 93 01 01 02 14 00  // ...D[U .[.......
    BA00: 37 00 00 4B E5 00 08 44 23 00 01 05 82 00 70 03  // 7..K...D#.....p.
    BA10: 00 80 3C 05 83 00 00 00 02 00 46 4F 01 03 01 04  // ..<.......FO....
    BA20: 00 02 E5 00 01 52 3C 01 05 82 00 40 01 50 C0 0D  // .....R<....@.P..
    BA30: 25 83 00 08 66 FF 2D 0D 42 53 01 01 05 82 00 40  // %...f.-.BS.....@
    BA40: 03 50 C0 4A 25 83 00 01 44 56 00 2D 0D 42 20 00  // .P.J%...DV.-.B .
    BA50: 03 04 00 08 00 03 04 01 0C 00 03 04 02 10 00 03  // ................
    BA60: 04 03 14 00 01 04 82 00 04 00 4A 05 83 00 80 00  // ..........J.....
    BA70: 00 00 44 97 00 2D 05 00 10 00 00 00 2D 05 01 10  // ..D..-......-...
    BA80: 00 00 00 2D 05 02 10 00 00 00 2D 05 03 10 00 00  // ...-......-.....
    BA90: 00 4A 25 83 00 02 44 B8 00 01 04 82 00 1C 00 0D  // .J%...D.........
    BAA0: 25 83 00 10 01 04 82 00 04 00 4A 25 83 00 01 44  // %.........J%...D
    BAB0: AA 00 01 04 82 00 18 00 01 21 83 00 02 01 02 82  // .........!......
    BAC0: 00 00 01 01 83 00 01 56 00 40 03 29 40 02 15 25  // .......V.@.)@..%
    BAD0: 40 06 01 04 82 00 00 00 5C 8A 83 00 3F 00 40 01  // @.......\...?.@.
    BAE0: 02 82 00 01 01 99 83 00 04 01 02 82 00 03 01 99  // ................
    BAF0: 83 00 05 01 04 82 00 1C 00 0D A5 83 00 10 01 02  // ................
    BB00: 82 00 01 0D E5 83 00 04 01 04 82 00 1C 00 0D 25  // ...............%
    BB10: 83 00 01 01 04 82 00 04 00 4A 25 83 00 02 44 19  // .........J%...D.
    BB20: 01 01 05 82 00 40 01 50 C0 07 25 83 00 F7 02 02  // .....@.P..%.....
    BB30: 00 04 4C E5 04 08 49 4F 01 52 2F 02 01 01 00 02  // ..L...IO.R/.....
    BB40: 02 00 04 02 E5 00 02 52 3F 5B 7A 40 00 68 02 50  // .......R?[z@.h.P
    BB50: C0 78 02 50 C0 8C 02 50 C0 90 02 50 C0 94 02 50  // .x.P...P...P...P
    BB60: C0 98 02 50 C0 AC 02 50 C0 B0 02 50 C0 E4 02 50  // ...P...P...P...P
    BB70: C0 F4 02 50 C0 08 03 50 C0 0C 03 50 C0 10 03 50  // ...P...P...P...P
    BB80: C0 14 03 50 C0 28 03 50 C0 2C 03 50 C0 00 22 01  // ...P.(.P.,.P..".
    BB90: 02 01 0C 04 37 00 00 5C 25 2B 08 F8 01 54 20 24  // ....7..\%+...T $
    BBA0: 15 07 25 EB 09 FE 4B E5 00 40 44 A1 00 01 05 91  // ..%...K..@D.....
    BBB0: 0A 0D 00 00 00 03 B0 01 92 0A 52 3B 03 01 00 00  // ..........R;....
    BBC0: 56 38 00 3E 01 00 01 45 62 00 3E 01 00 02 45 53  // V8.>...Eb.>...ES
    BBD0: 00 01 05 91 0A 0D 00 00 00 07 A5 92 0A F7 43 A1  // ..............C.
    BBE0: 00 01 05 91 0A 0D 00 00 00 54 38 92 0A 43 A1 00  // .........T8..C..
    BBF0: 03 00 02 96 0A 03 F8 01 99 0A 01 05 91 0A 00 00  // ................
    BC00: 00 00 03 08 01 92 0A 01 05 91 0A 0D 00 00 00 5C  // ...............\
    BC10: 8D 92 0A 00 00 80 00 07 E5 99 0A BF 07 65 96 0A  // .............e..
    BC20: F0 01 05 91 0A 00 00 00 00 01 0D 92 0A 77 77 02  // .............ww.
    BC30: 01 01 00 52 10 02 01 01 00 02 E5 01 01 52 3F 52  // ...R.........R?R
    BC40: 30 02 E5 01 02 02 01 02 00 52 3F 07 25 F3 09 FC  // 0........R?.%...
    BC50: 55 00 01 4A 25 80 0A 08 49 D1 00 02 25 01 07 52  // U..J%...I...%..R
    BC60: 40 4B E5 00 40 44 12 01 01 05 91 0A 0D 00 00 00  // @K..@D..........
    BC70: 4C A5 01 80 49 ED 00 54 38 92 0A 01 B2 92 0A 01  // L...I..T8.......
    BC80: 52 3B 3E 01 00 01 46 12 01 01 FA 99 0A 01 01 6A  // R;>...F........j
    BC90: 96 0A 02 01 05 91 0A 00 00 00 00 01 0A 92 0A 01  // ................
    BCA0: 0D 25 EB 09 01 07 25 2B 08 F8 0D 25 24 15 03 5B  // .%....%+...%$..[
    BCB0: CB 04 01 07 08 08 37 00 00 3D 25 01 FF 44 95 04  // ......7..=%..D..
    BCC0: 3D 25 01 18 46 91 04 3D 25 01 02 47 91 04 3D 25  // =%..F..=%..G..=%
    BCD0: 01 14 45 95 04 3D 05 00 00 00 00 00 44 43 02 4B  // ..E..=......DC.K
    BCE0: E5 01 02 49 61 00 02 A9 02 02 55 28 02 0E E5 01  // ...Ia.....U(....
    BCF0: 80 3D 05 00 40 4B 4C 00 45 61 00 0D A5 C2 9D 40  // .=..@KL.Ea.....@
    BD00: 03 21 41 01 33 25 41 14 03 22 43 41 0D E2 C1 48  // .!A.3%A.."CA...H
    BD10: 44 66 FF 2D 0D 42 AB 04 03 39 40 01 09 0D 40 30  // Df.-.B...9@...@0
    BD20: 00 1B 0D 40 02 2D 0A 42 40 56 00 00 56 00 01 02  // ...@.-.B@V..V...
    BD30: 05 03 40 01 00 00 02 65 01 01 20 05 00 0A 00 00  // ..@....e.. .....
    BD40: 00 03 02 46 40 3D 05 00 80 8D 5B 00 47 A6 00 0E  // ...F@=....[.G...
    BD50: E5 01 08 55 28 01 4B E5 01 08 44 B1 00 1B 05 46  // ...U(.K...D....F
    BD60: 01 3E 05 46 A0 2F C5 01 48 C6 00 2C 65 01 01 15  // .>.F./..H..,e...
    BD70: 05 46 01 43 B1 00 14 2D 01 05 03 05 01 00 00 01  // .F.C...-........
    BD80: 00 4B E5 01 02 49 33 01 4B E5 01 80 49 DF 00 27  // .K...I3.K...I..'
    BD90: 04 46 00 00 3E 05 41 00 00 00 00 44 45 01 03 04  // .F..>.A....DE...
    BDA0: 40 00 00 03 02 00 41 27 02 40 41 03 02 40 00 3E  // @.....A'.@A..@.>
    BDB0: 05 41 00 00 00 00 49 F3 00 7C 05 00 00 00 01 00  // .A....I..|......
    BDC0: 7E 04 40 00 00 7C 04 40 00 00 7E 02 40 00 03 02  // ~.@..|.@..~.@...
    BDD0: 01 40 3E 05 01 33 F3 00 00 48 33 01 03 05 01 00  // .@>..3...H3.....
    BDE0: 00 01 00 27 04 46 00 00 7C 02 01 41 7E 04 40 00  // ...'.F..|..A~.@.
    BDF0: 00 03 0A 00 40 27 04 46 00 00 03 8A 00 40 56 18  // ....@'.F.....@V.
    BE00: 01 43 AF 01 7C 02 40 00 7E 05 40 A0 86 01 00 03  // .C..|.@.~.@.....
    BE10: 01 41 03 09 05 41 03 00 00 00 6F 02 40 41 7C 05  // .A...A....o.@A|.
    BE20: 40 4E 0C 00 00 7E 05 40 40 4B 4C 00 3E 05 40 00  // @N...~.@@KL.>.@.
    BE30: 00 00 00 49 8A 01 03 25 40 01 7C 05 40 40 4B 4C  // ...I...%@.|.@@KL
    BE40: 00 7E 05 40 4E 0C 00 00 03 01 41 03 09 05 41 03  // .~.@N.....A...A.
    BE50: 00 00 00 75 02 40 41 1B 05 40 01 2D 02 00 40 66  // ...u.@A..@.-..@f
    BE60: FF 2D 0D 42 9F 04 56 00 40 03 21 40 01 33 25 40  // .-.B..V.@.!@.3%@
    BE70: 14 15 25 40 01 2D 0A 42 40 03 0C 48 00 00 4A 65  // ..%@.-.B@..H..Je
    BE80: E2 48 10 44 FE 02 03 39 41 01 09 0D 41 30 00 1B  // .H.D...9A...A0..
    BE90: 0D 41 04 3C 22 5E 49 41 49 22 02 3C 21 23 49 03  // .A.<"^IAI".<!#I.
    BEA0: 49 22 02 3C 29 25 49 03 49 22 02 03 20 41 5F 49  // I".<)%I.I".. A_I
    BEB0: 09 25 41 E0 3E 29 41 01 49 22 02 4B E5 01 40 49  // .%A.>)A.I".K..@I
    BEC0: F6 02 3C 02 20 49 00 49 22 02 3C 0A 22 49 01 44  // ..<. I.I".<."I.D
    BED0: 26 02 0E E5 01 01 3A 00 00 4B E5 01 01 44 69 04  // &.....:..K...Di.
    BEE0: 4B E5 01 02 49 43 02 3D 25 02 04 46 43 02 55 28  // K...IC.=%..FC.U(
    BEF0: 02 52 23 56 00 40 03 21 40 01 33 25 40 14 03 0A  // .R#V.@.!@.3%@...
    BF00: 48 40 07 25 60 01 FE 66 FF 2D 0D 42 9F 04 56 00  // H@.%`..f.-.B..V.
    BF10: 40 03 21 40 01 33 25 40 14 15 25 40 01 2D 0A 42  // @.!@.3%@..%@.-.B
    BF20: 40 03 0C 48 00 00 07 65 23 49 FE 54 00 21 49 54  // @..H...e#I.T.!IT
    BF30: 00 22 49 07 65 E2 48 EF 4A 65 E2 48 20 49 88 02  // ."I.e.H.Je.H I..
    BF40: 07 65 F2 48 EF 4A 65 F2 48 20 49 95 02 3D 05 00  // .e.H.Je.H I..=..
    BF50: 00 00 00 00 49 FE 02 4A A5 C1 48 80 44 D2 02 56  // ....I..J..H.D..V
    BF60: 00 41 5C 25 E0 48 F8 06 51 02 4A 65 E0 48 01 44  // .A\%.H..Q.Je.H.D
    BF70: BA 02 2D A5 41 01 2D 0D 48 10 00 3E A5 41 04 45  // ..-.A.-.H..>.A.E
    BF80: B2 02 56 08 48 03 21 41 01 33 25 41 14 03 22 43  // ..V.H.!A.3%A.."C
    BF90: 41 07 E2 C1 48 45 4A E5 C1 48 3F 49 91 04 07 A5  // A...HEJ..H?I....
    BFA0: C2 9D BF 43 91 04 01 02 20 49 00 43 17 04 01 05  // ...C.... I.C....
    BFB0: DA 48 80 88 01 00 3D A5 01 00 49 1F 03 3D 05 00  // .H....=...I..=..
    BFC0: E0 3B 66 00 45 1F 03 07 25 DB 48 FE 43 3F 03 0D  // .;f.E...%.H.C?..
    BFD0: 25 DB 48 01 3D A5 01 02 49 3F 03 4B E5 01 08 44  // %.H.=...I?.K...D
    BFE0: 3F 03 01 05 7A 49 80 88 01 00 0D 25 7B 49 01 0D  // ?...zI.....%{I..
    BFF0: 25 5F 49 01 03 39 40 01 09 0D 40 30 00 1B 0D 40  // %_I..9@...@0...@
    C000: 04 01 22 5E 49 40 0D 65 5F 49 80 3E 25 40 02 44  // .."^I@.e_I.>%@.D
    C010: 66 03 03 65 40 04 5C 6A 5F 49 FB 40 66 FF 56 00  // f..e@.\j_I.@f.V.
    C020: 40 2D 0D 42 BB 04 03 21 40 03 09 0D 40 03 00 15  // @-.B...!@...@...
    C030: 0D 40 02 2D 0A 42 40 01 0C 24 49 00 00 01 E4 26  // .@.-.B@..$I....&
    C040: 49 02 00 0D 25 26 49 02 01 21 23 49 03 01 A5 23  // I...%&I..!#I...#
    C050: 49 E8 01 02 20 49 00 54 00 21 49 01 02 22 49 01  // I... I.T.!I.."I.
    C060: 4B E5 01 08 44 BF 03 07 65 5F 49 FE 43 C4 03 0D  // K...D...e_I.C...
    C070: 65 5F 49 01 5C 29 5F 49 1F 01 01 8D 2B 49 20 03  // e_I.\)_I....+I .
    C080: 01 29 25 49 03 07 65 5F 49 7F 5C 65 E2 48 E3 04  // .)%I..e_I.\e.H..
    C090: 4A 65 E2 48 20 49 E0 03 0D 65 E2 48 10 4A 65 E2  // Je.H I...e.H.Je.
    C0A0: 48 20 44 ED 03 4B E5 01 02 49 17 04 5C 65 F2 48  // H D..K...I..\e.H
    C0B0: E3 04 4A 65 F2 48 20 49 02 04 0D 65 F2 48 10 4A  // ..Je.H I...e.H.J
    C0C0: 65 F2 48 20 44 0F 04 3D A5 01 02 44 25 04 3D A5  // e.H D..=...D%.=.
    C0D0: 01 03 49 2C 04 4B E5 01 80 49 3A 04 03 01 00 02  // ..I,.K...I:.....
    C0E0: 02 B1 02 01 52 41 02 02 02 00 0D 65 5F 49 40 4A  // ....RA.....e_I@J
    C0F0: 65 5F 49 20 44 3F 04 07 65 5F 49 BF 56 00 40 03  // e_I D?..e_I.V.@.
    C100: 21 40 01 33 25 40 14 03 0A 48 40 0D 25 60 01 01  // !@.3%@...H@.%`..
    C110: 51 01 4B E5 01 02 49 91 04 3A 00 00 3D 25 02 04  // Q.K...I..:..=%..
    C120: 46 91 04 02 25 03 02 02 E1 03 02 02 61 03 01 02  // F...%.......a...
    C130: B9 03 01 08 A5 03 04 0E B1 03 02 02 01 02 00 52  // ...............R
    C140: 2E 3A 00 00 5B 02 25 01 0B 43 69 04 7A 2C 00 00  // .:..[.%..Ci.z,..
    C150: 00 A0 00 40 51 E0 51 80 52 20 53 40 42 0F 00 40  // ...@Q.Q.R S@B..@
    C160: 42 0F 00 40 42 0F 00 40 42 0F 00 A1 83 64 00 24  // B..@B..@B....d.$
    C170: 83 32 00 A3 76 19 00 A3 76 0C 00 00 87 01 02 01  // .2..v...v.......
    C180: 00 00 37 00 00 3D 65 00 07 44 BC 00 56 00 40 20  // ..7..=e..D..V.@ 
    C190: 25 00 03 03 0A 48 40 3D 65 00 01 44 BB 00 56 08  // %....H@=e..D..V.
    C1A0: 48 03 21 48 00 01 0D FA 02 02 00 52 14 01 05 8D  // H.!H.......R....
    C1B0: 1A 00 00 40 00 01 25 BE 1B 02 01 A5 CC 1A C0 01  // ...@..%.........
    C1C0: 0D 91 1A 45 01 5C 05 DA 1A F0 FF FF FF 02 00 00  // ...E.\..........
    C1D0: 00 07 25 03 1B FB 0D 25 7D 1A 01 01 05 34 1B 01  // ..%....%}....4..
    C1E0: 00 00 00 5C 05 36 1B EE FE 00 00 11 01 FF 7F 01  // ...\.6..........
    C1F0: 25 3A 1B 11 5C 05 32 1B F8 F8 F8 FF 00 00 00 00  // %:..\.2.........
    C200: 01 0D 33 1B FF 7F 01 05 B3 1B 07 40 00 00 0D A5  // ..3........@....
    C210: B6 1B 01 01 05 31 1B 00 08 00 04 01 0D 86 1B 04  // .....1..........
    C220: 00 01 0D E7 1B 01 00 5C 05 00 1B FF FF FD FF 00  // .......\........
    C230: 00 02 00 3A 00 00 5B 5B 5C 05 F6 02 FF 00 FE 9F  // ...:..[[\.......
    C240: 04 FC 00 20 01 05 F9 02 10 27 02 00 01 05 14 03  // ... .....'......
    C250: 00 08 00 20 01 05 0C 03 00 90 00 10 01 25 09 01  // ... .........%..
    C260: 01 01 05 3B 01 64 02 12 00 01 05 30 01 A0 86 11  // ...;.d.....0....
    C270: 00 01 E5 09 17 64 01 05 22 17 00 00 9B 02 01 05  // .....d..".......
    C280: 06 17 21 84 20 00 01 8D E5 17 64 00 01 25 E4 17  // ..!. .....d..%..
    C290: 01 01 05 31 01 3C 00 01 08 5C 65 D4 00 FC 02 01  // ...1.<...\e.....
    C2A0: 0D FC 00 00 01 01 05 2F 48 00 00 00 00 01 05 04  // ......./H.......
    C2B0: 48 00 00 00 00 01 05 3A 48 0F 00 00 00 0D E5 CB  // H......:H.......
    C2C0: 05 10 01 05 F8 16 00 00 00 30 01 25 32 01 00 55  // .........0.%2..U
    C2D0: 00 00 52 4E 02 25 00 07 52 33 02 05 00 00 07 00  // ..RN.%..R3......
    C2E0: 00 52 4D 2C 25 00 01 3D 25 00 06 45 65 01 66 16  // .RM,%..=%..Ee.f.
    C2F0: 03 0C 41 04 00 4C 0D 41 02 00 44 B7 00 0D A5 C9  // ..A..L.A..D.....
    C300: 05 04 5B 00 07 00 01 01 00 00 5B 00 07 00 01 01  // ..[.......[.....
    C310: 00 00 5B 00 2D 03 01 01 08 00 37 00 00 01 05 82  // ..[.-.....7.....
    C320: 00 00 00 20 C0 07 A5 83 00 FC 01 05 82 00 2C 01  // ... ..........,.
    C330: 50 C0 37 05 00 01 0D 2C 01 06 02 01 05 A4 01 09  // P.7....,........
    C340: 00 40 00 01 05 A0 01 03 00 00 00 01 0D B0 01 02  // .@..............
    C350: 04 01 E5 98 01 00 4A 25 00 00 01 49 E6 00 5C 25  // ......J%...I..\%
    C360: 0C 00 80 64 5C 25 10 00 80 64 5C 25 14 00 80 64  // ...d\%...d\%...d
    C370: 5C 25 18 00 80 64 5C 25 1C 00 80 64 5C 25 24 00  // \%...d\%...d\%$.
    C380: 80 37 5C 25 28 00 80 64 0D 25 2C 00 01 0D 25 20  // .7\%(..d.%,...% 
    C390: 00 01 0D 25 00 00 01 01 05 D8 01 B8 29 E8 00 01  // ...%........)...
    C3A0: 05 DC 01 B8 29 E8 00 01 05 E0 01 B8 29 E8 00 01  // ....).......)...
    C3B0: 05 E4 01 B8 29 E8 00 01 E5 14 02 64 01 05 74 01  // ....)......d..t.
    C3C0: 00 00 24 00 37 00 00 01 05 82 00 14 00 00 C0 0D  // ..$.7...........
    C3D0: 65 83 00 01 51 FA 01 05 82 00 00 00 00 C0 0D 25  // e...Q..........%
    C3E0: 83 00 01 01 05 82 00 70 01 50 C0 37 05 00 54 00  // .......p.P.7..T.
    C3F0: 18 01 01 05 A8 01 20 40 00 00 01 E5 60 02 64 01  // ...... @....`.d.
    C400: E5 DC 02 64 01 25 44 03 00 37 00 00 07 A5 97 01  // ...d.%D..7......
    C410: F7 54 00 92 01 01 05 82 00 78 03 20 C0 01 0D 83  // .T.......x. ....
    C420: 00 19 00 01 05 82 00 00 00 60 C0 5C 05 83 00 FD  // .........`.\....
    C430: FF FF FF 02 00 00 00 01 05 82 00 10 00 00 C0 01  // ................
    C440: 05 83 00 02 00 80 2A 01 05 82 00 70 03 00 80 3C  // ......*....p...<
    C450: 05 83 00 00 00 02 00 46 01 03 01 05 82 00 60 03  // .......F......`.
    C460: 20 C0 37 05 00 5C 05 60 03 1C 01 08 F0 22 A4 A2  //  .7..\.`....."..
    C470: 00 5C 05 64 03 FF FF 00 FC 00 00 81 00 5C 05 6C  // .\.d.........\.l
    C480: 03 1C 01 00 F0 22 A4 A2 00 5C 05 70 03 FF FF 00  // ....."...\.p....
    C490: FC 00 00 81 00 5C 05 50 03 87 00 7C 00 19 52 9D  // .....\.P...|..R.
    C4A0: 7F 5C 05 54 03 FF 0F 80 FF 08 20 01 00 5C 05 E4  // .\.T...... ..\..
    C4B0: 01 BF FF FF DF BF FF 01 20 5C 05 84 00 FF FD FF  // ........ \......
    C4C0: FF FF 7D A0 00 37 00 00 01 05 82 00 04 00 30 C0  // ..}..7........0.
    C4D0: 37 05 00 01 05 04 00 02 00 91 06 01 05 0C 00 6E  // 7..............n
    C4E0: 6A 00 08 01 05 10 00 01 00 40 08 37 00 00 02 05  // j........@.7....
    C4F0: 00 44 00 03 05 52 45 03 01 00 00 02 05 00 44 00  // .D...RE.......D.
    C500: 18 0C 52 45 01 05 82 00 04 00 30 C0 37 05 00 3E  // ..RE......0.7..>
    C510: 0D 00 0A 00 44 39 02 3D 0D 00 38 02 44 26 02 3D  // ....D9.=..8.D&.=
    C520: 0D 00 45 01 44 26 02 01 05 1C 00 4D 00 00 AA 01  // ..E.D&.....M....
    C530: 05 20 00 DA A7 6C 31 43 49 02 01 05 1C 00 4D 00  // . ...l1CI.....M.
    C540: 80 B1 01 05 20 00 EC A7 64 31 43 49 02 01 05 1C  // .... ...d1CI....
    C550: 00 4D 00 80 B1 01 05 20 00 EC A7 A8 31 01 05 24  // .M..... ....1..$
    C560: 00 00 21 00 00 01 05 28 00 FF FF FF FF 01 05 64  // ..!....(.......d
    C570: 00 96 43 81 01 01 05 68 00 87 25 09 40 01 05 6C  // ..C....h..%.@..l
    C580: 00 35 14 BF 02 01 05 70 00 01 80 00 00 37 00 00  // .5.....p.....7..
    C590: 03 05 00 24 00 30 C0 03 05 01 44 00 30 C0 01 05  // ...$.0....D.0...
    C5A0: 82 00 80 00 30 C0 03 38 40 83 00 4C 25 40 04 49  // ....0..8@..L%@.I
    C5B0: F9 02 01 02 82 00 00 4A 25 83 00 01 49 F9 02 0D  // .......J%...I...
    C5C0: 65 83 00 04 66 FF 2D 0D 42 05 03 56 00 41 01 02  // e...f.-.B..V.A..
    C5D0: 82 00 01 4A 25 83 00 01 49 BA 02 01 02 82 00 01  // ...J%...I.......
    C5E0: 01 04 83 00 00 00 2D 0D 42 04 00 2D 25 41 04 3E  // ......-.B..-%A.>
    C5F0: 25 41 28 45 BA 02 01 02 82 00 01 4A 25 83 00 01  // %A(E.......J%...
    C600: 49 E2 02 01 02 82 00 00 07 65 83 00 FB 01 05 BD  // I........e......
    C610: 00 00 1F 00 05 5B 7A 28 00 25 00 00 00 49 20 20  // .....[z(.%...I  
    C620: 00 4D 60 46 00 6D 40 20 00 71 80 40 00 75 00 00  // .M`F.m@ .q.@.u..
    C630: 00 79 00 00 00 7D 00 68 00 01 40 0F 00 0A 00 00  // .y...}.h..@.....
    C640: 00 00 52 00 01 01 00 00 37 00 00 52 3E 03 0C 41  // ..R.....7..R>..A
    C650: 14 00 01 0A 0A 15 41 33 0D 41 01 00 1B 0D 41 04  // ......A3.A....A.
    C660: 15 05 41 10 2D 05 41 00 F4 00 F4 01 02 09 08 41  // ..A.-.A........A
    C670: 33 8D 41 00 F4 1B 1D 41 07 01 1A 06 00 41 01 05  // 3.A....A.....A..
    C680: 01 0B 00 00 00 F4 01 25 C9 00 F4 01 05 C4 00 00  // .......%........
    C690: 00 00 00 5B 11 01 01 01 00 04 37 00 00 03 F9 46  // ...[......7....F
    C6A0: 00 08 E5 00 7F 03 0A 41 42 2D 0D 41 04 00 03 8C  // .......AB-.A....
    C6B0: 41 02 00 2D 0C 42 00 00 2D 0D 42 04 00 56 30 46  // A..-.B..-.B..V0F
    C6C0: 03 04 40 00 00 3E 05 40 00 00 00 00 44 49 00 3D  // ..@..>.@....DI.=
    C6D0: FA 00 40 44 50 00 3E A5 46 01 49 5B 00 33 1A 42  // ..@DP.>.F.I[.3.B
    C6E0: 41 43 62 00 03 A5 46 01 3D 02 00 40 47 62 00 2D  // ACb...F.=..@Gb.-
    C6F0: 1A 42 41 43 2C 00 4C E5 46 80 44 6A 00 5B 03 8A  // .BAC,.L.F.Dj.[..
    C700: 41 42 56 00 40 03 0A 42 41 03 8C 40 00 00 3E 8D  // ABV.@..BA..@..>.
    C710: 40 FF FF 44 10 01 03 24 42 02 00 03 22 46 42 09  // @..D...$B..."FB.
    C720: 25 42 3F 3E 25 42 05 49 A6 00 03 1A 40 40 03 0D  // %B?>%B.I....@@..
    C730: 42 04 00 2D 1A 42 41 43 E1 00 3E 25 42 06 49 CD  // B..-.BAC..>%B.I.
    C740: 00 33 0D 41 03 00 56 08 42 2D 0D 40 01 00 3E 1A  // .3.A..V.B-.@..>.
    C750: 40 40 47 9F 00 2D 1A 42 41 2D 0D 41 03 00 43 04  // @@G..-.BA-.A..C.
    C760: 01 03 1A 40 40 09 0D 42 1F 00 2D 1A 42 41 4C 25  // ...@@..B..-.BAL%
    C770: 46 80 49 04 01 56 18 40 4C 25 46 40 49 F9 00 01  // F.I..V.@L%F@I...
    C780: 02 00 00 40 01 04 01 00 00 00 43 04 01 01 02 91  // ...@......C.....
    C790: 0A 40 01 04 92 0A 00 00 2D 0D 41 03 00 03 8A 41  // .@......-.A....A
    C7A0: 42 43 71 00 5B 00 21 00 02 01 00 04 37 00 00 01  // BCq.[.!.....7...
    C7B0: 01 A4 00 01 01 01 94 00 00 3C 25 95 00 01 49 13  // .........<%...I.
    C7C0: 00 02 00 01 A4 00 5B 00 8E 00 01 02 00 04 66 FF  // ......[.......f.
    C7D0: 56 08 47 2D 0D 42 5C 00 03 21 47 00 09 25 47 F0  // V.G-.B\..!G..%G.
    C7E0: 42 22 47 63 00 43 00 63 80 36 00 63 60 3E 00 63  // B"Gc.C.c.6.c`>.c
    C7F0: 20 2E 00 5A 5A 5B 2D 0D 42 26 00 43 43 00 2D 0D  //  ..ZZ[-.B&.CC.-.
    C800: 42 0C 00 43 43 00 2D 0D 42 18 00 03 21 47 00 09  // B..CC.-.B...!G..
    C810: 25 47 07 2D 0A 42 47 2D 0A 42 47 03 0C 48 00 00  // %G.-.BG-.BG..H..
    C820: 5B 7A 32 00 00 00 00 02 00 04 00 26 00 28 00 2A  // [z2........&.(.*
    C830: 00 00 02 00 2C 00 2D 00 2E 00 2F 00 00 00 00 01  // ....,.-.../.....
    C840: 00 02 00 03 00 04 00 05 00 0A 00 00 A0 00 40 51  // ..............@Q
    C850: E0 51 80 52 20 53 BF 02 02 02 1C 04 20 05 01 64  // .Q.R S...... ..d
    C860: 00 00 00 03 02 02 40 66 1F 02 04 01 0C 00 52 45  // ......@f......RE
    C870: 08 05 01 FF 03 00 00 3D 0D 01 00 00 49 2F 00 02  // .......=....I/..
    C880: 04 00 28 00 5B 02 04 01 1C 00 52 45 08 05 01 FF  // ..(.[.....RE....
    C890: 00 00 00 20 05 01 A0 86 01 00 7C 04 40 20 00 7E  // ... ......|.@ .~
    C8A0: 05 40 FF 00 00 00 03 02 01 40 03 04 40 24 00 21  // .@.......@..@$.!
    C8B0: 05 40 A0 86 01 00 2D 02 01 40 02 E5 00 01 56 00  // .@....-..@....V.
    C8C0: 03 02 0D 03 02 00 56 00 04 7C 04 02 3C 00 7E 05  // ......V..|..<.~.
    C8D0: 40 10 27 00 00 02 02 01 40 02 04 02 4C 00 02 A4  // @.'.....@...L...
    C8E0: 03 56 00 02 E4 03 5A 00 52 37 03 01 05 01 03 71  // .V....Z.R7.....q
    C8F0: 03 03 03 04 40 64 00 21 05 40 A0 86 01 00 02 02  // ....@d.!.@......
    C900: 01 40 55 18 03 02 04 02 50 00 02 E4 03 5B 00 52  // .@U.....P....[.R
    C910: 37 7C 04 02 40 00 7E 05 40 10 27 00 00 02 02 02  // 7|..@.~.@.'.....
    C920: 40 02 E4 03 57 00 52 37 02 E5 03 01 02 02 02 01  // @...W.R7........
    C930: 52 37 03 01 06 01 03 B1 03 03 7C 05 06 A0 86 01  // R7........|.....
    C940: 00 7E 02 40 05 03 02 03 40 03 02 05 40 43 FA 00  // .~.@....@...@C..
    C950: 3D E5 00 00 44 66 02 3E 04 03 04 00 47 21 01 03  // =...Df.>....G!..
    C960: 02 03 05 3E 04 03 04 00 47 21 01 03 04 03 04 00  // ...>....G!......
    C970: 2D 05 03 71 02 00 00 03 04 40 7C 00 3E 05 40 00  // -..q.....@|.>.@.
    C980: 00 00 00 44 D9 01 33 04 03 7C 00 7C 02 03 03 7E  // ...D..3..|.|...~
    C990: 05 40 A0 86 01 00 03 02 46 40 02 04 01 50 00 03  // .@......F@...P..
    C9A0: 04 40 64 00 21 05 40 A0 86 01 00 02 02 02 40 02  // .@d.!.@.......@.
    C9B0: 05 03 02 00 00 00 02 A4 03 5B 00 52 37 7C 04 03  // .........[.R7|..
    C9C0: 4C 00 7E 05 40 A0 86 01 00 02 02 02 40 02 E4 03  // L.~.@.......@...
    C9D0: 5A 00 52 37 02 02 02 01 02 E5 03 01 52 37 03 01  // Z.R7........R7..
    C9E0: 04 01 02 04 01 40 00 02 A4 03 57 00 7C 04 03 3C  // .....@....W.|..<
    C9F0: 00 7E 05 40 A0 86 01 00 02 02 02 40 02 E4 03 56  // .~.@.......@...V
    CA00: 00 52 37 7C 05 04 10 27 00 00 7E 01 40 01 03 02  // .R7|...'..~.@...
    CA10: 04 40 03 02 05 02 3E 02 05 04 45 CE 01 33 02 05  // .@....>...E..3..
    CA20: 04 43 E0 01 33 02 04 05 03 02 05 04 43 E0 01 03  // .C..3.......C...
    CA30: 02 04 02 56 00 05 7C 04 02 74 00 7E 05 40 10 27  // ...V..|..t.~.@.'
    CA40: 00 00 03 02 04 40 7C 02 40 40 02 02 01 40 02 02  // .....@|.@@...@..
    CA50: 02 41 7C 04 02 78 00 7E 05 40 10 27 00 00 7C 02  // .A|..x.~.@.'..|.
    CA60: 40 40 02 25 03 01 52 37 7C 02 05 05 52 37 02 25  // @@.%..R7|...R7.%
    CA70: 03 03 52 37 03 04 40 68 00 21 05 40 0A 00 00 00  // ..R7..@h.!.@....
    CA80: 2C 02 01 40 7C 04 02 6C 00 7E 05 40 10 27 00 00  // ,..@|..l.~.@.'..
    CA90: 2C 02 01 40 7C 04 02 70 00 7E 05 40 10 27 00 00  // ,..@|..p.~.@.'..
    CAA0: 2C 02 01 40 26 05 01 64 00 00 00 21 05 40 64 00  // ,..@&..d...!.@d.
    CAB0: 00 00 2D 02 02 40 55 38 00 43 68 00 2D 05 05 70  // ..-..@U8.Ch.-..p
    CAC0: 02 00 00 27 05 05 71 02 00 00 21 05 40 71 02 00  // ...'..q...!.@q..
    CAD0: 00 3E 04 40 04 00 47 89 02 02 04 00 2C 00 5B 56  // .>.@..G.....,.[V
    CAE0: 00 00 03 31 00 00 33 25 00 01 02 02 00 40 03 04  // ...1..3%.....@..
    CAF0: 46 08 00 03 04 40 80 00 15 25 00 02 2D 0A 42 00  // F....@...%..-.B.
    CB00: 21 04 40 84 00 2D 02 46 40 3D 02 00 46 48 BE 02  // !.@..-.F@=..FH..
    CB10: 02 02 00 46 5B 00 78 00 01 01 00 00 37 00 00 52  // ...F[.x.....7..R
    CB20: 14 0D A5 51 1B 01 54 20 54 1B 07 25 44 1B FE 54  // ...Q..T T..%D..T
    CB30: 20 45 1B 42 29 00 63 00 31 00 63 01 39 00 63 02  //  E.B).c.1.c.9.c.
    CB40: 4D 00 5A 5A 43 70 00 01 25 45 1B 02 43 3E 00 01  // M.ZZCp..%E..C>..
    CB50: 25 45 1B 01 54 20 42 1B 54 00 43 1B 54 00 47 1B  // %E..T B.T.C.T.G.
    CB60: 43 70 00 01 0D 43 1B 01 01 01 05 47 1B 01 00 01  // Cp...C.....G....
    CB70: 00 0D 65 48 1B 01 0D 65 4B 1B 01 01 0D 53 1B 10  // ..eH...eK....S..
    CB80: 10 01 25 42 1B 01 54 30 51 1B 3A 00 00 5B 74 00  // ..%B..T0Q.:..[t.
    CB90: 01 01 00 00 37 00 00 4A A5 CB 05 01 44 15 00 02  // ....7..J....D...
    CBA0: 65 00 01 0E 25 00 80 52 14 03 00 46 CC 00 08 25  // e...%..R...F...%
    CBB0: 00 0F 52 14 54 30 9D 1B 3C 69 9D 1B 00 44 65 00  // ..R.T0..<i...De.
    CBC0: 01 69 9D 1B 00 3D 65 00 00 44 65 00 4A A5 9C 1B  // .i...=e..De.J...
    CBD0: 01 44 65 00 4C 25 46 01 44 69 00 4A 25 A3 1B 01  // .De.L%F.Di.J%...
    CBE0: 49 4D 00 4A 25 A3 1B 01 44 55 00 4A 25 A3 1B 01  // IM.J%...DU.J%...
    CBF0: 49 5D 00 3A 00 00 5B 4A 25 9D 1B 01 44 69 00 43  // I].:..[J%...Di.C
    CC00: 65 00 3E 00 01 01 00 00 37 00 00 52 14 3D 65 00  // e.>.....7..R.=e.
    CC10: 01 44 30 00 0D 65 9C 1B 03 07 25 9C 1B FE 4A A5  // .D0..e....%...J.
    CC20: 9C 1B 01 49 1C 00 07 E5 00 1B 7F 54 20 A9 1B 43  // ...I.......T ..C
    CC30: 3A 00 0D E5 00 1B 80 0D 25 9C 1B 01 3A 00 00 5B  // :.......%...:..[
    CC40: 22 00 01 01 04 04 03 39 00 00 55 38 00 20 02 00  // "......9..U8. ..
    CC50: 00 03 04 41 00 00 56 38 41 27 02 40 41 02 E2 00  // ...A..V8A'.@A...
    CC60: 40 5B 19 00 01 01 00 08 37 00 00 52 14 01 01 5E  // @[......7..R...^
    CC70: 1B 00 01 01 5F 1B 01 3A 00 00 5B 00 80 00 02 01  // ...._..:..[.....
    CC80: 00 00 56 00 40 03 39 40 00 55 38 00 66 FF 2D 0D  // ..V.@.9@.U8.f.-.
    CC90: 42 50 00 3E 0C 40 02 00 47 27 00 2D 0D 42 08 00  // BP.>.@..G'.-.B..
    CCA0: 43 17 00 33 0C 40 04 00 21 0C 40 06 00 2D 0C 40  // C..3.@..!.@..-.@
    CCB0: 00 00 56 18 40 03 02 46 40 7B 05 00 40 42 0F 00  // ..V.@..F@{..@B..
    CCC0: 7E 02 40 46 02 02 00 40 5B 7A 30 00 64 00 00 00  // ~.@F...@[z0.d...
    CCD0: 00 00 00 00 FF FF 07 00 01 00 00 00 C8 00 3F 00  // ..............?.
    CCE0: 08 00 19 00 40 06 5F 00 40 00 32 00 80 0C 7E 00  // ....@._.@.2...~.
    CCF0: 60 00 64 00 00 32 7F 00 7F 00 64 00 C6 00 01 03  // `.d..2....d.....
    CD00: 04 00 37 00 00 56 00 46 56 00 00 03 21 00 00 55  // ..7..V.FV...!..U
    CD10: 20 00 3D 65 00 03 44 2C 00 3D 65 00 0D 46 BB 00  //  .=e..D,.=e..F..
    CD20: 02 29 00 00 32 25 00 08 0E 25 00 60 52 14 5C 22  // .)..2%...%.`R.\"
    CD30: 00 4A F8 00 02 22 00 00 52 14 03 08 41 C0 1A 09  // .J..."..R...A...
    CD40: 0D 41 03 00 66 FF 2D 0D 42 C2 00 2D 0A 42 41 03  // .A..f.-.B..-.BA.
    CD50: 24 00 00 00 3D E2 00 00 48 A7 00 3E 25 00 04 44  // $...=...H..>%..D
    CD60: 76 00 03 22 46 00 33 25 46 01 15 25 46 04 0F 25  // v.."F.3%F..%F..%
    CD70: 46 01 33 39 00 00 3E 25 00 01 44 93 00 3E 25 00  // F.39..>%..D..>%.
    CD80: 02 44 8C 00 03 25 46 21 03 65 00 2F 43 97 00 03  // .D...%F!.e./C...
    CD90: 65 00 13 03 79 46 00 33 65 46 01 15 2D 46 03 0F  // e...yF.3eF..-F..
    CDA0: 65 46 01 52 14 01 02 F2 1B 46 01 52 EE 1B 00 54  // eF.R.....F.R...T
    CDB0: 00 F9 1B 54 00 ED 1B 3A 00 00 5B 7A 04 00 03 02  // ...T...:..[z....
    CDC0: 01 04 AF 01 01 04 00 08 37 00 00 3D 65 02 01 49  // ........7..=e..I
    CDD0: 44 01 4B A5 02 03 49 5D 00 02 05 00 00 03 00 05  // D.K...I]........
    CDE0: 02 05 01 00 05 02 00 3C 21 FC 00 02 49 57 00 01  // .......<!...IW..
    CDF0: 8D C0 00 00 02 51 02 01 05 C6 00 00 00 10 00 01  // .....Q..........
    CE00: 05 C8 00 00 00 50 00 01 0D C3 00 02 00 54 20 CA  // .....P.......T .
    CE10: 00 01 05 C2 00 00 01 00 00 56 20 40 43 83 00 0E  // .........V @C...
    CE20: 25 02 80 52 14 54 00 CC 00 56 08 48 08 25 02 07  // %..R.T...V.H.%..
    CE30: 0D 25 CA 00 01 01 25 C2 00 01 54 00 C6 00 54 00  // .%....%...T...T.
    CE40: C8 00 56 20 40 3D A5 01 00 49 8F 00 0D 25 C2 00  // ..V @=...I...%..
    CE50: 10 07 65 D0 05 FE 3D A5 01 01 47 A0 00 0D 65 D0  // ..e...=...G...e.
    CE60: 05 01 03 A0 40 C9 00 03 00 46 C4 00 03 02 41 46  // ....@....F....AF
    CE70: 2D 00 46 C6 00 2D 00 41 C8 00 52 14 01 32 07 1A  // -.F..-.A..R..2..
    CE80: 40 01 32 08 1A 40 01 02 04 1A 46 01 02 05 1A 41  // @.2..@....F....A
    CE90: 54 30 C1 1A 54 00 5C 1B 01 01 5D 1B 00 54 08 09  // T0..T.\...]..T..
    CEA0: 1A 54 08 0A 1A 54 08 0B 1A 54 08 0C 1A 01 09 0E  // .T...T...T......
    CEB0: 1A 00 01 19 0D 1A 00 5C 19 01 1A FC F8 01 5C A5  // .......\......\.
    CEC0: 01 1A 0F 10 01 09 06 1A 01 01 25 00 1A 01 0D 25  // ..........%....%
    CED0: B3 1B 04 5C 62 B3 1B FE 40 54 20 35 1A 54 20 3C  // ...\b...@T 5.T <
    CEE0: 1A 54 00 CA 1B 54 00 C8 1B 54 00 CC 1B 4B A5 02  // .T...T...T...K..
    CEF0: 03 49 40 01 0E 25 02 80 52 14 01 05 CC 00 01 00  // .I@..%..R.......
    CF00: 00 00 3A 00 00 5B 52 14 3D 65 02 00 49 61 01 54  // ..:..[R.=e..Ia.T
    CF10: 20 00 1A 3A 00 00 3C 21 FC 00 02 49 60 01 54 08  //  ..:..<!...I`.T.
    CF20: C1 00 5B 3D 65 02 10 44 6E 01 01 09 06 1A 01 5B  // ..[=e..Dn......[
    CF30: 03 00 40 04 1A 09 05 40 00 00 00 FD 2D 01 40 00  // ..@....@....-.@.
    CF40: 09 0D 40 00 F0 01 02 04 1A 40 08 0D 00 FF 0F 56  // ..@......@.....V
    CF50: 00 41 03 31 41 01 74 0A 00 41 2C 09 01 00 08 25  // .A.1A.t..A,....%
    CF60: 00 FC 14 05 00 10 01 01 5C 1B 00 01 09 0D 1A 01  // ........\.......
    CF70: 5B 00 49 00 01 01 00 00 37 00 00 52 14 07 65 B6  // [.I.....7..R..e.
    CF80: 1B FE 3D 65 00 01 44 37 00 54 30 6E 1A 54 30 11  // ..=e..D7.T0n.T0.
    CF90: 1A 54 20 B5 1B 54 20 BD 1B 54 30 BD 1B 4A 25 B6  // .T ..T ..T0..J%.
    CFA0: 1B 01 49 2B 00 3A 00 00 5B 0D 25 BD 1B 01 54 00  // ..I+.:..[.%...T.
    CFB0: 9E 1B 07 25 C0 1A F4 3A 00 00 5B 00 95 00 01 03  // ...%...:..[.....
    CFC0: 00 00 37 00 00 52 14 0D 25 03 1B 04 54 20 78 1A  // ..7..R..%...T x.
    CFD0: 54 00 80 1A 3D 65 00 01 49 56 00 0D 25 7E 1A 07  // T...=e..IV..%~..
    CFE0: 01 25 7F 1A 01 51 01 4A 25 7F 1A 02 44 29 00 54  // .%...Q.J%...D).T
    CFF0: 20 7F 1A 54 08 81 1A 54 08 82 1A 54 08 83 1A 01  //  ..T...T...T....
    D000: 0D 84 1A FF FF 01 0D 85 1A FF FF 01 0D 86 1A FF  // ................
    D010: FF 5B 01 31 79 1A 00 56 00 41 03 19 41 01 3B 02  // .[.1y..V.A..A.;.
    D020: 41 3D 65 00 02 49 78 00 03 00 40 7C 1A 04 02 00  // A=e..Ix...@|....
    D030: 40 43 81 00 03 03 40 00 01 02 7C 1A 40 2D 05 46  // @C....@...|.@-.F
    D040: 04 00 00 00 2D 8D 41 01 00 3E 89 41 01 45 65 00  // ....-.A..>.A.Ee.
    D050: 5B 00 3D 00 01 01 00 04 37 00 00 56 00 40 03 38  // [.=.....7..V.@.8
    D060: 40 9A 0A 21 05 40 E2 04 00 00 02 02 00 40 03 00  // @..!.@.......@..
    D070: 40 99 0A 1B 05 40 14 09 0D 40 07 00 21 05 40 09  // @....@...@..!.@.
    D080: 3D 00 00 27 05 40 64 00 00 00 2C 02 00 40 5B 00  // =..'.@d...,..@[.
    D090: D8 00 01 01 0C 00 37 00 00 01 05 82 00 2C 00 50  // ......7......,.P
    D0A0: C0 4A 25 83 00 01 49 3B 00 02 05 00 40 7E 05 00  // .J%...I;....@~..
    D0B0: 01 05 82 00 B4 00 50 C0 02 E8 00 83 00 52 29 26  // ......P......R)&
    D0C0: 05 00 10 27 00 00 02 02 00 40 5B 03 05 00 AC 02  // ...'.....@[.....
    D0D0: 50 C0 03 05 01 8C 02 50 C0 03 05 02 78 02 50 C0  // P......P....x.P.
    D0E0: 01 05 82 00 40 03 50 C0 4A 25 83 00 01 44 75 00  // ....@.P.J%...Du.
    D0F0: 03 05 00 28 03 50 C0 03 05 01 08 03 50 C0 03 05  // ...(.P......P...
    D100: 02 F4 02 50 C0 01 02 82 00 02 4A 05 83 00 80 00  // ...P......J.....
    D110: 00 00 44 8C 00 2D 05 01 10 00 00 00 01 02 82 00  // ..D..-..........
    D120: 01 56 00 40 03 18 40 83 00 21 05 40 10 27 00 00  // .V.@..@..!.@.'..
    D130: 03 02 46 40 56 00 40 03 08 40 83 00 21 05 40 10  // ..F@V.@..@..!.@.
    D140: 27 00 00 27 05 40 00 00 01 00 2D 02 46 40 01 02  // '..'.@....-.F@..
    D150: 82 00 00 56 00 40 03 20 40 83 00 09 25 40 0F 75  // ...V.@. @...%@.u
    D160: 02 46 40 02 02 00 46 5B 53 01 02 03 00 18 37 00  // .F@...F[S.....7.
    D170: 00 66 FF 2D 0D 42 47 01 55 28 05 2D 09 42 05 2D  // .f.-.BG.U(.-.B.-
    D180: 09 42 05 03 0C 48 00 00 03 09 41 03 2D 19 41 03  // .B...H....A.-.A.
    D190: 3E 0D 41 03 00 46 3F 00 5C 05 B3 1B FB 0F F0 FF  // >.A..F?.\.......
    D1A0: 00 30 00 00 43 4B 00 5C 05 B3 1B FF 0F F0 FF 04  // .0..CK.\........
    D1B0: 40 00 00 03 09 41 00 2D 19 41 00 33 0D 41 01 00  // @....A.-.A.3.A..
    D1C0: 01 0A 80 1B 41 54 08 82 1B 01 99 82 1B 02 03 19  // ....AT..........
    D1D0: 41 00 33 09 41 02 56 18 41 03 B1 41 04 33 1A 41  // A.3.A.V.A..A.3.A
    D1E0: 41 01 8A 81 1B 41 03 19 41 00 33 09 41 02 2D 1A  // A....A..A.3.A.-.
    D1F0: 41 41 2D 09 41 00 4B 25 04 10 44 99 00 2D 09 41  // AA-.A.K%..D..-.A
    D200: 00 01 0A 81 1B 41 03 21 41 04 09 25 41 02 1B 25  // .....A.!A..%A..%
    D210: 41 01 01 22 83 1B 41 54 00 5E 1B 01 31 5E 1B 04  // A.."..AT.^..1^..
    D220: 01 B1 5E 1B 04 03 09 41 01 2D 19 41 01 33 0D 41  // ..^....A.-.A.3.A
    D230: 01 00 01 0A 87 1B 41 54 08 8E 1B 01 99 8E 1B 03  // ......AT........
    D240: 03 19 41 01 33 09 41 03 56 18 41 03 B9 41 04 33  // ..A.3.A.V.A..A.3
    D250: 1A 41 41 01 8A 8D 1B 41 03 19 41 01 33 09 41 03  // .AA....A..A.3.A.
    D260: 2D 1A 41 41 2D 09 41 01 4B 25 04 20 44 0B 01 2D  // -.AA-.A.K%. D..-
    D270: 09 41 01 01 0A 8D 1B 41 03 21 41 04 09 25 41 04  // .A.....A.!A..%A.
    D280: 1B 25 41 02 01 22 8F 1B 41 54 00 5F 1B 01 39 5F  // .%A.."..AT._..9_
    D290: 1B 04 01 B9 5F 1B 04 03 21 41 04 09 25 41 80 1B  // ...._...!A..%A..
    D2A0: 25 41 07 01 22 9E 1B 41 3A 00 00 5B 7A 0C 00 00  // %A.."..A:..[z...
    D2B0: 00 00 02 00 04 00 26 00 28 00 2A 00 BE 00 01 01  // ......&.(.*.....
    D2C0: 00 04 37 00 00 03 A1 40 00 3D A5 00 00 49 49 00  // ..7....@.=...II.
    D2D0: 66 04 03 24 40 58 00 3E 25 40 FF 49 AE 00 55 00  // f..$@X.>%@.I..U.
    D2E0: 01 02 25 01 28 52 09 02 0D 01 29 01 52 09 02 0D  // ..%.(R....).R...
    D2F0: 01 2A 02 52 09 02 0D 01 2B 03 52 09 03 B1 40 01  // .*.R....+.R...@.
    D300: 01 B1 0A 15 01 66 1C 03 64 40 10 00 56 20 40 2D  // .....f..d@..V @-
    D310: 0D 42 14 00 54 30 CD 05 3E A4 40 0A 00 49 93 00  // .B..T0..>.@..I..
    D320: 3D A5 00 00 44 AE 00 03 24 41 1C 00 03 71 41 00  // =...D...$A...qA.
    D330: 09 0D 41 0F 0F 3E 62 41 41 49 93 00 01 A2 CD 05  // ..A..>bAAI......
    D340: 40 01 64 80 0A 1C 00 3D A4 00 1C 00 44 AE 00 2D  // @.d....=....D..-
    D350: 0C 42 04 00 2D 25 40 01 3E 62 40 40 49 5C 00 01  // .B..-%@.>b@@I\..
    D360: F1 0A 15 00 0D A5 0A 15 80 5B 01 A2 CD 05 40 01  // .........[....@.
    D370: 64 80 0A 1C 00 54 18 0A 15 5B 9E 00 01 01 08 00  // d....T...[......
    D380: 37 00 00 03 08 00 28 08 56 30 00 03 05 01 03 00  // 7.....(.V0......
    D390: 00 00 52 3E 4C 0C 01 08 00 49 2D 00 15 05 01 02  // ..R>L....I-.....
    D3A0: 2D A5 00 01 43 18 00 5C 72 28 08 F8 00 03 00 40  // -...C..\r(.....@
    D3B0: 1F 0A 03 00 46 93 0A 09 25 46 03 15 25 46 03 75  // ....F...%F..%F.u
    D3C0: 02 40 46 56 38 40 03 65 40 80 1B 25 46 03 03 0A  // .@FV8@.e@..%F...
    D3D0: 48 46 03 00 41 A3 0A 56 08 48 01 0A 28 08 00 03  // HF..A..V.H..(...
    D3E0: A2 40 41 09 A5 40 07 03 32 43 40 4C 25 40 01 44  // .@A..@..2C@L%@.D
    D3F0: 7C 00 0F E2 40 44 1B 0D 40 01 1B 05 41 03 3E 65  // |...@D..@...A.>e
    D400: 40 00 49 65 00 01 7A 80 0A 40 02 BA 00 40 52 3E  // @.Ie..z..@...@R>
    D410: 02 24 00 0A 00 52 34 5B 1A 00 01 01 00 04 37 00  // .$...R4[......7.
    D420: 00 01 05 E5 09 FC FB FC FC 01 05 E6 09 FC F8 F3  // ................
    D430: FC 5B 31 02 01 01 00 08 37 00 00 0D 25 F4 16 08  // .[1.....7...%...
    D440: 07 25 62 18 FE 56 00 41 03 39 41 01 09 25 41 0F  // .%b..V.A.9A..%A.
    D450: 03 0A 40 42 66 FF 2D 0D 42 11 02 15 25 41 02 2D  // ..@Bf.-.B...%A.-
    D460: 0A 42 41 03 0C 41 00 00 01 02 00 00 41 07 A5 01  // .BA..A......A...
    D470: 00 FE 54 08 01 00 01 0C FB 16 02 00 03 0A 42 40  // ..T...........B@
    D480: 03 05 40 50 C3 00 00 56 00 41 03 21 41 00 27 02  // ..@P...V.A.!A.'.
    D490: 40 41 01 8A F7 16 40 01 25 F7 16 02 0D 25 F5 16  // @A....@.%....%..
    D4A0: 02 01 A9 F9 16 01 4B 25 01 01 49 7F 00 54 30 F9  // ......K%..I..T0.
    D4B0: 16 01 0D F9 16 00 31 2B A5 F9 16 01 4B 25 01 02  // ......1+....K%..
    D4C0: 44 96 00 2B A5 F9 16 01 56 00 41 03 71 41 01 0F  // D..+....V.A.qA..
    D4D0: E5 41 80 01 02 FA 16 41 03 69 41 00 2D A5 41 01  // .A.....A.iA.-.A.
    D4E0: 01 02 FA 16 41 4B 25 01 02 44 C6 00 56 28 41 2D  // ....AK%..D..V(A-
    D4F0: A5 41 01 01 02 FA 16 41 4B 25 01 01 44 E7 00 03  // .A.....AK%..D...
    D500: 71 41 00 2D A5 41 01 01 02 FA 16 41 03 79 41 00  // qA.-.A.....A.yA.
    D510: 2D A5 41 01 01 02 FA 16 41 0D 25 F4 16 01 03 A5  // -.A.....A.%.....
    D520: 41 01 43 BA 01 03 29 40 01 03 65 40 01 03 99 40  // A.C...)@..e@...@
    D530: 00 56 00 41 03 71 41 01 0F 65 41 01 0F E5 41 80  // .V.A.qA..eA...A.
    D540: 01 02 FA 16 41 01 A5 F9 16 04 3D 65 01 04 47 28  // ....A.....=e..G(
    D550: 01 01 0D F9 16 01 13 43 57 01 01 A2 F9 16 40 01  // .......CW.....@.
    D560: 0D F9 16 01 31 43 57 01 07 65 F9 16 EF 01 A5 F9  // ....1CW..e......
    D570: 16 03 3E 25 40 04 46 57 01 01 A2 F9 16 40 31 A5  // ..>%@.FW.....@1.
    D580: F9 16 01 5C 65 F9 16 FD 20 0D 25 F4 16 01 03 A5  // ...\e... .%.....
    D590: 41 00 43 BA 01 03 05 41 01 00 00 80 03 AA 41 40  // A.C....A......A@
    D5A0: 01 02 FA 16 41 3D 65 01 01 49 82 01 02 A8 00 FA  // ....A=e..I......
    D5B0: 16 43 F9 01 56 00 41 03 1A 41 40 3B 02 41 03 28  // .C..V.A..A@;.A.(
    D5C0: 41 FA 16 03 68 41 FA 16 03 A8 41 FA 16 03 E8 41  // A...hA....A....A
    D5D0: FA 16 04 02 00 41 56 28 40 2D 8D 40 04 00 3E 25  // .....AV(@-.@..>%
    D5E0: 40 04 47 F9 01 33 25 40 04 43 36 01 02 65 00 02  // @.G..3%@.C6..e..
    D5F0: 03 0D 41 64 00 33 0D 41 01 00 3E 0D 41 00 00 44  // ..Ad.3.A..>.A..D
    D600: F9 01 51 64 4A 25 F6 16 10 44 C3 01 4A 65 F6 16  // ..QdJ%...D..Je..
    D610: 06 49 F9 01 02 65 00 01 0D 25 F5 16 02 3E A5 41  // .I...e...%...>.A
    D620: 00 44 63 01 4B 25 01 01 44 F3 00 0D 25 F5 16 02  // .Dc.K%..D...%...
    D630: 01 25 F4 16 02 51 01 54 00 F4 16 54 00 FB 16 5B  // .%...Q.T...T...[
    D640: 7A 20 00 68 48 01 00 6C 48 03 02 70 48 05 04 74  // z .hH..lH..pH..t
    D650: 48 42 41 78 48 49 48 7C 48 4B 4A 98 48 29 28 80  // HBAxHIH|HKJ.H)(.
    D660: 48 4D 4C 00 5F 00 02 02 00 04 37 00 00 3D 65 00  // HML._.....7..=e.
    D670: 01 44 54 00 55 30 00 3D 25 00 06 46 50 00 32 25  // .DT.U0.=%..FP.2%
    D680: 00 01 20 25 00 08 56 08 48 03 22 48 40 0D A5 99  // .. %..V.H."H@...
    D690: 18 01 02 A0 00 98 18 08 A5 00 03 4A 25 98 18 02  // ...........J%...
    D6A0: 44 4A 00 5C 0D 99 18 FF FE 01 00 43 50 00 0D 0D  // DJ.\.......CP...
    D6B0: 99 18 01 01 3A 00 00 5B 0D 65 CF 05 08 0D 25 80  // ....:..[.e....%.
    D6C0: 01 01 5B 00 0A 00 01 01 00 04 55 00 00 5B 3C 00  // ..[.......U..[<.
    D6D0: 01 01 00 00 55 00 00 55 00 01 01 05 91 0A 03 00  // ....U..U........
    D6E0: 00 00 02 38 00 92 0A 02 21 01 00 08 25 00 0F 08  // ...8....!...%...
    D6F0: 25 01 F0 20 05 00 20 4E 00 00 02 02 00 40 20 05  // %.. .. N.....@ .
    D700: 01 E2 04 00 00 02 02 01 40 5B 7B 01 01 06 04 18  // ........@[{.....
    D710: 03 05 46 00 51 25 02 3D E5 00 01 49 BF 00 55 38  // ..F.Q%.=...I..U8
    D720: 00 66 08 03 24 41 04 00 2D 0D 42 08 00 55 00 02  // .f..$A..-.B..U..
    D730: 3D 04 00 00 00 47 42 00 2C A5 02 01 2D 0D 42 0C  // =....GB.,...-.B.
    D740: 00 3D A2 02 41 45 26 00 55 00 01 5B 02 24 02 05  // .=..AE&.U..[.$..
    D750: 00 02 64 02 04 00 03 01 46 00 56 00 40 03 21 40  // ..d.....F.V.@.!@
    D760: 02 6F 02 46 40 7C 05 46 00 40 00 00 7E 05 40 C4  // .o.F@|.F.@..~.@.
    D770: 09 00 00 02 02 01 40 55 00 03 55 08 05 21 05 46  // ......@U..U..!.F
    D780: D0 07 00 00 27 05 40 10 27 00 00 03 02 00 46 33  // ....'.@.'.....F3
    D790: 02 00 40 27 05 00 10 27 00 00 3E 0C 40 06 00 48  // ..@'...'..>.@..H
    D7A0: 9D 00 03 0C 40 06 00 55 00 04 02 8A 04 40 03 01  // ....@..U.....@..
    D7B0: 40 01 33 01 40 04 21 05 40 32 00 00 00 27 05 40  // @.3.@.!.@2...'.@
    D7C0: 50 C3 00 00 02 8A 05 40 5B 55 38 00 03 05 40 00  // P......@[U8...@.
    D7D0: 32 00 00 3D 05 00 00 00 00 00 44 08 01 03 02 40  // 2..=......D....@
    D7E0: 46 2D 01 40 00 33 05 40 01 00 00 00 27 01 40 00  // F-.@.3.@....'.@.
    D7F0: 3E 05 40 9C 18 00 00 47 F7 00 03 05 40 00 32 00  // >.@....G....@.2.
    D800: 00 3E 05 40 C8 00 00 00 46 08 01 03 05 40 C8 00  // .>.@....F....@..
    D810: 00 00 66 FF 2D 0D 42 5B 01 3E 0C 40 02 00 47 1F  // ..f.-.B[.>.@..G.
    D820: 01 2D 0D 42 08 00 43 0F 01 33 0C 40 00 00 2D 0C  // .-.B..C..3.@..-.
    D830: 40 06 00 33 0D 40 01 00 27 0C 40 06 00 2D 0C 40  // @..3.@..'.@..-.@
    D840: 04 00 02 E2 00 40 33 0C 40 04 00 21 0C 40 06 00  // .....@3.@..!.@..
    D850: 2D 0C 40 00 00 27 02 46 40 02 0A 00 40 02 B2 00  // -.@..'.F@...@...
    D860: 40 5B 7A 20 00 C8 00 40 06 08 00 19 00 40 06 80  // @[z ...@.....@..
    D870: 0C 40 00 32 00 80 0C 38 18 60 00 64 00 00 32 00  // .@.2...8.`.d..2.
    D880: 32 7F 00 64 00 00 07 00 02 01 00 00 5B 00 65 01  // 2..d........[.e.
    D890: 02 01 08 04 37 00 00 66 1C 2D 0C 42 06 00 3D E5  // ....7..f.-.B..=.
    D8A0: 00 02 44 4B 00 3D E5 00 03 44 F7 00 03 38 00 2F  // ..DK.=...D...8./
    D8B0: 0A 09 25 00 20 02 01 01 00 02 F0 01 CD 05 52 12  // ..%. .........R.
    D8C0: 01 08 AB 0A 81 0A 01 18 83 0A 81 0A 5C E2 2F 0A  // ............\./.
    D8D0: DF 00 5C E2 30 0A DF 00 5B 02 F0 01 CD 05 0E E5  // ..\.0...[.......
    D8E0: 01 80 52 12 02 01 01 00 02 E4 01 2C 00 52 26 01  // ..R........,.R&.
    D8F0: 39 DD 09 01 02 EC 01 2C 00 52 26 01 79 DD 09 01  // 9......,.R&.y...
    D900: 02 F4 01 2C 00 52 26 01 B9 DD 09 01 02 FC 01 2C  // ...,.R&........,
    D910: 00 52 26 01 F9 DD 09 01 02 E4 01 30 00 52 26 01  // .R&........0.R&.
    D920: 39 DE 09 01 02 EC 01 30 00 52 26 01 79 DE 09 01  // 9......0.R&.y...
    D930: 02 F4 01 30 00 52 26 01 B9 DE 09 01 02 FC 01 30  // ...0.R&........0
    D940: 00 52 26 01 F9 DE 09 01 31 05 DE 09 01 01 01 00  // .R&.....1.......
    D950: 02 E5 01 08 52 26 3D E5 01 04 46 D3 00 02 E5 01  // ....R&=...F.....
    D960: 04 3D E5 01 08 46 E1 00 32 E5 01 04 43 F0 00 1A  // .=...F..2...C...
    D970: 3D 01 01 3D E5 01 12 45 F0 00 02 E5 01 12 5C 39  // =..=...E......\9
    D980: 02 0A E0 01 5B 52 3B 03 05 00 10 00 00 00 03 05  // ....[R;.........
    D990: 01 2D 00 00 00 55 38 00 3D 01 00 01 45 30 01 03  // .-...U8.=...E0..
    D9A0: 0D 00 18 00 03 05 01 2E 00 00 00 3D 01 00 02 45  // ...........=...E
    D9B0: 30 01 03 0D 00 20 00 03 05 01 2F 00 00 00 02 01  // 0.... ..../.....
    D9C0: 01 00 02 F0 01 CD 05 0E E5 01 80 52 12 56 00 41  // ...........R.V.A
    D9D0: 01 02 91 0A 00 01 04 92 0A 10 00 2D 05 00 01 00  // ...........-....
    D9E0: 00 00 2D 25 41 01 2D 0D 42 04 00 3E 25 41 07 45  // ..-%A.-.B..>%A.E
    D9F0: 42 01 5B 00 1A 01 01 02 04 04 37 00 00 3D 25 00  // B.[.......7..=%.
    DA00: FF 49 06 01 02 20 00 80 0A 4A 25 80 0A 08 49 26  // .I... ...J%...I&
    DA10: 00 08 25 00 10 07 25 80 0A EF 01 05 32 0A 08 00  // ..%...%.....2...
    DA20: 00 00 01 05 32 0A 10 00 00 00 66 1D 03 0C 40 08  // ....2.....f...@.
    DA30: 00 2D 0C 42 0C 00 56 00 41 03 0C 41 00 00 01 02  // .-.B..V.A..A....
    DA40: 91 0A 41 01 04 92 0A 02 00 2D 0D 42 06 00 33 0D  // ..A......-.B..3.
    DA50: 40 01 00 3E 0D 40 00 00 49 45 00 66 1D 03 0C 40  // @..>.@..IE.f...@
    DA60: 0A 00 2D 0C 42 0E 00 56 00 46 03 04 41 00 00 09  // ..-.B..V.F..A...
    DA70: 05 41 FF FF 03 00 01 02 33 0A 41 03 04 41 02 00  // .A......3.A..A..
    DA80: 1B 05 41 02 09 05 41 FF FF 03 00 01 02 33 0A 41  // ..A...A......3.A
    DA90: 03 04 41 04 00 1B 05 41 04 09 05 41 FF FF 03 00  // ..A....A...A....
    DAA0: 01 02 33 0A 41 03 04 41 06 00 1B 05 41 06 09 05  // ..3.A..A....A...
    DAB0: 41 FF FF 03 00 01 02 33 0A 41 2D 0D 42 09 00 3E  // A......3.A-.B..>
    DAC0: 0D 40 04 00 47 DB 00 33 0D 40 04 00 43 76 00 01  // .@..G..3.@..Cv..
    DAD0: 05 32 0A 08 00 00 00 01 05 32 0A 04 00 00 00 01  // .2.......2......
    DAE0: 05 32 0A 01 00 00 00 51 32 50 02 4A 25 80 0A 80  // .2.....Q2P.J%...
    DAF0: 44 F7 00 5C 21 80 0A EF 00 5B 01 65 E7 0A FF 01  // D..\!....[.e....
    DB00: 21 E7 0A 00 02 05 01 04 00 00 00 52 1F 5B 8C 00  // !..........R.[..
    DB10: 01 04 00 00 03 05 40 7C 01 00 00 3D A5 00 00 44  // ......@|...=...D
    DB20: 15 00 5B 03 00 46 20 49 7C 02 40 46 7E 05 40 A0  // ..[..F I|.@F~.@.
    DB30: 86 01 00 03 00 41 23 49 09 05 41 03 00 00 00 6F  // .....A#I..A....o
    DB40: 02 40 41 7C 05 40 4E 0C 00 00 7E 05 40 40 4B 4C  // .@A|.@N...~.@@KL
    DB50: 00 3E 05 40 00 00 00 00 49 51 00 03 25 40 01 01  // .>.@....IQ..%@..
    DB60: 8A 22 49 40 7C 05 40 40 4B 4C 00 7E 05 40 4E 0C  // ."I@|.@@KL.~.@N.
    DB70: 00 00 03 00 41 23 49 09 05 41 03 00 00 00 75 02  // ....A#I..A....u.
    DB80: 40 41 03 00 46 20 49 33 02 46 40 01 02 21 49 46  // @A..F I3.F@..!IF
    DB90: 51 01 0D 65 23 49 01 51 01 5B 31 00 01 03 04 00  // Q..e#I.Q.[1.....
    DBA0: 37 00 00 55 38 00 26 05 00 E2 04 00 00 01 E2 9A  // 7..U8.&.........
    DBB0: 0A 40 21 05 41 64 00 00 00 27 05 40 09 3D 00 00  // .@!.Ad...'.@.=..
    DBC0: 15 25 40 04 5C A2 99 0A 8F 40 5B 00 10 00 01 03  // .%@.\....@[.....
    DBD0: 00 08 37 00 00 55 18 00 55 08 01 5B 10 01 01 04  // ..7..U..U..[....
    DBE0: 00 04 37 00 00 3D 65 00 08 49 23 00 02 05 01 38  // ..7..=e..I#....8
    DBF0: 00 06 0A 52 45 08 0D 01 FF 03 02 89 00 01 5B 3D  // ...RE.........[=
    DC00: 65 00 03 44 0F 01 02 01 01 00 02 65 01 07 52 50  // e..D.......e..RP
    DC10: 3D 05 02 00 00 00 00 44 0B 01 37 00 00 01 05 82  // =......D..7.....
    DC20: 00 7C 02 20 C0 01 05 82 00 94 02 20 C0 4A A5 83  // .|. ....... .J..
    DC30: 00 06 49 49 00 01 05 82 00 7C 02 20 C0 0D 65 83  // ..II.....|. ..e.
    DC40: 00 04 01 05 82 00 7C 02 20 C0 03 00 46 83 00 37  // ......|. ...F..7
    DC50: 00 00 01 05 82 00 80 02 20 C0 5E 65 46 FC 01 3D  // ........ .^eF..=
    DC60: 25 00 01 44 96 00 09 65 46 FC 01 05 82 00 84 02  // %..D...eF.......
    DC70: 20 C0 3C 0C 83 00 04 00 44 C6 00 07 0D 83 00 9F  //  .<.....D.......
    DC80: FF 51 3C 03 0C 41 04 00 4C 25 41 20 49 BE 00 0F  // .Q<..A..L%A I...
    DC90: 25 41 20 01 0A 83 00 41 51 3C 01 0C 83 00 04 00  // %A ....AQ<......
    DCA0: 51 3C 56 00 40 03 19 40 00 21 05 40 64 00 00 00  // Q<V.@..@.!.@d...
    DCB0: 03 05 41 78 5D 02 00 33 02 41 40 27 05 41 71 02  // ..Ax]..3.A@'.Aq.
    DCC0: 00 00 03 22 46 40 01 05 82 00 7C 02 20 C0 01 02  // ..."F@....|. ...
    DCD0: 83 00 46 01 05 82 00 94 02 20 C0 4A A5 83 00 02  // ..F...... .J....
    DCE0: 49 F7 00 37 00 00 5B 55 00 00 5B 5B 83 00 01 03  // I..7..[U..[[....
    DCF0: 04 00 37 00 00 3D 65 00 09 44 80 00 03 0A 00 42  // ..7..=e..D.....B
    DD00: 66 20 03 0C 41 00 00 2D 0A 41 42 2D 0D 42 04 00  // f ..A..-.AB-.B..
    DD10: 3E 0A 42 41 44 7C 00 3D 0C 00 00 00 44 3B 00 2D  // >.BAD|.=....D;.-
    DD20: 0C 42 02 00 43 24 00 02 0A 01 42 3D 65 00 03 44  // .B..C$....B=e..D
    DD30: 7B 00 3D 65 00 07 44 7B 00 03 E4 41 05 00 02 04  // {.=e..D{...A....
    DD40: 01 08 00 3E E5 41 00 44 7C 00 3D 8C 00 10 00 47  // ...>.A.D|.=....G
    DD50: 72 00 2D 0D 42 06 00 33 E5 41 01 43 57 00 02 04  // r.-.B..3.A.CW...
    DD60: 00 0C 00 03 0A 42 00 5B 55 00 01 5B 52 1B 5B 00  // .....B.[U..[R.[.
    DD70: 67 02 01 05 00 00 37 00 00 03 20 46 CF 05 0E 25  // g.....7... F...%
    DD80: 00 60 52 14 08 25 00 0F 42 29 00 63 0F 58 00 63  // .`R..%..B).c.X.c
    DD90: 11 4E 01 63 12 CC 01 63 01 24 02 63 00 4D 02 63  // .N.c...c.$.c.M.c
    DDA0: 08 18 01 63 09 F9 00 63 0A 00 01 63 13 08 01 63  // ...c...c...c...c
    DDB0: 14 10 01 63 0B 20 01 63 0C 14 02 63 0D 28 01 63  // ...c. .c...c.(.c
    DDC0: 10 41 01 5A 5A 43 F5 00 3D A5 00 02 44 E3 00 54  // .A.ZZC..=...D..T
    DDD0: 00 72 4A 3D A5 00 00 44 71 00 3D A5 00 05 49 EB  // .rJ=...Dq.=...I.
    DDE0: 00 54 08 A1 4A 3D 25 02 00 49 80 00 02 25 02 02  // .T..J=%..I...%..
    DDF0: 32 25 02 01 01 E1 A1 4A 02 4A 25 A4 4A 01 49 C6  // 2%.....J.J%.J.I.
    DE00: 00 7B 05 01 00 80 00 00 7E 05 40 8C 0A 00 00 56  // .{......~.@....V
    DE10: 00 46 03 29 46 02 27 02 40 46 07 65 A8 4A FE 01  // .F.)F.'.@F.e.J..
    DE20: 05 A9 4A 00 80 00 00 01 02 AA 4A 40 0D E5 AB 4A  // ..J.......J@...J
    DE30: 10 0D 65 00 4A 04 02 20 00 00 4A 08 25 00 07 0E  // ..e.J.. ..J.%...
    DE40: 25 00 00 52 14 14 3D 00 04 5C B9 9C 1B 8F 00 3A  // %..R..=..\.....:
    DE50: 00 00 5B 01 05 72 4A 01 00 00 00 07 E5 00 4A 2F  // ..[..rJ.......J/
    DE60: 0D 65 00 4A 04 3A 00 00 5B 54 20 B0 4A 43 F5 00  // .e.J.:..[T .JC..
    DE70: 01 25 B0 4A 01 43 F5 00 01 25 B0 4A 02 43 F5 00  // .%.J.C...%.J.C..
    DE80: 01 25 B0 4A 03 43 F5 00 07 25 A0 4A EF 43 F5 00  // .%.J.C...%.J.C..
    DE90: 0D 25 A0 4A 10 43 F5 00 0D 65 A8 4A 01 51 0A 07  // .%.J.C...e.J.Q..
    DEA0: 25 A5 4A FE 51 0A 01 0D A4 4A 01 02 51 C8 43 F5  // %.J.Q....J..Q.C.
    DEB0: 00 0D 25 B6 4A 10 01 31 A7 4A 00 43 F5 00 01 0D  // ..%.J..1.J.C....
    DEC0: 03 4A 1F 00 01 69 47 4A 02 4C 25 46 10 49 77 01  // .J...iGJ.L%F.Iw.
    DED0: 3D A5 00 03 49 77 01 4A 25 0D 4A 10 49 77 01 01  // =...Iw.J%.J.Iw..
    DEE0: A5 47 4A 02 43 7C 01 01 B1 47 4A 00 3D 25 02 00  // .GJ.C|...GJ.=%..
    DEF0: 44 91 01 32 25 02 01 14 25 02 04 5C E1 47 4A 8F  // D..2%...%..\.GJ.
    DF00: 02 3D E5 00 04 47 A0 01 0D 25 47 4A 01 43 A5 01  // .=...G...%GJ.C..
    DF10: 07 25 47 4A FE 3D A5 00 05 44 B3 01 3D A5 00 00  // .%GJ.=...D..=...
    DF20: 49 C4 01 02 A5 00 00 03 39 40 00 33 25 40 01 01  // I.......9@.3%@..
    DF30: 22 A3 4A 40 02 E0 02 48 4A 43 F5 00 02 E0 02 48  // ".J@...HJC.....H
    DF40: 4A 4B E5 02 01 44 F5 00 02 B0 00 47 4A 02 E5 00  // JK...D.....GJ...
    DF50: 04 4A 25 47 4A 01 44 ED 01 02 E5 00 08 3D A5 00  // .J%GJ.D......=..
    DF60: 02 44 FB 01 3D A5 00 03 49 04 02 54 00 48 4A 50  // .D..=...I..T.HJP
    DF70: 02 43 F5 00 02 A5 00 00 03 31 43 00 4A 62 47 4A  // .C.......1C.JbGJ
    DF80: 44 44 F5 00 54 08 A4 4A 51 C8 0D 25 A5 4A 01 51  // DD..T..JQ..%.J.Q
    DF90: 32 43 F5 00 0D 25 48 4A 01 3D A5 00 00 44 39 02  // 2C...%HJ.=...D9.
    DFA0: 01 0D 79 4A 0F 01 43 F5 00 03 39 43 00 03 02 40  // ..yJ..C...9C...@
    DFB0: 44 33 25 40 01 01 0A 79 4A 40 43 F5 00 54 00 79  // D3%@...yJ@C..T.y
    DFC0: 4A 07 25 48 4A FE 07 0D 47 4A FE 80 54 20 A0 4A  // J.%HJ...GJ..T .J
    DFD0: 54 20 B0 4A 43 F5 00 00 29 00 01 01 00 00 37 00  // T .JC...).....7.
    DFE0: 00 66 1C 2D 0D 42 14 00 03 30 40 CD 05 3E 25 40  // .f.-.B...0@..>%@
    DFF0: 00 44 28 00 33 25 40 01 2D 0C 42 04 00 43 15 00  // .D(.3%@.-.B..C..
    E000: 5B 00 46 01 01 06 00 00 37 00 00 42 29 00 63 07  // [.F.....7..B).c.
    E010: 24 01 63 01 25 00 63 00 C0 00 63 0B 27 01 63 04  // $.c.%.c...c.'.c.
    E020: 2C 01 5A 5A 43 3F 01 02 65 00 11 52 04 4B E5 02  // ,.ZZC?..e..R.K..
    E030: 01 49 20 01 02 65 00 0A 55 08 02 52 4D 3D E5 00  // .I ..e..U..RM=..
    E040: 04 47 50 00 68 25 00 01 02 25 02 01 52 4D 68 25  // .GP.h%...%..RMh%
    E050: 00 01 3D A5 00 00 49 82 00 20 05 01 64 00 00 00  // ..=...I.. ..d...
    E060: 02 05 01 14 1E 00 02 2C 21 01 00 02 01 02 00 02  // .......,!.......
    E070: 02 00 40 52 0C 26 05 00 64 00 00 00 02 02 01 40  // ..@R.&..d......@
    E080: 02 01 00 02 02 65 00 01 55 08 02 52 4D 3D E5 00  // .....e..U..RM=..
    E090: 04 47 A0 00 68 25 00 01 02 25 02 01 52 4D 68 25  // .G..h%...%..RMh%
    E0A0: 00 01 51 05 02 65 00 01 52 04 51 0A 02 65 00 09  // ..Q..e..R.Q..e..
    E0B0: 52 4D 3D E5 00 04 47 20 01 68 25 00 01 52 4D 43  // RM=...G .h%..RMC
    E0C0: 20 01 02 65 00 12 52 04 4B E5 02 01 44 20 01 02  //  ..e..R.K...D ..
    E0D0: 65 00 08 52 4D 3D E5 00 04 47 E4 00 68 25 00 01  // e..RM=...G..h%..
    E0E0: 52 4D 68 25 00 01 02 65 00 00 52 04 02 65 00 00  // RMh%...e..R..e..
    E0F0: 52 4D 3D E5 00 04 47 01 01 68 25 00 01 52 4D 68  // RM=...G..h%..RMh
    E100: 25 00 01 3D A5 00 00 49 20 01 02 01 02 00 02 05  // %..=...I .......
    E110: 01 14 00 00 00 2C 21 01 00 55 00 00 52 0C 02 01  // .....,!..U..R...
    E120: 00 02 3A 00 00 5B 43 20 01 52 4D 43 20 01 66 06  // ..:..[C .RMC .f.
    E130: 02 29 00 00 02 68 00 CB 05 02 8C 00 32 00 52 33  // .)...h......2.R3
    E140: 5B 02 29 00 00 52 33 5B 65 03 02 01 00 00 37 00  // [.)..R3[e.....7.
    E150: 00 0E 25 00 20 52 14 08 25 00 0F 42 29 00 63 07  // ..%. R..%..B).c.
    E160: 35 00 63 0A 3D 00 63 01 21 01 63 00 7B 01 63 09  // 5.c.=.c.!.c.{.c.
    E170: BB 01 63 08 E9 01 63 0B 01 02 5A 5A 5B 0D 65 C4  // ..c...c...ZZ[.e.
    E180: 48 08 43 D0 02 03 0A 46 48 66 FF 2D 0D 42 47 03  // H.C....FHf.-.BG.
    E190: 56 00 40 20 25 00 05 2D 0A 42 40 20 25 00 02 03  // V.@ %..-.B@ %...
    E1A0: 0A 48 40 01 04 06 48 00 00 01 64 05 48 04 00 07  // .H@...H...d.H...
    E1B0: E5 05 48 FC 07 A5 05 48 8F 03 0A 48 46 56 00 41  // ..H....H...HFV.A
    E1C0: 3D E5 00 04 47 96 00 03 05 41 00 80 01 01 4B 25  // =...G....A....K%
    E1D0: 02 01 44 96 00 09 4D 41 7F FF 03 E5 41 02 5C FA  // ..D...MA....A.\.
    E1E0: D3 48 FC 41 5C 52 C5 48 7F FE 41 3D A5 00 00 49  // .H.A\R.H..A=...I
    E1F0: CC 00 07 A5 C1 48 7F 66 FF 2D 0D 42 01 03 2D 0D  // .....H.f.-.B..-.
    E200: 42 06 00 56 00 41 3D A5 02 14 49 6C 02 03 25 41  // B..V.A=...Il..%A
    E210: 20 43 6C 02 0D A5 C1 48 80 66 FF 2D 0D 42 D9 02  //  Cl....H.f.-.B..
    E220: 03 04 40 00 00 3E 05 40 00 00 00 00 44 D0 02 03  // ..@..>.@....D...
    E230: 21 43 00 03 E2 41 44 4C E4 41 05 00 44 07 01 3D  // !C...ADL.A..D..=
    E240: A4 00 04 00 49 07 01 3D 04 01 00 00 47 0F 01 2D  // ....I..=....G..-
    E250: 0D 42 0C 00 43 D8 00 03 04 40 06 00 03 24 41 0A  // .B..C....@...$A.
    E260: 00 03 64 41 0B 00 43 75 02 07 65 C4 48 F7 03 0A  // ..dA..Cu..e.H...
    E270: 46 48 56 00 41 3D E5 00 04 47 3C 01 07 25 E2 48  // FHV.A=...G<..%.H
    E280: F9 43 42 01 5C 25 E2 48 F9 02 4A 65 E0 48 01 44  // .CB.\%.H..Je.H.D
    E290: 42 01 07 25 E0 48 F8 4A 65 E0 48 01 44 4F 01 2D  // B..%.H.Je.H.DO.-
    E2A0: E5 41 01 2D 0D 48 10 00 3E E5 41 04 45 2D 01 03  // .A.-.H..>.A.E-..
    E2B0: 0A 48 46 0D 25 D1 48 02 4A 25 D1 48 04 44 70 01  // .HF.%.H.J%.H.Dp.
    E2C0: 43 D0 02 07 25 D1 48 FD 4A 25 D1 48 04 49 80 01  // C...%.H.J%.H.I..
    E2D0: 0D 65 C4 48 08 56 00 41 4A 65 E0 48 01 44 90 01  // .e.H.V.AJe.H.D..
    E2E0: 5C 25 E0 48 F8 04 51 02 4A 65 E0 48 01 44 A0 01  // \%.H..Q.Je.H.D..
    E2F0: 2D A5 41 01 2D 0D 48 10 00 3E A5 41 04 45 90 01  // -.A.-.H..>.A.E..
    E300: 43 D0 02 03 0A 46 48 56 08 48 20 25 00 02 03 22  // C....FHV.H %..."
    E310: 48 40 0D 25 05 48 01 0D E5 06 48 10 03 0A 48 46  // H@.%.H....H...HF
    E320: 0D A5 D3 48 01 51 14 0D 25 D3 48 01 51 14 43 D0  // ...H.Q..%.H.Q.C.
    E330: 02 07 A5 D3 48 FE 56 00 40 20 25 00 02 03 0A 48  // ....H.V.@ %....H
    E340: 40 07 E5 06 48 EF 43 D0 02 66 FF 2D 0D 42 3C 03  // @...H.C..f.-.B<.
    E350: 03 0C 41 00 00 3E 25 41 FF 44 24 02 2D 0D 42 02  // ..A..>%A.D$.-.B.
    E360: 00 3E 21 41 00 49 08 02 02 AA 00 41 08 A5 00 1B  // .>!A.I.....A....
    E370: 66 FF 2D 0D 42 01 03 03 21 43 00 03 A2 40 44 03  // f.-.B...!C...@D.
    E380: 0C 40 02 00 4C A4 40 00 00 49 4C 02 2D 0C 42 04  // .@..L.@..IL.-.B.
    E390: 00 43 37 02 2D 0D 42 06 00 3D A4 00 00 00 44 6C  // .C7.-.B..=....Dl
    E3A0: 02 03 24 41 00 00 3E 25 41 FF 44 6C 02 2D 0A 42  // ..$A..>%A.Dl.-.B
    E3B0: 40 43 51 02 03 04 40 01 00 03 65 41 08 01 0A C3  // @CQ...@...eA....
    E3C0: 48 40 01 05 DA 48 88 88 01 00 01 F2 DB 48 40 01  // H@...H.......H@.
    E3D0: BA E2 48 40 01 BA F2 48 40 01 BA 02 49 40 01 BA  // ..H@...H@...I@..
    E3E0: 12 49 40 01 25 E1 48 20 01 25 F1 48 20 01 25 01  // .I@.%.H .%.H .%.
    E3F0: 49 20 01 25 11 49 20 01 2A E1 48 41 01 2A F1 48  // I .%.I .*.HA.*.H
    E400: 41 01 2A 01 49 41 01 2A 11 49 41 3D 65 00 0B 44  // A.*.IA.*.IA=e..D
    E410: D0 02 5C A2 C8 48 DF 41 3A 00 00 5B 7A 8E 00 0C  // ..\..H.A:..[z...
    E420: 00 FF FF FF 00 02 3F 00 00 00 5F 00 08 40 9C 00  // ......?..._..@..
    E430: 00 03 3F 00 00 00 5F 00 08 FF FF FF 00 03 3F 00  // ..?..._.......?.
    E440: 00 2A 57 20 10 00 00 00 00 3F 00 05 00 39 00 00  // .*W .....?...9..
    E450: 4B 00 00 80 01 3A 00 00 80 02 1B 00 00 80 03 00  // K....:..........
    E460: 00 00 80 08 34 25 00 80 09 1C 25 00 80 0A 00 1B  // ....4%....%.....
    E470: 00 9F 10 14 3F 00 80 11 01 38 00 9F 18 00 4A 00  // ....?....8....J.
    E480: 9F FF 00 00 00 02 01 08 02 02 03 02 04 02 FF 03  // ................
    E490: 02 01 00 01 03 02 01 00 01 03 02 01 00 01 03 02  // ................
    E4A0: 01 00 01 03 02 01 00 01 03 02 01 00 01 00 4C 02  // ..............L.
    E4B0: 01 02 00 08 37 00 00 3D 0D 00 00 00 44 CE 01 56  // ....7..=....D..V
    E4C0: 00 41 03 21 41 01 09 25 41 0F 15 0D 41 02 03 0A  // .A.!A..%A...A...
    E4D0: 40 42 66 FF 2D 0D 42 34 02 2D 0A 42 41 03 0C 48  // @Bf.-.B4.-.BA..H
    E4E0: 02 00 0D A5 68 48 01 54 08 68 48 03 0C 48 00 00  // ....hH.T.hH..H..
    E4F0: 03 F9 41 01 15 3D 41 04 5C BA 00 5C 8F 41 03 0A  // ..A..=A.\..\.A..
    E500: 42 40 4A 25 00 5C 01 49 81 00 0D 0D 00 5C 01 01  // B@J%.\.I.....\..
    E510: 0D 25 00 5C 10 4A 25 00 5C 20 44 67 00 07 25 00  // .%.\.J%.\ Dg..%.
    E520: 5C EF 4A 25 00 5C 20 49 74 00 0D 25 03 5C 40 56  // \.J%.\ It..%.\@V
    E530: 00 41 03 09 41 00 3B 02 41 03 3B 41 00 1B 25 41  // .A..A.;.A.;A..%A
    E540: 04 01 A2 01 5C 41 03 69 41 01 15 2D 41 04 01 2A  // ....\A.iA..-A..*
    E550: 01 5C 41 56 00 40 0F E5 40 80 03 73 40 00 01 02  // .\AV.@..@..s@...
    E560: 06 5C 40 56 00 40 03 6B 40 00 01 02 06 5C 40 03  // .\@V.@.k@....\@.
    E570: 63 40 00 01 02 06 5C 40 03 7B 40 00 09 65 40 0F  // c@....\@.{@..e@.
    E580: 01 02 06 5C 40 3E 25 41 04 47 10 01 33 25 41 04  // ...\@>%A.G..3%A.
    E590: 2D 05 46 04 00 00 00 03 63 40 00 01 02 06 5C 40  // -.F.....c@....\@
    E5A0: 03 6B 40 00 01 02 06 5C 40 03 73 40 00 01 02 06  // .k@....\@.s@....
    E5B0: 5C 40 03 7B 40 00 01 02 06 5C 40 43 D7 00 0D 25  // \@.{@....\@C...%
    E5C0: 03 5C 02 0D 25 01 5C 01 03 29 40 01 21 25 40 0A  // .\..%.\..)@.!%@.
    E5D0: 2D 25 40 32 4A 25 04 5C 01 49 42 01 51 0A 33 25  // -%@2J%.\.IB.Q.3%
    E5E0: 40 01 3E 25 40 00 49 26 01 02 65 01 01 43 CA 01  // @.>%@.I&..e..C..
    E5F0: 4A 05 04 5C F0 8F FF 00 44 54 01 02 65 01 02 43  // J..\....DT..e..C
    E600: CA 01 01 05 06 5C 01 00 00 80 03 00 40 06 5C 02  // .....\......@.\.
    E610: 6A 01 40 02 B8 01 04 5C 08 A5 01 1F 3D A5 01 00  // j.@....\....=...
    E620: 46 7C 01 02 65 01 03 43 CA 01 32 A5 01 01 3D 8D  // F|..e..C..2...=.
    E630: 00 00 00 44 CA 01 3D A5 01 00 44 CA 01 03 31 41  // ...D..=...D...1A
    E640: 01 03 19 40 00 56 18 40 3B 02 40 03 28 40 06 5C  // ...@.V.@;.@.(@.\
    E650: 03 68 40 06 5C 03 A8 40 06 5C 03 E8 40 06 5C 04  // .h@.\..@.\..@.\.
    E660: 02 00 40 3E 25 41 04 47 CA 01 33 25 41 04 2D 05  // ..@>%A.G..3%A.-.
    E670: 46 04 00 00 00 43 9D 01 3A 00 00 5B 66 FF 2D 0D  // F....C..:..[f.-.
    E680: 42 34 02 03 0C 48 00 00 01 8D 08 5C 32 00 01 05  // B4...H.....\2...
    E690: 09 5C 00 1C 02 00 01 05 0A 5C 10 11 3D 12 2D 0D  // .\.......\..=.-.
    E6A0: 42 04 00 2C 25 00 01 3D 25 00 06 49 D5 01 56 08  // B..,%..=%..I..V.
    E6B0: 48 03 25 41 10 0D 65 97 48 40 07 65 97 48 BF 33  // H.%A..e.H@.e.H.3
    E6C0: 25 41 01 3E 25 41 00 49 07 02 0D 25 3B 48 01 54  // %A.>%A.I...%;H.T
    E6D0: 30 3B 48 0D 25 3C 48 01 54 30 3C 48 51 32 5B 7A  // 0;H.%<H.T0<HQ2[z
    E6E0: 18 00 00 00 00 00 1C 00 04 00 38 00 08 00 54 00  // ..........8...T.
    E6F0: 0C 00 70 00 10 00 8C 00 14 00 5C 00 01 02 00 04  // ..p.......\.....
    E700: 02 25 01 04 03 31 41 00 09 0D 41 0F 00 15 0D 41  // .%...1A...A....A
    E710: 01 66 FF 2D 0D 42 50 00 2D 0A 42 41 03 0C 48 00  // .f.-.BP.-.BA..H.
    E720: 00 07 A5 68 48 FE 01 0D 68 48 11 11 50 02 4A 0D  // ...hH...hH..P.J.
    E730: 6B 48 01 00 49 41 00 02 25 01 13 54 08 68 48 54  // kH..IA..%..T.hHT
    E740: 00 6A 48 3A 00 00 5B 7A 0C 00 00 00 04 00 08 00  // .jH:..[z........
    E750: 0C 00 10 00 14 00 96 00 01 01 04 00 37 00 00 52  // ............7..R
    E760: 3E 55 00 00 02 E4 00 16 00 66 1C 2D 0C 42 04 00  // >U.......f.-.B..
    E770: 52 12 52 3E 01 0C D8 09 06 00 01 64 80 0A 1C 00  // R.R>.......d....
    E780: 02 05 00 08 00 00 00 02 0C 01 08 00 52 1F 03 08  // ............R...
    E790: 41 80 0A 09 0D 41 03 00 66 FF 2D 0D 42 92 00 2D  // A....A..f.-.B..-
    E7A0: 0A 42 41 03 24 41 00 00 01 05 82 00 0C 00 20 C0  // .BA.$A........ .
    E7B0: 5C 0A 83 00 00 FC 41 02 05 00 30 75 00 03 52 3F  // \.....A...0u..R?
    E7C0: 02 05 00 A0 86 01 03 52 3F 02 05 00 48 E8 01 03  // .......R?...H...
    E7D0: 52 3F 02 05 00 30 75 00 03 52 3F 02 05 00 18 F0  // R?...0u..R?.....
    E7E0: 01 03 52 3F 5B 7A 04 00 18 10 08 04 89 01 01 01  // ..R?[z..........
    E7F0: 08 00 37 00 00 03 88 00 28 08 03 09 00 00 03 2A  // ..7.....(......*
    E800: 41 00 03 22 43 41 01 22 28 08 44 5C 62 28 08 F8  // A.."CA."(.D\b(..
    E810: 41 42 22 00 63 01 39 00 63 08 7E 00 63 04 E4 00  // AB".c.9.c.~.c...
    E820: 5A 5A 43 83 01 01 24 93 0A 00 00 01 24 94 0A 01  // ZZC...$.....$...
    E830: 00 01 04 A3 0A 02 00 01 04 A4 0A 06 00 01 04 A5  // ................
    E840: 0A 0A 00 01 04 A6 0A 0E 00 01 04 A7 0A 12 00 01  // ................
    E850: 04 A8 0A 16 00 01 04 A9 0A 1A 00 01 04 AA 0A 1E  // ................
    E860: 00 2D 0D 42 22 00 43 78 01 5B 21 65 00 02 03 22  // .-.B".Cx.[!e..."
    E870: 43 40 03 0A 41 44 37 02 00 4C 09 41 01 49 9C 00  // C@..AD7..L.A.I..
    E880: 54 20 00 00 54 30 00 00 15 0D 41 01 4C 09 41 01  // T ..T0....A.L.A.
    E890: 49 AF 00 54 28 00 00 54 38 00 00 37 00 00 52 3E  // I..T(..T8..7..R>
    E8A0: 03 24 40 16 00 21 25 40 02 55 00 00 02 EA 00 00  // .$@..!%@.U......
    E8B0: 2C E2 00 40 66 1C 03 0C 40 08 00 3E 0D 40 00 00  // ,..@f...@..>.@..
    E8C0: 44 DE 00 2D 0C 42 08 00 52 12 37 00 00 43 78 01  // D..-.B..R.7..Cx.
    E8D0: 01 05 91 0A 00 00 00 00 3C 0D 92 0A 00 00 44 78  // ........<.....Dx
    E8E0: 01 3C 25 E7 0A 07 49 16 01 01 05 91 0A 0E 00 00  // .<%...I.........
    E8F0: 00 03 00 01 92 0A 5C 05 92 0A 00 FF 00 FF 0F 00  // ......\.........
    E900: FF 00 01 05 32 0A 05 00 00 00 51 0A 01 05 32 0A  // ....2.....Q...2.
    E910: 01 00 00 00 03 00 41 E7 0A 3E 62 41 41 49 28 01  // ......A..>bAAI(.
    E920: 51 0A 3E 25 41 00 44 51 01 3E 25 41 07 49 78 01  // Q.>%A.DQ.>%A.Ix.
    E930: 01 05 91 0A 0E 00 00 00 01 02 92 0A 01 01 05 91  // ................
    E940: 0A 03 00 00 00 03 38 41 92 0A 15 25 41 04 3C E2  // ......8A...%A.<.
    E950: 9A 0A 41 45 78 01 4A E5 99 0A 04 44 78 01 5C 25  // ..AEx.J....Dx.\%
    E960: F3 09 FE 22 2D 65 00 01 3E 65 00 02 45 12 00 01  // ..."-e..>e..E...
    E970: 1A 28 08 00 5B 00 D1 00 01 01 08 00 37 00 00 66  // .(..[.......7..f
    E980: FF 2D 0D 42 BD 00 56 00 41 03 21 41 00 15 0D 41  // .-.B..V.A.!A...A
    E990: 02 2D 0A 42 41 03 04 01 00 00 66 FF 2D 0D 42 C9  // .-.BA.....f.-.B.
    E9A0: 00 03 05 00 00 00 00 40 56 00 40 54 00 00 00 03  // .......@V.@T....
    E9B0: 4C 00 00 00 01 02 00 C2 00 01 0A 00 00 01 03 98  // L...............
    E9C0: 41 01 00 56 08 41 03 22 43 41 4C 8A 41 44 49 5F  // A..V.A."CAL.ADI_
    E9D0: 00 2D 65 41 01 2D 25 41 01 3E 39 41 00 45 50 00  // .-eA.-%A.>9A.EP.
    E9E0: 3E 71 41 00 47 A1 00 33 71 41 00 03 39 41 00 33  // >qA.G..3qA..9A.3
    E9F0: 25 41 01 03 22 43 41 4C 8A 41 44 49 79 00 0F 8A  // %A.."CAL.ADIy...
    EA00: 41 44 33 65 41 01 3E 65 41 00 49 79 00 01 1A 00  // AD3eA.>eA.Iy....
    EA10: 00 01 01 9A 01 00 41 2D 0D 42 02 00 2D 25 40 01  // ......A-.B..-%@.
    EA20: 3E 25 40 02 49 39 00 01 05 00 C2 00 00 00 E0 5B  // >%@.I9.........[
    EA30: 7A 14 00 6F 22 70 22 3D 26 DF 26 40 22 41 22 00  // z..o"p"=&.&@"A".
    EA40: 00 00 01 00 02 00 03 00 E5 00 02 02 14 00 3D 25  // ..............=%
    EA50: 02 01 44 1C 00 3D 25 02 02 44 3E 00 3D 25 02 03  // ..D..=%..D>.=%..
    EA60: 44 63 00 5B 2C 02 01 41 03 05 00 FF FF FF FF 33  // Dc.[,..A.......3
    EA70: 02 00 40 3E 01 00 00 48 39 00 2C 05 01 01 00 00  // ..@>...H9.,.....
    EA80: 00 2C 02 00 40 5B 3D B9 02 02 44 5E 00 3D 01 00  // .,..@[=...D^.=..
    EA90: 01 45 51 00 32 01 00 01 5B 32 01 01 00 02 01 00  // .EQ.2...[2......
    EAA0: 01 02 B9 02 02 5B 2C 01 00 01 5B 3D 05 00 00 00  // .....[,...[=....
    EAB0: 00 00 49 77 00 3D 05 01 00 00 00 00 44 E0 00 56  // ..Iw.=......D..V
    EAC0: 00 43 03 0D 40 1F 00 03 01 00 00 3D 05 01 00 00  // .C..@......=....
    EAD0: 00 00 44 95 00 03 01 00 01 03 65 40 20 03 22 43  // ..D.......e@ ."C
    EAE0: 40 4C 02 00 44 49 A7 00 33 25 40 01 43 95 00 2D  // @L..DI..3%@.C..-
    EAF0: 2A 40 40 1B 25 40 01 03 22 43 40 03 02 00 44 03  // *@@.%@.."C@...D.
    EB00: 01 41 01 7D 02 00 00 27 05 40 02 00 00 00 2D 02  // .A.}...'.@....-.
    EB10: 41 00 1B 05 41 01 2D 02 41 40 3E 02 00 41 44 E0  // A...A.-.A@>..AD.
    EB20: 00 03 02 00 41 43 B7 00 02 02 00 00 5B 00 D1 01  // ....AC......[...
    EB30: 02 01 04 04 37 00 00 42 21 00 63 07 29 00 63 03  // ....7..B!.c.).c.
    EB40: 66 00 63 02 D5 00 63 04 FA 00 63 0C 85 01 63 0D  // f.c...c...c...c.
    EB50: A8 01 5A 5A 43 D0 01 01 0D 1D 48 9F 0F 01 05 1E  // ..ZZC.....H.....
    EB60: 48 00 00 00 00 01 05 1F 48 7D 00 00 00 66 06 01  // H.......H}...f..
    EB70: 4C 1F 48 39 00 03 24 46 42 00 3E 25 46 00 44 58  // L.H9..$FB.>%F.DX
    EB80: 00 01 25 1F 48 00 4A 25 1B 48 10 49 D0 01 0D E5  // ..%.H.J%.H.I....
    EB90: 1B 48 02 5B 4A A5 CB 05 01 49 D0 01 4A 25 1B 48  // .H.[J....I..J%.H
    EBA0: 01 44 D0 01 4A 25 1C 48 10 44 76 00 4A E5 1B 48  // .D..J%.H.Dv.J..H
    EBB0: 02 49 91 00 4A 25 1C 48 08 49 D0 01 43 C5 00 4A  // .I..J%.H.I..C..J
    EBC0: E5 1B 48 01 49 D0 01 4A 25 1B 48 10 44 C5 00 0D  // ..H.I..J%.H.D...
    EBD0: A5 1B 48 03 0D 65 1B 48 03 01 0D 1D 48 00 00 5C  // ..H..e.H....H..\
    EBE0: 25 1B 48 EF 01 4A 25 1C 48 10 44 B7 00 01 0D 1D  // %.H..J%.H.D.....
    EBF0: 48 9F 0F 07 E5 1B 48 FC 0D E5 1F 48 01 0D 25 1B  // H.....H....H..%.
    EC00: 48 11 5B 66 06 03 24 46 42 00 3E 25 46 00 49 D0  // H.[f..$FB.>%F.I.
    EC10: 01 4A 25 1B 48 01 44 D0 01 4A 25 1C 48 10 44 EB  // .J%.H.D..J%.H.D.
    EC20: 00 5C E5 1B 48 FE 02 5B 4A 65 D0 05 02 44 07 01  // .\..H..[Je...D..
    EC30: 0D 25 23 48 01 3D 8D 00 00 00 44 84 01 03 05 46  // .%#H.=....D....F
    EC40: 80 F0 FA 02 56 00 41 03 19 41 00 21 05 41 FF 0F  // ....V.A..A.!.A..
    EC50: 00 00 27 02 46 40 3E 05 41 00 00 00 00 44 37 01  // ..'.F@>.A....D7.
    EC60: 2D 0D 40 01 00 01 8A 1D 48 40 56 00 41 03 19 41  // -.@.....H@V.A..A
    EC70: 00 21 02 40 41 27 02 46 40 01 A5 22 48 0C 01 0A  // .!.@A'.F@.."H...
    EC80: 22 48 40 15 05 40 04 56 00 41 03 29 41 00 2D 0D  // "H@..@.V.A.)A.-.
    EC90: 41 01 00 21 02 40 41 1B 05 40 08 01 0A 20 48 40  // A..!.@A..@... H@
    ECA0: 0D E5 20 48 C0 07 25 23 48 FE 4A 65 23 48 01 49  // .. H..%#H.Je#H.I
    ECB0: 7C 01 5B 4A 25 1B 48 01 44 9D 01 4A 25 1B 48 10  // |.[J%.H.D..J%.H.
    ECC0: 49 D0 01 4A 25 1C 48 10 44 95 01 07 E5 1F 48 FE  // I..J%.H.D.....H.
    ECD0: 0D 25 1B 48 11 5B 4A 25 1B 48 01 44 D0 01 4A 25  // .%.H.[J%.H.D..J%
    ECE0: 1B 48 10 44 D0 01 4A 25 1C 48 10 44 B8 01 07 A5  // .H.D..J%.H.D....
    ECF0: 1B 48 FC 07 65 1B 48 FC 5C 25 1B 48 EF 01 5B 00  // .H..e.H.\%.H..[.
    ED00: 71 00 03 01 08 00 37 00 00 56 00 01 3D E5 00 20  // q.....7..V..=.. 
    ED10: 48 1B 00 03 39 43 00 03 02 01 44 03 05 00 00 00  // H...9C....D.....
    ED20: 10 C0 2D 09 00 00 01 02 82 00 00 03 00 40 83 00  // ..-..........@..
    ED30: 56 00 41 03 31 41 00 75 02 40 41 03 25 41 20 33  // V.A.1A.u.@A.%A 3
    ED40: 31 41 00 3D E2 00 41 47 61 00 2D 0D 00 04 00 01  // 1A.=..AGa.-.....
    ED50: 02 82 00 00 02 00 00 83 00 6E 02 00 41 0F 01 40  // .........n..A..@
    ED60: 00 02 02 00 40 33 05 01 01 00 00 00 08 02 00 01  // ....@3..........
    ED70: 5B 00 CE 00 03 01 00 10 37 00 00 56 00 40 4A 25  // [.......7..V.@J%
    ED80: 00 EC 01 44 30 00 4A 25 05 EC 1E 49 30 00 03 25  // ...D0.J%...I0..%
    ED90: 40 01 01 05 05 EC 03 00 00 00 4A 65 05 EC 0F 49  // @.........Je...I
    EDA0: 28 00 3D 65 02 00 49 3C 00 2C 28 02 09 08 3D E5  // (.=e..I<.,(...=.
    EDB0: 02 00 49 48 00 2C A8 02 09 08 3D 65 02 02 49 6B  // ..IH.,....=e..Ik
    EDC0: 00 01 05 82 00 10 00 60 C0 01 01 83 00 00 01 05  // .......`........
    EDD0: 82 00 14 00 60 C0 02 05 00 0C 02 00 00 3D E5 02  // ....`........=..
    EDE0: 03 49 81 00 01 01 82 00 01 02 05 01 0C 02 00 00  // .I..............
    EDF0: 43 81 00 54 00 63 C0 01 01 64 C0 00 01 21 65 C0  // C..T.c...d...!e.
    EE00: 02 01 01 66 C0 01 01 31 67 C0 02 01 01 E8 C0 03  // ...f...1g.......
    EE10: 3D 65 02 01 44 AE 00 3D E5 02 01 44 AE 00 51 02  // =e..D..=...D..Q.
    EE20: 4A E5 A0 21 80 49 AE 00 3E 25 40 01 49 CD 00 01  // J..!.I..>%@.I...
    EE30: 05 05 EC 01 00 00 00 4A 65 05 EC 0F 49 C5 00 5B  // .......Je...I..[
    EE40: F9 02 02 01 00 00 37 00 00 3D 25 01 01 44 7B 00  // ......7..=%..D{.
    EE50: 3D 25 01 02 44 68 01 3D 25 01 00 49 CA 02 3D 05  // =%..Dh.=%..I..=.
    EE60: 00 00 00 00 00 49 39 00 3A 00 00 0D 25 68 18 01  // .....I9.:...%h..
    EE70: 4A 65 68 18 01 44 30 00 5B 54 20 68 18 52 3C 03  // Jeh..D0.[T h.R<.
    EE80: 00 40 24 01 3E 39 40 00 44 77 00 4A A5 24 01 08  // .@$.>9@.Dw.J.$..
    EE90: 44 4B 00 03 39 40 00 3E E5 40 00 49 62 00 03 E5  // DK..9@.>.@.Ib...
    EEA0: 40 20 01 02 24 01 40 4A A5 24 01 08 44 67 00 4A  // @ ..$.@J.$..Dg.J
    EEB0: A5 24 01 10 44 6F 00 55 38 00 5B 3D 65 01 02 44  // .$..Do.U8.[=e..D
    EEC0: D7 00 02 05 00 60 EA 00 00 52 3C 3C F9 24 01 00  // .....`...R<<.$..
    EED0: 44 C1 00 07 25 15 01 FE 4A A5 24 01 10 44 98 00  // D...%...J.$..D..
    EEE0: 03 00 40 24 01 03 F9 40 00 3E 25 40 00 49 B4 00  // ..@$...@.>%@.I..
    EEF0: 03 25 40 68 01 02 24 01 40 4A A5 24 01 10 44 B9  // .%@h..$.@J.$..D.
    EF00: 00 5D 05 00 00 00 00 FF 40 7E 05 00 52 29 07 0D  // .]......@~..R)..
    EF10: 18 01 F8 FE 43 3A 01 02 05 00 00 46 C3 23 07 25  // ....C:.....F.#.%
    EF20: 15 01 FE 4A A5 01 17 03 44 3A 01 56 08 40 03 31  // ...J....D:.V.@.1
    EF30: 40 01 15 0D 40 0E 0F 0D 40 0F 04 01 0A 18 17 40  // @...@...@......@
    EF40: 5C B1 19 17 FC 01 51 05 07 A5 01 17 FC 01 25 05  // \.....Q.......%.
    EF50: 17 40 01 05 02 17 00 00 3C 00 01 65 1C 17 01 54  // .@......<..e...T
    EF60: 08 04 17 01 A5 05 17 E8 0D A5 19 17 10 4A 65 24  // .............Je$
    EF70: 17 02 44 2D 01 0D 65 19 17 03 01 01 42 01 00 01  // ..D-..e.....B...
    EF80: 01 46 01 00 01 01 4A 01 00 01 01 4E 01 00 01 01  // .F....J....N....
    EF90: 52 01 00 01 01 56 01 00 3D 65 01 02 49 67 01 5C  // R....V..=e..Ig.\
    EFA0: 0D 18 01 F8 FF 01 01 5B 56 00 41 03 31 41 01 09  // .......[V.A.1A..
    EFB0: 25 41 03 15 25 41 02 66 FF 2D 0D 42 D1 02 2D 0A  // %A..%A.f.-.B..-.
    EFC0: 42 41 26 05 00 0A 00 00 00 03 04 41 00 00 27 02  // BA&........A..'.
    EFD0: 41 40 3E 05 40 00 00 01 00 45 A1 01 03 0D 40 FF  // A@>.@....E....@.
    EFE0: FF 66 FF 2D 0D 42 E1 02 56 00 41 03 39 41 01 15  // .f.-.B..V.A.9A..
    EFF0: 25 41 02 2D 0A 42 41 03 0C 48 00 00 01 0A 30 1B  // %A.-.BA..H....0.
    F000: 40 3A 00 00 3D 65 01 0B 49 2C 02 20 05 00 64 00  // @:..=e..I,. ..d.
    F010: 00 00 03 0C 48 02 00 03 00 41 40 01 0F 25 41 10  // ....H....A@..%A.
    F020: 09 0D 41 DF F7 4B A5 01 04 44 F0 01 0F 65 41 08  // ..A..K...D...eA.
    F030: 03 0C 48 00 00 4A 05 9C 1B 01 00 00 00 44 15 02  // ..H..J.......D..
    F040: 03 0C 48 02 00 3C 02 41 01 40 49 15 02 3C 02 40  // ..H..<.A.@I..<.@
    F050: 01 41 44 CA 02 03 0C 48 02 00 07 25 40 01 EF 01  // .AD....H...%@...
    F060: 02 41 01 40 01 0A 40 01 41 43 CA 02 56 00 40 03  // .A.@..@.AC..V.@.
    F070: 8D 40 0C 00 3D 65 01 18 44 4F 02 03 8D 40 3E 00  // .@..=e..DO...@>.
    F080: 3D 65 01 19 44 4F 02 03 A9 40 01 33 A5 40 14 03  // =e..DO...@.3.@..
    F090: 31 40 01 09 25 40 03 15 25 40 04 0F 0D 40 01 01  // 1@..%@..%@...@..
    F0A0: 4B A5 01 04 44 6C 02 0F 0D 40 00 02 56 00 41 03  // K...Dl...@..V.A.
    F0B0: 29 41 01 33 25 41 14 03 0C 48 00 00 4A 05 9C 1B  // )A.3%A...H..J...
    F0C0: 01 00 00 00 44 A8 02 03 0C 48 02 00 4A 25 40 01  // ....D....H..J%@.
    F0D0: 10 49 A8 02 3C 22 43 01 41 49 A8 02 03 1A 48 40  // .I..<"C.AI....H@
    F0E0: 3C 0A 00 01 40 44 CA 02 03 1A 48 40 07 25 00 01  // <...@D....H@.%..
    F0F0: FE 03 0C 48 02 00 01 22 43 01 41 07 0D 40 01 EF  // ...H..."C.A..@..
    F100: F7 03 1A 48 40 01 0A 00 01 40 3A 00 00 5B 7A 28  // ...H@....@:..[z(
    F110: 00 00 CA 9A 3B 80 7C 81 4A 00 2F 68 59 00 94 35  // ....;.|.J./hY..5
    F120: 77 00 00 00 00 00 02 04 00 00 04 08 00 00 26 0C  // w.............&.
    F130: 00 00 28 10 00 00 2A 14 00 FF FF FF FF FF FF FF  // ..(...*.........
    F140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F150: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F160: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F170: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F180: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F190: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F1F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F200: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F210: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F220: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F230: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F240: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F250: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    F260: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    F270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F280: 00 00 00 00                                      // ....


