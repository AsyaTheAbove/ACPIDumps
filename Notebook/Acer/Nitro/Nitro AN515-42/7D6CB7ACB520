
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20191018
Copyright (c) 2000 - 2019 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x0000046D  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 02)  MCFG  0x0000003C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 03)  ASF!  0x000000A5  0x20  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 04)  APIC  0x00000138  0x03  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 05)  CRAT  0x00000810  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 06)  SSDT  0x0000119C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 07)  TPM2  0x00000034  0x04  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 08)  VFCT  0x0000D484  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 09)  BOOT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 10)  SSDT  0x000010A5  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 11)  CDIT  0x00000029  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 12)  IVRS  0x000000D0  0x02  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 13)  DSDT  0x000067B7  0x01  "ACRSYS"  "ACRPRDCT"  0x00040000  "1025"   0x00040000
 14)  SSDT  0x000010F5  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 15)  WSMT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 16)  SSDT  0x000001D4  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 17)  UEFI  0x00000236  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 18)  SSDT  0x00000086  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 19)  SSDT  0x00005536  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 20)  FACP  0x0000010C  0x05  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 21)  FPDT  0x00000044  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 22)  SSDT  0x00005419  0x02  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 23)  MSDM  0x00000055  0x03  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 24)  SSDT  0x00000050  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 25)  HPET  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 26)  SSDT  0x00000C33  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 27)  UEFI  0x00000042  0x01  "ACRSYS"  "ACRPRDCT"  0x00000000  "1025"   0x00040000
 28)  FACS  0x00000040  0x02
 29)  BGRT  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 30)  SSDT  0x00001B4E  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000

Found 30 ACPI tables in /root/HW_PROBE/LATEST/hw.info/logs/acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000138
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 3D
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 01
[037h 0055   1]                Local Apic ID : 01
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 02
[03Fh 0063   1]                Local Apic ID : 02
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 03
[047h 0071   1]                Local Apic ID : 03
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 04
[04Fh 0079   1]                Local Apic ID : 04
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 05
[057h 0087   1]                Local Apic ID : 05
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 06
[05Fh 0095   1]                Local Apic ID : 06
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 07
[067h 0103   1]                Local Apic ID : 07
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 08
[06Fh 0111   1]                Local Apic ID : 00
[070h 0112   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 09
[077h 0119   1]                Local Apic ID : 00
[078h 0120   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0A
[07Fh 0127   1]                Local Apic ID : 00
[080h 0128   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0B
[087h 0135   1]                Local Apic ID : 00
[088h 0136   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0C
[08Fh 0143   1]                Local Apic ID : 00
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0D
[097h 0151   1]                Local Apic ID : 00
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 00
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 0F
[0A7h 0167   1]                Local Apic ID : 00
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 01 [I/O APIC]
[0ADh 0173   1]                       Length : 0C
[0AEh 0174   1]                  I/O Apic ID : 04
[0AFh 0175   1]                     Reserved : 00
[0B0h 0176   4]                      Address : FEC00000
[0B4h 0180   4]                    Interrupt : 00000000

[0B8h 0184   1]                Subtable Type : 01 [I/O APIC]
[0B9h 0185   1]                       Length : 0C
[0BAh 0186   1]                  I/O Apic ID : 05
[0BBh 0187   1]                     Reserved : 00
[0BCh 0188   4]                      Address : FEC01000
[0C0h 0192   4]                    Interrupt : 00000018

[0C4h 0196   1]                Subtable Type : 02 [Interrupt Source Override]
[0C5h 0197   1]                       Length : 0A
[0C6h 0198   1]                          Bus : 00
[0C7h 0199   1]                       Source : 00
[0C8h 0200   4]                    Interrupt : 00000002
[0CCh 0204   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[0CEh 0206   1]                Subtable Type : 02 [Interrupt Source Override]
[0CFh 0207   1]                       Length : 0A
[0D0h 0208   1]                          Bus : 00
[0D1h 0209   1]                       Source : 09
[0D2h 0210   4]                    Interrupt : 00000009
[0D6h 0214   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[0D8h 0216   1]                Subtable Type : 04 [Local APIC NMI]
[0D9h 0217   1]                       Length : 06
[0DAh 0218   1]                 Processor ID : 00
[0DBh 0219   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0DDh 0221   1]         Interrupt Input LINT : 01

[0DEh 0222   1]                Subtable Type : 04 [Local APIC NMI]
[0DFh 0223   1]                       Length : 06
[0E0h 0224   1]                 Processor ID : 01
[0E1h 0225   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E3h 0227   1]         Interrupt Input LINT : 01

[0E4h 0228   1]                Subtable Type : 04 [Local APIC NMI]
[0E5h 0229   1]                       Length : 06
[0E6h 0230   1]                 Processor ID : 02
[0E7h 0231   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E9h 0233   1]         Interrupt Input LINT : 01

[0EAh 0234   1]                Subtable Type : 04 [Local APIC NMI]
[0EBh 0235   1]                       Length : 06
[0ECh 0236   1]                 Processor ID : 03
[0EDh 0237   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0EFh 0239   1]         Interrupt Input LINT : 01

[0F0h 0240   1]                Subtable Type : 04 [Local APIC NMI]
[0F1h 0241   1]                       Length : 06
[0F2h 0242   1]                 Processor ID : 04
[0F3h 0243   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0F5h 0245   1]         Interrupt Input LINT : 01

[0F6h 0246   1]                Subtable Type : 04 [Local APIC NMI]
[0F7h 0247   1]                       Length : 06
[0F8h 0248   1]                 Processor ID : 05
[0F9h 0249   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0FBh 0251   1]         Interrupt Input LINT : 01

[0FCh 0252   1]                Subtable Type : 04 [Local APIC NMI]
[0FDh 0253   1]                       Length : 06
[0FEh 0254   1]                 Processor ID : 06
[0FFh 0255   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[101h 0257   1]         Interrupt Input LINT : 01

[102h 0258   1]                Subtable Type : 04 [Local APIC NMI]
[103h 0259   1]                       Length : 06
[104h 0260   1]                 Processor ID : 07
[105h 0261   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[107h 0263   1]         Interrupt Input LINT : 01

[108h 0264   1]                Subtable Type : 04 [Local APIC NMI]
[109h 0265   1]                       Length : 06
[10Ah 0266   1]                 Processor ID : 08
[10Bh 0267   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[10Dh 0269   1]         Interrupt Input LINT : 01

[10Eh 0270   1]                Subtable Type : 04 [Local APIC NMI]
[10Fh 0271   1]                       Length : 06
[110h 0272   1]                 Processor ID : 09
[111h 0273   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[113h 0275   1]         Interrupt Input LINT : 01

[114h 0276   1]                Subtable Type : 04 [Local APIC NMI]
[115h 0277   1]                       Length : 06
[116h 0278   1]                 Processor ID : 0A
[117h 0279   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[119h 0281   1]         Interrupt Input LINT : 01

[11Ah 0282   1]                Subtable Type : 04 [Local APIC NMI]
[11Bh 0283   1]                       Length : 06
[11Ch 0284   1]                 Processor ID : 0B
[11Dh 0285   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[11Fh 0287   1]         Interrupt Input LINT : 01

[120h 0288   1]                Subtable Type : 04 [Local APIC NMI]
[121h 0289   1]                       Length : 06
[122h 0290   1]                 Processor ID : 0C
[123h 0291   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[125h 0293   1]         Interrupt Input LINT : 01

[126h 0294   1]                Subtable Type : 04 [Local APIC NMI]
[127h 0295   1]                       Length : 06
[128h 0296   1]                 Processor ID : 0D
[129h 0297   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[12Bh 0299   1]         Interrupt Input LINT : 01

[12Ch 0300   1]                Subtable Type : 04 [Local APIC NMI]
[12Dh 0301   1]                       Length : 06
[12Eh 0302   1]                 Processor ID : 0E
[12Fh 0303   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[131h 0305   1]         Interrupt Input LINT : 01

[132h 0306   1]                Subtable Type : 04 [Local APIC NMI]
[133h 0307   1]                       Length : 06
[134h 0308   1]                 Processor ID : 0F
[135h 0309   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[137h 0311   1]         Interrupt Input LINT : 01

Raw Table Data: Length 312 (0x138)

    0000: 41 50 49 43 38 01 00 00 03 3D 41 43 52 53 59 53  // APIC8....=ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 01 01 01 00 00 00 00 08 02 02  // ................
    0040: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 04 04  // ................
    0050: 01 00 00 00 00 08 05 05 01 00 00 00 00 08 06 06  // ................
    0060: 01 00 00 00 00 08 07 07 01 00 00 00 00 08 08 00  // ................
    0070: 00 00 00 00 00 08 09 00 00 00 00 00 00 08 0A 00  // ................
    0080: 00 00 00 00 00 08 0B 00 00 00 00 00 00 08 0C 00  // ................
    0090: 00 00 00 00 00 08 0D 00 00 00 00 00 00 08 0E 00  // ................
    00A0: 00 00 00 00 00 08 0F 00 00 00 00 00 01 0C 04 00  // ................
    00B0: 00 00 C0 FE 00 00 00 00 01 0C 05 00 00 10 C0 FE  // ................
    00C0: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    00D0: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    00E0: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................
    00F0: 04 06 04 05 00 01 04 06 05 05 00 01 04 06 06 05  // ................
    0100: 00 01 04 06 07 05 00 01 04 06 08 05 00 01 04 06  // ................
    0110: 09 05 00 01 04 06 0A 05 00 01 04 06 0B 05 00 01  // ................
    0120: 04 06 0C 05 00 01 04 06 0D 05 00 01 04 06 0E 05  // ................
    0130: 00 01 04 06 0F 05 00 01                          // ........


ASF!
----
[000h 0000   4]                    Signature : "ASF!"    [Alert Standard Format table]
[004h 0004   4]                 Table Length : 000000A5
[008h 0008   1]                     Revision : 20
[009h 0009   1]                     Checksum : B2
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]                Subtable Type : 00 [ASF Information]
[025h 0037   1]                     Reserved : 00
[026h 0038   2]                       Length : 0010
[028h 0040   1]          Minimum Reset Value : 00
[029h 0041   1]     Minimum Polling Interval : FF
[02Ah 0042   2]                    System ID : 0001
[02Ch 0044   4]              Manufacturer ID : 57010000
[030h 0048   1]                        Flags : 00
[031h 0049   3]                     Reserved : 000000

[034h 0052   1]                Subtable Type : 01 [ASF Alerts]
[035h 0053   1]                     Reserved : 00
[036h 0054   2]                       Length : 002C
[038h 0056   1]                   AssertMask : 00
[039h 0057   1]                 DeassertMask : 00
[03Ah 0058   1]                  Alert Count : 03
[03Bh 0059   1]            Alert Data Length : 0C

[03Ch 0060   1]                      Address : 80
[03Dh 0061   1]                      Command : 23
[03Eh 0062   1]                         Mask : 01
[03Fh 0063   1]                        Value : 01
[040h 0064   1]                   SensorType : 01
[041h 0065   1]                         Type : 01
[042h 0066   1]                       Offset : 00
[043h 0067   1]                   SourceType : 39
[044h 0068   1]                     Severity : 10
[045h 0069   1]                 SensorNumber : 00
[046h 0070   1]                       Entity : 07
[047h 0071   1]                     Instance : 00

[048h 0072   1]                      Address : 80
[049h 0073   1]                      Command : 23
[04Ah 0074   1]                         Mask : 02
[04Bh 0075   1]                        Value : 02
[04Ch 0076   1]                   SensorType : 01
[04Dh 0077   1]                         Type : 01
[04Eh 0078   1]                       Offset : 00
[04Fh 0079   1]                   SourceType : 39
[050h 0080   1]                     Severity : 10
[051h 0081   1]                 SensorNumber : 01
[052h 0082   1]                       Entity : 07
[053h 0083   1]                     Instance : 00

[054h 0084   1]                      Address : 80
[055h 0085   1]                      Command : 23
[056h 0086   1]                         Mask : 04
[057h 0087   1]                        Value : 04
[058h 0088   1]                   SensorType : 01
[059h 0089   1]                         Type : 01
[05Ah 0090   1]                       Offset : 00
[05Bh 0091   1]                   SourceType : 39
[05Ch 0092   1]                     Severity : 10
[05Dh 0093   1]                 SensorNumber : 02
[05Eh 0094   1]                       Entity : 07
[05Fh 0095   1]                     Instance : 00

[060h 0096   1]                Subtable Type : 02 [ASF Remote Control]
[061h 0097   1]                     Reserved : 00
[062h 0098   2]                       Length : 0018
[064h 0100   1]                Control Count : 04
[065h 0101   1]          Control Data Length : 04
[066h 0102   2]                     Reserved : 0000

[068h 0104   1]                     Function : 00
[069h 0105   1]                      Address : 71
[06Ah 0106   1]                      Command : 00
[06Bh 0107   1]                        Value : 00

[06Ch 0108   1]                     Function : 01
[06Dh 0109   1]                      Address : 71
[06Eh 0110   1]                      Command : 02
[06Fh 0111   1]                        Value : 00

[070h 0112   1]                     Function : 02
[071h 0113   1]                      Address : 71
[072h 0114   1]                      Command : 01
[073h 0115   1]                        Value : 00

[074h 0116   1]                     Function : 03
[075h 0117   1]                      Address : 71
[076h 0118   1]                      Command : 03
[077h 0119   1]                        Value : 00

[078h 0120   1]                Subtable Type : 03 [ASF RMCP Boot Options]
[079h 0121   1]                     Reserved : 00
[07Ah 0122   2]                       Length : 0017
[07Ch 0124   7]                 Capabilities : 21 F8 00 00 00 1B F0
[083h 0131   1]              Completion Code : 00
[084h 0132   4]                Enterprise ID : 57010000
[088h 0136   1]                      Command : 00
[089h 0137   2]                    Parameter : 0100
[08Bh 0139   2]                 Boot Options : 7000
[08Dh 0141   2]               Oem Parameters : 1600

[08Fh 0143   1]                Subtable Type : 00 [ASF Information]
[090h 0144   1]                     Reserved : 10
[091h 0145   2]                       Length : 00A0
[093h 0147   1]          Minimum Reset Value : A2
[094h 0148   1]     Minimum Polling Interval : A4
[095h 0149   2]                    System ID : 0000
[097h 0151   4]              Manufacturer ID : 00000000
[09Bh 0155   1]                        Flags : 00
[09Ch 0156   3]                     Reserved : 000000


Raw Table Data: Length 165 (0xA5)

    0000: 41 53 46 21 A5 00 00 00 20 B2 41 43 52 53 59 53  // ASF!.... .ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 00 00 FF 01 00 00 00 01 57  // ...............W
    0030: 00 00 00 00 01 00 2C 00 00 00 03 0C 80 23 01 01  // ......,......#..
    0040: 01 01 00 39 10 00 07 00 80 23 02 02 01 01 00 39  // ...9.....#.....9
    0050: 10 01 07 00 80 23 04 04 01 01 00 39 10 02 07 00  // .....#.....9....
    0060: 02 00 18 00 04 04 00 00 00 71 00 00 01 71 02 00  // .........q...q..
    0070: 02 71 01 00 03 71 03 00 03 00 17 00 21 F8 00 00  // .q...q......!...
    0080: 00 1B F0 00 00 00 01 57 00 00 01 00 70 00 16 00  // .......W....p...
    0090: 10 A0 00 A2 A4 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 00                                   // .....


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : AF
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 00
                                   Displayed : 0
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 0000000068256000
[030h 0048   4]                Image OffsetX : 00000240
[034h 0052   4]                Image OffsetY : 000000C4

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 AF 41 43 52 53 59 53  // BGRT8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 00 60 25 68 00 00 00 00  // .........`%h....
    0030: 40 02 00 00 C4 00 00 00                          // @.......


BOOT
----
[000h 0000   4]                    Signature : "BOOT"    [Simple Boot Flag Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 6A
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]          Boot Register Index : 44
[025h 0037   3]                     Reserved : 000000

Raw Table Data: Length 40 (0x28)

    0000: 42 4F 4F 54 28 00 00 00 01 6A 41 43 52 53 59 53  // BOOT(....jACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 44 00 00 00                          // ....D...


CDIT
----
[000h 0000   4]                    Signature : "CDIT"    
[004h 0004   4]                 Table Length : 00000029
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : B2
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 B2 41 43 52 53 59 53  // CDIT).....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 00000810
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 35
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 2064 (0x810)

    0000: 43 52 41 54 10 08 00 00 01 35 41 43 52 53 59 53  // CRAT.....5ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 21 00 00 00 01 00 00 00 00 00 00 00  // ....!...........
    0030: 00 28 00 00 0D 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 08 00 2C 00 28 00 00 00 00 00 40 00 40 01 00 00  // ..,.(.....@.@...
    0050: 01 0B 04 20 00 00 00 00 01 28 00 00 01 00 00 00  // ... .....(......
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 10 00  // .(..............
    0090: 00 00 00 00 00 00 F0 AF 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    00B0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 50  // ...............P
    00C0: 01 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    00D0: 02 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0100: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0110: 02 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0140: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0150: 02 40 00 00 0F 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0180: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0190: 02 40 00 00 0F 00 00 00 00 00 00 00 FF 00 00 00  // .@..............
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  // ................
    01C0: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    01D0: 02 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0200: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0210: 02 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0240: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0250: 02 40 00 00 0F 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0280: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0290: 02 40 00 00 0B 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02B0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    02C0: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    02D0: 02 40 00 00 0D 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0300: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0310: 02 40 00 00 0F 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0340: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0350: 02 40 00 00 0B 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0380: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0390: 02 40 00 00 0D 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    03C0: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    03D0: 02 40 00 00 0F 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0400: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0410: 03 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0440: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0450: 03 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0480: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0490: 03 40 00 00 AB 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    04C0: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    04D0: 03 40 00 00 AD 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0500: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0510: 03 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0530: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0540: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0550: 03 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0570: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0580: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0590: 03 40 00 00 AB 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    05C0: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    05D0: 03 40 00 00 AD 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0600: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0610: 03 40 00 00 0B 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0630: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0640: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0650: 03 40 00 00 0D 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0670: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0680: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0690: 03 40 00 00 AB 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    06A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    06C0: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    06D0: 03 40 00 00 AD 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    06E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0700: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0710: 03 40 00 00 0B 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    0720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0730: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0740: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0750: 03 40 00 00 0D 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0770: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0780: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0790: 03 40 00 00 AB 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    07A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    07C0: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    07D0: 03 40 00 00 AD 00 00 00 06 00 00 00 C0 00 00 00  // .@..............
    07E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0800: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................


DSDT
----
DefinitionBlock ("", "DSDT", 1, "ACRSYS", "ACRPRDCT", 0x00040000)
{
    /*
     * iASL Warning: There were 8 external control methods found during
     * disassembly, but only 0 were resolved (8 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.C000.PPCV, IntObj)
    External (_PR_.C001.PPCV, UnknownObj)
    External (_PR_.C002.PPCV, UnknownObj)
    External (_PR_.C003.PPCV, UnknownObj)
    External (_PR_.C004.PPCV, UnknownObj)
    External (_PR_.C005.PPCV, UnknownObj)
    External (_PR_.C006.PPCV, UnknownObj)
    External (_PR_.C007.PPCV, UnknownObj)
    External (_SB_.APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.WMID, UnknownObj)
    External (_SB_.PCI0.WMID.FEBC, UnknownObj)
    External (_SB_.TPM2.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (MWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (WMID, UnknownObj)

    OperationRegion (DBG0, SystemIO, 0x80, One)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (DBG1, SystemIO, 0x80, 0x02)
    Field (DBG1, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemIO, 0x0CD6, 0x02)
    Field (PMRG, ByteAcc, NoLock, Preserve)
    {
        PMRI,   8, 
        PMRD,   8
    }

    IndexField (PMRI, PMRD, ByteAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMG, SystemMemory, 0xFED81500, 0x03FF)
    Field (GSMG, AnyAcc, NoLock, Preserve)
    {
        Offset (0x0C), 
        Offset (0x0E), 
        GP03,   1, 
        Offset (0x10), 
        Offset (0x12), 
        GP04,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2, 
        Offset (0x3BB), 
            ,   6, 
        PWDE,   1, 
        Offset (0x3E4), 
        BLNK,   2
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
            ,   14, 
        PEWS,   1, 
        WSTA,   1, 
            ,   14, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, 0x0400, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        PRWP [One] = Arg1
        If ((DAS3 == Zero))
        {
            If ((Arg1 <= 0x03))
            {
                PRWP [One] = Zero
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Method (SPTS, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
    }

    Method (SWAK, 1, NotSerialized)
    {
        BLNK = 0x03
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PWDE = One
        PEWD = Zero
    }

    OperationRegion (GNVS, SystemMemory, 0x6F7BA998, 0x00000188)
    Field (GNVS, AnyAcc, NoLock, Preserve)
    {
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        BRTL,   8, 
        TLST,   8, 
        IGDS,   8, 
        LCDA,   16, 
        CSTE,   16, 
        NSTE,   16, 
        CADL,   16, 
        PADL,   16, 
        LIDS,   8, 
        PWRS,   8, 
        BVAL,   32, 
        ADDL,   16, 
        BCMD,   8, 
        SBFN,   8, 
        DID,    32, 
        INFO,   2048, 
        TOML,   8, 
        TOMH,   8, 
        CEBP,   8, 
        C0LS,   8, 
        C1LS,   8, 
        C0HS,   8, 
        C1HS,   8, 
        ROMS,   32, 
        MUXF,   8, 
        PDDN,   8, 
        CNSB,   8, 
        RDHW,   8, 
        DAS3,   8, 
        TNBH,   8, 
        TCP0,   8, 
        TCP1,   8, 
        ATNB,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PWMN,   8, 
        LPTY,   8, 
        M92D,   8, 
        WKPM,   8, 
        ALST,   8, 
        AFUC,   8, 
        EXUS,   8, 
        GV0E,   8, 
        WLSH,   8, 
        TSSS,   8, 
        AOZP,   8, 
        TZFG,   8, 
        BPS0,   8, 
        NAPC,   8, 
        PCBA,   32, 
        PCBL,   32, 
        WLAN,   8, 
        BLTH,   8, 
        GPSS,   8, 
        NFCS,   8, 
        SBTY,   8, 
        BDID,   16, 
        MWTT,   8, 
        ACPM,   8, 
        KBCS,   8, 
        ACEC,   8, 
        MM64,   8, 
        HMB1,   64, 
        HMB2,   64, 
        HMM1,   64, 
        HMM2,   64, 
        HML1,   64, 
        HML2,   64, 
        OSYS,   16
    }

    OperationRegion (OGNS, SystemMemory, 0x6F7BAC98, 0x0000000B)
    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        EGPO,   8, 
        BTBE,   8, 
        M2WL,   8, 
        THPN,   8, 
        PBAR,   8, 
        THPD,   8, 
        LANW,   8, 
        OG07,   8, 
        OG08,   8, 
        OG09,   8, 
        OG10,   8
    }

    OperationRegion (XCMS, SystemIO, 0x72, 0x02)
    Field (XCMS, ByteAcc, NoLock, Preserve)
    {
        CMSI,   8, 
        CMSD,   8
    }

    Method (CMSW, 2, NotSerialized)
    {
        CMSI = Arg0
        CMSD = Arg1
    }

    Method (CMSR, 1, NotSerialized)
    {
        CMSI = Arg0
        Return (CMSD) /* \CMSD */
    }

    Method (SCMP, 2, NotSerialized)
    {
        Name (STG1, Buffer (0x50){})
        Name (STG2, Buffer (0x50){})
        STG1 = Arg0
        STG2 = Arg1
        If ((SizeOf (Arg0) != SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = Zero
        While ((Local0 < SizeOf (Arg0)))
        {
            If ((DerefOf (STG1 [Local0]) != DerefOf (STG2 [Local0]
                )))
            {
                Return (Zero)
            }

            Local0++
        }

        Return (One)
    }

    Name (WNOS, Zero)
    Name (MYOS, Zero)
    Name (HTTS, Zero)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            OSYS = 0x07D9
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                    OSYS = 0x07D9
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                    OSYS = 0x07DC
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                    OSYS = 0x07DD
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                    OSYS = 0x07DF
                }

                If (_OSI ("Windows 2016"))
                {
                    OSSP = One
                    OSTB = 0x71
                    TPOS = 0x71
                    OSYS = 0x07E0
                }

                If (_OSI ("Windows 2017"))
                {
                    OSSP = One
                    OSTB = 0x72
                    TPOS = 0x72
                    OSYS = 0x07E1
                }

                If (_OSI ("Windows 2017.2"))
                {
                    OSSP = One
                    OSTB = 0x73
                    TPOS = 0x73
                    OSYS = 0x07E1
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Name (BUFN, Zero)
    Name (MBUF, Buffer (0x1000){})
    OperationRegion (MDBG, SystemMemory, 0x6F3A0018, 0x00001004)
    Field (MDBG, AnyAcc, Lock, Preserve)
    {
        MDG0,   32768
    }

    Method (DB2H, 1, Serialized)
    {
        SHOW (Arg0)
        MDGC (0x20)
        MDG0 = MBUF /* \MBUF */
    }

    Method (DW2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x08)
        Local0 &= 0xFF
        Local1 &= 0xFF
        DB2H (Local1)
        BUFN--
        DB2H (Local0)
    }

    Method (DD2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x10)
        Local0 &= 0xFFFF
        Local1 &= 0xFFFF
        DW2H (Local1)
        BUFN--
        DW2H (Local0)
    }

    Method (MBGS, 1, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Name (BUFS, Buffer (Local0){})
        BUFS = Arg0
        MDGC (0x20)
        While (Local0)
        {
            MDGC (DerefOf (BUFS [(SizeOf (Arg0) - Local0)]))
            Local0--
        }

        MDG0 = MBUF /* \MBUF */
    }

    Method (SHOW, 1, Serialized)
    {
        MDGC (NTOC ((Arg0 >> 0x04)))
        MDGC (NTOC (Arg0))
    }

    Method (LINE, 0, Serialized)
    {
        Local0 = BUFN /* \BUFN */
        Local0 &= 0x0F
        While (Local0)
        {
            MDGC (Zero)
            Local0++
            Local0 &= 0x0F
        }
    }

    Method (MDGC, 1, Serialized)
    {
        MBUF [BUFN] = Arg0
        BUFN += One
        If ((BUFN > 0x0FFF))
        {
            BUFN &= 0x0FFF
            UP_L (One)
        }
    }

    Method (UP_L, 1, Serialized)
    {
        Local2 = Arg0
        Local2 <<= 0x04
        MOVE (Local2)
        Local3 = (0x1000 - Local2)
        While (Local2)
        {
            MBUF [Local3] = Zero
            Local3++
            Local2--
        }
    }

    Method (MOVE, 1, Serialized)
    {
        Local4 = Arg0
        BUFN = Zero
        Local5 = (0x1000 - Local4)
        While (Local5)
        {
            Local5--
            MBUF [BUFN] = DerefOf (MBUF [Local4])
            BUFN++
            Local4++
        }
    }

    Method (NTOC, 1, Serialized)
    {
        Local0 = (Arg0 & 0x0F)
        If ((Local0 < 0x0A))
        {
            Local0 += 0x30
        }
        Else
        {
            Local0 += 0x37
        }

        Return (Local0)
    }

    Scope (_PR)
    {
        Processor (C000, 0x00, 0x00000410, 0x06){}
        Processor (C001, 0x01, 0x00000410, 0x06){}
        Processor (C002, 0x02, 0x00000410, 0x06){}
        Processor (C003, 0x03, 0x00000410, 0x06){}
        Processor (C004, 0x04, 0x00000410, 0x06){}
        Processor (C005, 0x05, 0x00000410, 0x06){}
        Processor (C006, 0x06, 0x00000410, 0x06){}
        Processor (C007, 0x07, 0x00000410, 0x06){}
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    If ((DAS3 == One))
    {
        Name (_S3, Package (0x04)  // _S3_: S3 System State
        {
            0x03, 
            0x03, 
            Zero, 
            Zero
        })
    }

    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        Zero, 
        Zero
    })
    Scope (_GPE)
    {
        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP4, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP6, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP18, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GP17.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17.XHC1, 0x02) // Device Wake
        }
    }

    Name (PICM, Zero)
    Name (GPIC, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        PICM = Arg0
        GPIC = Arg0
        If (PICM)
        {
            \_SB.DSPI ()
            If (NAPC)
            {
                \_SB.PCI0.NAPE ()
            }
        }
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        SPTS (Arg0)
        If ((Arg0 == One))
        {
            \_SB.S80H (0x51)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0x53)
            SLPS = One
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0x54)
            SLPS = One
            RSTU = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.S80H (0x55)
            BCMD = 0x90
            \_SB.BSMI (Zero)
            \_SB.GSMI (0x03)
        }

        If (CondRefOf (\_SB.TPM2.PTS))
        {
            \_SB.TPM2.PTS (Arg0)
        }

        \_SB.APTS (Arg0)
        If (Arg0)
        {
            \_SB.PCI0.LPC0.ECFG (Zero)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.LPC0.EC0.S3ST = One
            If ((TPDD == 0x02))
            {
                \_SB.PCI0.LPC0.EC0.PTPS = One
            }
            Else
            {
                \_SB.PCI0.LPC0.EC0.PTPS = Zero
            }
        }

        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPC0.EC0.S4ST = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.PCI0.LPC0.EC0.S5ST = One
        }

        \_SB.PCI0.LPC0.EC0.LWAK = LANW /* \LANW */
        MPTS (Arg0)
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        SWAK (Arg0)
        \_SB.AWAK (Arg0)
        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((GPIC != Zero))
            {
                \_SB.DSPI ()
                If (NAPC)
                {
                    \_SB.PCI0.NAPE ()
                }
            }
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0xE3)
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0xE4)
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            \_SB.PCI0.LPC0.ECFG (One)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.LPC0.EC0.S3RM = One
            \_SB.PCI0.LPC0.EC0.TPWA = One
        }

        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPC0.OSTP ()
            \_SB.PCI0.LPC0.EC0.S4RM = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.PCI0.LPC0.EC0.S5RM = One
        }

        MWAK (Arg0)
        Return (Zero)
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((GPIC != Zero))
                {
                    DSPI ()
                    If (\NAPC)
                    {
                        NAPE ()
                    }
                }

                OSTP ()
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (TOM, 0, NotSerialized)
            {
                Local0 = (TOML * 0x00010000)
                Local1 = (TOMH * 0x01000000)
                Local0 += Local1
                Return (Local0)
            }

            Name (CRES, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xF7FFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x78000000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFED3FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02D40000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (CRES, \_SB.PCI0._Y00._MIN, BTMN)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._MAX, BTMX)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._LEN, BTLN)  // _LEN: Length
                CreateDWordField (CRES, \_SB.PCI0._Y01._MIN, BTN1)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._MAX, BTX1)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._LEN, BTL1)  // _LEN: Length
                BTMN = TOM ()
                BTMX = (PCBA - One)
                BTLN = (PCBA - BTMN) /* \_SB_.PCI0._CRS.BTMN */
                BTN1 = (PCBL + One)
                BTL1 = (BTX1 - BTN1) /* \_SB_.PCI0._CRS.BTN1 */
                BTL1 += One
                If ((MM64 == One))
                {
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MIN, M1MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MAX, M1MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._LEN, M1LN)  // _LEN: Length
                    M1MN = HMB1 /* \HMB1 */
                    M1MX = HMM1 /* \HMM1 */
                    M1LN = HML1 /* \HML1 */
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MAX, M2MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._LEN, M2LN)  // _LEN: Length
                    M2MN = HMB2 /* \HMB2 */
                    M2MX = HMM2 /* \HMM2 */
                    M2LN = HML2 /* \HML2 */
                }

                Return (CRES) /* \_SB_.PCI0.CRES */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (BAR3, 0xFD300000)
                Name (MEM1, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y04)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y05)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y06)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._LEN, ML02)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._BAS, MB03)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._LEN, ML03)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x1000
                        If (\NAPC)
                        {
                            ML01 += 0x1000
                        }

                        ML02 = 0x1000
                    }

                    If ((BAR3 != 0xFFF00000))
                    {
                        MB03 = BAR3 /* \_SB_.PCI0.MEMR.BAR3 */
                        ML03 = 0x00100000
                    }

                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            OperationRegion (NAPC, PCI_Config, 0xB8, 0x08)
            Field (NAPC, DWordAcc, NoLock, Preserve)
            {
                NAPX,   32, 
                NAPD,   32
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                NAPX = 0x14300000
                Local0 = NAPD /* \_SB_.PCI0.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                Release (NAPM)
            }

            Name (PR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    LNKE, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
            Name (AR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x14
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Name (NR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x28
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x29
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x2A
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x2B
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x2B
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x24
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    If (\NAPC)
                    {
                        Return (NR00) /* \_SB_.PCI0.NR00 */
                    }
                    Else
                    {
                        Return (AR00) /* \_SB_.PCI0.AR00 */
                    }
                }
                Else
                {
                    Return (PR00) /* \_SB_.PCI0.PR00 */
                }
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x18
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x19
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR01) /* \_SB_.PCI0.GPP0.NR01 */
                        }
                        Else
                        {
                            Return (AR01) /* \_SB_.PCI0.GPP0.AR01 */
                        }
                    }
                    Else
                    {
                        Return (PR01) /* \_SB_.PCI0.GPP0.PR01 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (Package (0x67)
                            {
                                0x46, 
                                0x28, 
                                Zero, 
                                One, 
                                0x02, 
                                0x03, 
                                0x04, 
                                0x05, 
                                0x06, 
                                0x07, 
                                0x08, 
                                0x09, 
                                0x0A, 
                                0x0B, 
                                0x0C, 
                                0x0D, 
                                0x0E, 
                                0x0F, 
                                0x10, 
                                0x11, 
                                0x12, 
                                0x13, 
                                0x14, 
                                0x15, 
                                0x16, 
                                0x17, 
                                0x18, 
                                0x19, 
                                0x1A, 
                                0x1B, 
                                0x1C, 
                                0x1D, 
                                0x1E, 
                                0x1F, 
                                0x20, 
                                0x21, 
                                0x22, 
                                0x23, 
                                0x24, 
                                0x25, 
                                0x26, 
                                0x27, 
                                0x28, 
                                0x29, 
                                0x2A, 
                                0x2B, 
                                0x2C, 
                                0x2D, 
                                0x2E, 
                                0x2F, 
                                0x30, 
                                0x31, 
                                0x32, 
                                0x33, 
                                0x34, 
                                0x35, 
                                0x36, 
                                0x37, 
                                0x38, 
                                0x39, 
                                0x3A, 
                                0x3B, 
                                0x3C, 
                                0x3D, 
                                0x3E, 
                                0x3F, 
                                0x40, 
                                0x41, 
                                0x42, 
                                0x43, 
                                0x44, 
                                0x45, 
                                0x46, 
                                0x47, 
                                0x48, 
                                0x49, 
                                0x4A, 
                                0x4B, 
                                0x4C, 
                                0x4D, 
                                0x4E, 
                                0x4F, 
                                0x50, 
                                0x51, 
                                0x52, 
                                0x53, 
                                0x54, 
                                0x55, 
                                0x56, 
                                0x57, 
                                0x58, 
                                0x59, 
                                0x5A, 
                                0x5B, 
                                0x5C, 
                                0x5D, 
                                0x5E, 
                                0x5F, 
                                0x60, 
                                0x61, 
                                0x62, 
                                0x63, 
                                0x64
                            })
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                            Divide (Arg0, 0x0A, Local0, Local1)
                            ^^^^LPC0.EC0.BRTS = Local1
                        }

                        Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                        {
                            Local0 = ^^^^LPC0.EC0.BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                            Local0 *= 0x0A
                            Return (Local0)
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x1C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x1D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR02) /* \_SB_.PCI0.GPP1.NR02 */
                        }
                        Else
                        {
                            Return (AR02) /* \_SB_.PCI0.GPP1.AR02 */
                        }
                    }
                    Else
                    {
                        Return (PR02) /* \_SB_.PCI0.GPP1.PR02 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (Package (0x67)
                            {
                                0x46, 
                                0x28, 
                                Zero, 
                                One, 
                                0x02, 
                                0x03, 
                                0x04, 
                                0x05, 
                                0x06, 
                                0x07, 
                                0x08, 
                                0x09, 
                                0x0A, 
                                0x0B, 
                                0x0C, 
                                0x0D, 
                                0x0E, 
                                0x0F, 
                                0x10, 
                                0x11, 
                                0x12, 
                                0x13, 
                                0x14, 
                                0x15, 
                                0x16, 
                                0x17, 
                                0x18, 
                                0x19, 
                                0x1A, 
                                0x1B, 
                                0x1C, 
                                0x1D, 
                                0x1E, 
                                0x1F, 
                                0x20, 
                                0x21, 
                                0x22, 
                                0x23, 
                                0x24, 
                                0x25, 
                                0x26, 
                                0x27, 
                                0x28, 
                                0x29, 
                                0x2A, 
                                0x2B, 
                                0x2C, 
                                0x2D, 
                                0x2E, 
                                0x2F, 
                                0x30, 
                                0x31, 
                                0x32, 
                                0x33, 
                                0x34, 
                                0x35, 
                                0x36, 
                                0x37, 
                                0x38, 
                                0x39, 
                                0x3A, 
                                0x3B, 
                                0x3C, 
                                0x3D, 
                                0x3E, 
                                0x3F, 
                                0x40, 
                                0x41, 
                                0x42, 
                                0x43, 
                                0x44, 
                                0x45, 
                                0x46, 
                                0x47, 
                                0x48, 
                                0x49, 
                                0x4A, 
                                0x4B, 
                                0x4C, 
                                0x4D, 
                                0x4E, 
                                0x4F, 
                                0x50, 
                                0x51, 
                                0x52, 
                                0x53, 
                                0x54, 
                                0x55, 
                                0x56, 
                                0x57, 
                                0x58, 
                                0x59, 
                                0x5A, 
                                0x5B, 
                                0x5C, 
                                0x5D, 
                                0x5E, 
                                0x5F, 
                                0x60, 
                                0x61, 
                                0x62, 
                                0x63, 
                                0x64
                            })
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                            Divide (Arg0, 0x0A, Local0, Local1)
                            ^^^^LPC0.EC0.BRTS = Local1
                        }

                        Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                        {
                            Local0 = ^^^^LPC0.EC0.BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                            Local0 *= 0x0A
                            Return (Local0)
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x20
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x21
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x22
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x23
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR03) /* \_SB_.PCI0.GPP2.NR03 */
                        }
                        Else
                        {
                            Return (AR03) /* \_SB_.PCI0.GPP2.AR03 */
                        }
                    }
                    Else
                    {
                        Return (PR03) /* \_SB_.PCI0.GPP2.PR03 */
                    }
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00010004)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x24
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x25
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x26
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x27
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR04) /* \_SB_.PCI0.GPP3.NR04 */
                        }
                        Else
                        {
                            Return (AR04) /* \_SB_.PCI0.GPP3.AR04 */
                        }
                    }
                    Else
                    {
                        Return (PR04) /* \_SB_.PCI0.GPP3.PR04 */
                    }
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00010005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x28
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x29
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR05) /* \_SB_.PCI0.GPP4.NR05 */
                        }
                        Else
                        {
                            Return (AR05) /* \_SB_.PCI0.GPP4.AR05 */
                        }
                    }
                    Else
                    {
                        Return (PR05) /* \_SB_.PCI0.GPP4.PR05 */
                    }
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00010006)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x2C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x2D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR06) /* \_SB_.PCI0.GPP5.NR06 */
                        }
                        Else
                        {
                            Return (AR06) /* \_SB_.PCI0.GPP5.AR06 */
                        }
                    }
                    Else
                    {
                        Return (PR06) /* \_SB_.PCI0.GPP5.PR06 */
                    }
                }
            }

            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                CMSI = Arg0
                CMSD = Arg1
            }

            Method (CMSR, 1, NotSerialized)
            {
                CMSI = Arg0
                Return (CMSD) /* \_SB_.PCI0.CMSD */
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00010007)  // _ADR: Address
                Name (PR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x30
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x31
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x32
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x33
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR07) /* \_SB_.PCI0.GPP6.NR07 */
                        }
                        Else
                        {
                            Return (AR07) /* \_SB_.PCI0.GPP6.AR07 */
                        }
                    }
                    Else
                    {
                        Return (PR07) /* \_SB_.PCI0.GPP6.PR07 */
                    }
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (WRDX, Package (0x03)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }, 

                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }
                    })
                    Method (WRDD, 0, Serialized)
                    {
                        DerefOf (WRDX [One]) [Zero] = 0x07
                        If ((CMSR (0x91) == 0x04))
                        {
                            DerefOf (WRDX [One]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [One]) [One] = 0x4150
                        }

                        DerefOf (WRDX [0x02]) [Zero] = 0x07
                        If ((CMSR (0x91) == 0x04))
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4150
                        }

                        Return (WRDX) /* \_SB_.PCI0.GPP6.PXSX.WRDX */
                    }
                }
            }

            Device (GP17)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x19, Zero))
                    }
                }

                Name (PR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x34
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x35
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x36
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x37
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR17) /* \_SB_.PCI0.GP17.NR17 */
                        }
                        Else
                        {
                            Return (AR17) /* \_SB_.PCI0.GP17.AR17 */
                        }
                    }
                    Else
                    {
                        Return (PR17) /* \_SB_.PCI0.GP17.PR17 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x07)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240, 
                            0x00031000, 
                            0x00032000
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (BCLB) /* \_SB_.PCI0.GP17.VGA_.LCD_.BCLB */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                        }
                    }
                }

                Device (PSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (ACP)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                }

                Name (UPCN, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC3, Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (UPC2, Package (0x04)
                {
                    0xFF, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (UPCP, Package (0x04)
                {
                    0xFF, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC4, Package (0x04)
                {
                    0xFF, 
                    0x0A, 
                    Zero, 
                    Zero
                })
                Name (PLDC, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLDD, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD2, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD3, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD4, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLDP, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x03))
                    }

                    Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                    {
                        Return (Zero)
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCP) /* \_SB_.PCI0.GP17.UPCP */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDP) /* \_SB_.PCI0.GP17.PLDP */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }
                    }
                }

                Name (XUPC, Package (0x04)
                {
                    0xFF, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (XUP1, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (XPLD, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
                })
                Name (NPLD, Zero)
                Name (WPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                        /* 0008 */  0x25, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                        /* 0010 */  0x2C, 0x01, 0xBE, 0x00                           // ,...
                    }
                })
                Name (DPLD, Package (0x01)
                {
                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                    }
                })
                Name (BPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x00,  // ....d.d.
                        /* 0008 */  0x24, 0x41, 0x80, 0x01, 0x00, 0x00, 0x04, 0x00,  // $A......
                        /* 0010 */  0x00, 0x03, 0xAB, 0x02                           // ....
                    }
                })
                Name (CPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                        /* 0008 */  0x25, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                Device (XHC1)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x03))
                    }

                    Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                    {
                        Return (Zero)
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (UBC1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (XUPC) /* \_SB_.PCI0.GP17.XUPC */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (DPLD) /* \_SB_.PCI0.GP17.DPLD */
                            }

                            Device (PRT1)
                            {
                                Name (_ADR, One)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    If ((NPLD == Zero))
                                    {
                                        Return (WPLD) /* \_SB_.PCI0.GP17.WPLD */
                                    }
                                    ElseIf ((NPLD == One))
                                    {
                                        Return (BPLD) /* \_SB_.PCI0.GP17.BPLD */
                                    }
                                    Else
                                    {
                                        Return (CPLD) /* \_SB_.PCI0.GP17.CPLD */
                                    }
                                }
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }
                    }
                }

                Device (MP2C)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                }
            }

            Device (GP18)
            {
                Name (_ADR, 0x00080002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKH, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKF, 
                        Zero
                    }
                })
                Name (AR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x17
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x15
                    }
                })
                Name (NR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x36
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x37
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x34
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x35
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR18) /* \_SB_.PCI0.GP18.NR18 */
                        }
                        Else
                        {
                            Return (AR18) /* \_SB_.PCI0.GP18.AR18 */
                        }
                    }
                    Else
                    {
                        Return (PR18) /* \_SB_.PCI0.GP18.PR18 */
                    }
                }

                Device (SATA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (HPET)
            {
                Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((HPEN == One))
                    {
                        If ((OSTB >= 0x40))
                        {
                            Return (0x0F)
                        }

                        HPEN = Zero
                        Return (One)
                    }

                    Return (One)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y07)
                    })
                    CreateDWordField (BUF0, \_SB.PCI0.HPET._CRS._Y07._BAS, HPEB)  // _BAS: Base Address
                    Local0 = 0xFED00000
                    HPEB = (Local0 & 0xFFFFFC00)
                    Return (BUF0) /* \_SB_.PCI0.HPET._CRS.BUF0 */
                }
            }

            Device (SMBS)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (COPR)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.TMR_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.TMR_.BUF1 */
                    }
                }

                Device (KBC0)
                {
                    Name (_HID, EisaId ("FUJ7401"))  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0400,             // Range Minimum
                            0x0400,             // Range Maximum
                            0x01,               // Alignment
                            0xD0,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x0C,               // Length
                            )
                    })
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFFF00000,         // Address Base
                            0x00100000,         // Address Length
                            _Y08)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._LEN, PSIZ)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._BAS, PBAS)  // _BAS: Base Address
                        PSIZ = ROMS /* \ROMS */
                        Local0 = (ROMS - One)
                        PBAS = (Ones - Local0)
                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }
                }

                Mutex (PSMX, 0x00)
            }
        }

        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x0C), 
            SIRA,   8, 
            SIRB,   8, 
            SIRC,   8, 
            SIRD,   8, 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x17), 
            SDCL,   8, 
            Offset (0x1A), 
            SDIO,   8, 
            Offset (0x30), 
            USB1,   8, 
            Offset (0x34), 
            USB3,   8, 
            Offset (0x41), 
            SATA,   8, 
            Offset (0x62), 
            GIOC,   8, 
            Offset (0x70), 
            I2C0,   8, 
            I2C1,   8, 
            I2C2,   8, 
            I2C3,   8, 
            URT0,   8, 
            URT1,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            If (PICM)
            {
                HDAD = Arg0
                SDCL = Arg0
            }
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            If (PICM)
            {
                USB1 = Arg0
                USB3 = Arg0
            }
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            If (PICM)
            {
                SATA = Arg0
            }
        }

        Name (PRS1, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,5,6,10,11}
        })
        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRA && (PIRA != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRA = Local0
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRB && (PIRB != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRB = Local0
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRC && (PIRC != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRC = Local0
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRD && (PIRD != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRD = Local0
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRE && (PIRE != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRF && (PIRF != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRG && (PIRG != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRH && (PIRH != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }

        Method (GSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xE4
            Sleep (0x02)
        }

        Method (S80H, 1, NotSerialized)
        {
            P80H = Arg0
        }

        Method (BSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xBE
            Sleep (One)
        }
    }

    Name (TSOS, 0x75)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }

        If (_OSI ("Linux"))
        {
            TSOS = 0x80
        }
    }

    Scope (_SB)
    {
        OperationRegion (SMIC, SystemMemory, 0xFED80000, 0x00800000)
        Field (SMIC, ByteAcc, NoLock, Preserve)
        {
            Offset (0x36A), 
            SMIB,   8
        }

        OperationRegion (SSMI, SystemIO, SMIB, 0x02)
        Field (SSMI, AnyAcc, NoLock, Preserve)
        {
            SMIW,   16
        }

        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
                ,   4, 
            NI2C,   1, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
                ,   3, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1, 
            Offset (0xA30D0), 
                ,   13, 
            LCLK,   2
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            Offset (0x1F), 
            IM1F,   8, 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FMIS, SystemMemory, 0xFED80E00, 0x0100)
        Field (FMIS, AnyAcc, NoLock, Preserve)
        {
            Offset (0x40), 
                ,   13, 
            I24M,   1
        }

        OperationRegion (FGIO, SystemMemory, 0xFED81500, 0x0300)
        Field (FGIO, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA8), 
                ,   22, 
            O042,   1, 
            Offset (0x164), 
                ,   22, 
            O089,   1
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, Zero, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 1, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (IUA0) /* \_SB_.IUA0 */
            }

            If ((Arg0 == One))
            {
                Return (IUA1) /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Return (IUA2) /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Return (IUA3) /* \_SB_.IUA3 */
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local3 = (One << Arg0)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (FPIC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC9000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC7000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (UOL0)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT0D && UT0E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, 0x03)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCA000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC8000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (UOL1)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT1D && UT1E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, 0x03)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {15}
                Memory32Fixed (ReadWrite,
                    0xFEDCE000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCC000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (UOL2)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT2D && UT2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, 0x03)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {5}
                Memory32Fixed (ReadWrite,
                    0xFEDCF000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCD000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (UOL3)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT3D && UT3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, 0x03)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_ADR, Zero)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_ADR, One)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {14}
                Memory32Fixed (ReadWrite,
                    0xFEDC4000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC2D && IC2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, 0x03)
                }
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {6}
                Memory32Fixed (ReadWrite,
                    0xFEDC5000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC3D && IC3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, 0x03)
                }
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = 0xFF00
            IM15 = One
            IM16 = One
            IM20 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            IM4A = One
            IM58 = One
            IM4B = One
            IM57 = One
            IM6D = One
            IM1F = One
            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5}
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5}
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (ECRS, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5}
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveLow, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (MHID, "AMDI0041")
        Name (MCID, "AMDI0041")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCICC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If ((EMMD == Zero))
                {
                    Return (AHID) /* \_SB_.AHID */
                }

                If ((EMMD == One))
                {
                    Return (SHID) /* \_SB_.SHID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MHID) /* \_SB_.MHID */
                }
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If ((EMMD == Zero))
                {
                    Return (ACID) /* \_SB_.ACID */
                }

                If ((EMMD == One))
                {
                    Return (SCID) /* \_SB_.SCID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MCID) /* \_SB_.MCID */
                }
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    If ((EMMD == One))
                    {
                        Return (DCRS) /* \_SB_.DCRS */
                    }

                    Return (ECRS) /* \_SB_.ECRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, Zero)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }

            Device (CARD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    If ((EMMD == Zero))
                    {
                        Return (One)
                    }

                    Return (Zero)
                }
            }
        }

        Name (D0ST, One)
        Name (D3ST, One)
        PowerResource (P0ST, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D0ST) /* \_SB_.D0ST */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D0ST = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D0ST = Zero
            }
        }

        PowerResource (P3ST, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D3ST) /* \_SB_.D3ST */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D3ST = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D3ST = Zero
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER0)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y09)
                    IRQNoFlags (_Y0A)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR1._CRS._Y0A._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR0))
                Return (BUF0) /* \_SB_.PCI0.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER1)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0B)
                    IRQNoFlags (_Y0C)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR2._CRS._Y0C._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR1))
                Return (BUF0) /* \_SB_.PCI0.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER2)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0D)
                    IRQNoFlags (_Y0E)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR3._CRS._Y0E._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR2))
                Return (BUF0) /* \_SB_.PCI0.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER3)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0F)
                    IRQNoFlags (_Y10)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR4._CRS._Y10._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR3))
                Return (BUF0) /* \_SB_.PCI0.UAR4._CRS.BUF0 */
            }
        }
    }

    Scope (_SB.PCI0.GP17.VGA)
    {
        Device (CAMF)
        {
            Name (_ADR, 0x1000)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((O042 == One))
                {
                    Return (0x0F)
                }

                Return (0x0B)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                O042 = One
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                O042 = Zero
            }
        }

        Device (CAMR)
        {
            Name (_ADR, 0x2000)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((O089 == One))
                {
                    Return (0x0F)
                }

                Return (0x0B)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                O089 = One
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                O089 = Zero
            }
        }

        Method (RCPU, 0, NotSerialized)
        {
            O089 = One
        }

        Method (RCPD, 0, NotSerialized)
        {
            O089 = Zero
        }

        Method (FCPU, 0, NotSerialized)
        {
            O042 = One
        }

        Method (FCPD, 0, NotSerialized)
        {
            O042 = Zero
        }

        Method (ICLE, 0, NotSerialized)
        {
            I24M = Zero
        }

        Method (ICLD, 0, NotSerialized)
        {
            I24M = One
        }
    }

    Scope (_SB.PCI0.GP18.SATA)
    {
        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            P0ST
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            P3ST
        })
        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            If ((ST_D == One))
            {
                Return (0x04)
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            If ((ST_D == One))
            {
                IO80 = 0x88
                SMIW = 0xD6
            }
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            If ((ST_D == One))
            {
                IO80 = 0x77
                SMIW = 0xD5
            }
        }
    }

    Scope (\)
    {
        OperationRegion (COMP, SystemMemory, 0x6F7BAD18, 0x0200)
        Field (COMP, AnyAcc, Lock, Preserve)
        {
            RSR0,   32, 
            BDDD,   8, 
            CPFB,   8, 
            PBTI,   8, 
            BRLV,   8, 
            CAVR,   8, 
            TJMA,   16, 
            CORE,   8, 
            TPDF,   8, 
            TPLF,   8, 
            TPDD,   8, 
            TMUD,   8, 
            CTUR,   8, 
            CG17,   8, 
            CG18,   8, 
            CG19,   8, 
            CG20,   8, 
            CG21,   8, 
            CG22,   8, 
            CG23,   8, 
            CG24,   8, 
            CG25,   8, 
            CG26,   8, 
            CG27,   8, 
            CG28,   8, 
            CG29,   8, 
            CG30,   8, 
            CG31,   8, 
            SFNO,   16, 
            STDT,   16, 
            BFDT,   1024, 
            ESMS,   8, 
            ESMB,   256, 
            RSR1,   472, 
            IDFD,   1024, 
            RSR2,   1024
        }

        Mutex (CFMX, 0x00)
        Scope (_SB)
        {
            OperationRegion (SMIO, SystemIO, 0xB0, 0x02)
            Field (SMIO, ByteAcc, NoLock, Preserve)
            {
                SMIM,   8, 
                SMID,   8
            }

            Method (CSMI, 2, NotSerialized)
            {
                Acquire (CFMX, 0xFFFF)
                SMID = Arg1
                SMIM = Arg0
                Release (CFMX)
            }
        }

        Scope (_SB.PCI0.LPC0.RTC)
        {
            OperationRegion (RCM0, SystemCMOS, Zero, 0x10)
            Field (RCM0, ByteAcc, NoLock, Preserve)
            {
                AccessAs (ByteAcc, 0x00), 
                RTCS,   8, 
                Offset (0x02), 
                RTCM,   8, 
                Offset (0x04), 
                RTCH,   8, 
                Offset (0x06), 
                RTCW,   8, 
                RTCD,   8
            }
        }

        Scope (_SB.PCI0.LPC0)
        {
            Device (PS2M)
            {
                Name (TPID, Package (0x06)
                {
                    Package (0x05)
                    {
                        Zero, 
                        0xFF, 
                        0xFF, 
                        0x8A1B2E4F, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x2C, 
                        0x20, 
                        "SYNA7DB5", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0x02, 
                        0xFF, 
                        0xFF, 
                        0x10058416, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        0x03, 
                        0x15, 
                        One, 
                        "ELAN0504", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFE, 
                        0x2C, 
                        0x20, 
                        "MSFT0001", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        "MSFT0003", 
                        0x030FD041
                    }
                })
                Method (_HID, 0, Serialized)  // _HID: Hardware ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFF)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFF
                        }

                    }

                    Return (TPDS (0x03, 0xFF, "MSFT0003"))
                }

                Method (_CID, 0, Serialized)  // _CID: Compatible ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFF)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFF
                        }

                    }

                    Return (TPDS (0x04, 0xFF, 0x030FD041))
                }

                Method (TPDS, 3, NotSerialized)
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != Arg1) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Return (Arg2)
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    Return (DerefOf (DerefOf (TPID [Local0]) [Arg0]))
                }

                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    Switch (TPDD)
                    {
                        Case (Zero)
                        {
                            If (Ones)
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Case (One)
                        {
                            Return (0x0F)
                        }
                        Case (0x02)
                        {
                            Return (Zero)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {12}
                })
            }
        }

        Scope (_SB.I2CD)
        {
            Device (TPAD)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_UID, One)  // _UID: Unique ID
                Name (HID2, Zero)
                Name (TPID, Package (0x06)
                {
                    Package (0x05)
                    {
                        Zero, 
                        0xFF, 
                        0xFF, 
                        0x8A1B2E4F, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x2C, 
                        0x20, 
                        "SYNA7DB5", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0x02, 
                        0xFF, 
                        0xFF, 
                        0x10058416, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        0x03, 
                        0x15, 
                        One, 
                        "ELAN0504", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFE, 
                        0x2C, 
                        0x20, 
                        "MSFT0001", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        "MSFT0003", 
                        0x030FD041
                    }
                })
                Name (SBFB, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, _Y11, Exclusive,
                        )
                })
                Name (SBFI, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, )
                    {
                        0x0000005A,
                    }
                })
                Name (SBFG, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x005A
                        }
                })
                CreateWordField (SBFB, \_SB.I2CD.TPAD._Y11._ADR, ADR0)  // _ADR: Address
                Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                {
                    Return (Zero)
                }

                Method (_HID, 0, Serialized)  // _HID: Hardware ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFE)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFE
                        }

                    }

                    Return (TPDS (0x03, 0xFE, "MSFT0001"))
                }

                Method (_CID, 0, Serialized)  // _CID: Compatible ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFE)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFE
                        }

                    }

                    Return (TPDS (0x04, 0xFE, "PNP0C50"))
                }

                Method (TPDS, 3, NotSerialized)
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != Arg1) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Return (Arg2)
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    Return (DerefOf (DerefOf (TPID [Local0]) [Arg0]))
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {
                        If ((Arg2 == Zero))
                        {
                            If ((Arg1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

                        If ((Arg2 == One))
                        {
                            Return (HID2) /* \_SB_.I2CD.TPAD.HID2 */
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    If ((Arg0 == ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b")))
                    {
                        If ((Arg2 == Zero))
                        {
                            If ((Arg1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

                        If ((Arg2 == One))
                        {
                            Return (ConcatenateResTemplate (SBFB, SBFG))
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    Switch (TPDD)
                    {
                        Case (Zero)
                        {
                            If (Zero)
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Case (One)
                        {
                            Return (Zero)
                        }
                        Case (0x02)
                        {
                            Return (0x0F)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != 0xFE) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Break
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    ADR0 = DerefOf (DerefOf (TPID [Local0]) [One])
                    HID2 = DerefOf (DerefOf (TPID [Local0]) [0x02])
                    If ((OSYS < 0x07DC))
                    {
                        Return (SBFI) /* \_SB_.I2CD.TPAD.SBFI */
                    }

                    If (Ones)
                    {
                        Return (ConcatenateResTemplate (SBFB, SBFG))
                    }

                    Return (ConcatenateResTemplate (SBFB, SBFI))
                }
            }
        }
    }

    Scope (_SB.PCI0.LPC0)
    {
        Method (ECOK, 0, NotSerialized)
        {
            If ((^EC0.OKEC == One))
            {
                Return (One)
            }
            Else
            {
                Return (Zero)
            }
        }

        Device (EC0)
        {
            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
            Name (_GPE, 0x03)  // _GPE: General Purpose Events
            Name (OKEC, One)
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
            })
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x03))
                {
                    OKEC = Arg1
                    OSTP ()
                    ECFG (One)
                }
            }

            OperationRegion (ECMM, SystemMemory, 0xFE000800, 0x1000)
            Field (ECMM, AnyAcc, Lock, Preserve)
            {
                    ,   1, 
                LCDS,   1, 
                    ,   5, 
                Offset (0x01), 
                HTBN,   8, 
                HTBT,   8, 
                Offset (0x07), 
                    ,   6, 
                PTPS,   1, 
                Offset (0x08), 
                Offset (0x13), 
                C1FR,   16, 
                G1FR,   16, 
                TPWA,   1, 
                Offset (0x20), 
                DCAC,   1, 
                Offset (0x2A), 
                S1TV,   8, 
                Offset (0x2D), 
                DSPM,   1, 
                Offset (0x5D), 
                ERIB,   16, 
                Offset (0x61), 
                SMST,   8, 
                SMAD,   8, 
                SMCM,   8, 
                SMD0,   256, 
                BCNT,   8, 
                SMAA,   24, 
                SMBN,   8, 
                Offset (0x90), 
                BMFN,   72, 
                BATD,   56, 
                Offset (0xA1), 
                    ,   1, 
                VIDO,   1, 
                TOUP,   1, 
                Offset (0xA2), 
                ODTS,   8, 
                OSTY,   4, 
                    ,   1, 
                PBOV,   1, 
                ECRD,   1, 
                ADPT,   1, 
                PWAK,   1, 
                MWAK,   1, 
                LWAK,   1, 
                RWAK,   1, 
                WWAK,   1, 
                UWAK,   1, 
                KWAK,   1, 
                TWAK,   1, 
                CCAC,   1, 
                AOAC,   1, 
                BLAC,   1, 
                PSRC,   1, 
                BOAC,   1, 
                LCAC,   1, 
                AAAC,   1, 
                ACAC,   1, 
                S3ST,   1, 
                S3RM,   1, 
                S4ST,   1, 
                S4RM,   1, 
                S5ST,   1, 
                S5RM,   1, 
                CSST,   1, 
                CSRM,   1, 
                OSTT,   8, 
                OSST,   8, 
                THLT,   8, 
                TCNL,   8, 
                MODE,   1, 
                    ,   2, 
                INIT,   1, 
                FAN1,   1, 
                FAN2,   1, 
                FANT,   1, 
                SKNM,   1, 
                SDTM,   8, 
                FSSN,   4, 
                FANU,   4, 
                PCVL,   6, 
                SWTO,   1, 
                TTHR,   1, 
                TTHM,   1, 
                THTL,   1, 
                TFCT,   1, 
                NPST,   5, 
                CTMP,   8, 
                CTML,   8, 
                EST3,   8, 
                SKTB,   8, 
                SKTC,   8, 
                DPOT,   8, 
                EST1,   8, 
                EST2,   8, 
                    ,   1, 
                LIDF,   1, 
                PMEE,   1, 
                PWBE,   1, 
                RNGE,   1, 
                BTWE,   1, 
                Offset (0xB9), 
                BRTS,   8, 
                S35M,   1, 
                S35S,   1, 
                    ,   1, 
                MSFG,   1, 
                FFEN,   1, 
                FFST,   1, 
                Offset (0xBB), 
                WLAT,   1, 
                BTAT,   1, 
                WLEX,   1, 
                BTEX,   1, 
                KLSW,   1, 
                WLOK,   1, 
                AT3G,   1, 
                EX3G,   1, 
                PJID,   8, 
                CPUJ,   3, 
                CPNM,   3, 
                GATY,   2, 
                Offset (0xC0), 
                BTY0,   1, 
                BAM0,   1, 
                BAL0,   1, 
                    ,   1, 
                BMF0,   4, 
                BST0,   8, 
                BRC0,   16, 
                BSN0,   16, 
                BPV0,   16, 
                BDV0,   16, 
                BDC0,   16, 
                BFC0,   16, 
                GAU0,   8, 
                BAT0,   8, 
                BPC0,   16, 
                BAC0,   16, 
                BCG0,   16, 
                BFCB,   16, 
                BTPB,   16, 
                BOL0,   1, 
                BFS0,   1, 
                Offset (0xDB), 
                ORRF,   1, 
                Offset (0xDC), 
                Offset (0xDD)
            }

            OperationRegion (ERAM, EmbeddedControl, Zero, 0xFF)
            Field (ERAM, ByteAcc, Lock, Preserve)
            {
                Offset (0x5F), 
                ERBD,   8, 
                SMPR,   8, 
                Offset (0x62)
            }

            Method (FANG, 1, NotSerialized)
            {
                Local0 = EIDR (Arg0)
                Return (Local0)
            }

            Method (FANW, 2, NotSerialized)
            {
                EIDW (Arg0, Arg1)
                Return (Arg1)
            }

            Method (TUVR, 1, NotSerialized)
            {
                Return (0x05)
            }

            Method (THRO, 1, NotSerialized)
            {
                ATHR (Arg0)
            }

            Method (CLCK, 1, NotSerialized)
            {
                Return (Zero)
            }

            Method (PCLK, 0, NotSerialized)
            {
                APCL ()
            }

            Method (ATHR, 1, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    Return (0xFF)
                }
                ElseIf ((Arg0 == One))
                {
                    Return (\_PR.C000.PPCV) /* External reference */
                }
                ElseIf ((Arg0 == 0x02))
                {
                    Return (TTHR) /* \_SB_.PCI0.LPC0.EC0_.TTHR */
                }
                Else
                {
                    Return (0xFF)
                }
            }

            Method (APCL, 0, NotSerialized)
            {
                Local0 = PCVL /* \_SB_.PCI0.LPC0.EC0_.PCVL */
                Local1 = NPST /* \_SB_.PCI0.LPC0.EC0_.NPST */
                Local2 = CPNM /* \_SB_.PCI0.LPC0.EC0_.CPNM */
                If ((Local0 <= Local1))
                {
                    Local3 = Local0
                }
                Else
                {
                    Local3 = Local1
                }

                \_PR.C000.PPCV = Local3
                If ((Local2 >= One))
                {
                    \_PR.C001.PPCV = Local3
                }

                If ((Local2 >= 0x02))
                {
                    \_PR.C002.PPCV = Local3
                    \_PR.C003.PPCV = Local3
                }

                If ((Local2 >= 0x03))
                {
                    \_PR.C004.PPCV = Local3
                    \_PR.C005.PPCV = Local3
                    \_PR.C006.PPCV = Local3
                    \_PR.C007.PPCV = Local3
                }

                Notify (\_PR.C000, 0x80) // Performance Capability Change
                If ((Local2 >= One))
                {
                    Notify (\_PR.C001, 0x80) // Performance Capability Change
                }

                If ((Local2 >= 0x02))
                {
                    Notify (\_PR.C002, 0x80) // Performance Capability Change
                    Notify (\_PR.C003, 0x80) // Performance Capability Change
                }

                If ((Local2 >= 0x03))
                {
                    Notify (\_PR.C004, 0x80) // Performance Capability Change
                    Notify (\_PR.C005, 0x80) // Performance Capability Change
                    Notify (\_PR.C006, 0x80) // Performance Capability Change
                    Notify (\_PR.C007, 0x80) // Performance Capability Change
                }
            }

            Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_10====="
            }

            Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_11====="
                P80H = 0x11
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
                If ((OSYS >= 0x07D6))
                {
                    Notify (^^^GP17.VGA.LCD, 0x87) // Device-Specific
                }

                ^^^WMID.FEBC [One] = BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                ^^^WMID.FEBC [Zero] = 0x04
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_12====="
                P80H = 0x12
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
                If ((OSYS >= 0x07D6))
                {
                    Notify (^^^GP17.VGA.LCD, 0x86) // Device-Specific
                }

                ^^^WMID.FEBC [One] = BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                ^^^WMID.FEBC [Zero] = 0x04
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q15, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_15====="
                P80H = 0x15
                Notify (LID0, 0x80) // Status Change
            }

            Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_20====="
            }

            Method (_Q22, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x22
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q32, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_32====="
            }

            Method (_Q33, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_33====="
            }

            Method (_Q34, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_34====="
            }

            Method (_Q37, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x37
                Debug = "=====PROJECT_QUERY_37====="
                Notify (ACAD, 0x80) // Status Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
                PWRS = ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                ^^^WMID.FEBC [One] = ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                ^^^WMID.FEBC [Zero] = 0x08
                Notify (WMID, 0xBC) // Device-Specific
                DCAC = Zero
            }

            Method (_Q41, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x41
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = 0x8A
                ^^^WMID.FEBC [0x02] = One
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q43, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x43
                Notify (I2CD, One) // Device Check
            }

            Method (_Q45, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x45
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q46, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x46
                ^^^WMID.FEBC [Zero] = 0x02
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q4C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                CSMI (0x4C, Zero)
                Stall (0xFF)
                Stall (0xFF)
            }

            Method (_Q63, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x63
                Notify (AAMC, 0x80) // Status Change
            }

            OperationRegion (PRT0, SystemIO, 0x80, 0x04)
            Field (PRT0, ByteAcc, Lock, Preserve)
            {
                P80H,   8
            }

            Method (_Q1D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_1D====="
                P80H = 0x1D
                PCLK ()
            }

            Method (_Q1E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_1E====="
                P80H = 0x1E
                If (CTUR)
                {
                    If ((TFCT == Zero))
                    {
                        CSMI (0xDA, Zero)
                    }
                    Else
                    {
                        CSMI (0xDA, One)
                    }
                }
            }

            Method (_Q24, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_24====="
                P80H = 0x24
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q25, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_25====="
                P80H = 0x25
                Sleep (0x03E8)
                Notify (BAT1, 0x81) // Information Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Name (CTSL, Package (0x19)
            {
                0x10, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x17, 
                0x20, 
                0x21, 
                0x22, 
                0x24, 
                0x25, 
                0x26, 
                0x28, 
                0x90, 
                0x91, 
                0xFE, 
                0x92, 
                0x93, 
                0x94, 
                0x95, 
                0x96, 
                0x97, 
                0x98, 
                0x99
            })
            Mutex (CFMX, 0x00)
            Method (CFUN, 4, Serialized)
            {
                Name (ESRC, 0x05)
                If ((DerefOf (Arg0 [Zero]) == 0x15))
                {
                    CreateWordField (Arg1, Zero, SFUN)
                    If ((SFUN == 0x9001)){}
                    ElseIf ((SFUN == 0x9002))
                    {
                        STDT = Zero
                        BFDT = Zero
                        BFDT = Zero
                        STDT = One
                    }
                    ElseIf ((SFUN == 0x9000))
                    {
                        ESMC (Arg2)
                        If ((ESMS != 0xFF))
                        {
                            Local1 = Buffer (0x80){}
                            Local1 [Zero] = 0x80
                            Local1 [One] = ESMS /* \ESMS */
                            Local3 = ESMB /* \ESMB */
                            Local1 [0x02] = DerefOf (Local3 [Zero])
                            Local1 [0x03] = DerefOf (Local3 [One])
                            Local1 [0x04] = DerefOf (Local3 [0x02])
                            Local1 [0x05] = DerefOf (Local3 [0x03])
                            Local1 [0x06] = DerefOf (Local3 [0x04])
                            Local1 [0x07] = DerefOf (Local3 [0x05])
                            Local1 [0x08] = DerefOf (Local3 [0x06])
                            Local1 [0x09] = DerefOf (Local3 [0x07])
                            Local1 [0x0A] = DerefOf (Local3 [0x08])
                            Local1 [0x0B] = DerefOf (Local3 [0x09])
                            Local1 [0x0C] = DerefOf (Local3 [0x0A])
                            Local1 [0x0D] = DerefOf (Local3 [0x0B])
                            Local1 [0x0E] = DerefOf (Local3 [0x0C])
                            Local1 [0x0F] = DerefOf (Local3 [0x0D])
                            Local1 [0x10] = DerefOf (Local3 [0x0E])
                            Local1 [0x11] = DerefOf (Local3 [0x0F])
                            Local1 [0x12] = DerefOf (Local3 [0x10])
                            Local1 [0x13] = DerefOf (Local3 [0x11])
                            Local1 [0x14] = DerefOf (Local3 [0x12])
                            Local1 [0x15] = DerefOf (Local3 [0x13])
                            Local1 [0x16] = DerefOf (Local3 [0x14])
                            Local1 [0x17] = DerefOf (Local3 [0x15])
                            Local1 [0x18] = DerefOf (Local3 [0x16])
                            Local1 [0x19] = DerefOf (Local3 [0x17])
                            Local1 [0x1A] = DerefOf (Local3 [0x18])
                            Local1 [0x1B] = DerefOf (Local3 [0x19])
                            Local1 [0x1C] = DerefOf (Local3 [0x1A])
                            Local1 [0x1D] = DerefOf (Local3 [0x1B])
                            Local1 [0x1E] = DerefOf (Local3 [0x1C])
                            Local1 [0x1F] = DerefOf (Local3 [0x1D])
                            Local1 [0x20] = DerefOf (Local3 [0x1E])
                            Local1 [0x21] = DerefOf (Local3 [0x1F])
                            BFDT = Local1
                            STDT = One
                        }
                        Else
                        {
                            STDT = 0x8000
                        }
                    }
                    Else
                    {
                        SFNO = Arg1
                        BFDT = Arg2
                        CSMI (0xCE, Arg0)
                    }
                }
                ElseIf ((Match (CTSL, MEQ, DerefOf (Arg0 [Zero]), 
                    MTR, Zero, Zero) != Ones))
                {
                    SFNO = Arg1
                    BFDT = Arg2
                    CSMI (0xCE, Arg0)
                }
                Else
                {
                    STDT = 0x8000
                }
            }

            Name (OCSL, Package (0x03)
            {
                0x80, 
                0x81, 
                0x82
            })
            Method (PFUN, 4, Serialized)
            {
                SFNO = Arg1
                BFDT = Arg2
                CSMI (0xCF, Arg0)
                STDT = Zero
            }

            Method (CMFC, 4, Serialized)
            {
                Name (RTVL, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Debug = "=== In CMFC method ==="
                If ((ObjectType (Arg0) == One))
                {
                    RTVL [Zero] = 0x8000
                }
                ElseIf ((DerefOf (Arg0 [Zero]) < 0xFF))
                {
                    Local1 = Buffer (0x82){}
                    CreateWordField (Local1, Zero, RTST)
                    CreateField (Local1, 0x10, 0x0400, RTDT)
                    If (((ToInteger (Arg0) <= 0x8F) && (ToInteger (Arg0
                        ) >= 0x80)))
                    {
                        PFUN (Arg0, Arg1, Arg2, Arg3)
                    }
                    Else
                    {
                        CFUN (Arg0, Arg1, Arg2, Arg3)
                    }

                    RTST = STDT /* \STDT */
                    RTDT = BFDT /* \BFDT */
                    Return (Local1)
                }
                Else
                {
                    RTVL [Zero] = 0x8000
                }

                Return (RTVL) /* \_SB_.PCI0.LPC0.EC0_.CMFC.RTVL */
            }

            Mutex (FAMX, 0x00)
            Method (EIDR, 1, Serialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                Local0 = ERRD (0x5F)
                Release (FAMX)
                Return (Local0)
            }

            Method (EIDW, 2, Serialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                ERWT (0x5F, Arg1)
                Release (FAMX)
            }

            OperationRegion (ECCD, SystemMemory, 0xFE000800, 0x1000)
            Field (ECCD, AnyAcc, Lock, Preserve)
            {
                Offset (0x580), 
                Offset (0x582), 
                ECTB,   1, 
                ECTE,   1, 
                Offset (0x583), 
                ERN1,   8, 
                ERN2,   8, 
                ERN3,   8, 
                ERN4,   8, 
                ERN5,   8, 
                ERN6,   8, 
                ERN7,   8, 
                ERN8,   8, 
                ECMD,   8, 
                EDT1,   8, 
                EDT2,   8, 
                EDT3,   8, 
                EDT4,   8, 
                EDT5,   8, 
                    ,   1
            }

            Method (ERWT, 2, Serialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = 0xB1
                Local0 [One] = Arg0
                Local0 [0x02] = Arg1
                ERCD (Local0)
            }

            Method (ERRD, 1, Serialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = 0xB0
                Local0 [One] = Arg0
                Return (ERCD (Local0))
            }

            Mutex (CSMX, 0x00)
            Method (ERCD, 1, Serialized)
            {
                Acquire (CSMX, 0xFFFF)
                Name (ESRC, 0x64)
                ECTB = One
                ECMD = DerefOf (Arg0 [Zero])
                EDT1 = DerefOf (Arg0 [One])
                EDT2 = DerefOf (Arg0 [0x02])
                ECTE = One
                While (((ESRC != Zero) && (ECTE != Zero)))
                {
                    Sleep (0x0A)
                    ESRC -= One
                }

                Local0 = ERN1 /* \_SB_.PCI0.LPC0.EC0_.ERN1 */
                ECTB = Zero
                Release (CSMX)
                Return (Local0)
            }

            Method (SBAT, 2, NotSerialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = Arg0
                Local0 [One] = 0x16
                Local0 [0x02] = Arg1
                Local0 [0x03] = Zero
                Local0 [0x04] = Zero
                ESMC (Local0)
            }

            Method (SBA2, 2, NotSerialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = Arg0
                Local0 [One] = 0x36
                Local0 [0x02] = Arg1
                Local0 [0x03] = Zero
                Local0 [0x04] = Zero
                ESMC (Local0)
            }

            Mutex (ESCX, 0x00)
            Method (ESMC, 1, NotSerialized)
            {
                Acquire (ESCX, 0xFFFF)
                Name (ESRC, 0x05)
                SMD0 = Zero
                SMAD = DerefOf (Arg0 [One])
                SMCM = DerefOf (Arg0 [0x02])
                SMBN = DerefOf (Arg0 [0x03])
                Local4 = DerefOf (Arg0 [0x04])
                Local5 = Zero
                BCNT = Local4
                If ((Local4 != Zero))
                {
                    Local1 = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                    While (~(Local4 == Local5))
                    {
                        Local1 [Local5] = DerefOf (Arg0 [(0x05 + Local5)]
                            )
                        Local5 += One
                    }

                    SMD0 = Local1
                }

                SMPR = DerefOf (Arg0 [Zero])
                While ((~(ESRC == Zero) && ~((SMST & 0x80
                    ) == 0x80)))
                {
                    Sleep (0x14)
                    ESRC -= One
                }

                If ((SMST == 0x80))
                {
                    ESMB = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                    ESMS = BCNT /* \_SB_.PCI0.LPC0.EC0_.BCNT */
                }
                Else
                {
                    Debug = "====== Sent EC SMBus command time out. ======"
                    ESMS = 0xFF
                }

                Release (ESCX)
            }
        }

        Scope (EC0)
        {
            Method (GBMN, 0, NotSerialized)
            {
                ToHexString (BATD, Local0)
                Return (Local0)
            }

            Method (GUBS, 0, NotSerialized)
            {
                ToHexString (BSN0, Local1)
                Mid (Local1, 0x02, 0x04, Local0)
                Return (Local0)
            }

            Method (GUBT, 0, NotSerialized)
            {
                Local0 = "Li-Ion"
                Return (Local0)
            }

            Method (GUBI, 0, Serialized)
            {
                Local1 = BMF0 /* \_SB_.PCI0.LPC0.EC0_.BMF0 */
                Switch (Local1)
                {
                    Case (One)
                    {
                        Local0 = "SANYO "
                    }
                    Case (0x02)
                    {
                        Local0 = "SONY "
                    }
                    Case (0x03)
                    {
                        Local0 = "SDI "
                    }
                    Case (0x04)
                    {
                        Local0 = "PANASONIC "
                    }
                    Case (0x05)
                    {
                        Local0 = "Samsung "
                    }
                    Case (0x06)
                    {
                        Local0 = "Simplo "
                    }
                    Case (0x07)
                    {
                        Local0 = "Dynapack "
                    }
                    Case (0x08)
                    {
                        Local0 = "LG "
                    }
                    Case (0x09)
                    {
                        Local0 = "WELLTECH ENERGY "
                    }
                    Case (0x0A)
                    {
                        Local0 = "Celxpert "
                    }
                    Case (0x0B)
                    {
                        Local0 = "Murata "
                    }
                    Default
                    {
                        Local0 = "COMPAL "
                    }

                }

                Return (Local0)
            }

            Method (BMN2, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (UBS2, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (UBT2, 0, NotSerialized)
            {
                Local0 = "Li-Ion"
                Return (Local0)
            }

            Method (UBI2, 0, NotSerialized)
            {
                Return (Zero)
            }
        }

        Device (BAT1)
        {
            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (BMDL, Zero)
            Name (BASC, One)
            Name (BFFW, Zero)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (ECOK ())
                {
                    If (^^EC0.BOL0)
                    {
                        Return (0x1F)
                    }
                    Else
                    {
                        Return (0x0F)
                    }
                }
                Else
                {
                    Return (0x1F)
                }
            }

            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
            {
                Return (BIFX (Zero))
            }

            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
            {
                Return (BIFX (One))
            }

            Method (BIFX, 1, NotSerialized)
            {
                Name (STAX, Package (0x14)
                {
                    Zero, 
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "COMPAL "
                })
                Name (STAF, Package (0x0D)
                {
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "COMPAL "
                })
                STAX [0x10] = ^^EC0.GBMN ()
                STAX [0x11] = ^^EC0.GUBS ()
                STAX [0x13] = ^^EC0.GUBI ()
                If (ECOK ())
                {
                    BFFW = ^^EC0.ORRF /* \_SB_.PCI0.LPC0.EC0_.ORRF */
                    If ((^^EC0.BAM0 == Zero))
                    {
                        BASC = 0x0A
                    }

                    STAX [One] = ^^EC0.BAM0 /* \_SB_.PCI0.LPC0.EC0_.BAM0 */
                    Local0 = ^^EC0.BDC0 /* \_SB_.PCI0.LPC0.EC0_.BDC0 */
                    BMDL = Local0
                    STAX [0x02] = (^^EC0.BDC0 * BASC)
                    STAX [0x05] = ^^EC0.BDV0 /* \_SB_.PCI0.LPC0.EC0_.BDV0 */
                    If ((BFFW == One))
                    {
                        Local2 = ^^EC0.BFCB /* \_SB_.PCI0.LPC0.EC0_.BFCB */
                    }
                    Else
                    {
                        Local2 = ^^EC0.BFC0 /* \_SB_.PCI0.LPC0.EC0_.BFC0 */
                    }

                    Local2 = (Local2 * BASC)
                    STAX [0x03] = Local2
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x0A
                    STAX [0x06] = Local1
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x03
                    STAX [0x07] = Local1
                    STAF [Zero] = DerefOf (STAX [One])
                    STAF [One] = DerefOf (STAX [0x02])
                    STAF [0x02] = DerefOf (STAX [0x03])
                    STAF [0x03] = DerefOf (STAX [0x04])
                    STAF [0x04] = DerefOf (STAX [0x05])
                    STAF [0x05] = DerefOf (STAX [0x06])
                    STAF [0x06] = DerefOf (STAX [0x07])
                    STAF [0x07] = DerefOf (STAX [0x0E])
                    STAF [0x08] = DerefOf (STAX [0x0F])
                    STAF [0x09] = DerefOf (STAX [0x10])
                    STAF [0x0A] = DerefOf (STAX [0x11])
                    STAF [0x0B] = DerefOf (STAX [0x12])
                    STAF [0x0C] = DerefOf (STAX [0x13])
                    If ((Arg0 == One))
                    {
                        Return (STAX) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAX */
                    }
                    Else
                    {
                        Return (STAF) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAF */
                    }
                }
            }

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {
                Name (PBST, Package (0x04)
                {
                    Zero, 
                    Ones, 
                    Ones, 
                    0x1770
                })
                If (ECOK ())
                {
                    PBST [Zero] = ^^EC0.BST0 /* \_SB_.PCI0.LPC0.EC0_.BST0 */
                    If ((^^EC0.BAC0 >> 0x0F))
                    {
                        Local4 = ((~^^EC0.BAC0 & 0xFFFF) + One)
                    }
                    Else
                    {
                        Local4 = ^^EC0.BAC0 /* \_SB_.PCI0.LPC0.EC0_.BAC0 */
                    }

                    If ((^^EC0.BAM0 == Zero))
                    {
                        Local4 = ((Local4 * ^^EC0.BPV0) / 0x03E8)
                    }

                    PBST [One] = Local4
                    PBST [0x02] = (^^EC0.BRC0 * BASC)
                    PBST [0x03] = ^^EC0.BPV0 /* \_SB_.PCI0.LPC0.EC0_.BPV0 */
                    If ((^^EC0.BDC0 != BMDL))
                    {
                        Notify (BAT1, 0x81) // Information Change
                    }
                }

                Return (PBST) /* \_SB_.PCI0.LPC0.BAT1._BST.PBST */
            }

            Method (_BTP, 1, NotSerialized)  // _BTP: Battery Trip Point
            {
                Local0 = (Arg0 / BASC)
                ^^EC0.BTPB = Local0
            }
        }

        Device (ACAD)
        {
            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (XX00, Buffer (0x03){})
            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Local0 = ^^EC0.ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                CreateWordField (XX00, Zero, SSZE)
                CreateByteField (XX00, 0x02, ACST)
                SSZE = 0x03
                If (Local0)
                {
                    P80H = 0xAC
                    AFN4 (One)
                    ACST = Zero
                }
                Else
                {
                    P80H = 0xDC
                    AFN4 (0x02)
                    ACST = One
                }

                ALIB (One, XX00)
                Return (Local0)
            }
        }

        Method (OSTP, 0, NotSerialized)
        {
            Local1 = One
            If ((OSYS == 0x07D1))
            {
                Local1 = Zero
            }

            If ((OSYS == 0x07D2))
            {
                Local1 = Zero
            }

            If ((OSYS == 0x07D6))
            {
                Local1 = One
            }

            If ((OSYS == 0x03E8))
            {
                Local1 = 0x02
            }

            If ((OSYS == 0x07D9))
            {
                Local1 = 0x03
            }

            If ((OSYS == 0x07DC))
            {
                Local1 = 0x04
            }

            If ((OSYS == 0x07DD))
            {
                Local1 = 0x05
            }

            If ((OSYS == 0x07DF))
            {
                Local1 = 0x06
            }

            If ((OSYS == 0x07E0))
            {
                Local1 = 0x06
            }

            If ((OSYS == 0x07E1))
            {
                If (_OSI ("Windows 2017.2"))
                {
                    Local1 = 0x07
                }
                Else
                {
                    Local1 = 0x06
                }
            }

            ^EC0.OSTY = Local1
        }

        Device (LID0)
        {
            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
            Name (PLID, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Local0 = ^^EC0.LIDF /* \_SB_.PCI0.LPC0.EC0_.LIDF */
                If (Local0)
                {
                    Return (Zero)
                }

                Return (One)
            }
        }

        Method (ECFG, 1, NotSerialized)
        {
            If ((Arg0 == One))
            {
                ^EC0.ECRD = One
            }
            Else
            {
                ^EC0.ECRD = Zero
            }
        }
    }

    Device (AAMC)
    {
        Name (_HID, "10251229")  // _HID: Hardware ID
        Name (_DDN, "Acer Airplane Mode Controller")  // _DDN: DOS Device Name
        Name (_UID, Zero)  // _UID: Unique ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            Return (0x0F)
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 0000010C
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : D0
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]                 FACS Address : 6F3A2000
[028h 0040   4]                 DSDT Address : 6F7E7000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000400
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000404
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000800
[04Ch 0076   4]       PM Timer Block Address : 00000408
[050h 0080   4]           GPE0 Block Address : 00000420
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0064
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 00
[06Dh 0109   2]   Boot Flags (decoded below) : 0003
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 000085AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 0
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000000000B0

[080h 0128   1]         Value to cause reset : FB
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 000000006F7E7000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000000400

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 00 [SystemMemory]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000404

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000000800

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000408

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 04 [QWord Access:64]
[0E0h 0224   8]                      Address : 0000000000000420

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 00 [SystemMemory]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 D0 41 43 52 53 59 53  // FACP......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 20 3A 6F 00 70 7E 6F 00 02 09 00  // ..... :o.p~o....
    0030: B0 00 00 00 A0 A1 00 00 00 04 00 00 00 00 00 00  // ................
    0040: 04 04 00 00 00 00 00 00 00 08 00 00 08 04 00 00  // ................
    0050: 20 04 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 64 00 E9 03 00 00 00 00 01 03 0D 00 00 03 00 00  // d...............
    0070: AD 85 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    0080: FB 00 00 00 00 00 00 00 00 00 00 00 00 70 7E 6F  // .............p~o
    0090: 00 00 00 00 01 20 00 03 00 04 00 00 00 00 00 00  // ..... ..........
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 00 08 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 04 00 00 00 00 00 00 01 40 00 04  // . ...........@..
    00E0: 20 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : C1DDDD61
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 61 DD DD C1 00 00 00 00  // FACS@...a.......
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : D5
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 000000006C7BF000

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 000000006D7BE000

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 D5 41 43 52 53 59 53  // FPDTD.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 01 00 00 00 00 00 F0 7B 6C  // ..............{l
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 00 E0 7B 6D  // ..............{m
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8F
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]            Hardware Block ID : 10228210

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 8F 41 43 52 53 59 53  // HPET8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 10 82 22 10 00 00 00 00 00 00 D0 FE  // ......".........
    0030: 00 00 00 00 00 80 00 00                          // ........


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 000000D0
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 84
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block]
[031h 0049   1]                        Flags : B0
[032h 0050   2]                       Length : 0048
[034h 0052   2]                     DeviceId : 0002

[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FD200000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]                     Reserved : 80048F6E

[048h 0072   1]                   Entry Type : 03
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1]                 Data Setting : 00

[04Ch 0076   1]                   Entry Type : 04
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1]                 Data Setting : 00

[050h 0080   1]                   Entry Type : 43
[051h 0081   2]                    Device ID : FF00
[053h 0083   1]                 Data Setting : 00
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A4
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                   Entry Type : 04
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1]                 Data Setting : 00

[05Ch 0092   1]                   Entry Type : 00
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1]                 Data Setting : 00

[060h 0096   1]                   Entry Type : 48
[061h 0097   2]                    Device ID : 0000
[063h 0099   1]                 Data Setting : 00
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                   Entry Type : 48
[069h 0105   2]                    Device ID : 0000
[06Bh 0107   1]                 Data Setting : D7
[06Ch 0108   1]                       Handle : 21
[06Dh 0109   2]        Source Used Device ID : 00A0
[06Fh 0111   1]                      Variety : 01

[070h 0112   1]                   Entry Type : 48
[071h 0113   2]                    Device ID : 0000
[073h 0115   1]                 Data Setting : 00
[074h 0116   1]                       Handle : 22
[075h 0117   2]        Source Used Device ID : 0001
[077h 0119   1]                      Variety : 01

[078h 0120   1]                Subtable Type : 11 [Unknown Subtable Type]
[079h 0121   1]                        Flags : B0
[07Ah 0122   2]                       Length : 0058
[07Ch 0124   2]                     DeviceId : 0002

**** Unknown IVRS subtable type 0x11

Raw Table Data: Length 208 (0xD0)

    0000: 49 56 52 53 D0 00 00 00 02 84 41 43 52 53 59 53  // IVRS......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 20 FD 00 00 00 00  // ..H...@... .....
    0040: 00 00 00 00 6E 8F 04 80 03 08 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    0070: 48 00 00 00 22 01 00 01 11 B0 58 00 02 00 40 00  // H...".....X...@.
    0080: 00 00 20 FD 00 00 00 00 00 00 00 00 00 02 04 00  // .. .............
    0090: DA 4A 29 22 EF 77 4F 00 00 00 00 00 00 00 00 00  // .J)".wO.........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A4 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 21 A0 00 01 48 00 00 00 22 01 00 01  // H...!...H..."...


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 7A
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 7A 41 43 52 53 59 53  // MCFG<....zACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000   4]                    Signature : "MSDM"    [Microsoft Data Management table]
[004h 0004   4]                 Table Length : 00000055
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 66
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  49] Software Licensing Structure : \
    01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 \
    1D 00 00 00 46 4E 52 38 52 2D 51 47 47 54 37 2D \
    58 51 43 37 54 2D 50 47 47 47 51 2D 50 59 54 33 \
    52 

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 66 41 43 52 53 59 53  // MSDMU....fACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 46 4E 52 38 52 2D 51 47  // ........FNR8R-QG
    0040: 47 54 37 2D 58 51 43 37 54 2D 50 47 47 47 51 2D  // GT7-XQC7T-PGGGQ-
    0050: 50 59 54 33 52                                   // PYT3R


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    Scope (\_SB)
    {
        Device (TPM2)
        {
            Name (_HID, "MSFT0101" /* TPM 2.0 Security Device */)  // _HID: Hardware ID
            Name (_CID, "MSFT0101" /* TPM 2.0 Security Device */)  // _CID: Compatible ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x6D7A9000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x6D7AD000,         // Address Base
                    0x00004000,         // Address Length
                    )
            })
            OperationRegion (SMIP, SystemIO, 0xB0, One)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            OperationRegion (TNVS, SystemMemory, 0x6F39B000, 0x27)
            Field (TNVS, AnyAcc, NoLock, Preserve)
            {
                PPIN,   8, 
                PPIP,   32, 
                PPRP,   32, 
                PPRQ,   32, 
                PPRM,   32, 
                LPPR,   32, 
                FRET,   32, 
                MCIN,   8, 
                MCIP,   32, 
                MORD,   32, 
                MRET,   32, 
                CAIN,   8
            }

            OperationRegion (CONA, SystemMemory, 0x6F39A000, 0x30)
            Field (CONA, DWordAcc, NoLock, Preserve)
            {
                HRTB,   32, 
                ERRR,   32, 
                CLFG,   32, 
                STA1,   32, 
                AccessAs (QWordAcc, 0x00), 
                INTC,   64, 
                AccessAs (DWordAcc, 0x00), 
                CMSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                CMDB,   64, 
                AccessAs (DWordAcc, 0x00), 
                RPSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                RESP,   64
            }

            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(MORD & 0x10))
                    {
                        MCIP = 0x02
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                    }
                }

                Return (Zero)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (HINF, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Name (TPMV, Package (0x02)
                        {
                            One, 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        })
                        If ((_STA () == Zero))
                        {
                            Return (Package (0x01)
                            {
                                Zero
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM2.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        PPRQ = DerefOf (Arg2 [Zero])
                        PPIP = 0x02
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x03)
                    {
                        TPM2 [One] = PPRQ /* \_SB_.TPM2.PPRQ */
                        Return (TPM2) /* \_SB_.TPM2.TPM2 */
                    }
                    Case (0x04)
                    {
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        PPIP = 0x05
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        TPM3 [One] = LPPR /* \_SB_.TPM2.LPPR */
                        TPM3 [0x02] = PPRP /* \_SB_.TPM2.PPRP */
                        Return (TPM3) /* \_SB_.TPM2.TPM3 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        PPIP = 0x07
                        PPRQ = DerefOf (Arg2 [Zero])
                        PPRM = Zero
                        If ((PPRQ == 0x17))
                        {
                            PPRM = DerefOf (Arg2 [One])
                        }

                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x08)
                    {
                        PPIP = 0x08
                        PPRQ = DerefOf (Arg2 [Zero])
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (TMCI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        MORD = DerefOf (Arg2 [Zero])
                        MCIP = One
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                        Return (MRET) /* \_SB_.TPM2.MRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (OASM, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Return (Zero)
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8")))
                {
                    Return (HINF (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    Return (TPPI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d")))
                {
                    Return (TMCI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4")))
                {
                    Return (OASM (Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 32 external control methods found during
     * disassembly, but only 0 were resolved (32 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (_SB_.PCI0.GP17.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M087, UnknownObj)
    External (M100, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M105, IntObj)
    External (M106, IntObj)
    External (M113, IntObj)
    External (M133, UnknownObj)
    External (M232, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M233, IntObj)
    External (M235, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M378, IntObj)
    External (M379, IntObj)
    External (M380, IntObj)
    External (M381, IntObj)
    External (M382, IntObj)
    External (M383, IntObj)
    External (M384, IntObj)
    External (M385, IntObj)
    External (M386, IntObj)
    External (M387, IntObj)
    External (M388, IntObj)
    External (M389, IntObj)
    External (M390, IntObj)
    External (M391, IntObj)
    External (M392, IntObj)

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M207, Buffer (0xFF){})
        Name (M208, Buffer (0x03){})
        Name (M204, One)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                ATC0 ()
            }

            If ((Arg0 == One))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            If ((Arg0 == 0x06))
            {
                ATC6 (Arg1)
            }

            If ((Arg0 == 0x07))
            {
                ATC7 (Arg1)
            }

            Return (M207) /* \_SB_.PCI0.GP17.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = 0x6F
             = \_SB.ALIB /* External reference */
            M207
            M207
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, One, M203)
            M157 = 0x0A
            M161 = One
            0x15 = M100 (M162, M133 = M049 /* External reference */)
            Local0
            If ((Local0 & 0x80))
            {
                M204 = (Local0 & One)
            }
            ElseIf ((Local0 & 0x7F))
            {
                Local0 = M113 /* External reference */
                M204
            }

            M203 = M204 /* \_SB_.PCI0.GP17.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = One
            0x02 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, Zero, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = One
            M197 = 0x03
            M206 = One
            0x03 = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = One
            0x04 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC6, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M234)
            M157 = 0x06
            M234 = M233 /* External reference */
        }

        Method (ATC7, 1, Serialized)
        {
            M232 (M235 (Zero, One))
        }

        Method (ATRM, 2, Serialized)
        {
            If ((M105 == Zero))
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Local4 = M105 /* External reference */
            If ((Local4 > 0x00010000))
            {
                Local4 = 0x00010000
            }

            Local5 = Arg0
            Local6 = Arg1
            If ((Local6 > 0x1000))
            {
                Local6 = 0x1000
            }

            If ((Local5 > Local4))
            {
                Return (Buffer (Local6)
                {
                     0x00                                             // .
                })
            }

            If ((((Local5 & 0x0FFF) + Local6) > 0x1000))
            {
                Local6 = (0x1000 - (Local5 & 0x0FFF))
            }

            Name (M202, Buffer (0x1000)
            {
                 0x00                                             // .
            })
            If (((Local5 & 0xF000) == Zero))
            {
                M202 = M106 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x1000))
            {
                M202 = M378 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x2000))
            {
                M202 = M379 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x3000))
            {
                M202 = M380 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x4000))
            {
                M202 = M381 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x5000))
            {
                M202 = M382 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x6000))
            {
                M202 = M383 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x7000))
            {
                M202 = M384 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x8000))
            {
                M202 = M385 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x9000))
            {
                M202 = M386 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xA000))
            {
                M202 = M387 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xB000))
            {
                M202 = M388 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xC000))
            {
                M202 = M389 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xD000))
            {
                M202 = M390 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xE000))
            {
                M202 = M391 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xF000))
            {
                M202 = M392 /* External reference */
            }

            If (((Local5 + Local6) <= Local4))
            {
                If ((Local6 == 0x1000))
                {
                    Return (M202) /* \_SB_.PCI0.GP17.VGA_.ATRM.M202 */
                }
            }
            Else
            {
                Local6 = (Local4 - Local5)
            }

            Name (M393, Buffer (Local6)
            {
                 0x00                                             // .
            })
            CreateField (M202, ((Local5 & 0x0FFF) * 0x08), (Local6 * 0x08
                ), M394)
            M393 = M394 /* \_SB_.PCI0.GP17.VGA_.ATRM.M394 */
            Return (M393) /* \_SB_.PCI0.GP17.VGA_.ATRM.M393 */
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN0))
            {
                \_SB.PCI0.GP17.VGA.AFN0 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.VGA.AFN0 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0 ()
            }
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN1))
            {
                \_SB.PCI0.GP17.VGA.AFN1 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.VGA.AFN1 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1 (Arg0)
            }
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN2))
            {
                \_SB.PCI0.GP17.VGA.AFN2 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.VGA.AFN2 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2 (Arg0, Arg1)
            }
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN3))
            {
                \_SB.PCI0.GP17.VGA.AFN3 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.VGA.AFN3 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3 (Arg0, Arg1)
            }
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN4))
            {
                \_SB.PCI0.GP17.VGA.AFN4 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.VGA.AFN4 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4 (Arg0)
            }
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN5))
            {
                \_SB.PCI0.GP17.VGA.AFN5 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.VGA.AFN5 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5 ()
            }
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN6))
            {
                \_SB.PCI0.GP17.VGA.AFN6 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.VGA.AFN6 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6 ()
            }
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN7))
            {
                \_SB.PCI0.GP17.VGA.AFN7 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.VGA.AFN7 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7 (Arg0)
            }
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN8))
        {
            \_SB.PCI0.GPP0.VGA.AFN8 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8))
        {
            \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8 ()
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFNC))
            {
                \_SB.PCI0.GP17.VGA.AFNC (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.VGA.AFNC (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC (Arg0, Arg1)
            }
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 8 external control methods found during
     * disassembly, but only 0 were resolved (8 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.M263, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M264, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP18.SATA.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP18.SATA.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SATA.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SATA.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0x6F7A9018, 0x000100C1)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   16, 
        M327,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32
    }

    Method (M000, 1, Serialized)
    {
        Local0 = (Arg0 + 0xB0000C00)
        OperationRegion (VARM, SystemIO, 0x80, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        VARR = Local0
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Mutex (M253, 0x00)
    Method (M249, 3, Serialized)
    {
        If (((Arg0 == Zero) && (Arg1 == Zero)))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1)
        }

        If ((Local0 == Ones))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg2, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 4, Serialized)
    {
        If (((Arg0 == Zero) && (Arg1 == Zero)))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1)
        }

        If ((Local0 != Ones))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg2, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg3
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x68)
        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local0 |= 0x20
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M019 (Arg0, Arg1, Arg2, 0x68)
            If ((Local3 & 0x08000000))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If ((Local0 == Zero))
        {
            If ((M085 >= 0x02))
            {
                Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                    One)
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf ((Local0 == One))
        {
            Local1 = M038 /* External reference */
            Local2
        }
        ElseIf ((Local0 == 0x02))
        {
            (Local1 + 0x08) = M038 /* External reference */
            Local2
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        If ((Local0 == Zero))
        {
            If ((M085 >= 0x02))
            {
                M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                    0x02 | Arg1))
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, One, Zero)
            }
        }
        ElseIf ((Local0 == One))
        {
            M039 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x02))
        {
            M039 ((Local1 + 0x08), Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M328, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 >= 0x09))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M328 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 >= 0x03))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), Zero, One))
        }
        Else
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            If ((M013 (Local0, Zero, Zero, 0x20) != Ones))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, One)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, One)
                If (((Local3 == One) && (Local4 == One)))
                {
                    Local0 = One
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local3 != Zero))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)){}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = Zero
                    Local2 = One
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == Zero))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Zero)
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            One) * 0x04), 0x04, Zero)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == One))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                One) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (Zero, M013 ((Local0 + Local1), 0x05, Zero, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, Zero, 0x08), 0x19, Zero, 0x08)
                                        If ((M265 (Local6, Zero, Zero) == One))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, One)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    One) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        One) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                If ((M009 (Local5) == Local6))
                                {
                                    Local7 = One
                                }
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                If ((Arg3 != One))
                {
                    M120 = Zero
                    \_SB.ALIB (0x06, M115)
                }
            }
            Else
            {
                If ((Arg3 != One))
                {
                    M120 = One
                    \_SB.ALIB (0x06, M115)
                }

                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 2, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = Zero
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M011 ((Local0 + Local1), One, Zero, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Return (Local4)
                    }

                    Local1 += 0x03
                }
            }
        }

        Return (Ones)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = One
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        Sleep (Local2)
        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (Arg0)
        {
            Case (Zero)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (Local0)
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, 0x02, 0x19, Zero, 0x08))
            }
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TPTS (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TPTS (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            \_SB.M263 (Arg0)
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TWAK (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TWAK (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            \_SB.M264 (Arg0)
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C003, DeviceObj)
    External (_PR_.C004, DeviceObj)
    External (_PR_.C005, DeviceObj)
    External (_PR_.C006, DeviceObj)
    External (_PR_.C007, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C002.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C003.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C004)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C004.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C005)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C005.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C006)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C006.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C007)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000007D0, 
                0x00000985, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x000005B4, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C007.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 16 external control methods found during
     * disassembly, but only 0 were resolved (16 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.MACO, UnknownObj)
    External (_SB_.PCI0.GPP0, DeviceObj)
    External (_SB_.PCI0.GPP0.SWUS, DeviceObj)
    External (_SB_.PCI0.GPP0.SWUS.SWDS, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_.DSPM, UnknownObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M014, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M017, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M018, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M027, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M028, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M085, UnknownObj)
    External (M097, UnknownObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, IntObj)
    External (M128, UnknownObj)
    External (M133, UnknownObj)
    External (M275, UnknownObj)

    Scope (\_SB.PCI0.GPP0)
    {
        Name (M236, Buffer (0x0C)
        {
            /* 0000 */  0x04, 0x01, 0x01, 0x01, 0x25, 0x10, 0x5D, 0x12,  // ....%.].
            /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
        })
        Name (M266, Zero)
        Name (M267, Zero)
        Name (M268, Zero)
        Name (M269, Zero)
        Name (M270, Zero)
        Name (M271, Zero)
        Name (M350, Buffer (0x18)
        {
            /* 0000 */  0x07, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x00,  // ........
            /* 0008 */  0xA0, 0xE0, 0xA0, 0xE0, 0x01, 0xD0, 0x11, 0xE0,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M351, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M352, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M353, Buffer (0x18)
        {
            /* 0000 */  0x03, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x00, 0xE0,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xE0,  // ........
            /* 0010 */  0x02, 0x10, 0xEF, 0x67, 0x00, 0x00, 0x00, 0x00   // ...g....
        })
        Name (M354, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M355, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M356, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M357, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M358, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (M371, 5, NotSerialized)
        {
            CreateDWordField (Arg3, Zero, M365)
            CreateDWordField (Arg3, 0x04, M366)
            CreateDWordField (Arg3, 0x08, M367)
            CreateDWordField (Arg3, 0x0C, M368)
            CreateDWordField (Arg3, 0x10, M369)
            CreateDWordField (Arg3, 0x14, M370)
            If ((Arg4 < 0x02))
            {
                If ((Arg4 == Zero))
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    M365
                    0x18 = M019 (Arg0, Arg1, Arg2)
                    M366
                    0x20 = M019 (Arg0, Arg1, Arg2)
                    M367
                    0x24 = M019 (Arg0, Arg1, Arg2)
                    M368
                    0x28 = M019 (Arg0, Arg1, Arg2)
                    M369
                    0x2C = M019 (Arg0, Arg1, Arg2)
                    M370
                }
                Else
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    M365
                    0x18 = M019 (Arg0, Arg1, Arg2)
                    M366
                    0x1C = M019 (Arg0, Arg1, Arg2)
                    M367
                    0x24 = M019 (Arg0, Arg1, Arg2)
                    M368
                     = M019 (Arg0, Arg1, Arg2)
                    M369
                    M370 = Arg0
                }
            }
            Else
            {
                If (((Arg4 & One) == Zero))
                {
                    M020 (Arg0, Arg1, Arg2, 0x18, M366)
                    M020 (Arg0, Arg1, Arg2, 0x20, M367)
                    M020 (Arg0, Arg1, Arg2, 0x24, M368)
                    M020 (Arg0, Arg1, Arg2, 0x28, M369)
                    M020 (Arg0, Arg1, Arg2, 0x2C, M370)
                }
                Else
                {
                    M020 (Arg0, Arg1, Arg2, 0x18, M366)
                    M020 (Arg0, Arg1, Arg2, 0x1C, M367)
                    M020 (Arg0, Arg1, Arg2, 0x24, M368)
                }

                If (((Arg4 & 0x04) == 0x04))
                {
                    M020 (Arg0, Arg1, Arg2, 0x04, (M365 & 0x06FFFFFF))
                }
                Else
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    Local0
                    M020 (Arg0, Arg1, Arg2, 0x04, ((Local0 & 0x06FFFFF8) | 0x02))
                }
            }
        }

        Method (M372, 0, NotSerialized)
        {
            CreateDWordField (M353, 0x10, M362)
            Local0 = Zero
            If (((M362 & 0xFFDF) == 0x1002))
            {
                Local1 = (M362 >> 0x10)
                Local1 &= 0xFFFF
                If (((Local1 >= 0x67C0) && (Local1 <= 0x67DF)))
                {
                    Local0 = 0x10
                }
                ElseIf (((Local1 >= 0x67E0) && (Local1 <= 0x67FF)))
                {
                    Local0 = 0x11
                }
                ElseIf (((Local1 >= 0x6900) && (Local1 <= 0x695F)))
                {
                    Local0 = 0x12
                }
                ElseIf (((Local1 >= 0x6980) && (Local1 <= 0x699F)))
                {
                    Local0 = 0x13
                }
                ElseIf (((Local1 >= 0x6860) && (Local1 <= 0x687F)))
                {
                    Local0 = 0x20
                }
                ElseIf (((Local1 >= 0x69A0) && (Local1 <= 0x69BF)))
                {
                    Local0 = 0x21
                }
                Else
                {
                    Local0 = Zero
                }
            }
            ElseIf (((M362 & 0xFFFF) == 0x10DE))
            {
                Local0 = 0xC0
            }

            Return (Local0)
        }

        Method (M373, 3, NotSerialized)
        {
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M354 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M355 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M356 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M357 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M371 (Arg0, Arg1, Arg2, M354, Zero)
            M020 (Arg0, Arg1, Arg2, 0x18, M359)
            Local0 = (M359 >> 0x08)
            Local0 &= 0xFF
            If ((M360 != Zero))
            {
                M371 (Local0, Zero, Zero, M355, Zero)
                M020 (Local0, Zero, Zero, 0x18, M360)
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
            }

            If (((M360 != Zero) && (M361 != Zero)))
            {
                M371 (Local0, Zero, Zero, M356, Zero)
                M020 (Local0, Zero, Zero, 0x18, M361)
                Local0 = (M361 >> 0x08)
                Local0 &= 0xFF
            }

            M371 (Local0, Zero, Zero, M357, One)
        }

        Method (M374, 3, NotSerialized)
        {
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M371 (Arg0, Arg1, Arg2, M350, 0x02)
            Local0 = (M359 >> 0x08)
            Local0 &= 0xFF
            If ((M360 != Zero))
            {
                M371 (Local0, Zero, Zero, M351, 0x02)
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
            }

            If (((M360 != Zero) && (M361 != Zero)))
            {
                M371 (Local0, Zero, Zero, M352, 0x02)
                Local0 = (M361 >> 0x08)
                Local0 &= 0xFF
            }

            M371 (Local0, Zero, Zero, M353, 0x03)
        }

        Method (M375, 0, Serialized)
        {
            CreateQWordField (M353, 0x04, M363)
            CreateDWordField (M353, 0x0C, M364)
            Local0 = M372 ()
            If (((Local0 >= Zero) && (Local0 <= 0x0F)))
            {
                Store (M013 ((M363 & 0xFFFFFFF0), 0x540C, Zero, 0x20, Local2, M014 ((
                    M363 & 0xFFFFFFF0), 0x540C, Zero, 0x20, (Local2 & 0xFFFFEFFF)), ElseIf ((
                    (Local0 >= 0x10) && (Local0 <= 0x1F)))
                        {
                            Store (M013 ((M364 & 0xFFFFFFF0), 0x5418, Zero, 0x20, Local2, M014 ((
                                M364 & 0xFFFFFFF0), 0x5418, Zero, 0x20, (Local2 & 0xFFFFFFFD)), ElseIf ((
                                (Local0 >= 0x20) && (Local0 <= 0xBF)))
                                    {
                                        Store (M013 ((M364 & 0xFFFFFFF0), 0x34E0, Zero, 0x20, Local2, M014 ((
                                            M364 & 0xFFFFFFF0), 0x34E0, Zero, 0x20, (Local2 & 0xEFFFFFFF)))
                                    })
                        })
            }
        }

        Method (M376, 0, Serialized)
        {
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M236, 0x04, M246)
            CreateDWordField (M236, 0x08, M247)
            Local0 = M372 ()
            If (((Local0 >= Zero) && (Local0 <= 0xBF)))
            {
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                M020 (M245, Zero, Zero, 0x4C, M246)
                 = M019 (M245, Zero, One)
                Local1
                If (((Local1 != Local2) && (M247 != Local2)))
                {
                    M020 (M245, Zero, One, 0x4C, M247)
                }
            }
        }

        Method (M377, 3, NotSerialized)
        {
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M371 (M245, Zero, Zero, M357, 0x05)
            If (((M360 != Zero) && (M361 != Zero)))
            {
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
                M371 (Local0, Zero, Zero, M356, 0x04)
            }

            If ((M360 != Zero))
            {
                Local0 = (M359 >> 0x08)
                Local0 &= 0xFF
                M371 (Local0, Zero, Zero, M355, 0x04)
            }

            M371 (Arg0, Arg1, Arg2, M354, 0x04)
        }

        Mutex (EEBC, 0x00)
        Method (M241, 1, NotSerialized)
        {
            Acquire (EEBC, 0xFFFF)
            CreateByteField (M236, Zero, M242)
            CreateByteField (M236, One, M243)
            CreateByteField (M236, 0x02, M244)
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M236, 0x04, M246)
            CreateDWordField (M236, 0x08, M247)
            Name (M272, Zero)
            Name (M273, Zero)
            Name (M274, Zero)
            ((0x65 = (M049 >> M128)) /* External reference */ & 0x05)
            One
            M273
            ((0x65 = (M049 >> M128)) /* External reference */ & 0x06)
            One
            M274
            If ((M273 != One))
            {
                Local7 = Buffer (0x05){}
                CreateWordField (Local7, Zero, M197)
                CreateField (Local7, 0x10, 0x03, M200)
                CreateField (Local7, 0x13, 0x05, M199)
                CreateByteField (Local7, 0x03, M198)
                CreateByteField (Local7, 0x04, M201)
                M197 = 0x05
                M198 = Zero
                Local0 = M243 /* \_SB_.PCI0.GPP0.M241.M243 */
                M199 = Local0
                Local0 = M244 /* \_SB_.PCI0.GPP0.M241.M244 */
                M200 = Local0
            }

            If ((M085 >= 0x09))
            {
                Local3 = Buffer (0x08){}
                CreateWordField (Local3, Zero, M254)
                CreateByteField (Local3, 0x02, M255)
                CreateDWordField (Local3, 0x03, M256)
                M254 = 0x07
                M255 = 0x10
            }

            M133 = M049 /* External reference */
            0x01D4
            M266
            M133 = M049 /* External reference */
            0x01D5
            M267
            M133 = M049 /* External reference */
            0x01D6
            M268
            M133 = M049 /* External reference */
            0x01D7
            M269
            M133 = M049 /* External reference */
            0x01D8
            M270
            M133 = M049 /* External reference */
            0x01D9
            M271
            Local0 = ((M084 + 0x1502) + (M266 * 0x04))
            OperationRegion (VAMM, SystemMemory, Local0, One)
            Field (VAMM, ByteAcc, NoLock, Preserve)
            {
                P011,   8
            }

            Local0 = ((M084 + 0x1502) + (M267 * 0x04))
            OperationRegion (VANN, SystemMemory, Local0, One)
            Field (VANN, ByteAcc, NoLock, Preserve)
            {
                P141,   8
            }

            If ((M274 == One))
            {
                Local6 = One
            }
            Else
            {
                M242 = M113 /* External reference */
                Local6
            }

            M023 (Zero, M243, M244)
            If ((M275 == M242))
            {
                Arg0
                Zero
                If ((Arg0 && Local6))
                {
                    \_SB.PCI0.LPC0.EC0.DSPM = Zero
                    M000 (0x9D)
                    If ((\_SB.MACO == One))
                    {
                        P141 = 0xC4
                        Sleep (M270)
                        M112 (M242, One)
                        Sleep (M271)
                        P011 = 0x84
                        \_SB.MACO = Zero
                    }
                    Else
                    {
                        M112 (M242, Zero)
                        M111 (M242, One)
                        Sleep (0x20)
                        M112 (M242, 0x02)
                        M112 (M242, One)
                        Sleep (0x64)
                    }

                    M000 (0x9E)
                    M272 = One
                    If ((M273 == One))
                    {
                        0x08 = M017 (Zero, M243, M244, 0x68, Zero)
                        Local1
                        M018 (Zero, M243, M244, 0x68, Zero, 0x08, (Local1 & 0xEF))
                        Sleep (0x18)
                        M244 = M025 (Zero, M243)
                        Local1
                        Local1 = Zero
                        While (((Local1 & 0x28) != 0x20))
                        {
                            M000 (0xBE)
                            0x08 = M017 (Zero, M243, M244, 0x6B, Zero)
                            Local1
                        }
                    }
                    Else
                    {
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        If ((M085 < 0x08))
                        {
                            M272 = Zero
                            Local2 = Zero
                            While ((Local2 < 0x0F))
                            {
                                M023 (Zero, M243, M244)
                                Local4 = One
                                Local5 = 0xC8
                                While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (Zero, M243, M244)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                    {
                                        Local4 = Zero
                                    }
                                    Else
                                    {
                                        Sleep (0x05)
                                        Local5--
                                    }
                                }

                                If (!Local4)
                                {
                                    M244 = M024 (Zero, M243)
                                    Local5
                                    If (Local5)
                                    {
                                        M026 (Zero, M243, M244)
                                        Sleep (0x05)
                                        Local2++
                                    }
                                    Else
                                    {
                                        Local0 = Zero
                                        If ((M025 (Zero, M243) == M244))
                                        {
                                            Ones
                                            Local0 = One
                                        }

                                        If (Local0)
                                        {
                                            M272 = One
                                            Local2 = 0x10
                                        }
                                        Else
                                        {
                                            M272 = Zero
                                            Local2 = 0x10
                                        }
                                    }
                                }
                                Else
                                {
                                    Local2 = 0x10
                                }
                            }

                            If (!M272)
                            {
                                M000 (0x9F)
                                 = M019 (M245, Zero, Zero)
                                Local1
                                Sleep (0x0A)
                                Local4 = One
                                Local5 = 0x05
                                While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (Zero, M243, M244)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                    {
                                        Local4 = Zero
                                    }
                                    Else
                                    {
                                         = M019 (M245, Zero, Zero)
                                        Local0
                                        Sleep (0x05)
                                        Local5--
                                    }
                                }

                                M201 = Zero
                                \_SB.ALIB
                                0x06
                                Local7
                            }
                        }
                    }

                    M000 (0xBF)
                    If ((M272 == One))
                    {
                        Local6 = 0x7FFFFFFF
                        Local6 |= 0x80000000
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        0x08 = M017 (Zero, M243, M244, 0x19, Zero)
                        Local2
                        Local4 = One
                        Local5 = 0x28
                        While ((Local4 && Local5))
                        {
                             = M019 (Local2, Zero, Zero)
                            Local0
                            If ((Local0 != Local6))
                            {
                                Local0 = M372 ()
                                If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                                {
                                    M373 (Zero, M243, M244)
                                    M374 (Zero, M243, M244)
                                    If ((M097 != Zero))
                                    {
                                        M375 ()
                                    }

                                    M376 ()
                                    M377 (Zero, M243, M244)
                                }

                                Local4 = Zero
                            }
                            Else
                            {
                                Sleep (0x19)
                                Local5--
                            }
                        }

                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF))
                    }

                    If ((M085 >= 0x09))
                    {
                        Local0 = M372 ()
                        If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                        {
                            M256 = One
                            \_SB.ALIB
                            0x0C
                            Local3
                        }
                    }

                    M000 (0xA0)
                }
                Else
                {
                    \_SB.PCI0.LPC0.EC0.DSPM = One
                    M000 (0xA1)
                    If ((M085 >= 0x09))
                    {
                        Local0 = M372 ()
                        If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                        {
                            M256 = Zero
                            \_SB.ALIB
                            0x0C
                            Local3
                        }
                    }

                    If ((M273 == One))
                    {
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        Sleep (One)
                        0x08 = M017 (Zero, M243, M244, 0x19, Zero)
                        Local2
                        M028 (Local2, Zero, Zero, Zero)
                        M018 (Zero, M243, M244, 0x68, Zero, 0x08, (Local1 | 0x10)) = 
                            M027 (Local2, Zero, Zero, Local3, M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF
                            )), 0x08 = M017 (Zero, M243, M244, 0x68, Zero), Local1)
                        Sleep (0x18)
                    }
                    Else
                    {
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        M201 = Zero
                        \_SB.ALIB
                        0x06
                        Local7
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF))
                    }

                    M000 (0xA2)
                    If ((\_SB.MACO == One))
                    {
                        P011 = 0xC4
                        Stall (M268)
                        P141 = 0x84
                        Sleep (M269)
                        M112 (M242, Zero)
                    }
                    Else
                    {
                        M112 (M242, Zero)
                        Sleep (0x0A)
                        M111 (M242, Zero)
                    }

                    M023 (Zero, M243, M244)
                     = M019 (M245, Zero, Zero)
                    Local1
                    Sleep (0x0A)
                    If ((M085 < 0x08))
                    {
                        Local4 = One
                        Local5 = 0x05
                        While ((Local4 && Local5))
                        {
                            0xA5 = M021 (Zero, M243, M244)
                            Local0
                            Local0 &= 0x7F
                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                            {
                                Local4 = Zero
                            }
                            Else
                            {
                                 = M019 (M245, Zero, Zero)
                                Local1
                                Sleep (0x05)
                                Local5--
                            }
                        }
                    }

                    M000 (0xA3)
                    M272 = 0x02
                }
            }

            Release (EEBC)
        }

        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                If ((M239 == Zero))
                {
                    M241 (One)
                }

                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                If ((M239 == One))
                {
                    M241 (Zero)
                }

                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }

    Scope (\_SB.PCI0.GPP0.SWUS)
    {
        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.SWUS.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }

    Scope (\_SB.PCI0.GPP0.SWUS.SWDS)
    {
        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.SWUS.SWDS.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 19 external control methods found during
     * disassembly, but only 0 were resolved (19 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M097, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M131, IntObj)
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M232, MethodObj)    // Warning: Unknown method, guessing 7 arguments

    Scope (\_SB)
    {
        Name (MACO, Zero)
    }

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M189, Buffer (0x0100){})
        Name (M190, Ones)
        Name (M191, Ones)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (PX00 ())
            }

            If ((Arg0 == One))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0A))
            {
                PX10 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = Zero
            M158 = Zero
            M160 = Zero
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (One, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            Local7 = Buffer (0x05){}
            CreateWordField (Local7, Zero, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = Zero
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, Zero)
            M133 (0x11, Local0) = M049 /* External reference */
            Store (M113 (Local0, Local6, M023 (Zero, M091, M090), If ((M192 && Local6))
                    {
                        M000 (0x86)
                        M112 (Local0, Zero)
                        M111 (Local0, One)
                        Sleep (0x20)
                        M112 (Local0, 0x02)
                        M112 (Local0, One)
                        M000 (0x87)
                        HPOK = Zero
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        Local2 = Zero
                        While ((Local2 < 0x0F))
                        {
                            M023 (Zero, M091, M090)
                            Local4 = One
                            Local5 = 0xC8
                            While ((Local4 && Local5))
                            {
                                0xA5 = M021 (Zero, M091, M090)
                                Local0
                                Local0 &= 0x7F
                                If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                {
                                    Local4 = Zero
                                }
                                Else
                                {
                                    Sleep (0x05)
                                    Local5--
                                }
                            }

                            If (!Local4)
                            {
                                M090 = M024 (Zero, M091)
                                Local5
                                If (Local5)
                                {
                                    M026 (Zero, M091, M090)
                                    Sleep (0x05)
                                    Local2++
                                }
                                Else
                                {
                                    Local0 = Zero
                                    If ((M025 == Zero))
                                    {
                                        M091
                                        M090
                                        Ones
                                        Local0 = One
                                    }

                                    If (Local0)
                                    {
                                        M111 (M049, M133 (0x17, One))
                                        M111 (M049, M133 (0x18, One))
                                        HPOK = One
                                        Local2 = 0x10
                                    }
                                    Else
                                    {
                                        HPOK = Zero
                                        Local2 = 0x10
                                    }
                                }
                            }
                            Else
                            {
                                Local2 = 0x10
                            }
                        }

                        If (!HPOK)
                        {
                            M000 (0x88)
                            Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                Local5 = 0x05, While ((Local4 && Local5))
                                        {
                                            0xA5 = M021 (Zero, M091, M090)
                                            Local0
                                            Local0 &= 0x7F
                                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                            {
                                                Local4 = Zero
                                            }
                                            Else
                                            {
                                                Store (M019 (M095 (M094 (M093 (Zero, Local0), Sleep (0x05), Local5--), 
                                                    M201 = Zero, \_SB.ALIB, 0x06), Local7, If ((M097 (Zero, 0x54 = M019 (
                                                    Zero, M091, M090), Local0, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFC)), 
                                                    M232 (M097 (Zero, 0x10, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFF)), 
                                                    M000 (0x89), Else
                                                                                {
                                                                                    M000 (0x8A)
                                                                                    M201 = Zero
                                                                                    \_SB.ALIB
                                                                                    0x06
                                                                                    Local7
                                                                                    M000 (0x8B)
                                                                                    M111 (M049, M133 (0x17, Zero))
                                                                                    M111 (M049, M133 (0x18, Zero))
                                                                                    M112 (Local0, Zero)
                                                                                    Sleep (0x0A)
                                                                                    M111 (Local0, Zero)
                                                                                    M023 (Zero, M091, M090)
                                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                                                                        Local5 = 0x05, While ((Local4 && Local5))
                                                                                                {
                                                                                                    0xA5 = M021 (Zero, M091, M090)
                                                                                                    Local0
                                                                                                    Local0 &= 0x7F
                                                                                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                                                                    {
                                                                                                        Local4 = Zero
                                                                                                    }
                                                                                                    Else
                                                                                                    {
                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x05), Local5--), 
                                                                                                            HPOK = 0x02, M000 (0x8C), If (HPOK)
                                                                                                                    {
                                                                                                                        Local5 = 0x7FFFFFFF
                                                                                                                        Local5 |= 0x80000000
                                                                                                                        0x54 = M019 (Zero, M091, M090)
                                                                                                                        Local1
                                                                                                                        M020 (Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFC))
                                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local0), If (((HPOK == One) && 
                                                                                                                            (Local0 != Local5)))
                                                                                                                                        {
                                                                                                                                            M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                                                                Local5))
                                                                                                                                                        {
                                                                                                                                                            M020 (M095 (M094 (M191 = (M093 (One, Zero) + 0x4C), Sleep (0x0A), M020 (
                                                                                                                                                                Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFF)))))
                                                                                                                                                        })))
                                                                                                                                        })))
                                                                                                                    }))
                                                                                                    }
                                                                                                }))
                                                                                }))) != )){})
                                            }
                                        }))
                        }
                    })
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & One)
            If (M195)
            {
                M111 (M049, M133 (0x17, One))
            }
            Else
            {
                M111 (M049, M133 (0x17, Zero))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & One)
            If (M196)
            {
                M111 (M049, M133 (0x18, One))
            }
            Else
            {
                M111 (M049, M133 (0x18, Zero))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX08.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX09.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX10, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            \_SB.MACO = (Arg0 & One)
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & One)
            Local2 = M162 /* \_SB_.PCI0.GP17.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0E, Zero, 0x08, Local2)
            }
        }

        Name (ATIB, Buffer (0x0100){})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (AF00 ())
            }

            If ((Arg0 == One))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, Zero, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = Zero
                M158 = Zero
                M159 = Zero
                M160 = Zero
                Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = One
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID, Local1))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, Zero)
        Name (M211, Zero)
        Name (M212, Zero)
        Name (M213, Zero)
        Name (M214, Zero)
        Name (M215, Zero)
        Name (M303, Zero)
        Name (M304, Zero)
        Name (SSDM, 0x0A)
        Name (SCDY, Zero)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, Zero, M165)
            CreateBitField (M164, One, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.GP17.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.GP17.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.GP17.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.GP17.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.GP17.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.GP17.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.GP17.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.GP17.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, Zero)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = Zero
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.GP17.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.GP17.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.GP17.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = Zero
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.GP17.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = Zero
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ One)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = Zero
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, Zero), 0x10, Local0)
            Else
            {
                 = M043 (Zero, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [Zero] = 0x05
                    ATIB [One] = Zero
                    ATIB [0x02] = Zero
                    ATIB [0x03] = Zero
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & One))
            {
                CreateBitField (M164, Zero, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, One, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)){}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                OperationRegion (VARM, SystemIO, 0x80, 0x02)
                Field (VARM, WordAcc, NoLock, Preserve)
                {
                    VARR,   16
                }

                Local0 = (Arg0 & 0x03)
                M303 = Local0
                VARR = Local0
                Sleep (0x01F4)
                Local0 = (Arg1 & Ones)
                M304 = Local0
                VARR = ((Local0 >> 0x10) & 0xFFFF)
                Sleep (0x01F4)
                VARR = (Local0 & 0xFFFF)
                Sleep (0x01F4)
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PCI0.LPC0.EC0_, DeviceObj)
    External (M229, UnknownObj)
    External (Z009, UnknownObj)

    Method (M040, 1, Serialized)
    {
        Return (\_SB.PCI0.LPC0.EC0.M040 (Arg0))
    }

    Method (M041, 2, Serialized)
    {
        \_SB.PCI0.LPC0.EC0.M041 (Arg0, Arg1)
    }

    Method (M319, 2, Serialized)
    {
        \_SB.PCI0.LPC0.EC0.M319 (Arg0, Arg1)
    }

    Method (M038, 1, Serialized)
    {
        Local1 = (Arg0 & 0x07)
        Local2 = (Arg0 >> 0x03)
        Local2 += M229 /* External reference */
        Local0 = M040 (Local2)
        Local0 >>= Local1
        Local0 &= One
        Return (Local0)
    }

    Method (M039, 2, Serialized)
    {
        Local1 = (Arg0 & 0x07)
        Local2 = (Arg0 >> 0x03)
        Local2 += M229 /* External reference */
        Local0 = M040 (Local2)
        Local3 = ((Arg1 & One) << Local1)
        Local4 = (0xFF ^ (One << Local1))
        Local0 &= Local4
        M041 (Local2, (Local0 | Local3))
        Local0 = M040 (0xCF)
        M041 (0xCF, (Local0 | One))
    }

    Scope (\_SB.PCI0.LPC0.EC0)
    {
        Method (M040, 1, Serialized)
        {
            Local1 = Zero
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARM, EmbeddedControl, Local0, One)
                Field (VARM, ByteAcc, NoLock, Preserve)
                {
                    VARR,   8
                }

                Local1 = VARR /* \_SB_.PCI0.LPC0.EC0_.M040.VARR */
                Release (Z009)
            }

            Return (Local1)
        }

        Method (M041, 2, Serialized)
        {
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARM, EmbeddedControl, Local0, One)
                Field (VARM, ByteAcc, NoLock, Preserve)
                {
                    VARR,   8
                }

                Local1 = Arg1
                VARR = Local1
                Release (Z009)
            }
        }

        Method (M319, 2, Serialized)
        {
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARI, SystemIO, Local0, One)
                Field (VARI, ByteAcc, NoLock, Preserve)
                {
                    VARO,   8
                }

                Local1 = Arg1
                VARO = Local1
                Release (Z009)
            }
        }
    }
}



SSDT6
-----


SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_.ADPT, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.C1FR, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.CTMP, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.G1FR, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.KBLK, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.S1TV, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.SKTC, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.TOUP, UnknownObj)
    External (_SB_.PCI0.LPCB.EC0_.GGSI, IntObj)

    Scope (\_SB.PCI0)
    {
        Device (WMID)
        {
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "APGe")  // _UID: Unique ID
            OperationRegion (AGNS, SystemMemory, 0x6F39D000, 0x00001187)
            Field (AGNS, AnyAcc, Lock, Preserve)
            {
                D2DF,   8, 
                MTID,   8, 
                WMIB,   33056, 
                ECDA,   2048, 
                HDIF,   504, 
                ODIF,   168, 
                CTID,   16, 
                LMST,   8, 
                EPMS,   8, 
                DCST,   8, 
                APUS,   8, 
                RFDS,   8, 
                ODST,   8, 
                HSST,   8, 
                TMGB,   16, 
                TOPT,   8, 
                PSSP,   8
            }

            Name (_WDG, Buffer (0xF0)
            {
                /* 0000 */  0x5E, 0xA1, 0x6A, 0x67, 0x47, 0x6A, 0x9F, 0x4D,  // ^.jgGj.M
                /* 0008 */  0xA2, 0xCC, 0x1E, 0x6D, 0x18, 0xD1, 0x40, 0x26,  // ...m..@&
                /* 0010 */  0xBC, 0x00, 0x01, 0x08, 0xEA, 0x69, 0xEF, 0x61,  // .....i.a
                /* 0018 */  0x5C, 0x86, 0xC3, 0x4B, 0xA5, 0x02, 0xA0, 0xDE,  // \..K....
                /* 0020 */  0xBA, 0x0C, 0xB5, 0x31, 0x41, 0x41, 0x01, 0x02,  // ...1AA..
                /* 0028 */  0xC5, 0x2E, 0x77, 0x79, 0xB1, 0x04, 0xFD, 0x4B,  // ..wy...K
                /* 0030 */  0x84, 0x3C, 0x61, 0xE7, 0xF7, 0x7B, 0x6C, 0xC9,  // .<a..{l.
                /* 0038 */  0x42, 0x45, 0x01, 0x02, 0xC6, 0x2E, 0x77, 0x79,  // BE....wy
                /* 0040 */  0xB1, 0x04, 0xFD, 0x4B, 0x84, 0x3C, 0x61, 0xE7,  // ...K.<a.
                /* 0048 */  0xF7, 0x7B, 0x6C, 0xC9, 0x42, 0x46, 0x01, 0x02,  // .{l.BF..
                /* 0050 */  0x66, 0x56, 0x5F, 0xF7, 0xB3, 0xB8, 0x5D, 0x4A,  // fV_...]J
                /* 0058 */  0xA9, 0x1C, 0x74, 0x88, 0xF6, 0x2E, 0x56, 0x37,  // ..t...V7
                /* 0060 */  0x42, 0x4B, 0x01, 0x02, 0xDA, 0xBB, 0x1D, 0xFE,  // BK......
                /* 0068 */  0x14, 0x30, 0x56, 0x48, 0x87, 0x0C, 0x5B, 0x3A,  // .0VH..[:
                /* 0070 */  0x74, 0x4B, 0xF3, 0x41, 0x42, 0x4C, 0x01, 0x02,  // tK.ABL..
                /* 0078 */  0xA7, 0xC3, 0xB0, 0x77, 0x1D, 0xF7, 0xCB, 0x43,  // ...w...C
                /* 0080 */  0xB7, 0x49, 0x91, 0xCB, 0xFF, 0x5D, 0xDC, 0x43,  // .I...].C
                /* 0088 */  0x42, 0x47, 0x01, 0x02, 0xE7, 0xDF, 0x4D, 0x7A,  // BG....Mz
                /* 0090 */  0x5D, 0x5B, 0xB4, 0x40, 0x85, 0x95, 0x44, 0x08,  // ][.@..D.
                /* 0098 */  0xE0, 0xCC, 0x7F, 0x56, 0x42, 0x48, 0x01, 0x02,  // ...VBH..
                /* 00A0 */  0x43, 0x34, 0xB5, 0x4B, 0x8A, 0x48, 0x0D, 0x43,  // C4.K.H.C
                /* 00A8 */  0xA2, 0x5C, 0x87, 0x46, 0x60, 0xE2, 0x3B, 0xDD,  // .\.F`.;.
                /* 00B0 */  0x41, 0x43, 0x01, 0x02, 0xF6, 0x7E, 0xD7, 0xA9,  // AC...~..
                /* 00B8 */  0xE0, 0x55, 0x06, 0x47, 0xB1, 0x39, 0x96, 0xAC,  // .U.G.9..
                /* 00C0 */  0xE1, 0x3F, 0x22, 0x69, 0xBD, 0x00, 0x01, 0x08,  // .?"i....
                /* 00C8 */  0x0E, 0x13, 0x98, 0x9F, 0x48, 0x3B, 0xB3, 0x40,  // ....H;.@
                /* 00D0 */  0x94, 0x02, 0xDE, 0x8E, 0x16, 0x0F, 0x30, 0xCC,  // ......0.
                /* 00D8 */  0x41, 0x42, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AB..!...
                /* 00E0 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 00E8 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00   // ..).AB..
            })
            Name (BFFB, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (FEBC, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (AAST, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (AAGT, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BEBI, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGP, Buffer (0x0C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKGB, Buffer (0x14)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSU, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSS, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BLSP, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACGB, Buffer (0x0804)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLLB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLSD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLDR, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGP, Buffer (0x20)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHSK, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BHGK, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BGS3, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (BKMN, Buffer (0x58)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKSN, Buffer (0x30)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKAT, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGU, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGS, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BLGB, Buffer (0x100C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0808 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0810 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0818 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0820 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0828 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0830 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0838 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0840 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0848 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0850 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0858 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0860 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0868 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0870 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0878 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0880 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0888 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0890 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0898 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0900 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0908 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0910 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0918 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0920 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0928 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0930 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0938 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0940 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0948 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0950 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0958 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0960 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0968 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0970 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0978 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0980 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0988 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0990 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0998 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ABST, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (ABGT, Buffer (0x84)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Method (GCMS, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GOTS, 2, Serialized)
            {
                Local0 = Zero
                Local1 = (Arg0 & 0xFF)
                Switch (Local1)
                {
                    Case (0x83)
                    {
                        If (!\_SB.PCI0.LPC0.EC0.TOUP)
                        {
                            Local0 |= 0x02
                        }
                    }
                    Case (0x85)
                    {
                        If (\_SB.PCI0.LPC0.EC0.KBLK)
                        {
                            Local0 |= 0x40
                        }
                    }

                }

                Arg1 = Local0
                Return (Zero)
            }

            Method (GBL1, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GBL2, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GSTY, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GSDA, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GTTY, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GTDA, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GACS, 1, NotSerialized)
            {
                Local0 = Zero
                Local0 = \_SB.PCI0.LPC0.EC0.ADPT /* External reference */
                Arg0 = Local0
                Return (Zero)
            }

            Method (GHKF, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GHKD, 1, NotSerialized)
            {
                Local0 = Zero
                Arg0 = Local0
                Return (Zero)
            }

            Method (GGSI, 2, Serialized)
            {
                Local0 = Zero
                Local1 = DerefOf (Arg0 [Zero])
                Local2 = DerefOf (Arg0 [One])
                If ((Local1 == Zero))
                {
                    Arg1 = Local0
                }
                ElseIf ((Local1 == One))
                {
                    Switch (Local2)
                    {
                        Case (One)
                        {
                            Local0 = \_SB.PCI0.LPC0.EC0.CTMP /* External reference */
                        }
                        Case (0x02)
                        {
                            Local0 = \_SB.PCI0.LPC0.EC0.C1FR /* External reference */
                        }
                        Case (0x03)
                        {
                            Local0 = \_SB.PCI0.LPC0.EC0.S1TV /* External reference */
                        }
                        Case (0x04)
                        {
                        }
                        Case (0x05)
                        {
                        }
                        Case (0x06)
                        {
                            Local0 = \_SB.PCI0.LPC0.EC0.G1FR /* External reference */
                        }
                        Case (0x07)
                        {
                        }
                        Case (0x08)
                        {
                        }
                        Case (0x09)
                        {
                        }
                        Case (0x0A)
                        {
                            Local0 = \_SB.PCI0.LPC0.EC0.SKTC /* External reference */
                        }
                        Case (0x0B)
                        {
                        }

                    }

                    Arg1 = Local0
                }

                Return (Zero)
            }

            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                CMSI = Arg0
                CMSD = Arg1
            }

            Method (CLBC, 2, NotSerialized)
            {
                Local1 = Arg0
                Local2 = Arg1
                Local2 += Local1
                While (One)
                {
                    FEBC [Local1] = Zero
                    Local1 += One
                    If ((Local1 == Local2))
                    {
                        Break
                    }
                }
            }

            Method (CMSR, 1, NotSerialized)
            {
                CMSI = Arg0
                Return (CMSD) /* \_SB_.PCI0.WMID.CMSD */
            }

            OperationRegion (CSPR, SystemIO, PSSP, 0x02)
            Field (CSPR, ByteAcc, NoLock, Preserve)
            {
                WSSP,   8
            }

            Method (WSMI, 2, NotSerialized)
            {
                MTID = Arg0
                WMIB = Arg1
                WSSP = 0xD0
            }

            Name (WQAB, Buffer (0x28E1)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xD1, 0x28, 0x00, 0x00, 0xB8, 0x2D, 0x01, 0x00,  // .(...-..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x28, 0x49, 0x90, 0x01, 0x01, 0x08, 0x09, 0x42,  // (I.....B
                /* 0020 */  0xD8, 0x06, 0x84, 0x48, 0x08, 0x81, 0x44, 0x40,  // ...H..D@
                /* 0028 */  0x28, 0x32, 0x0B, 0x83, 0x21, 0x04, 0x8E, 0x0B,  // (2..!...
                /* 0030 */  0x21, 0x07, 0x10, 0x12, 0x07, 0x85, 0x12, 0x02,  // !.......
                /* 0038 */  0xA1, 0xFE, 0x04, 0xF2, 0x2B, 0x00, 0xA1, 0x43,  // ....+..C
                /* 0040 */  0x01, 0x32, 0x05, 0x18, 0x14, 0xE0, 0x14, 0x41,  // .2.....A
                /* 0048 */  0x04, 0xBD, 0x0A, 0xB0, 0x29, 0xC0, 0xA4, 0x00,  // ....)...
                /* 0050 */  0x8B, 0x02, 0xB4, 0x0B, 0xB0, 0x2C, 0x40, 0xB7,  // .....,@.
                /* 0058 */  0x00, 0xE9, 0xB0, 0x44, 0x24, 0x38, 0x4A, 0x0C,  // ...D$8J.
                /* 0060 */  0x38, 0x4A, 0x27, 0xB6, 0x70, 0xC3, 0x06, 0x2F,  // 8J'.p../
                /* 0068 */  0x14, 0x45, 0x33, 0x88, 0x92, 0xA0, 0x72, 0x01,  // .E3...r.
                /* 0070 */  0xBE, 0x11, 0x04, 0x5E, 0xAE, 0x00, 0xC9, 0x13,  // ...^....
                /* 0078 */  0x90, 0x66, 0x01, 0x86, 0x05, 0x58, 0x17, 0x20,  // .f...X. 
                /* 0080 */  0x7B, 0x08, 0x54, 0xEA, 0x10, 0x50, 0x72, 0x86,  // {.T..Pr.
                /* 0088 */  0x80, 0x1A, 0x40, 0xAB, 0x13, 0x10, 0x7E, 0xA5,  // ..@...~.
                /* 0090 */  0x53, 0x42, 0x12, 0x84, 0x33, 0x56, 0xF1, 0xF8,  // SB..3V..
                /* 0098 */  0x9A, 0x45, 0xD3, 0x73, 0x92, 0x73, 0x0C, 0x39,  // .E.s.s.9
                /* 00A0 */  0x1E, 0x17, 0x7A, 0x10, 0x3C, 0xAC, 0x04, 0x10,  // ..z.<...
                /* 00A8 */  0x16, 0x60, 0xC8, 0x8A, 0x07, 0x83, 0xD2, 0x30,  // .`.....0
                /* 00B0 */  0x16, 0xEA, 0x62, 0xD4, 0xA8, 0x91, 0xB2, 0x01,  // ..b.....
                /* 00B8 */  0x19, 0xA2, 0x24, 0x38, 0xD4, 0xA8, 0x2D, 0x51,  // ..$8..-Q
                /* 00C0 */  0x80, 0xF9, 0x71, 0x68, 0x76, 0x6D, 0x8F, 0x85,  // ..qhvm..
                /* 00C8 */  0x40, 0x32, 0x69, 0x43, 0x41, 0x49, 0x81, 0xD0,  // @2iCAI..
                /* 00D0 */  0xD8, 0xCE, 0xD4, 0x33, 0x8A, 0x78, 0xA4, 0x86,  // ...3.x..
                /* 00D8 */  0x49, 0xE0, 0x51, 0x44, 0x36, 0x1A, 0x87, 0xC6,  // I.QD6...
                /* 00E0 */  0x0E, 0xC3, 0xC3, 0x0C, 0x76, 0x10, 0x87, 0x71,  // ....v..q
                /* 00E8 */  0xCC, 0x91, 0x13, 0x78, 0x42, 0x47, 0x7A, 0xE4,  // ...xBGz.
                /* 00F0 */  0x85, 0xCD, 0x53, 0xA8, 0x31, 0x9A, 0x83, 0x22,  // ..S.1.."
                /* 00F8 */  0x73, 0x78, 0x14, 0xC0, 0x8E, 0x29, 0xEC, 0xD1,  // sx...)..
                /* 0100 */  0xC6, 0x3E, 0x5F, 0x0B, 0x1F, 0xAC, 0x30, 0x8E,  // .>_...0.
                /* 0108 */  0xE0, 0xB8, 0x12, 0xFC, 0xFF, 0x4F, 0xFC, 0x50,  // .....O.P
                /* 0110 */  0x7A, 0x84, 0x93, 0xA0, 0x29, 0x52, 0x90, 0xA3,  // z...)R..
                /* 0118 */  0xC6, 0xC8, 0xC2, 0x91, 0xD6, 0x59, 0x91, 0xB9,  // .....Y..
                /* 0120 */  0x1B, 0xD8, 0x40, 0x95, 0x09, 0xD0, 0x25, 0xC0,  // ..@...%.
                /* 0128 */  0xDA, 0xA4, 0x08, 0xC1, 0x01, 0x1D, 0x09, 0x46,  // .......F
                /* 0130 */  0x06, 0x84, 0x3C, 0x1F, 0x0C, 0x34, 0x44, 0x13,  // ..<..4D.
                /* 0138 */  0xD8, 0xBD, 0x00, 0x6D, 0x02, 0xBC, 0x41, 0x68,  // ...m..Ah
                /* 0140 */  0x20, 0x11, 0x1A, 0x43, 0xD6, 0x2C, 0xDA, 0xC2,  //  ..C.,..
                /* 0148 */  0x21, 0xE8, 0xB1, 0xA2, 0xC4, 0x38, 0xA8, 0x43,  // !....8.C
                /* 0150 */  0xAB, 0x11, 0x45, 0x48, 0x27, 0xF1, 0x6A, 0x10,  // ..EH'.j.
                /* 0158 */  0x21, 0x4A, 0xCC, 0x90, 0x11, 0x83, 0x05, 0x79,  // !J.....y
                /* 0160 */  0x8E, 0x88, 0xE1, 0x31, 0x1A, 0x2E, 0x52, 0xFB,  // ...1..R.
                /* 0168 */  0x83, 0x20, 0xF2, 0x5E, 0x13, 0x3A, 0x10, 0x38,  // . .^.:.8
                /* 0170 */  0xD2, 0x68, 0x50, 0xA7, 0x05, 0x1F, 0x0A, 0x3C,  // .hP....<
                /* 0178 */  0xBB, 0x87, 0x04, 0x0F, 0xEE, 0xA4, 0x83, 0x9C,  // ........
                /* 0180 */  0xE8, 0xC1, 0x3D, 0x43, 0x3C, 0x0D, 0x78, 0xDC,  // ..=C<.x.
                /* 0188 */  0xEC, 0x9A, 0xE0, 0xC3, 0x85, 0x8F, 0x07, 0x78,  // .......x
                /* 0190 */  0xD7, 0x80, 0xBA, 0x17, 0x3C, 0x15, 0xB0, 0x59,  // ....<..Y
                /* 0198 */  0x86, 0xC3, 0x0C, 0xD1, 0x83, 0x0D, 0x77, 0x02,  // ......w.
                /* 01A0 */  0x87, 0xC8, 0x00, 0x3D, 0xA4, 0x07, 0x02, 0xEC,  // ...=....
                /* 01A8 */  0xDC, 0x4E, 0xE6, 0xD8, 0x5F, 0x28, 0x9A, 0xBD,  // .N.._(..
                /* 01B0 */  0x4A, 0x10, 0x82, 0xE3, 0xF1, 0x2D, 0x82, 0x4D,  // J....-.M
                /* 01B8 */  0x38, 0x81, 0xE5, 0x0F, 0x02, 0x35, 0x32, 0x43,  // 8....52C
                /* 01C0 */  0x7B, 0xA8, 0xA7, 0xF5, 0x36, 0xE0, 0x73, 0x80,  // {...6.s.
                /* 01C8 */  0x09, 0x2C, 0x16, 0x42, 0x0A, 0x20, 0x34, 0x1E,  // .,.B. 4.
                /* 01D0 */  0xF0, 0x2B, 0x3E, 0x79, 0x90, 0x2B, 0x83, 0xE7,  // .+>y.+..
                /* 01D8 */  0xEB, 0x43, 0x84, 0x8E, 0x16, 0x32, 0xB2, 0x0A,  // .C...2..
                /* 01E0 */  0x8F, 0x87, 0x9E, 0x17, 0x7C, 0x49, 0xC0, 0xDC,  // ....|I..
                /* 01E8 */  0x18, 0x3C, 0x74, 0x0F, 0xE9, 0xF9, 0xC0, 0x92,  // .<t.....
                /* 01F0 */  0x60, 0xF5, 0xFF, 0x3F, 0x05, 0x58, 0xD4, 0xC8,  // `..?.X..
                /* 01F8 */  0xE9, 0xA9, 0x82, 0x1F, 0x28, 0x18, 0x6C, 0xD0,  // ....(.l.
                /* 0200 */  0xB0, 0x1E, 0xCC, 0x39, 0xF9, 0xD3, 0xE2, 0xB1,  // ...9....
                /* 0208 */  0xC1, 0x07, 0xC4, 0x7B, 0x9F, 0x35, 0x19, 0xC1,  // ...{.5..
                /* 0210 */  0xC9, 0x1A, 0xD0, 0x87, 0x07, 0xDC, 0xA9, 0x02,  // ........
                /* 0218 */  0xBC, 0x30, 0x87, 0xC5, 0xEF, 0x15, 0xB0, 0x0F,  // .0......
                /* 0220 */  0x0B, 0x1E, 0x25, 0x1F, 0x8D, 0x87, 0x70, 0x16,  // ..%...p.
                /* 0228 */  0x4F, 0x03, 0x86, 0x31, 0xFA, 0x53, 0x00, 0xEC,  // O..1.S..
                /* 0230 */  0x1B, 0x86, 0xC7, 0xE2, 0x93, 0x8E, 0x8F, 0x3A,  // .......:
                /* 0238 */  0xE0, 0x18, 0x1C, 0xBF, 0xC3, 0xE0, 0x8E, 0x3A,  // .......:
                /* 0240 */  0xC0, 0x63, 0xAE, 0x8F, 0x3A, 0x60, 0x3B, 0x1F,  // .c..:`;.
                /* 0248 */  0xB0, 0x63, 0x0E, 0x2C, 0x09, 0xC7, 0x24, 0x54,  // .c.,..$T
                /* 0250 */  0x68, 0x28, 0xFA, 0xFF, 0x87, 0xE3, 0x81, 0x07,  // h(......
                /* 0258 */  0x4F, 0xE5, 0x0D, 0x16, 0x14, 0x10, 0xC7, 0xF1,  // O.......
                /* 0260 */  0x76, 0xF0, 0x9E, 0x04, 0xE3, 0x9C, 0x04, 0xF0,  // v.......
                /* 0268 */  0xF1, 0x68, 0xC0, 0x2E, 0x1D, 0xCF, 0x49, 0x70,  // .h....Ip
                /* 0270 */  0xFF, 0xFF, 0xE7, 0x24, 0xB0, 0x9E, 0x07, 0x4E,  // ...$...N
                /* 0278 */  0xE9, 0x6C, 0x5E, 0x91, 0x22, 0x9C, 0xC4, 0x1B,  // .l^."...
                /* 0280 */  0xD2, 0x93, 0xD1, 0xFB, 0x51, 0xF0, 0x27, 0x25,  // ....Q.'%
                /* 0288 */  0x4F, 0xEC, 0x39, 0xC9, 0x58, 0x41, 0x42, 0x59,  // O.9.XABY
                /* 0290 */  0xE1, 0x0D, 0x49, 0xCE, 0x50, 0x85, 0x12, 0xE2,  // ..I.P...
                /* 0298 */  0x79, 0xC9, 0xD7, 0x05, 0x23, 0x19, 0xF9, 0x54,  // y...#..T
                /* 02A0 */  0x5E, 0x93, 0x8C, 0xF5, 0x9C, 0x04, 0x30, 0xF0,  // ^.....0.
                /* 02A8 */  0xFF, 0x7F, 0x4E, 0x02, 0xBE, 0xA7, 0x0A, 0xB8,  // ..N.....
                /* 02B0 */  0xE7, 0x24, 0xC0, 0xC9, 0xE0, 0xD8, 0x09, 0x13,  // .$......
                /* 02B8 */  0x58, 0x9D, 0x93, 0x80, 0x4B, 0x54, 0x13, 0x67,  // X...KT.g
                /* 02C0 */  0x1C, 0x8C, 0xAC, 0x75, 0xD3, 0x63, 0x0E, 0x38,  // ...u.c.8
                /* 02C8 */  0xFE, 0xFF, 0xA7, 0x4B, 0xC0, 0x22, 0xC6, 0xF3,  // ...K."..
                /* 02D0 */  0x86, 0x45, 0x03, 0x6A, 0x04, 0xCF, 0x0F, 0xB0,  // .E.j....
                /* 02D8 */  0x4F, 0x97, 0xF0, 0x6F, 0x94, 0xBE, 0xE4, 0x78,  // O..o...x
                /* 02E0 */  0x52, 0x41, 0x0E, 0xE5, 0xF5, 0xE6, 0xC9, 0x21,  // RA.....!
                /* 02E8 */  0x4C, 0xF4, 0x07, 0x4B, 0xE3, 0x3F, 0xE4, 0x04,  // L..K.?..
                /* 02F0 */  0x79, 0xBF, 0x79, 0xBA, 0x34, 0xD2, 0x73, 0xA5,  // y.y.4.s.
                /* 02F8 */  0x51, 0x0C, 0x72, 0x66, 0x51, 0xA3, 0x45, 0x31,  // Q.rfQ.E1
                /* 0300 */  0x5E, 0x90, 0x68, 0x11, 0x8F, 0xE0, 0x31, 0x87,  // ^.h...1.
                /* 0308 */  0xC5, 0x3A, 0x10, 0xE8, 0x23, 0xE5, 0x63, 0x0E,  // .:..#.c.
                /* 0310 */  0xE0, 0xE6, 0xFF, 0x7F, 0xCC, 0x01, 0x1C, 0x9C,  // ........
                /* 0318 */  0xE6, 0xC0, 0x71, 0x5A, 0xE0, 0xA3, 0xE2, 0x57,  // ..qZ...W
                /* 0320 */  0x06, 0x76, 0x26, 0x01, 0x26, 0x51, 0x9E, 0x1E,  // .v&.&Q..
                /* 0328 */  0x1A, 0xA7, 0x35, 0x3E, 0x07, 0x64, 0xE3, 0x24,  // ..5>.d.$
                /* 0330 */  0x44, 0x07, 0x61, 0x25, 0x54, 0x3A, 0xB1, 0x18,  // D.a%T:..
                /* 0338 */  0xF3, 0xAD, 0x21, 0xEE, 0xB3, 0x81, 0xE7, 0x83,  // ..!.....
                /* 0340 */  0x49, 0x7F, 0x50, 0xD0, 0xF9, 0xC7, 0xE0, 0xCE,  // I.P.....
                /* 0348 */  0x4D, 0xA2, 0xDC, 0x03, 0xA2, 0xF0, 0x4E, 0x7A,  // M.....Nz
                /* 0350 */  0x0C, 0xA2, 0x20, 0x06, 0x74, 0x0C, 0x08, 0x59,  // .. .t..Y
                /* 0358 */  0x39, 0x08, 0xA0, 0xAF, 0x13, 0x3E, 0x32, 0xF8,  // 9....>2.
                /* 0360 */  0x9C, 0x11, 0xE5, 0x8C, 0x7C, 0xC0, 0x78, 0x5C,  // ....|.x\
                /* 0368 */  0x60, 0xC3, 0xF1, 0x41, 0x80, 0x1F, 0x50, 0x7C,  // `..A..P|
                /* 0370 */  0x33, 0x30, 0xB6, 0xD5, 0x1C, 0x77, 0x50, 0x60,  // 30...wP`
                /* 0378 */  0x86, 0x7F, 0x81, 0x31, 0x81, 0xEF, 0x19, 0x6F,  // ...1...o
                /* 0380 */  0x3B, 0x60, 0x39, 0x63, 0x3C, 0x71, 0x58, 0x1F,  // ;`9c<qX.
                /* 0388 */  0x2E, 0xEA, 0xFF, 0x7F, 0x18, 0x80, 0x07, 0xE4,  // ........
                /* 0390 */  0xE9, 0xFB, 0x44, 0xF3, 0x08, 0xC0, 0xC6, 0xF0,  // ..D.....
                /* 0398 */  0x50, 0x63, 0x34, 0xA3, 0xF3, 0xF8, 0x73, 0x45,  // Pc4...sE
                /* 03A0 */  0xDD, 0x1F, 0x3D, 0x57, 0x83, 0x78, 0xAE, 0x0E,  // ..=W.x..
                /* 03A8 */  0x03, 0x21, 0x27, 0x73, 0x45, 0xDD, 0x5E, 0x3C,  // .!'sE.^<
                /* 03B0 */  0x22, 0xFB, 0x9C, 0x2A, 0x19, 0x2C, 0x27, 0x88,  // "..*.,'.
                /* 03B8 */  0xF2, 0xAA, 0x01, 0xEB, 0x20, 0x10, 0x91, 0xCD,  // .... ...
                /* 03C0 */  0xC3, 0x77, 0x25, 0xFC, 0x6C, 0xF9, 0x60, 0x7C,  // .w%.l.`|
                /* 03C8 */  0x95, 0x80, 0x3F, 0x5C, 0x7E, 0x2A, 0x79, 0x37,  // ..?\~*y7
                /* 03D0 */  0x49, 0x60, 0x81, 0xD3, 0x05, 0x39, 0x3C, 0xE6,  // I`...9<.
                /* 03D8 */  0xF1, 0x2F, 0x01, 0x16, 0xEE, 0x52, 0x74, 0x5C,  // ./...Rt\
                /* 03E0 */  0xFC, 0x76, 0xE0, 0x1B, 0x0F, 0xBB, 0xD3, 0xE0,  // .v......
                /* 03E8 */  0x2E, 0x62, 0x18, 0x58, 0x8F, 0x94, 0xC3, 0x1A,  // .b.X....
                /* 03F0 */  0x2D, 0xEC, 0x01, 0xBF, 0x71, 0xF8, 0xB8, 0xE2,  // -...q...
                /* 03F8 */  0x99, 0x19, 0x23, 0xAC, 0xEF, 0x29, 0xE0, 0xB8,  // ..#..)..
                /* 0400 */  0x93, 0xC1, 0x0F, 0x70, 0x05, 0x02, 0xD1, 0xFF,  // ...p....
                /* 0408 */  0xFF, 0x0A, 0x84, 0x3F, 0x6B, 0xB0, 0x2B, 0x99,  // ...?k.+.
                /* 0410 */  0x41, 0x5E, 0x94, 0x7C, 0xAE, 0x31, 0x7A, 0xA0,  // A^.|.1z.
                /* 0418 */  0xF7, 0x0D, 0xFC, 0x4D, 0x08, 0xF6, 0x0D, 0x04,  // ...M....
                /* 0420 */  0xCE, 0x50, 0x7C, 0x03, 0x01, 0x0E, 0xC7, 0x08,  // .P|.....
                /* 0428 */  0xDC, 0x0D, 0x04, 0x58, 0xDF, 0x21, 0xD8, 0x0D,  // ...X.!..
                /* 0430 */  0x04, 0x58, 0x9E, 0x5E, 0x70, 0x37, 0x10, 0xE0,  // .X.^p7..
                /* 0438 */  0xF4, 0xFF, 0xBF, 0x81, 0x80, 0xEB, 0xFE, 0xC2,  // ........
                /* 0440 */  0x6E, 0x20, 0xC0, 0x7C, 0xD4, 0xBE, 0x81, 0x00,  // n .|....
                /* 0448 */  0x96, 0xCE, 0x1A, 0xEC, 0x06, 0x02, 0xFE, 0xA0,  // ........
                /* 0450 */  0x3E, 0xC6, 0xC3, 0x82, 0x0C, 0x5D, 0xE2, 0x16,  // >....]..
                /* 0458 */  0x4E, 0x61, 0x7C, 0x4A, 0x04, 0x2E, 0xFF, 0xFF,  // Na|J....
                /* 0460 */  0x53, 0x22, 0xF0, 0x3B, 0x50, 0xF8, 0x04, 0x00,  // S".;P...
                /* 0468 */  0xB6, 0xCB, 0x28, 0x1B, 0xFA, 0xBB, 0x81, 0x2F,  // ..(..../
                /* 0470 */  0x8A, 0xE0, 0x3C, 0x29, 0xC2, 0x1F, 0xD6, 0x1B,  // ..<)....
                /* 0478 */  0x41, 0x88, 0xC7, 0xC4, 0x57, 0x6A, 0xCF, 0xEC,  // A...Wj..
                /* 0480 */  0xAD, 0xE2, 0x0D, 0x31, 0xC8, 0xE3, 0x61, 0xF4,  // ...1..a.
                /* 0488 */  0x48, 0x4F, 0x8A, 0x46, 0x0A, 0xF3, 0xA4, 0x68,  // HO.F...h
                /* 0490 */  0xC4, 0x30, 0x3E, 0x29, 0xFA, 0xA0, 0x68, 0xB8,  // .0>)..h.
                /* 0498 */  0xD7, 0x6B, 0x1F, 0x38, 0x22, 0x85, 0x8F, 0xED,  // .k.8"...
                /* 04A0 */  0xAB, 0x46, 0x84, 0x27, 0x45, 0x16, 0xEA, 0xA4,  // .F.'E...
                /* 04A8 */  0x08, 0xE8, 0xFB, 0xFF, 0x9F, 0x14, 0x81, 0xE7,  // ........
                /* 04B0 */  0x59, 0x18, 0x1C, 0xF7, 0x65, 0x3E, 0x83, 0x73,  // Y...e>.s
                /* 04B8 */  0x89, 0xED, 0x01, 0x3E, 0x28, 0x02, 0x93, 0x08,  // ...>(...
                /* 04C0 */  0x2B, 0xD4, 0x30, 0x9D, 0xE8, 0x31, 0xA3, 0x6B,  // +.0..1.k
                /* 04C8 */  0x15, 0xE7, 0xB0, 0xF2, 0xF7, 0x81, 0x4E, 0x5B,  // ......N[
                /* 04D0 */  0xEC, 0xB8, 0x70, 0x82, 0xAF, 0x41, 0xA7, 0x64,  // ..p..A.d
                /* 04D8 */  0x1C, 0x8F, 0xDA, 0xC3, 0xF7, 0x88, 0xAC, 0x14,  // ........
                /* 04E0 */  0x52, 0x17, 0x2B, 0xAE, 0x11, 0x46, 0x0A, 0x9F,  // R.+..F..
                /* 04E8 */  0x07, 0x3A, 0x1D, 0x71, 0x4D, 0x30, 0x82, 0x33,  // .:.qM0.3
                /* 04F0 */  0x88, 0x8F, 0x25, 0x4E, 0x02, 0x21, 0x23, 0x27,  // ..%N.!#'
                /* 04F8 */  0x01, 0xD4, 0xE8, 0x7C, 0x5B, 0xC1, 0x8F, 0x2F,  // ...|[../
                /* 0500 */  0xD0, 0x23, 0x43, 0x82, 0x13, 0x7B, 0xB5, 0x02,  // .#C..{..
                /* 0508 */  0xEF, 0x4D, 0x1B, 0x5C, 0x41, 0x26, 0x85, 0xD6,  // .M.\A&..
                /* 0510 */  0x72, 0x7B, 0x27, 0x83, 0xF2, 0x51, 0x22, 0xF4,  // r{'..Q".
                /* 0518 */  0xFF, 0xFF, 0x2D, 0x04, 0x33, 0x28, 0xF0, 0x9E,  // ..-.3(..
                /* 0520 */  0xF3, 0xF8, 0xA0, 0xC0, 0x73, 0x42, 0xF3, 0xA0,  // ....sB..
                /* 0528 */  0x70, 0x4A, 0x2E, 0x02, 0xBE, 0xB5, 0x90, 0x4B,  // pJ.....K
                /* 0530 */  0x8A, 0x8F, 0x14, 0x1E, 0x13, 0x98, 0x2F, 0x4E,  // ....../N
                /* 0538 */  0x7C, 0x4C, 0xE0, 0x49, 0x31, 0x26, 0xF4, 0xDD,  // |L.I1&..
                /* 0540 */  0x87, 0xDD, 0x28, 0xD8, 0xB1, 0xE2, 0x21, 0xCA,  // ..(...!.
                /* 0548 */  0x53, 0x02, 0x2F, 0x92, 0xA7, 0x04, 0xAE, 0x50,  // S./....P
                /* 0550 */  0x53, 0xF2, 0xB1, 0x82, 0xCE, 0x9A, 0xDF, 0x0C,  // S.......
                /* 0558 */  0xF8, 0xA4, 0x38, 0xC1, 0x04, 0x10, 0xBA, 0xCB,  // ..8.....
                /* 0560 */  0x78, 0x4C, 0xF0, 0xAE, 0xFD, 0xF0, 0xAE, 0x58,  // xL.....X
                /* 0568 */  0x1E, 0x1A, 0xAC, 0xFF, 0xFF, 0x1C, 0x3C, 0x34,  // ......<4
                /* 0570 */  0x70, 0xDD, 0xF6, 0x80, 0xC5, 0xEB, 0xC1, 0x17,  // p.......
                /* 0578 */  0x10, 0x1E, 0xF9, 0x04, 0x41, 0x41, 0x7C, 0x40,  // ....AA|@
                /* 0580 */  0x70, 0x9C, 0xC3, 0xA3, 0x2F, 0x20, 0xE8, 0x83,  // p.../ ..
                /* 0588 */  0x83, 0x07, 0xF4, 0xD4, 0xE4, 0x21, 0x9D, 0xCA,  // .....!..
                /* 0590 */  0xBB, 0x85, 0xEF, 0x36, 0xEC, 0xBA, 0x07, 0xEE,  // ...6....
                /* 0598 */  0xEB, 0x9C, 0xAF, 0x7B, 0xE0, 0x39, 0x2F, 0xF9,  // ...{.9/.
                /* 05A0 */  0xBA, 0x07, 0x5C, 0xE4, 0x1C, 0x60, 0x01, 0x11,  // ..\..`..
                /* 05A8 */  0xFF, 0xFF, 0xEB, 0x1E, 0xAC, 0xAB, 0x93, 0x0F,  // ........
                /* 05B0 */  0xB0, 0xE0, 0x3F, 0x5D, 0xB0, 0xD3, 0x1E, 0xF8,  // ..?]....
                /* 05B8 */  0x08, 0xA6, 0x7D, 0x57, 0xE8, 0x62, 0x84, 0x4B,  // ..}W.b.K
                /* 05C0 */  0xB5, 0x74, 0x1D, 0x02, 0xD9, 0xC5, 0x08, 0x66,  // .t.....f
                /* 05C8 */  0x0A, 0x48, 0x5D, 0x8C, 0xB8, 0x7E, 0x18, 0xE9,  // .H]..~..
                /* 05D0 */  0xBB, 0x18, 0xA1, 0x14, 0x5D, 0x8C, 0x28, 0x88,  // ....].(.
                /* 05D8 */  0x2F, 0x46, 0x00, 0x23, 0xFE, 0xFF, 0x17, 0x23,  // /F.#...#
                /* 05E0 */  0xC0, 0x4F, 0x88, 0x31, 0xA1, 0x75, 0x00, 0x93,  // .O.1.u..
                /* 05E8 */  0x73, 0xC1, 0x09, 0x3D, 0x18, 0x01, 0xDB, 0x4C,  // s..=...L
                /* 05F0 */  0x07, 0x23, 0x34, 0xB0, 0x4F, 0x06, 0x7C, 0x50,  // .#4.O.|P
                /* 05F8 */  0xEC, 0x5E, 0x04, 0xE6, 0x5B, 0x8C, 0xEF, 0x45,  // .^..[..E
                /* 0600 */  0xC0, 0xFB, 0xFF, 0x7F, 0x2F, 0x82, 0x23, 0xEF,  // ..../.#.
                /* 0608 */  0x65, 0xA0, 0xFB, 0x07, 0x17, 0x04, 0xA3, 0x03,  // e.......
                /* 0610 */  0x84, 0x41, 0x3C, 0x27, 0xDF, 0x8B, 0x00, 0x37,  // .A<'...7
                /* 0618 */  0x51, 0xC6, 0x85, 0xBE, 0xA3, 0xC1, 0x19, 0x15,  // Q.......
                /* 0620 */  0xB8, 0x8F, 0x05, 0x1E, 0x15, 0xF8, 0x8E, 0x69,  // .......i
                /* 0628 */  0xF8, 0xBB, 0x90, 0x0F, 0x69, 0x98, 0x83, 0x06,  // ....i...
                /* 0630 */  0x3B, 0x06, 0x78, 0x50, 0xE0, 0xBA, 0xA5, 0xE1,  // ;.xP....
                /* 0638 */  0xC6, 0x06, 0xCF, 0xC3, 0xF5, 0x01, 0x34, 0xFF,  // ......4.
                /* 0640 */  0xFF, 0xEB, 0x03, 0xBF, 0x66, 0x01, 0xEF, 0x53,  // ....f..S
                /* 0648 */  0x3A, 0xF0, 0xBD, 0x66, 0x81, 0xF9, 0x94, 0x8E,  // :..f....
                /* 0650 */  0xB9, 0x66, 0x81, 0x57, 0xF2, 0xAB, 0xC0, 0xA7,  // .f.W....
                /* 0658 */  0x67, 0x2A, 0x77, 0xDD, 0x14, 0xC6, 0x87, 0x74,  // g*w....t
                /* 0660 */  0xE0, 0xFE, 0xFF, 0x3F, 0xA4, 0x83, 0xEF, 0xDC,  // ...?....
                /* 0668 */  0xE4, 0x03, 0x00, 0x38, 0x8E, 0x0F, 0x67, 0x70,  // ...8..gp
                /* 0670 */  0x0A, 0xD1, 0xDE, 0xF6, 0x3D, 0xF3, 0xD7, 0x27,  // ....=..'
                /* 0678 */  0x0F, 0x29, 0x4A, 0xC0, 0x78, 0x31, 0xE2, 0x86,  // .)J.x1..
                /* 0680 */  0xF4, 0xB9, 0xDA, 0x17, 0x67, 0x03, 0xC5, 0x3B,  // ....g..;
                /* 0688 */  0xAC, 0xB0, 0x71, 0xDE, 0x03, 0x7C, 0x7C, 0x7E,  // ..q..||~
                /* 0690 */  0x0F, 0xF0, 0xE1, 0xC0, 0x40, 0x67, 0xFA, 0x12,  // ....@g..
                /* 0698 */  0x00, 0xFB, 0xA8, 0x0E, 0xDB, 0xDB, 0xE4, 0x04,  // ........
                /* 06A0 */  0x11, 0x21, 0xF0, 0x9B, 0xC5, 0x39, 0x45, 0x7E,  // .!...9E~
                /* 06A8 */  0x45, 0x3F, 0xC2, 0xD8, 0x4F, 0x70, 0xAF, 0x25,  // E?..Op.%
                /* 06B0 */  0x8F, 0xEA, 0x1E, 0xCA, 0xE3, 0x53, 0xD4, 0x28,  // .....S.(
                /* 06B8 */  0xCF, 0x1B, 0x61, 0x5E, 0xD2, 0x03, 0x46, 0x79,  // ..a^..Fy
                /* 06C0 */  0x38, 0x89, 0x16, 0x35, 0xF0, 0x5B, 0x42, 0x6C,  // 8..5.[Bl
                /* 06C8 */  0x83, 0x06, 0x7A, 0x53, 0xF7, 0x08, 0x1E, 0xD5,  // ..zS....
                /* 06D0 */  0x59, 0xB4, 0xA3, 0x3A, 0xA0, 0xF5, 0xFF, 0x7F,  // Y..:....
                /* 06D8 */  0x54, 0x07, 0x3E, 0xF7, 0x19, 0x1F, 0x61, 0xE0,  // T.>...a.
                /* 06E0 */  0x9F, 0x03, 0x9E, 0x14, 0x70, 0x97, 0x27, 0xDF,  // ....p.'.
                /* 06E8 */  0x19, 0x30, 0x04, 0x3E, 0xAD, 0x03, 0x8F, 0xE8,  // .0.>....
                /* 06F0 */  0xD7, 0x45, 0x1A, 0x1B, 0x44, 0x97, 0x48, 0x7E,  // .E..D.H~
                /* 06F8 */  0x96, 0x71, 0xC8, 0xE5, 0xEA, 0x12, 0xC9, 0xA7,  // .q......
                /* 0700 */  0xC4, 0x2E, 0x08, 0x86, 0x3F, 0x84, 0x20, 0x1E,  // ....?. .
                /* 0708 */  0x16, 0x9B, 0x82, 0xCF, 0x08, 0x26, 0x70, 0x9C,  // .....&p.
                /* 0710 */  0x13, 0x17, 0x1D, 0xBC, 0x83, 0x50, 0x28, 0xCA,  // .....P(.
                /* 0718 */  0xFD, 0x16, 0x25, 0x1E, 0x46, 0x70, 0x06, 0xF1,  // ..%.Fp..
                /* 0720 */  0x51, 0xC1, 0x81, 0x20, 0xE4, 0xE4, 0x3C, 0x80,  // Q.. ..<.
                /* 0728 */  0x3A, 0x9F, 0x78, 0x52, 0x27, 0x8B, 0x9D, 0x0B,  // :.xR'...
                /* 0730 */  0x6E, 0x76, 0x3E, 0x88, 0x24, 0x78, 0xEA, 0x79,  // nv>.$x.y
                /* 0738 */  0x95, 0x04, 0xEF, 0x9D, 0xE3, 0x4D, 0x09, 0x2C,  // .....M.,
                /* 0740 */  0x37, 0x8D, 0x57, 0x8E, 0xF7, 0x4D, 0x36, 0x30,  // 7.W..M60
                /* 0748 */  0xDC, 0xFF, 0xFF, 0x2C, 0xE9, 0x81, 0xE1, 0x8F,  // ...,....
                /* 0750 */  0x02, 0xC7, 0x75, 0x52, 0xE0, 0x1D, 0xB3, 0x27,  // ..uR...'
                /* 0758 */  0x05, 0xB6, 0xD3, 0x1D, 0xB0, 0x08, 0x8F, 0x4E,  // .......N
                /* 0760 */  0x61, 0x1C, 0x77, 0x48, 0x14, 0xC4, 0xA7, 0x03,  // a.wH....
                /* 0768 */  0x1F, 0xDB, 0x3C, 0x5A, 0xDC, 0x4C, 0x3C, 0xA2,  // ..<Z.L<.
                /* 0770 */  0xB7, 0x3B, 0xDC, 0xB1, 0x0D, 0xEC, 0x23, 0xF1,  // .;....#.
                /* 0778 */  0xB1, 0x0D, 0x3C, 0xA3, 0x65, 0x87, 0x31, 0x60,  // ..<.e.1`
                /* 0780 */  0x22, 0xE4, 0x30, 0x06, 0xBA, 0x21, 0xFB, 0x30,  // ".0..!.0
                /* 0788 */  0x86, 0xFB, 0xFF, 0x1F, 0xC6, 0x80, 0xDF, 0x31,  // .......1
                /* 0790 */  0xC0, 0x87, 0x27, 0x70, 0xDC, 0xC3, 0xF8, 0x81,  // ..'p....
                /* 0798 */  0x09, 0x0B, 0xF4, 0xEC, 0xC1, 0x71, 0x9E, 0x9C,  // .....q..
                /* 07A0 */  0x0C, 0xCC, 0xC1, 0xD8, 0xD5, 0x04, 0x7B, 0x9B,  // ......{.
                /* 07A8 */  0x30, 0xC1, 0x44, 0x5B, 0x4F, 0x40, 0x82, 0x0C,  // 0.D[O@..
                /* 07B0 */  0x5B, 0x12, 0x17, 0x4D, 0x61, 0x7C, 0x12, 0x03,  // [..Ma|..
                /* 07B8 */  0x5C, 0x1D, 0x26, 0x7C, 0x12, 0x03, 0xF3, 0xDC,  // \.&|....
                /* 07C0 */  0x19, 0x92, 0x51, 0x8D, 0xF8, 0x4E, 0xE0, 0x2B,  // ..Q..N.+
                /* 07C8 */  0x18, 0xCC, 0xFF, 0xFF, 0xB9, 0x8E, 0x9F, 0xC1,  // ........
                /* 07D0 */  0x60, 0x9F, 0xBA, 0x5E, 0x27, 0xDE, 0xBB, 0x0E,  // `..^'...
                /* 07D8 */  0xE9, 0xD1, 0x25, 0x42, 0x8C, 0x1F, 0x81, 0x77,  // ..%B...w
                /* 07E0 */  0xAF, 0x47, 0x8C, 0x73, 0x8B, 0x14, 0xFE, 0x19,  // .G.s....
                /* 07E8 */  0xCC, 0x27, 0xB0, 0x33, 0x78, 0xF7, 0x7A, 0x06,  // .'.3x.z.
                /* 07F0 */  0xF3, 0xF1, 0x2B, 0xD6, 0x33, 0x98, 0x81, 0x82,  // ..+.3...
                /* 07F8 */  0x46, 0x0C, 0x1A, 0x28, 0xDE, 0xD3, 0x98, 0x07,  // F..(....
                /* 0800 */  0x10, 0x27, 0x48, 0xE0, 0x67, 0x30, 0x80, 0x51,  // .'H.g0.Q
                /* 0808 */  0x56, 0x6F, 0x0A, 0xC8, 0x4B, 0x25, 0xFE, 0x0C,  // Vo..K%..
                /* 0810 */  0x06, 0x86, 0xFF, 0xFF, 0x19, 0x0C, 0x3C, 0x2A,  // ......<*
                /* 0818 */  0x7F, 0x46, 0x1A, 0xA5, 0xF5, 0xBC, 0x65, 0x74,  // .F....et
                /* 0820 */  0x06, 0xE3, 0x47, 0x02, 0x2B, 0x78, 0x22, 0x08,  // ..G.+x".
                /* 0828 */  0xFF, 0x45, 0x26, 0xF0, 0xD9, 0x3C, 0x12, 0x1C,  // .E&..<..
                /* 0830 */  0xC3, 0x43, 0x05, 0xBB, 0xB1, 0x3C, 0x51, 0x78,  // .C...<Qx
                /* 0838 */  0xBA, 0xCE, 0x7C, 0x22, 0xA3, 0x03, 0x77, 0x5A,  // ..|"..wZ
                /* 0840 */  0x18, 0xA9, 0x3A, 0x47, 0xA3, 0x74, 0x1C, 0xC3,  // ..:G.t..
                /* 0848 */  0x28, 0x88, 0x0F, 0x0D, 0x3E, 0x20, 0xE3, 0x07,  // (...> ..
                /* 0850 */  0xE7, 0x49, 0xE0, 0x8F, 0xC8, 0xFC, 0xF0, 0x05,  // .I......
                /* 0858 */  0x0C, 0x2F, 0xC8, 0xEC, 0x80, 0x8C, 0x1F, 0x98,  // ./......
                /* 0860 */  0x67, 0x0A, 0xE3, 0xBA, 0x0E, 0xDE, 0x4B, 0x80,  // g.....K.
                /* 0868 */  0x8F, 0x60, 0x30, 0x0F, 0xC8, 0xE0, 0x3A, 0x96,  // .`0...:.
                /* 0870 */  0xE2, 0x8E, 0x16, 0xFC, 0x1A, 0xE8, 0xF3, 0xC7,  // ........
                /* 0878 */  0xE3, 0x8F, 0x8F, 0x72, 0x1E, 0x3D, 0xAC, 0xFF,  // ...r.=..
                /* 0880 */  0xFF, 0xE8, 0xC1, 0x70, 0x3D, 0xF0, 0xE8, 0xE1,  // ...p=...
                /* 0888 */  0xDF, 0x3E, 0xB0, 0x97, 0x34, 0x60, 0x11, 0xEB,  // .>..4`..
                /* 0890 */  0x26, 0x88, 0xBA, 0x20, 0x79, 0xD2, 0x06, 0xF1,  // &.. y...
                /* 0898 */  0xC4, 0x7C, 0xA3, 0xF7, 0x25, 0x0D, 0x77, 0xA3,  // .|..%.w.
                /* 08A0 */  0x07, 0x5E, 0x50, 0xBE, 0xA6, 0x81, 0x2F, 0xD6,  // .^P.../.
                /* 08A8 */  0xB8, 0xD0, 0xA2, 0x2E, 0x0F, 0x50, 0x26, 0x10,  // .....P&.
                /* 08B0 */  0xE6, 0x44, 0x82, 0x3F, 0x89, 0x44, 0x78, 0x2A,  // .D.?.Dx*
                /* 08B8 */  0xF2, 0x6D, 0x8C, 0x8D, 0x0D, 0xEC, 0x07, 0x0A,  // .m......
                /* 08C0 */  0xDF, 0xE8, 0xC0, 0xF8, 0xFF, 0xBF, 0xD1, 0x01,  // ........
                /* 08C8 */  0x0B, 0x11, 0x37, 0x3A, 0xD0, 0xDD, 0x33, 0xF8,  // ..7:..3.
                /* 08D0 */  0x8D, 0x0E, 0x78, 0x5E, 0x37, 0x7C, 0x09, 0x03,  // ..x^7|..
                /* 08D8 */  0xCB, 0x15, 0x87, 0x5F, 0xC2, 0xF8, 0x15, 0xCC,  // ..._....
                /* 08E0 */  0x20, 0x61, 0x62, 0x86, 0xF1, 0x59, 0xCD, 0x38,  //  ab..Y.8
                /* 08E8 */  0x0F, 0x62, 0x0C, 0xE9, 0x29, 0x01, 0x7B, 0xF2,  // .b..).{.
                /* 08F0 */  0x70, 0xBE, 0x7B, 0x0F, 0x6A, 0x28, 0xCE, 0xF4,  // p.{.j(..
                /* 08F8 */  0x2A, 0xD0, 0xD4, 0xCF, 0xD7, 0xA7, 0x17, 0x18,  // *.......
                /* 0900 */  0x39, 0xE0, 0x74, 0xED, 0xE1, 0x09, 0x60, 0xA4,  // 9.t...`.
                /* 0908 */  0x7F, 0xF9, 0x3A, 0x6C, 0x70, 0xC5, 0xB7, 0x1F,  // ..:lp...
                /* 0910 */  0x0A, 0xE2, 0x2B, 0x89, 0xD3, 0x5C, 0x7B, 0xD0,  // ..+..\{.
                /* 0918 */  0x7A, 0x40, 0xE4, 0x73, 0xEC, 0x1A, 0xC2, 0x83,  // z@.s....
                /* 0920 */  0x0F, 0xF8, 0xFF, 0xFF, 0x07, 0x1F, 0xF0, 0xE7,  // ........
                /* 0928 */  0x3A, 0xF8, 0xA0, 0x07, 0xE3, 0x69, 0xC1, 0xBA,  // :....i..
                /* 0930 */  0xF9, 0x00, 0x0E, 0x8E, 0x00, 0x70, 0xAE, 0x5C,  // .....p.\
                /* 0938 */  0x27, 0x7F, 0x64, 0x8F, 0x00, 0xC0, 0xE6, 0xF4,  // '.d.....
                /* 0940 */  0x03, 0x8E, 0x23, 0x00, 0x18, 0xA6, 0x05, 0xEB,  // ..#.....
                /* 0948 */  0x08, 0x00, 0x6C, 0xFE, 0xFF, 0x83, 0x63, 0x48,  // ..l...cH
                /* 0950 */  0xBE, 0x4B, 0x01, 0x16, 0x86, 0xE9, 0xBB, 0x14,  // .K......
                /* 0958 */  0x70, 0xFE, 0x42, 0xF8, 0x3E, 0xC2, 0x23, 0x5F,  // p.B.>.#_
                /* 0960 */  0x23, 0x28, 0x88, 0xAF, 0x08, 0xBE, 0x4B, 0x01,  // #(....K.
                /* 0968 */  0xCF, 0x0B, 0x90, 0x2F, 0x48, 0xC0, 0xF7, 0xFF,  // .../H...
                /* 0970 */  0x0F, 0xCF, 0x25, 0x5C, 0x90, 0x40, 0x37, 0x6C,  // ..%\.@7l
                /* 0978 */  0x5F, 0x90, 0x80, 0x2B, 0xAA, 0x2F, 0x48, 0xE0,  // _..+./H.
                /* 0980 */  0xB8, 0x0B, 0xB1, 0xFB, 0x11, 0x58, 0xB5, 0xFE,  // .....X..
                /* 0988 */  0x28, 0x74, 0x3F, 0xE2, 0x1C, 0x56, 0xBA, 0x68,  // (t?..V.h
                /* 0990 */  0x1D, 0xAB, 0xD9, 0x05, 0xF7, 0x38, 0xDF, 0x72,  // .....8.r
                /* 0998 */  0xDE, 0x01, 0x8C, 0xE3, 0xB9, 0xF8, 0x3C, 0x61,  // ......<a
                /* 09A0 */  0xFC, 0x04, 0x95, 0x41, 0xEA, 0x86, 0xC4, 0x35,  // ...A...5
                /* 09A8 */  0xC1, 0x48, 0xDB, 0x41, 0x13, 0xA5, 0xE6, 0xA0,  // .H.A....
                /* 09B0 */  0x49, 0x41, 0x7C, 0xD0, 0x04, 0xBC, 0xFC, 0xFF,  // IA|.....
                /* 09B8 */  0x0F, 0x9A, 0x80, 0xA7, 0x30, 0xE3, 0x47, 0x4F,  // ....0.GO
                /* 09C0 */  0xC6, 0x77, 0x02, 0xFC, 0xF9, 0xD9, 0x47, 0x12,  // .w....G.
                /* 09C8 */  0x9F, 0xC1, 0x1F, 0x8F, 0x80, 0xE9, 0x7D, 0x06,  // ......}.
                /* 09D0 */  0x58, 0xC4, 0xBE, 0x3D, 0xA0, 0x82, 0xDE, 0x1E,  // X..=....
                /* 09D8 */  0x28, 0x88, 0x2F, 0x25, 0xBE, 0xCF, 0x00, 0xBB,  // (./%....
                /* 09E0 */  0xFF, 0xFF, 0x59, 0x13, 0xEC, 0x97, 0x0C, 0xFC,  // ..Y.....
                /* 09E8 */  0xF5, 0x9F, 0xDD, 0x1F, 0x1E, 0xD0, 0x7D, 0xC5,  // ......}.
                /* 09F0 */  0xE0, 0xA7, 0x4C, 0xE0, 0x79, 0x28, 0x60, 0x97,  // ..L.y(`.
                /* 09F8 */  0x0C, 0x18, 0x27, 0x0A, 0x8F, 0x8A, 0x13, 0x38,  // ..'....8
                /* 0A00 */  0xC4, 0x30, 0xE8, 0xA0, 0xC0, 0x75, 0xC8, 0xE0,  // .0...u..
                /* 0A08 */  0x0B, 0xF2, 0xFD, 0x08, 0xEE, 0x25, 0x03, 0x5C,  // .....%.\
                /* 0A10 */  0xC1, 0x86, 0x86, 0x96, 0x72, 0x4C, 0xA0, 0xC7,  // ....rL..
                /* 0A18 */  0x1B, 0x76, 0x8E, 0xF7, 0xBD, 0x87, 0x0D, 0x0E,  // .v......
                /* 0A20 */  0xDC, 0x87, 0x0C, 0x0F, 0x0E, 0xDE, 0x6D, 0xC3,  // ......m.
                /* 0A28 */  0x83, 0xFB, 0xFF, 0x1F, 0x1C, 0x98, 0xAE, 0x52,  // .......R
                /* 0A30 */  0xC0, 0x23, 0xF8, 0xD8, 0x51, 0x57, 0x29, 0x70,  // .#..QW)p
                /* 0A38 */  0x9C, 0xEB, 0xF8, 0x55, 0x0A, 0x78, 0x0E, 0xF0,  // ...U.x..
                /* 0A40 */  0x55, 0x0A, 0x2C, 0xD7, 0x26, 0x36, 0x87, 0xE7,  // U.,.&6..
                /* 0A48 */  0x26, 0x7E, 0x95, 0xF2, 0xA1, 0x06, 0x7B, 0x85,  // &~....{.
                /* 0A50 */  0xF1, 0xF5, 0x46, 0xA7, 0x56, 0x14, 0x87, 0xA3,  // ..F.V...
                /* 0A58 */  0x9C, 0x5A, 0x11, 0xB7, 0x28, 0x98, 0xD2, 0xCF,  // .Z..(...
                /* 0A60 */  0xAD, 0x28, 0xD1, 0x30, 0x92, 0x7C, 0x6E, 0x45,  // .(.0.|nE
                /* 0A68 */  0x89, 0x3C, 0xB7, 0x52, 0x10, 0x9F, 0x10, 0x7C,  // .<.R...|
                /* 0A70 */  0x8B, 0x02, 0xFB, 0xFF, 0xFF, 0x16, 0x05, 0xD8,  // ........
                /* 0A78 */  0x3F, 0xB4, 0xC2, 0x01, 0x7C, 0x8C, 0x02, 0x1C,  // ?...|...
                /* 0A80 */  0x5C, 0x44, 0x7D, 0x0D, 0x82, 0x3F, 0x26, 0xB0,  // \D}..?&.
                /* 0A88 */  0x22, 0x79, 0x4C, 0x98, 0xFF, 0xFF, 0x98, 0xC0,  // "yL.....
                /* 0A90 */  0x11, 0xE8, 0x8E, 0x80, 0x56, 0x71, 0x09, 0x42,  // ....Vq.B
                /* 0A98 */  0xDE, 0x10, 0xC0, 0xBB, 0x1C, 0x9F, 0x58, 0x61,  // ......Xa
                /* 0AA0 */  0xDE, 0x10, 0xC0, 0x75, 0x61, 0x05, 0xB8, 0xF3,  // ...ua...
                /* 0AA8 */  0xFF, 0x3F, 0x16, 0x81, 0xF9, 0x66, 0xC0, 0x8F,  // .?...f..
                /* 0AB0 */  0x45, 0x80, 0x8F, 0x0B, 0x2B, 0x3F, 0x16, 0x81,  // E...+?..
                /* 0AB8 */  0x2F, 0xCC, 0xB1, 0x08, 0x21, 0x72, 0x1C, 0x42,  // /...!r.B
                /* 0AC0 */  0x78, 0xB8, 0x81, 0x41, 0x50, 0xFC, 0xB1, 0x08,  // x..AP...
                /* 0AC8 */  0x25, 0x1B, 0x46, 0xA2, 0x8F, 0x45, 0x28, 0x99,  // %.F..E(.
                /* 0AD0 */  0xC7, 0x22, 0x0A, 0xE2, 0x33, 0x86, 0x83, 0x5C,  // ."..3..\
                /* 0AD8 */  0x50, 0xD0, 0x07, 0x35, 0x0F, 0xEA, 0x95, 0x96,  // P..5....
                /* 0AE0 */  0x9D, 0x3F, 0x3C, 0x38, 0x7E, 0x2A, 0x02, 0x9E,  // .?<8~*..
                /* 0AE8 */  0x17, 0x79, 0x38, 0x53, 0xFD, 0xFF, 0x9F, 0x2A,  // .y8S...*
                /* 0AF0 */  0xAC, 0x6B, 0x11, 0x60, 0xE0, 0x96, 0x05, 0x0C,  // .k.`....
                /* 0AF8 */  0x4F, 0x45, 0xC0, 0xE2, 0x02, 0xC0, 0x90, 0x9B,  // OE......
                /* 0B00 */  0xBF, 0x26, 0x90, 0x53, 0x11, 0x30, 0xBD, 0x88,  // .&.S.0..
                /* 0B08 */  0xC1, 0xB9, 0x3F, 0xC2, 0x38, 0x22, 0x80, 0xE1,  // ..?.8"..
                /* 0B10 */  0xFF, 0x7F, 0x44, 0x80, 0x05, 0xEC, 0x73, 0x11,  // ..D...s.
                /* 0B18 */  0xC0, 0xC5, 0xD8, 0xE7, 0x22, 0xD0, 0xC1, 0xF2,  // ...."...
                /* 0B20 */  0x73, 0x11, 0x18, 0xFE, 0xFF, 0xE7, 0x22, 0x60,  // s....."`
                /* 0B28 */  0x31, 0xC7, 0xE7, 0x22, 0xB0, 0xDD, 0x3E, 0x18,  // 1.."..>.
                /* 0B30 */  0x48, 0xB8, 0x97, 0x14, 0xEC, 0x89, 0xC3, 0xF1,  // H.......
                /* 0B38 */  0xDE, 0x12, 0x3A, 0x16, 0xF1, 0x0B, 0x84, 0x03,  // ..:.....
                /* 0B40 */  0xAD, 0x51, 0xB0, 0x01, 0xCF, 0xA1, 0xEB, 0xA1,  // .Q......
                /* 0B48 */  0x0B, 0xD4, 0x13, 0xA8, 0x71, 0x12, 0x02, 0x39,  // ....q..9
                /* 0B50 */  0xC4, 0xE0, 0x07, 0x70, 0x6C, 0x06, 0x8B, 0x11,  // ...pl...
                /* 0B58 */  0xED, 0x39, 0xE9, 0x35, 0xC8, 0x58, 0x47, 0xED,  // .9.5.XG.
                /* 0B60 */  0xAB, 0x92, 0xEF, 0x24, 0x82, 0xD7, 0xE1, 0x88,  // ...$....
                /* 0B68 */  0xCB, 0x85, 0x91, 0xD8, 0xFF, 0x85, 0x8E, 0x10,  // ........
                /* 0B70 */  0x5C, 0xDE, 0x19, 0x89, 0x82, 0x78, 0x7C, 0xCE,  // \....x|.
                /* 0B78 */  0x71, 0x09, 0xF1, 0xE1, 0x08, 0x14, 0x9A, 0x0F,  // q.......
                /* 0B80 */  0x47, 0x20, 0x3E, 0x7E, 0x80, 0x6B, 0x4E, 0x70,  // G >~.kNp
                /* 0B88 */  0xE6, 0xFF, 0x7E, 0x70, 0x4A, 0xCF, 0x29, 0x3E,  // ..~pJ.)>
                /* 0B90 */  0x17, 0x18, 0xE1, 0xB0, 0xCE, 0x09, 0xBC, 0x77,  // .......w
                /* 0B98 */  0x22, 0xCC, 0xFF, 0x7F, 0x4E, 0x60, 0xB9, 0xEE,  // "...N`..
                /* 0BA0 */  0x78, 0x4E, 0xB8, 0xBB, 0x8C, 0xE7, 0xF4, 0x28,  // xN.....(
                /* 0BA8 */  0x50, 0x31, 0xA6, 0xEE, 0x07, 0xD1, 0xA3, 0x3C,  // P1.....<
                /* 0BB0 */  0x3B, 0x78, 0x4C, 0x60, 0x3D, 0x17, 0x78, 0xDA,  // ;xL`=.x.
                /* 0BB8 */  0xE0, 0x3F, 0xAB, 0x3D, 0x10, 0xBD, 0x53, 0xF8,  // .?.=..S.
                /* 0BC0 */  0xAC, 0x62, 0xD8, 0xA8, 0x9E, 0x13, 0x78, 0xEF,  // .b....x.
                /* 0BC8 */  0xD2, 0x7C, 0xDA, 0xE0, 0xBE, 0x9F, 0x9C, 0xD1,  // .|......
                /* 0BD0 */  0x49, 0xBF, 0xA3, 0x3C, 0x19, 0xB0, 0x73, 0x87,  // I..<..s.
                /* 0BD8 */  0xC7, 0x04, 0xD6, 0xB3, 0x10, 0xF8, 0xC6, 0x04,  // ........
                /* 0BE0 */  0x86, 0xE3, 0xC8, 0x31, 0xE1, 0xFF, 0xFF, 0x63,  // ...1...c
                /* 0BE8 */  0x02, 0xCF, 0x3D, 0x1F, 0x7C, 0x07, 0x2B, 0x38,  // ..=.|.+8
                /* 0BF0 */  0xA7, 0x57, 0x7E, 0x37, 0xE0, 0x07, 0x2B, 0x30,  // .W~7..+0
                /* 0BF8 */  0x1F, 0x8D, 0x3D, 0x34, 0x58, 0xB7, 0x7C, 0xF0,  // ..=4X.|.
                /* 0C00 */  0x1D, 0xAC, 0x00, 0x93, 0x1E, 0x0E, 0x56, 0x20,  // ......V 
                /* 0C08 */  0xFD, 0xFF, 0x1F, 0xAC, 0x80, 0x85, 0x88, 0xC5,  // ........
                /* 0C10 */  0xEA, 0x60, 0x05, 0xAE, 0x9B, 0x01, 0x3F, 0x58,  // .`....?X
                /* 0C18 */  0x01, 0xCF, 0x5B, 0xA1, 0x0F, 0x56, 0xE0, 0x38,  // ..[..V.8
                /* 0C20 */  0x4A, 0xF1, 0x41, 0xBC, 0x4A, 0x71, 0x94, 0x67,  // J.A.Jq.g
                /* 0C28 */  0x29, 0x3C, 0x9C, 0xEF, 0x52, 0x70, 0xCE, 0x57,  // )<..Rp.W
                /* 0C30 */  0x16, 0xFE, 0xC6, 0xD0, 0xF9, 0x8A, 0x4B, 0x3A,  // ......K:
                /* 0C38 */  0x4D, 0x79, 0xCD, 0x3A, 0x6D, 0xB1, 0xF1, 0x1F,  // My.:m...
                /* 0C40 */  0xC6, 0x2B, 0x94, 0x27, 0x12, 0x37, 0x76, 0xDC,  // .+.'.7v.
                /* 0C48 */  0xC8, 0x27, 0x70, 0x42, 0xA7, 0x63, 0xB0, 0x47,  // .'pB.c.G
                /* 0C50 */  0x2D, 0x9D, 0x5F, 0xE9, 0x99, 0x87, 0xC0, 0x48,  // -._....H
                /* 0C58 */  0xFE, 0x21, 0x02, 0x25, 0x18, 0x46, 0x70, 0x06,  // .!.%.Fp.
                /* 0C60 */  0xF1, 0x39, 0xC0, 0xC7, 0x58, 0xDF, 0x54, 0x70,  // .9..X.Tp
                /* 0C68 */  0x5A, 0x8E, 0x61, 0x88, 0x2B, 0x84, 0x07, 0xE5,  // Z.a.+...
                /* 0C70 */  0x81, 0x3C, 0xDC, 0xFB, 0xAA, 0x02, 0x96, 0xFF,  // .<......
                /* 0C78 */  0xFF, 0xD5, 0x0A, 0x18, 0xA4, 0x18, 0x14, 0x1A,  // ........
                /* 0C80 */  0xD8, 0x83, 0x8A, 0xF8, 0xDC, 0x74, 0xFA, 0xCF,  // .....t..
                /* 0C88 */  0x44, 0x1E, 0xA8, 0x6F, 0x56, 0xC0, 0xF2, 0x8C,  // D..oV...
                /* 0C90 */  0x02, 0x2C, 0x62, 0x9D, 0x07, 0x50, 0x41, 0xCE,  // .,b..PA.
                /* 0C98 */  0x03, 0x14, 0xC4, 0x03, 0x73, 0x98, 0xB1, 0xA2,  // ....s...
                /* 0CA0 */  0xCF, 0x28, 0x70, 0xAF, 0x18, 0xCF, 0x28, 0x60,  // .(p...(`
                /* 0CA8 */  0x3E, 0x75, 0x81, 0x2F, 0xD8, 0x5D, 0x08, 0x7D,  // >u./.].}
                /* 0CB0 */  0xEA, 0xF2, 0x9D, 0x15, 0x06, 0xC1, 0x10, 0x87,  // ........
                /* 0CB8 */  0x21, 0x3A, 0x2A, 0xCC, 0xFF, 0x7F, 0x54, 0x60,  // !:*...T`
                /* 0CC0 */  0x38, 0x0D, 0xF1, 0x31, 0xF2, 0xC1, 0xC1, 0xB9,  // 8..1....
                /* 0CC8 */  0x7D, 0x81, 0xEF, 0x38, 0x03, 0x3C, 0xDE, 0x05,  // }..8.<..
                /* 0CD0 */  0x3E, 0xCE, 0x80, 0xEB, 0xE4, 0xE3, 0xE3, 0x0C,  // >.......
                /* 0CD8 */  0x70, 0x15, 0x7C, 0xEC, 0x04, 0xDD, 0xCD, 0x85,  // p.|.....
                /* 0CE0 */  0xA3, 0x3C, 0xBA, 0xC0, 0xC1, 0x0A, 0xFA, 0x00,  // .<......
                /* 0CE8 */  0xE6, 0xBB, 0x84, 0x6F, 0xF8, 0x2C, 0xFD, 0x61,  // ...o.,.a
                /* 0CF0 */  0x06, 0x75, 0x5E, 0x72, 0xE6, 0x15, 0xCB, 0xE3,  // .u^r....
                /* 0CF8 */  0x61, 0x06, 0x04, 0x33, 0xC0, 0xFD, 0xFF, 0x09,  // a..3....
                /* 0D00 */  0x66, 0x3B, 0xCF, 0xA0, 0x52, 0xC1, 0x48, 0xFF,  // f;..R.H.
                /* 0D08 */  0x81, 0x03, 0xA5, 0xF8, 0xC0, 0x41, 0x41, 0x7C,  // .....AA|
                /* 0D10 */  0x9E, 0x81, 0x37, 0x18, 0x76, 0x9E, 0x01, 0xD6,  // ..7.v...
                /* 0D18 */  0x97, 0x3D, 0x58, 0xC7, 0x0D, 0xFC, 0x7D, 0x06,  // .=X...}.
                /* 0D20 */  0x70, 0x25, 0xEA, 0x47, 0xA0, 0xFB, 0x00, 0x97,  // p%.G....
                /* 0D28 */  0x01, 0xA3, 0x19, 0x19, 0xC4, 0xB7, 0x13, 0xDF,  // ........
                /* 0D30 */  0x67, 0x80, 0xD3, 0xFF, 0xFF, 0x3E, 0x03, 0x1C,  // g....>..
                /* 0D38 */  0x6E, 0x0D, 0x78, 0x60, 0xDF, 0x08, 0x18, 0xE6,  // n.x`....
                /* 0D40 */  0x21, 0x9D, 0x8B, 0x07, 0x05, 0xF6, 0x7B, 0x0C,  // !.....{.
                /* 0D48 */  0xF8, 0x2E, 0x83, 0xBE, 0x32, 0x78, 0xE8, 0x38,  // ....2x.8
                /* 0D50 */  0xE0, 0xD7, 0x8A, 0x77, 0x69, 0xDF, 0xAA, 0x82,  // ...wi...
                /* 0D58 */  0x1E, 0xD3, 0x93, 0x89, 0x4F, 0x94, 0x2F, 0x83,  // ....O./.
                /* 0D60 */  0xE0, 0x3F, 0x15, 0xF8, 0x32, 0x08, 0x1E, 0x63,  // .?..2..c
                /* 0D68 */  0x02, 0xB4, 0x5D, 0x06, 0x81, 0xCC, 0x75, 0x07,  // ..]...u.
                /* 0D70 */  0x7C, 0xE0, 0xBE, 0xEE, 0xC0, 0xF9, 0xFF, 0x5F,  // |......_
                /* 0D78 */  0x77, 0x80, 0xFF, 0xFD, 0x85, 0x5D, 0x77, 0xC0,  // w....]w.
                /* 0D80 */  0x18, 0xE0, 0xBA, 0x83, 0x12, 0x75, 0x55, 0xF7,  // .....uU.
                /* 0D88 */  0x8A, 0x35, 0x12, 0x9F, 0x56, 0x02, 0x1B, 0xE4,  // .5..V...
                /* 0D90 */  0x79, 0xEE, 0x94, 0xDF, 0xDA, 0xE1, 0x09, 0xBC,  // y.......
                /* 0D98 */  0xEC, 0xA0, 0xA4, 0xC1, 0x28, 0xC0, 0x65, 0x07,  // ....(.e.
                /* 0DA0 */  0x25, 0xF9, 0xB2, 0x43, 0x41, 0x7C, 0x0C, 0xF0,  // %..CA|..
                /* 0DA8 */  0xAD, 0x1D, 0xB0, 0x71, 0x20, 0x82, 0x73, 0xD8,  // ...q .s.
                /* 0DB0 */  0xC1, 0xE3, 0x1F, 0x14, 0xB8, 0xFE, 0xFF, 0xA7,  // ........
                /* 0DB8 */  0x1D, 0xC0, 0x41, 0xB0, 0x03, 0x01, 0x2A, 0xCA,  // ..A...*.
                /* 0DC0 */  0x81, 0x80, 0x82, 0xF8, 0x32, 0x08, 0xB8, 0x89,  // ....2...
                /* 0DC8 */  0x76, 0x19, 0x44, 0x0F, 0x8B, 0x5F, 0x09, 0x70,  // v.D.._.p
                /* 0DD0 */  0x47, 0x87, 0xC3, 0x61, 0xB7, 0x41, 0xC0, 0xCD,  // G..a.A..
                /* 0DD8 */  0xFF, 0xFF, 0x3C, 0x03, 0x4E, 0x09, 0xE7, 0x19,  // ..<.N...
                /* 0DE0 */  0xD0, 0x99, 0x38, 0xCF, 0x00, 0xDD, 0xC3, 0x0E,  // ..8.....
                /* 0DE8 */  0xBF, 0x2B, 0x83, 0xE1, 0xF0, 0x82, 0x39, 0x2A,  // .+....9*
                /* 0DF0 */  0x83, 0x8D, 0x60, 0xF6, 0xD7, 0x87, 0x0E, 0x34,  // ..`....4
                /* 0DF8 */  0x9C, 0xC3, 0xD9, 0x17, 0xAD, 0x33, 0x0E, 0x13,  // .....3..
                /* 0E00 */  0x39, 0x0C, 0x21, 0x84, 0x0F, 0x7D, 0x34, 0x11,  // 9.!..}4.
                /* 0E08 */  0xCE, 0xE1, 0x11, 0xDA, 0xE3, 0x63, 0x59, 0x21,  // .....cY!
                /* 0E10 */  0x75, 0x9C, 0xE1, 0x29, 0x61, 0xA4, 0xEA, 0xAC,  // u..)a...
                /* 0E18 */  0x86, 0xD2, 0x71, 0x56, 0xA3, 0x20, 0x3E, 0x3B,  // ..qV. >;
                /* 0E20 */  0xF8, 0xAA, 0xE2, 0x13, 0x16, 0xEE, 0x38, 0x03,  // ......8.
                /* 0E28 */  0xEF, 0x9A, 0xED, 0xE3, 0x0C, 0x58, 0x87, 0xE8,  // .....X..
                /* 0E30 */  0x99, 0xFF, 0xFF, 0x5F, 0xAF, 0xC0, 0x73, 0x15,  // ..._..s.
                /* 0E38 */  0xF4, 0xA0, 0x70, 0xC8, 0x9E, 0x2A, 0x43, 0x7E,  // ..p..*C~
                /* 0E40 */  0x05, 0x3B, 0x2C, 0x8F, 0x09, 0xBC, 0xB3, 0xF5,  // .;,.....
                /* 0E48 */  0x98, 0xC0, 0x16, 0xEB, 0x3C, 0x82, 0xBE, 0xF1,  // ....<...
                /* 0E50 */  0xC0, 0x4C, 0x70, 0x1D, 0xA1, 0x93, 0x82, 0x77,  // .Lp....w
                /* 0E58 */  0x1B, 0x81, 0x07, 0xE6, 0xB9, 0xC1, 0x3A, 0xBA,  // ......:.
                /* 0E60 */  0x80, 0xEF, 0xE2, 0x03, 0x2C, 0xE2, 0x2C, 0x49,  // ....,.,I
                /* 0E68 */  0x57, 0x07, 0x1E, 0xE0, 0x7E, 0x45, 0x41, 0x3C,  // W...~EA<
                /* 0E70 */  0x2C, 0xDF, 0xF5, 0xEC, 0xE4, 0xE2, 0x03, 0x9A,  // ,.......
                /* 0E78 */  0xBB, 0x1E, 0x8C, 0xFF, 0xFF, 0x8D, 0x10, 0x6C,  // .......l
                /* 0E80 */  0x77, 0x3D, 0xF0, 0x38, 0x13, 0xA0, 0x0C, 0x92,  // w=.8....
                /* 0E88 */  0xDC, 0x8F, 0x7C, 0xC3, 0xC0, 0xA3, 0x3E, 0xBA,  // ..|...>.
                /* 0E90 */  0xBC, 0xD0, 0x62, 0x6F, 0x84, 0xC0, 0xF8, 0x7E,  // ..bo...~
                /* 0E98 */  0x04, 0xE7, 0x78, 0x02, 0xEF, 0x7E, 0x04, 0xEE,  // ..x..~..
                /* 0EA0 */  0x7B, 0x8D, 0x87, 0x07, 0xEF, 0x02, 0xC4, 0x6F,  // {......o
                /* 0EA8 */  0x99, 0xE0, 0x9E, 0x1B, 0xFE, 0x14, 0xF1, 0x0C,  // ........
                /* 0EB0 */  0xE4, 0x43, 0x00, 0xB8, 0xFE, 0xFF, 0xC3, 0x82,  // .C......
                /* 0EB8 */  0x71, 0x8A, 0xF0, 0x21, 0x00, 0x38, 0xDC, 0xB9,  // q..!.8..
                /* 0EC0 */  0x80, 0xD3, 0x21, 0x00, 0xEE, 0x39, 0x9D, 0xDF,  // ..!..9..
                /* 0EC8 */  0xB9, 0x80, 0x6F, 0xEC, 0x33, 0x02, 0xEA, 0xCE,  // ..o.3...
                /* 0ED0 */  0x05, 0x0E, 0x15, 0x77, 0x2E, 0xA0, 0x3B, 0xC7,  // ...w..;.
                /* 0ED8 */  0x77, 0x2E, 0xB8, 0xFF, 0xFF, 0x2B, 0x29, 0x8C,  // w....+).
                /* 0EE0 */  0x23, 0x07, 0x03, 0x79, 0xF7, 0xF5, 0x39, 0x02,  // #..y..9.
                /* 0EE8 */  0x77, 0x32, 0xB2, 0xA6, 0x85, 0xEA, 0x36, 0x8A,  // w2....6.
                /* 0EF0 */  0x53, 0xF4, 0xE7, 0x11, 0x38, 0xBB, 0x4E, 0xF8,  // S...8.N.
                /* 0EF8 */  0x36, 0xC4, 0x30, 0x5E, 0xC2, 0x7C, 0x4F, 0x31,  // 6.0^.|O1
                /* 0F00 */  0xB8, 0xAF, 0x2A, 0x3E, 0xA9, 0xB0, 0xF4, 0xD7,  // ..*>....
                /* 0F08 */  0x44, 0x7A, 0x01, 0x72, 0x6E, 0x12, 0xE5, 0x3E,  // Dz.rn..>
                /* 0F10 */  0x0D, 0x50, 0x38, 0x27, 0x3D, 0x32, 0x51, 0x10,  // .P8'=2Q.
                /* 0F18 */  0x03, 0xFA, 0x2E, 0xE5, 0x53, 0x0E, 0xEE, 0x60,  // ....S..`
                /* 0F20 */  0xE0, 0xF3, 0x81, 0x07, 0xE2, 0x61, 0x3D, 0x3A,  // .....a=:
                /* 0F28 */  0xB0, 0xEB, 0x16, 0x30, 0xBC, 0xE1, 0xB0, 0x0B,  // ...0....
                /* 0F30 */  0x12, 0xB0, 0x88, 0x3F, 0x57, 0x54, 0xE0, 0xB9,  // ...?WT..
                /* 0F38 */  0x52, 0x10, 0xCF, 0xD5, 0x37, 0x1F, 0x5B, 0xB9,  // R...7.[.
                /* 0F40 */  0xF9, 0xA0, 0x47, 0xE4, 0xCB, 0x07, 0x1B, 0x2C,  // ..G....,
                /* 0F48 */  0xBF, 0xA5, 0x80, 0x7D, 0x30, 0xBE, 0xA5, 0xC0,  // ...}0...
                /* 0F50 */  0xF9, 0xFF, 0x0F, 0x17, 0xCE, 0x29, 0xA5, 0xB4,  // .....)..
                /* 0F58 */  0xB3, 0x35, 0x90, 0x09, 0x7E, 0xF1, 0x00, 0xDD,  // .5..~...
                /* 0F60 */  0x38, 0x7D, 0xF1, 0x00, 0xAE, 0x03, 0x7C, 0xF1,  // 8}....|.
                /* 0F68 */  0x00, 0xDB, 0x7C, 0x8F, 0xF4, 0xC5, 0xC3, 0x77,  // ..|....w
                /* 0F70 */  0x0D, 0x18, 0xE7, 0x46, 0xA6, 0xE7, 0xE6, 0x81,  // ...F....
                /* 0F78 */  0xE2, 0xB0, 0x9A, 0x97, 0x82, 0x26, 0xFD, 0xE6,  // .....&..
                /* 0F80 */  0x01, 0xF7, 0xDE, 0x01, 0xC6, 0xC3, 0x03, 0xEE,  // ........
                /* 0F88 */  0xDE, 0x01, 0xEE, 0xFF, 0xFF, 0xBD, 0x03, 0xCC,  // ........
                /* 0F90 */  0x37, 0x07, 0x76, 0xEF, 0x00, 0x96, 0x67, 0x16,  // 7.v...g.
                /* 0F98 */  0xDC, 0xBD, 0x03, 0xF8, 0x9F, 0xF3, 0xF8, 0xBD,  // ........
                /* 0FA0 */  0x03, 0x78, 0x5F, 0x30, 0x7C, 0xEF, 0x00, 0x26,  // .x_0|..&
                /* 0FA8 */  0xFF, 0xFF, 0x7B, 0x07, 0x30, 0xB9, 0x68, 0xB0,  // ..{.0.h.
                /* 0FB0 */  0x7B, 0x07, 0x18, 0x72, 0x3F, 0x0F, 0x9E, 0x32,  // {..r?..2
                /* 0FB8 */  0xD9, 0x6B, 0x40, 0x22, 0x17, 0x4B, 0x61, 0x7C,  // .k@".Ka|
                /* 0FC0 */  0xA3, 0xF0, 0xF9, 0x00, 0x3F, 0xE2, 0x03, 0x3E,  // ....?..>
                /* 0FC8 */  0x84, 0x43, 0x62, 0x92, 0xE0, 0x50, 0x87, 0x01,  // .Cb..P..
                /* 0FD0 */  0x8F, 0xE3, 0x71, 0xF6, 0x44, 0x5E, 0x8B, 0x3D,  // ..q.D^.=
                /* 0FD8 */  0x12, 0x43, 0xB2, 0x4B, 0x85, 0xC7, 0xC6, 0x8F,  // .C.K....
                /* 0FE0 */  0x0E, 0x1E, 0xD8, 0x0B, 0xB2, 0x4F, 0xCA, 0xBE,  // .....O..
                /* 0FE8 */  0x70, 0xFA, 0x28, 0xE2, 0x63, 0x00, 0x3F, 0x27,  // p.(.c.?'
                /* 0FF0 */  0x33, 0xB4, 0xD0, 0xD8, 0x61, 0x78, 0x80, 0xC1,  // 3...ax..
                /* 0FF8 */  0x8E, 0xCE, 0x77, 0x00, 0x13, 0x78, 0x42, 0xA7,  // ..w..xB.
                /* 1000 */  0x59, 0xEE, 0xBD, 0x41, 0xE2, 0x51, 0x85, 0xD1,  // Y..A.Q..
                /* 1008 */  0x1C, 0x14, 0x09, 0x30, 0x6A, 0xD0, 0x9C, 0x19,  // ...0j...
                /* 1010 */  0xCE, 0xE0, 0x0D, 0x8C, 0x0D, 0xFA, 0x59, 0xD3,  // ......Y.
                /* 1018 */  0xB7, 0x02, 0xA3, 0xD4, 0x3C, 0x67, 0x02, 0x52,  // ....<g.R
                /* 1020 */  0xE1, 0x38, 0xB5, 0xE6, 0xF3, 0x88, 0x12, 0xCD,  // .8......
                /* 1028 */  0xD8, 0xC1, 0x7D, 0x91, 0x36, 0xCE, 0x83, 0x42,  // ..}.6..B
                /* 1030 */  0xA8, 0x5A, 0x27, 0x47, 0x60, 0x8E, 0x81, 0x01,  // .Z'G`...
                /* 1038 */  0xBD, 0x4D, 0x3C, 0x00, 0xB4, 0x76, 0x2D, 0xA2,  // .M<..v-.
                /* 1040 */  0x57, 0x7D, 0x0F, 0x88, 0x9F, 0x0E, 0x0C, 0xFD,  // W}......
                /* 1048 */  0x5E, 0xE1, 0x53, 0x02, 0x73, 0x7F, 0xC5, 0x96,  // ^.S.s...
                /* 1050 */  0x37, 0x54, 0x61, 0x84, 0x78, 0x32, 0x89, 0x60,  // 7Ta.x2.`
                /* 1058 */  0x5B, 0x53, 0xD1, 0x65, 0x2F, 0xC4, 0xEB, 0x45,  // [S.e/..E
                /* 1060 */  0x94, 0x03, 0x38, 0xA8, 0x60, 0x51, 0xA3, 0xBC,  // ..8.`Q..
                /* 1068 */  0x54, 0x1C, 0xE3, 0x03, 0xE2, 0xFF, 0xFF, 0xC4,  // T.......
                /* 1070 */  0xA2, 0xC4, 0x8D, 0x15, 0x30, 0x42, 0xE4, 0xB0,  // ....0B..
                /* 1078 */  0x67, 0xF2, 0x7E, 0x10, 0xDC, 0xB0, 0xB1, 0xDA,  // g.~.....
                /* 1080 */  0x1F, 0x04, 0x89, 0x75, 0x2E, 0xD0, 0xE1, 0xD0,  // ...u....
                /* 1088 */  0x91, 0x46, 0x83, 0x3A, 0x6B, 0xF8, 0x6C, 0xE0,  // .F.:k.l.
                /* 1090 */  0x93, 0x82, 0x27, 0xF6, 0x8C, 0x6A, 0x90, 0x37,  // ..'..j.7
                /* 1098 */  0x70, 0xEB, 0x3C, 0x14, 0x90, 0xE1, 0xB3, 0xD3,  // p.<.....
                /* 10A0 */  0x88, 0x0F, 0x25, 0x70, 0x5C, 0x03, 0xEA, 0x7A,  // ..%p\..z
                /* 10A8 */  0xF0, 0x5C, 0x01, 0x96, 0x53, 0x09, 0xFC, 0xF1,  // .\..S...
                /* 10B0 */  0xF8, 0x34, 0xE0, 0xD9, 0x9B, 0xC0, 0xF2, 0x07,  // .4......
                /* 10B8 */  0x81, 0xBA, 0xF6, 0xF0, 0xA1, 0x9E, 0xD6, 0x6B,  // .......k
                /* 10C0 */  0x80, 0x6F, 0x94, 0x26, 0xF0, 0x11, 0xD2, 0xC7,  // .o.&....
                /* 10C8 */  0x18, 0x8F, 0x07, 0xFC, 0x8A, 0x8F, 0x05, 0x42,  // .......B
                /* 10D0 */  0x78, 0x73, 0xF0, 0x7C, 0x4D, 0x50, 0xDE, 0xA1,  // xs.|MP..
                /* 10D8 */  0x05, 0x14, 0x97, 0x05, 0x7E, 0xF6, 0x60, 0x87,  // ....~.`.
                /* 10E0 */  0x05, 0x7E, 0x9E, 0xF5, 0x21, 0x02, 0x0B, 0xCF,  // .~..!...
                /* 10E8 */  0x0F, 0x01, 0x8F, 0x2F, 0x0C, 0xF8, 0x0D, 0xC6,  // .../....
                /* 10F0 */  0x53, 0x38, 0x1C, 0x1F, 0x2F, 0x8C, 0x10, 0xFE,  // S8../...
                /* 10F8 */  0xA9, 0xE2, 0x29, 0xC3, 0x67, 0x88, 0xF3, 0x79,  // ..).g..y
                /* 1100 */  0x5E, 0x38, 0xA3, 0x27, 0x1E, 0x96, 0xE4, 0xAD,  // ^8.'....
                /* 1108 */  0xA8, 0xE3, 0x86, 0xD3, 0x1E, 0x0D, 0xD1, 0x29,  // .......)
                /* 1110 */  0x17, 0x2B, 0xFC, 0x37, 0x98, 0xC0, 0xC7, 0xFC,  // .+.7....
                /* 1118 */  0x40, 0xF0, 0xF6, 0x8A, 0xFB, 0xFF, 0x5F, 0x13,  // @....._.
                /* 1120 */  0x3D, 0x8B, 0xE7, 0x8C, 0x53, 0x7A, 0x06, 0x30,  // =...Sz.0
                /* 1128 */  0x81, 0x13, 0x5D, 0xE9, 0xE9, 0xC8, 0x9D, 0x85,  // ..].....
                /* 1130 */  0x42, 0x57, 0x2A, 0xF8, 0xA7, 0x06, 0xDC, 0xD0,  // BW*.....
                /* 1138 */  0xD9, 0x2C, 0xDE, 0xFD, 0x3D, 0x6B, 0xDF, 0x01,  // .,..=k..
                /* 1140 */  0x7C, 0xA5, 0x02, 0x66, 0xF7, 0x05, 0xEC, 0x95,  // |..f....
                /* 1148 */  0x0A, 0x58, 0x44, 0xDA, 0xA7, 0xE6, 0xCA, 0x43,  // .XD....C
                /* 1150 */  0x9C, 0xCA, 0x28, 0x88, 0x27, 0xE6, 0xAB, 0x38,  // ..(.'..8
                /* 1158 */  0xF0, 0xBC, 0x53, 0x81, 0xF3, 0x5E, 0xE2, 0x71,  // ..S..^.q
                /* 1160 */  0xE1, 0xDE, 0x0B, 0x3E, 0x2A, 0xC0, 0xBC, 0x8D,  // ...>*...
                /* 1168 */  0x63, 0xFE, 0xFF, 0x23, 0x03, 0xEF, 0x7D, 0xC1,  // c..#..}.
                /* 1170 */  0x97, 0x2F, 0xE0, 0x7D, 0x77, 0xF3, 0xE5, 0x0B,  // ./.}w...
                /* 1178 */  0x5C, 0x87, 0x00, 0x5F, 0xBE, 0x80, 0xEB, 0xB5,  // \.._....
                /* 1180 */  0xE4, 0xBD, 0x09, 0x3C, 0x97, 0x12, 0x7E, 0x17,  // ...<..~.
                /* 1188 */  0x86, 0x81, 0x14, 0xED, 0xDD, 0x80, 0x0F, 0xCC,  // ........
                /* 1190 */  0xF7, 0x20, 0x1F, 0x3A, 0x2C, 0xE3, 0x9A, 0x82,  // . .:,...
                /* 1198 */  0x3A, 0x33, 0x39, 0xFA, 0x3A, 0x75, 0xAC, 0x64,  // :39.:u.d
                /* 11A0 */  0xB3, 0x8F, 0x1E, 0xFF, 0xE9, 0xC9, 0x17, 0x99,  // ........
                /* 11A8 */  0xC0, 0xCF, 0x0B, 0xF8, 0x23, 0xB1, 0x8F, 0x64,  // ....#..d
                /* 11B0 */  0xBE, 0x51, 0x99, 0xC0, 0x01, 0xCF, 0x19, 0xF4,  // .Q......
                /* 11B8 */  0xFF, 0x0F, 0xE1, 0x68, 0x14, 0x0A, 0x76, 0xDC,  // ...h..v.
                /* 11C0 */  0x40, 0x45, 0x81, 0xA3, 0x20, 0x3E, 0x6E, 0x00,  // @E.. >n.
                /* 11C8 */  0x57, 0x02, 0x9F, 0x22, 0xC0, 0x17, 0x6C, 0x5C,  // W.."..l\
                /* 11D0 */  0xE8, 0xA3, 0x82, 0xA7, 0x0C, 0xAE, 0xDB, 0x23,  // .......#
                /* 11D8 */  0xE0, 0x4D, 0xC2, 0x7A, 0x74, 0xE2, 0x00, 0xD7,  // .M.zt...
                /* 11E0 */  0xE1, 0xC4, 0x27, 0x0E, 0x38, 0xFF, 0xFF, 0x13,  // ..'.8...
                /* 11E8 */  0x07, 0xF0, 0x42, 0xF5, 0x29, 0x18, 0x5C, 0x50,  // ..B.).\P
                /* 11F0 */  0x4F, 0x07, 0x1C, 0xE6, 0x61, 0x8F, 0x5D, 0x3A,  // O...a.]:
                /* 11F8 */  0x60, 0x5C, 0xE5, 0xD8, 0xF5, 0x80, 0x9D, 0x39,  // `\.....9
                /* 1200 */  0x9C, 0xE8, 0x57, 0xA7, 0x33, 0x07, 0x2E, 0xC5,  // ..W.3...
                /* 1208 */  0x92, 0x75, 0x0D, 0x63, 0x67, 0x0E, 0xB0, 0x69,  // .u.cg..i
                /* 1210 */  0x05, 0xD7, 0x65, 0x8B, 0xAB, 0x84, 0x91, 0x46,  // ..e....F
                /* 1218 */  0x12, 0x9D, 0x39, 0xB8, 0xAA, 0x3B, 0x17, 0x05,  // ..9..;..
                /* 1220 */  0xF1, 0x8D, 0xCF, 0x51, 0x20, 0xA4, 0xE4, 0xCC,  // ...Q ...
                /* 1228 */  0x81, 0x1E, 0x08, 0xFE, 0xA6, 0xEC, 0x71, 0xFA,  // ......q.
                /* 1230 */  0x44, 0x0C, 0x0C, 0x0F, 0x88, 0xAF, 0x86, 0x09,  // D.......
                /* 1238 */  0x86, 0x82, 0x90, 0x91, 0x21, 0xD3, 0x51, 0x79,  // ....!.Qy
                /* 1240 */  0x60, 0x1E, 0x15, 0x9E, 0x60, 0x82, 0xDB, 0x83,  // `...`...
                /* 1248 */  0xE7, 0x04, 0xE1, 0xFF, 0x3F, 0x27, 0xCC, 0x4D,  // ....?'.M
                /* 1250 */  0x03, 0x3F, 0x98, 0xF7, 0x89, 0x67, 0x3F, 0xDF,  // .?...g?.
                /* 1258 */  0x13, 0x3C, 0x35, 0x58, 0xC7, 0x20, 0x3E, 0x35,  // .<5X. >5
                /* 1260 */  0x70, 0xDC, 0x23, 0x0F, 0x8D, 0x8D, 0x1F, 0x77,  // p.#....w
                /* 1268 */  0x36, 0x01, 0xDF, 0x21, 0x00, 0xAC, 0xB7, 0x04,  // 6..!....
                /* 1270 */  0x1F, 0x02, 0xC0, 0x76, 0x85, 0x03, 0x16, 0xFB,  // ...v....
                /* 1278 */  0xF6, 0x0D, 0x82, 0x47, 0x9E, 0x3B, 0x05, 0xF1,  // ...G.;..
                /* 1280 */  0xA0, 0x7C, 0x09, 0x02, 0x9E, 0x50, 0xBE, 0xD8,  // .|...P..
                /* 1288 */  0xC0, 0xFE, 0xFF, 0x5F, 0x6C, 0x00, 0x13, 0x90,  // ..._l...
                /* 1290 */  0xBE, 0xD8, 0x00, 0x4E, 0x8E, 0xD9, 0xFC, 0x62,  // ...N...b
                /* 1298 */  0x03, 0x4E, 0xD9, 0x17, 0x1B, 0xD4, 0x91, 0xC0,  // .N......
                /* 12A0 */  0x62, 0x57, 0xAA, 0xCB, 0x0E, 0xBB, 0xB2, 0xBE,  // bW......
                /* 12A8 */  0xA1, 0xB2, 0xD9, 0xF8, 0x60, 0xED, 0x83, 0x9A,  // ....`...
                /* 12B0 */  0x47, 0xFD, 0xB6, 0xC0, 0x06, 0xFB, 0x08, 0x8C,  // G.......
                /* 12B8 */  0x13, 0x75, 0xAF, 0x41, 0xC9, 0x81, 0x51, 0x80,  // .u.A..Q.
                /* 12C0 */  0x63, 0x04, 0x4A, 0xF2, 0xD5, 0x8C, 0x82, 0xF8,  // c.J.....
                /* 12C8 */  0x00, 0xE0, 0x43, 0x29, 0x18, 0xFF, 0xFF, 0x87,  // ..C)....
                /* 12D0 */  0x52, 0x60, 0x96, 0xE4, 0xAE, 0x82, 0xD6, 0x72,  // R`.....r
                /* 12D8 */  0x12, 0x20, 0x97, 0x3C, 0x1F, 0xF6, 0x0E, 0xF4,  // . .<....
                /* 12E0 */  0xC4, 0x4F, 0xEA, 0x05, 0xF8, 0xA9, 0x9C, 0x4D,  // .O.....M
                /* 12E8 */  0x0A, 0xAC, 0xC3, 0xF5, 0x31, 0x05, 0x38, 0x87,  // ....1.8.
                /* 12F0 */  0x39, 0x10, 0xA0, 0xE4, 0x1F, 0x08, 0x28, 0x88,  // 9.....(.
                /* 12F8 */  0xAF, 0x7E, 0xC0, 0xF5, 0x3E, 0x0A, 0xCE, 0x30,  // .~..>..0
                /* 1300 */  0xE7, 0x06, 0xF4, 0xD1, 0xD9, 0xC0, 0xFF, 0xFF,  // ........
                /* 1308 */  0x97, 0x09, 0x18, 0x87, 0x19, 0xE0, 0x77, 0x3A,  // ......w:
                /* 1310 */  0xC7, 0x1F, 0x66, 0x80, 0xC7, 0x93, 0xC0, 0x87,  // ..f.....
                /* 1318 */  0x19, 0x70, 0x81, 0xFB, 0x30, 0x03, 0x5C, 0x05,  // .p..0.\.
                /* 1320 */  0x5F, 0xFA, 0x40, 0x77, 0x90, 0x67, 0x28, 0xBE,  // _.@w.g(.
                /* 1328 */  0x18, 0xF8, 0xE4, 0xC2, 0x71, 0x4E, 0xEB, 0xE9,  // ....qN..
                /* 1330 */  0x80, 0xC3, 0x04, 0x7E, 0x3B, 0x60, 0x47, 0x0E,  // ...~;`G.
                /* 1338 */  0x8B, 0xBF, 0xF3, 0xA1, 0xE5, 0x9E, 0x65, 0x20,  // ......e 
                /* 1340 */  0xDF, 0x72, 0x3C, 0x1D, 0xFF, 0xFF, 0x07, 0xF0,  // .r<.....
                /* 1348 */  0xBC, 0xE0, 0x3B, 0x09, 0xEE, 0x30, 0x03, 0xB0,  // ..;..0..
                /* 1350 */  0xFD, 0xFF, 0x7F, 0x98, 0x01, 0xB6, 0xB7, 0x09,  // ........
                /* 1358 */  0x18, 0x87, 0x19, 0xC0, 0x9C, 0x88, 0xC3, 0x0C,  // ........
                /* 1360 */  0xE8, 0x4C, 0x1C, 0x66, 0x80, 0xEE, 0x4D, 0xC3,  // .L.f..M.
                /* 1368 */  0x87, 0x19, 0x30, 0xFC, 0xFF, 0x0F, 0x33, 0x60,  // ..0...3`
                /* 1370 */  0x80, 0x7E, 0x3A, 0xC0, 0x5C, 0x66, 0x7C, 0x05,  // .~:.\f|.
                /* 1378 */  0xC1, 0xDC, 0x39, 0x4C, 0x30, 0xDE, 0xBB, 0x41,  // ..9L0..A
                /* 1380 */  0xC7, 0x19, 0x3E, 0x14, 0x5F, 0xE3, 0x3D, 0x0A,  // ..>._.=.
                /* 1388 */  0x36, 0xFE, 0xF7, 0x3E, 0xA3, 0xF8, 0x00, 0x10,  // 6..>....
                /* 1390 */  0xFF, 0x7D, 0xC0, 0xA1, 0x6E, 0xF3, 0xA8, 0x38,  // .}..n..8
                /* 1398 */  0x14, 0x3A, 0x67, 0x00, 0x0E, 0x6E, 0xF3, 0xE0,  // .:g..n..
                /* 13A0 */  0x3C, 0x67, 0xC0, 0x99, 0x2B, 0x8C, 0x7B, 0x3C,  // <g..+.{<
                /* 13A8 */  0x30, 0x3C, 0x67, 0x00, 0x83, 0xFF, 0xFF, 0x39,  // 0<g....9
                /* 13B0 */  0x03, 0x56, 0x68, 0x08, 0x9D, 0x33, 0xC0, 0xA5,  // .Vh..3..
                /* 13B8 */  0xE2, 0x9C, 0x01, 0x74, 0x45, 0x9E, 0x33, 0x40,  // ...tE.3@
                /* 13C0 */  0x77, 0x34, 0x65, 0x30, 0xEC, 0x62, 0xEA, 0xB9,  // w4e0.b..
                /* 13C8 */  0x3F, 0x5F, 0x30, 0xA1, 0xA7, 0x2F, 0xD4, 0x10,  // ?_0../..
                /* 13D0 */  0x2C, 0xF5, 0x02, 0x8F, 0xB8, 0x23, 0xC0, 0x90,  // ,....#..
                /* 13D8 */  0x77, 0xEC, 0x42, 0x09, 0x83, 0x91, 0xAC, 0x9B,  // w.B.....
                /* 13E0 */  0x3B, 0x4A, 0xC8, 0xCD, 0x9D, 0x82, 0xF8, 0xE6,  // ;J......
                /* 13E8 */  0x0E, 0xD8, 0xFA, 0xFF, 0xDF, 0xDC, 0x01, 0x23,  // .......#
                /* 13F0 */  0x39, 0xCE, 0x21, 0xE8, 0xA1, 0xF9, 0x4E, 0x00,  // 9.!...N.
                /* 13F8 */  0xE3, 0xCC, 0x0E, 0xCC, 0x4E, 0x21, 0xD8, 0x33,  // ....N!.3
                /* 1400 */  0x3B, 0xE0, 0xF7, 0xFF, 0x7F, 0x66, 0x07, 0x96,  // ;....f..
                /* 1408 */  0x87, 0x18, 0xF0, 0x8D, 0xD3, 0x87, 0x18, 0xC0,  // ........
                /* 1410 */  0xC9, 0x99, 0x9D, 0x1F, 0x62, 0xE0, 0x25, 0x5D,  // ....b.%]
                /* 1418 */  0xA7, 0x0E, 0x31, 0x9C, 0xC3, 0x39, 0x1F, 0x0A,  // ..1..9..
                /* 1420 */  0x9A, 0x7A, 0xF8, 0x63, 0xF2, 0x8D, 0xF4, 0x04,  // .z.c....
                /* 1428 */  0xFB, 0x9C, 0x80, 0xC6, 0x61, 0xCD, 0x48, 0x3A,  // ....a.H:
                /* 1430 */  0x0B, 0x1C, 0xE3, 0xD3, 0x81, 0x73, 0x9D, 0x5F,  // .....s._
                /* 1438 */  0xE8, 0x99, 0xC1, 0x89, 0x28, 0x94, 0xE7, 0xEC,  // ....(...
                /* 1440 */  0x80, 0x4A, 0x70, 0xEA, 0xA2, 0x20, 0x1E, 0xBE,  // .Jp.. ..
                /* 1448 */  0x8F, 0x31, 0xC0, 0xE8, 0xFF, 0x7F, 0x8C, 0x01,  // .1......
                /* 1450 */  0x4C, 0x5F, 0x51, 0x00, 0x93, 0x77, 0x52, 0x70,  // L_Q..wRp
                /* 1458 */  0x5E, 0x51, 0xE0, 0xFD, 0xFF, 0xAF, 0x28, 0xE0,  // ^Q....(.
                /* 1460 */  0x0B, 0x7E, 0x45, 0x01, 0x9D, 0x8D, 0x2B, 0x0A,  // .~E...+.
                /* 1468 */  0xD0, 0x1D, 0xE0, 0x2B, 0x0A, 0x58, 0x6E, 0x25,  // ...+.Xn%
                /* 1470 */  0x7C, 0x10, 0x8F, 0x25, 0xFC, 0xB8, 0xC9, 0xAE,  // |..%....
                /* 1478 */  0x25, 0x98, 0x4B, 0x0A, 0x8B, 0x7D, 0xCF, 0x44,  // %.K..}.D
                /* 1480 */  0x71, 0x38, 0xF4, 0x3D, 0x13, 0x71, 0x0B, 0xE7,  // q8.=.q..
                /* 1488 */  0xA7, 0x16, 0x1B, 0x87, 0xD6, 0x14, 0x7D, 0xF9,  // ......}.
                /* 1490 */  0x34, 0xC1, 0x90, 0x37, 0x4D, 0x54, 0x3C, 0x0A,  // 4..7MT<.
                /* 1498 */  0x85, 0x3B, 0x3D, 0xA0, 0x6E, 0x9B, 0xBE, 0x6F,  // .;=.n..o
                /* 14A0 */  0xF2, 0x9B, 0x26, 0xE0, 0xE0, 0xFF, 0x7F, 0x7A,  // ..&....z
                /* 14A8 */  0x80, 0x1B, 0xEE, 0x9A, 0x82, 0x1E, 0x87, 0x67,  // .......g
                /* 14B0 */  0xCB, 0x91, 0x5F, 0x02, 0x7C, 0x4F, 0xF1, 0x7D,  // .._.|O.}
                /* 14B8 */  0xC0, 0xE6, 0x21, 0x49, 0x88, 0x93, 0x0A, 0x1D,  // ..!I....
                /* 14C0 */  0x18, 0xB8, 0x8E, 0x2A, 0x7C, 0x50, 0xBE, 0x72,  // ...*|P.r
                /* 14C8 */  0xC2, 0xBD, 0xAA, 0x80, 0xEB, 0xAC, 0x01, 0xBC,  // ........
                /* 14D0 */  0xC7, 0xE2, 0xB3, 0x06, 0xE0, 0xE4, 0xA2, 0x0C,  // ........
                /* 14D8 */  0xE3, 0x7C, 0xE5, 0xD3, 0x05, 0xFB, 0xFF, 0x9F,  // .|......
                /* 14E0 */  0x2E, 0xD8, 0x59, 0x83, 0x25, 0xB8, 0x73, 0xA2,  // ..Y.%.s.
                /* 14E8 */  0x38, 0xAC, 0xFF, 0xCE, 0x89, 0x38, 0x6B, 0xC0,  // 8....8k.
                /* 14F0 */  0xD4, 0x7B, 0xEB, 0x44, 0x29, 0x85, 0x91, 0xCE,  // .{.D)...
                /* 14F8 */  0x5B, 0x27, 0x4A, 0xD9, 0x35, 0x8B, 0x82, 0xF8,  // ['J.5...
                /* 1500 */  0xD6, 0x09, 0xF0, 0x27, 0xD8, 0xD0, 0xD0, 0xB3,  // ...'....
                /* 1508 */  0xF0, 0x99, 0x04, 0xE6, 0xE0, 0xC0, 0xF4, 0xFF,  // ........
                /* 1510 */  0xBF, 0x91, 0xC0, 0xB8, 0x7E, 0xC2, 0xBC, 0x8B,  // ....~...
                /* 1518 */  0x01, 0xD6, 0x8F, 0x9F, 0xC0, 0xFD, 0x42, 0x03,  // ......B.
                /* 1520 */  0x3E, 0x23, 0x17, 0x1A, 0x10, 0xFE, 0xFF, 0x2F,  // >#...../
                /* 1528 */  0x34, 0xC0, 0xF2, 0xF8, 0xC9, 0x2F, 0x34, 0xF0,  // 4..../4.
                /* 1530 */  0x03, 0x1F, 0x40, 0x51, 0xA2, 0x20, 0x14, 0xF3,  // ..@Q. ..
                /* 1538 */  0xA9, 0xA0, 0xFB, 0x0D, 0x9B, 0x86, 0xB5, 0x0F,  // ........
                /* 1540 */  0x42, 0xB0, 0x9E, 0xCD, 0xB3, 0x86, 0xEF, 0x34,  // B......4
                /* 1548 */  0x3E, 0x8F, 0x7A, 0x4E, 0x8C, 0x60, 0xA4, 0x23,  // >.zN.`.#
                /* 1550 */  0x28, 0x2A, 0x0C, 0x85, 0xC2, 0x1F, 0x07, 0x28,  // (*.....(
                /* 1558 */  0x9C, 0xE3, 0x9E, 0x1F, 0x28, 0x88, 0x01, 0x9D,  // ....(...
                /* 1560 */  0xE5, 0xFC, 0x80, 0x3E, 0x6D, 0x78, 0x22, 0xB8,  // ...>mx".
                /* 1568 */  0x33, 0xC1, 0x1B, 0xC8, 0x01, 0x06, 0x79, 0x62,  // 3.....yb
                /* 1570 */  0x60, 0x67, 0x1A, 0x60, 0x78, 0x7C, 0x60, 0xA7,  // `g.`x|`.
                /* 1578 */  0x0F, 0x60, 0x71, 0x8D, 0xF3, 0x70, 0x79, 0x80,  // .`q..py.
                /* 1580 */  0xBB, 0x1C, 0x05, 0xF1, 0x5D, 0x0E, 0xD6, 0xFF,  // ....]...
                /* 1588 */  0xFF, 0xF4, 0x01, 0xAC, 0x46, 0xE3, 0xD3, 0x07,  // ....F...
                /* 1590 */  0xF8, 0xC6, 0x05, 0xE7, 0x54, 0x80, 0xBB, 0x2B,  // ....T..+
                /* 1598 */  0xE0, 0xEE, 0x9F, 0x80, 0xB7, 0x65, 0xFB, 0x90,  // .....e..
                /* 15A0 */  0x02, 0xAE, 0x3B, 0x95, 0x0F, 0x29, 0xC0, 0xEE,  // ..;..)..
                /* 15A8 */  0xFF, 0x7F, 0x48, 0xC1, 0x0A, 0xBE, 0xC4, 0x81,  // ..H.....
                /* 15B0 */  0xEE, 0xEC, 0xE0, 0x83, 0x01, 0xBF, 0x75, 0x1B,  // ......u.
                /* 15B8 */  0xEE, 0x25, 0xD4, 0xA8, 0x0F, 0x26, 0xEC, 0xA6,  // .%...&..
                /* 15C0 */  0xE2, 0xD3, 0x01, 0x3F, 0xA8, 0xB0, 0x44, 0xEB,  // ...?..D.
                /* 15C8 */  0xD5, 0x41, 0x05, 0x97, 0xE3, 0x65, 0xA5, 0x73,  // .A...e.s
                /* 15D0 */  0x0B, 0x3B, 0xA8, 0x80, 0x41, 0x33, 0xAC, 0x0E,  // .;..A3..
                /* 15D8 */  0x2A, 0x5C, 0x2D, 0x8C, 0xB4, 0x3E, 0x00, 0x74,  // *\-..>.t
                /* 15E0 */  0xD4, 0xE0, 0xEA, 0x6E, 0x74, 0x14, 0xC4, 0x17,  // ...nt...
                /* 15E8 */  0x12, 0x5F, 0xE5, 0x00, 0xA6, 0xFC, 0xFF, 0xAF,  // ._......
                /* 15F0 */  0x67, 0x30, 0x72, 0x8C, 0x1F, 0x0D, 0xE3, 0x93,  // g0r.....
                /* 15F8 */  0x8B, 0x2F, 0x47, 0x1E, 0xD9, 0x93, 0xC1, 0xBB,  // ./G.....
                /* 1600 */  0x04, 0x9B, 0x3D, 0x58, 0xCF, 0x07, 0x9E, 0x3D,  // ..=X...=
                /* 1608 */  0xD8, 0xAE, 0x46, 0xC0, 0x11, 0xC9, 0x57, 0x23,  // ..F...W#
                /* 1610 */  0xB0, 0x1D, 0x24, 0x7C, 0xB6, 0x01, 0xCF, 0xA8,  // ..$|....
                /* 1618 */  0xC0, 0x7A, 0x62, 0xF0, 0xFD, 0x09, 0x38, 0xFE,  // .zb...8.
                /* 1620 */  0xFF, 0x2F, 0x83, 0x80, 0x93, 0x8B, 0x8F, 0x2F,  // ./...../
                /* 1628 */  0x46, 0x80, 0xA7, 0x41, 0xFB, 0x62, 0x04, 0x38,  // F..A.b.8
                /* 1630 */  0xB9, 0x0C, 0xF2, 0x8B, 0x11, 0xFC, 0xFF, 0xFF,  // ........
                /* 1638 */  0xC5, 0x08, 0x1F, 0xE8, 0xB0, 0x8F, 0x3A, 0x02,  // ......:.
                /* 1640 */  0x38, 0xD8, 0x61, 0x1F, 0x61, 0x15, 0x41, 0x17,  // 8.a.a.A.
                /* 1648 */  0x03, 0x16, 0xE8, 0xA0, 0x8F, 0x8A, 0x42, 0xA1,  // ......B.
                /* 1650 */  0x20, 0xA7, 0x07, 0x94, 0x74, 0x38, 0x0A, 0xE2,  //  ...t8..
                /* 1658 */  0x83, 0x3E, 0xE0, 0x27, 0x08, 0x30, 0x6A, 0x5C,  // .>.'.0j\
                /* 1660 */  0x3E, 0x0C, 0x78, 0xA6, 0x98, 0x0B, 0x1F, 0x30,  // >.x....0
                /* 1668 */  0x3C, 0x0F, 0xF8, 0x78, 0xE0, 0x51, 0xF5, 0x7C,  // <..x.Q.|
                /* 1670 */  0xC2, 0x00, 0x32, 0x37, 0x4D, 0x9F, 0x30, 0xC0,  // ..27M.0.
                /* 1678 */  0xF3, 0xFF, 0xBF, 0x4E, 0x58, 0xCA, 0x09, 0x03,  // ...NX...
                /* 1680 */  0xE8, 0xCA, 0xBB, 0xC9, 0x81, 0xEE, 0x54, 0xC0,  // ......T.
                /* 1688 */  0x2F, 0x16, 0x96, 0x76, 0xB2, 0x47, 0x8D, 0xDC,  // /..v.G..
                /* 1690 */  0x12, 0x4F, 0xF6, 0x88, 0xEB, 0x01, 0x46, 0xDA,  // .O....F.
                /* 1698 */  0xA9, 0x1E, 0x25, 0x0A, 0x46, 0x92, 0x4E, 0xF5,  // ..%.F.N.
                /* 16A0 */  0x28, 0x11, 0x37, 0x57, 0x0A, 0xE2, 0x53, 0x3D,  // (.7W..S=
                /* 16A8 */  0xC0, 0x81, 0xFF, 0xFF, 0xD5, 0x0D, 0xDC, 0x19,  // ........
                /* 16B0 */  0x0E, 0x20, 0x68, 0x15, 0x07, 0x10, 0xE4, 0xC5,  // . h.....
                /* 16B8 */  0x0D, 0x98, 0x1D, 0x3F, 0xB0, 0x57, 0x79, 0x80,  // ...?.Wy.
                /* 16C0 */  0x3D, 0xFF, 0xFF, 0xD3, 0x0B, 0x78, 0xAD, 0x9C,  // =....x..
                /* 16C8 */  0x5E, 0x00, 0x2D, 0xC7, 0x2D, 0x7E, 0x7A, 0xC1,  // ^.-.-~z.
                /* 16D0 */  0x45, 0x3D, 0x65, 0xA1, 0x38, 0x1C, 0xF4, 0x94,  // E=e.8...
                /* 16D8 */  0x85, 0xC0, 0xF5, 0x04, 0x3C, 0xA5, 0xB3, 0xAB,  // ....<...
                /* 16E0 */  0xF3, 0x1C, 0xA0, 0xE1, 0xBD, 0xD8, 0x47, 0xF2,  // ......G.
                /* 16E8 */  0x71, 0x8B, 0x9D, 0xB4, 0x78, 0x24, 0x0A, 0x9D,  // q...x$..
                /* 16F0 */  0xB6, 0x7C, 0x70, 0xE0, 0x11, 0xE0, 0x28, 0x88,  // .|p...(.
                /* 16F8 */  0x4F, 0x5A, 0x80, 0x9F, 0x40, 0x27, 0x13, 0xF4,  // OZ..@'..
                /* 1700 */  0x38, 0x3C, 0x5B, 0xDC, 0xFF, 0x7F, 0xB6, 0xD8,  // 8<[.....
                /* 1708 */  0xD3, 0x16, 0x60, 0x2E, 0xF8, 0x01, 0x03, 0x74,  // ..`....t
                /* 1710 */  0x5A, 0x0E, 0x18, 0x40, 0x77, 0x80, 0x4F, 0x5B,  // Z..@w.O[
                /* 1718 */  0x60, 0x3B, 0x19, 0xE0, 0x70, 0xDE, 0x0C, 0x70,  // `;..p..p
                /* 1720 */  0x47, 0x43, 0x26, 0xFA, 0xC8, 0x85, 0xE2, 0xB0,  // GC&.....
                /* 1728 */  0xE4, 0x23, 0x17, 0xE2, 0x9E, 0x00, 0xF3, 0xEC,  // .#......
                /* 1730 */  0xE5, 0x63, 0x17, 0x17, 0x07, 0x23, 0x69, 0x24,  // .c...#i$
                /* 1738 */  0xFA, 0xFF, 0x9F, 0x32, 0xB8, 0x98, 0x63, 0x17,  // ...2..c.
                /* 1740 */  0x05, 0xF1, 0xB1, 0x0B, 0xE0, 0xCF, 0xE9, 0xDA,  // ........
                /* 1748 */  0xA7, 0x11, 0xDC, 0x2C, 0x7C, 0x2B, 0x80, 0x79,  // ...,|+.y
                /* 1750 */  0xF4, 0x02, 0xF6, 0xFF, 0xFF, 0xA3, 0x17, 0xC0,  // ........
                /* 1758 */  0x97, 0xA3, 0x0C, 0xF8, 0xBC, 0x1C, 0x65, 0x00,  // ......e.
                /* 1760 */  0x2D, 0x47, 0x2F, 0xFE, 0xFF, 0x3F, 0xCA, 0xC0,  // -G/..?..
                /* 1768 */  0x3F, 0x7F, 0xC1, 0x9C, 0x4A, 0x85, 0x43, 0x17,  // ?...J.C.
                /* 1770 */  0x46, 0x9F, 0x07, 0x00, 0x72, 0x83, 0x66, 0xF8,  // F...r.f.
                /* 1778 */  0xC7, 0xF2, 0xFC, 0x05, 0xD8, 0x1C, 0x17, 0x6E,  // .......n
                /* 1780 */  0x1C, 0x9E, 0x2D, 0xCC, 0xF3, 0x17, 0x30, 0x3C,  // ..-...0<
                /* 1788 */  0x65, 0x00, 0xA7, 0xFF, 0xFF, 0x29, 0x03, 0x9C,  // e....)..
                /* 1790 */  0x70, 0x3E, 0x7F, 0x01, 0x6E, 0x4E, 0x06, 0x0C,  // p>..nN..
                /* 1798 */  0xC4, 0x37, 0x03, 0x9F, 0xF4, 0x31, 0x47, 0x03,  // .7...1G.
                /* 17A0 */  0xDF, 0x32, 0x2C, 0x64, 0xAD, 0x3A, 0x65, 0xE0,  // .2,d.:e.
                /* 17A8 */  0x64, 0xFC, 0x9D, 0x74, 0xE8, 0x60, 0xF7, 0x04,  // d..t.`..
                /* 17B0 */  0x98, 0xB1, 0xCF, 0x5F, 0xA8, 0xC0, 0xE7, 0x2F,  // ..._.../
                /* 17B8 */  0x40, 0xE5, 0xFF, 0xFF, 0xFC, 0x05, 0x38, 0x19,  // @.....8.
                /* 17C0 */  0x3F, 0x6E, 0x16, 0xBE, 0x15, 0xC0, 0x3C, 0x7F,  // ?n....<.
                /* 17C8 */  0x01, 0xB3, 0xF9, 0x63, 0xCF, 0x5F, 0xC0, 0x22,  // ...c._."
                /* 17D0 */  0xD4, 0x91, 0x07, 0x15, 0xE3, 0xC8, 0x43, 0x41,  // ......CA
                /* 17D8 */  0x7C, 0xE4, 0x01, 0xAE, 0xE7, 0x2F, 0xFC, 0xFF,  // |..../..
                /* 17E0 */  0xFF, 0x28, 0x03, 0x8E, 0xF3, 0x83, 0xC7, 0x85,  // .(......
                /* 17E8 */  0x93, 0x74, 0x7E, 0x80, 0x02, 0x5E, 0x3C, 0xB6,  // .t~..^<.
                /* 17F0 */  0xAE, 0x22, 0x3E, 0x66, 0xF8, 0x5C, 0x72, 0x6A,  // .">f.\rj
                /* 17F8 */  0x1E, 0x1A, 0xB8, 0x6F, 0x14, 0x3E, 0xF4, 0x00,  // ...o.>..
                /* 1800 */  0x9E, 0xCC, 0x9C, 0xD4, 0x00, 0x3D, 0x87, 0x1E,  // .....=..
                /* 1808 */  0xB8, 0xFF, 0xFF, 0x9B, 0x1A, 0x59, 0xA9, 0x0E,  // .....Y..
                /* 1810 */  0x3D, 0xFC, 0x50, 0xE0, 0xD0, 0x27, 0x35, 0x48,  // =.P..'5H
                /* 1818 */  0x33, 0x09, 0x6D, 0x88, 0x04, 0x63, 0x1E, 0xD4,  // 3.m..c..
                /* 1820 */  0x50, 0x01, 0x29, 0x14, 0xEF, 0x98, 0x81, 0x3A,  // P.)....:
                /* 1828 */  0xAB, 0x19, 0xCC, 0x20, 0x3E, 0xA8, 0x01, 0x7E,  // ... >..~
                /* 1830 */  0xE2, 0x9D, 0x7A, 0xD0, 0x2C, 0xC6, 0x3D, 0xAB,  // ..z.,.=.
                /* 1838 */  0x23, 0x8D, 0x79, 0xDA, 0x35, 0xDF, 0xF8, 0xC8,  // #.y.5...
                /* 1840 */  0xB9, 0xC0, 0x03, 0x3B, 0x5E, 0x4C, 0x88, 0x73,  // ...;^L.s
                /* 1848 */  0x05, 0x1D, 0x19, 0xB8, 0x6E, 0x3E, 0x1C, 0xC6,  // ....n>..
                /* 1850 */  0x07, 0x36, 0xB8, 0x47, 0x1F, 0x70, 0x9D, 0x35,  // .6.G.p.5
                /* 1858 */  0x80, 0xC7, 0xFF, 0x5F, 0xC2, 0x72, 0x74, 0xD6,  // ..._.rt.
                /* 1860 */  0x00, 0xD7, 0x25, 0xC8, 0x67, 0x0D, 0xE0, 0x8A,  // ..%.g...
                /* 1868 */  0xEA, 0xF3, 0x1A, 0xB8, 0x2F, 0xBC, 0x3E, 0x24,  // ..../.>$
                /* 1870 */  0xC0, 0x00, 0x0B, 0xF1, 0x92, 0xC0, 0x0E, 0x1C,  // ........
                /* 1878 */  0x96, 0x7B, 0xE0, 0x40, 0x4B, 0x7C, 0x38, 0xE9,  // .{.@K|8.
                /* 1880 */  0xD0, 0x06, 0xE3, 0xC4, 0x80, 0x11, 0x75, 0x58,  // ......uX
                /* 1888 */  0xA3, 0x47, 0x28, 0xCB, 0xA1, 0x90, 0x98, 0x03,  // .G(.....
                /* 1890 */  0x07, 0x2A, 0xFE, 0x19, 0x81, 0x82, 0x18, 0xD0,  // .*......
                /* 1898 */  0xD9, 0x4E, 0x12, 0xA0, 0xBC, 0x91, 0x81, 0x17,  // .N......
                /* 18A0 */  0xC6, 0x87, 0x37, 0x98, 0xF7, 0x08, 0x58, 0xFF,  // ..7...X.
                /* 18A8 */  0xFF, 0x7B, 0x04, 0xAC, 0xB3, 0x33, 0x60, 0xF2,  // .{...3`.
                /* 18B0 */  0x18, 0x0A, 0xDC, 0xCF, 0x21, 0xE0, 0x73, 0x73,  // ....!.ss
                /* 18B8 */  0x0E, 0x01, 0xCA, 0xFF, 0xFF, 0x23, 0x14, 0xB8,  // .....#..
                /* 18C0 */  0xCF, 0x21, 0xE0, 0x50, 0x48, 0x9A, 0x80, 0xC4,  // .!.PH...
                /* 18C8 */  0x19, 0xB3, 0xC4, 0xAE, 0x98, 0xC2, 0xF8, 0x5C,  // .......\
                /* 18D0 */  0xE1, 0x43, 0x02, 0x7E, 0xD8, 0x47, 0x7D, 0xB0,  // .C.~.G}.
                /* 18D8 */  0xC7, 0xC5, 0x4E, 0x72, 0x86, 0xE3, 0x27, 0x02,  // ..Nr..'.
                /* 18E0 */  0x8F, 0xAB, 0xF9, 0xA9, 0x68, 0x14, 0xA7, 0xEF,  // ....h...
                /* 18E8 */  0x89, 0x85, 0x64, 0xD2, 0x06, 0x88, 0x92, 0x72,  // ..d....r
                /* 18F0 */  0xAA, 0x23, 0x13, 0x3A, 0xB9, 0xDA, 0x11, 0x75,  // .#.:...u
                /* 18F8 */  0x7D, 0x30, 0x4C, 0x02, 0x9F, 0x05, 0x18, 0x1A,  // }0L.....
                /* 1900 */  0x87, 0xC6, 0x0E, 0xC3, 0x97, 0x84, 0x60, 0x07,  // ......`.
                /* 1908 */  0xF1, 0xBE, 0xED, 0xB3, 0x04, 0x9B, 0xD0, 0xB9,  // ........
                /* 1910 */  0x96, 0x7B, 0x79, 0xD0, 0x1D, 0x2F, 0x6A, 0x8C,  // .{y../j.
                /* 1918 */  0xE6, 0xA0, 0x48, 0x80, 0xA1, 0x83, 0xE6, 0xE0,  // ..H.....
                /* 1920 */  0x70, 0x06, 0x6F, 0x7D, 0x6C, 0xC4, 0xCF, 0x61,  // p.o}l..a
                /* 1928 */  0x9E, 0x33, 0x03, 0x8C, 0x17, 0xE3, 0xC1, 0xE6,  // .3......
                /* 1930 */  0xF8, 0x18, 0x68, 0xCF, 0x38, 0xD2, 0x08, 0xA8,  // ..h.8...
                /* 1938 */  0x9B, 0x9F, 0xE1, 0xF9, 0x6D, 0x21, 0x54, 0xAD,  // ....m!T.
                /* 1940 */  0xA3, 0x23, 0xD8, 0x91, 0x18, 0xD0, 0x33, 0xC5,  // .#....3.
                /* 1948 */  0x03, 0x40, 0x6B, 0x83, 0x23, 0xB3, 0x38, 0x20,  // .@k.#.8 
                /* 1950 */  0xCC, 0x11, 0xC1, 0x13, 0x78, 0xB9, 0xF0, 0x51,  // ....x..Q
                /* 1958 */  0x81, 0xB9, 0x17, 0xE0, 0xED, 0x4C, 0x20, 0xCC,  // .....L .
                /* 1960 */  0xA3, 0x8A, 0x70, 0x16, 0x4F, 0x14, 0x71, 0xDA,  // ..p.O.q.
                /* 1968 */  0xC2, 0xD6, 0xD1, 0x20, 0x44, 0xA0, 0x28, 0x47,  // ... D.(G
                /* 1970 */  0x68, 0x98, 0x18, 0x51, 0xDE, 0x52, 0x22, 0x9D,  // h..Q.R".
                /* 1978 */  0x63, 0x88, 0x50, 0xC6, 0x32, 0x50, 0xD8, 0x18,  // c.P.2P..
                /* 1980 */  0x27, 0xF7, 0xFF, 0x8F, 0x10, 0x39, 0x78, 0xB0,  // '....9x.
                /* 1988 */  0x37, 0xCD, 0xF6, 0x4F, 0x5D, 0xEC, 0x5C, 0xA0,  // 7..O].\.
                /* 1990 */  0xF3, 0x8C, 0x23, 0x8D, 0x06, 0x75, 0xDE, 0xE6,  // ..#..u..
                /* 1998 */  0xE7, 0x82, 0x67, 0x05, 0x5F, 0x13, 0x7C, 0x51,  // ..g._.|Q
                /* 19A0 */  0x64, 0x77, 0xF7, 0xA3, 0xF4, 0xF0, 0xD9, 0x91,  // dw......
                /* 19A8 */  0xC4, 0x27, 0x13, 0x38, 0xAE, 0x01, 0x75, 0x3D,  // .'.8..u=
                /* 19B0 */  0x78, 0xB8, 0x00, 0xCB, 0xD1, 0x04, 0xFE, 0x78,  // x......x
                /* 19B8 */  0x7C, 0x1A, 0xF0, 0x09, 0xC0, 0x04, 0x96, 0x3F,  // |......?
                /* 19C0 */  0x08, 0xD4, 0xC8, 0x0C, 0xED, 0x31, 0xBF, 0x05,  // .....1..
                /* 19C8 */  0xB0, 0xB3, 0xC2, 0x61, 0xB1, 0x63, 0x8F, 0x0F,  // ...a.c..
                /* 19D0 */  0x33, 0x1E, 0x0F, 0xF8, 0x4F, 0xFD, 0x6F, 0x05,  // 3...O.o.
                /* 19D8 */  0x11, 0xDE, 0x1C, 0x3C, 0x5F, 0x1F, 0x1F, 0x7C,  // ...<_..|
                /* 19E0 */  0x72, 0x01, 0xC3, 0x98, 0x7C, 0x4A, 0xF0, 0x79,  // r...|J.y
                /* 19E8 */  0x01, 0x77, 0x5D, 0xC0, 0x13, 0x58, 0xE4, 0x41,  // .w]..X.A
                /* 19F0 */  0x02, 0x3D, 0x06, 0x7E, 0x10, 0x78, 0x8E, 0x61,  // .=.~.x.a
                /* 19F8 */  0x63, 0x78, 0x95, 0xF1, 0x34, 0x0E, 0xC9, 0x47,  // cx..4..G
                /* 1A00 */  0x0C, 0x23, 0xC4, 0x7F, 0xB2, 0x78, 0xD2, 0xF0,  // .#...x..
                /* 1A08 */  0x71, 0xE4, 0x34, 0x0E, 0xE2, 0xAC, 0xDE, 0x07,  // q.4.....
                /* 1A10 */  0x4C, 0x30, 0xAB, 0xBD, 0x53, 0x10, 0x53, 0x79,  // L0..S.Sy
                /* 1A18 */  0xC8, 0x42, 0x1D, 0x41, 0xAC, 0xE7, 0x90, 0x85,  // .B.A....
                /* 1A20 */  0x98, 0x12, 0xEE, 0xD4, 0xC1, 0xFE, 0xFF, 0x13,  // ........
                /* 1A28 */  0x88, 0xF3, 0xBC, 0xC1, 0xD3, 0x9F, 0x0F, 0xE9,  // ........
                /* 1A30 */  0xE0, 0x9D, 0x9B, 0x44, 0xB9, 0xC7, 0x44, 0xE1,  // ...D..D.
                /* 1A38 */  0x9C, 0xF4, 0x0C, 0x44, 0x41, 0x0C, 0xE8, 0x18,  // ...DA...
                /* 1A40 */  0x10, 0xB2, 0x72, 0x1E, 0x40, 0x8F, 0xE2, 0x38,  // ..r.@..8
                /* 1A48 */  0x9E, 0x1C, 0x7C, 0xEA, 0x78, 0x2C, 0x62, 0xE7,  // ..|.x,b.
                /* 1A50 */  0x6C, 0x60, 0x78, 0xBB, 0x78, 0xF0, 0xF0, 0xDD,  // l`x.x...
                /* 1A58 */  0x0A, 0x58, 0x5C, 0xCE, 0x3C, 0x57, 0x1E, 0x78,  // .X\.<W.x
                /* 1A60 */  0xAE, 0x14, 0xC4, 0x73, 0x75, 0x98, 0xBB, 0x15,  // ...su...
                /* 1A68 */  0xFA, 0x2E, 0xE3, 0xB9, 0xFA, 0xC8, 0x73, 0xAA,  // ......s.
                /* 1A70 */  0x1E, 0x2C, 0xBF, 0x5A, 0x01, 0xCE, 0xFE, 0xFF,  // .,.Z....
                /* 1A78 */  0xB7, 0x09, 0x7A, 0xB5, 0x02, 0xDD, 0xDD, 0x92,  // ..z.....
                /* 1A80 */  0x5F, 0xAD, 0x80, 0xE7, 0x9D, 0xE8, 0xD5, 0x0A,  // _.......
                /* 1A88 */  0x6C, 0xD7, 0x11, 0x7E, 0x1C, 0xC2, 0x9F, 0x36,  // l..~...6
                /* 1A90 */  0xB0, 0x40, 0x6F, 0x72, 0x46, 0x0B, 0xE4, 0x53,  // .@orF..S
                /* 1A98 */  0x90, 0xEF, 0x58, 0x1E, 0x03, 0x3F, 0xF6, 0x12,  // ..X..?..
                /* 1AA0 */  0x8C, 0xD7, 0x46, 0xB4, 0x96, 0x2B, 0x08, 0xA4,  // ..F..+..
                /* 1AA8 */  0xB3, 0xC0, 0x4B, 0xC0, 0x13, 0x02, 0xBB, 0x80,  // ..K.....
                /* 1AB0 */  0x00, 0xC6, 0xFE, 0xFF, 0x17, 0x10, 0x80, 0x47,  // .......G
                /* 1AB8 */  0x67, 0x45, 0xF0, 0x8D, 0xDA, 0x67, 0x45, 0xC0,  // gE...gE.
                /* 1AC0 */  0xC1, 0xFF, 0xFF, 0x02, 0x02, 0xBE, 0xB3, 0x06,  // ........
                /* 1AC8 */  0x03, 0x79, 0x8B, 0x8B, 0x77, 0x90, 0xD1, 0xDE,  // .y..w...
                /* 1AD0 */  0x05, 0x8D, 0x1E, 0xF4, 0x61, 0xC2, 0xC7, 0x29,  // ....a..)
                /* 1AD8 */  0x38, 0xC7, 0x62, 0x76, 0x9C, 0x02, 0x36, 0x47,  // 8.bv..6G
                /* 1AE0 */  0x08, 0xDC, 0xED, 0x03, 0x58, 0xDF, 0x1F, 0xD8,  // ....X...
                /* 1AE8 */  0xED, 0x03, 0x58, 0x9E, 0x5C, 0x70, 0xB7, 0x0F,  // ..X.\p..
                /* 1AF0 */  0x60, 0xF4, 0xFF, 0xBF, 0x7D, 0x80, 0xED, 0xEE,  // `...}...
                /* 1AF8 */  0xC2, 0x8E, 0x53, 0xC0, 0x1C, 0xD2, 0xC7, 0x29,  // ..S....)
                /* 1B00 */  0xC0, 0xC9, 0x7D, 0x9E, 0x1F, 0xA7, 0x80, 0xDB,  // ..}.....
                /* 1B08 */  0x15, 0x04, 0xC6, 0x71, 0x0A, 0xCC, 0x17, 0x10,  // ...q....
                /* 1B10 */  0xCC, 0xFF, 0xFF, 0x02, 0x02, 0xF0, 0xF7, 0x38,  // .......8
                /* 1B18 */  0x05, 0xBE, 0x73, 0xB2, 0x2F, 0x20, 0xB8, 0xFF,  // ..s./ ..
                /* 1B20 */  0xFF, 0x71, 0x0A, 0xF0, 0x70, 0x01, 0x81, 0x7F,  // .q..p...
                /* 1B28 */  0x9C, 0x82, 0xAB, 0xF0, 0x38, 0x05, 0x92, 0xE1,  // ....8...
                /* 1B30 */  0x3F, 0x52, 0x9F, 0xCE, 0x9B, 0x86, 0x8F, 0x23,  // ?R.....#
                /* 1B38 */  0xD1, 0xDF, 0x3E, 0x00, 0x1E, 0xFC, 0xFF, 0x6F,  // ..>....o
                /* 1B40 */  0x1F, 0x80, 0x75, 0x21, 0xB7, 0x0F, 0xD0, 0xC1,  // ..u!....
                /* 1B48 */  0xF2, 0xDB, 0x07, 0xF0, 0x3C, 0x06, 0xF8, 0xF6,  // ....<...
                /* 1B50 */  0x01, 0x1C, 0x4E, 0x1B, 0x6C, 0x18, 0x86, 0x8A,  // ..N.l...
                /* 1B58 */  0xF3, 0xBC, 0xC1, 0x41, 0xE3, 0xBC, 0x4C, 0xF1,  // ...A..L.
                /* 1B60 */  0xFF, 0xFF, 0x65, 0x8A, 0x5D, 0x40, 0x70, 0x1C,  // ..e.]@p.
                /* 1B68 */  0x56, 0x73, 0xD4, 0x85, 0x74, 0x03, 0x08, 0xF1,  // Vs..t...
                /* 1B70 */  0xC8, 0xDF, 0x25, 0x84, 0xEE, 0x1F, 0x00, 0x93,  // ..%.....
                /* 1B78 */  0xFF, 0xFF, 0xF7, 0x0F, 0x70, 0x4A, 0xB9, 0x7F,  // ....pJ..
                /* 1B80 */  0x80, 0xEE, 0x6E, 0xE0, 0xFB, 0x07, 0x70, 0x1D,  // ..n...p.
                /* 1B88 */  0xBF, 0xCF, 0xBA, 0xC0, 0x61, 0xB8, 0x81, 0x1E,  // ....a...
                /* 1B90 */  0xA6, 0x82, 0xBC, 0x6C, 0xC4, 0x7B, 0x04, 0x79,  // ...l.{.y
                /* 1B98 */  0xDB, 0x88, 0x1D, 0x2F, 0xE6, 0x21, 0x3D, 0x86,  // .../.!=.
                /* 1BA0 */  0x18, 0xDD, 0x53, 0x30, 0xAA, 0x2F, 0x20, 0xF0,  // ..S0./ .
                /* 1BA8 */  0x4E, 0x54, 0x30, 0x2E, 0x20, 0x80, 0x91, 0xFF,  // NT0. ...
                /* 1BB0 */  0xFF, 0x05, 0x04, 0x60, 0xA9, 0x87, 0x0B, 0x08,  // ...`....
                /* 1BB8 */  0x10, 0xFB, 0xFF, 0x5F, 0x40, 0xC0, 0x7E, 0xA0,  // ..._@.~.
                /* 1BC0 */  0x82, 0x7F, 0x01, 0x01, 0xD7, 0xFD, 0x1D, 0x77,  // .......w
                /* 1BC8 */  0x2C, 0xB0, 0xAA, 0x13, 0x15, 0xA4, 0x2B, 0x30,  // ,.....+0
                /* 1BD0 */  0x76, 0x06, 0xD8, 0x4B, 0x08, 0x18, 0x4F, 0x12,  // v..K..O.
                /* 1BD8 */  0xB8, 0x4B, 0x08, 0xB0, 0xBE, 0x46, 0xB0, 0x4B,  // .K...F.K
                /* 1BE0 */  0x08, 0xB0, 0x3C, 0xC0, 0xE0, 0x2E, 0x21, 0xFC,  // ..<...!.
                /* 1BE8 */  0xFF, 0x7F, 0x09, 0x01, 0xDE, 0x57, 0x18, 0x76,  // .....W.v
                /* 1BF0 */  0x09, 0x01, 0x26, 0x32, 0x2E, 0x21, 0xA0, 0x03,  // ..&2.!..
                /* 1BF8 */  0xF7, 0x25, 0x04, 0xB8, 0xCE, 0xE2, 0xA9, 0x0A,  // .%......
                /* 1C00 */  0x58, 0x5C, 0xE1, 0xF1, 0x47, 0x10, 0x18, 0x57,  // X\..G..W
                /* 1C08 */  0x10, 0x58, 0x67, 0x2A, 0x18, 0x53, 0x60, 0xFF,  // .Xg*.S`.
                /* 1C10 */  0xFF, 0x2B, 0x08, 0xF0, 0x38, 0x57, 0x01, 0xBC,  // .+..8W..
                /* 1C18 */  0xFD, 0xFF, 0x5F, 0x41, 0x80, 0x81, 0x89, 0x2B,  // .._A...+
                /* 1C20 */  0x08, 0xA0, 0xE5, 0x5C, 0x05, 0xFF, 0x0A, 0x02,  // ...\....
                /* 1C28 */  0xBE, 0x91, 0x5A, 0xD3, 0xA9, 0x0A, 0xD2, 0xB9,  // ..Z.....
                /* 1C30 */  0x9E, 0x5D, 0xEB, 0xF1, 0x17, 0x45, 0x70, 0x1E,  // .]...Ep.
                /* 1C38 */  0xAA, 0x80, 0xF1, 0xFF, 0xFF, 0x50, 0x05, 0xF0,  // .....P..
                /* 1C40 */  0xEA, 0x22, 0x0F, 0x3E, 0x15, 0x17, 0x79, 0xA0,  // .".>..y.
                /* 1C48 */  0xFD, 0xFF, 0x3F, 0x54, 0x81, 0xFF, 0xBC, 0xC1,  // ..?T....
                /* 1C50 */  0xB0, 0x7C, 0x07, 0xF1, 0x1D, 0x20, 0x7C, 0x98,  // .|... |.
                /* 1C58 */  0x57, 0x0E, 0xFC, 0x3D, 0x11, 0x7F, 0x05, 0xE1,  // W..=....
                /* 1C60 */  0xA7, 0x2A, 0x18, 0x57, 0x10, 0x60, 0x72, 0xA8,  // .*.W.`r.
                /* 1C68 */  0x02, 0x78, 0xF2, 0xFF, 0x3F, 0x54, 0x01, 0x86,  // .x..?T..
                /* 1C70 */  0xAE, 0x20, 0xE0, 0x1B, 0xA7, 0xAF, 0x20, 0x80,  // . .... .
                /* 1C78 */  0x93, 0x43, 0x15, 0xFC, 0x2B, 0x08, 0x78, 0xF4,  // .C..+.x.
                /* 1C80 */  0x5D, 0x41, 0x50, 0x92, 0x20, 0xA4, 0xE7, 0x54,  // ]AP. ..T
                /* 1C88 */  0x05, 0xF5, 0x2C, 0x10, 0xFB, 0x6C, 0x9F, 0x40,  // ..,..l.@
                /* 1C90 */  0xD8, 0x05, 0x04, 0xD6, 0xFF, 0xFF, 0xDC, 0x0B,  // ........
                /* 1C98 */  0xF0, 0xFF, 0xFF, 0x7F, 0x01, 0x81, 0x73, 0xD3,  // ......s.
                /* 1CA0 */  0xF0, 0xB9, 0x17, 0x70, 0x76, 0x01, 0x81, 0x73,  // ...pv..s
                /* 1CA8 */  0xE1, 0xC0, 0x5C, 0x12, 0xD9, 0xFD, 0x03, 0xCE,  // ..\.....
                /* 1CB0 */  0x91, 0x0A, 0xDE, 0xFD, 0x03, 0xDC, 0x07, 0x2A,  // .......*
                /* 1CB8 */  0xC0, 0xD3, 0xFF, 0xFF, 0xD0, 0x0B, 0x30, 0xCA,  // ......0.
                /* 1CC0 */  0xC6, 0xA1, 0x17, 0x90, 0xF5, 0xFF, 0xBF, 0x7F,  // ........
                /* 1CC8 */  0x80, 0xED, 0xD0, 0x0B, 0x16, 0x8D, 0x30, 0x02,  // ......0.
                /* 1CD0 */  0x79, 0xE8, 0x05, 0x58, 0xFA, 0xFF, 0x3F, 0xF4,  // y..X..?.
                /* 1CD8 */  0x02, 0x5E, 0x74, 0x1C, 0x7A, 0x01, 0x6D, 0xE7,  // .^t.z.m.
                /* 1CE0 */  0x0D, 0x76, 0xE8, 0x05, 0x1E, 0x57, 0x10, 0x60,  // .v...W.`
                /* 1CE8 */  0x72, 0xA8, 0x82, 0xF7, 0xFF, 0x3F, 0xF4, 0x02,  // r....?..
                /* 1CF0 */  0x0C, 0xF7, 0x71, 0x05, 0x81, 0xFC, 0xFF, 0x3F,  // ..q....?
                /* 1CF8 */  0xF4, 0x02, 0x66, 0xAE, 0x20, 0xE0, 0x39, 0xF4,  // ..f. .9.
                /* 1D00 */  0x82, 0x65, 0x0E, 0x0C, 0xEC, 0x0C, 0xA2, 0x1D,  // .e......
                /* 1D08 */  0x2B, 0x3B, 0x53, 0x01, 0x2C, 0xF8, 0xFF, 0x1F,  // +;S.,...
                /* 1D10 */  0x7A, 0x01, 0x8E, 0x8C, 0xC5, 0x87, 0x5E, 0xC0,  // z.....^.
                /* 1D18 */  0xD9, 0x05, 0x04, 0xCE, 0x85, 0x03, 0x73, 0x49,  // ......sI
                /* 1D20 */  0x64, 0xFF, 0xFF, 0x43, 0x2F, 0x58, 0xEE, 0x1F,  // d..C/X..
                /* 1D28 */  0xC0, 0xE0, 0x40, 0x05, 0xF0, 0xF2, 0xFF, 0x7F,  // ..@.....
                /* 1D30 */  0xFF, 0x00, 0x86, 0x46, 0x0E, 0xBD, 0x80, 0xB6,  // ...F....
                /* 1D38 */  0xFB, 0x07, 0x38, 0x94, 0x9D, 0xA7, 0x40, 0x75,  // ..8...@u
                /* 1D40 */  0x06, 0x88, 0x51, 0xF1, 0x68, 0xC9, 0x79, 0x0A,  // ..Q.h.y.
                /* 1D48 */  0x70, 0xF1, 0xFF, 0x3F, 0x4F, 0x01, 0x7C, 0x5B,  // p..?O.|[
                /* 1D50 */  0x8F, 0xEF, 0x1F, 0xE0, 0x52, 0x72, 0xFF, 0x00,  // ....Rr..
                /* 1D58 */  0x7A, 0xFF, 0xFF, 0xFB, 0x07, 0x5E, 0xF0, 0x79,  // z....^.y
                /* 1D60 */  0x0A, 0xE8, 0xDC, 0x36, 0x30, 0x97, 0x0F, 0x98,  // ...60...
                /* 1D68 */  0x87, 0x29, 0x78, 0x97, 0x0F, 0x70, 0x1F, 0xA6,  // .)x..p..
                /* 1D70 */  0x00, 0x9E, 0xFC, 0xFF, 0x0F, 0x53, 0x80, 0xA1,  // .....S..
                /* 1D78 */  0xCB, 0x07, 0xF8, 0xAE, 0x0B, 0xBE, 0x7C, 0x00,  // ......|.
                /* 1D80 */  0x4E, 0x0E, 0x53, 0xE0, 0xB9, 0x7C, 0xE0, 0x33,  // N.S..|.3
                /* 1D88 */  0xD8, 0x18, 0x07, 0x0B, 0x32, 0x64, 0x49, 0x5C,  // ....2dI\
                /* 1D90 */  0x30, 0x85, 0xF1, 0xAD, 0xC2, 0x67, 0x04, 0xFC,  // 0....g..
                /* 1D98 */  0xA8, 0x0F, 0xFA, 0x58, 0x0F, 0x8B, 0xDD, 0x43,  // ...X...C
                /* 1DA0 */  0x0C, 0xC7, 0x0F, 0x04, 0x1E, 0x56, 0xF3, 0x03,  // .....V..
                /* 1DA8 */  0xD1, 0x64, 0xD8, 0x84, 0x42, 0xB2, 0xAB, 0xC1,  // .d..B...
                /* 1DB0 */  0xFF, 0xFF, 0xF8, 0x30, 0xC7, 0x07, 0x9F, 0x09,  // ...0....
                /* 1DB8 */  0x9E, 0xB5, 0x7C, 0x0F, 0xF6, 0x80, 0x8F, 0xCC,  // ..|.....
                /* 1DC0 */  0x04, 0x3E, 0x0A, 0x30, 0x34, 0x0E, 0x8D, 0x1D,  // .>.04...
                /* 1DC8 */  0x86, 0xEF, 0x08, 0xC1, 0x0E, 0xE2, 0x30, 0x1E,  // ......0.
                /* 1DD0 */  0x4D, 0x18, 0xC1, 0x09, 0x3D, 0x20, 0x94, 0x7B,  // M...= .{
                /* 1DD8 */  0x77, 0x90, 0x78, 0x54, 0x61, 0x34, 0x07, 0x45,  // w.xTa4.E
                /* 1DE0 */  0x0E, 0x12, 0x1E, 0x39, 0x38, 0xCE, 0x0D, 0x67,  // ...98..g
                /* 1DE8 */  0x70, 0x0A, 0xD1, 0x22, 0x1C, 0xF2, 0x43, 0x44,  // p.."..CD
                /* 1DF0 */  0x8C, 0x37, 0x03, 0xA3, 0x04, 0x8C, 0x17, 0xE3,  // .7......
                /* 1DF8 */  0x50, 0x3C, 0x75, 0x76, 0x71, 0x08, 0x17, 0xE5,  // P<uvq...
                /* 1E00 */  0x49, 0x21, 0x4A, 0xAD, 0x33, 0x23, 0xA0, 0x07,  // I!J.3#..
                /* 1E08 */  0xC0, 0x80, 0x5E, 0x46, 0x8E, 0xBE, 0xB5, 0x03,  // ..^F....
                /* 1E10 */  0x05, 0x3D, 0xB2, 0xE1, 0x8E, 0x07, 0x46, 0x7F,  // .=....F.
                /* 1E18 */  0xB1, 0xF0, 0x31, 0x81, 0xB9, 0x17, 0xE0, 0x6D,  // ..1....m
                /* 1E20 */  0x5A, 0x82, 0x88, 0x10, 0xF9, 0x65, 0xE2, 0x6C,  // Z....e.l
                /* 1E28 */  0x9E, 0x2E, 0xDA, 0x1A, 0x9B, 0xC0, 0x1F, 0xA4,  // ........
                /* 1E30 */  0x1B, 0x43, 0x11, 0xC8, 0x03, 0x41, 0xCD, 0xA8,  // .C...A..
                /* 1E38 */  0x42, 0x29, 0x0E, 0x46, 0x47, 0x94, 0x80, 0x51,  // B).FG..Q
                /* 1E40 */  0x22, 0x46, 0x8B, 0x1A, 0xF8, 0xCD, 0x20, 0xB6,  // "F.... .
                /* 1E48 */  0x41, 0x03, 0xC5, 0x8A, 0x70, 0x04, 0xED, 0x0F,  // A...p...
                /* 1E50 */  0x82, 0x44, 0x3B, 0x14, 0x48, 0x02, 0x88, 0x22,  // .D;.H.."
                /* 1E58 */  0x8D, 0x06, 0x75, 0xD8, 0xF0, 0xC1, 0xC0, 0xB7,  // ..u.....
                /* 1E60 */  0x19, 0x4F, 0xEC, 0x08, 0xDF, 0x13, 0x7C, 0x5D,  // .O....|]
                /* 1E68 */  0xB0, 0xCE, 0x13, 0x01, 0x19, 0x3B, 0x1B, 0xB6,  // .....;..
                /* 1E70 */  0x4F, 0x25, 0x70, 0x5C, 0x03, 0xEA, 0x6E, 0xF0,  // O%p\..n.
                /* 1E78 */  0x60, 0x01, 0x96, 0x63, 0x09, 0xFC, 0xF1, 0xF8,  // `..c....
                /* 1E80 */  0x28, 0xE0, 0xF1, 0x9B, 0xC0, 0xF2, 0x07, 0x81,  // (.......
                /* 1E88 */  0x1A, 0xC0, 0xFF, 0xFF, 0xBD, 0x87, 0x9D, 0x2A,  // .......*
                /* 1E90 */  0x7C, 0x23, 0xF0, 0x41, 0xE1, 0xB0, 0x98, 0xD8,  // |#.A....
                /* 1E98 */  0x73, 0x0C, 0x1D, 0x0F, 0xF8, 0x8F, 0x00, 0x8F,  // s.......
                /* 1EA0 */  0x05, 0x11, 0x5E, 0x1B, 0x3C, 0x5F, 0x1F, 0x17,  // ..^.<_..
                /* 1EA8 */  0x7C, 0x6A, 0x01, 0xC3, 0x51, 0x81, 0xDF, 0x14,  // |j..Q...
                /* 1EB0 */  0xD8, 0x61, 0x20, 0x86, 0xE7, 0xC5, 0x4E, 0x0E,  // .a ...N.
                /* 1EB8 */  0x4C, 0xE4, 0x19, 0x02, 0x3D, 0x02, 0x7E, 0x0C,  // L...=.~.
                /* 1EC0 */  0x78, 0x82, 0x61, 0x23, 0x78, 0x89, 0xF1, 0x24,  // x.a#x..$
                /* 1EC8 */  0x0E, 0xC8, 0xA7, 0x0B, 0x23, 0x84, 0x7F, 0xA8,  // ....#...
                /* 1ED0 */  0x78, 0xC8, 0xF0, 0x29, 0xE1, 0x8C, 0xCE, 0xE1,  // x..)....
                /* 1ED8 */  0x9C, 0x1E, 0x7A, 0x98, 0x2E, 0x15, 0xE7, 0x01,  // ..z.....
                /* 1EE0 */  0x16, 0xF1, 0x52, 0x85, 0xE2, 0x70, 0xAC, 0x13,  // ..R..p..
                /* 1EE8 */  0x22, 0x62, 0x4A, 0xD8, 0x59, 0xC4, 0x3F, 0x88,  // "bJ.Y.?.
                /* 1EF0 */  0x10, 0x09, 0x1C, 0x03, 0x52, 0x77, 0x2A, 0x1E,  // ....Rw*.
                /* 1EF8 */  0x80, 0x42, 0x01, 0x68, 0x74, 0x30, 0xE2, 0x92,  // .B.ht0..
                /* 1F00 */  0xAF, 0x56, 0x14, 0xC4, 0x03, 0x71, 0x96, 0x13,  // .V...q..
                /* 1F08 */  0x27, 0x3D, 0x35, 0xE0, 0x66, 0x89, 0x3F, 0x39,  // '=5.f.?9
                /* 1F10 */  0x78, 0x62, 0x3E, 0x7D, 0x24, 0x38, 0xB3, 0xD7,  // xb>}$8..
                /* 1F18 */  0x2A, 0xF0, 0xDE, 0x76, 0x7C, 0x31, 0x02, 0xC7,  // *..v|1..
                /* 1F20 */  0x2D, 0x23, 0xC1, 0x10, 0xB3, 0xA2, 0xFF, 0xFF,  // -#......
                /* 1F28 */  0x59, 0x71, 0x1D, 0xF7, 0x15, 0x72, 0x07, 0xF1,  // Yq...r..
                /* 1F30 */  0xA4, 0x7C, 0x51, 0xF0, 0x90, 0xC0, 0x3A, 0x5D,  // .|Q...:]
                /* 1F38 */  0x0F, 0x09, 0x5C, 0x07, 0x2F, 0x60, 0x79, 0x03,  // ..\./`y.
                /* 1F40 */  0xF4, 0xC1, 0x0B, 0x37, 0x80, 0x43, 0x7D, 0x6E,  // ...7.C}n
                /* 1F48 */  0x30, 0xC4, 0xA1, 0x9C, 0xAB, 0x6F, 0x1B, 0x3E,  // 0....o.>
                /* 1F50 */  0x78, 0x81, 0x7B, 0x28, 0x3E, 0x78, 0x81, 0xE7,  // x.{(>x..
                /* 1F58 */  0x08, 0xF3, 0xFC, 0xF2, 0xE0, 0x05, 0x5C, 0x24,  // ......\$
                /* 1F60 */  0x1C, 0xBC, 0x40, 0x77, 0x31, 0xE0, 0x23, 0x65,  // ..@w1.#e
                /* 1F68 */  0xFF, 0xFF, 0x83, 0x17, 0x30, 0x44, 0xF5, 0x79,  // ....0D.y
                /* 1F70 */  0x09, 0x1C, 0x07, 0x25, 0x3C, 0xC8, 0xCB, 0x08,  // ...%<...
                /* 1F78 */  0x3F, 0x25, 0x85, 0x61, 0xC7, 0x26, 0x76, 0x67,  // ?%.a.&vg
                /* 1F80 */  0x62, 0x17, 0xA2, 0xA3, 0x7B, 0xD1, 0x3B, 0xE5,  // b...{.;.
                /* 1F88 */  0x27, 0x2F, 0x26, 0xF0, 0x16, 0x89, 0x16, 0x75,  // '/&....u
                /* 1F90 */  0x42, 0x41, 0x5C, 0x45, 0xE0, 0x8E, 0x5F, 0x47,  // BA\E.._G
                /* 1F98 */  0x14, 0x54, 0x78, 0x12, 0x85, 0x3F, 0x42, 0xA0,  // .Tx..?B.
                /* 1FA0 */  0xE2, 0x8E, 0x9D, 0x82, 0x18, 0xD0, 0x47, 0x14,  // ......G.
                /* 1FA8 */  0xC0, 0xCA, 0x01, 0x04, 0xFC, 0xFF, 0xFF, 0x03,  // ........
                /* 1FB0 */  0x08, 0x60, 0xE1, 0x20, 0x09, 0xAE, 0x03, 0x08,  // .`. ....
                /* 1FB8 */  0xF0, 0x1F, 0xB5, 0x0F, 0x20, 0x80, 0xC9, 0xFF,  // .... ...
                /* 1FC0 */  0xFF, 0x01, 0x84, 0x29, 0x3A, 0x80, 0xA0, 0x0E,  // ...):...
                /* 1FC8 */  0x0A, 0x56, 0x71, 0x00, 0x41, 0x9C, 0x9A, 0xB0,  // .Vq.A...
                /* 1FD0 */  0xD9, 0x6F, 0xC4, 0xA8, 0xD4, 0x24, 0x4A, 0x7D,  // .o...$J}
                /* 1FD8 */  0x7C, 0x40, 0xE5, 0x3C, 0x22, 0x50, 0x10, 0x03,  // |@.<"P..
                /* 1FE0 */  0xFA, 0x22, 0x05, 0xBC, 0x2E, 0x1E, 0x00, 0x9B,  // ."......
                /* 1FE8 */  0xFE, 0xFF, 0x17, 0x0F, 0xE0, 0x04, 0xE9, 0x8B,  // ........
                /* 1FF0 */  0x07, 0xE0, 0x33, 0xDA, 0x83, 0xC2, 0xD7, 0x61,  // ..3....a
                /* 1FF8 */  0x2A, 0xF2, 0x46, 0x0C, 0xA8, 0xFC, 0xFF, 0xDF,  // *.F.....
                /* 2000 */  0x88, 0xC1, 0x37, 0x8B, 0x87, 0xDE, 0x07, 0x00,  // ..7.....
                /* 2008 */  0xA3, 0x1B, 0xEE, 0x19, 0xC1, 0x47, 0x62, 0xD8,  // .....Gb.
                /* 2010 */  0x37, 0x62, 0xF8, 0x67, 0x60, 0x0F, 0xEC, 0x64,  // 7b.g`..d
                /* 2018 */  0xCE, 0xE2, 0x81, 0x22, 0xCC, 0xA3, 0xF0, 0x83,  // ..."....
                /* 2020 */  0xB0, 0x0F, 0x18, 0xA7, 0xF5, 0x46, 0x6C, 0xA8,  // .....Fl.
                /* 2028 */  0xE3, 0x7A, 0x81, 0x8D, 0x12, 0x31, 0x54, 0x9C,  // .z...1T.
                /* 2030 */  0x23, 0x8C, 0x12, 0x22, 0x5C, 0xD8, 0x40, 0x31,  // #.."\.@1
                /* 2038 */  0x23, 0x1C, 0x48, 0xCC, 0x08, 0x71, 0x82, 0xFA,  // #.H..q..
                /* 2040 */  0x46, 0xCC, 0xC2, 0xDD, 0x88, 0x01, 0x9A, 0x5C,  // F......\
                /* 2048 */  0x80, 0x71, 0xFF, 0xFF, 0x63, 0x0B, 0xBC, 0xA3,  // .q..c...
                /* 2050 */  0x82, 0x6F, 0x0A, 0xB8, 0x23, 0x31, 0x8C, 0x2B,  // .o..#1.+
                /* 2058 */  0x31, 0x30, 0x11, 0xFB, 0x1E, 0xD0, 0x41, 0xC7,  // 10....A.
                /* 2060 */  0x42, 0xAF, 0xC4, 0x68, 0x59, 0xEB, 0xD5, 0xED,  // B..hY...
                /* 2068 */  0x9F, 0xCD, 0x09, 0x3F, 0xCE, 0x33, 0x7A, 0x3F,  // ...?.3z?
                /* 2070 */  0x60, 0x32, 0x2E, 0x88, 0x28, 0x0A, 0x5F, 0x10,  // `2..(._.
                /* 2078 */  0xC1, 0x77, 0x81, 0x38, 0x89, 0x17, 0x16, 0x5F,  // .w.8..._
                /* 2080 */  0x10, 0x01, 0x7F, 0x27, 0x23, 0x0F, 0x97, 0x87,  // ...'#...
                /* 2088 */  0x1E, 0x2E, 0x05, 0xF1, 0x70, 0x1D, 0xE8, 0x60,  // ....p..`
                /* 2090 */  0x85, 0x1E, 0x2E, 0xEE, 0xFF, 0x3F, 0x5C, 0x7E,  // .....?\~
                /* 2098 */  0x09, 0xC0, 0x1C, 0xAD, 0x00, 0x73, 0x42, 0xAE,  // .....sB.
                /* 20A0 */  0xBC, 0x80, 0x9E, 0x63, 0x80, 0x0F, 0x44, 0xE0,  // ...c..D.
                /* 20A8 */  0x18, 0xC2, 0xDB, 0x06, 0xBB, 0x0B, 0xC1, 0xC1,  // ........
                /* 20B0 */  0x79, 0x35, 0xE0, 0x28, 0x6F, 0x57, 0xF0, 0x45,  // y5.(oW.E
                /* 20B8 */  0xAE, 0xC8, 0x17, 0x7B, 0x9F, 0xAE, 0x50, 0x30,  // ...{..P0
                /* 20C0 */  0x3E, 0x5D, 0xE1, 0xFE, 0xFF, 0xA7, 0x2B, 0xC0,  // >]....+.
                /* 20C8 */  0xCF, 0x39, 0x0D, 0x3C, 0xE7, 0x1F, 0x0F, 0xC7,  // .9.<....
                /* 20D0 */  0x13, 0xC6, 0xA0, 0xBC, 0x0E, 0x1A, 0xEE, 0x0D,  // ........
                /* 20D8 */  0x25, 0xE4, 0xDB, 0x94, 0xEF, 0x1A, 0xB8, 0x1B,  // %.......
                /* 20E0 */  0x80, 0x4F, 0x3D, 0x8C, 0xC0, 0x27, 0x2B, 0xD8,  // .O=..'+.
                /* 20E8 */  0x63, 0x3A, 0x89, 0x08, 0xEF, 0x52, 0xAF, 0x04,  // c:...R..
                /* 20F0 */  0x51, 0x9E, 0xA5, 0x7C, 0xAD, 0xF2, 0xF1, 0x24,  // Q..|...$
                /* 20F8 */  0xC2, 0xC9, 0x3C, 0x59, 0xB1, 0xA9, 0xBD, 0x5B,  // ..<Y...[
                /* 2100 */  0x19, 0xE7, 0x69, 0x2B, 0xE4, 0xC9, 0x44, 0x89,  // ..i+..D.
                /* 2108 */  0xF6, 0x6E, 0xE5, 0x6B, 0x46, 0x84, 0x68, 0x4F,  // .n.kF.hO
                /* 2110 */  0x16, 0xB1, 0x22, 0xC6, 0x7F, 0xB5, 0xF2, 0xC9,  // ..".....
                /* 2118 */  0x8A, 0x85, 0x3C, 0x59, 0x01, 0x3A, 0xFE, 0xFF,  // ..<Y.:..
                /* 2120 */  0x27, 0x2B, 0xC0, 0xCB, 0x30, 0x7C, 0x6A, 0x81,  // '+..0|j.
                /* 2128 */  0x7F, 0x5A, 0xE0, 0x07, 0x81, 0xB7, 0x04, 0xCF,  // .Z......
                /* 2130 */  0xEF, 0x61, 0x01, 0xE6, 0x5D, 0x01, 0x73, 0xBA,  // .a..].s.
                /* 2138 */  0x02, 0x1E, 0xB1, 0x57, 0xA0, 0xE1, 0x5A, 0xF7,  // ...W..Z.
                /* 2140 */  0x1B, 0x41, 0xA7, 0x2B, 0x9C, 0xEE, 0x97, 0x81,  // .A.+....
                /* 2148 */  0xAE, 0xBF, 0x6C, 0x56, 0xFC, 0x4C, 0xF1, 0x68,  // ..lV.L.h
                /* 2150 */  0x81, 0xC1, 0x49, 0x60, 0x9D, 0x87, 0x2D, 0x3A,  // ..I`..-:
                /* 2158 */  0x00, 0x2B, 0x84, 0x91, 0x3E, 0x12, 0x9D, 0x8F,  // .+..>...
                /* 2160 */  0xB8, 0xA2, 0x43, 0x16, 0x05, 0xF1, 0xD1, 0xC1,  // ..C.....
                /* 2168 */  0x51, 0xCE, 0x47, 0xE8, 0xD1, 0xF9, 0xB4, 0xC2,  // Q.G.....
                /* 2170 */  0x0F, 0x32, 0x0F, 0xB2, 0x1E, 0xD7, 0x49, 0xBF,  // .2....I.
                /* 2178 */  0xDA, 0x98, 0xE0, 0x39, 0xE7, 0xE1, 0x0A, 0x8C,  // ...9....
                /* 2180 */  0xFF, 0x7F, 0x02, 0x76, 0x77, 0xF1, 0xE5, 0x08,  // ...vw...
                /* 2188 */  0x4C, 0xA1, 0x8E, 0x60, 0x1E, 0x2D, 0x1D, 0x95,  // L..`.-..
                /* 2190 */  0x07, 0xE6, 0x51, 0xE1, 0x09, 0x26, 0xB8, 0x55,  // ..Q..&.U
                /* 2198 */  0x79, 0x4E, 0x50, 0x2F, 0x50, 0xF8, 0xC1, 0x3C,  // yNP/P..<
                /* 21A0 */  0x0E, 0xBC, 0x2D, 0xF8, 0xFE, 0xE0, 0xA9, 0xC1,  // ..-.....
                /* 21A8 */  0x3A, 0x1C, 0xF1, 0x6B, 0x18, 0x78, 0x8E, 0x5B,  // :..k.x.[
                /* 21B0 */  0x1E, 0x1A, 0x4E, 0xC5, 0x01, 0x86, 0xDC, 0x1A,  // ..N.....
                /* 21B8 */  0x0C, 0x71, 0x60, 0x60, 0xA6, 0xF1, 0xC0, 0x60,  // .q``...`
                /* 21C0 */  0x5D, 0xDB, 0xF9, 0x75, 0x0D, 0xD8, 0xEE, 0xDA,  // ]..u....
                /* 21C8 */  0xF7, 0x07, 0x1E, 0x79, 0xE6, 0x14, 0xC4, 0x73,  // ...y...s
                /* 21D0 */  0x72, 0x1C, 0x08, 0x39, 0xB9, 0x3F, 0xA0, 0xEF,  // r..9.?..
                /* 21D8 */  0x50, 0x1E, 0xD0, 0x83, 0x87, 0x87, 0x74, 0x2A,  // P.....t*
                /* 21E0 */  0xFF, 0xFF, 0xE7, 0x6A, 0x7E, 0x5B, 0x03, 0x3B,  // ...j~[.;
                /* 21E8 */  0x94, 0x6F, 0x6B, 0xE0, 0x39, 0xF4, 0x3C, 0xF5,  // .ok.9.<.
                /* 21F0 */  0xBC, 0xAD, 0x01, 0x97, 0xD8, 0x10, 0xBA, 0xAD,  // ........
                /* 21F8 */  0x01, 0x6E, 0xE6, 0xF8, 0x82, 0x05, 0x96, 0xDB,  // .n......
                /* 2200 */  0x0B, 0x3B, 0x60, 0xE1, 0xAE, 0x2F, 0x30, 0xB4,  // .;`../0.
                /* 2208 */  0xDF, 0x65, 0xD0, 0xDA, 0x17, 0xAB, 0xB3, 0x1B,  // .e......
                /* 2210 */  0xBB, 0xCB, 0xC0, 0xD4, 0x7A, 0x97, 0x41, 0xA9,  // ....z.A.
                /* 2218 */  0x84, 0x51, 0x9E, 0xC3, 0x03, 0x2A, 0x81, 0x81,  // .Q...*..
                /* 2220 */  0xFF, 0x3F, 0x1C, 0x03, 0xF1, 0xF8, 0x7D, 0x97,  // .?....}.
                /* 2228 */  0x01, 0xB8, 0x73, 0x47, 0x01, 0x16, 0xA1, 0xEE,  // ..sG....
                /* 2230 */  0x05, 0xA8, 0x18, 0xF7, 0x02, 0x0A, 0xE2, 0x81,  // ........
                /* 2238 */  0xF9, 0x8E, 0x02, 0x9C, 0xFE, 0xFF, 0x77, 0x14,  // ......w.
                /* 2240 */  0x38, 0x57, 0x07, 0xDF, 0x51, 0xC0, 0x77, 0x33,  // 8W..Q.w3
                /* 2248 */  0xC0, 0x1F, 0x03, 0x7C, 0x16, 0xC2, 0x10, 0x0C,  // ...|....
                /* 2250 */  0x71, 0x30, 0xA0, 0x83, 0x02, 0xD7, 0x65, 0x08,  // q0....e.
                /* 2258 */  0x77, 0x9D, 0x81, 0x7B, 0x33, 0x00, 0xD7, 0x6D,  // w..{3..m
                /* 2260 */  0x06, 0x78, 0x9F, 0x9B, 0xF8, 0x6D, 0x06, 0xF0,  // .x...m..
                /* 2268 */  0xF1, 0xFF, 0xBF, 0xCA, 0xF2, 0xDB, 0x0C, 0x5C,  // .......\
                /* 2270 */  0x85, 0x36, 0x7D, 0x6A, 0x34, 0x6A, 0xD5, 0xA0,  // .6}j4j..
                /* 2278 */  0x4C, 0x8D, 0x32, 0x0D, 0x6A, 0xF5, 0xA9, 0xD4,  // L.2.j...
                /* 2280 */  0x98, 0xB1, 0x60, 0x87, 0x0A, 0x49, 0x5A, 0xAD,  // ..`..IZ.
                /* 2288 */  0x86, 0xEB, 0x40, 0x20, 0x34, 0xFA, 0x3B, 0x41,  // ..@ 4.;A
                /* 2290 */  0x43, 0x26, 0x26, 0x40, 0x98, 0x7C, 0x10, 0x1A,  // C&&@.|..
                /* 2298 */  0xF4, 0x35, 0x26, 0x10, 0x87, 0xB5, 0x01, 0xC2,  // .5&.....
                /* 22A0 */  0xA4, 0xEA, 0x00, 0x61, 0xB1, 0x7C, 0x9C, 0xC9,  // ...a.|..
                /* 22A8 */  0x59, 0x46, 0x10, 0x01, 0x39, 0xD1, 0x9B, 0x40,  // YF..9..@
                /* 22B0 */  0x40, 0xCE, 0x07, 0x22, 0x20, 0x27, 0xFF, 0xA9,  // @.." '..
                /* 22B8 */  0x08, 0xC8, 0x32, 0x1E, 0x1B, 0x02, 0x72, 0x68,  // ..2...rh
                /* 22C0 */  0x10, 0x01, 0x59, 0xC2, 0x5B, 0x56, 0x40, 0x8E,  // ..Y.[V@.
                /* 22C8 */  0xE7, 0x05, 0x84, 0x89, 0x5B, 0xA7, 0xCE, 0x1D,  // ....[...
                /* 22D0 */  0xC4, 0x0C, 0x20, 0xCB, 0x06, 0xA2, 0x53, 0x03,  // .. ...S.
                /* 22D8 */  0x79, 0xA5, 0x08, 0xC8, 0x1A, 0x41, 0x04, 0xE4,  // y....A..
                /* 22E0 */  0x70, 0x40, 0x34, 0x29, 0x10, 0x55, 0xE8, 0x06,  // p@4).U..
                /* 22E8 */  0x88, 0xC9, 0x05, 0x11, 0x90, 0x53, 0x03, 0x51,  // .....S.Q
                /* 22F0 */  0x09, 0x4F, 0x09, 0x01, 0x39, 0x31, 0x88, 0x80,  // .O..91..
                /* 22F8 */  0x9C, 0x1F, 0x88, 0xEA, 0xF3, 0x03, 0xC4, 0xC4,  // ........
                /* 2300 */  0x82, 0x08, 0xC8, 0x39, 0x81, 0x68, 0x68, 0x20,  // ...9.hh 
                /* 2308 */  0xAA, 0xF6, 0x51, 0x20, 0x20, 0x4B, 0x07, 0xD1,  // ..Q  K..
                /* 2310 */  0x00, 0x08, 0x10, 0x8D, 0x0F, 0x44, 0x43, 0x18,  // .....DC.
                /* 2318 */  0x02, 0x62, 0x89, 0x40, 0x04, 0xE4, 0x00, 0x8A,  // .b.@....
                /* 2320 */  0x80, 0x58, 0x1C, 0x10, 0x01, 0x59, 0x8A, 0x23,  // .X...Y.#
                /* 2328 */  0x20, 0x26, 0x0C, 0x44, 0x40, 0x0E, 0x08, 0x44,  //  &.D@..D
                /* 2330 */  0xE3, 0x02, 0xD1, 0x48, 0x9E, 0x40, 0x98, 0x20,  // ...H.@. 
                /* 2338 */  0x51, 0x20, 0x2C, 0x94, 0x29, 0x40, 0x96, 0x10,  // Q ,.)@..
                /* 2340 */  0x44, 0x40, 0x56, 0xA7, 0x0A, 0x88, 0x49, 0x05,  // D@V...I.
                /* 2348 */  0xD1, 0x80, 0x89, 0x2B, 0x20, 0x26, 0x12, 0x44,  // ...+ &.D
                /* 2350 */  0x40, 0x0E, 0xFE, 0x1A, 0x12, 0x88, 0x65, 0xFB,  // @.....e.
                /* 2358 */  0x3A, 0x14, 0xD0, 0x87, 0x8A, 0x00, 0xFD, 0xFF,  // :.......
                /* 2360 */  0x4F, 0x0E, 0x22, 0x20, 0x27, 0x78, 0x0B, 0x1D,  // O." 'x..
                /* 2368 */  0x14, 0x03, 0x11, 0x90, 0x65, 0xFC, 0x52, 0x04,  // ....e.R.
                /* 2370 */  0x64, 0x4D, 0x20, 0x02, 0xB2, 0x86, 0xA7, 0x4A,  // dM ....J
                /* 2378 */  0x20, 0xA2, 0x08, 0x44, 0x40, 0x4E, 0x06, 0x44,  //  ..D@N.D
                /* 2380 */  0x73, 0x02, 0xD1, 0xF0, 0xEF, 0xDD, 0x40, 0x44,  // s.....@D
                /* 2388 */  0xC9, 0xE7, 0x48, 0x03, 0x23, 0x20, 0x1A, 0x18,  // ..H.# ..
                /* 2390 */  0x01, 0xA2, 0x02, 0x5F, 0xBD, 0x81, 0x88, 0x5A,  // ..._...Z
                /* 2398 */  0x10, 0x0D, 0x8A, 0x00, 0x51, 0x15, 0xAF, 0x12,  // ....Q...
                /* 23A0 */  0x01, 0x59, 0x3D, 0x88, 0x80, 0x1C, 0x05, 0x88,  // .Y=.....
                /* 23A8 */  0x4A, 0xFF, 0x2F, 0x0B, 0xC8, 0x41, 0x40, 0x74,  // J./..A@t
                /* 23B0 */  0x40, 0x20, 0xEE, 0x0E, 0x08, 0x14, 0x44, 0x40,  // @ ....D@
                /* 23B8 */  0x56, 0x2C, 0x0F, 0x88, 0xC9, 0x07, 0xD1, 0x80,  // V,......
                /* 23C0 */  0x08, 0x10, 0x55, 0x62, 0xEF, 0x00, 0x41, 0x41,  // ..Ub..AA
                /* 23C8 */  0x04, 0x64, 0x1D, 0xBF, 0x22, 0x01, 0x39, 0x03,  // .d..".9.
                /* 23D0 */  0x88, 0x0E, 0x04, 0x04, 0x88, 0x2A, 0xF3, 0x07,  // .....*..
                /* 23D8 */  0xC4, 0x74, 0x82, 0xE8, 0x70, 0x40, 0x80, 0x68,  // .t..p@.h
                /* 23E0 */  0x7E, 0x20, 0xAA, 0xE3, 0xD1, 0x11, 0x88, 0x88,  // ~ ......
                /* 23E8 */  0x02, 0xD1, 0x80, 0x08, 0x10, 0x4D, 0x0A, 0x44,  // .....M.D
                /* 23F0 */  0x85, 0x3E, 0x5E, 0x02, 0x11, 0xD5, 0x20, 0x02,  // .>^... .
                /* 23F8 */  0x72, 0x5C, 0x20, 0x9A, 0x1D, 0x88, 0xEA, 0xFF,  // r\ .....
                /* 2400 */  0xD7, 0x08, 0xC8, 0x61, 0x40, 0x04, 0x64, 0xED,  // ...a@.d.
                /* 2408 */  0x4F, 0x1A, 0x01, 0x39, 0x09, 0x88, 0x0E, 0x1B,  // O..9....
                /* 2410 */  0xE4, 0x39, 0x12, 0x88, 0xC4, 0x03, 0x11, 0x90,  // .9......
                /* 2418 */  0x95, 0x3E, 0x6B, 0x05, 0x64, 0xD9, 0x20, 0x02,  // .>k.d. .
                /* 2420 */  0x72, 0x64, 0x20, 0x9A, 0x1F, 0x88, 0x0A, 0x7F,  // rd .....
                /* 2428 */  0x97, 0x0B, 0xC8, 0x29, 0x40, 0x04, 0x64, 0x35,  // ...)@.d5
                /* 2430 */  0x2A, 0x81, 0x98, 0x34, 0x10, 0x01, 0x59, 0x89,  // *..4..Y.
                /* 2438 */  0x4B, 0x20, 0xA6, 0x0B, 0x44, 0x83, 0x20, 0x1F,  // K ..D. .
                /* 2440 */  0x9A, 0x83, 0x60, 0x20, 0x02, 0x72, 0x60, 0x20,  // ..` .r` 
                /* 2448 */  0x9A, 0x1E, 0x88, 0xCA, 0x7E, 0xEC, 0x06, 0x22,  // ....~.."
                /* 2450 */  0xFF, 0xFF, 0x0C, 0x20, 0x02, 0x72, 0x7A, 0x20,  // ... .rz 
                /* 2458 */  0x2A, 0xE5, 0xBF, 0x72, 0xF0, 0x0C, 0x44, 0x40,  // *..r..D@
                /* 2460 */  0x0E, 0x04, 0x44, 0x95, 0x3C, 0x7A, 0x02, 0x11,  // ..D.<z..
                /* 2468 */  0x59, 0x20, 0x02, 0x72, 0x3A, 0x20, 0x1A, 0x15,  // Y .r: ..
                /* 2470 */  0x88, 0x26, 0x33, 0x7A, 0x68, 0xA0, 0x20, 0x02,  // .&3zh. .
                /* 2478 */  0x72, 0xFC, 0xBF, 0x8F, 0x80, 0xAC, 0xE5, 0xFD,  // r.......
                /* 2480 */  0x73, 0x10, 0x0C, 0x44, 0x83, 0x20, 0x40, 0x54,  // s..D. @T
                /* 2488 */  0xBF, 0x55, 0x20, 0x96, 0x06, 0x44, 0x40, 0xD6,  // .U ..D@.
                /* 2490 */  0xA5, 0x15, 0x88, 0xA9, 0x04, 0x11, 0x90, 0xC5,  // ........
                /* 2498 */  0x3F, 0x97, 0x34, 0x78, 0x02, 0x22, 0x20, 0x4B,  // ?.4x." K
                /* 24A0 */  0x78, 0x23, 0x05, 0x22, 0x7A, 0x40, 0x34, 0x10,  // x#."z@4.
                /* 24A8 */  0x02, 0x44, 0xC5, 0xA8, 0x05, 0x62, 0x31, 0x40,  // .D...b1@
                /* 24B0 */  0x04, 0xE4, 0x50, 0x40, 0x54, 0x92, 0x5B, 0x20,  // ..P@T.[ 
                /* 24B8 */  0x26, 0x10, 0x44, 0x40, 0x16, 0x6D, 0x17, 0x88,  // &.D@.m..
                /* 24C0 */  0x25, 0x00, 0xD1, 0xE1, 0x81, 0x00, 0x51, 0x25,  // %.....Q%
                /* 24C8 */  0x7A, 0x0F, 0x15, 0x14, 0x44, 0x87, 0x19, 0xF2,  // z...D...
                /* 24D0 */  0x5D, 0x7A, 0x18, 0x61, 0x20, 0x02, 0x72, 0x40,  // ]z.a .r@
                /* 24D8 */  0x20, 0x1A, 0xF8, 0x87, 0xA5, 0x03, 0x00, 0x01,  //  .......
                /* 24E0 */  0xD1, 0x01, 0x80, 0x3C, 0xAE, 0x1F, 0x00, 0x18,  // ...<....
                /* 24E8 */  0x88, 0x0E, 0x05, 0xE4, 0xD9, 0xAF, 0x43, 0x01,  // ......C.
                /* 24F0 */  0x01, 0xD1, 0xE0, 0xC9, 0xD7, 0x48, 0x87, 0x02,  // .....H..
                /* 24F8 */  0x02, 0x22, 0x20, 0xA7, 0x02, 0xA2, 0x19, 0x81,  // ." .....
                /* 2500 */  0xA8, 0xE2, 0xA7, 0x91, 0x80, 0xAC, 0x1F, 0x44,  // .......D
                /* 2508 */  0x07, 0x02, 0x02, 0x44, 0xB5, 0xFC, 0xA4, 0x1F,  // ...D....
                /* 2510 */  0x02, 0x18, 0x88, 0x0E, 0x01, 0x04, 0x88, 0xA6,  // ........
                /* 2518 */  0xFD, 0x0B, 0x0A, 0xC8, 0xD1, 0x41, 0x74, 0x0C,  // .....At.
                /* 2520 */  0x22, 0x0F, 0xA3, 0x40, 0x24, 0x36, 0x88, 0x06,  // "..@$6..
                /* 2528 */  0x49, 0x9E, 0xEC, 0x07, 0xC9, 0x5E, 0xDA, 0x02,  // I....^..
                /* 2530 */  0x72, 0x6E, 0x10, 0x1D, 0x44, 0xC8, 0x37, 0xEA,  // rn..D.7.
                /* 2538 */  0x80, 0xD8, 0x5B, 0x49, 0x67, 0x38, 0xE7, 0x79,  // ..[Ig8.y
                /* 2540 */  0xB6, 0x69, 0x70, 0xC4, 0x38, 0x08, 0xFB, 0xFF,  // .ip.8...
                /* 2548 */  0x27, 0x78, 0x34, 0x3D, 0xAE, 0x30, 0x10, 0x1D,  // 'x4=.0..
                /* 2550 */  0x8F, 0xC8, 0x67, 0x49, 0xC7, 0x0B, 0x02, 0xA2,  // ..gI....
                /* 2558 */  0xC3, 0x0C, 0x79, 0x97, 0x09, 0xC8, 0xF2, 0x40,  // ..y....@
                /* 2560 */  0x74, 0x2C, 0x21, 0xCF, 0xF5, 0xC7, 0x12, 0x06,  // t,!.....
                /* 2568 */  0xA2, 0xA3, 0x00, 0x79, 0x4E, 0x3D, 0x0A, 0x30,  // ...yN=.0
                /* 2570 */  0x10, 0x0D, 0x80, 0xBC, 0xE9, 0x05, 0xE4, 0x2C,  // .......,
                /* 2578 */  0x20, 0x02, 0xB2, 0x26, 0xF5, 0x80, 0x14, 0x44,  //  ..&...D
                /* 2580 */  0x40, 0x8E, 0x09, 0x44, 0x33, 0x03, 0xD1, 0x8C,  // @..D3...
                /* 2588 */  0xEE, 0x81, 0x58, 0x62, 0x10, 0x0D, 0x9F, 0xE8,  // ..Xb....
                /* 2590 */  0x3F, 0x4A, 0x50, 0x10, 0x1D, 0x09, 0x08, 0x10,  // ?JP.....
                /* 2598 */  0xCD, 0x07, 0x44, 0xF3, 0xF8, 0x07, 0x62, 0xE9,  // ..D...b.
                /* 25A0 */  0x40, 0x04, 0x64, 0x6D, 0x01, 0x80, 0x98, 0x52,  // @.dm...R
                /* 25A8 */  0x10, 0x0D, 0x92, 0x3C, 0x19, 0x35, 0x48, 0x02,  // ...<.5H.
                /* 25B0 */  0xA2, 0x63, 0x10, 0x69, 0x70, 0x24, 0xA0, 0x20,  // .c.ip$. 
                /* 25B8 */  0x3A, 0xA6, 0x90, 0x08, 0x40, 0x4C, 0x15, 0x88,  // :...@L..
                /* 25C0 */  0x80, 0x9C, 0x09, 0x88, 0x26, 0x04, 0xA2, 0xA9,  // ....&...
                /* 25C8 */  0x33, 0x00, 0x31, 0x0D, 0x1D, 0x06, 0x41, 0x41,  // 3.1...AA
                /* 25D0 */  0x04, 0xE4, 0x3C, 0x40, 0x34, 0x51, 0x89, 0xE3,  // ..<@4Q..
                /* 25D8 */  0x09, 0x05, 0x11, 0x90, 0x65, 0xA6, 0x00, 0x62,  // ....e..b
                /* 25E0 */  0x9A, 0x41, 0x74, 0x0C, 0x22, 0x40, 0x34, 0x39,  // .At."@49
                /* 25E8 */  0x10, 0x4D, 0xDA, 0x02, 0x88, 0xE5, 0x06, 0xD1,  // .M......
                /* 25F0 */  0x51, 0x81, 0xD4, 0x38, 0x8A, 0xD0, 0x1C, 0x03,  // Q..8....
                /* 25F8 */  0xA5, 0x20, 0x1A, 0x28, 0x01, 0xA2, 0x71, 0x7A,  // . .(..qz
                /* 2600 */  0x00, 0xB1, 0x70, 0x20, 0x3A, 0x2A, 0x90, 0x22,  // ..p :*."
                /* 2608 */  0x47, 0x05, 0x0A, 0xA2, 0xA3, 0x06, 0x49, 0x72,  // G.....Ir
                /* 2610 */  0xD4, 0xA0, 0x20, 0x3A, 0xD6, 0x90, 0xCF, 0xA9,  // .. :....
                /* 2618 */  0x8E, 0x35, 0x04, 0x44, 0xC7, 0x08, 0x52, 0xE5,  // .5.D..R.
                /* 2620 */  0xD8, 0x43, 0x41, 0x74, 0x08, 0x20, 0x59, 0x0E,  // .CAt. Y.
                /* 2628 */  0x01, 0x14, 0x44, 0x40, 0x56, 0xD1, 0xE5, 0x98,  // ..D@V...
                /* 2630 */  0x44, 0x41, 0x04, 0xE4, 0xFF, 0xBF, 0xC4, 0x32,  // DA.....2
                /* 2638 */  0x40, 0x4C, 0x2F, 0x88, 0x8E, 0x5A, 0x24, 0xCD,  // @L/..Z$.
                /* 2640 */  0xD1, 0x88, 0x82, 0xE8, 0x38, 0x41, 0x80, 0x68,  // ....8A.h
                /* 2648 */  0x76, 0x20, 0xAA, 0xA8, 0xCE, 0xA1, 0x81, 0x82,  // v ......
                /* 2650 */  0xE8, 0x90, 0x40, 0x80, 0x68, 0x66, 0x20, 0x2A,  // ..@.hf *
                /* 2658 */  0x36, 0x0F, 0x10, 0x53, 0x0E, 0xA2, 0x23, 0x05,  // 6..S..#.
                /* 2660 */  0x01, 0xA2, 0x22, 0xFA, 0x1C, 0x02, 0x28, 0x88,  // .."...(.
                /* 2668 */  0x0E, 0x06, 0x04, 0x88, 0xCA, 0x7F, 0x99, 0xEB,  // ........
                /* 2670 */  0x30, 0x41, 0x40, 0x04, 0xE4, 0x60, 0x89, 0x80,  // 0A@..`..
                /* 2678 */  0x58, 0x4C, 0x10, 0x1D, 0x9F, 0x48, 0xA3, 0xA3,  // XL...H..
                /* 2680 */  0x19, 0x05, 0xD1, 0x61, 0x80, 0x54, 0x3A, 0x0C,  // ...a.T:.
                /* 2688 */  0x50, 0x10, 0x01, 0x39, 0x3B, 0x10, 0x15, 0x92,  // P..9;...
                /* 2690 */  0xE9, 0x08, 0x45, 0x41, 0x74, 0x84, 0x22, 0x40,  // ..EAt."@
                /* 2698 */  0x54, 0x7A, 0xA7, 0xC3, 0x05, 0x05, 0xD1, 0x45,  // Tz.....E
                /* 26A0 */  0x97, 0x94, 0x02, 0x62, 0xC1, 0x40, 0x04, 0x64,  // ...b.@.d
                /* 26A8 */  0x69, 0xA9, 0x80, 0x98, 0x50, 0x10, 0x01, 0x59,  // i...P..Y
                /* 26B0 */  0x72, 0xAC, 0x63, 0x09, 0x05, 0xD1, 0xE1, 0x81,  // r.c.....
                /* 26B8 */  0xD4, 0x3A, 0x32, 0x51, 0x10, 0x1D, 0x18, 0x08,  // .:2Q....
                /* 26C0 */  0x10, 0x8D, 0x07, 0x44, 0xE3, 0xE4, 0x3A, 0x1C,  // ...D..:.
                /* 26C8 */  0x50, 0x10, 0x1D, 0x0E, 0x48, 0xB0, 0xC3, 0x01,  // P...H...
                /* 26D0 */  0x05, 0xD1, 0xF1, 0x88, 0x14, 0x03, 0x62, 0x31,  // ......b1
                /* 26D8 */  0x40, 0x74, 0xF8, 0x23, 0xCD, 0x0E, 0x18, 0x14,  // @t.#....
                /* 26E0 */  0x44, 0x40, 0x56, 0x19, 0x0D, 0x88, 0x49, 0x06,  // D@V...I.
                /* 26E8 */  0x11, 0x90, 0xF3, 0x02, 0xD1, 0xF0, 0x40, 0x34,  // ......@4
                /* 26F0 */  0x6C, 0xB5, 0xE3, 0x0A, 0x05, 0xD1, 0xF1, 0x8D,  // l.......
                /* 26F8 */  0x64, 0x3B, 0x00, 0x50, 0x10, 0x0D, 0x9E, 0x84,  // d;.P....
                /* 2700 */  0x1B, 0x3C, 0x05, 0xD1, 0x60, 0x48, 0xB9, 0xC1,  // .<..`H..
                /* 2708 */  0x50, 0x10, 0x0D, 0x8A, 0xB4, 0x03, 0x62, 0xA9,  // P.....b.
                /* 2710 */  0x41, 0x04, 0xE4, 0x90, 0xF1, 0x80, 0x58, 0x64,  // A.....Xd
                /* 2718 */  0x10, 0x01, 0xF9, 0xFF, 0x1F, 0x23, 0x20, 0x08,  // .....# .
                /* 2720 */  0x13, 0x51, 0xF0, 0x50, 0x40, 0x13, 0x1E, 0x50,  // .Q.P@..P
                /* 2728 */  0x28, 0x88, 0x80, 0xAC, 0xBC, 0x21, 0x10, 0xCB,  // (....!..
                /* 2730 */  0x01, 0x22, 0x20, 0xE7, 0xAB, 0x08, 0xC4, 0xC2,  // ." .....
                /* 2738 */  0x82, 0x08, 0xC8, 0xD1, 0x32, 0x02, 0xB1, 0xA0,  // ....2...
                /* 2740 */  0x20, 0x3A, 0x32, 0x92, 0x90, 0xC7, 0x31, 0x5A,  //  :2...1Z
                /* 2748 */  0xF2, 0x10, 0x42, 0x41, 0x74, 0x08, 0x21, 0x29,  // ..BAt.!)
                /* 2750 */  0x0F, 0x27, 0x34, 0xE6, 0x61, 0x80, 0x82, 0xE8,  // .'4.a...
                /* 2758 */  0x68, 0x47, 0x6A, 0x1E, 0xED, 0x28, 0x88, 0x8E,  // hGj..(..
                /* 2760 */  0x41, 0xA4, 0xE7, 0x31, 0x88, 0x82, 0xE8, 0x90,  // A..1....
                /* 2768 */  0x41, 0x82, 0x1E, 0x0A, 0x28, 0x88, 0x8E, 0x38,  // A...(..8
                /* 2770 */  0x24, 0x29, 0x10, 0x8B, 0x08, 0xA2, 0x43, 0x00,  // $)....C.
                /* 2778 */  0x69, 0x7A, 0x28, 0xA0, 0x20, 0x02, 0x72, 0xEC,  // iz(. .r.
                /* 2780 */  0xAA, 0x83, 0xA1, 0x59, 0x8F, 0x69, 0x14, 0x44,  // ...Y.i.D
                /* 2788 */  0x47, 0x30, 0x02, 0x44, 0xF5, 0x95, 0x3D, 0x22,  // G0.D..="
                /* 2790 */  0x52, 0x10, 0x1D, 0x18, 0x48, 0xDA, 0x41, 0x51,  // R...H.AQ
                /* 2798 */  0x10, 0x1D, 0x0D, 0x49, 0xDC, 0xA3, 0x1B, 0x05,  // ...I....
                /* 27A0 */  0xD1, 0xD1, 0x8A, 0xD4, 0x3D, 0x5A, 0x51, 0x10,  // ....=ZQ.
                /* 27A8 */  0x1D, 0x17, 0x49, 0xDF, 0xE3, 0x22, 0x05, 0x11,  // ..I.."..
                /* 27B0 */  0x90, 0x23, 0x06, 0x06, 0x62, 0x81, 0x41, 0x74,  // .#..b.At
                /* 27B8 */  0xE7, 0x26, 0x8D, 0x81, 0x98, 0x32, 0x10, 0x1D,  // .&...2..
                /* 27C0 */  0x20, 0x48, 0xE4, 0xC3, 0x0C, 0x05, 0xD1, 0xD1,  //  H......
                /* 27C8 */  0x91, 0x64, 0x3E, 0x3A, 0x52, 0x10, 0x1D, 0xE1,  // .d>:R...
                /* 27D0 */  0x48, 0xE7, 0xA3, 0x19, 0x05, 0x11, 0x90, 0xC3,  // H.......
                /* 27D8 */  0x94, 0x06, 0x62, 0xC9, 0x40, 0x04, 0xE4, 0x1C,  // ..b.@...
                /* 27E0 */  0xA9, 0x81, 0x58, 0x2A, 0x10, 0x1D, 0x1C, 0xC8,  // ..X*....
                /* 27E8 */  0x73, 0x56, 0x07, 0x07, 0x02, 0x22, 0x20, 0x47,  // sV..." G
                /* 27F0 */  0xAD, 0x0D, 0xC4, 0x82, 0x83, 0x08, 0xC8, 0xA2,  // ........
                /* 27F8 */  0x82, 0x03, 0x31, 0x85, 0x20, 0x02, 0xB2, 0x9E,  // ..1. ...
                /* 2800 */  0xE2, 0x40, 0x4C, 0x1D, 0x88, 0x80, 0xAC, 0xBA,  // .@L.....
                /* 2808 */  0x39, 0x10, 0x8B, 0x00, 0x22, 0x20, 0xFF, 0xFF,  // 9..." ..
                /* 2810 */  0x05, 0x47, 0x3F, 0xBC, 0x50, 0x10, 0x1D, 0x0F,  // .G?.P...
                /* 2818 */  0x49, 0xF6, 0x43, 0x0F, 0x05, 0xD1, 0x61, 0x88,  // I.C...a.
                /* 2820 */  0x74, 0x3F, 0x5C, 0x50, 0x10, 0x01, 0x39, 0x73,  // t?\P..9s
                /* 2828 */  0x79, 0x20, 0xF6, 0xC4, 0x79, 0xDC, 0xA3, 0x20,  // y ..y.. 
                /* 2830 */  0x1A, 0x14, 0x01, 0xA2, 0x62, 0xEA, 0x0F, 0x98,  // ....b...
                /* 2838 */  0x82, 0x68, 0xC0, 0x24, 0xFF, 0x80, 0x29, 0x88,  // .h.$..).
                /* 2840 */  0x80, 0x9C, 0xD0, 0xC0, 0x8D, 0xEA, 0x91, 0x80,  // ........
                /* 2848 */  0x28, 0x00, 0x61, 0xC9, 0x1C, 0x80, 0x3C, 0x60,  // (.a...<`
                /* 2850 */  0x10, 0x10, 0x1D, 0x31, 0x89, 0x04, 0x20, 0x26,  // ...1.. &
                /* 2858 */  0x15, 0x44, 0xC7, 0x36, 0x62, 0x01, 0x88, 0xA9,  // .D.6b...
                /* 2860 */  0x04, 0xD1, 0x41, 0x85, 0x78, 0x00, 0x62, 0x51,  // ..A.x.bQ
                /* 2868 */  0x40, 0x04, 0x64, 0xDD, 0x22, 0x80, 0x58, 0x0A,  // @.d.".X.
                /* 2870 */  0x10, 0x1D, 0x4A, 0x88, 0x0A, 0x20, 0x96, 0x0D,  // ..J.. ..
                /* 2878 */  0x44, 0x40, 0x0E, 0xE2, 0x02, 0x88, 0xC5, 0x02,  // D@......
                /* 2880 */  0x11, 0x90, 0x45, 0xFA, 0x00, 0x61, 0x11, 0x41,  // ..E..a.A
                /* 2888 */  0xA8, 0x3C, 0x23, 0x80, 0x4C, 0x2B, 0x88, 0x0E,  // .<#.L+..
                /* 2890 */  0xB1, 0x44, 0xC9, 0x80, 0x28, 0x88, 0x0E, 0x50,  // .D..(..P
                /* 2898 */  0x44, 0x0A, 0xC8, 0xE3, 0x97, 0x63, 0x5B, 0x01,  // D....c[.
                /* 28A0 */  0x62, 0xA2, 0xB5, 0x80, 0xB0, 0xD8, 0x5E, 0x40,  // b.....^@
                /* 28A8 */  0x99, 0x06, 0x31, 0x40, 0x2C, 0x0B, 0x88, 0x8E,  // ..1@,...
                /* 28B0 */  0x31, 0x04, 0x88, 0x6A, 0x33, 0x03, 0xC4, 0x84,  // 1..j3...
                /* 28B8 */  0x82, 0x68, 0x88, 0x44, 0xCD, 0x10, 0x29, 0x88,  // .h.D..).
                /* 28C0 */  0x8E, 0x0C, 0x44, 0x0E, 0x10, 0x93, 0x0E, 0xA2,  // ..D.....
                /* 28C8 */  0x83, 0x1E, 0xB1, 0x03, 0xC4, 0xF4, 0x80, 0xE8,  // ........
                /* 28D0 */  0xA0, 0x47, 0x80, 0xA8, 0x18, 0x3D, 0x40, 0x2C,  // .G...=@,
                /* 28D8 */  0x14, 0x88, 0x8E, 0x1B, 0x04, 0x88, 0xFE, 0xFF,  // ........
                /* 28E0 */  0x01                                             // .
            })
            Method (WMAA, 3, Serialized)
            {
                CTID = 0x4141
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        AAST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAST) /* \_SB_.PCI0.WMID.AAST */
                    }
                    Case (0x02)
                    {
                        AAGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAGT) /* \_SB_.PCI0.WMID.AAGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMAB, 3, Serialized)
            {
                CTID = 0x4241
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        ABST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABST) /* \_SB_.PCI0.WMID.ABST */
                    }
                    Case (0x02)
                    {
                        ABGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABGT) /* \_SB_.PCI0.WMID.ABGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMBE, 3, Serialized)
            {
                CTID = 0x4542
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (0x13)
                    {
                        BEBI = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
                    }

                }

                BEBI [0x02] = One
                Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
            }

            Method (WMBK, 3, Serialized)
            {
                CTID = 0x4B42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x02)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x03)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x08)
                    {
                        BKMN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKMN) /* \_SB_.PCI0.WMID.BKMN */
                    }
                    Case (0x09)
                    {
                        BKSN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSN) /* \_SB_.PCI0.WMID.BKSN */
                    }
                    Case (0x0A)
                    {
                        BKAT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKAT) /* \_SB_.PCI0.WMID.BKAT */
                    }
                    Case (0x0B)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x0D)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x10)
                    {
                        BKGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGB) /* \_SB_.PCI0.WMID.BKGB */
                    }
                    Case (0x11)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x12)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x13)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x14)
                    {
                        BKGU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGU) /* \_SB_.PCI0.WMID.BKGU */
                    }
                    Case (0x15)
                    {
                        BKSU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSU) /* \_SB_.PCI0.WMID.BKSU */
                    }
                    Case (0x16)
                    {
                        BKGS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGS) /* \_SB_.PCI0.WMID.BKGS */
                    }
                    Case (0x17)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }
                    Case (0x18)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x19)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x1A)
                    {
                        BKGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGP) /* \_SB_.PCI0.WMID.BKGP */
                    }
                    Case (0x1B)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }

                }

                Return (One)
            }

            Method (WMBL, 3, Serialized)
            {
                CTID = 0x4C42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x02)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x03)
                    {
                        BLGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGB) /* \_SB_.PCI0.WMID.BLGB */
                    }
                    Case (0x04)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x05)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x06)
                    {
                        BLLB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLLB) /* \_SB_.PCI0.WMID.BLLB */
                    }
                    Case (0x07)
                    {
                        BLSD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSD) /* \_SB_.PCI0.WMID.BLSD */
                    }
                    Case (0x08)
                    {
                        BLGD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGD) /* \_SB_.PCI0.WMID.BLGD */
                    }
                    Case (0x09)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x0A)
                    {
                        BLGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGP) /* \_SB_.PCI0.WMID.BLGP */
                    }
                    Case (0x0B)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x0C)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }

                }

                Return (One)
            }

            Method (WMBG, 3, Serialized)
            {
                CTID = 0x4742
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BGS3 = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BGS3) /* \_SB_.PCI0.WMID.BGS3 */
                    }

                }

                Return (0xFFFF)
            }

            Method (WMBH, 3, Serialized)
            {
                CTID = 0x4842
                If ((Arg1 == 0x05))
                {
                    BHSK = Arg2
                    Local0 = DerefOf (BHSK [Zero])
                    Local1 = DerefOf (BHSK [One])
                    Local3 = 0x02
                    BHGK [One] = Zero
                    BHGK [0x02] = Zero
                    BHGK [0x03] = Zero
                    BHGK [0x04] = Zero
                    BHGK [0x05] = Zero
                    BHGK [0x06] = Zero
                    BHGK [0x07] = Zero
                    If ((Local0 == Zero))
                    {
                        BHGK [One] = Zero
                        BHGK [0x02] = Zero
                        BHGK [0x03] = 0xAF
                        BHGK [0x04] = 0x07
                    }
                    ElseIf ((Local0 == One))
                    {
                        BHGK [0x03] = Zero
                        BHGK [0x04] = Zero
                        Local3 = GGSI (Arg2, RefOf (Local2))
                        If ((Local3 == Zero))
                        {
                            BHGK [One] = (Local2 & 0xFF)
                            Local2 >>= 0x08
                            BHGK [0x02] = (Local2 & 0xFF)
                        }
                    }
                    ElseIf ((Local0 == 0x02))
                    {
                        Arg2 = \_SB.PCI0.LPCB.EC0.GGSI /* External reference */
                        RefOf (Local2)
                        Local3
                        If ((Local3 == Zero))
                        {
                            BHGK [0x05] = Local2
                        }
                    }

                    BHGK [Zero] = Local3
                    Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                }

                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x02)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x03)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x04)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x06)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x07)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x08)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x09)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0A)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0B)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0C)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0D)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0E)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0F)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x10)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x11)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x12)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x13)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }

                }

                Return (One)
            }

            Method (WMAC, 3, Serialized)
            {
                CTID = 0x4143
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        ACSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACSB) /* \_SB_.PCI0.WMID.ACSB */
                    }
                    Case (0x02)
                    {
                        ACGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACGB) /* \_SB_.PCI0.WMID.ACGB */
                    }

                }

                Return (One)
            }

            Method (EVBC, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (ToInteger (Local0))
                {
                    Case (One)
                    {
                        CLBC (0x04, 0x04)
                        Local1 = DerefOf (FEBC [One])
                        Local2 = Zero
                        If (((Local1 > Zero) && (Local1 < 0x20)))
                        {
                            Local3 = GCMS (RefOf (Local2))
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        ElseIf (((Local1 > 0x80) && (Local1 < 0xA0)))
                        {
                            Local3 = GOTS (Local1, RefOf (Local2))
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        Else
                        {
                            FEBC [0x02] = Zero
                            FEBC [0x03] = Zero
                        }
                    }
                    Case (0x02)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x03)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x04)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local2 = GBL1 (RefOf (Local1))
                        If ((Local2 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local2 = GBL2 (RefOf (Local1))
                            If ((Local2 != Zero))
                            {
                                FEBC [0x02] = Zero
                            }
                            Else
                            {
                                FEBC [0x02] = (Local1 & 0xFF)
                            }
                        }
                    }
                    Case (0x05)
                    {
                        Local1 = Zero
                        Local3 = GSTY (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = GSDA (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x03] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x04] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x05] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x06)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local3 = GTTY (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = GTDA (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x07)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local3 = GHKF (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = GHKD (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = GACS (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (EVBD, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (ToInteger (Local0))
                {
                    Case (One)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                        FEBC [One] = 0xE1
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xBC))
                {
                    Return (EVBC ())
                }
                ElseIf ((Arg0 == 0xBD))
                {
                    Return (EVBD ())
                }
                Else
                {
                    CLBC (Zero, 0x08)
                    Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
                }
            }
        }
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 2, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08,  // ........
            /* 0028 */  0x0F, 0x00, 0x03, 0x00, 0x03, 0x01, 0x01, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0038 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x03,  // ........
            /* 0068 */  0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01,  // ........
            /* 0078 */  0x01, 0x80, 0x80, 0x04, 0x00, 0x01, 0x07, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0088 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 00B0 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A014)
                CreateWordField (Arg1, 0x02, A015)
                CreateDWordField (Arg1, 0x04, A016)
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A017)
                A017 = A014 /* \_SB_.ALIB.A014 */
                CreateWordField (Local0, 0x02, A018)
                A018 = A015 /* \_SB_.ALIB.A015 */
                CreateDWordField (Local0, 0x04, A019)
                A019 = A016 /* \_SB_.ALIB.A016 */
                A019 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A019 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A020 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A023 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A024 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A025 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A026 (Arg1)
            }

            If ((Arg0 == 0x10))
            {
                Local7 = Buffer (0x18){}
                CreateDWordField (Local7, 0x00, A027)
                CreateDWordField (Local7, 0x04, A028)
                CreateDWordField (Local7, 0x08, A029)
                CreateDWordField (Local7, 0x0C, A030)
                CreateDWordField (Local7, 0x10, A031)
                CreateDWordField (Local7, 0x14, A032)
                A027 = 0x00
                A028 = 0x00
                A029 = 0x00
                A030 = 0x00
                A031 = 0x00
                A032 = 0x00
                A012 (0x51, Local7)
            }

            If ((Arg0 == 0x11))
            {
                Local6 = Buffer (0x18){}
                CreateDWordField (Local6, 0x00, A006)
                CreateDWordField (Local6, 0x04, A007)
                CreateDWordField (Local6, 0x08, A008)
                CreateDWordField (Local6, 0x0C, A009)
                CreateDWordField (Local6, 0x10, A010)
                CreateDWordField (Local6, 0x14, A011)
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                A012 (0x52, Local6)
            }

            Return (0x00)
        }

        Method (A023, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A084 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local2 = A085 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A017)
            CreateByteField (Local7, 0x02, A034)
            CreateByteField (Local7, 0x03, A086)
            A017 = 0x04
            A034 = 0x00
            If ((Local2 == 0x00))
            {
                A086 = 0x00
            }
            Else
            {
                A086 = 0x01
            }

            Return (Local7)
        }

        Method (A084, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A079 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A079 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A079 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A079 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A079 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A079 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A079 (Arg1))
            }
        }

        Method (A085, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A080 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A080 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A080 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A080 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A080 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A080 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A080 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A020, 1, NotSerialized)
        {
            AD00 = Arg0
            A005 ()
        }

        Method (A024, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A025, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A033, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A017)
            A017 = 0x03
            CreateByteField (Local7, 0x02, A034)
            A034 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A034 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A034 = 0x01
                Return (Local7)
            }

            A035 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A036 ()
            A034 = 0x02
            Return (Local7)
        }

        Method (A037, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A036 ()
        }

        Method (A038, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A039, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A040, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A041 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A036 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A042, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A035, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                If ((A043 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A044 (Local0)
                        A045 (Local0, Local1)
                    }
                    Else
                    {
                        A045 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A046, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A048, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A049 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A036, 0, NotSerialized)
        {
            A048 ()
            A046 ()
            If ((AP02 != AP01))
            {
                A013 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                Local2 = A050 (Local0)
                If ((Local1 != Local2))
                {
                    A051 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A051 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A051, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A052 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A052 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A052 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A052 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A052 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A052 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A052 (Arg1))
            }
        }

        Method (A050, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A053 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A053 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A053 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A053 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A053 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A053 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A053 ())
            }
        }

        Method (A047, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A054 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A054 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A054 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A054 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A054 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A054 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A054 ())
            }
        }

        Method (A049, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A055 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A055 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A055 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A055 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A055 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A055 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A055 ())
            }
        }

        Method (A044, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A056 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A056 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A056 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A056 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A056 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A056 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A056 ())
            }
        }

        Method (A045, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A057 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A057 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A057 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A057 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A057 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A057 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A057 (Arg1))
            }
        }

        Method (A043, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A058 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A058 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A058 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A058 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A058 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A058 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A058 (Arg1))
            }
        }

        Method (A041, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A059 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A059 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A059 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A059 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A059 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A059 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A059 ())
            }
        }

        OperationRegion (A111, SystemMemory, AGRB, 0x1000)
        Field (A111, DWordAcc, Lock, Preserve)
        {
            Offset (0xB8), 
            A112,   32
        }

        BankField (A111, A112, 0x03B10528, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A109,   32
        }

        BankField (A111, A112, 0x03B10564, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A103,   32
        }

        BankField (A111, A112, 0x03B10998, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A071,   32
        }

        BankField (A111, A112, 0x03B1099C, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A104,   32
        }

        BankField (A111, A112, 0x03B109A0, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A105,   32
        }

        BankField (A111, A112, 0x03B109A4, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A106,   32
        }

        BankField (A111, A112, 0x03B109A8, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A107,   32
        }

        BankField (A111, A112, 0x03B109AC, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A108,   32
        }

        BankField (A111, A112, 0x13B00084, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A089,   32
        }

        BankField (A111, A112, 0x11140280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A090,   32
        }

        BankField (A111, A112, 0x11141280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A091,   32
        }

        BankField (A111, A112, 0x11142280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A092,   32
        }

        BankField (A111, A112, 0x11143280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A093,   32
        }

        BankField (A111, A112, 0x11144280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A094,   32
        }

        BankField (A111, A112, 0x11145280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A095,   32
        }

        BankField (A111, A112, 0x11146280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A096,   32
        }

        Method (A087, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A067 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A067 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A067 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A067 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A067 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A067 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A067 (Arg1))
            }
        }

        Method (A088, 2, NotSerialized)
        {
            If ((Arg1 == 0x01))
            {
                If ((Arg0 == 0x00))
                {
                    Local0 = 0x00090300
                }

                If ((Arg0 == 0x01))
                {
                    Local0 = 0x000A0300
                }

                If ((Arg0 == 0x02))
                {
                    Local0 = 0x000B0300
                }

                If ((Arg0 == 0x03))
                {
                    Local0 = 0x000C0300
                }

                If ((Arg0 == 0x04))
                {
                    Local0 = 0x000D0300
                }

                If ((Arg0 == 0x05))
                {
                    Local0 = 0x000E0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x000F0300
                }

                Local1 = A089 /* \_SB_.A089 */
                Local1 &= 0xFF00FCFF
                A089 = (Local0 | Local1)
                Local1 = A089 /* \_SB_.A089 */
                A089 = (0xFFFFFDFF & Local1)
            }
            ElseIf ((Arg1 == 0x00))
            {
                If ((Arg0 == 0x00))
                {
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0x00400000 | Local1)
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x01))
                {
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0x00400000 | Local1)
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x02))
                {
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0x00400000 | Local1)
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x03))
                {
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0x00400000 | Local1)
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x04))
                {
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0x00400000 | Local1)
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x05))
                {
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0x00400000 | Local1)
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x06))
                {
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0x00400000 | Local1)
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0xFFBFFFFF & Local1)
                }
            }
        }

        Method (A004, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A087 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    A088 (Local0, Arg1)
                    Break
                }

                Local0++
            }
        }

        Method (A012, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A097)
            CreateDWordField (Arg1, 0x04, A098)
            CreateDWordField (Arg1, 0x08, A099)
            CreateDWordField (Arg1, 0x0C, A100)
            CreateDWordField (Arg1, 0x10, A101)
            CreateDWordField (Arg1, 0x14, A102)
            A103 = 0x00
            While ((A103 != 0x00)){}
            A071 = A097 /* \_SB_.A012.A097 */
            A104 = A098 /* \_SB_.A012.A098 */
            A105 = A099 /* \_SB_.A012.A099 */
            A106 = A100 /* \_SB_.A012.A100 */
            A107 = A101 /* \_SB_.A012.A101 */
            A108 = A102 /* \_SB_.A012.A102 */
            A109 = Arg0
            While ((A103 == 0x00)){}
        }

        Method (A082, 5, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg0
            A007 = Arg1
            A008 = Arg2
            A009 = Arg3
            A012 (0x0A, Local7)
        }

        Method (A026, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A110)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            Local0 = 0x02
            While ((Local0 < A110))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                If ((Local1 == 0x01))
                {
                    A006 = Local2
                    A012 (0x1E, Local7)
                }

                If ((Local1 == 0x03))
                {
                    A006 = Local2
                    A012 (0x1F, Local7)
                }

                If ((Local1 == 0x05))
                {
                    A006 = Local2
                    A012 (0x1A, Local7)
                }

                If ((Local1 == 0x06))
                {
                    A006 = Local2
                    A012 (0x1B, Local7)
                }

                If ((Local1 == 0x07))
                {
                    A006 = Local2
                    A012 (0x1C, Local7)
                }

                If ((Local1 == 0x08))
                {
                    A006 = Local2
                    A012 (0x1D, Local7)
                }

                If ((Local1 == 0x09))
                {
                    A006 = Local2
                    A012 (0x26, Local7)
                }

                If ((Local1 == 0x0A))
                {
                    A006 = Local2
                    A012 (0x27, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A006 = Local2
                    A012 (0x20, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A006 = Local2
                    A012 (0x22, Local7)
                }

                If ((Local1 == 0x0D))
                {
                    A006 = Local2
                    A012 (0x24, Local7)
                }

                If ((Local1 == 0x0F))
                {
                    A006 = Local2
                    A012 (0x25, Local7)
                }

                If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
                {
                    If ((Local1 == 0x10))
                    {
                        If ((Local2 == 0x00))
                        {
                            A012 (0x2B, Local7)
                        }
                        Else
                        {
                            A012 (0x2A, Local7)
                        }
                    }
                }
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR0.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR0.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR1.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR1.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR2.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR2.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR3.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR3.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR4.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR4.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR5)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x85)  // _UID: Unique ID
                Name (AB12, 0x84)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR5.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR5.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR5.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR5.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR5.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR6)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x86)  // _UID: Unique ID
                Name (AB12, 0x98)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR6.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR6.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR6.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR6.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR6.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Method (A003, 0, Serialized)
        {
            If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A113 (Local0)
                    Local0++
                }
            }
        }

        Method (A070, 3, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg1
            A007 = Arg2
            A012 (Arg0, Local7)
        }

        Method (A113, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A068 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A068 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A068 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A068 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A068 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A068 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A068 ())
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)){}
        }

        Method (AWAK, 1, NotSerialized)
        {
            A003 ()
            If ((Arg0 == 0x03)){}
        }

        Method (APPM, 1, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [0x04])
            Local1 = DerefOf (Arg0 [0x02])
            A004 (Local0, Local1)
        }

        Method (A005, 0, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = 0x00
            A007 = 0x00
            A008 = 0x00
            A009 = 0x00
            A010 = 0x00
            A011 = 0x00
            If ((AD00 == 0x00))
            {
                A012 (0x18, Local7)
            }
            Else
            {
                A012 (0x19, Local7)
            }
        }

        Method (A013, 2, NotSerialized)
        {
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PCI0.GPP0.HDAU, DeviceObj)
    External (M097, UnknownObj)

    Scope (\_SB.PCI0.GPP0.HDAU)
    {
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((M097 != Zero))
            {
                Return (Zero)
            }
            Else
            {
                Return (0x0F)
            }
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : 6A
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]               Platform Class : 0000
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]              Control Address : 00000000FD310510
[030h 0048   4]                 Start Method : 02 [ACPI Start Method]

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 52 (0x34)

    0000: 54 50 4D 32 34 00 00 00 04 6A 41 43 52 53 59 53  // TPM24....jACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 10 05 31 FD 00 00 00 00  // ..........1.....
    0030: 02 00 00 00                                      // ....


UEFI1
-----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000236
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 95
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  16]              UUID Identifier : 9D4BF935-A674-4710-BA02-BF0AA1758C7B
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 566 (0x236)

    0000: 55 45 46 49 36 02 00 00 01 95 41 43 52 53 59 53  // UEFI6.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 35 F9 4B 9D 74 A6 10 47 BA 02 BF 0A  // ....5.K.t..G....
    0030: A1 75 8C 7B 36 00 24 42 56 44 54 24 00 00 00 24  // .u.{6.$BVDT$...$
    0040: 00 00 00 24 56 31 2E 31 36 00 00 00 00 00 00 00  // ...$V1.16.......
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 24 44 48 35  // ............$DH5
    0060: 4A 56 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // JV..............
    0070: 00 00 00 00 00 00 24 30 35 2E 32 32 2E 34 36 00  // ......$05.22.46.
    0080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF  // ................
    00A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0100: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0110: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0120: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0130: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0150: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0160: FF FF FF FF FF 24 42 4D 45 24 00 90 6D 00 00 10  // .....$BME$..m...
    0170: 00 00 24 00 00 80 00 00 00 00 00 24 00 FF FF FF  // ..$........$....
    0180: FF FF FF FF FF 24 5F 4D 53 43 5F 56 45 52 3D 40  // .....$_MSC_VER=@
    0190: 06 24 52 44 41 54 45 19 08 05 24 45 53 52 54 16  // .$RDATE...$ESRT.
    01A0: 61 04 71 95 5E 68 79 62 9C 9D 49 9A EF F3 54 C6  // a.q.^hyb..I...T.
    01B0: 32 11 DC 8B 01 00 00 24 45 4E 44 4F 46 42 56 44  // 2......$ENDOFBVD
    01C0: 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // T...............
    01D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0200: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0210: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0220: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0230: FF FF FF FF FF FF                                // ......


UEFI2
-----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000042
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : C4
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  16]              UUID Identifier : C68ED8E2-9DC6-4CBD-9D94-DB65ACC5C332
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 66 (0x42)

    0000: 55 45 46 49 42 00 00 00 01 C4 41 43 52 53 59 53  // UEFIB.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 00 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 E2 D8 8E C6 C6 9D BD 4C 9D 94 DB 65  // ...........L...e
    0030: AC C5 C3 32 36 00 55 00 00 00 00 00 00 00 00 00  // ...26.U.........
    0040: 00 00                                            // ..


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000D484
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : CC
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 54404 (0xD484)

    0000: 56 46 43 54 84 D4 00 00 01 CC 41 43 52 53 59 53  // VFCT......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 DD 15 00 00 00 00  // ................
    0060: 01 00 00 00 00 D4 00 00 55 AA 6A E9 FB 01 00 00  // ........U.j.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: AC 01 00 00 00 00 49 42 4D 13 18 90 00 00 00 00  // ......IBM.......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: 84 01 00 00 00 00 00 00 31 31 2F 30 35 2F 31 38  // ........11/05/18
    00C0: 2C 30 36 3A 30 31 3A 31 38 00 00 00 E9 E9 02 00  // ,06:01:18.......
    00D0: E9 F3 02 00 00 00 70 00 31 31 33 2D 52 41 56 45  // ......p.113-RAVE
    00E0: 4E 2D 31 31 33 00 52 41 56 45 4E 00 50 43 49 5F  // N-113.RAVEN.PCI_
    00F0: 45 58 50 52 45 53 53 00 30 00 0D 0A 52 61 76 65  // EXPRESS.0...Rave
    0100: 6E 20 47 65 6E 65 72 69 63 20 56 42 49 4F 53 20  // n Generic VBIOS 
    0110: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0120: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0130: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0140: 20 20 20 20 20 20 20 20 0D 0A 00 0D 0A 20 0D 0A  //         ..... ..
    0150: 00 28 43 29 20 31 39 38 38 2D 32 30 31 30 2C 20  // .(C) 1988-2010, 
    0160: 41 64 76 61 6E 63 65 64 20 4D 69 63 72 6F 20 44  // Advanced Micro D
    0170: 65 76 69 63 65 73 2C 20 49 6E 63 2E 00 41 54 4F  // evices, Inc..ATO
    0180: 4D 42 49 4F 53 42 4B 2D 41 4D 44 20 56 45 52 30  // MBIOSBK-AMD VER0
    0190: 31 36 2E 30 30 32 2E 30 30 30 2E 30 31 30 2E 30  // 16.002.000.010.0
    01A0: 30 30 30 30 30 00 52 61 76 65 6E 47 65 6E 65 72  // 00000.RavenGener
    01B0: 69 63 00 31 37 30 32 32 30 35 33 00 34 33 34 30  // ic.17022053.4340
    01C0: 34 34 20 20 00 20 20 20 20 20 20 20 20 00 41 4D  // 44  .        .AM
    01D0: 44 5F 52 61 76 65 6E 5F 47 65 6E 65 72 69 63 5C  // D_Raven_Generic\
    01E0: 63 6F 6E 66 69 67 2E 68 00 00 00 90 28 00 02 02  // config.h....(...
    01F0: 41 54 4F 4D 00 C0 FB 02 3E 01 D1 01 92 00 2E 03  // ATOM....>.......
    0200: 00 00 00 00 02 10 02 10 AC 01 64 93 0A 94 00 00  // ..........d.....
    0210: 00 00 00 00 50 43 49 52 02 10 DD 15 00 00 18 00  // ....PCIR........
    0220: 00 00 00 03 6A 00 02 10 00 80 00 00 41 4D 44 20  // ....j.......AMD 
    0230: 41 54 4F 4D 42 49 4F 53 00 D1 62 74 23 00 00 00  // ATOMBIOS..bt#...
    0240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 1E 06 66 50 66 51 66  // ...........fPfQf
    0270: 52 66 53 66 55 66 56 66 57 0E 1F A3 14 00 8C 0E  // RfSfUfVfW.......
    0280: 08 00 B2 20 E8 2B 2F 0B C0 75 14 A2 02 00 66 5F  // ... .+/..u....f_
    0290: 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F CB E8  // f^f]f[fZfYfX....
    02A0: 45 30 E8 17 2E 32 D2 8D 3E 84 01 89 55 16 E8 3C  // E0...2..>...U..<
    02B0: 11 E8 FF 10 E8 56 12 E8 AD 02 E8 60 28 0B C0 74  // .....V.....`(..t
    02C0: 0C E8 39 00 E8 0D 56 E8 FB 10 E8 5C 56 E8 A9 00  // ..9...V....\V...
    02D0: B4 80 E8 11 2E 8A C7 66 C1 E0 10 8A E3 B0 20 66  // .......f...... f
    02E0: A3 18 90 E8 AC 02 E8 0E 11 E8 20 30 66 5F 66 5E  // .......... 0f_f^
    02F0: 66 5D 66 5B 66 5A 66 59 66 58 07 1F CB 2E 8B 1E  // f]f[fZfYfX......
    0300: 08 00 83 3E 0D 03 00 75 04 89 1E 0B 03 1E 2E 8E  // ...>...u........
    0310: 1E 03 03 9C FA 66 C7 06 08 01 65 F0 00 F0 C7 06  // .....f....e.....
    0320: 40 00 2E 03 89 1E 42 00 C7 06 B4 01 2E 03 89 1E  // @.....B.........
    0330: B6 01 C7 06 7C 00 FA 5D 89 1E 7E 00 C7 06 0C 01  // ....|..]..~.....
    0340: 0D 62 89 1E 0E 01 C7 06 A8 04 32 58 89 1E AA 04  // .b........2X....
    0350: 2E 8E 1E 0B 03 8B C3 A3 34 58 A3 44 58 A3 56 58  // ........4X.DX.VX
    0360: 9D 1F C3 50 4D 49 44 2E 03 58 48 00 00 00 A0 00  // ...PMID..XH.....
    0370: B0 00 B8 00 C0 00 00 00 00 BB 00 00 E8 61 10 66  // .............a.f
    0380: C1 E8 10 A3 B2 01 BB 0B 00 E8 54 10 8D 3E 84 01  // ..........T..>..
    0390: 66 89 45 18 C3 00 E8 4E 2F 80 FC A0 75 05 E8 3D  // f.E....N/...u..=
    03A0: 00 EB 11 80 FC 4F 75 05 E8 3B 44 EB 07 E8 90 49  // .....Ou..;D....I
    03B0: EB 02 B4 01 E8 55 2F CF E8 2C 2F E8 20 00 EB 02  // .....U/..,/. ...
    03C0: B4 01 E8 47 2F CB E8 1E 2F 80 FC 4F 75 05 E8 15  // ...G/.../..Ou...
    03D0: 44 EB 07 E8 6A 49 EB 02 B4 01 E8 2F 2F CB 1E 06  // D...jI.....//...
    03E0: 66 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F  // fPfQfRfSfUfVfW..
    03F0: 3C 04 75 29 2E A1 1A 00 66 C1 E0 10 2E A1 18 00  // <.u)....f.......
    0400: 8D 36 93 00 8A 3C 80 EF 30 B3 02 8B EC 89 5E 0C  // .6...<..0.....^.
    0410: 89 46 04 66 C1 E8 10 89 46 00 E9 28 01 3C 05 75  // .F.f....F..(.<.u
    0420: 18 E8 C2 2C E8 95 2C 2E A1 08 00 8B EC 89 56 10  // ...,..,.......V.
    0430: 89 46 00 89 5E 04 E9 0C 01 3C 06 75 32 E8 88 0F  // .F..^....<.u2...
    0440: 66 D1 E0 8B EC 89 46 14 BB 02 00 E8 92 0F 88 46  // f.....F........F
    0450: 18 E8 7C 0F 66 89 46 0C BB 09 00 E8 82 0F 33 C0  // ..|.f.F.......3.
    0460: 66 89 46 00 2E 8B 16 B2 01 89 56 10 E9 D6 00 3C  // f.F.......V....<
    0470: 0B 75 24 0A DB 75 11 B9 80 00 BB 02 00 8B EC 89  // .u$..u..........
    0480: 5E 0C 89 4E 14 E9 BD 00 8A C7 E8 D0 00 E8 34 01  // ^..N..........4.
    0490: 0F 84 A9 00 E9 AE 00 3C 17 75 1D E8 2E 12 74 06  // .......<.u....t.
    04A0: E8 8B 0D E8 16 17 E8 EE 09 E8 FA 0E 33 C9 8B C8  // ............3...
    04B0: 8B EC 89 4E 14 E9 8D 00 3C 18 75 45 0A FF 75 10  // ...N....<.uE..u.
    04C0: E8 B5 11 8B EC 89 46 0C E8 3B 0A 89 4E 10 EB 75  // ......F..;..N..u
    04D0: E8 F9 11 75 68 BB 00 1C E8 C8 2D 66 0B C0 74 5D  // ...uh.....-f..t]
    04E0: 23 C9 74 59 E8 CD 11 BE 00 1C E8 20 0F 74 4E BE  // #.tY....... .tN.
    04F0: 00 1C B0 40 E8 6F 0F E8 7E 11 8B EC 89 46 0C EB  // ...@.o..~....F..
    0500: 44 3C 82 75 1A 80 FB 05 75 15 0A FF 75 0A E8 C2  // D<.u....u...u...
    0510: 10 8B EC 89 46 14 EB 2D E8 8F 10 74 18 EB 26 3C  // ....F..-...t..&<
    0520: 8E 75 12 80 FF 01 74 08 80 FF 02 75 08 80 C1 02  // .u....t....u....
    0530: E8 E8 10 EB 10 8B EC C6 46 19 02 EB 0F 8B EC C6  // ........F.......
    0540: 46 19 01 EB 07 32 E4 8B EC 88 66 19 66 5F 66 5E  // F....2....f.f_f^
    0550: 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3 51 8A C8  // f]f[fZfYfX...Q..
    0560: B8 01 00 D3 E0 59 C3 E8 C8 2D C3 0C 01 C3 50 51  // .....Y...-....PQ
    0570: B0 B6 E6 43 B0 33 E6 42 B0 05 E6 42 E4 61 8A E0  // ...C.3.B...B.a..
    0580: 0C 03 E6 61 8A C4 B9 C8 00 E8 FA 28 E6 61 59 58  // ...a.......(.aYX
    0590: C3 00 1E 56 0E 1F 80 3E 02 00 80 76 05 C6 06 02  // ...V...>...v....
    05A0: 00 80 8A 0E 02 00 C1 E1 09 FC C6 06 21 00 00 33  // ............!..3
    05B0: F6 32 E4 AC 02 E0 E2 FB F6 D4 FE C4 88 26 21 00  // .2...........&!.
    05C0: 5E 1F C3 00 57 0B C0 75 0F E8 2A 0C 74 25 E8 24  // ^...W..u..*.t%.$
    05D0: 00 F6 C3 04 74 F3 EB 11 8B C8 E8 40 25 23 C1 74  // ....t......@%#.t
    05E0: 12 E8 11 00 F6 C3 04 74 0A 5F 8D 5C 28 E8 4C 06  // .......t._.\(.L.
    05F0: 0B F6 C3 5F C3 50 E8 DF 0B E8 92 24 E8 A0 24 0A  // ..._.P.....$..$.
    0600: C9 74 69 0A ED 74 10 8A CD B5 02 E8 FB 27 B1 02  // .ti..t.......'..
    0610: 8D 9C 48 01 E8 30 2C E8 76 02 F6 C3 04 74 08 E8  // ..H..0,.v....t..
    0620: F2 0C E8 03 23 74 45 8D 5C 28 E8 69 00 56 83 C6  // ....#tE.\(.i.V..
    0630: 08 E8 CF 22 5E 80 FD 02 75 11 51 E8 0E 18 59 80  // ..."^...u.Q...Y.
    0640: FB 00 75 4D 51 B5 08 E8 E8 05 59 8A DD 33 C9 E8  // ..uMQ.....Y..3..
    0650: FF 16 0A C0 75 3B E8 37 02 8A EB 8D 5C 28 80 CD  // ....u;.7....\(..
    0660: 02 E8 3B 00 74 03 80 CD 04 E8 C6 05 8D 9C A6 00  // ..;.t...........
    0670: E8 30 2C 0A C0 74 1A 56 83 C6 08 E8 85 22 5E 8A  // .0,..t.V....."^.
    0680: DD B9 80 00 E8 CA 16 E8 D8 04 74 05 33 C9 E8 A1  // ..........t.3...
    0690: 05 E8 FC 01 58 C3 51 B9 49 00 E8 98 27 59 C3 51  // ....X.Q.I...'Y.Q
    06A0: E8 1A 00 75 14 E8 B9 01 3C 01 75 0D B9 20 00 E8  // ...u....<.u.. ..
    06B0: 27 00 75 05 80 C9 01 EB 02 33 C9 59 C3 53 E8 E2  // '.u......3.Y.S..
    06C0: 2B 66 3D 00 FF FF FF 75 0E 83 C3 04 E8 D4 2B 66  // +f=....u......+f
    06D0: 3D FF FF FF 00 75 00 5B C3 50 52 32 D2 E8 C3 2B  // =....u.[.PR2...+
    06E0: 02 D0 02 D4 66 C1 E8 10 02 D0 02 D4 83 C3 04 E2  // ....f...........
    06F0: EC 0A D2 5A 58 C3 E8 DF 0A 8D 9C 4C 01 E8 39 01  // ...ZX......L..9.
    0700: E8 8D 01 B5 13 F6 C3 08 75 0C E8 07 0C 8A EA 80  // ........u.......
    0710: FD 13 75 02 B5 03 66 50 8D 9C B8 02 66 33 C0 8A  // ..u...fP....f3..
    0720: C5 E8 DF 2A 66 58 A9 C8 0E 74 55 E8 62 01 F6 C3  // ...*fX...tU.b...
    0730: 08 74 0F E8 0F 05 8D 5C 28 E8 04 01 75 04 E8 72  // .t.....\(...u..r
    0740: 00 C3 B5 02 E8 23 01 E8 46 01 F6 C3 04 74 21 8D  // .....#..F....t!.
    0750: 5C 28 E8 49 01 E8 94 03 74 05 B5 03 E8 0B 01 E8  // \(.I....t.......
    0760: 68 04 E8 21 01 80 FD 00 75 48 B5 02 E8 0D 01 C3  // h..!....uH......
    0770: 8D 9C 68 01 B8 00 55 E8 5B 11 B5 02 E8 FD 00 C3  // ..h...U.[.......
    0780: A9 02 00 74 2D B5 04 E8 E0 00 E8 03 01 F6 C3 08  // ...t-...........
    0790: 74 03 E8 B0 04 8D 9C 68 01 56 E8 CD 28 8B F7 E8  // t......h.V..(...
    07A0: 68 04 5E E8 6A 28 E8 D3 00 8D 5C 28 E8 8A 28 E8  // h.^.j(....\(..(.
    07B0: 18 04 C3 B5 01 E8 B2 00 B5 02 E8 BF 00 E8 D0 00  // ................
    07C0: F6 C3 04 75 10 8D 9C 68 01 B8 00 55 E8 06 11 B5  // ...u...h...U....
    07D0: 02 E8 17 00 C3 E8 C6 00 B5 02 8D 5C 28 E8 6E 00  // ...........\(.n.
    07E0: 75 02 B5 01 E8 04 00 E8 E0 03 C3 8D 9C B4 02 B1  // u...............
    07F0: 02 E8 53 2A B5 02 E8 83 00 C3 8D 9C 4C 01 E8 38  // ..S*........L..8
    0800: 00 E8 8C 00 F6 C3 04 74 23 8D 5C 28 E8 8F 00 E8  // .......t#.\(....
    0810: 58 28 8D 9C 68 01 06 0E 07 B9 07 00 E8 50 26 07  // X(..h........P&.
    0820: E8 63 00 E8 EE 0A 8D 5C 28 E8 49 28 8D 5C 28 E8  // .c.....\(.I(.\(.
    0830: E7 27 B8 02 00 E8 BE FE C3 B9 61 00 E8 F6 25 C3  // .'........a...%.
    0840: 53 81 C3 05 01 E8 5B 2A 24 06 3C 02 5B C3 E8 10  // S.....[*$.<.[...
    0850: 00 3D 01 04 75 0A 53 83 C3 18 E8 46 2A 5B A8 01  // .=..u.S....F*[..
    0860: C3 53 83 C3 12 E8 3B 2A 5B C3 8D 9C B4 02 32 C9  // .S....;*[.....2.
    0870: E8 D4 29 C3 8D 9C B4 02 E8 28 2A C3 8D 9C B4 02  // ..)......(*.....
    0880: B1 01 E8 C2 29 C3 8D 9C B4 02 B1 01 E8 D0 29 C3  // ....).........).
    0890: 66 50 8D 9C 48 01 E8 0A 2A 8A D8 66 58 C3 55 57  // fP..H...*..fX.UW
    08A0: 51 B9 08 00 BD 00 00 BB 08 00 2B D9 D1 E3 8D 58  // Q.........+....X
    08B0: 4E E8 EF 29 E8 E3 01 E2 EE 8D 5C 4B E8 E4 29 B9  // N..)......\K..).
    08C0: 03 00 8B D0 BF 16 09 85 55 06 74 17 66 8B 05 8D  // ........U.t.f...
    08D0: 9A F4 01 E8 2D 29 8B 45 04 8D 9A F8 01 E8 3B 29  // ....-).E......;)
    08E0: 83 C5 08 83 C7 08 E2 DF 8D 7C 5E B9 04 00 33 ED  // .........|^...3.
    08F0: 8B DF E8 AE 29 0B C0 74 09 E8 5D 01 E8 97 00 83  // ....)..t..].....
    0900: C5 1C 83 C7 12 E2 E9 55 32 ED E8 6F FF 8D 5C 28  // .......U2..o..\(
    0910: E8 4E FF 3D 01 04 75 10 83 C3 14 E8 85 29 24 70  // .N.=..u......)$p
    0920: C0 E8 04 8A E8 E8 54 FF 5D 8D 9C A6 00 E8 73 29  // ......T.].....s)
    0930: 0A C0 74 46 8D 9C A8 00 E8 68 29 3C 02 75 3B 66  // ..tF.....h)<.u;f
    0940: C1 E8 10 3C 04 72 33 8D 9C A8 00 32 E4 03 D8 8B  // ...<.r3....2....
    0950: FB B9 04 00 8B DF E8 4A 29 0B C0 74 15 E8 F9 00  // .......J)..t....
    0960: A9 80 00 75 0D E8 2E 00 83 C5 1C 55 58 83 F8 70  // ...u.......UX..p
    0970: 73 08 83 C7 12 49 0B C9 75 DA 59 5F 5D C3 20 03  // s....I..u.Y_]. .
    0980: 58 02 3C 00 01 00 00 04 00 03 3C 00 00 08 80 02  // X.<.......<.....
    0990: E0 01 3C 00 20 00 51 8D 1D E8 07 29 8D 9A 68 01  // ..<. .Q....)..h.
    09A0: E8 78 28 8D 5D 02 E8 FA 28 8D 9A 6A 01 E8 89 00  // .x(.]...(..j....
    09B0: 8D 5D 05 E8 ED 28 8D 9A 6E 01 E8 7C 00 8D 5D 08  // .]...(..n..|..].
    09C0: E8 E0 28 8B C8 8A DC 66 C1 C8 10 8A D0 80 E2 0F  // ..(....f........
    09D0: 8A F0 C0 EE 04 8A EC C0 ED 06 8A FC C0 EF 04 80  // ................
    09E0: E7 03 80 E4 0F C0 E4 04 0A D4 80 E2 3F 80 E4 C0  // ............?...
    09F0: C0 EC 02 0A F4 8B C3 8D 9A 74 01 E8 1D 28 8D 9A  // .........t...(..
    0A00: 72 01 8B C1 E8 14 28 8D 9A 76 01 33 C0 8A C6 E8  // r.....(..v.3....
    0A10: 09 28 8D 9A 78 01 33 C0 8A C2 E8 FE 27 8D 5D 0C  // .(..x.3.....'.].
    0A20: E8 80 28 8D 9A 7A 01 E8 0F 00 8D 5D 0F E8 73 28  // ..(..z.....]..s(
    0A30: 8D 9A 7E 01 E8 E4 27 59 C3 8B C8 8A D4 66 C1 C8  // ..~...'Y.....f..
    0A40: 10 8A F0 80 E6 0F 8A E8 C0 ED 04 8B C1 E8 CB 27  // ...............'
    0A50: 83 C3 02 8B C2 E8 C3 27 C3 8D 5D 11 E8 44 28 8A  // .......'..]..D(.
    0A60: E0 BA 06 00 C0 E8 07 74 03 80 CA 80 8A C4 C0 E8  // .......t........
    0A70: 03 24 03 3C 02 75 03 80 CA 40 3C 03 75 12 8A C4  // .$.<.u...@<.u...
    0A80: D0 E8 A8 01 74 03 80 E2 FD A8 02 74 03 80 E2 FB  // ....t......t....
    0A90: 8B C2 8D 9A 80 01 E8 82 27 C3 3C 01 74 3D 8B D0  // ........'.<.t=..
    0AA0: 0F B6 C6 24 3F 04 3C 8D 9A F8 01 E8 6D 27 0F B6  // ...$?.<.....m'..
    0AB0: C2 83 C0 1F C1 E0 03 8D 9A F4 01 E8 5D 27 0F B6  // ............]'..
    0AC0: DE C1 EB 06 C1 E3 02 2E F7 A7 76 0A 2E F7 B7 74  // ..........v....t
    0AD0: 0A 8D 9A F6 01 E8 43 27 83 C5 08 C3 10 00 0A 00  // ......C'........
    0AE0: 04 00 03 00 05 00 04 00 10 00 09 00 8D 9C A6 00  // ................
    0AF0: E8 B0 27 0A C0 74 1F 8D 9C A8 00 51 B1 03 E8 18  // ..'..t.....Q....
    0B00: 00 59 0B DB 74 10 E8 9A 27 32 C0 66 3D 00 03 0C  // .Y..t...'2.f=...
    0B10: 00 75 03 0B DB C3 33 DB C3 66 50 52 E8 84 27 3C  // .u....3..fPR..'<
    0B20: 02 75 39 80 FC 03 72 34 66 C1 E8 10 32 E4 3C 04  // .u9...r4f...2.<.
    0B30: 76 2A 03 C3 8B D0 83 C3 04 3B DA 73 1F E8 63 27  // v*.......;.s..c'
    0B40: 8A E0 80 E4 E0 C0 EC 05 24 1F 38 CC 74 08 32 E4  // ........$.8.t.2.
    0B50: FE C0 03 D8 EB E3 0B DB 5A 66 58 C3 33 DB 5A 66  // ........ZfX.3.Zf
    0B60: 58 C3 51 8D 9C A6 00 E8 39 27 0A C0 74 1B 8D 9C  // X.Q.....9'..t...
    0B70: A8 00 B1 12 E8 18 00 74 10 E8 27 27 66 C1 E0 10  // .......t..''f...
    0B80: 80 E4 07 75 04 B0 01 EB 02 32 C0 0A C0 59 C3 66  // ...u.....2...Y.f
    0B90: 50 52 E8 0E 27 3C 70 75 2B 66 C1 E8 10 32 E4 83  // PR..'<pu+f...2..
    0BA0: C3 05 03 C3 8B D0 3B DA 73 1A E8 F6 26 38 C8 74  // ......;.s...&8.t
    0BB0: 0D 66 C1 E8 10 32 E4 83 C0 03 03 D8 EB E8 0B DB  // .f...2..........
    0BC0: 5A 66 58 C3 33 DB 5A 66 58 C3 57 66 51 8D 9C 68  // ZfX.3.ZfX.WfQ..h
    0BD0: 01 8B FB 8B DF E8 3D 00 0B C9 74 0B 66 8B D1 E8  // ......=...t.f...
    0BE0: A1 0F 83 C7 1C EB EC 66 59 5F C3 50 53 51 B9 07  // .......fY_.PSQ..
    0BF0: 00 53 8B DA E8 AC 26 83 F8 00 5B 74 09 66 C1 E3  // .S....&...[t.f..
    0C00: 10 8B DA E8 44 22 59 5B 58 C3 51 53 B9 07 00 E8  // ....D"Y[X.QS....
    0C10: 51 22 5B 59 C3 66 50 53 83 C3 06 E8 85 26 5B 8B  // Q"[Y.fPS.....&[.
    0C20: C8 66 C1 E1 10 53 83 C3 02 E8 77 26 8B C8 5B 66  // .f...S....w&..[f
    0C30: 58 C3 8D 9C 48 01 32 C9 E8 0C 26 C3 57 B9 20 00  // X...H.2...&.W. .
    0C40: E8 2C 22 5F C3 E8 83 01 66 8B CA 66 52 E8 C4 06  // .,"_....f..fR...
    0C50: E8 D5 1C 66 5A 74 10 E8 3A 06 B3 00 E8 82 19 66  // ...fZt..:......f
    0C60: 3B CA 73 03 66 8B D1 8D 9C D0 03 E8 35 26 0B C0  // ;.s.f.......5&..
    0C70: 75 44 8D 9C 54 02 66 B8 48 3F 00 00 E8 84 25 B5  // uD..T.f.H?....%.
    0C80: 01 66 81 FA 78 69 00 00 72 25 83 C3 04 66 B8 78  // .f..xi..r%...f.x
    0C90: 69 00 00 E8 6D 25 B5 02 66 81 FA F0 D2 00 00 72  // i...m%..f......r
    0CA0: 0E 83 C3 04 66 B8 F0 D2 00 00 E8 56 25 B5 03 B1  // ....f......V%...
    0CB0: 03 E8 CF 01 EB 45 66 B9 08 00 00 00 66 33 D2 53  // .....Ef.....f3.S
    0CC0: 8D 9C 54 02 8B D3 5B E8 D9 25 0B C0 74 22 66 25  // ..T...[..%..t"f%
    0CD0: FF FF 00 00 66 D1 E0 53 8B DA E8 26 25 5B 66 C1  // ....f..S...&%[f.
    0CE0: CA 10 FE C2 66 C1 CA 10 83 C2 04 83 C3 02 E2 D7  // ....f...........
    0CF0: 66 C1 CA 10 8A EA B1 03 E8 88 01 E8 38 06 A8 01  // f...........8...
    0D00: 74 3F 8D 9C AE 03 E8 9A 25 3C 00 74 34 E8 CF 05  // t?......%<.t4...
    0D10: 8A EB E8 5C 01 32 ED E8 63 01 E8 A2 05 8D 9C BB  // ...\.2..c.......
    0D20: 02 E8 7F 25 33 C9 8A C8 E8 28 01 66 3B C2 74 0E  // ...%3....(.f;.t.
    0D30: 51 E8 43 01 FE C5 E8 44 01 59 E2 EC EB 03 B3 00  // Q.C....D.Y......
    0D40: C3 8D 9C BB 02 E8 5B 25 FE C8 8A E8 E8 2E 01 8D  // ......[%........
    0D50: 9C 40 03 B9 00 00 E8 EE 24 E8 C2 02 E8 D2 00 E8  // .@......$.......
    0D60: 0F 01 66 52 E8 AD 05 E8 BE 1B 66 5A 75 04 B3 00  // ..fR......fZu...
    0D70: EB 58 E8 F6 00 80 FD 01 77 07 E8 FA 00 0A ED 74  // .X......w......t
    0D80: 47 E8 1E 03 E8 32 11 80 FB 00 75 1D E8 A7 05 A8  // G....2....u.....
    0D90: 01 74 07 B1 0D E8 2B 19 EB 30 B5 01 E8 9E 05 E8  // .t....+..0......
    0DA0: 2F 0F B5 00 E8 96 05 EB 21 E8 BF 00 80 FD 01 76  // /.......!......v
    0DB0: 07 D0 ED E8 BB 00 EB BA E8 76 00 E8 B3 00 E8 B6  // .........v......
    0DC0: 00 FE CD E8 B7 00 EB AA B3 08 C3 8D 9C 29 01 E8  // .............)..
    0DD0: D1 24 66 33 D2 8A D0 66 B8 8C 0A 00 00 66 F7 E2  // .$f3...f.....f..
    0DE0: E8 31 05 E8 42 1B 75 3D 66 50 8D 9C 28 01 E8 B2  // .1..B.u=fP..(...
    0DF0: 24 3C 14 66 58 72 2E 66 50 8D 9C D0 03 E8 A3 24  // $<.fXr.fP......$
    0E00: 0B C0 66 58 74 1F B9 08 00 8D 9C D0 03 8B C1 D1  // ..fXt...........
    0E10: E0 03 D8 E8 8D 24 0B C0 75 02 E2 ED 66 25 FF FF  // .....$..u...f%..
    0E20: 00 00 66 D1 E0 66 0B C0 75 03 B8 48 3F 66 8B D0  // ..f..f..u..H?f..
    0E30: C3 8D 9C 2A 01 E8 6B 24 24 0F 8A E8 0A ED 75 02  // ...*..k$$.....u.
    0E40: B5 01 C3 B5 00 8D 9C 31 01 E8 57 24 A8 01 74 02  // .......1..W$..t.
    0E50: B5 01 C3 53 51 E8 1F 00 32 E4 8A C5 C1 E0 02 59  // ...SQ...2......Y
    0E60: 8D 9C 54 02 03 D8 E8 3A 24 5B C3 B1 02 E8 1D 00  // ..T....:$[......
    0E70: C3 B1 02 E8 0D 00 C3 B1 01 E8 11 00 C3 B1 01 E8  // ................
    0E80: 01 00 C3 53 8D 9C B8 02 E8 BC 23 5B C3 53 8D 9C  // ...S......#[.S..
    0E90: B8 02 E8 CA 23 5B C3 33 C9 E8 63 20 75 3C 66 BA  // ....#[.3..c u<f.
    0EA0: 37 F1 FF FF 66 33 C0 E8 E3 04 33 C0 E8 47 03 74  // 7...f3....3..G.t
    0EB0: 1C A9 C8 0E 74 F6 E8 3C F7 F6 C3 04 75 05 F6 C3  // ....t..<....u...
    0EC0: 18 74 E9 E8 30 00 50 E8 2C F8 58 EB DF E8 1C 00  // .t..0.P.,.X.....
    0ED0: 75 08 E8 31 00 8B C1 E8 1C F8 C3 8D 5D 28 66 C1  // u..1........](f.
    0EE0: E3 10 8D 5C 28 B9 49 00 E8 5F 1F C3 66 50 E8 B5  // ...\(.I.._..fP..
    0EF0: 04 8B C8 66 58 C3 66 52 66 BA FF FF FF FF 33 D0  // ...fX.fRf.....3.
    0F00: E8 8A 04 66 5A C3 50 53 52 E8 E0 FF 75 09 33 C0  // ...fZ.PSR...u.3.
    0F10: E8 E3 02 8B C8 EB 10 83 F9 02 74 0B E8 2C 08 80  // ..........t..,..
    0F20: FB 01 75 03 83 E1 FD 5A 5B 58 C3 56 66 33 C0 66  // ..u....Z[X.Vf3.f
    0F30: BA 00 F0 FF FF E8 4F 07 66 C1 E6 10 E8 C4 02 0B  // ......O.f.......
    0F40: C0 74 03 E8 1C 00 E8 2F 07 5E C3 66 52 66 8B D0  // .t...../.^.fRf..
    0F50: E8 CA 15 8D 9C 1C 03 E8 49 23 8A C2 E8 A4 22 66  // ........I#...."f
    0F60: 5A C3 50 51 E8 71 02 50 32 C0 E8 00 04 E8 CC 01  // Z.PQ.q.P2.......
    0F70: E8 98 00 8D 9C 40 03 E8 29 23 38 E8 74 0A 8A C5  // .....@..)#8.t...
    0F80: E8 80 22 B0 02 E8 E5 03 58 E8 CA 00 E8 A8 00 E8  // ..".....X.......
    0F90: 8C 00 8D 9C 4C 01 E8 0A 23 8B C8 8B D3 8D 9C 00  // ....L...#.......
    0FA0: 03 E8 FF 22 3B C1 74 05 B0 02 E8 C0 03 E8 3B FC  // ...";.t.......;.
    0FB0: 8D 9C 00 03 E8 43 15 8D 9C D8 02 E8 45 22 E8 8A  // .....C......E"..
    0FC0: FF 66 C1 CE 10 8B FE 66 C1 CE 10 E8 95 00 E8 D1  // .f.....f........
    0FD0: 00 E8 24 03 8A E9 8D 9C DC 02 32 C9 E8 68 22 E8  // ..$.......2..h".
    0FE0: 0D 03 66 25 FF 0F 00 00 59 58 66 BA FF FF FF FF  // ..f%....YXf.....
    0FF0: 33 D0 E8 92 06 33 D2 C3 53 66 50 8D 9C D4 02 E8  // 3....3..SfP.....
    1000: A1 22 8A C4 E8 FC 21 66 58 5B C3 53 66 50 8D 9C  // ."....!fX[.SfP..
    1010: D4 02 E8 8E 22 8A E0 E8 E9 21 66 58 5B C3 E8 73  // ...."....!fX[..s
    1020: 02 E8 2E 02 8A DD E8 7F 16 8A E9 8D 9C 3C 03 32  // .............<.2
    1030: C9 E8 13 22 0B DB C3 83 EC 08 8B EC E8 55 02 E8  // ...".........U..
    1040: 10 02 E8 05 16 8D 9C 4C 03 E8 57 22 8A 46 00 E8  // .......L..W".F..
    1050: B1 21 83 C4 08 C3 8D 9C D4 02 E8 46 22 32 C0 E8  // .!.........F"2..
    1060: A1 21 C3 E8 0A 00 8D 9C D0 02 32 C9 E8 D8 21 C3  // .!........2...!.
    1070: B5 00 8D 1D E8 2C 22 66 8B D0 8D 9C 02 03 E8 22  // .....,"f......."
    1080: 22 0B C0 74 1C 51 8B C8 8D 9C 06 03 E8 14 22 66  // "..t.Q........"f
    1090: C1 E0 10 8B C1 59 66 3B C2 75 04 B5 00 EB 02 B5  // .....Yf;.u......
    10A0: 02 C3 E8 2B 02 8D 9C 40 03 B1 03 E8 99 21 E8 D5  // ...+...@.....!..
    10B0: F7 8D 9C 40 03 B1 02 E8 8D 21 E8 95 01 80 FD 00  // ...@.....!......
    10C0: 75 14 E8 A6 FD E8 8E 02 E8 88 FD 66 8B D0 E8 77  // u..........f...w
    10D0: 02 E8 8E 02 EB 21 E8 4A 02 E8 6C 02 E8 73 01 80  // .....!.J..l..s..
    10E0: FD 02 B5 04 75 0B 81 FA 74 40 76 05 B5 08 66 D1  // ....u...t@v...f.
    10F0: EA E8 6E 02 E8 5F 02 E8 2B 00 C3 66 52 52 32 ED  // ..n.._..+..fRR2.
    1100: 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B C8 5A 51 66  // ........f3...ZQf
    1110: 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59 66 F7 F1 66  // ....f..f...Yf..f
    1120: 8B C8 66 5A C3 B5 00 E8 EA 01 E8 F7 17 75 03 E8  // ..fZ.........u..
    1130: 11 FD 8D 9C 48 03 32 C9 E8 0C 21 C3 53 E8 5F 01  // ....H.2...!.S._.
    1140: 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8 55 21 8A E8  // f....M......U!..
    1150: 8D 9C B4 02 E8 4C 21 8A C8 E8 A6 14 8A EB 5B C3  // .....L!.......[.
    1160: 57 53 53 E8 D6 FF E8 2B 01 5B E8 0B 15 74 66 80  // WSS....+.[...tf.
    1170: FD 00 75 29 53 E8 DB FC 66 8B D0 E8 08 F7 8A CD  // ..u)S...f.......
    1180: 51 E8 E7 FC 8A FD 59 E8 71 FF 5B E8 15 21 66 25  // Q.....Y.q.[..!f%
    1190: FF FF 00 00 66 3B C8 73 39 32 DB EB 38 80 FD 02  // ....f;.s92..8...
    11A0: 75 16 E8 6F 01 E8 8D 17 74 28 8D 1F E8 F4 20 3D  // u..o....t(.... =
    11B0: 74 40 76 1E 32 DB EB 1D 80 FD 03 75 15 53 E8 D3  // t@v.2......u.S..
    11C0: 00 B3 03 E8 1B 14 5B E8 D9 20 3B C2 76 04 32 DB  // ......[.. ;.v.2.
    11D0: EB 03 80 CB 01 5B 5F C3 53 8B F0 E8 3F 19 23 F0  // .....[_.S...?.#.
    11E0: 74 09 8B C6 E8 DE 17 8B F3 0B DB 5B C3 51 E8 15  // t..........[.Q..
    11F0: FD E8 0F 00 59 C3 51 50 E8 22 19 8B C8 58 E8 02  // ....Y.QP."...X..
    1200: 00 59 C3 57 53 E8 EC 1A 0B C0 74 09 8B 1D 83 C7  // .Y.WS.....t.....
    1210: 02 3B C3 75 F7 8B 1D 83 FB FF 74 0B 83 C7 02 85  // .;.u......t.....
    1220: D9 74 F2 8B C3 EB 02 33 C0 0B C0 5B 5F C3 33 C0  // .t.....3...[_.3.
    1230: E8 C3 FF 74 13 E8 A0 FF 8B DE B9 FB 00 E8 F5 1B  // ...t............
    1240: 83 C6 08 E8 87 18 EB E8 BB F0 16 B8 5A A5 E8 CA  // ............Z...
    1250: 1F C3 53 66 50 8D 9C 40 03 E8 47 20 8A E8 66 58  // ..SfP..@..G ..fX
    1260: 5B C3 8D 9C 69 03 E8 3A 20 C3 8D 9C 64 03 E8 32  // [...i..: ...d..2
    1270: 20 0B C0 C3 53 66 50 8D 9C D4 02 E8 25 20 8A C8  //  ...SfP.....% ..
    1280: 66 58 5B C3 53 66 50 8D 9C D5 02 E8 15 20 8A C8  // fX[.SfP...... ..
    1290: 66 58 5B C3 53 8D 5C 14 E8 08 20 8B D0 5B C3 53  // fX[.S.\... ..[.S
    12A0: 66 50 8D 5C 16 E8 FB 1F 8B D0 66 58 5B C3 53 66  // fP.\......fX[.Sf
    12B0: 50 8D 9C 50 03 E8 EB 1F 66 8B D0 66 58 5B C3 53  // P..P....f..fX[.S
    12C0: 66 50 8D 9C 54 03 E8 DA 1F 66 8B D0 66 58 5B C3  // fP..T....f..fX[.
    12D0: 53 66 50 8D 5C 10 E8 CA 1F 8B C8 66 58 5B C3 66  // SfP.\......fX[.f
    12E0: 50 53 8D 9C 41 03 E8 BA 1F 5B 8A D8 66 58 C3 53  // PS..A....[..fX.S
    12F0: 8D 5C 08 E8 AD 1F 5B C3 53 50 8D 9C 4C 03 E8 A2  // .\....[.SP..L...
    1300: 1F 8A C8 58 5B C3 53 50 8D 9C 4D 03 E8 94 1F 8A  // ...X[.SP..M.....
    1310: C8 58 5B C3 53 66 50 8D 5C 0C E8 86 1F 8B D0 66  // .X[.SfP.\......f
    1320: 58 5B C3 53 66 50 8D 9C 00 03 E8 76 1F 66 33 D2  // X[.SfP.....v.f3.
    1330: 8B D0 66 58 5B C3 8D 5C 04 E8 67 1F C3 51 8D 5C  // ..fX[..\..g..Q.\
    1340: 04 32 C9 E8 01 1F 59 C3 8D 9C 50 03 E8 54 1F 66  // .2....Y...P..T.f
    1350: 8B C2 E8 AE 1E C3 53 8D 9C 40 03 B1 01 E8 E7 1E  // ......S..@......
    1360: 5B C3 8D 9C 54 03 66 8B C2 E8 97 1E C3 53 51 8A  // [...T.f......SQ.
    1370: E8 E8 C2 FF 24 FD 0A E8 E8 C2 FF 59 5B C3 66 50  // ....$......Y[.fP
    1380: 8D 9C D8 02 E8 1C 1F 66 8B D0 66 58 C3 53 66 50  // .......f..fX.SfP
    1390: 51 66 8B C8 BB 00 00 E8 0C 16 23 C2 0B C1 E8 0E  // Qf........#.....
    13A0: 16 59 66 58 5B C3 BB 00 00 E8 FA 15 66 25 CA 0E  // .YfX[.......f%..
    13B0: 00 00 C3 E8 3D 1A E8 B5 19 E8 93 19 75 06 E8 6E  // ....=.......u..n
    13C0: 17 E8 97 19 C3 B0 01 C3 55 B3 01 E8 C8 1C 5D C3  // ........U.....].
    13D0: 66 53 66 BB 04 00 00 00 E8 05 00 33 C0 66 5B C3  // fSf........3.f[.
    13E0: 55 66 C1 E3 10 BB 00 00 E8 AB 1C 5D C3 E8 FC 1A  // Uf.........]....
    13F0: BB 0A 00 E8 B9 15 C3 BB 0A 00 E8 A9 15 66 8B C8  // .............f..
    1400: E8 E9 1A BB 0A 00 66 2B C1 E8 A3 15 C3 E8 29 00  // ......f+......).
    1410: 0B C9 74 22 E8 14 FB E8 2E 07 66 51 66 8B C8 BB  // ..t"......fQf...
    1420: 07 00 E8 81 15 66 25 00 FE 00 00 66 0B C1 E8 7E  // .....f%....f...~
    1430: 15 66 59 0C 01 C3 32 C0 C3 E8 68 02 0B C9 75 06  // .fY...2...h...u.
    1440: E8 C3 FA E8 6E 02 51 E8 BC FA 66 C1 E6 10 33 C0  // ....n.Q...f...3.
    1450: E8 9A FD 74 09 E8 13 03 75 F6 33 C8 EB F2 58 23  // ...t....u.3...X#
    1460: C8 66 C1 EE 10 C3 A8 10 75 63 E8 ED 06 66 C1 E6  // .f......uc...f..
    1470: 10 33 C0 E8 80 FD 74 35 E8 5D FD 50 51 8B C8 E8  // .3....t5.].PQ...
    1480: F6 01 85 C1 59 58 74 0D 50 E8 AA FE 24 03 3C 03  // ....YXt.P...$.<.
    1490: 58 75 E0 EB 0C 50 E8 9D FE A8 01 58 74 D5 E8 6A  // Xu...P.....Xt..j
    14A0: FB 50 E8 D7 07 58 B5 00 E8 92 FE EB C6 E8 C8 01  // .P...X..........
    14B0: E8 25 FD E8 31 01 B1 00 E8 4B 07 66 C1 EE 10 E8  // .%..1....K.f....
    14C0: 91 06 A8 20 75 42 A8 40 75 03 E8 07 0E E8 78 06  // ... uB.@u.....x.
    14D0: 0A C0 75 07 32 C9 B5 01 E8 AA 0E E8 9A 01 E8 F7  // ..u.2...........
    14E0: FC E8 30 FE E8 41 14 75 14 E8 5F 02 0A DB 74 0D  // ..0..A.u.._...t.
    14F0: E8 18 FB E8 86 07 B5 00 E8 42 FE EB 08 E8 63 07  // .........B....c.
    1500: B5 01 E8 38 FE E8 E3 00 C3 E8 11 16 C3 E8 1E FD  // ...8............
    1510: E8 A9 06 33 C9 E8 9C 01 66 33 D2 66 33 C0 E8 6C  // ...3....f3.f3..l
    1520: FE E8 4F 00 B1 FF E8 81 00 33 C0 E8 C8 FC 74 0A  // ..O......3....t.
    1530: E8 A5 FC 50 E8 CF 07 58 EB F1 32 C9 E8 C1 01 E8  // ...P...X..2.....
    1540: DB 15 0B C0 C3 E8 E6 FC E8 71 06 66 33 C0 66 BA  // .........q.f3.f.
    1550: 00 F0 FF FF E8 30 01 51 B1 01 E8 89 01 59 33 C0  // .....0.Q.....Y3.
    1560: E8 93 FC 74 0A E8 70 FC 50 E8 65 07 58 EB F1 E8  // ...t..p.P.e.X...
    1570: 9F 0D C3 B8 02 00 E8 5F FC 74 2E B1 07 E8 E4 11  // ......._.t......
    1580: B8 02 00 E8 6F F0 F6 C3 04 75 12 E8 DC 1A 83 3D  // ....o....u.....=
    1590: 00 75 0A E8 87 15 83 E0 FD E8 8A 15 C3 66 B8 02  // .u...........f..
    15A0: 00 00 00 E8 E7 FD E8 51 F2 C3 E8 0B 14 74 23 38  // .......Q.....t#8
    15B0: E1 76 04 8A CC EB 06 38 C1 73 02 8A C8 BB 02 00  // .v.....8.s......
    15C0: E8 E3 13 8A E1 E8 E7 13 B1 04 E8 97 11 0C 01 C3  // ................
    15D0: 0C 01 C3 51 E8 E1 13 74 0C 8A CC BB 02 00 E8 C5  // ...Q...t........
    15E0: 13 8A C4 8A E1 59 C3 E8 FE 05 C3 E8 09 06 C3 E8  // .....Y..........
    15F0: 0D 19 75 18 E8 81 00 E8 DE FB 80 F9 01 75 0E 51  // ..u..........u.Q
    1600: E8 60 06 B5 01 E8 35 FD 59 E8 DF FF C3 E8 D7 FF  // .`....5.Y.......
    1610: 51 E8 BD 06 B5 00 E8 24 FD 59 C3 B8 02 00 E8 B7  // Q......$.Y......
    1620: FB 74 03 E8 3E 11 C3 E8 BD 04 3B C1 7C 3A 8B C1  // .t..>.....;.|:..
    1630: E8 FD 04 E8 B5 0E 8B C8 51 E8 2D 05 E8 F1 04 59  // ........Q.-....Y
    1640: E8 A8 0E 3B C8 72 02 8B C1 8D 5C 04 E8 CC 1B 32  // ...;.r....\....2
    1650: C9 B5 0F E8 F3 0C E8 D3 17 FE C1 38 C1 72 F2 8D  // ...........8.r..
    1660: 5C 04 E8 3E 1C 0B C0 C3 33 C0 C3 BB 00 18 33 C0  // \..>....3.....3.
    1670: 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00 E8 27 13 66  // ........S....'.f
    1680: 25 FF 0F 00 00 5B C3 53 66 50 66 51 66 8B C8 BB  // %....[.SfPfQf...
    1690: 03 00 E8 11 13 66 23 C2 66 0B C1 E8 11 13 66 59  // .....f#.f.....fY
    16A0: 66 58 5B C3 66 50 BB 05 00 E8 FA 12 25 FF 0F 8B  // fX[.fP......%...
    16B0: C8 66 58 C3 E8 66 14 23 C8 66 50 BB 05 00 E8 E5  // .fX..f.#.fP.....
    16C0: 12 25 00 F0 0B C1 E8 E6 12 66 58 C3 66 50 53 BB  // .%.......fX.fPS.
    16D0: 06 00 E8 D1 12 A8 10 75 09 BB F0 16 E8 C4 1B 3D  // .......u.......=
    16E0: 5A A5 5B 66 58 C3 66 50 53 BB 06 00 E8 B7 12 80  // Z.[fX.fPS.......
    16F0: F1 01 C0 E1 04 24 EF 0A C1 E8 B3 12 5B 66 58 C3  // .....$......[fX.
    1700: 53 66 50 BB F8 16 E8 9A 1B 8A C1 E8 F5 1A 66 58  // SfP...........fX
    1710: 5B C3 53 BB F8 16 E8 8A 1B 83 E0 01 5B C3 53 66  // [.S.........[.Sf
    1720: 50 BB 07 00 E8 7F 12 F6 C4 01 66 58 B0 06 74 02  // P.........fX..t.
    1730: B0 08 5B C3 53 BB 07 00 E8 6B 12 80 E4 FE 80 FD  // ..[.S....k......
    1740: 06 74 03 80 CC 01 E8 66 12 5B C3 66 50 BB 06 00  // .t.....f.[.fP...
    1750: E8 53 12 24 40 C0 E8 06 8A D8 66 58 C3 B3 81 E8  // .S.$@.....fX....
    1760: 29 19 75 04 83 C8 01 C3 33 C0 C3 50 66 51 E8 67  // ).u.....3..PfQ.g
    1770: FA 83 EC 04 8B EC 66 33 C0 66 89 46 00 33 D2 8D  // ......f3.f.F.3..
    1780: BC 68 01 8D 1D E8 1B 1B 0B C0 74 22 8B DF B0 00  // .h........t"....
    1790: E8 12 01 74 14 8B DF E8 7B F4 66 8B 46 00 66 3B  // ...t....{.f.F.f;
    17A0: C8 72 06 8B D7 66 89 4E 00 83 C7 1C EB D5 0B D2  // .r...f.N........
    17B0: 74 0A 8D 9C 4C 01 E8 32 F4 E9 88 00 66 33 C0 66  // t...L..2....f3.f
    17C0: 89 46 00 8D BC F4 01 33 D2 8D 1D E8 D5 1A 0B C0  // .F.....3........
    17D0: 74 58 66 50 E8 9D F0 3C 01 66 58 74 05 3D 40 06  // tXfP...<.fXt.=@.
    17E0: 73 43 66 52 66 8B D0 8D 5D 04 E8 B6 1A E8 5D 00  // sCfRf...].....].
    17F0: 8B CA 66 5A 74 2F 56 8D 9C 4C 01 8B F1 E8 0A F4  // ..fZt/V..L......
    1800: 5E B0 00 E8 9F 00 74 1D 8D 1D E8 96 1A 8B D9 8B  // ^.....t.........
    1810: 47 06 66 C1 E0 10 8B 47 02 66 3B 46 00 72 06 8B  // G.f....G.f;F.r..
    1820: D1 66 89 46 00 83 C7 08 EB 9F 0B D2 74 16 56 8D  // .f.F........t.V.
    1830: 9C 4C 01 8B F2 E8 D2 F3 5E 53 8D 9C 62 01 33 C0  // .L......^S..b.3.
    1840: E8 D8 19 5B 83 C4 04 0B D2 66 59 58 C3 57 53 51  // ...[.....fYX.WSQ
    1850: E8 C8 14 3B 55 02 75 18 66 C1 CA 10 8B DA 66 C1  // ...;U.u.f.....f.
    1860: CA 10 3B 5D 06 75 09 0A C0 74 0E 3A 45 1B 74 09  // ..;].u...t.:E.t.
    1870: 83 C7 1C E2 DE 33 D2 EB 02 8B D7 0B D2 59 5B 5F  // .....3.......Y[_
    1880: C3 51 66 52 E8 94 14 3A 65 1A 75 09 0A C0 74 0E  // .QfR...:e.u...t.
    1890: 3A 45 1B 74 09 83 C7 1C E2 ED 33 FF EB 00 0B FF  // :E.t......3.....
    18A0: 66 5A 59 C3 C3 66 51 66 52 53 53 66 C1 CE 10 8B  // fZY..fQfRSSf....
    18B0: DE 66 C1 CE 10 E8 EB 19 5B 66 8B D0 E8 56 F3 3B  // .f......[f...V.;
    18C0: CA 72 0A 66 3B CA 72 05 E8 95 F8 75 02 32 C0 5B  // .r.f;.r....u.2.[
    18D0: 66 5A 66 59 C3 56 57 E8 A7 FF 8B F7 E8 2B F3 5F  // fZfY.VW......+._
    18E0: 5E C3 66 50 53 66 51 52 57 56 51 8B DE B9 08 00  // ^.fPSfQRWVQ.....
    18F0: E8 42 15 59 8D 5C 08 8B C1 66 C1 E0 10 8A C2 E8  // .B.Y.\...f......
    1900: 01 19 F6 C2 03 75 24 8B C1 24 7F BF C5 19 80 3D  // .....u$..$.....=
    1910: FF 0F 84 0F 01 3A 05 75 0D 66 8B 45 01 66 B9 00  // .....:.u.f.E.f..
    1920: 05 02 00 E9 96 00 83 C7 05 EB E3 F6 C2 01 74 25  // ..............t%
    1930: 8B C1 E8 70 01 0F 84 EB 00 33 C9 8A CC 8A D0 0A  // ...p.....3......
    1940: C0 75 12 8D 5C 08 66 25 FF FF 00 00 66 C1 E0 08  // .u..\.f%....f...
    1950: E8 B0 18 EB B2 8A E1 8A CA 80 E1 0C C0 E9 02 80  // ................
    1960: E2 F0 C0 EA 04 8A EA 80 FC 70 72 2A 80 FC 75 73  // .........pr*..us
    1970: 25 80 EC 70 8A C4 32 E4 50 E8 30 02 8B D8 58 38  // %..p..2.P.0...X8
    1980: D8 72 05 33 C0 E9 9C 00 E8 28 02 E8 15 19 0B C0  // .r.3.....(......
    1990: 0F 84 90 00 EB 1B 32 C0 E8 E6 FE 0F 84 85 00 8D  // ......2.........
    19A0: 5C 16 8B 05 E8 74 18 8B 45 06 66 C1 E0 10 8B 45  // \....t..E.f....E
    19B0: 02 50 E8 36 0B 66 C1 E1 10 8B C8 58 8D 1C E8 42  // .P.6.f.....X...B
    19C0: 18 66 50 8D 5C 04 66 8B C1 E8 37 18 66 58 66 C1  // .fP.\.f...7.fXf.
    19D0: E8 10 66 81 E1 FF FF 00 00 66 F7 E1 66 50 8D 5C  // ..f......f..fP.\
    19E0: 06 E8 BF 18 8B C8 66 58 66 D3 E0 66 C1 E8 10 40  // ......fXf..f...@
    19F0: 8D 5C 14 E8 25 18 BF 25 1A 83 F9 01 74 11 BF 2D  // .\..%..%....t..-
    1A00: 1A 81 F9 01 01 74 08 BF 35 1A 83 F9 02 75 15 8D  // .....t..5....u..
    1A10: 5C 0C 66 8B 05 E8 EB 17 8D 5C 10 66 8B 45 04 E8  // \.f......\.f.E..
    1A20: E1 17 0B DB 5E 5F 5A 66 59 5B 66 58 C3 00 40 01  // ....^_ZfY[fX..@.
    1A30: 90 01 01 40 01 90 01 02 80 02 90 01 03 80 02 90  // ...@............
    1A40: 01 04 40 01 90 01 05 40 01 90 01 06 80 02 90 01  // ..@....@........
    1A50: 07 D0 02 5E 01 0D 40 01 90 01 0E 80 02 90 01 0F  // ...^..@.........
    1A60: 80 02 5E 01 10 80 02 5E 01 11 80 02 E0 01 12 80  // ..^....^........
    1A70: 02 E0 01 13 80 02 90 01 23 20 04 90 01 32 20 04  // ........# ...2 .
    1A80: B0 02 33 20 04 C0 02 62 80 02 E0 01 FF 05 0A 05  // ..3 ...b........
    1A90: 05 05 00 00 00 05 0B 06 05 05 00 00 00 08 10 08  // ................
    1AA0: 08 08 00 00 00 56 E8 58 15 80 E4 01 3B 04 74 09  // .....V.X....;.t.
    1AB0: 83 C6 04 E2 F7 33 C0 EB 05 8B 44 02 0B C0 5E C3  // .....3....D...^.
    1AC0: 57 53 50 E8 3B 15 83 E9 0A E8 E0 00 83 F8 05 76  // WSP.;..........v
    1AD0: 03 B8 05 00 D1 E0 03 C8 FB A5 83 C6 02 E2 FA B8  // ................
    1AE0: FF FF AB 58 5B 5F C3 66 53 51 66 52 E8 41 00 E8  // ...X[_.fSQfR.A..
    1AF0: 77 00 66 C1 E8 10 66 0F B7 D8 66 B8 00 00 00 03  // w.f...f...f.....
    1B00: 66 D3 E8 66 33 D2 66 F7 F3 E8 DF 09 66 5A 59 66  // f..f3.f.....fZYf
    1B10: 5B C3 53 66 50 BB 07 00 E8 8B 0E 0A C0 66 58 5B  // [.SfP........fX[
    1B20: C3 53 66 50 BB 07 00 E8 7C 0E A8 01 66 58 5B C3  // .SfP....|...fX[.
    1B30: 53 66 50 8D 5C 06 E8 6A 17 8A C8 66 58 5B C3 51  // SfP.\..j...fX[.Q
    1B40: B9 08 00 E8 04 13 59 C3 53 8D 5C 08 E8 54 17 24  // ......Y.S.\..T.$
    1B50: 03 5B C3 8D 5C 09 E8 4A 17 C3 51 53 B1 01 8A E8  // .[..\..J..QS....
    1B60: 8D 5C 08 E8 E1 16 5B 59 C3 53 8D 1C E8 34 17 5B  // .\....[Y.S...4.[
    1B70: C3 53 8D 5C 04 E8 2B 17 5B C3 53 8D 5C 16 E8 22  // .S.\..+.[.S.\.."
    1B80: 17 5B C3 53 66 52 33 C0 E8 C2 FC 66 5A 75 1B E8  // .[.SfR3....fZu..
    1B90: 34 00 74 16 E8 15 00 40 83 F8 05 73 0D E8 63 16  // 4.t....@...s..c.
    1BA0: 48 E8 0F 00 66 8B C2 E8 59 16 5B C3 BB 00 1E E8  // H...f...Y.[.....
    1BB0: F1 16 C3 BB 08 1E C1 E0 03 03 D8 C3 BB 00 1E B9  // ................
    1BC0: 32 00 E8 70 12 C3 51 E8 E2 FF 0B C0 74 12 8B C8  // 2..p..Q.....t...
    1BD0: BB 08 1E E8 CD 16 66 3B C2 74 07 83 C3 08 E2 F3  // ......f;.t......
    1BE0: 0B DB 59 C3 C3 00 C3 00 BB 20 DF E8 63 36 E8 83  // ..Y...... ..c6..
    1BF0: F6 B5 01 E8 D3 07 C3 BB 00 DF E8 54 36 E8 74 F6  // ...........T6.t.
    1C00: B5 00 E8 C4 07 C3 80 F9 00 75 0A E8 24 12 8A C8  // .........u..$...
    1C10: B5 02 E8 0B 09 0B F6 74 2E E8 58 F6 B5 01 51 E8  // .......t..X...Q.
    1C20: AE 07 59 E8 B1 07 56 33 F6 B5 00 E8 1B 07 5E B5  // ..Y...V3......^.
    1C30: 01 E8 C4 F6 E8 E9 08 E8 A6 09 E8 37 F6 8D 9C 00  // ...........7....
    1C40: 03 E8 9A 07 E8 E3 07 66 C1 CE 10 B5 01 E8 F9 06  // .......f........
    1C50: E8 00 FF A8 40 75 07 32 C0 B5 01 E8 6C 08 66 C1  // ....@u.2....l.f.
    1C60: CE 10 C3 E8 0E F6 B5 01 E8 39 07 B5 00 E8 67 07  // .........9....g.
    1C70: E8 CA 07 B1 0F E8 4B 0A E8 26 00 C3 E8 52 00 E8  // ......K..&...R..
    1C80: 02 F6 B5 00 E8 1D 07 B5 00 E8 4B 07 E8 77 F6 E8  // ..........K..w..
    1C90: A0 11 38 C1 74 0A 80 F9 0B 74 05 B5 03 E8 80 08  // ..8.t....t......
    1CA0: C3 B1 10 E8 1D 0A E8 A9 F5 80 FD 00 74 06 B1 01  // ............t...
    1CB0: E8 B1 0A C3 E8 94 05 80 FD 01 75 07 B5 02 E8 C3  // ..........u.....
    1CC0: 05 EB 03 E8 F3 01 B1 0D E8 F8 09 B1 03 E8 54 00  // ..............T.
    1CD0: C3 E8 CB F5 0B D2 74 05 B1 00 E8 24 0A B1 02 E8  // ......t....$....
    1CE0: 42 00 E8 51 F6 A8 01 74 12 E8 66 F5 80 FD 00 75  // B..Q...t..f....u
    1CF0: 0A B1 0C E8 CD 09 B0 02 E8 91 04 B1 00 E8 64 0A  // ..............d.
    1D00: B1 0D E8 1F 00 C3 B1 07 E8 59 0A E8 91 F5 0B D2  // .........Y......
    1D10: 75 0C E8 FF F5 E8 0C 0C 75 09 E8 FF 0A C3 B1 07  // u.......u.......
    1D20: E8 DE 09 C3 E8 ED F5 E8 FA 0B 75 24 51 E8 34 0A  // ..........u$Q.4.
    1D30: 59 80 F9 0C 75 1A 33 D2 56 83 C6 08 E8 23 0C 5E  // Y...u.3.V....#.^
    1D40: 0A C0 75 0C B9 0A 00 E8 3C 11 42 83 FA 1E 75 E8  // ..u.....<.B...u.
    1D50: C3 80 FB 01 0F 84 C5 00 E8 93 05 66 C1 E1 10 8D  // ...........f....
    1D60: 9C 35 01 E8 3D 15 A8 01 74 05 51 E8 2B 04 59 E8  // .5..=...t.Q.+.Y.
    1D70: 5E F5 B0 04 E8 8A 05 66 BA 50 01 40 50 E8 64 05  // ^......f.P.@P.d.
    1D80: E8 D9 0A 75 7E 66 BA 50 01 50 4F 8D 9C 2D 01 E8  // ...u~f.P.PO..-..
    1D90: 11 15 24 06 3C 02 75 02 B6 02 B0 05 E8 62 05 E8  // ..$.<.u......b..
    1DA0: 42 05 8D 5C 28 03 D8 E8 B2 0A 75 57 0A FF 75 09  // B..\(.....uW..u.
    1DB0: B0 0A E8 4C 05 32 DB EB 4A 51 33 C9 8A CF E8 23  // ...L.2..JQ3....#
    1DC0: 05 03 C8 E8 28 05 59 B0 07 E8 35 05 66 BA 50 01  // ....(.Y...5.f.P.
    1DD0: 10 30 33 DB E8 85 0A 74 0F 51 8A EB 8D 9C 44 01  // .03....t.Q....D.
    1DE0: B1 02 E8 62 14 59 EB 61 E8 F9 04 66 C1 C9 10 2B  // ...b.Y.a...f...+
    1DF0: C1 66 C1 C1 10 3D 80 00 0F 82 76 FF B0 08 E8 00  // .f...=....v.....
    1E00: 05 EB 43 51 8A EB 8D 9C 44 01 B1 02 E8 38 14 59  // ..CQ....D....8.Y
    1E10: 66 BA 50 01 10 30 33 DB E8 41 0A EB 2C 8D 5C 28  // f.P..03..A..,.\(
    1E20: 03 D9 53 8A E9 B1 32 51 5F E8 A4 F4 8A E9 B1 A0  // ..S...2Q_.......
    1E30: BA 00 80 E8 FB 09 80 FF 01 5B 74 0A B1 A2 E8 F0  // .........[t.....
    1E40: 09 80 FF 01 75 03 B0 00 C3 B0 01 C3 51 B1 0C E8  // ....u.......Q...
    1E50: D2 FE 59 B0 01 E8 A9 04 56 83 C6 08 E8 03 0B 5E  // ..Y.....V......^
    1E60: 0A C0 75 04 B3 10 EB 3F B0 02 E8 94 04 E8 38 00  // ..u....?......8.
    1E70: 74 11 B0 03 E8 8A 04 B0 01 E8 10 03 75 29 E8 27  // t...........u).'
    1E80: 00 75 24 66 BA 0C 00 90 43 8D 9C 30 01 E8 CC 09  // .u$f....C..0....
    1E90: 66 BA 20 00 90 41 8D 9C 34 01 E8 BF 09 E8 AB 03  // f. ..A..4.......
    1EA0: B0 09 E8 5C 04 33 DB C3 E8 25 F4 66 BA 00 00 90  // ...\.3...%.f....
    1EB0: 47 8D 9C 28 01 E8 A4 09 C3 B1 0C E8 66 FE B1 00  // G..(........f...
    1EC0: E8 A1 08 B1 01 E8 9C 08 8D 9C AC 03 66 B8 00 00  // ............f...
    1ED0: 00 00 E8 2E 13 B0 01 E8 B2 02 74 0A B5 04 E8 B9  // ..........t.....
    1EE0: 03 B3 08 E9 3F 01 B1 08 E8 D8 07 E8 D2 02 B1 09  // ....?...........
    1EF0: E8 D0 07 E8 C5 01 8D 9C B8 03 66 33 C0 E8 03 13  // ..........f3....
    1F00: E8 60 01 B9 90 01 E8 72 0F B0 01 E8 63 02 B5 02  // .`.....r....c...
    1F10: E8 7B 03 E8 74 01 E8 8D 03 E8 E0 01 B5 03 E8 6D  // .{..t..........m
    1F20: 03 33 C9 E8 00 01 F6 C5 01 75 34 B5 02 E8 5E 03  // .3.......u4...^.
    1F30: E8 20 01 F6 C5 04 74 08 B5 01 E8 5D 03 E9 CC 00  // . ....t....]....
    1F40: 8A FD 80 E7 03 E8 E8 00 80 E3 03 38 FB 75 0D E8  // ...........8.u..
    1F50: 4C 01 75 08 B5 02 E8 41 03 E9 B0 00 E8 67 01 FE  // L.u....A.....g..
    1F60: C1 E8 7B F3 38 D9 75 BB 8D 9C AC 03 E8 34 13 3C  // ..{.8.u......4.<
    1F70: 03 74 05 E8 ED 00 EB 9B 8D 9C B0 03 66 33 C0 E8  // .t..........f3..
    1F80: 81 12 8D 9C 2A 01 E8 1A 13 A8 40 74 0C B1 13 E8  // ....*.....@t....
    1F90: 31 07 B0 03 E8 DA 01 EB 0A B1 0A E8 25 07 B0 02  // 1...........%...
    1FA0: E8 CE 01 B5 04 E8 E6 02 E8 DF 00 E8 F8 02 E8 4B  // ...............K
    1FB0: 01 B5 05 E8 D8 02 33 C9 E8 6B 00 80 FD 07 75 05  // ......3..k....u.
    1FC0: E8 86 00 75 2E 51 B5 04 E8 C3 02 59 F6 C5 01 75  // ...u.Q.....Y...u
    1FD0: 07 B5 03 E8 C4 02 EB 34 E8 78 00 8A D5 E8 E6 00  // .......4.x......
    1FE0: E8 70 00 38 EA 75 0C E8 B4 00 75 07 B5 02 E8 A9  // .p.8.u....u.....
    1FF0: 02 EB 19 FE C1 E8 E7 F2 38 D9 75 BC 8D 9C AC 03  // ........8.u.....
    2000: E8 A0 12 3C 04 75 05 E8 59 00 EB 9C B0 00 E8 60  // ...<.u..Y......`
    2010: 01 B1 0B E8 AD 06 8D 9C AD 03 E8 86 12 B3 00 0A  // ................
    2020: C0 74 02 B3 08 C3 8D 9C C0 03 E8 0F 00 8A E8 C3  // .t..............
    2030: 53 8D 9C C4 03 E8 04 00 5B 8A D8 C3 51 E8 63 12  // S.......[...Q.c.
    2040: C0 E1 02 D3 E8 24 0F 59 C3 8D 9C C2 03 E8 53 12  // .....$.Y......S.
    2050: A8 01 C3 8D 9C B8 03 E8 05 12 C3 8D 9C B8 03 E8  // ................
    2060: E5 11 C3 33 C9 33 D2 E8 E9 FF 38 D5 76 02 8A D5  // ...3.3....8.v...
    2070: FE C1 E8 6A F2 38 D9 72 EE 33 C9 8A EA 8D 9C 5C  // ...j.8.r.3.....\
    2080: 03 E8 C3 11 B1 0B E8 DB 06 C3 E8 43 F2 8D 9C B8  // ...........C....
    2090: 03 E8 0F 12 66 BA 03 01 80 83 E8 BF 07 C3 51 53  // ....f.........QS
    20A0: 8D 9C B0 03 E8 B8 11 FE C5 E8 9B 11 80 FD 06 72  // ...............r
    20B0: 07 B5 02 E8 E4 01 33 C9 5B 59 C3 66 33 C0 8D 9C  // ......3.[Y.f3...
    20C0: B0 03 E8 3E 11 C3 32 ED E8 65 FF 80 E3 0C C0 EB  // ...>..2..e......
    20D0: 02 B7 03 2A FB C0 E3 03 8A EB 80 FB 18 72 03 80  // ...*.........r..
    20E0: CD 20 E8 4B FF 80 E3 03 38 FB 72 02 8A DF 80 FB  // . .K....8.r.....
    20F0: 03 75 03 80 CD 04 0A EB E8 60 FF C3 E8 D1 F1 8D  // .u.......`......
    2100: 9C C0 03 66 BA 02 02 90 45 E8 50 07 C3 E8 C0 F1  // ...f....E.P.....
    2110: 66 BA 00 01 90 42 8D 9C B4 03 E8 3F 07 E8 B0 F1  // f....B.....?....
    2120: 66 BA 03 01 90 45 8D 9C B8 03 E8 2F 07 E8 E4 F1  // f....E...../....
    2130: E8 F5 07 75 3B E8 98 F1 66 BA 0A 01 90 40 8D 9C  // ...u;...f....@..
    2140: BF 03 E8 17 07 8D 9C 28 01 E8 57 11 3C 14 72 20  // .......(..W.<.r 
    2150: E8 7D F1 66 BA 10 00 90 4F 8D 9C D0 03 E8 FC 06  // .}.f....O.......
    2160: E8 6D F1 66 BA 15 01 90 40 8D 9C CC 03 E8 EC 06  // .m.f....@.......
    2170: C3 E8 5C F1 66 BA 02 01 80 50 E8 DF 06 C3 E8 3E  // ..\.f....P.....>
    2180: F1 8B C2 66 33 D2 B9 8C 0A F7 F1 C3 E8 41 F1 66  // ...f3........A.f
    2190: BA 00 06 80 50 E8 C4 06 C3 E8 34 F1 66 BA 11 01  // ....P.....4.f...
    21A0: 80 50 B0 04 E8 B5 06 C3 E8 25 F1 66 BA 00 06 90  // .P.......%.f....
    21B0: 40 8D 9C C8 03 E8 A4 06 8D 9C C8 03 E8 E4 10 C3  // @...............
    21C0: E8 BB FF E8 19 F1 8A E3 80 CC 80 50 E8 01 F1 58  // ...........P...X
    21D0: 66 BA 00 01 80 61 E8 83 06 33 C9 E8 8C F0 0B C0  // f....a...3......
    21E0: 74 02 B5 10 8D 9C BC 03 E8 5C 10 8A C5 E8 E0 F0  // t........\......
    21F0: 66 BA 07 01 80 50 E8 63 06 E8 18 F1 E8 29 07 75  // f....P.c.....).u
    2200: 49 8D 9C 48 03 E8 9B 10 0A C0 74 0E E8 C1 F0 66  // I..H......t....f
    2210: BA 0A 01 80 50 B0 01 E8 42 06 8D 9C 28 01 E8 82  // ....P...B...(...
    2220: 10 3C 14 72 25 8D 9C 29 01 E8 77 10 0A C0 75 1A  // .<.r%..)..w...u.
    2230: E8 44 EC 32 C9 8D 9C CC 03 E8 0B 10 8A C5 E8 8F  // .D.2............
    2240: F0 66 BA 15 01 80 50 E8 12 06 C3 8D 9C B4 03 B9  // .f....P.........
    2250: 0E 00 E8 E0 0B E8 B5 FE E8 A1 FE E8 4A FF 3C 01  // ............J.<.
    2260: 75 1C E8 E4 FD 74 17 33 C9 E8 BA FD 80 FD 07 75  // u....t.3.......u
    2270: 0D FE C1 E8 69 F0 38 D9 75 EF B5 01 EB 02 B5 00  // ....i.8.u.......
    2280: E8 01 00 C3 8D 9C AC 03 B1 02 E8 BA 0F C3 51 8D  // ..............Q.
    2290: 9C AC 03 32 C9 E8 AF 0F 59 C3 51 8D 9C AC 03 B1  // ...2....Y.Q.....
    22A0: 01 E8 A3 0F 59 C3 8D 9C 32 01 E8 F6 0F 24 07 75  // ....Y...2....$.u
    22B0: 15 B9 64 00 8D 9C AC 03 E8 E8 0F 3C 02 74 03 B9  // ..d........<.t..
    22C0: 90 01 E8 B6 0B C3 32 E4 B1 04 33 D2 F6 E1 8B C8  // ......2...3.....
    22D0: E8 B3 0B C3 51 8D 5C 14 E8 C8 0F 66 C1 E0 10 E8  // ....Q.\....f....
    22E0: A4 01 59 C3 53 8D 9C 44 01 E8 B7 0F 5B C3 53 66  // ..Y.S..D....[.Sf
    22F0: 50 8D 9C 44 01 E8 AB 0F 8B C1 E8 06 0F 66 58 5B  // P..D.........fX[
    2300: C3 53 51 8D 9C 44 01 8A E8 B1 03 E8 39 0F 59 5B  // .SQ..D......9.Y[
    2310: C3 33 C9 E8 16 0B 38 C1 73 05 B5 00 E8 8C 00 B5  // .3....8.s.......
    2320: 00 E8 80 00 FE C1 E8 06 0B 38 C1 72 E6 B1 14 8A  // .........8.r....
    2330: E9 E8 FE 0A 38 C1 74 05 B5 03 E8 E3 01 FE C1 E8  // ....8.t.........
    2340: E7 0A 04 14 38 C1 76 E7 C3 83 EC 0C 8B EC 0B F6  // ....8.v.........
    2350: 74 1E E8 14 F8 66 C1 C8 10 66 89 46 00 8D 5C 04  // t....f...f.F..\.
    2360: E8 40 0F 66 89 46 04 8D 5C 08 E8 36 0F 88 46 0A  // .@.f.F..\..6..F.
    2370: 89 4E 08 8C D0 66 C1 E0 10 8B C4 BB 2B 00 E8 AD  // .N...f......+...
    2380: 09 83 C4 0C C3 83 EC 04 8B EC B0 02 88 46 01 88  // .............F..
    2390: 4E 00 8C D0 66 C1 E0 10 8B C4 BB 25 00 E8 8E 09  // N...f......%....
    23A0: 83 C4 04 C3 BB 23 00 E8 08 00 C3 BB 17 00 E8 01  // .....#..........
    23B0: 00 C3 83 EC 04 8B EC 89 4E 00 8C D0 66 C1 E0 10  // ........N...f...
    23C0: 8B C4 E8 69 09 83 C4 04 C3 BB 22 00 E8 E3 FF C3  // ...i......".....
    23D0: BB 27 00 E8 DC FF C3 BB 2C 00 E8 D5 FF C3 E8 C2  // .'......,.......
    23E0: 0E 66 A9 00 00 FF FF 74 40 83 EC 18 8B EC 55 51  // .f.....t@.....UQ
    23F0: B9 04 00 83 C3 02 E8 AA 0E 66 89 46 00 83 C5 04  // .........f.F....
    2400: 83 C3 04 E2 F1 83 C3 04 E8 98 0E 66 C1 C8 10 66  // ...........f...f
    2410: 89 46 00 59 5D 88 4E 14 8C D0 66 C1 E0 10 8B C4  // .F.Y].N...f.....
    2420: BB 31 00 E8 08 09 83 C4 18 C3 E8 47 EE 8D 9C D0  // .1.........G....
    2430: 02 E8 6F 0E 8A E8 BB 21 00 E8 76 FF C3 8D 9C 3C  // ..o....!..v....<
    2440: 03 E8 5F 0E 8A F8 E8 09 EE 8A DD 53 8D 9C 42 03  // .._........S..B.
    2450: E8 50 0E 8A E8 5B E8 1B EE E8 B8 EE E8 C9 04 75  // .P...[.........u
    2460: 02 B3 01 83 EC 04 8B EC 88 4E 00 88 7E 01 88 5E  // .........N..~..^
    2470: 02 88 6E 03 8C D0 66 C1 E0 10 8B C4 BB 2A 00 E8  // ..n...f......*..
    2480: AC 08 83 C4 04 C3 83 EC 10 8B EC 66 3D F0 FF FF  // ...........f=...
    2490: 03 76 06 66 B8 F0 FF FF 03 66 8B C8 66 33 C0 66  // .v.f.....f..f3.f
    24A0: 89 46 04 66 89 46 00 66 89 46 08 66 B8 00 00 00  // .F.f.F.f.F.f....
    24B0: D0 66 0B C1 66 89 46 0C 8C D0 66 C1 E0 10 8B C4  // .f..f.F...f.....
    24C0: BB 35 00 E8 68 08 83 C4 10 C3 83 EC 08 8B EC 89  // .5..h...........
    24D0: 4E 00 66 89 56 02 89 5E 06 8C D0 66 C1 E0 10 8B  // N.f.V..^...f....
    24E0: C4 BB 2D 00 E8 47 08 83 C4 08 C3 3D C0 7F 76 04  // ..-..G.....=..v.
    24F0: B8 C0 7F C3 83 C0 3F 24 C0 C3 51 E8 A5 0D 66 33  // ......?$..Q...f3
    2500: D2 B9 0A 00 F7 F1 8B C8 E8 98 0D 03 C1 66 25 FF  // .............f%.
    2510: FF 00 00 59 3D 10 27 73 03 B8 10 27 C3 32 D2 C3  // ...Y=.'s...'.2..
    2520: 80 FD 02 75 19 E8 56 EE 66 BB 00 08 00 00 E8 8E  // ...u..V.f.......
    2530: 00 66 33 D2 66 BB 01 08 00 00 E8 82 00 C3 80 FD  // .f3.f...........
    2540: 03 75 10 66 33 C0 8A C1 66 33 D2 66 BB FF 00 00  // .u.f3...f3.f....
    2550: 00 EB 36 51 33 D2 E8 F9 EC 8A D5 66 C1 E2 10 E8  // ..6Q3......f....
    2560: 32 ED 8A F2 8A D1 66 8B C2 66 0D 00 00 00 80 E8  // 2.....f..f......
    2570: 6D ED 80 FB 04 76 06 66 0D 00 00 00 08 E8 A3 ED  // m....v.f........
    2580: E8 F1 EC 66 33 DB 8A D9 59 83 EC 10 8B EC 66 89  // ...f3...Y.....f.
    2590: 46 04 66 89 5E 08 66 8B C2 66 33 D2 66 BB 64 00  // F.f.^.f..f3.f.d.
    25A0: 00 00 66 F7 E3 66 89 46 00 BB 0C 00 8C D0 66 C1  // ..f..f.F......f.
    25B0: E0 10 8B C4 E8 77 07 8B EC B3 01 83 C4 10 C3 83  // .....w..........
    25C0: EC 10 8B EC 66 89 56 00 66 89 5E 04 BB 2E 00 8C  // ....f.V.f.^.....
    25D0: D0 66 C1 E0 10 8B C4 E8 54 07 B3 01 83 C4 10 C3  // .f......T.......
    25E0: C3 53 51 66 50 B9 68 74 80 FB 03 74 0B B9 A0 8C  // .SQfP.ht...t....
    25F0: 80 FB 00 75 03 B9 78 69 66 33 D2 8B D1 66 58 59  // ...u..xif3...fXY
    2600: 5B C3 66 52 B3 00 66 F7 C2 00 00 FF FF 75 1A 80  // [.fR..f......u..
    2610: FD 13 74 15 80 FD 14 74 10 B3 01 80 FD 0E 74 09  // ..t....t......t.
    2620: B3 03 80 F9 03 74 02 B3 02 66 5A C3 B5 11 80 FA  // .....t...fZ.....
    2630: 23 74 07 80 FA 22 74 02 B5 00 C3 B5 02 80 FA 23  // #t..."t........#
    2640: 74 07 80 FA 22 74 02 B3 01 C3 32 C9 80 FD 00 75  // t..."t....2....u
    2650: 08 C7 46 00 0B 01 B1 01 C3 50 33 C0 E8 9E 01 04  // ..F......P3.....
    2660: 14 89 46 00 58 B1 01 C3 C3 8B DA B7 22 80 FE 21  // ..F.X......."..!
    2670: 74 02 B7 21 C3 0C 01 C3 E8 28 0C 66 C1 E8 10 0B  // t..!.....(.f....
    2680: C0 74 1C 53 83 C3 06 E8 19 0C 5B 3D E0 01 72 0F  // .t.S......[=..r.
    2690: 53 83 C3 18 E8 0C 0C 5B A8 80 75 03 0C 01 C3 32  // S......[..u....2
    26A0: C0 C3 B5 0C C3 B5 02 C3 50 E8 51 01 B1 03 0A C0  // ........P.Q.....
    26B0: 74 04 B1 08 02 C8 58 C3 80 FA 22 75 05 C7 46 00  // t.....X..."u..F.
    26C0: 78 69 C3 E8 1A 01 80 FD FF 74 35 83 EC 0C 8B EC  // xi.......t5.....
    26D0: 88 4E 01 88 6E 00 80 F9 0F 75 05 E8 4F 00 EB 0F  // .N..n....u..O...
    26E0: 80 F9 10 75 0A 8D 9C 48 03 E8 B7 0B 88 46 02 8C  // ...u...H.....F..
    26F0: D0 66 C1 E0 10 8B C4 BB 04 00 E8 31 06 83 C4 0C  // .f.........1....
    2700: C3 83 EC 10 8B EC 88 4E 01 E8 93 EB 81 E2 00 07  // .......N........
    2710: FE CE C0 E6 04 88 76 00 E8 12 00 8C D0 66 C1 E0  // ......v......f..
    2720: 10 8B C4 BB 32 00 E8 05 06 83 C4 10 C3 66 53 E8  // ....2........fS.
    2730: 8D EB 66 8B C2 66 33 D2 66 BB 8C 0A 00 00 66 F7  // ..f..f3.f.....f.
    2740: F3 66 5B 8A E8 88 6E 09 8D 9C 40 03 E8 54 0B 88  // .f[...n...@..T..
    2750: 46 02 88 66 03 66 C1 E8 10 88 46 08 E8 4F EB 66  // F..f.f....F..O.f
    2760: 89 56 04 C3 83 EC 20 8B EC 80 F9 04 75 0A 88 4E  // .V.... .....u..N
    2770: 01 32 C0 88 46 00 EB 56 E8 19 EB E8 7F 00 88 46  // .2..F..V.......F
    2780: 00 88 4E 01 E8 8D EB 88 56 0A 80 F9 01 74 18 80  // ..N.....V....t..
    2790: F9 0B 75 3A 8D 9C 5C 03 E8 08 0B 88 46 02 E8 0D  // ..u:..\.....F...
    27A0: EB 66 89 56 04 EB 27 E8 26 EB 88 6E 08 E8 FE EA  // .f.V..'.&..n....
    27B0: 66 89 56 04 E8 28 EB 88 5E 03 E8 95 EA 88 6E 02  // f.V..(..^.....n.
    27C0: 51 E8 1C 00 8A CD B0 01 D2 E0 59 88 46 09 8C D0  // Q.........Y.F...
    27D0: 66 C1 E0 10 8B C4 BB 4C 00 E8 52 05 83 C4 20 C3  // f......L..R... .
    27E0: 8D 9C 3C 03 E8 BC 0A 32 ED 3C 03 74 0C 3C 09 72  // ..<....2.<.t.<.r
    27F0: 09 3C 0E 77 05 2C 08 8A E8 C3 B5 FF C3 52 32 C0  // .<.w.,.......R2.
    2800: 80 EE 21 80 FA 1E 74 10 B0 02 80 FA 20 74 09 B0  // ..!...t..... t..
    2810: 04 80 FA 21 74 02 B0 06 02 C6 5A C3 83 EC 08 8C  // ...!t.....Z.....
    2820: D0 66 C1 E0 10 8B C4 BB 4B 00 E8 01 05 83 C4 08  // .f......K.......
    2830: C3 83 EC 08 8B EC 89 7E 00 89 5E 02 89 56 04 89  // .......~..^..V..
    2840: 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36 00 E8 DE 04  // N...f......6....
    2850: 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3 56 33 F6 66  // ...^..~.....V3.f
    2860: F7 C2 00 00 80 00 75 0A 50 33 C0 8A C6 8B F0 32  // ......u.P3.....2
    2870: F6 58 53 BB 04 1F E8 8A 09 66 8B C2 BB 00 1F E8  // .XS......f......
    2880: 81 09 5B 66 F7 C2 00 00 10 00 75 02 33 DB 8B D3  // ..[f......u.3...
    2890: 66 C1 E2 10 BA 00 1F 83 EC 08 8B EC 66 89 56 00  // f...........f.V.
    28A0: 88 4E 04 8A C5 FE C8 88 46 07 C6 46 05 00 C6 46  // .N......F..F...F
    28B0: 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E 00 E8 6E 04  // ....f......N..n.
    28C0: 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A DB 74 32 51  // ...^..~......t2Q
    28D0: B9 90 01 80 FB 20 74 05 80 FB 80 75 13 B9 0A 00  // ..... t....u....
    28E0: 8B C6 0A C0 74 0A B9 90 01 3C 01 74 03 B9 E8 03  // ....t....<.t....
    28F0: E8 88 05 59 8B C6 FE C4 8B F0 80 FC 06 76 98 0A  // ...Y.........v..
    2900: DB 5E C3 8D 5C 04 E8 9A 09 8B D0 B5 02 E8 14 00  // .^..\...........
    2910: 74 11 B5 01 80 FA 13 75 0A E8 61 00 80 FA 13 75  // t......u..a....u
    2920: 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74 03 80 FA 0E  // ...........t....
    2930: C3 80 FA 05 C3 80 FA 02 74 03 80 FA 04 C3 80 FA  // ........t.......
    2940: 01 74 03 80 FA 02 C3 80 FA 02 75 03 B2 01 C3 80  // .t........u.....
    2950: FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8 FF 74 02 B5  // ..u..........t..
    2960: 04 C3 8D 5C 09 E8 3B 09 8A C8 0A C9 75 03 32 C0  // ...\..;.....u.2.
    2970: C3 B5 02 E8 93 04 8A C5 24 02 D0 E8 C3 8D 5C 08  // ........$.....\.
    2980: E8 20 09 8A D0 B6 01 83 EC 10 8B EC 89 56 02 8C  // . ...........V..
    2990: D0 66 C1 E0 10 8B C4 BB 4F 00 E8 91 03 8B EC 8A  // .f......O.......
    29A0: 56 04 83 C4 10 C3 53 83 C3 4C E8 C4 08 5B C3 53  // V.....S..L...[.S
    29B0: 83 C3 4C E8 16 08 5B C3 56 E8 2F 03 8B 44 38 83  // ..L...[.V./..D8.
    29C0: 7D 20 00 5E C3 52 50 0F BC D8 32 FF 80 FB 01 75  // } .^.RP...2....u
    29D0: 05 BB 00 24 EB 0C FE CB B8 00 04 F7 E3 05 00 20  // ...$........... 
    29E0: 8B D8 58 5A C3 57 E8 56 00 74 0A 8B 5D 02 E8 08  // ..XZ.W.V.t..]...
    29F0: 00 0B DB 5F C3 33 DB 5F C3 52 51 0B DB 74 1B 56  // ..._.3._.RQ..t.V
    2A00: E8 CF 02 03 DE 5E 33 C9 8A 4F 01 80 3F FF 74 08  // .....^3..O..?.t.
    2A10: 3A 07 74 06 03 D9 EB F0 33 DB 0B DB 59 5A C3 56  // :.t.....3...YZ.V
    2A20: 51 E8 AE 02 32 C9 8D 7C 08 3B 5D 04 74 0C 83 C7  // Q...2..|.;].t...
    2A30: 10 FE C1 3A 4C 06 72 F1 33 FF 0B FF 59 5E C3 56  // ...:L.r.3...Y^.V
    2A40: 51 E8 8E 02 32 C9 8D 7C 08 3B 1D 74 0C 83 C7 10  // Q...2..|.;.t....
    2A50: FE C1 3A 4C 06 72 F2 33 FF 0B FF 59 5E C3 56 51  // ..:L.r.3...Y^.VQ
    2A60: E8 6F 02 32 C9 8D 7C 08 3B 45 0C 74 0C 83 C7 10  // .o.2..|.;E.t....
    2A70: FE C1 3A 4C 06 72 F1 33 FF 0B FF 59 5E C3 57 50  // ..:L.r.3...Y^.WP
    2A80: E8 DB FF 8A C3 8B 5D 02 E8 6E FF 58 5F C3 53 32  // ......]..n.X_.S2
    2A90: C9 B3 01 E8 E8 FF 74 03 8A 4F 02 0A C9 5B C3 53  // ......t..O...[.S
    2AA0: 32 ED B3 02 E8 D7 FF 74 03 8A 6F 02 0A ED 5B C3  // 2......t..o...[.
    2AB0: 50 57 8B DA E8 68 FF 75 04 33 DB EB 0D B0 14 8B  // PW...h.u.3......
    2AC0: 5D 08 E8 34 FF 74 F2 8B 5F 02 5F 58 C3 66 50 53  // ]..4.t.._._X.fPS
    2AD0: 51 57 8D 1C 66 25 FF FF 00 00 E8 26 07 8B D8 E8  // QW..f%.....&....
    2AE0: 3B 00 23 C3 74 31 E8 75 FF 0B FF 74 2A 66 50 66  // ;.#.t1.u...t*fPf
    2AF0: 8B 45 04 8D 5C 0C E8 0A 07 66 33 C0 8B 05 8D 5C  // .E..\....f3....\
    2B00: 04 E8 FF 06 66 58 E8 85 FF E8 93 FF 8D 5C 08 66  // ....fX.......\.f
    2B10: 33 C0 8B C1 E8 EC 06 5F 59 5B 66 58 C3 56 E8 B1  // 3......_Y[fX.V..
    2B20: 01 8B 44 04 5E C3 56 E8 A8 01 89 44 04 5E C3 E8  // ..D.^.V....D.^..
    2B30: CE 01 8B F7 83 C6 38 BB 00 2C B9 23 00 E8 23 03  // ......8..,.#..#.
    2B40: E8 01 00 C3 51 66 57 56 E8 87 01 66 33 FF 8D 7C  // ....QfWV...f3..|
    2B50: 08 33 C0 E8 D0 FF 32 C9 8B 15 B8 00 70 23 C2 3D  // .3....2.....p#.=
    2B60: 00 30 75 54 80 FA 15 74 0B E8 B1 FF 0B 45 0C E8  // .0uT...t.....E..
    2B70: B4 FF EB 44 E8 5E 00 89 45 0C 0B C0 75 04 89 05  // ...D.^..E...u...
    2B80: EB 36 E8 98 FF 0B 45 0C E8 9B FF 83 7D 06 00 74  // .6....E.....}..t
    2B90: 16 E8 4A 00 89 45 06 0B C0 74 0C 83 7D 06 00 74  // ..J..E...t..}..t
    2BA0: 06 8B 5C 0A E8 BB 00 E8 40 00 89 05 8B 5D 02 E8  // ..\.....@....]..
    2BB0: B0 00 8B 5D 08 E8 CB 00 83 C7 10 FE C1 3A 4C 06  // ...].........:L.
    2BC0: 72 96 5E 66 5F 59 C3 08 00 80 00 00 02 00 04 00  // r.^f_Y..........
    2BD0: 08 40 00 00 00 53 E8 58 00 E8 C7 06 5B C3 53 E8  // .@...S.X....[.S.
    2BE0: 4F 00 83 C3 08 E8 BB 06 5B C3 53 57 52 E8 41 00  // O.......[.SWR.A.
    2BF0: 83 C3 04 E8 AD 06 8B D0 E8 3A FD 75 16 8B 5D 04  // .........:.u..].
    2C00: 8B D3 E8 64 FA 57 E8 16 FE 5F 75 07 8B D0 E8 36  // ...d.W..._u....6
    2C10: FD 8B C2 5A 5F 5B C3 E8 D0 FF 66 C1 E8 10 B4 11  // ...Z_[....f.....
    2C20: E8 25 00 C3 E8 C3 FF 66 C1 E8 18 B4 10 E8 18 00  // .%.....f........
    2C30: C3 51 52 33 C9 8A CE 80 E1 07 49 B8 10 00 F7 E1  // .QR3......I.....
    2C40: BB 14 2C 03 D8 5A 59 C3 57 53 51 33 C9 8A C8 8A  // ..,..ZY.WSQ3....
    2C50: C4 BB 03 71 E8 8E FD 83 C3 02 03 D9 8A 07 59 5B  // ...q..........Y[
    2C60: 5F C3 50 53 B0 01 E8 90 FD 74 15 E8 A9 FF 88 47  // _.PS.....t.....G
    2C70: 02 5B 53 B0 02 E8 81 FD 74 06 E8 A7 FF 88 47 02  // .[S.....t.....G.
    2C80: 5B 58 C3 51 50 B0 14 E8 6F FD 74 3A 53 E8 A1 FF  // [X.QP...o.t:S...
    2C90: 83 C3 0C E8 0D 06 8B C8 5B F6 C1 01 74 05 66 83  // ........[...t.f.
    2CA0: 67 02 FD F6 C1 80 74 05 66 83 67 02 F7 F7 C1 00  // g.....t.f.g.....
    2CB0: 01 74 08 66 81 4F 02 00 01 00 00 F7 C1 00 02 74  // .t.f.O.........t
    2CC0: 05 66 83 67 02 FB 58 59 C3 BF A4 01 8B 3D 8B 7D  // .f.g..XY.....=.}
    2CD0: 0C C3 BE A4 01 8B 34 8B 74 30 C3 1E 0E 1F BF A4  // ......4.t0......
    2CE0: 01 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE A4 01 8B 34  // ..=.}..........4
    2CF0: 8B 74 10 C3 BF A4 01 8B 3D 8B 7D 26 83 C7 04 C3  // .t......=.}&....
    2D00: BF A4 01 8B 3D 8B 7D 40 C3 BE A4 01 8B 34 8B 74  // ....=.}@.....4.t
    2D10: 1A C3 BE A4 01 8B 34 8B 74 3A C3 BF A4 01 8B 3D  // ......4.t:.....=
    2D20: 8B 7D 0A 83 C7 04 B9 07 00 C3 E8 01 00 CB 83 EC  // .}..............
    2D30: 06 8B EC 89 46 00 66 33 C0 C6 46 04 00 89 46 02  // ....F.f3..F...F.
    2D40: 06 52 8A D3 8B C5 E8 7E 17 5A 07 83 C4 06 C3 E8  // .R.....~.Z......
    2D50: 77 FF 66 F7 45 10 01 00 00 00 C3 50 E8 6A FF B8  // w.f.E......P.j..
    2D60: 01 00 09 45 10 58 C3 E8 5F FF 88 45 10 C3 66 53  // ...E.X.._..E..fS
    2D70: 83 EC 48 8B EC 66 89 5E 00 66 89 4E 04 8C D0 66  // ..H..f.^.f.N...f
    2D80: C1 E0 10 8B C4 BB 00 00 E8 A3 FF 83 C4 48 66 5B  // .............Hf[
    2D90: E8 81 01 E8 AA 01 83 EC 1C 8B EC C6 46 01 07 8C  // ............F...
    2DA0: D0 66 C1 E0 10 8B C4 BB 0D 00 E8 81 FF 83 C4 1C  // .f..............
    2DB0: 83 EC 1C 8B EC C6 46 01 08 8C D0 66 C1 E0 10 8B  // ......F....f....
    2DC0: C4 BB 0D 00 E8 67 FF 83 C4 1C BB 04 00 E8 D6 FB  // .....g..........
    2DD0: 66 C1 E8 10 E8 90 FF C3 83 EC 54 8B EC 66 89 5E  // f.........T..f.^
    2DE0: 00 8C D0 66 C1 E0 10 8B C4 BB 0A 00 E8 3F FF 83  // ...f.........?..
    2DF0: C4 54 C3 E8 D3 FE 66 8B 5D 08 66 8B 4D 0C C3 56  // .T....f.].f.M..V
    2E00: E8 0F FF 66 8B 44 08 5E C3 83 EC 04 8B EC 89 4E  // ...f.D.^.......N
    2E10: 00 8C D0 66 C1 E0 10 8B C4 BB 38 00 E8 0F FF 8B  // ...f......8.....
    2E20: EC 8A 6E 02 83 C4 04 C3 C3 B0 04 C3 B0 01 C3 B0  // ..n.............
    2E30: 04 C3 B0 08 C3 53 66 50 66 33 C0 E8 C5 03 83 C3  // .....SfPf3......
    2E40: 04 E2 F8 66 58 5B C3 32 C0 C3 FC E8 55 04 66 C1  // ...fX[.2....U.f.
    2E50: CB 10 E8 AE 03 66 C1 CB 10 66 81 C3 04 00 04 00  // .....f...f......
    2E60: E2 E9 C3 FC 66 AD E8 9A 03 83 C3 04 E2 F6 C3 FC  // ....f...........
    2E70: E8 30 04 66 AB 83 C3 04 E2 F6 C3 66 50 B8 64 00  // .0.f.......fP.d.
    2E80: E8 10 00 66 58 C3 66 50 B8 50 C3 D1 E1 E8 03 00  // ...fX.fP.P......
    2E90: 66 58 C3 52 F7 E1 8B CA E8 21 02 66 53 8B D9 66  // fX.R.....!.fS..f
    2EA0: C1 E3 10 8B D8 66 B8 04 B1 03 00 B2 00 66 EF B2  // .....f.......f..
    2EB0: 04 66 33 C0 66 EF 66 B8 08 B1 03 00 B2 00 66 EF  // .f3.f.f.......f.
    2EC0: B2 04 66 ED 33 C9 66 03 D8 73 0A 66 ED 66 A9 00  // ..f.3.f..s.f.f..
    2ED0: 00 00 80 75 F6 66 ED 66 3B C3 73 0C 66 C1 E8 10  // ...u.f.f;.s.f...
    2EE0: 3B C1 72 04 8B C8 EB ED 66 5B 5A C3 BB 42 EC E8  // ;.r.....f[Z..B..
    2EF0: 7F 03 66 33 D2 66 BB 64 00 00 00 66 F7 F3 C3 66  // ..f3.f.d...f...f
    2F00: 50 53 BB 07 00 E8 9E FA 25 00 02 35 00 02 0B C0  // PS......%..5....
    2F10: 5B 66 58 C3 B3 01 E8 7D 01 66 C1 E0 0A 66 83 E8  // [fX....}.f...f..
    2F20: 20 E8 E5 FD 66 89 44 04 C7 44 08 20 00 C3 56 1E  //  ...f.D..D. ..V.
    2F30: 0E 1F E8 D4 FD 66 8B 44 04 66 C1 E0 0A 1F 5E C3  // .....f.D.f....^.
    2F40: E8 D1 FF 06 E8 B9 FD 0E 07 BB 00 78 E8 54 03 66  // ...........x.T.f
    2F50: 3B 05 75 19 B9 00 01 FC E8 14 FF BB 00 7C BF A4  // ;.u..........|..
    2F60: 01 8B 3D 8B 7D 22 B9 00 01 FC E8 02 FF E8 90 FD  // ..=.}"..........
    2F70: BE A4 01 8B 34 8B 74 14 8B 45 14 89 44 0C E8 6A  // ....4.t..E..D..j
    2F80: FD 0B F6 74 49 8B 45 28 89 44 20 F6 45 26 08 74  // ...tI.E(.D .E&.t
    2F90: 17 8A 45 26 C0 E8 04 88 44 24 80 64 24 FD F6 45  // ..E&....D$.d$..E
    2FA0: 26 01 74 04 80 4C 24 02 57 83 C7 38 8A 85 87 00  // &.t..L$.W..8....
    2FB0: 88 44 3B 5F 66 8B 45 18 89 44 28 B9 07 00 8D 5D  // .D;_f.E..D(....]
    2FC0: 2C 8A 07 0A C0 74 03 88 44 2C 43 46 E2 F3 E8 41  // ,....t..D,CF...A
    2FD0: FD 8B 45 20 89 44 10 8B 45 22 89 44 12 8B 45 1C  // ..E .D..E".D..E.
    2FE0: 89 44 14 8B 45 1E 89 44 16 BB 04 71 B0 09 E8 F4  // .D..E..D...q....
    2FF0: F9 74 0C 57 83 C7 38 8A 85 85 00 88 47 04 5F 07  // .t.W..8.....G._.
    3000: C3 BE A4 01 8B 34 8B 74 1E 83 C6 04 B9 1C 00 C3  // .....4.t........
    3010: 56 E8 D7 FC 8A 6C 33 5E C3 56 E8 CE FC 53 81 C3  // V....l3^.V...S..
    3020: 09 01 E8 7E 02 8A E8 5B 53 81 C3 00 01 E8 73 02  // ...~...[S.....s.
    3030: 5B 8A C5 66 89 44 34 5E C3 56 E8 AE FC 66 8B 44  // [..f.D4^.V...f.D
    3040: 34 53 81 C3 08 01 B1 01 8A E8 E8 FA 01 5B 53 81  // 4S...........[S.
    3050: C3 00 01 B1 01 8A EC E8 ED 01 5B 53 81 C3 02 01  // ..........[S....
    3060: 66 C1 E8 10 E8 B4 01 5B 5E C3 56 E8 7D FC 8B FE  // f......[^.V.}...
    3070: 83 C7 04 5E C3 56 E8 72 FC 8A 44 24 80 FD 00 74  // ...^.V.r..D$...t
    3080: 05 88 6C 33 0C 02 88 44 24 5E C3 32 C0 C3 E8 6F  // ..l3...D$^.2...o
    3090: FC 66 8B 45 08 C3 66 53 83 EC 04 8B EC 8C D0 66  // .f.E..fS.......f
    30A0: C1 E0 10 8B C4 66 89 5E 00 BB 06 00 E8 7F FC 8B  // .....f.^........
    30B0: EC 66 8B 46 00 83 C4 04 66 5B C3 00 66 50 8C C8  // .f.F....f[..fP..
    30C0: 3D 00 C0 75 0C BA C3 03 EC 8A F0 0A F6 74 02 EB  // =..u.........t..
    30D0: 0E 53 2E 8B 1E 14 00 B2 20 E8 D6 00 8A F4 5B 32  // .S...... .....[2
    30E0: D2 66 ED 66 58 C3 2E 8B 1E 14 00 C3 0B C9 75 1A  // .f.fX.........u.
    30F0: 4B 74 16 43 3B DA 77 09 8B C8 8B C2 2B D2 F7 F3  // Kt.C;.w.....+...
    3100: 91 F7 F3 8B DA 8B D1 2B C9 C3 3B CA 72 1A 75 10  // .......+..;.r.u.
    3110: 3B D8 77 0C 2B C3 8B D8 2B C9 2B D2 B8 01 00 C3  // ;.w.+...+.+.....
    3120: 2B C9 2B DB 93 87 CA C3 55 56 2B F6 8B EE 03 DB  // +.+.....UV+.....
    3130: 13 C9 72 11 45 3B CA 72 F5 77 04 3B D8 76 EF F8  // ..r.E;.r.w.;.v..
    3140: 13 F6 4D 78 20 D1 D9 D1 DB 2B C3 1B D1 F5 72 F0  // ..Mx ....+....r.
    3150: 03 F6 4D 78 0C D1 E9 D1 DB 03 C3 13 D1 73 F1 EB  // ..Mx.........s..
    3160: DF 03 C3 13 D1 8B D8 8B CA 8B C6 33 D2 5E 5D C3  // ...........3.^].
    3170: 93 50 92 0B C0 74 02 F7 E2 91 0B C0 74 04 F7 E3  // .P...t......t...
    3180: 03 C8 58 F7 E3 03 D1 C3 52 66 50 B4 80 8A C7 66  // ..X.....RfP....f
    3190: C1 E0 10 8A E3 8A C2 24 FC BA F8 0C 66 EF 66 58  // .......$....f.fX
    31A0: 5A C3 52 BA FC 0C 66 ED 5A C3 52 BA FC 0C 66 EF  // Z.R...f.Z.R...f.
    31B0: 5A C3 E8 31 FF 9C FA E8 CE FF E8 E5 FF 9D C3 E8  // Z..1............
    31C0: 24 FF 9C FA E8 C1 FF E8 E0 FF 9D C3 52 66 53 66  // $...........RfSf
    31D0: 50 E8 06 00 66 58 66 5B 5A C3 66 C1 E3 10 66 C1  // P...fXf[Z.f...f.
    31E0: EB 0E E8 D7 FE E8 75 01 C3 66 50 66 C1 E3 10 66  // ......u..fPf...f
    31F0: C1 EB 10 E8 38 FD 66 03 D8 66 81 CB 00 00 00 80  // ....8.f..f......
    3200: 66 58 C3 52 66 53 E8 04 00 66 5B 5A C3 66 50 E8  // fX.RfS...f[Z.fP.
    3210: AA FE E8 D4 FF E8 45 01 66 58 C3 52 51 66 53 66  // ......E.fX.RQfSf
    3220: 50 8A CB 80 E3 FC 80 E1 03 C0 E1 03 E8 8D FE E8  // P...............
    3230: B7 FF E8 0F 01 66 D3 C8 58 50 66 D3 C0 E8 1D 01  // .....f..XPf.....
    3240: 66 58 66 5B 59 5A C3 66 50 51 C0 E1 03 E8 53 00  // fXf[YZ.fPQ....S.
    3250: 66 D3 C8 8A C5 66 D3 C0 E8 A8 FF 59 66 58 C3 66  // f....f.....YfX.f
    3260: 50 51 C0 E1 03 E8 3B 00 66 D3 C8 59 8A E8 66 58  // PQ....;.f..Y..fX
    3270: C3 E8 5F 00 C3 E8 44 FE 66 C1 E3 10 66 C1 EB 0E  // .._...D.f...f...
    3280: E8 C1 00 C3 E8 35 FE 66 C1 E3 02 E8 B6 00 C3 52  // .....5.f.......R
    3290: 66 53 E8 04 00 66 5B 5A C3 E8 20 FE E8 4A FF E8  // fS...f[Z.. ..J..
    32A0: A2 00 C3 51 66 52 8A EB 8A CB 80 E1 03 C0 E1 03  // ...QfR..........
    32B0: 80 E3 FC E8 D9 FF 80 F9 00 74 14 66 8B D0 83 C3  // .........t.f....
    32C0: 04 E8 CB FF 83 EB 04 66 92 66 0F AD D0 8A DD 66  // .......f.f.....f
    32D0: 5A 59 C3 52 66 53 E8 9C FF 66 5B 5A C3 52 66 53  // ZY.RfS...f[Z.RfS
    32E0: E8 A1 FF 66 5B 5A C3 66 50 55 52 66 50 8B EC 8B  // ...f[Z.fPURfP...
    32F0: 56 0C 89 56 08 E8 C4 FD 2E A1 F1 01 B2 18 EF B2  // V..V............
    3300: 00 66 ED 66 89 46 0A 66 58 5A 5D C3 66 50 55 52  // .f.f.F.fXZ].fPUR
    3310: 8B EC E8 A7 FD B2 00 66 8B 46 0A 66 EF 8B 56 08  // .......f.F.f..V.
    3320: 89 56 0C 66 8B 46 04 66 89 46 08 5A 5D 66 58 66  // .V.f.F.f.F.Z]fXf
    3330: 58 C3 66 50 52 E8 84 FD B2 18 66 ED 2E A3 F1 01  // X.fPR.....f.....
    3340: 5A 66 58 C3 66 81 FB FF 00 00 00 77 04 8A D3 EB  // ZfX.f......w....
    3350: 09 66 8B C3 B2 00 66 EF B2 04 66 ED C3 66 81 FB  // .f....f...f..f..
    3360: FF 00 00 00 77 04 8A D3 EB 0A 66 93 B2 00 66 EF  // ....w.....f...f.
    3370: 66 93 B2 04 66 EF C3 C3 C3 55 8B EC 53 51 8B F0  // f...f....U..SQ..
    3380: 26 8B 5C 14 26 8B 4C 16 E8 28 00 8D 66 FC 59 5B  // &.\.&.L..(..f.Y[
    3390: 5D C3 53 51 8B F0 26 8B 5C 24 33 C9 E8 14 00 59  // ].SQ..&.\$3....Y
    33A0: 5B C3 55 8B EC 53 51 8B F0 26 8B 5C 08 26 8B 4C  // [.U..SQ..&.\.&.L
    33B0: 0A EB D5 52 56 57 C8 06 00 00 8B F0 89 4E FE 8C  // ...RVW.......N..
    33C0: D0 8E C0 26 8B 7C 26 8A 45 01 32 E4 B9 20 00 2B  // ...&.|&.E.2.. .+
    33D0: C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D  // ...............M
    33E0: 03 32 ED 8B FA E3 06 D1 E0 D1 D7 E2 FA F7 D0 F7  // .2..............
    33F0: D7 26 21 44 1C 26 21 7C 1E 8C D0 8E C0 26 8B 7C  // .&!D.&!|.....&.|
    3400: 26 8A 4D 01 32 ED B8 20 00 2B C1 8B C8 66 C7 46  // &.M.2.. .+...f.F
    3410: FA FF FF FF FF E3 08 D1 6E FC D1 5E FA E2 F8 8A  // ........n..^....
    3420: 4D 02 32 ED 8B C3 8B 56 FE E3 06 D1 EA D1 D8 E2  // M.2....V........
    3430: FA 23 46 FA 23 56 FC 8A 4D 03 32 ED E3 06 D1 E0  // .#F.#V..M.2.....
    3440: D1 D2 E2 FA 26 09 44 1C 26 09 54 1E C9 5F 5E 5A  // ....&.D.&.T.._^Z
    3450: C3 55 8B EC 53 51 52 57 50 8B D8 26 8B 7F 26 8A  // .U..SQRWP..&..&.
    3460: 45 01 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0 E3 06  // E.2.. .+........
    3470: D1 EA D1 D8 E2 FA 8A 4D 02 88 4E F6 C6 46 F7 00  // .......M..N..F..
    3480: 8B FA 8B 4E F6 E3 06 D1 E0 D1 D7 E2 FA 26 09 47  // ...N.........&.G
    3490: 1C 26 09 7F 1E 8D 66 F8 5F 5A E9 F1 FE 53 51 52  // .&....f._Z...SQR
    34A0: 57 8B D8 8C D0 8E C0 26 8B 77 26 8A 4C 01 32 ED  // W......&.w&.L.2.
    34B0: B8 20 00 2B C1 8B C8 BE FF FF 8B D6 E3 06 D1 EA  // . .+............
    34C0: D1 DE E2 FA 26 8B 7F 26 8A 4D 02 32 ED 8B C6 E3  // ....&..&.M.2....
    34D0: 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 1C 26  // ...........&!G.&
    34E0: 21 57 1E 5F E9 CC 05 53 56 8B D8 8C D2 8E C2 26  // !W._...SV......&
    34F0: 8B 77 26 80 3C 00 74 73 80 3C 01 75 58 8A 44 01  // .w&.<.ts.<.uX.D.
    3500: 32 E4 26 83 7F 1E 00 75 4C 26 3B 47 1C 75 46 8A  // 2.&....uL&;G.uF.
    3510: 04 6B F0 03 8A 84 4C 91 26 01 47 26 8C D0 8E C0  // .k....L.&.G&....
    3520: 26 8B 77 26 80 3C 09 74 17 8A 04 32 E4 6B F0 03  // &.w&.<.t...2.k..
    3530: 8B C3 FF 94 4A 91 26 8B 77 26 8A 04 32 E4 EB D1  // ....J.&.w&..2...
    3540: 8B 44 01 26 29 47 26 26 FF 47 26 26 8B 47 1C 26  // .D.&)G&&.G&&.G.&
    3550: 8B 77 1E EB 1A 26 8B 77 26 8A 04 32 E4 6B F0 03  // .w...&.w&..2.k..
    3560: 8A 84 4C 91 26 01 47 26 E9 80 FF 33 C0 33 F6 8B  // ..L.&.G&...3.3..
    3570: D6 5E 5B C3 53 51 52 56 8B D8 8D 77 35 26 8B 54  // .^[.SQRV...w5&.T
    3580: 02 26 89 57 14 26 C7 47 16 00 00 8B F0 26 8B 47  // .&.W.&.G.....&.G
    3590: 20 33 D2 26 01 47 14 26 11 54 16 8C D1 8E C1 26  //  3.&.G.&.T.....&
    35A0: F6 47 2F 06 0F 85 0A 05 26 80 7F 34 00 75 22 26  // .G/.....&..4.u"&
    35B0: 8B 77 16 26 0B 77 14 75 10 26 D1 67 08 26 D1 57  // .w.&.w.u.&.g.&.W
    35C0: 0A 26 D1 67 08 26 D1 57 0A 8B C3 E8 79 11 E9 E1  // .&.g.&.W....y...
    35D0: 04 26 8A 47 34 32 E4 05 80 00 99 26 89 47 1C 26  // .&.G42.....&.G.&
    35E0: 89 57 1E 8B C3 E8 FF FE E9 C7 04 53 56 8B D8 8D  // .W.........SV...
    35F0: 77 35 26 8A 44 02 32 E4 C1 E0 02 26 8B 37 26 8B  // w5&.D.2....&.7&.
    3600: 34 03 F0 26 8B 47 08 26 8B 5F 0A 26 89 04 26 89  // 4..&.G.&._.&..&.
    3610: 5C 02 5E 5B C3 53 52 56 8B D8 8C D0 8D 77 35 8E  // \.^[.SRV.....w5.
    3620: C0 26 8A 54 02 80 FA 40 73 21 26 8B 77 02 32 F6  // .&.T...@s!&.w.2.
    3630: C1 E2 02 26 8B 74 04 03 F2 26 8B 57 08 26 8B 47  // ...&.t...&.W.&.G
    3640: 0A 26 89 14 26 89 44 02 E9 7F 00 80 FA 41 75 12  // .&..&.D......Au.
    3650: 26 8B 47 08 26 8B 57 0A 26 89 47 10 26 89 57 12  // &.G.&.W.&.G.&.W.
    3660: EB 68 80 FA 40 75 12 26 8B 47 08 26 8B 57 0A 26  // .h..@u.&.G.&.W.&
    3670: 89 47 0C 26 89 57 0E EB 51 80 FA 42 75 0A 26 8B  // .G.&.W..Q..Bu.&.
    3680: 47 08 26 89 47 22 EB 42 80 FA 43 75 0A 26 8A 47  // G.&.G".B..Cu.&.G
    3690: 08 26 88 47 33 EB 33 80 FA 46 75 12 26 8B 57 08  // .&.G3.3..Fu.&.W.
    36A0: 26 8B 47 0A 26 89 57 18 26 89 47 1A EB 1C 80 FA  // &.G.&.W.&.G.....
    36B0: 47 75 0A 26 8B 47 08 26 89 47 24 EB 0D 80 FA 48  // Gu.&.G.&.G$....H
    36C0: 75 08 26 8B 47 08 26 89 47 20 5E 5A 5B C3 53 56  // u.&.G.&.G ^Z[.SV
    36D0: 8B D8 8D 77 35 26 8A 44 02 32 E4 26 89 47 14 26  // ...w5&.D.2.&.G.&
    36E0: C7 47 16 00 00 5E 5B C3 53 56 8B D8 26 8B 77 02  // .G...^[.SV..&.w.
    36F0: 26 8B 74 02 8A 04 32 E4 26 89 47 14 26 C7 47 16  // &.t...2.&.G.&.G.
    3700: 00 00 26 8B 5F 02 26 FF 47 02 5E 5B C3 53 56 8B  // ..&._.&.G.^[.SV.
    3710: D8 26 8B 77 02 26 8B 74 02 8B 34 26 89 77 14 26  // .&.w.&.t..4&.w.&
    3720: C7 47 16 00 00 26 8B 5F 02 26 83 47 02 02 5E 5B  // .G...&._.&.G..^[
    3730: C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B 04 8B  // .SV..&.w.&.t....
    3740: 74 02 26 89 47 14 26 89 77 16 26 8B 5F 02 26 83  // t.&.G.&.w.&._.&.
    3750: 47 02 04 5E 5B C3 53 52 56 8B D8 E8 70 FF 8B F3  // G..^[.SRV...p...
    3760: 26 8B 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8  // &.G.&.W.........
    3770: 26 01 47 14 26 11 54 16 8B C3 E8 2B 10 E9 4A FF  // &.G.&.T....+..J.
    3780: 53 8B D8 26 8B 5F 02 26 FF 47 02 5B C3 53 8B D8  // S..&._.&.G.[.S..
    3790: 26 8B 5F 02 26 83 47 02 02 5B C3 53 56 8B D8 E8  // &._.&.G..[.SV...
    37A0: 6B FF 8B F3 26 8B 57 20 33 C0 26 01 57 14 26 11  // k...&.W 3.&.W.&.
    37B0: 44 16 8C D2 8E C2 26 8B 47 2E 32 C0 80 E4 06 3D  // D.....&.G.2....=
    37C0: 00 02 75 07 32 E4 33 D2 5E 5B C3 26 8B 47 2E 32  // ..u.2.3.^[.&.G.2
    37D0: C0 80 E4 06 3D 00 04 74 EB 26 80 7F 34 00 75 08  // ....=..t.&..4.u.
    37E0: 8B C3 E8 2F 0F 5E 5B C3 26 8A 47 34 32 E4 26 89  // .../.^[.&.G42.&.
    37F0: 47 1C 26 C7 47 1E 00 00 8B C3 E8 EA FC 5E 5B C3  // G.&.G........^[.
    3800: 53 8B D8 E8 E2 FE 26 8B 47 14 C1 E0 02 26 8B 1F  // S.....&.G....&..
    3810: 26 8B 1F 03 D8 26 8B 07 26 8B 57 02 5B C3 24 38  // &....&..&.W.[.$8
    3820: 19 38 2F 38 7E 38 35 38 4D 38 67 38 72 38 78 38  // .8/8~858M8g8r8x8
    3830: 53 51 56 8B D8 E8 B0 FE 8C D2 8E C2 26 83 7F 16  // SQV.........&...
    3840: 00 75 22 26 83 7F 14 40 73 1B 26 8B 77 02 26 8B  // .u"&...@s.&.w.&.
    3850: 5F 14 C1 E3 02 26 8B 44 04 03 D8 26 8B 07 26 8B  // _....&.D...&..&.
    3860: 57 02 E9 7B 05 26 8B 77 14 26 8B 47 16 83 C6 C0  // W..{.&.w.&.G....
    3870: 83 D0 FF 75 71 83 FE 08 77 6C 03 F6 2E FF A4 B6  // ...uq...wl......
    3880: 37 26 8B 47 10 26 8B 57 12 E9 54 05 26 8B 47 0C  // 7&.G.&.W..T.&.G.
    3890: 26 8B 57 0E E9 49 05 26 8B 47 22 EB 4B 26 8A 4F  // &.W..I.&.G".K&.O
    38A0: 33 32 ED BB 01 00 33 D2 E3 06 D1 E3 D1 D2 E2 FA  // 32....3.........
    38B0: 8B C3 E9 2B 05 26 8A 4F 33 32 ED B8 01 00 33 D2  // ...+.&.O32....3.
    38C0: E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 E9 11 05 26  // ...............&
    38D0: 8B 47 18 26 8B 57 1A E9 06 05 26 8B 47 24 EB 08  // .G.&.W....&.G$..
    38E0: 26 8B 47 20 EB 02 33 C0 33 D2 E9 F3 04 53 56 8B  // &.G ..3.3....SV.
    38F0: D8 E8 F4 FD 8B F3 26 8B 47 18 26 8B 57 1A D1 EA  // ......&.G.&.W...
    3900: D1 D8 D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3  // ......&.G.&.T...
    3910: E8 16 0E 5E 5B C3 33 C0 33 D2 C3 53 56 8B D8 E8  // ...^[.3.3..SV...
    3920: EB FD 26 8B 77 14 26 03 77 22 8B 04 8B 54 02 5E  // ..&.w.&.w"...T.^
    3930: 5B C3 53 8B D8 26 C6 47 2B 04 E8 AB FD 26 8B 47  // [.S..&.G+....&.G
    3940: 14 26 8B 57 16 5B C3 53 8B D8 26 C6 47 2B 01 E8  // .&.W.[.S..&.G+..
    3950: BB FD EB E9 53 8B D8 26 C6 47 2B 00 E8 D2 FD EB  // ....S..&.G+.....
    3960: DC 53 8B D8 83 C3 35 26 8A 5F 01 C0 EB 03 80 E3  // .S....5&._......
    3970: 07 32 FF 03 DB FF 97 DA 90 5B C3 53 52 56 8B D8  // .2.......[.SRV..
    3980: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 F6 90  // &.G,2...........
    3990: 26 89 47 08 26 89 57 0A 26 8A 47 2D 32 E4 8B F0  // &.G.&.W.&.G-2...
    39A0: 03 F0 8B C3 FF 94 0E 91 26 89 47 04 26 89 57 06  // ........&.G.&.W.
    39B0: E9 17 FD 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1  // ...SQV..&.O+2...
    39C0: 8A 8C 3E 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6  // ..>...&.o.&._...
    39D0: 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 1E 91 8B  // &.O+2...........
    39E0: B4 20 91 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32  // . .&!O.&!w.&.O*2
    39F0: ED 8B F1 8A 8C 46 91 E3 0A 26 D1 67 04 26 D1 57  // .....F...&.g.&.W
    3A00: 06 E2 F6 26 8B 4F 08 26 8B 77 0A 26 89 4F 14 26  // ...&.O.&.w.&.O.&
    3A10: 89 77 16 E9 CA 03 53 51 52 56 57 8B D8 8C D0 8E  // .w....SQRVW.....
    3A20: C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A  // .&.G+2......&.G*
    3A30: 8B F8 8A 8D 46 91 32 ED 8B 84 1E 91 8B 94 20 91  // ....F.2....... .
    3A40: E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 14  // ............&!G.
    3A50: 26 21 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C 46 91  // &!W.&.G*2.....F.
    3A60: 32 ED E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A  // 2...&.o.&._...&.
    3A70: 47 2B 8B F0 C1 E6 02 8B 84 1E 91 8B 94 20 91 26  // G+........... .&
    3A80: 21 47 08 26 21 57 0A 26 8A 47 2A 32 E4 8B F0 8A  // !G.&!W.&.G*2....
    3A90: 8C 46 91 32 ED E3 0A 26 D1 67 08 26 D1 57 0A E2  // .F.2...&.g.&.W..
    3AA0: F6 26 8B 47 14 26 8B 57 16 26 09 47 08 26 09 57  // .&.G.&.W.&.G.&.W
    3AB0: 0A 5F 5E 5A 59 5B C3 53 51 56 8B D8 26 8A 4F 2B  // ._^ZY[.SQV..&.O+
    3AC0: 32 ED 8B F1 8A 8C 3E 91 E3 0A 26 D1 6F 06 26 D1  // 2.....>...&.o.&.
    3AD0: 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B  // _...&.O+2.......
    3AE0: 8C 1E 91 8B B4 20 91 26 21 4F 04 26 21 77 06 26  // ..... .&!O.&!w.&
    3AF0: 8A 4F 2A 32 ED 8B F1 8A 8C 46 91 E3 0A 26 D1 6F  // .O*2.....F...&.o
    3B00: 0A 26 D1 5F 08 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1  // .&._...&.O+2....
    3B10: E6 02 8B 8C 1E 91 8B B4 20 91 26 21 4F 08 26 21  // ........ .&!O.&!
    3B20: 77 0A E9 BB 02 51 52 57 8B D8 8C D0 8E C0 26 80  // w....QRW......&.
    3B30: 7F 2B 00 74 1A 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .+.t.&.G,2......
    3B40: C3 FF 94 F6 90 26 89 47 08 26 89 57 0A EB 10 26  // .....&.G.&.W...&
    3B50: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 02 91 26  // .G,2...........&
    3B60: 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF 94 0E 91 26  // .G-2...........&
    3B70: 89 47 04 26 89 57 06 8C D2 8E C2 26 80 7F 2B 00  // .G.&.W.....&..+.
    3B80: 74 4A 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47  // tJ&.G+2......&.G
    3B90: 2A 8B F8 8A 8D 46 91 32 ED 8B 84 1E 91 8B 94 20  // *....F.2....... 
    3BA0: 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47  // .............&!G
    3BB0: 08 26 21 57 0A 8B C3 E8 F9 FD 26 8B 47 04 26 8B  // .&!W......&.G.&.
    3BC0: 57 06 26 09 47 08 26 09 57 0A EB 10 26 8B 57 04  // W.&.G.&.W...&.W.
    3BD0: 26 8B 47 06 26 89 57 08 26 89 47 0A 26 8A 47 2C  // &.G.&.W.&.G.&.G,
    3BE0: 32 E4 8B F0 03 F0 8B C3 FF 94 EA 90 5F 5A 59 C3  // 2..........._ZY.
    3BF0: 53 51 52 56 57 8B D8 26 8A 47 2A 32 E4 8B F0 8A  // SQRVW..&.G*2....
    3C00: 8C 46 91 32 ED E3 0A 26 D1 67 04 26 D1 57 06 E2  // .F.2...&.g.&.W..
    3C10: F6 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02  // .....&.G+2......
    3C20: 26 8A 47 2A 8B F8 8A 8D 46 91 32 ED 8B 84 1E 91  // &.G*....F.2.....
    3C30: 8B 94 20 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // .. .............
    3C40: 26 09 47 04 26 09 57 06 26 8B 47 04 26 8B 57 06  // &.G.&.W.&.G.&.W.
    3C50: 26 21 47 08 26 21 57 0A E9 56 FE 55 8B EC 51 52  // &!G.&!W..V.U..QR
    3C60: 50 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // P..&.G,2........
    3C70: 94 F6 90 26 89 47 08 26 89 57 0A 26 8A 47 2B 88  // ...&.G.&.W.&.G+.
    3C80: 46 FA 8B C3 E8 DA FC 26 89 47 04 26 89 57 06 26  // F......&.G.&.W.&
    3C90: 8A 4F 2D 32 ED 8B F1 03 F1 8B C3 FF 94 0E 91 26  // .O-2...........&
    3CA0: 89 47 14 26 89 57 16 8B C3 E8 44 FF 8A 46 FA 32  // .G.&.W....D..F.2
    3CB0: E4 8B F0 8A 8C 3E 91 E3 0A 26 D1 6F 16 26 D1 5F  // .....>...&.o.&._
    3CC0: 14 E2 F6 26 8A 57 2B 32 F6 8B F2 C1 E6 02 8B 84  // ...&.W+2........
    3CD0: 1E 91 8B 94 20 91 26 21 47 14 26 21 57 16 26 8A  // .... .&!G.&!W.&.
    3CE0: 47 2A 32 E4 8B F0 8A 8C 46 91 32 ED E3 0A 26 D1  // G*2.....F.2...&.
    3CF0: 67 14 26 D1 57 16 E2 F6 26 8B 47 14 26 8B 57 16  // g.&.W...&.G.&.W.
    3D00: 26 09 47 08 26 09 57 0A 26 8A 47 2C 32 E4 8B F0  // &.G.&.W.&.G,2...
    3D10: 03 F0 8B C3 FF 94 EA 90 8D 66 FC 5A 59 5D C3 51  // .........f.ZY].Q
    3D20: 8B D8 E8 56 FC 26 8A 4F 2B 32 ED 8B F1 8A 8C 3E  // ...V.&.O+2.....>
    3D30: 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 8B C3 E8  // ...&.o.&._......
    3D40: AE FE 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94  // ..&.O,2.........
    3D50: EA 90 59 C3 8B D8 E8 22 FC 8B C3 E8 55 FC 26 8B  // ..Y...."....U.&.
    3D60: 47 04 26 8B 77 06 26 09 47 08 26 09 77 0A 26 8A  // G.&.w.&.G.&.w.&.
    3D70: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EA 90 C3 53  // G,2............S
    3D80: 56 8B D8 E8 F5 FB 8B C3 E8 28 FC 26 8B 47 04 26  // V........(.&.G.&
    3D90: 8B 77 06 26 31 47 08 26 31 77 0A 26 8A 47 2C 32  // .w.&1G.&1w.&.G,2
    3DA0: E4 8B F0 03 F0 8B C3 FF 94 EA 90 5E 5B C3 53 51  // ...........^[.SQ
    3DB0: 56 8B D8 E8 C5 FB 8B C3 E8 F8 FB 26 8B 4F 04 E3  // V..........&.O..
    3DC0: 0A 26 D1 67 08 26 D1 57 0A E2 F6 8B C3 E8 46 FC  // .&.g.&.W......F.
    3DD0: 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 EA 90  // &.O,2...........
    3DE0: 5E 59 5B C3 53 51 56 8B D8 E8 8F FB 8B C3 E8 C2  // ^Y[.SQV.........
    3DF0: FB 26 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2  // .&.O...&.o.&._..
    3E00: F6 EB C8 52 8B D8 E8 72 FB 8B C3 E8 A5 FB 8B F3  // ...R...r........
    3E10: 26 8B 47 04 26 8B 57 06 26 01 47 08 26 11 54 0A  // &.G.&.W.&.G.&.T.
    3E20: 8B C3 E8 F1 FB 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .....&.G,2......
    3E30: C3 FF 94 EA 90 5A C3 52 8B D8 E8 3E FB 8B C3 E8  // .....Z.R...>....
    3E40: 71 FB 8B F3 26 8B 47 04 26 8B 57 06 26 29 47 08  // q...&.G.&.W.&)G.
    3E50: 26 19 54 0A EB CA 51 52 8B F0 E8 1E FB 8B C6 E8  // &.T...QR........
    3E60: 55 FC 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B  // U.&.D.&.T.&.\.&.
    3E70: 4C 06 E8 FB F2 26 89 44 0C 26 89 54 0E 5A 59 C3  // L....&.D.&.T.ZY.
    3E80: 52 8B D0 E8 F5 FA 8B C2 E8 2C FC 8B C2 E8 5C 08  // R........,....\.
    3E90: 5A C3 51 52 57 8B F0 E8 E1 FA 8B C6 E8 18 FC 26  // Z.QRW..........&
    3EA0: 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8  // .D.&.T.&.\.&.L..
    3EB0: 3A F2 26 89 44 0C 26 89 54 0E 8C D7 8E C7 26 8B  // :.&.D.&.T.....&.
    3EC0: 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 1B  // D.&.T.&.\.&.L...
    3ED0: F2 26 89 5C 10 26 89 4C 12 E9 10 FD 52 8B D0 E8  // .&.\.&.L....R...
    3EE0: 99 FA 8B C2 E8 D0 FB 8B C2 E8 D3 07 5A C3 51 52  // ............Z.QR
    3EF0: 8B D8 E8 86 FA 8B C3 E8 BD FB 8C D1 8E C1 26 8B  // ..............&.
    3F00: 47 08 26 8B 57 0A 26 3B 57 06 75 0E 26 3B 47 04  // G.&.W.&;W.u.&;G.
    3F10: 75 08 26 C6 47 30 01 5A 59 C3 8B D0 26 8B 47 0A  // u.&.G0.ZY...&.G.
    3F20: 26 3B 47 06 72 08 75 0A 26 3B 57 04 73 04 33 C0  // &;G.r.u.&;W.s.3.
    3F30: EB 03 B8 02 00 26 88 47 30 5A 59 C3 51 52 57 8B  // .....&.G0ZY.QRW.
    3F40: D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 F6  // .&.G,2..........
    3F50: 90 26 89 47 08 26 89 57 0A 8C D0 8E C0 26 8A 47  // .&.G.&.W.....&.G
    3F60: 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D 3E 91 32 ED  // +2..........>.2.
    3F70: 8B 84 1E 91 8B 94 20 91 E3 06 D1 E0 D1 D2 E2 FA  // ...... .........
    3F80: F7 D0 F7 D2 26 21 47 08 26 21 57 0A E9 4D FC 55  // ....&!G.&!W..M.U
    3F90: 8B EC 51 52 57 83 EC 06 8B D8 26 8A 47 2B 32 E4  // ..QRW.....&.G+2.
    3FA0: 8B F0 C1 E6 02 8B F8 8A 8D 3E 91 32 ED 8B 84 1E  // .........>.2....
    3FB0: 91 89 46 F4 8B 84 20 91 89 46 F6 E3 08 D1 66 F4  // ..F... ..F....f.
    3FC0: D1 56 F6 E2 F8 8B 7E F4 8B 46 F6 89 46 F8 26 8A  // .V....~..F..F.&.
    3FD0: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 F6 90 26 89  // G,2...........&.
    3FE0: 47 08 26 89 57 0A 8B C3 E8 47 F9 26 89 47 04 26  // G.&.W....G.&.G.&
    3FF0: 89 57 06 8B C7 F7 D0 8B 56 F6 F7 D2 26 23 47 08  // .W......V...&#G.
    4000: 26 23 57 0A 26 89 47 14 26 89 57 16 26 21 7F 08  // &#W.&.G.&.W.&!..
    4010: 8B 46 F6 26 21 47 0A 8C D1 8D 77 35 8E C1 26 80  // .F.&!G....w5..&.
    4020: 3C 19 73 12 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1  // <.s.&.O...&.g.&.
    4030: 57 0A E2 F6 EB 10 26 8B 4F 04 E3 0A 26 D1 6F 0A  // W.....&.O...&.o.
    4040: 26 D1 5F 08 E2 F6 26 21 7F 08 8B 46 F8 26 21 47  // &._...&!...F.&!G
    4050: 0A 26 8B 57 14 26 8B 47 16 26 09 57 08 26 09 47  // .&.W.&.G.&.W.&.G
    4060: 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EA  // .&.G,2..........
    4070: 90 8D 66 FA 5F E9 A3 FC 52 8B D8 E8 FD F8 8B C3  // ..f._...R.......
    4080: E8 34 FA 26 8B 47 08 26 8B 57 0A 26 85 57 06 75  // .4.&.G.&.W.&.W.u
    4090: 06 26 85 47 04 74 05 B8 03 00 EB 03 B8 01 00 26  // .&.G.t.........&
    40A0: 88 47 30 5A C3 53 51 52 56 8B D8 26 8A 4F 2D 32  // .G0Z.SQRV..&.O-2
    40B0: ED 8B F1 03 F1 FF 94 0E 91 26 89 47 04 26 89 57  // .........&.G.&.W
    40C0: 06 26 8A 47 2B 32 E4 8B F0 8A 8C 3E 91 E3 0A 26  // .&.G+2.....>...&
    40D0: D1 6F 06 26 D1 5F 04 E2 F6 26 8A 47 2B 8B F0 C1  // .o.&._...&.G+...
    40E0: E6 02 8B 84 1E 91 8B 94 20 91 26 21 47 04 26 21  // ........ .&!G.&!
    40F0: 57 06 E9 BD F9 52 8B D8 E8 AA FF 26 8B 47 04 26  // W....R.....&.G.&
    4100: 8B 57 06 26 89 47 18 26 89 57 1A 5A C3 51 52 8B  // .W.&.G.&.W.Z.QR.
    4110: D8 E8 91 FF 8C D0 8E C0 26 8B 77 02 26 8B 74 02  // ........&.w.&.t.
    4120: 81 3C 5A 5A 74 5B 26 8B 77 02 26 8B 74 02 80 3C  // .<ZZt[&.w.&.t..<
    4130: 63 75 E1 26 8B 77 02 26 FF 44 02 8B C3 E8 21 F8  // cu.&.w.&.D....!.
    4140: 26 89 47 08 26 89 57 0A 8B C3 E8 FA F7 26 89 47  // &.G.&.W......&.G
    4150: 14 26 89 57 16 8C D1 8E C1 26 8B 57 04 26 8B 47  // .&.W.....&.W.&.G
    4160: 06 26 3B 47 0A 75 AD 26 3B 57 08 75 A7 26 8B 77  // .&;G.u.&;W.u.&.w
    4170: 02 26 8B 04 26 03 47 14 8B DE 26 89 47 02 5A 59  // .&..&.G...&.G.ZY
    4180: C3 26 8B 5F 02 26 83 47 02 02 5A 59 C3 52 57 8B  // .&._.&.G..ZY.RW.
    4190: D8 8C D0 8E C0 26 8B 77 02 26 8B 74 02 8A 54 01  // .....&.w.&.t..T.
    41A0: 84 D2 75 08 26 C7 47 22 00 00 EB 2F 80 FA FF 75  // ..u.&.G".../...u
    41B0: 14 26 8B 77 02 26 8B 3F 26 8B 34 26 2B 75 02 26  // .&.w.&.?&.4&+u.&
    41C0: 89 77 22 EB 16 26 8B 07 E8 E3 02 8B F0 8A C2 32  // .w"..&.........2
    41D0: E4 03 C0 03 F0 8B 04 26 89 47 22 26 8B 5F 02 26  // .......&.G"&._.&
    41E0: 83 47 02 02 5F 5A C3 8B D8 26 80 67 2F F9 26 8B  // .G.._Z...&.g/.&.
    41F0: 77 02 26 8B 74 02 8A 44 01 26 88 47 34 26 8B 5F  // w.&.t..D.&.G4&._
    4200: 02 26 83 47 02 03 C3 8B D8 26 8B 77 02 26 8B 74  // .&.G.....&.w.&.t
    4210: 02 8B 74 01 26 89 77 20 EB E3 53 8B D8 26 8A 47  // ..t.&.w ..S..&.G
    4220: 2C 32 E4 24 03 26 80 67 2F F9 C1 E0 09 26 09 47  // ,2.$.&.g/....&.G
    4230: 2E E9 4F F5 8B D8 26 8B 77 02 26 8B 74 02 8A 44  // ..O...&.w.&.t..D
    4240: 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8  // .2.&.G.&.G......
    4250: 40 04 26 8B 5F 02 26 83 47 02 02 C3 8B D8 26 8B  // @.&._.&.G.....&.
    4260: 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26  // w.&.t..D.2.&.G.&
    4270: C7 47 06 00 00 8B C3 E8 08 04 EB D6 53 56 8B D8  // .G..........SV..
    4280: 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47  // &.w.&.t..D.2.&.G
    4290: 04 26 C7 47 06 00 00 8B C3 E8 06 04 E9 86 F4 53  // .&.G...........S
    42A0: 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4  // V..&.w.&.t..D.2.
    42B0: 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 F0 03 E9  // &.G.&.G.........
    42C0: 63 F4 53 56 8B D8 26 8B 77 02 8B DE 26 8B 5F 02  // c.SV..&.w...&._.
    42D0: 8B 5F 01 83 C3 03 26 01 5C 02 5E 5B C3 51 52 8B  // ._....&.\.^[.QR.
    42E0: D8 26 8B 77 02 26 83 44 02 02 26 8B 07 E8 A0 01  // .&.w.&.D..&.....
    42F0: 8B C8 26 8B 77 28 8A 44 01 32 E4 03 C0 8B F1 03  // ..&.w(.D.2......
    4300: F0 83 3C 00 74 4F 26 8B 77 28 8A 54 01 32 F6 8B  // ..<.tO&.w(.T.2..
    4310: C3 E8 B0 01 26 88 47 31 26 8B 77 02 26 8B 34 8B  // ....&.G1&.w.&.4.
    4320: 44 04 C1 E8 08 32 E4 24 7F C1 E8 02 32 E4 24 1F  // D....2.$....2.$.
    4330: 26 80 67 2F 07 C1 E0 0B 26 09 47 2E 26 8B 37 26  // &.g/....&.G.&.7&
    4340: 8B 47 2E C1 E8 0B C1 E0 02 26 01 04 26 C6 47 32  // .G.......&..&.G2
    4350: 01 26 89 4F 28 5A 59 C3 53 8B D8 26 C6 47 32 82  // .&.O(ZY.S..&.G2.
    4360: 5B C3 57 8B D8 8C D6 8E C6 26 80 7F 2C 05 74 0A  // [.W......&..,.t.
    4370: 26 8A 47 2C 26 3A 47 30 75 1E 26 8B 77 02 26 8B  // &.G,&:G0u.&.w.&.
    4380: 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B  // t.&...&.=.t...&.
    4390: 5F 02 26 89 77 02 5F C3 26 8B 5F 02 26 83 47 02  // _.&.w._.&._.&.G.
    43A0: 03 5F C3 53 56 57 8B D8 8C D6 8E C6 26 80 7F 30  // ._.SVW......&..0
    43B0: 01 74 0A 26 8A 47 30 26 3A 47 2C 75 20 26 8B 77  // .t.&.G0&:G,u &.w
    43C0: 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03  // .&.t.&...&.=.t..
    43D0: F7 26 8B 5F 02 26 89 77 02 5F 5E 5B C3 26 8B 5F  // .&._.&.w._^[.&._
    43E0: 02 26 83 47 02 03 EB F1 53 56 57 8B D8 8C D0 8E  // .&.G....SVW.....
    43F0: C0 26 80 7F 30 01 74 E5 EB C3 55 8B EC 53 51 52  // .&..0.t...U..SQR
    4400: 57 8B D8 26 8B 77 02 26 8B 74 02 8A 04 26 C6 47  // W..&.w.&.t...&.G
    4410: 3D 00 8C D1 8E C1 26 80 7F 3D 08 73 20 26 8B 77  // =.....&..=.s &.w
    4420: 02 26 8A 57 3D 32 F6 26 8B 7C 02 03 FA 8B F3 03  // .&.W=2.&.|......
    4430: F2 8A 15 26 88 54 35 26 FE 47 3D EB D5 26 8B 7F  // ...&.T5&.G=..&..
    4440: 02 8A D0 32 F6 8B F2 C1 E6 02 8A 94 6B 91 26 01  // ...2........k.&.
    4450: 55 02 26 8B 7F 28 8A 55 01 80 E2 07 26 88 57 2D  // U.&..(.U....&.W-
    4460: 26 8B 7F 28 8A 55 01 C0 EA 03 80 E2 07 26 88 57  // &..(.U.......&.W
    4470: 2B 26 8B 7F 28 8A 55 01 C0 EA 06 26 88 57 2A 8A  // +&..(.U....&.W*.
    4480: 94 6A 91 26 88 57 2C 8D 66 F8 5F 5A 59 5B 5D C3  // .j.&.W,.f._ZY[].
    4490: 53 56 8B D8 26 8B 77 02 8B C6 8B 74 48 03 F0 8B  // SV..&.w....tH...
    44A0: D8 8B 74 1E 8B C6 03 C3 83 C0 04 5E 5B C3 53 56  // ..t........^[.SV
    44B0: 8B D8 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8 8B  // ..&.w....tH.....
    44C0: 74 20 EB E0 8A C2 C3 16 07 55 8B EC 53 51 56 57  // t .......U..SQVW
    44D0: 83 EC 40 8B F8 89 46 B8 E8 D3 FF 8B D8 89 46 E0  // ..@...F.......F.
    44E0: 26 8B 45 02 8B 5F 2E 03 D8 89 5E DE 83 46 DE 04  // &.E.._....^..F..
    44F0: 8B C7 E8 9B FF 89 46 E0 32 F6 8D 46 B8 E8 C4 FF  // ......F.2..F....
    4500: 8A D0 32 F6 03 D2 8B 5E E0 03 DA 83 3F 00 0F 84  // ..2....^....?...
    4510: 65 01 88 46 E9 80 66 E7 F9 C6 46 EC 00 C7 46 D8  // e..F..f...F...F.
    4520: 00 00 66 C7 46 D0 00 00 00 00 C7 46 F6 00 00 C6  // ..f.F......F....
    4530: 46 EA 01 EB 06 3C 01 0F 85 8C 00 8A 56 E9 8A C2  // F....<......V...
    4540: 32 E4 03 C0 8B 5E E0 03 D8 83 3F 00 74 75 26 8B  // 2....^....?.tu&.
    4550: 45 02 8B 1F 03 D8 8B 47 04 32 E4 8B C8 83 C1 09  // E......G.2......
    4560: 32 ED 80 E1 FE 83 F9 00 74 07 D1 E9 33 C0 50 E2  // 2.......t...3.P.
    4570: FD 8B C4 8B D8 89 46 BA 85 C0 74 41 83 C0 08 26  // ......F...tA...&
    4580: 89 47 04 8A C2 32 E4 03 C0 8B 5E E0 03 D8 26 8B  // .G...2....^...&.
    4590: 45 02 03 07 8B 5E BA 26 89 07 8B 5E BA 26 8B 07  // E....^.&...^.&..
    45A0: 83 C0 06 26 89 47 02 8B 5E BA 8B 76 F6 26 89 77  // ...&.G..^..v.&.w
    45B0: 06 8B 5E BA 89 5E F6 C6 46 EA 00 EB 0A C6 46 EA  // ..^..^..F.....F.
    45C0: 87 EB 04 C6 46 EA 83 8A 46 EA 32 E4 83 F8 10 0F  // ....F...F.2.....
    45D0: 8F 99 00 88 66 EA 8A 46 EA 32 E4 85 C0 0F 8F 83  // ....f..F.2......
    45E0: 00 8C D0 8B 5E BA 8E C0 26 8B 5F 02 89 5E E0 8B  // ....^...&._..^..
    45F0: 5E BA 26 8B 5F 02 80 3F 5B 75 4A C6 46 EA 10 8B  // ^.&._..?[uJ.F...
    4600: 5E BA 26 8B 5F 06 89 5E F6 8B 5E BA 26 8B 1F 8B  // ^.&._..^..^.&...
    4610: 47 04 32 E4 8B C8 83 C1 09 32 ED 80 E1 FE 03 E1  // G.2......2......
    4620: 8B 5E F6 89 5E BA 85 DB 74 AC 26 8B 1F 8B 47 04  // .^..^...t.&...G.
    4630: C1 E8 08 32 E4 24 7F C1 E8 02 C1 E0 02 8B 5E B8  // ...2.$........^.
    4640: 26 29 07 EB 91 8D 46 B8 E8 AF FD 8A D0 8D 46 B8  // &)....F.......F.
    4650: E8 2E 00 8A DA 32 FF C1 E3 02 8D 46 B8 FF 97 68  // .....2.....F...h
    4660: 91 E9 72 FF 83 7E F6 00 0F 85 C9 FE 80 7E EA 10  // ..r..~.......~..
    4670: 74 05 8A 46 EA EB 02 32 C0 8D 66 F8 5F 5E E9 0B  // t..F...2..f._^..
    4680: FE C3 53 51 8B D8 26 8A 4F 04 32 ED E8 EC E7 59  // ..SQ..&.O.2....Y
    4690: 5B C3 53 51 8B D8 26 8A 4F 04 32 ED E8 E7 E7 59  // [.SQ..&.O.2....Y
    46A0: 5B C3 53 8B D8 26 8A 47 04 32 E4 E6 80 5B C3 53  // [.S..&.G.2...[.S
    46B0: 51 8B D8 26 8A 4F 04 32 ED E8 2A D5 59 5B C3 53  // Q..&.O.2..*.Y[.S
    46C0: 8B D8 66 50 66 52 66 51 66 26 8B 47 08 66 26 8B  // ..fPfRfQf&.G.f&.
    46D0: 57 10 66 26 8B 4F 04 66 F7 F1 66 26 89 47 0C 66  // W.f&.O.f..f&.G.f
    46E0: 26 89 57 10 66 59 66 5A 66 58 5B C3 53 8B D8 66  // &.W.fYfZfX[.S..f
    46F0: 50 66 52 66 51 66 26 8B 47 08 66 26 8B 4F 04 66  // PfRfQf&.G.f&.O.f
    4700: F7 E1 66 26 89 47 0C 66 26 89 57 10 66 59 66 5A  // ..f&.G.f&.W.fYfZ
    4710: 66 58 5B C3 53 57 8B D8 26 8B 5F 14 E8 56 EB 8B  // fX[.SW..&._..V..
    4720: D0 66 C1 E8 10 92 5F 5B C3 53 57 8B D8 26 8B 47  // .f...._[.SW..&.G
    4730: 14 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1  // .&.W.....f......
    4740: E3 02 E8 54 EB EB D8 53 52 57 8B D8 26 8B 47 08  // ...T...SRW..&.G.
    4750: 26 8B 57 0A 92 66 C1 E0 10 8B C2 26 8B 5F 14 E8  // &.W..f.....&._..
    4760: 78 EA 5F 5A 5B C3 53 52 8B D8 26 8B 47 1C 26 8B  // x._Z[.SR..&.G.&.
    4770: 57 1E 92 66 C1 E0 10 8B C2 26 8B 5F 26 8B 5F 01  // W..f.....&._&._.
    4780: E8 57 EA 5A 5B C3 53 52 56 8B F0 26 8B 5C 26 8B  // .W.Z[.SRV..&.\&.
    4790: 5F 01 E8 E0 EA 8B D0 66 C1 E8 10 92 26 89 44 1C  // _......f....&.D.
    47A0: 26 89 54 1E 5E 5A 5B C3 53 51 52 57 8B D8 26 8B  // &.T.^Z[.SQRW..&.
    47B0: 47 08 26 8B 57 0A 92 66 C1 E0 10 8B C2 8B C8 26  // G.&.W..f.......&
    47C0: 8B 47 14 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B  // .G.&.W.....f....
    47D0: DA C1 E3 02 8B C1 E8 34 EA 5F 5A 59 5B C3 8B D0  // .......4._ZY[...
    47E0: 66 C1 E8 10 92 C3 1E 06 66 50 66 51 66 52 66 53  // f.......fPfQfRfS
    47F0: 66 55 66 56 66 57 0E 1F 0A C0 75 06 E8 07 01 E9  // fUfVfW....u.....
    4800: A8 00 3C 01 75 06 E8 37 01 E9 9E 00 3C 02 75 06  // ..<.u..7....<.u.
    4810: E8 5F 02 E9 94 00 3C 03 75 0B E8 91 03 8B EC 89  // ._....<.u.......
    4820: 5E 0C E9 85 00 3C 04 75 02 EB 7D 3C 05 75 0A E8  // ^....<.u..}<.u..
    4830: 0E 04 8B EC 89 56 10 EB 71 3C 06 75 10 E8 8C 03  // .....V..q<.u....
    4840: 8B EC 89 5E 0C 89 4E 14 89 56 10 EB 5D 3C 07 75  // ...^..N..V..]<.u
    4850: 02 EB 55 3C 08 75 0A E8 D0 03 8B EC 88 7E 0D EB  // ..U<.u.......~..
    4860: 49 3C 09 75 02 EB 41 3C 0A 75 10 E8 65 04 8B EC  // I<.u..A<.u..e...
    4870: 89 4E 14 89 7E 00 8C 46 1C EB 2F 3C 0B 75 02 EB  // .N..~..F../<.u..
    4880: 27 3C 10 75 0A E8 5A 04 8B EC 89 5E 0C EB 1B 3C  // '<.u..Z....^...<
    4890: 11 75 02 EB 13 3C 15 75 0F E8 80 04 8B EC 89 5E  // .u...<.u.......^
    48A0: 0C EB 07 B8 4F 01 EB 02 32 C0 8B EC 89 46 18 66  // ....O...2....F.f
    48B0: 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3  // _f^f]f[fZfYfX...
    48C0: 50 1E 2E 8E 1E 0B 03 8C D8 A3 34 58 A3 44 58 A3  // P.........4X.DX.
    48D0: 56 58 2E 8E 1E 03 03 A3 AA 04 1F 58 CB 00 30 31  // VX.........X..01
    48E0: 2E 30 30 00 56 45 53 41 00 03 C4 01 00 00 01 00  // .00.VESA........
    48F0: 00 00 00 00 00 00 00 03 02 10 E9 00 00 00 7E 00  // ..............~.
    4900: 00 00 76 48 00 00 B9 3F 00 8B DF 83 C7 04 FC 66  // ..vH...?.......f
    4910: 33 C0 F3 66 AB 8B FB BE 7C 48 B9 22 00 F3 A4 06  // 3..f....|H."....
    4920: 1F 8C 4F 08 8C 47 10 8C 4F 18 8C 4F 1C 8C 4F 20  // ..O..G..O..O..O 
    4930: 83 C7 22 89 7F 0E 0E 1F E8 85 D1 B0 4F 32 E4 C3  // ..".........O2..
    4940: 56 51 57 B9 10 00 66 33 C0 F3 66 AB 5F 59 8C DB  // VQW...f3..f._Y..
    4950: 06 1F C7 05 BB 00 C6 45 02 07 C7 45 04 40 00 C7  // .......E...E.@..
    4960: 45 06 40 00 C6 45 1B 06 C6 45 18 01 C6 45 1A 01  // E.@..E...E...E..
    4970: C6 45 1E 01 66 C7 45 3E 00 84 D7 17 8E DB E8 4F  // .E..f.E>.......O
    4980: CA 66 0B C0 0F 84 E1 00 06 1F 66 89 45 28 8C C8  // .f........f.E(..
    4990: 66 C1 E0 10 B8 35 4C 66 89 45 0C 81 F9 FF 81 0F  // f....5Lf.E......
    49A0: 84 C2 00 80 E5 03 B2 01 53 8E DB BE 80 1C E8 31  // ........S......1
    49B0: CF 5B 06 1F 0F 84 B1 00 53 E8 AD D1 66 89 45 12  // .[......S...f.E.
    49C0: C7 45 16 08 10 8D 5C 0C E8 D8 E8 66 89 45 1F 66  // .E....\....f.E.f
    49D0: 89 45 36 8D 5C 10 E8 CA E8 66 89 45 23 66 89 45  // .E6.\....f.E#f.E
    49E0: 3A 8D 5C 08 E8 BC E8 0A C0 75 03 5B EB 7B E8 78  // :.\......u.[.{.x
    49F0: D1 66 C1 E8 10 3D 58 02 74 0D 3D 5E 01 74 08 77  // .f...=X.t.=^.t.w
    4A00: 0A C6 45 17 08 EB 04 C6 45 17 0E 2E A1 05 03 89  // ..E.....E.......
    4A10: 45 08 8D 5C 04 E8 8B E8 66 8B C8 66 C1 E9 10 D3  // E..\....f..f....
    4A20: E0 89 45 10 89 45 32 B0 08 D2 E0 88 45 19 8D 5C  // ..E..E2.....E..\
    4A30: 14 E8 6F E8 5B 3D 00 03 77 2F 53 8B D8 B8 00 03  // ..o.[=..w/S.....
    4A40: 33 D2 F7 F3 5B FE C8 88 45 1D 88 45 35 88 45 34  // 3...[...E..E5.E4
    4A50: 8E DB 57 53 BE 80 1C E8 DF C9 5B 5F 0B C9 75 05  // ..WS......[_..u.
    4A60: 06 1F 83 25 FE 32 E4 EB 02 B4 03 B0 4F 8E DB 5E  // ...%.2......O..^
    4A70: C3 00 81 FB FF 81 74 68 0A FF 75 04 8B C3 EB 21  // ......th..u....!
    4A80: F6 C7 08 75 61 8B CB B2 01 BE 20 1C E8 53 CE 74  // ...ua..... ..S.t
    4A90: 55 E8 B4 D0 0A C0 75 0E 66 C1 E8 10 80 E7 80 0A  // U.....u.f.......
    4AA0: C7 E8 D5 02 EB 3A E8 23 CC 74 06 E8 97 CA E8 E6  // .....:.#.t......
    4AB0: C3 BE 20 1C E8 56 C9 74 2D E8 A5 00 E8 2C 00 66  // .. ..V.t-....,.f
    4AC0: BB 20 1C 00 1C E8 77 D0 BE 00 1C E8 7A D0 66 C1  // . ....w.....z.f.
    4AD0: E8 10 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 86 C9  // ....2....t..@...
    4AE0: B0 4F 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0 8E  // .O2....O...V.3..
    4AF0: C0 BE 20 1C E8 72 D0 8B C8 66 C1 E8 10 8B D0 C1  // .. ..r...f......
    4B00: E9 03 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16 84  // ..&..J......&...
    4B10: 04 26 C6 06 51 04 00 26 C6 06 50 04 00 26 C6 06  // .&..Q..&..P..&..
    4B20: 49 04 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04 10  // I.b&..L...&.....
    4B30: 26 C7 06 0C 01 0D 62 8C C8 26 A3 0E 01 07 5E C3  // &.....b..&....^.
    4B40: 01 0F 00 0A 00 00 00 00 00 40 05 0F FF 00 01 02  // .........@......
    4B50: 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F  // ................
    4B60: 00 FC BA C4 03 B8 00 01 EF B9 04 00 B4 01 BE D8  // ................
    4B70: 4A AC 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03 EF B9  // J...............
    4B80: 09 00 BA CE 03 32 E4 BE DC 4A 8A C4 EE AC 42 EE  // .....2...J....B.
    4B90: 4A FE C4 E2 F5 BA DA 03 EC B9 14 00 BA C0 03 32  // J..............2
    4BA0: E4 BE E5 4A 8A C4 EE AC EE FE C4 E2 F7 C3 BE 00  // ...J............
    4BB0: 1C E8 94 CF 66 C1 E8 10 8B D8 E8 64 CF 75 05 E8  // ....f......d.u..
    4BC0: 50 CF 75 04 B8 4F 00 C3 B8 4F 03 C3 E8 52 CF 74  // P.u..O...O...R.t
    4BD0: 53 BE 00 1C 80 FB 00 74 18 80 FB 01 75 05 E8 90  // S......t....u...
    4BE0: CF EB 1D 80 FB 02 75 10 8B C1 E8 43 CF D3 E8 8B  // ......u....C....
    4BF0: C8 E8 33 CA 74 2E EB 08 80 FB 03 75 24 E8 E7 CE  // ..3.t......u$...
    4C00: E8 2D CF 8B D8 D3 E3 50 33 C0 BA 00 03 3B DA 77  // .-.....P3....;.w
    4C10: 05 BA FF FF EB 04 F7 F3 8B D0 58 8B C8 B8 4F 00  // ..........X...O.
    4C20: C3 32 C0 C3 B0 4F B4 03 C3 00 0A DB 75 07 8A EF  // .2...O......u...
    4C30: E8 01 CB EB 05 E8 E6 CA 8A F8 B0 4F 32 E4 C3 00  // ...........O2...
    4C40: E8 DE CE 74 2C BE 00 1C E8 FD CE 66 C1 E8 10 F6  // ...t,......f....
    4C50: C4 40 75 1D 0A FF 75 05 E8 1E 00 EB 0F 80 FF 01  // .@u...u.........
    4C60: 75 14 BB 13 00 E8 09 E6 D1 E8 8B D0 B0 4F 32 E4  // u............O2.
    4C70: C3 B0 4F B4 03 C3 32 C0 C3 52 53 66 50 81 E2 FF  // ..O...2..RSfP...
    4C80: 02 D1 E2 8B C2 40 66 C1 E0 10 8B C2 BB 13 00 E8  // .....@f.........
    4C90: 3A E5 BB 12 00 E8 34 E5 66 58 5B 5A C3 9C 1E 06  // :.....4.fX[Z....
    4CA0: 66 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F  // fPfQfRfSfUfVfW..
    4CB0: E8 34 E6 E8 8A FF E8 53 E6 8B EC 89 56 10 89 46  // .4.....S....V..F
    4CC0: 18 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07  // .f_f^f]f[fZfYfX.
    4CD0: 1F 9D CB 0E 07 BF 10 90 2E 8B 0E 0E 90 B8 4F 00  // ..............O.
    4CE0: C3 00 0A DB 75 06 B7 04 B3 10 EB 26 80 FB 01 75  // ....u......&...u
    4CF0: 14 E8 D8 C9 75 21 53 B1 01 0A FF 74 02 B1 00 E8  // ....u!S....t....
    4D00: ED C8 5B EB 0D 80 FB 02 75 0D E8 05 CA 8A F8 C0  // ..[.....u.......
    4D10: E7 02 B0 4F 32 E4 C3 B8 4F 03 C3 00 80 E3 01 0A  // ...O2...O.......
    4D20: DB 75 05 BB 02 01 EB 0E E8 A1 C9 75 0E 33 C0 53  // .u.........u.3.S
    4D30: E8 91 B8 5B 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3  // ...[t..O2...O...
    4D40: 80 FC 1D 72 03 CD 42 C3 1E 06 66 50 66 51 66 52  // ...r..B...fPfQfR
    4D50: 66 53 66 55 66 56 66 57 0E 1F 50 0F B6 C4 D1 E0  // fSfUfVfW..P.....
    4D60: 8B F0 58 2E FF 94 22 4D 66 5F 66 5E 66 5D 66 5B  // ..X..."Mf_f^f]f[
    4D70: 66 5A 66 59 66 58 07 1F C3 0E 1F 50 0F B6 C4 D1  // fZfYfX.....P....
    4D80: E0 8B F0 58 2E FF 94 22 4D C3 5C 4D 78 86 91 86  // ...X..."M.\Mx...
    4D90: AE 86 5B 4E B1 7D E3 7D 56 7E D9 7E 67 80 6B 80  // ..[N.}.}V~.~g.k.
    4DA0: 74 83 45 84 C8 84 2F 85 CA 86 2C 87 D5 89 74 50  // t.E.../...,...tP
    4DB0: 1C 8E 10 4D 10 4D 10 4D 10 4D 10 4D 10 4D EC 8E  // ...M.M.M.M.M.M..
    4DC0: EF 72 43 74 2E 8E 1E 03 03 80 26 87 04 F3 50 8A  // .rCt......&...P.
    4DD0: E0 80 E4 7F 80 FC 03 74 07 80 FC 12 74 02 58 C3  // .......t....t.X.
    4DE0: E8 C4 01 3B D3 75 02 58 C3 BA CC 03 EC B2 B4 B1  // ...;.u.X........
    4DF0: 30 26 F6 47 09 01 74 0C B2 D4 B1 20 A8 01 75 49  // 0&.G..t.... ..uI
    4E00: B5 09 EB 06 A8 01 74 41 B5 0B 53 E8 6A 41 0A FF  // ......tA..S.jA..
    4E10: 5B 75 0B 80 26 88 04 F0 08 2E 88 04 EB 2B 58 80  // [u..&........+X.
    4E20: 0E 87 04 08 80 26 10 04 CF 08 0E 10 04 89 16 63  // .....&.........c
    4E30: 04 C7 06 85 04 08 00 C6 06 84 04 18 C7 06 0C 01  // ................
    4E40: FA 59 8C 0E 0E 01 CD 42 C3 80 26 10 04 CF 08 0E  // .Y.....B..&.....
    4E50: 10 04 58 53 50 0E 1F 33 C9 8A C8 E8 6E C8 74 06  // ..XSP..3....n.t.
    4E60: E8 E2 C6 E8 31 C0 B2 08 BE 40 1C E8 74 CA BE 40  // ....1....@..t..@
    4E70: 1C E8 99 C5 58 5B 0F 84 6E FF 2E 8E 1E 03 03 0E  // ....X[..n.......
    4E80: 07 E8 13 29 0E 1F 53 66 BB 40 1C 00 1C E8 AF CC  // ...)..Sf.@......
    4E90: BE 00 1C B0 20 E8 CE C5 5B 2E 8E 1E 03 03 0E 07  // .... ...[.......
    4EA0: E8 1C 2E E8 24 00 E8 28 3D E8 D1 01 E8 8E 01 E8  // ....$..(=.......
    4EB0: AE 3E 0E 1F BE 00 1C B0 10 E8 AA C5 E8 F7 2D E8  // .>............-.
    4EC0: EF 2D C3 8B EC C6 46 1B 00 C3 E8 2F 00 E8 0A 00  // .-....F..../....
    4ED0: E8 BD 00 E8 52 00 E8 5C 0A C3 53 83 C3 0A 8B 16  // ....R..\..S.....
    4EE0: 63 04 B9 19 00 B8 11 30 EF 32 C0 26 8A 27 EF 43  // c......0.2.&.'.C
    4EF0: FE C0 E2 F7 5B 80 C2 06 32 C0 EE C3 53 BA C4 03  // ....[...2...S...
    4F00: 83 C3 05 B9 04 00 B0 01 26 8A 27 3C 01 75 03 80  // ........&.'<.u..
    4F10: CC 20 EF 43 FE C0 E2 F0 5B 26 8A 47 09 BA C2 03  // . .C....[&.G....
    4F20: EE B2 C4 B8 00 03 EF C3 8B F3 83 C6 23 BA DA 03  // ............#...
    4F30: 26 F6 47 09 01 75 02 B2 BA F6 06 89 04 08 74 1D  // &.G..u........t.
    4F40: 83 C6 10 EC B9 04 00 B4 10 B2 C0 80 FC 11 74 07  // ..............t.
    4F50: 8A C4 EE 26 8A 04 EE 46 FE C4 E2 EF C3 53 EC 8B  // ...&...F.....S..
    4F60: DE B9 14 00 32 E4 B2 C0 8A C4 EE FE C4 26 8A 07  // ....2........&..
    4F70: EE 43 E2 F4 8A C4 EE 32 C0 EE 1E 06 E8 49 2D 0B  // .C.....2.....I-.
    4F80: ED 74 09 1F 1E B9 10 00 F3 A4 46 A4 07 1F 5B C3  // .t........F...[.
    4F90: 53 83 C3 37 B9 09 00 32 C0 BA CE 03 26 8A 27 EF  // S..7...2....&.'.
    4FA0: 43 FE C0 E2 F7 5B C3 BB 32 52 0E 07 8B D3 0A E4  // C....[..2R......
    4FB0: 7D 01 C3 E8 01 00 C3 33 F6 80 FC 03 7F 3C 4A F6  // }......3.....<J.
    4FC0: 06 89 04 10 75 20 A0 88 04 24 0F 3C 02 7E 24 3C  // ....u ...$.<.~$<
    4FD0: 08 74 20 3C 06 74 1C 3C 07 74 18 B0 40 F6 E4 03  // .t <.t.<.t..@...
    4FE0: D8 81 C3 00 04 C3 B0 40 D0 EC F6 E4 03 D8 81 C3  // .......@........
    4FF0: 80 04 C3 B0 40 F6 E4 03 D8 C3 80 FC 07 75 11 F6  // ....@........u..
    5000: 06 89 04 10 75 05 81 C3 00 01 C3 81 C3 00 05 C3  // ....u...........
    5010: BF B4 4F BE D5 4F 33 C9 E8 4E 00 C3 04 80 00 05  // ..O..O3..N......
    5020: 80 00 06 C0 00 0D 80 02 0E C0 02 0F 80 03 10 C0  // ................
    5030: 03 11 40 05 12 80 05 13 C0 05 62 40 01 53 8A 1E  // ..@.......b@.S..
    5040: 49 04 80 FB 07 7F 10 32 FF D1 E3 2E 8B 87 F1 4F  // I......2.......O
    5050: A2 65 04 88 26 66 04 5B C3 2C 30 28 30 2D 30 29  // .e..&f.[.,0(0-0)
    5060: 30 2A 30 2E 30 1E 3F 29 30 2E 38 25 75 07 2E 03  // 0*0.0.?)0.8%u...
    5070: 5D 01 33 F6 C3 83 C7 03 3B FE 75 ED C3 1E 06 2E  // ].3.....;.u.....
    5080: 8E 1E 03 03 F6 06 87 04 80 75 49 83 3E 4C 04 00  // .........uI.>L..
    5090: 74 42 A0 49 04 B9 00 20 2E 8B 3E 09 03 26 F6 47  // tB.I... ..>..&.G
    50A0: 33 01 75 0E 26 F6 47 09 01 75 1B 2E 8B 3E 07 03  // 3.u.&.G..u...>..
    50B0: EB 14 3C 06 7E 0B 2E 8B 3E 05 03 26 8A 67 37 B5  // ..<.~...>..&.g7.
    50C0: 40 66 33 C0 EB 06 66 B8 20 07 20 07 8E C7 66 33  // @f3...f. . ...f3
    50D0: FF F3 66 AB 80 26 87 04 7F 07 1F C3 2E 8E 1E 03  // ..f..&..........
    50E0: 03 80 FB 10 75 03 E9 7A 01 80 FB 20 75 03 E9 9B  // ....u..z... u...
    50F0: 01 80 FB 32 75 1F BA CC 03 0A C0 75 09 EC 0C 02  // ...2u......u....
    5100: B2 C2 EE E9 F3 00 FE C8 0F 85 F3 00 EC 24 FD B2  // .............$..
    5110: C2 EE E9 E4 00 80 FB 35 75 28 3C 80 75 08 80 0E  // .......5u(<.u...
    5120: 89 04 40 E9 D3 00 F6 06 89 04 40 0F 84 D0 00 0A  // ..@.......@.....
    5130: C0 0F 84 CA 00 FE C8 75 06 E8 98 07 E9 BA 00 E9  // .......u........
    5140: BD 00 80 FB 30 74 03 E9 96 00 50 E8 2A 3E 8A EF  // ....0t....P.*>..
    5150: BA CC 03 EC 8A C8 58 0A C0 75 30 B7 08 F6 C1 01  // ......X..u0.....
    5160: 75 12 0A ED 75 0B A0 10 04 24 30 3C 30 75 10 B7  // u...u....$0<0u..
    5170: 02 E9 8B 00 A0 10 04 24 30 3C 30 75 02 B7 02 80  // .......$0<0u....
    5180: 26 89 04 6F 80 0E 89 04 80 EB 36 3C 01 75 41 80  // &..o......6<.uA.
    5190: 26 89 04 6F B7 09 F6 C1 01 75 15 B7 0B A0 10 04  // &..o.....u......
    51A0: 24 30 3C 30 74 1B B7 09 0A ED 74 15 B7 05 EB 11  // $0<0t.....t.....
    51B0: A0 10 04 24 30 3C 30 75 08 B7 0B 0A ED 74 02 B7  // ...$0<0u.....t..
    51C0: 03 8A 1E 88 04 80 E3 F0 0A DF 88 1E 88 04 EB 29  // ...............)
    51D0: 3C 02 75 2B 80 26 89 04 6F 80 0E 89 04 10 EB B4  // <.u+.&..o.......
    51E0: 80 FB 31 75 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89  // ..1u...t.<.u....
    51F0: 04 08 EB 05 80 26 89 04 F7 8B EC C6 46 1A 12 C3  // .....&......F...
    5200: 80 FB 33 75 16 3C 00 74 0B 3C 01 75 EC 80 26 89  // ..3u.<.t.<.u..&.
    5210: 04 FD EB E5 80 0E 89 04 02 EB DE 80 FB 34 75 17  // .............4u.
    5220: 3C 00 75 07 80 26 87 04 FE EB CE 3C 01 75 07 80  // <.u..&.....<.u..
    5230: 0E 87 04 01 EB C3 C3 80 FB 36 75 26 BB 20 FF 3C  // .........6u&. .<
    5240: 01 74 09 BB 00 DF 3C 00 74 02 EB AD E8 02 00 EB  // .t....<.t.......
    5250: A8 9C FA BA C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE  // .........B."....
    5260: 9D C3 C3 B3 03 B7 00 BA CC 03 EC A8 01 75 02 B7  // .............u..
    5270: 01 A0 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B  // ..........%.....
    5280: EC 89 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA C7 06  // ..^..N..F.......
    5290: 14 00 DC 77 8C 0E 16 00 9D C3 28 18 08 00 08 09  // ...w......(.....
    52A0: 03 00 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07  // ...c-'(.+.......
    52B0: 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02  // ................
    52C0: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    52D0: 00 00 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01  // ..........P.....
    52E0: 03 00 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07  // ...c_OP.U.......
    52F0: 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02  // .......(........
    5300: 03 04 05 06 07 10 11 12 13 14 15 16 17 08 00 0F  // ................
    5310: 00 00 00 00 00 00 10 0E 00 FF 28 18 08 00 40 09  // ..........(...@.
    5320: 03 00 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00  // ...c-'(.+.......
    5330: 00 00 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15  // ................
    5340: 17 02 04 06 07 10 11 12 13 14 15 16 17 01 00 03  // ................
    5350: 00 00 00 00 00 00 30 0F 00 FF 50 18 08 00 40 01  // ......0...P...@.
    5360: 01 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C1 00 00  // ...c_OP.T.......
    5370: 00 00 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17  // .......(........
    5380: 17 17 17 17 17 17 17 17 17 17 17 17 17 01 00 01  // ................
    5390: 00 00 00 00 00 00 00 0D 00 FF 50 18 0E 00 10 00  // ..........P.....
    53A0: 03 00 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C  // ...._OP.U....M..
    53B0: 00 00 00 00 83 85 5D 28 0D 63 BA A3 FF 00 08 08  // ......](.c......
    53C0: 08 08 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F  // ................
    53D0: 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01  // ..........P.....
    53E0: 0F 00 0A E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    53F0: 00 00 00 00 EA 8C DF 50 00 E7 04 E3 FF 00 01 02  // .......P........
    5400: 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F  // ................
    5410: 00 10 00 00 00 00 40 05 0F FF 00 05 11 1C 08 0B  // ......@.........
    5420: 14 28 0E 18 2D 32 20 24 38 3F 00 05 08 0B 0E 11  // .(..-2 $8?......
    5430: 14 18 1C 20 24 28 2D 32 38 3F 07 0C 10 15 1A 18  // ... $(-28?......
    5440: 16 15 13 1C 25 2F 38 33 2E 2A 25 27 29 2A 2C 23  // ....%/83.*%')*,#
    5450: 19 10 23 25 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39  // ..#%'*,+*))-27;9
    5460: 37 34 32 33 34 35 35 31 2C 27 2F 30 32 33 34 34  // 74234551,'/02344
    5470: 33 33 32 35 38 3A 3D 3C 3A 39 38 38 39 39 3A 37  // 33258:=<:98899:7
    5480: 34 31 03 05 07 09 0B 0B 0A 09 08 0D 11 15 19 17  // 41..............
    5490: 15 13 11 11 12 13 14 0F 0B 07 10 10 12 13 14 13  // ................
    54A0: 13 13 12 14 16 18 1A 19 18 17 16 17 17 17 18 15  // ................
    54B0: 14 11 15 15 16 17 17 17 17 17 16 18 19 1A 1B 1B  // ................
    54C0: 1A 19 19 19 19 19 1A 18 17 16 02 03 04 05 07 06  // ................
    54D0: 06 05 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09  // ................
    54E0: 06 04 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F  // ................
    54F0: 0E 0D 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D  // ................
    5500: 0D 0D 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E  // ................
    5510: 0D 0C 00 00 00 00 00 00 00 00 28 18 08 00 20 09  // ..........(... .
    5520: 0F 00 06 63 2D 27 28 90 2B 80 BF 1F 00 C0 00 00  // ...c-'(.+.......
    5530: 00 00 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02  // ................
    5540: 03 04 05 06 07 10 11 12 13 14 15 16 17 01 00 0F  // ................
    5550: 00 00 00 00 00 00 00 05 0F FF 50 18 08 00 40 01  // ..........P...@.
    5560: 0F 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C0 00 00  // ...c_OP.T.......
    5570: 00 00 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02  // .......(........
    5580: 03 04 05 06 07 10 11 12 13 14 15 16 17 01 00 0F  // ................
    5590: 00 00 00 00 00 00 00 05 0F FF 00 05 11 1C 08 0B  // ................
    55A0: 25 28 02 07 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E  // %(... ..(,..%*..
    55B0: 32 36 0F 13 27 2C 1B 20 34 39 06 0B 1F 24 13 18  // 26..',. 49...$..
    55C0: 2C 30 09 0D 21 26 15 1A 2E 33 13 17 2B 30 1F 24  // ,0..!&...3..+0.$
    55D0: 38 3D 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B  // 8=..-2 $8?......
    55E0: 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24  // ............-2 $
    55F0: 38 3F 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B  // 8?..-2 $8?......
    5600: 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24  // ............-2 $
    5610: 38 3F 0E 18 2D 32 20 24 38 3F 50 18 0E 00 80 01  // 8?..-2 $8?P.....
    5620: 0F 00 06 A2 5F 4F 50 82 54 80 BF 1F 00 40 00 00  // ...._OP.T....@..
    5630: 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00 08 00  // ......](.c......
    5640: 00 18 18 00 00 00 08 00 00 00 18 00 00 0B 00 05  // ................
    5650: 00 00 00 00 00 00 00 05 05 FF 50 18 0E 00 80 01  // ..........P.....
    5660: 0F 00 06 A3 5F 4F 50 82 54 80 BF 1F 00 40 00 00  // ...._OP.T....@..
    5670: 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00 01 02  // ......](.c......
    5680: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F  // .....89:;<=>?...
    5690: 00 00 00 00 00 00 00 05 0F FF 28 18 0E 00 08 09  // ..........(.....
    56A0: 03 00 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C  // ....-'(.+....M..
    56B0: 00 00 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02  // ......]..c......
    56C0: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    56D0: 00 00 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01  // ..........P.....
    56E0: 03 00 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C  // ...._OP.U....M..
    56F0: 00 00 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02  // ......](.c......
    5700: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F  // .....89:;<=>?...
    5710: 00 00 00 00 00 00 10 0E 00 FF 28 18 10 00 08 08  // ..........(.....
    5720: 03 00 02 67 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E  // ...g-'(.+....O..
    5730: 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02  // ................
    5740: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F  // .....89:;<=>?...
    5750: 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00  // ..........P.....
    5760: 03 00 02 67 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E  // ...g_OP.U....O..
    5770: 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02  // .......(........
    5780: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F  // .....89:;<=>?...
    5790: 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00  // ..........P.....
    57A0: 03 00 02 66 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E  // ...f_OP.U....O..
    57B0: 00 00 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08  // .......(........
    57C0: 08 08 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F  // ................
    57D0: 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01  // ..........P.....
    57E0: 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    57F0: 00 00 00 00 EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F  // .......(......??
    5800: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F  // ?????????????...
    5810: 00 00 00 00 00 00 00 05 01 FF 50 1D 10 00 A0 01  // ..........P.....
    5820: 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00  // ...._OP.T..>.@..
    5830: 00 00 00 00 EA 8C DF 28 00 E7 04 E3 FF 00 01 02  // .......(........
    5840: 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F  // .....89:;<=>?...
    5850: 00 00 00 00 00 00 00 05 0F FF 28 18 08 00 20 01  // ..........(... .
    5860: 0F 00 0E 63 5F 4F 50 82 54 80 BF 1F 00 41 00 00  // ...c_OP.T....A..
    5870: 00 00 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02  // .......(@.......
    5880: 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F  // .............A..
    5890: 00 00 00 00 00 00 40 05 0F FF 32 52 00 C0 00 00  // ......@...2R....
    58A0: 00 00 00 00 00 00 00 00 00 00 52 58 00 C0 00 00  // ..........RX....
    58B0: 00 00 00 00 00 00 00 00 00 00 1A 00 EA 8F 00 C0  // ................
    58C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    58D0: 00 00 00 00 1E E8 10 00 2E 8E 1E 03 03 E8 F8 36  // ...............6
    58E0: E8 CF 36 E8 70 1A 1F C3 2E 8E 1E 03 03 C7 06 87  // ..6.p...........
    58F0: 04 60 F9 C6 06 8A 04 0B A0 89 04 0C 11 24 17 A2  // .`...........$..
    5900: 89 04 B4 01 E8 6D 1E A0 89 04 80 26 10 04 CF 80  // .....m.....&....
    5910: 0E 10 04 20 C7 06 63 04 D4 03 0E 1F E8 E7 B5 F7  // ... ..c.........
    5920: C1 02 00 75 03 E8 6F B5 C3 1E 2E 8E 1E 03 03 0E  // ...u..o.........
    5930: 07 EB 00 1F C3 F6 06 89 04 08 74 01 C3 53 BA C8  // ..........t..S..
    5940: 03 EC B0 FF B2 C6 EE B2 C8 80 3E 63 04 B4 75 2F  // ..........>c..u/
    5950: BE AE 59 B9 40 00 33 DB 9C FA 8A C3 EE 8B FB C1  // ..Y.@.3.........
    5960: EF 03 83 E7 03 03 FE 2E 8A 05 42 EE 2E 8A 45 04  // ..........B...E.
    5970: EE 2E 8A 45 08 EE FE C3 4A E2 DF 9D E9 85 00 26  // ...E....J......&
    5980: 8A 47 2B F6 06 89 04 06 74 31 B9 F8 00 BF B2 53  // .G+.....t1.....S
    5990: 3C 08 74 11 B9 40 00 BF 32 55 3C 38 74 07 3C 3F  // <.t..@..2U<8t.<?
    59A0: 74 03 BF 72 55 33 DB 9C FA 8A C3 EE 2E 8A 01 42  // t..rU3.........B
    59B0: EE EE EE FE C3 4A E2 F1 9D EB 49 3C 08 74 25 3C  // .....J....I<.t%<
    59C0: 38 74 2E 3C 3F 74 2A B9 08 00 33 DB 51 E8 0B D3  // 8t.<?t*...3.Q...
    59D0: B9 08 00 F7 C3 10 00 74 03 83 C7 18 E8 67 00 59  // .......t.....g.Y
    59E0: E2 EA EB 20 E8 F4 D2 B9 00 01 33 DB E8 57 00 EB  // ... ......3..W..
    59F0: 13 B9 40 00 33 DB 51 E8 28 00 8A C3 E8 B7 2F FE  // ..@.3.Q.(...../.
    5A00: C3 59 E2 F2 5B C3 00 2A 00 2A 00 2A 00 2A 15 3F  // .Y..[..*.*.*.*.?
    5A10: 15 3F 15 3F 15 3F 00 2A 00 3F 00 2A 00 3F 00 2A  // .?.?.?.*.?.*.?.*
    5A20: 00 3F 8B FB C1 EF 02 83 E7 0F 2E 8A B5 9E 59 8B  // .?............Y.
    5A30: FB D1 EF 83 E7 0F 2E 8A AD 9E 59 8B FB 83 E7 0F  // ..........Y.....
    5A40: 2E 8A 8D 9E 59 C3 9C 8A C3 FA EE 2E 8A 05 42 EE  // ....Y.........B.
    5A50: 47 2E 8A 05 EE 47 2E 8A 05 EE 47 FE C3 4A E2 E7  // G....G....G..J..
    5A60: 9D C3 00 00 00 00 00 00 00 00 7E 81 A5 81 BD 99  // ..........~.....
    5A70: 81 7E 7C FE D6 BA C6 FE 7C 00 C6 EE FE FE 7C 38  // .~|.....|.....|8
    5A80: 10 00 10 38 7C FE 7C 38 10 00 10 38 10 EE EE 10  // ...8|.|8...8....
    5A90: 38 00 38 7C FE FE 6C 10 38 00 00 18 3C 7E 3C 18  // 8.8|..l.8...<~<.
    5AA0: 00 00 FF E7 C3 81 C3 E7 FF FF 00 18 3C 66 66 3C  // ............<ff<
    5AB0: 18 00 FF E7 C3 99 99 C3 E7 FF 1E 0E 1E 36 78 CC  // .............6x.
    5AC0: CC 78 7E C3 C3 7E 18 7E 18 18 1E 1A 1E 18 18 70  // .x~..~.~.......p
    5AD0: F0 60 3E 3E 36 36 F6 66 1E 0C DB 3C 66 E7 66 3C  // .`>>66.f...<f.f<
    5AE0: DB 00 80 C0 F0 F8 F0 C0 80 00 02 06 1E 3E 1E 06  // .............>..
    5AF0: 02 00 18 3C 7E 18 7E 3C 18 00 66 66 66 66 66 00  // ...<~.~<..fffff.
    5B00: 66 00 7F DB 7B 3B 1B 1B 1B 00 3C 66 38 6C 6C 38  // f...{;....<f8ll8
    5B10: CC 78 00 00 00 00 FE FE FE 00 18 3C 7E 18 7E 3C  // .x.........<~.~<
    5B20: 18 7E 18 3C 7E 18 18 18 18 00 18 18 18 18 7E 3C  // .~.<~.........~<
    5B30: 18 00 00 18 1C FE 1C 18 00 00 00 30 70 FE 70 30  // ...........0p.p0
    5B40: 00 00 00 00 C0 C0 C0 FE 00 00 00 24 66 FF 66 24  // ...........$f.f$
    5B50: 00 00 00 10 38 7C 7C FE 00 00 00 FE 7C 7C 38 10  // ....8||.....||8.
    5B60: 00 00 00 00 00 00 00 00 00 00 18 3C 3C 18 18 00  // ...........<<...
    5B70: 18 00 6C 6C 6C 00 00 00 00 00 6C 6C FE 6C FE 6C  // ..lll.....ll.l.l
    5B80: 6C 00 18 7E C0 7C 06 FC 18 00 00 C6 0C 18 30 60  // l..~.|........0`
    5B90: C6 00 38 6C 38 76 CC CC 76 00 18 18 30 00 00 00  // ..8l8v..v...0...
    5BA0: 00 00 18 30 60 60 60 30 18 00 60 30 18 18 18 30  // ...0```0..`0...0
    5BB0: 60 00 00 EE 7C FE 7C EE 00 00 00 18 18 7E 18 18  // `...|.|......~..
    5BC0: 00 00 00 00 00 00 18 18 30 00 00 00 00 FE 00 00  // ........0.......
    5BD0: 00 00 00 00 00 00 00 38 38 00 06 0C 18 30 60 C0  // .......88....0`.
    5BE0: 80 00 7C C6 CE DE F6 E6 7C 00 18 78 18 18 18 18  // ..|.....|..x....
    5BF0: 7E 00 7C C6 0C 18 30 66 FE 00 7C C6 06 3C 06 C6  // ~.|...0f..|..<..
    5C00: 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE C0 FC 06 06 C6  // |...<l..........
    5C10: 7C 00 7C C6 C0 FC C6 C6 7C 00 FE C6 06 0C 18 18  // |.|.....|.......
    5C20: 18 00 7C C6 C6 7C C6 C6 7C 00 7C C6 C6 7E 06 C6  // ..|..|..|.|..~..
    5C30: 7C 00 00 1C 1C 00 00 1C 1C 00 00 18 18 00 00 18  // |...............
    5C40: 18 30 0C 18 30 60 30 18 0C 00 00 00 FE 00 00 FE  // .0..0`0.........
    5C50: 00 00 60 30 18 0C 18 30 60 00 7C C6 06 0C 18 00  // ..`0...0`.|.....
    5C60: 18 00 7C C6 C6 DE DC C0 7E 00 38 6C C6 C6 FE C6  // ..|.....~.8l....
    5C70: C6 00 FC 66 66 7C 66 66 FC 00 3C 66 C0 C0 C0 66  // ...ff|ff..<f...f
    5C80: 3C 00 F8 6C 66 66 66 6C F8 00 FE C2 C0 F8 C0 C2  // <..lfffl........
    5C90: FE 00 FE 62 60 7C 60 60 F0 00 7C C6 C0 C0 DE C6  // ...b`|``..|.....
    5CA0: 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C 18 18 18 18 18  // |.........<.....
    5CB0: 3C 00 3C 18 18 18 D8 D8 70 00 C6 CC D8 F0 D8 CC  // <.<.....p.......
    5CC0: C6 00 F0 60 60 60 60 62 FE 00 C6 EE FE D6 D6 C6  // ...````b........
    5CD0: C6 00 C6 E6 E6 F6 DE CE C6 00 7C C6 C6 C6 C6 C6  // ..........|.....
    5CE0: 7C 00 FC 66 66 7C 60 60 F0 00 7C C6 C6 C6 C6 D6  // |..ff|``..|.....
    5CF0: 7C 06 FC C6 C6 FC D8 CC C6 00 7C C6 C0 7C 06 C6  // |.........|..|..
    5D00: 7C 00 7E 5A 18 18 18 18 3C 00 C6 C6 C6 C6 C6 C6  // |.~Z....<.......
    5D10: 7C 00 C6 C6 C6 C6 6C 38 10 00 C6 C6 D6 D6 FE EE  // |.....l8........
    5D20: C6 00 C6 6C 38 38 38 6C C6 00 66 66 66 3C 18 18  // ...l888l..fff<..
    5D30: 3C 00 FE 86 0C 18 30 62 FE 00 7C 60 60 60 60 60  // <.....0b..|`````
    5D40: 7C 00 C0 60 30 18 0C 06 02 00 7C 0C 0C 0C 0C 0C  // |..`0.....|.....
    5D50: 7C 00 10 38 6C C6 00 00 00 00 00 00 00 00 00 00  // |..8l...........
    5D60: 00 FF 30 30 18 00 00 00 00 00 00 00 78 0C 7C CC  // ..00........x.|.
    5D70: 7E 00 E0 60 7C 66 66 66 FC 00 00 00 7C C6 C0 C6  // ~..`|fff....|...
    5D80: 7C 00 1C 0C 7C CC CC CC 7E 00 00 00 7C C6 FE C0  // |...|...~...|...
    5D90: 7C 00 1C 36 30 FC 30 30 78 00 00 00 76 CE C6 7E  // |..60.00x...v..~
    5DA0: 06 7C E0 60 7C 66 66 66 E6 00 18 00 38 18 18 18  // .|.`|fff....8...
    5DB0: 3C 00 0C 00 1C 0C 0C 0C CC 78 E0 60 66 6C 78 6C  // <........x.`flxl
    5DC0: E6 00 18 18 18 18 18 18 1C 00 00 00 6C FE D6 D6  // ............l...
    5DD0: C6 00 00 00 DC 66 66 66 66 00 00 00 7C C6 C6 C6  // .....ffff...|...
    5DE0: 7C 00 00 00 DC 66 66 7C 60 F0 00 00 76 CC CC 7C  // |....ff|`...v..|
    5DF0: 0C 1E 00 00 DC 66 60 60 F0 00 00 00 7C C0 7C 06  // .....f``....|.|.
    5E00: 7C 00 30 30 FC 30 30 36 1C 00 00 00 CC CC CC CC  // |.00.006........
    5E10: 76 00 00 00 C6 C6 6C 38 10 00 00 00 C6 C6 D6 FE  // v.....l8........
    5E20: 6C 00 00 00 C6 6C 38 6C C6 00 00 00 C6 C6 CE 76  // l....l8l.......v
    5E30: 06 7C 00 00 FC 98 30 64 FC 00 0E 18 18 70 18 18  // .|....0d.....p..
    5E40: 0E 00 18 18 18 00 18 18 18 00 70 18 18 0E 18 18  // ..........p.....
    5E50: 70 00 76 DC 00 00 00 00 00 00 00 10 38 38 6C 6C  // p.v.........88ll
    5E60: FE 00 3C 66 C0 66 3C 18 CC 78 00 C6 00 C6 C6 CE  // ..<f.f<..x......
    5E70: 76 00 0E 00 7C C6 FE C0 7C 00 7C C6 78 0C 7C CC  // v...|...|.|.x.|.
    5E80: 7E 00 C6 00 78 0C 7C CC 7E 00 E0 00 78 0C 7C CC  // ~...x.|.~...x.|.
    5E90: 7E 00 38 38 78 0C 7C CC 7E 00 00 00 7C C0 7C 18  // ~.88x.|.~...|.|.
    5EA0: 6C 38 7C C6 7C C6 FE C0 7C 00 C6 00 7C C6 FE C0  // l8|.|...|...|...
    5EB0: 7C 00 E0 00 7C C6 FE C0 7C 00 66 00 38 18 18 18  // |...|...|.f.8...
    5EC0: 3C 00 7C C6 38 18 18 18 3C 00 00 00 38 18 18 18  // <.|.8...<...8...
    5ED0: 3C 00 C6 38 6C C6 FE C6 C6 00 38 38 00 7C C6 FE  // <..8l.....88.|..
    5EE0: C6 00 0E 00 FE C0 F8 C0 FE 00 00 00 6C 9A 7E D8  // ............l.~.
    5EF0: 6E 00 7E D8 D8 FE D8 D8 DE 00 7C C6 00 7C C6 C6  // n.~.......|..|..
    5F00: 7C 00 00 C6 00 7C C6 C6 7C 00 00 E0 00 7C C6 C6  // |....|..|....|..
    5F10: 7C 00 7C C6 00 C6 C6 CE 76 00 00 E0 00 C6 C6 CE  // |.|.....v.......
    5F20: 76 00 18 00 3C 18 18 18 3C 00 C6 38 6C C6 C6 6C  // v...<...<..8l..l
    5F30: 38 00 C6 00 C6 C6 C6 C6 7C 00 00 18 7E D8 D8 7E  // 8.......|...~..~
    5F40: 18 00 38 6C 60 F0 66 F6 6C 00 C3 66 3C 7E 18 3C  // ..8l`.f.l..f<~.<
    5F50: 18 00 3E 63 38 0E 63 3E 00 1C 00 3E 61 3C 86 7C  // ..>c8.c>...>a<.|
    5F60: 00 1C 0E 00 78 0C 7C CC 7E 00 1C 00 38 18 18 18  // ....x.|.~...8...
    5F70: 3C 00 00 0E 00 7C C6 C6 7C 00 00 0E 00 CC CC DC  // <....|..|.......
    5F80: 76 00 00 FC 00 BC 66 66 E6 00 FE 00 C6 E6 F6 CE  // v.....ff........
    5F90: C6 00 3E 00 3E 60 67 63 3D 00 3E 00 76 CE C6 7E  // ..>.>`gc=.>.v..~
    5FA0: 06 7C 18 00 18 30 60 66 3C 00 00 00 00 7C 60 60  // .|...0`f<....|``
    5FB0: 00 00 00 00 00 7C 0C 0C 00 00 C0 CC D8 30 7C 36  // .....|.......0|6
    5FC0: 0C 3E C0 CC D8 30 6C 3C 7E 0C 18 00 18 18 3C 3C  // .>...0l<~.....<<
    5FD0: 18 00 00 36 6C D8 6C 36 00 00 00 D8 6C 36 6C D8  // ...6l.l6....l6l.
    5FE0: 00 00 22 88 22 88 22 88 22 88 55 AA 55 AA 55 AA  // ..".".".".U.U.U.
    5FF0: 55 AA DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18  // U..w.w.w.w......
    6000: 18 18 18 18 18 18 F8 18 18 18 18 18 F8 18 F8 18  // ................
    6010: 18 18 36 36 36 36 F6 36 36 36 00 00 00 00 FE 36  // ..6666.666.....6
    6020: 36 36 00 00 F8 18 F8 18 18 18 36 36 F6 06 F6 36  // 66........66...6
    6030: 36 36 36 36 36 36 36 36 36 36 00 00 FE 06 F6 36  // 6666666666.....6
    6040: 36 36 36 36 F6 06 FE 00 00 00 36 36 36 36 FE 00  // 6666......6666..
    6050: 00 00 18 18 F8 18 F8 00 00 00 00 00 00 00 F8 18  // ................
    6060: 18 18 18 18 18 18 1F 00 00 00 18 18 18 18 FF 00  // ................
    6070: 00 00 00 00 00 00 FF 18 18 18 18 18 18 18 1F 18  // ................
    6080: 18 18 00 00 00 00 FF 00 00 00 18 18 18 18 FF 18  // ................
    6090: 18 18 18 18 1F 18 1F 18 18 18 36 36 36 36 37 36  // ..........666676
    60A0: 36 36 36 36 37 30 3F 00 00 00 00 00 3F 30 37 36  // 666670?.....?076
    60B0: 36 36 36 36 F7 00 FF 00 00 00 00 00 FF 00 F7 36  // 6666...........6
    60C0: 36 36 36 36 37 30 37 36 36 36 00 00 FF 00 FF 00  // 6666707666......
    60D0: 00 00 36 36 F7 00 F7 36 36 36 18 18 FF 00 FF 00  // ..66...666......
    60E0: 00 00 36 36 36 36 FF 00 00 00 00 00 FF 00 FF 18  // ..6666..........
    60F0: 18 18 00 00 00 00 FF 36 36 36 36 36 36 36 3F 00  // .......6666666?.
    6100: 00 00 18 18 1F 18 1F 00 00 00 00 00 1F 18 1F 18  // ................
    6110: 18 18 00 00 00 00 3F 36 36 36 36 36 36 36 FF 36  // ......?6666666.6
    6120: 36 36 18 18 FF 18 FF 18 18 18 18 18 18 18 F8 00  // 66..............
    6130: 00 00 00 00 00 00 1F 18 18 18 FF FF FF FF FF FF  // ................
    6140: FF FF 00 00 00 00 FF FF FF FF F0 F0 F0 F0 F0 F0  // ................
    6150: F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF 00 00  // ................
    6160: 00 00 00 00 66 DC D8 DC 66 00 00 78 CC F8 CC C6  // ....f...f..x....
    6170: CC 00 00 FE 62 60 60 60 E0 00 00 FE 6C 6C 6C 6C  // ....b```....llll
    6180: 6C 00 FE C6 60 30 60 C6 FE 00 00 7E D8 CC CC D8  // l...`0`....~....
    6190: 70 00 00 66 66 66 66 7C C0 00 00 76 DC 18 18 18  // p..ffff|...v....
    61A0: 38 00 FE 38 6C C6 6C 38 FE 00 38 6C C6 FE C6 6C  // 8..8l.l8..8l...l
    61B0: 38 00 38 6C C6 C6 6C 6C EE 00 3E 60 38 66 C6 CC  // 8.8l..ll..>`8f..
    61C0: 78 00 00 00 7E DB DB 7E 00 00 06 7C DE F6 E6 7C  // x...~..~...|...|
    61D0: C0 00 38 60 C0 F8 C0 60 38 00 7C C6 C6 C6 C6 C6  // ..8`...`8.|.....
    61E0: C6 00 00 FE 00 FE 00 FE 00 00 18 18 7E 18 18 00  // ............~...
    61F0: 7E 00 30 18 0C 18 30 00 7E 00 0C 18 30 18 0C 00  // ~.0...0.~...0...
    6200: 7E 00 0C 1E 18 18 18 18 18 18 18 18 18 18 18 78  // ~..............x
    6210: 30 00 00 00 18 00 7E 00 18 00 00 76 DC 00 76 DC  // 0.....~....v..v.
    6220: 00 00 7C C6 C6 7C 00 00 00 00 00 00 00 18 18 00  // ..|..|..........
    6230: 00 00 00 00 00 00 18 00 00 00 1F 18 18 18 F8 38  // ...............8
    6240: 18 00 D8 6C 6C 6C 00 00 00 00 70 D8 30 F8 00 00  // ...lll....p.0...
    6250: 00 00 00 00 7C 7C 7C 7C 00 00 00 00 00 00 00 00  // ....||||........
    6260: 00 00 1D 00 00 00 00 24 66 FF 66 24 00 00 00 00  // .......$f.f$....
    6270: 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6280: 00 00 00 00 00 00 00 7E 81 A5 81 81 BD 99 81 81  // .......~........
    6290: 7E 00 00 00 00 00 00 7C FE FE D6 FE FE BA C6 FE  // ~......|........
    62A0: 7C 00 00 00 00 00 00 00 6C EE FE FE FE FE 7C 38  // |.......l.....|8
    62B0: 10 00 00 00 00 00 00 00 10 38 7C FE 7C 38 10 00  // .........8|.|8..
    62C0: 00 00 00 00 00 00 00 00 10 38 38 10 6C EE 6C 10  // .........88.l.l.
    62D0: 38 00 00 00 00 00 00 10 38 7C 7C FE FE FE 6C 10  // 8.......8||...l.
    62E0: 38 00 00 00 00 00 00 00 00 00 18 3C 3C 3C 18 00  // 8..........<<<..
    62F0: 00 00 00 00 00 FF FF FF FF FF E7 C3 C3 C3 E7 FF  // ................
    6300: FF FF FF FF FF 00 00 00 00 18 3C 66 66 66 3C 18  // ..........<fff<.
    6310: 00 00 00 00 00 FF FF FF FF E7 C3 99 99 99 C3 E7  // ................
    6320: FF FF FF FF FF 00 00 1E 0E 1E 36 78 CC CC CC CC  // ..........6x....
    6330: 78 00 00 00 00 00 00 3C 66 66 66 3C 18 7E 18 18  // x......<fff<.~..
    6340: 18 00 00 00 00 00 00 1E 1A 1E 18 18 18 18 78 F8  // ..............x.
    6350: 70 00 00 00 00 00 00 3E 36 3E 36 36 76 F6 66 0E  // p......>6>66v.f.
    6360: 1E 0C 00 00 00 00 00 18 DB 7E 3C 66 66 3C 7E DB  // .........~<ff<~.
    6370: 18 00 00 00 00 00 00 00 80 E0 F0 FC FE FC F0 E0  // ................
    6380: 80 00 00 00 00 00 00 00 02 0E 3E 7E FE 7E 3E 0E  // ..........>~.~>.
    6390: 02 00 00 00 00 00 00 18 3C 7E 18 18 18 18 7E 3C  // ........<~....~<
    63A0: 18 00 00 00 00 00 00 66 66 66 66 66 66 66 00 66  // .......fffffff.f
    63B0: 66 00 00 00 00 00 00 7F DB DB DB DB 7B 1B 1B 1B  // f...........{...
    63C0: 1B 00 00 00 00 00 00 7C C6 C6 60 7C F6 DE 7C 0C  // .......|..`|..|.
    63D0: C6 C6 7C 00 00 00 00 00 00 00 00 00 00 FE FE FE  // ..|.............
    63E0: FE 00 00 00 00 00 00 18 3C 7E 18 18 18 7E 3C 18  // ........<~...~<.
    63F0: 7E 00 00 00 00 00 00 18 3C 7E 18 18 18 18 18 18  // ~.......<~......
    6400: 18 00 00 00 00 00 00 18 18 18 18 18 18 18 7E 3C  // ..............~<
    6410: 18 00 00 00 00 00 00 00 00 00 0C 0E FF 0E 0C 00  // ................
    6420: 00 00 00 00 00 00 00 00 00 00 30 70 FE 70 30 00  // ..........0p.p0.
    6430: 00 00 00 00 00 00 00 00 00 00 00 C0 C0 C0 FE 00  // ................
    6440: 00 00 00 00 00 00 00 00 00 00 24 66 FF 66 24 00  // ..........$f.f$.
    6450: 00 00 00 00 00 00 00 00 10 38 38 38 7C 7C FE FE  // .........888||..
    6460: 00 00 00 00 00 00 00 00 FE FE 7C 7C 7C 38 38 10  // ..........|||88.
    6470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6480: 00 00 00 00 00 00 00 18 3C 3C 3C 3C 18 18 00 18  // ........<<<<....
    6490: 18 00 00 00 00 00 36 36 36 36 14 00 00 00 00 00  // ......6666......
    64A0: 00 00 00 00 00 00 00 6C 6C 6C FE 6C 6C FE 6C 6C  // .......lll.ll.ll
    64B0: 6C 00 00 00 00 00 00 18 18 7C C6 C0 78 3C 06 C6  // l........|..x<..
    64C0: 7C 18 18 00 00 00 00 00 00 00 62 66 0C 18 30 66  // |.........bf..0f
    64D0: C6 00 00 00 00 00 00 38 6C 38 30 76 7E CC CC CC  // .......8l80v~...
    64E0: 76 00 00 00 00 00 0C 0C 0C 18 00 00 00 00 00 00  // v...............
    64F0: 00 00 00 00 00 00 00 0C 18 30 30 30 30 30 30 18  // .........000000.
    6500: 0C 00 00 00 00 00 00 30 18 0C 0C 0C 0C 0C 0C 18  // .......0........
    6510: 30 00 00 00 00 00 00 00 00 00 6C 38 FE 38 6C 00  // 0.........l8.8l.
    6520: 00 00 00 00 00 00 00 00 00 00 18 18 7E 18 18 00  // ............~...
    6530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 0C  // ................
    6540: 0C 18 00 00 00 00 00 00 00 00 00 00 FE 00 00 00  // ................
    6550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18  // ................
    6560: 18 00 00 00 00 00 00 00 00 02 06 0C 18 30 60 C0  // .............0`.
    6570: 80 00 00 00 00 00 00 7C C6 C6 CE DE F6 E6 C6 C6  // .......|........
    6580: 7C 00 00 00 00 00 00 18 78 18 18 18 18 18 18 18  // |.......x.......
    6590: 7E 00 00 00 00 00 00 7C C6 C6 06 0C 18 30 60 C6  // ~......|.....0`.
    65A0: FE 00 00 00 00 00 00 7C C6 06 06 3C 06 06 06 C6  // .......|...<....
    65B0: 7C 00 00 00 00 00 00 0C 1C 3C 6C CC CC FE 0C 0C  // |........<l.....
    65C0: 1E 00 00 00 00 00 00 FE C0 C0 C0 FC 06 06 06 C6  // ................
    65D0: 7C 00 00 00 00 00 00 7C C6 C0 C0 FC C6 C6 C6 C6  // |......|........
    65E0: 7C 00 00 00 00 00 00 FE C6 06 0C 18 30 30 30 30  // |...........0000
    65F0: 30 00 00 00 00 00 00 7C C6 C6 C6 7C C6 C6 C6 C6  // 0......|...|....
    6600: 7C 00 00 00 00 00 00 7C C6 C6 C6 C6 7E 06 06 C6  // |......|....~...
    6610: 7C 00 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C  // |...............
    6620: 00 00 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C  // ................
    6630: 0C 18 00 00 00 00 00 00 0C 18 30 60 C0 60 30 18  // ..........0`.`0.
    6640: 0C 00 00 00 00 00 00 00 00 00 00 FE 00 FE 00 00  // ................
    6650: 00 00 00 00 00 00 00 00 60 30 18 0C 06 0C 18 30  // ........`0.....0
    6660: 60 00 00 00 00 00 00 7C C6 C6 0C 18 18 18 00 18  // `......|........
    6670: 18 00 00 00 00 00 00 7C C6 C6 C6 DE DE DE DC C0  // .......|........
    6680: 7E 00 00 00 00 00 00 38 6C C6 C6 C6 FE C6 C6 C6  // ~......8l.......
    6690: C6 00 00 00 00 00 00 FC 66 66 66 7C 66 66 66 66  // ........fff|ffff
    66A0: FC 00 00 00 00 00 00 3C 66 C2 C0 C0 C0 C0 C2 66  // .......<f......f
    66B0: 3C 00 00 00 00 00 00 F8 6C 66 66 66 66 66 66 6C  // <.......lffffffl
    66C0: F8 00 00 00 00 00 00 FE 66 60 64 7C 64 60 60 66  // ........f`d|d``f
    66D0: FE 00 00 00 00 00 00 FE 66 60 64 7C 64 60 60 60  // ........f`d|d```
    66E0: F0 00 00 00 00 00 00 7C C6 C6 C0 C0 C0 CE C6 C6  // .......|........
    66F0: 7C 00 00 00 00 00 00 C6 C6 C6 C6 FE C6 C6 C6 C6  // |...............
    6700: C6 00 00 00 00 00 00 3C 18 18 18 18 18 18 18 18  // .......<........
    6710: 3C 00 00 00 00 00 00 3C 18 18 18 18 18 18 D8 D8  // <......<........
    6720: 70 00 00 00 00 00 00 C6 C6 CC D8 F0 F0 D8 CC C6  // p...............
    6730: C6 00 00 00 00 00 00 F0 60 60 60 60 60 60 62 66  // ........``````bf
    6740: FE 00 00 00 00 00 00 C6 C6 EE EE FE D6 D6 D6 C6  // ................
    6750: C6 00 00 00 00 00 00 C6 C6 E6 E6 F6 DE CE CE C6  // ................
    6760: C6 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6  // .......|........
    6770: 7C 00 00 00 00 00 00 FC 66 66 66 66 7C 60 60 60  // |.......ffff|```
    6780: F0 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 D6 D6  // .......|........
    6790: 7C 06 00 00 00 00 00 FC 66 66 66 7C 78 6C 66 66  // |.......fff|xlff
    67A0: E6 00 00 00 00 00 00 7C C6 C0 C0 70 1C 06 06 C6  // .......|...p....
    67B0: 7C 00 00 00 00 00 00 7E 5A 18 18 18 18 18 18 18  // |......~Z.......
    67C0: 3C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 C6 C6  // <...............
    67D0: 7C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 6C 38  // |.............l8
    67E0: 10 00 00 00 00 00 00 C6 C6 C6 D6 D6 D6 FE EE C6  // ................
    67F0: C6 00 00 00 00 00 00 C6 C6 C6 6C 38 38 6C C6 C6  // ..........l88l..
    6800: C6 00 00 00 00 00 00 66 66 66 66 66 3C 18 18 18  // .......fffff<...
    6810: 3C 00 00 00 00 00 00 FE C6 86 0C 18 30 60 C2 C6  // <...........0`..
    6820: FE 00 00 00 00 00 00 7C 60 60 60 60 60 60 60 60  // .......|````````
    6830: 7C 00 00 00 00 00 00 00 00 80 C0 60 30 18 0C 06  // |..........`0...
    6840: 02 00 00 00 00 00 00 7C 0C 0C 0C 0C 0C 0C 0C 0C  // .......|........
    6850: 7C 00 00 00 00 00 10 38 6C C6 00 00 00 00 00 00  // |......8l.......
    6860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6870: 00 00 FF 00 00 00 18 18 18 0C 00 00 00 00 00 00  // ................
    6880: 00 00 00 00 00 00 00 00 00 00 78 0C 7C CC CC DC  // ..........x.|...
    6890: 76 00 00 00 00 00 00 E0 60 60 7C 66 66 66 66 66  // v.......``|fffff
    68A0: FC 00 00 00 00 00 00 00 00 00 7C C6 C0 C0 C0 C6  // ..........|.....
    68B0: 7C 00 00 00 00 00 00 1C 0C 0C 7C CC CC CC CC CC  // |.........|.....
    68C0: 7E 00 00 00 00 00 00 00 00 00 7C C6 C6 FE C0 C6  // ~.........|.....
    68D0: 7C 00 00 00 00 00 00 1C 36 30 30 FC 30 30 30 30  // |.......600.0000
    68E0: 78 00 00 00 00 00 00 00 00 00 76 CE C6 C6 CE 76  // x.........v....v
    68F0: 06 C6 7C 00 00 00 00 E0 60 60 7C 66 66 66 66 66  // ..|.....``|fffff
    6900: E6 00 00 00 00 00 00 18 18 00 38 18 18 18 18 18  // ..........8.....
    6910: 3C 00 00 00 00 00 00 0C 0C 00 1C 0C 0C 0C 0C 0C  // <...............
    6920: CC CC 78 00 00 00 00 E0 60 60 66 66 6C 78 6C 66  // ..x.....``fflxlf
    6930: E6 00 00 00 00 00 00 18 18 18 18 18 18 18 18 18  // ................
    6940: 1C 00 00 00 00 00 00 00 00 00 6C FE D6 D6 C6 C6  // ..........l.....
    6950: C6 00 00 00 00 00 00 00 00 00 DC 66 66 66 66 66  // ...........fffff
    6960: 66 00 00 00 00 00 00 00 00 00 7C C6 C6 C6 C6 C6  // f.........|.....
    6970: 7C 00 00 00 00 00 00 00 00 00 DC 66 66 66 66 7C  // |..........ffff|
    6980: 60 60 F0 00 00 00 00 00 00 00 76 CC CC CC CC 7C  // ``........v....|
    6990: 0C 0C 1E 00 00 00 00 00 00 00 DC 66 60 60 60 60  // ...........f````
    69A0: F0 00 00 00 00 00 00 00 00 00 7C C6 C0 7C 06 C6  // ..........|..|..
    69B0: 7C 00 00 00 00 00 00 30 30 30 FC 30 30 30 30 36  // |......000.00006
    69C0: 1C 00 00 00 00 00 00 00 00 00 CC CC CC CC CC CC  // ................
    69D0: 76 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6 6C 38  // v.............l8
    69E0: 10 00 00 00 00 00 00 00 00 00 C6 C6 D6 D6 D6 FE  // ................
    69F0: 6C 00 00 00 00 00 00 00 00 00 C6 C6 6C 38 6C C6  // l...........l8l.
    6A00: C6 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6 CE 76  // ...............v
    6A10: 06 C6 7C 00 00 00 00 00 00 00 FE 86 0C 18 30 62  // ..|...........0b
    6A20: FE 00 00 00 00 00 00 0E 18 18 18 70 18 18 18 18  // ...........p....
    6A30: 0E 00 00 00 00 00 00 18 18 18 18 00 18 18 18 18  // ................
    6A40: 18 00 00 00 00 00 00 70 18 18 18 0E 18 18 18 18  // .......p........
    6A50: 70 00 00 00 00 00 00 76 DC 00 00 00 00 00 00 00  // p......v........
    6A60: 00 00 00 00 00 00 00 00 00 00 10 38 38 6C 6C FE  // ...........88ll.
    6A70: 00 00 00 00 00 00 00 3C 66 C0 C0 C0 C6 66 3C 18  // .......<f....f<.
    6A80: 0C CC 38 00 00 00 00 C6 00 00 C6 C6 C6 C6 C6 CE  // ..8.............
    6A90: 76 00 00 00 00 00 0C 18 30 00 7C C6 C6 FE C0 C6  // v.......0.|.....
    6AA0: 7C 00 00 00 00 00 30 78 CC 00 78 0C 7C CC CC DC  // |.....0x..x.|...
    6AB0: 76 00 00 00 00 00 00 CC 00 00 78 0C 7C CC CC DC  // v.........x.|...
    6AC0: 76 00 00 00 00 00 60 30 18 00 78 0C 7C CC CC DC  // v.....`0..x.|...
    6AD0: 76 00 00 00 00 00 38 6C 38 00 78 0C 7C CC CC DC  // v.....8l8.x.|...
    6AE0: 76 00 00 00 00 00 00 00 00 7C C6 C0 C0 C6 7C 18  // v........|....|.
    6AF0: 0C 6C 38 00 00 00 30 78 CC 00 7C C6 C6 FE C0 C6  // .l8...0x..|.....
    6B00: 7C 00 00 00 00 00 00 CC 00 00 7C C6 C6 FE C0 C6  // |.........|.....
    6B10: 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 FE C0 C6  // |.....0...|.....
    6B20: 7C 00 00 00 00 00 00 66 00 00 38 18 18 18 18 18  // |......f..8.....
    6B30: 3C 00 00 00 00 00 18 3C 66 00 38 18 18 18 18 18  // <......<f.8.....
    6B40: 3C 00 00 00 00 00 00 00 00 00 38 18 18 18 18 18  // <.........8.....
    6B50: 3C 00 00 00 00 00 C6 00 38 6C C6 C6 C6 FE C6 C6  // <.......8l......
    6B60: C6 00 00 00 00 38 6C 38 00 38 6C C6 C6 FE C6 C6  // .....8l8.8l.....
    6B70: C6 00 00 00 00 0C 18 30 00 FE 60 60 7C 60 60 60  // .......0..``|```
    6B80: FE 00 00 00 00 00 00 00 00 66 DB 1B 7F D8 D8 DF  // .........f......
    6B90: 76 00 00 00 00 00 00 7E D8 D8 D8 D8 FE D8 D8 D8  // v......~........
    6BA0: DE 00 00 00 00 00 30 78 CC 00 7C C6 C6 C6 C6 C6  // ......0x..|.....
    6BB0: 7C 00 00 00 00 00 00 C6 00 00 7C C6 C6 C6 C6 C6  // |.........|.....
    6BC0: 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 C6 C6 C6  // |.....0...|.....
    6BD0: 7C 00 00 00 00 00 30 78 CC 00 C6 C6 C6 C6 C6 CE  // |.....0x........
    6BE0: 76 00 00 00 00 00 60 30 18 00 C6 C6 C6 C6 C6 CE  // v.....`0........
    6BF0: 76 00 00 00 00 00 18 00 3C 18 18 18 18 18 18 18  // v.......<.......
    6C00: 3C 00 00 00 00 00 C6 00 7C C6 C6 C6 C6 C6 C6 C6  // <.......|.......
    6C10: 7C 00 00 00 00 00 C6 00 C6 C6 C6 C6 C6 C6 C6 C6  // |...............
    6C20: 7C 00 00 00 00 00 00 18 18 7C C6 C0 C0 C6 7C 18  // |........|....|.
    6C30: 18 00 00 00 00 00 38 6C 60 60 F0 60 60 60 66 F6  // ......8l``.```f.
    6C40: 6C 00 00 00 00 00 66 66 66 66 3C 18 7E 18 3C 18  // l.....ffff<.~.<.
    6C50: 18 00 00 00 00 00 00 3E 63 63 30 1C 06 63 63 3E  // .......>cc0..cc>
    6C60: 00 1C 00 00 00 00 00 00 00 00 3E 63 38 0E 63 3E  // ..........>c8.c>
    6C70: 00 1C 00 00 00 00 0C 18 30 00 78 0C 7C CC CC DC  // ........0.x.|...
    6C80: 76 00 00 00 00 00 0C 18 30 00 38 18 18 18 18 18  // v.......0.8.....
    6C90: 3C 00 00 00 00 00 0C 18 30 00 7C C6 C6 C6 C6 C6  // <.......0.|.....
    6CA0: 7C 00 00 00 00 00 18 30 60 00 CC CC CC CC CC DC  // |......0`.......
    6CB0: 76 00 00 00 00 00 00 76 DC 00 BC 66 66 66 66 66  // v......v...fffff
    6CC0: E6 00 00 00 00 00 76 DC 00 C6 C6 E6 F6 DE CE C6  // ......v.........
    6CD0: C6 00 00 00 00 00 21 1E 00 1E 33 60 60 67 63 33  // ......!...3``gc3
    6CE0: 1D 00 00 00 00 00 42 3C 00 3B 66 66 66 3E 06 66  // ......B<.;fff>.f
    6CF0: 3C 00 00 00 00 00 00 30 30 00 30 30 30 60 C6 C6  // <......00.000`..
    6D00: 7C 00 00 00 00 00 00 00 00 00 00 00 7E 60 60 60  // |...........~```
    6D10: 00 00 00 00 00 00 00 00 00 00 00 00 7E 06 06 06  // ............~...
    6D20: 00 00 00 00 00 00 60 60 62 66 6C 18 30 60 DC 36  // ......``bfl.0`.6
    6D30: 0C 18 3E 00 00 00 60 60 62 66 6C 18 36 6E DE 36  // ..>...``bfl.6n.6
    6D40: 7E 06 06 00 00 00 00 18 18 00 18 18 3C 3C 3C 3C  // ~...........<<<<
    6D50: 18 00 00 00 00 00 00 00 00 00 36 6C D8 6C 36 00  // ..........6l.l6.
    6D60: 00 00 00 00 00 00 00 00 00 00 D8 6C 36 6C D8 00  // ...........l6l..
    6D70: 00 00 00 00 00 11 44 11 44 11 44 11 44 11 44 11  // ......D.D.D.D.D.
    6D80: 44 11 44 11 44 AA 55 AA 55 AA 55 AA 55 AA 55 AA  // D.D.D.U.U.U.U.U.
    6D90: 55 AA 55 AA 55 DD 77 DD 77 DD 77 DD 77 DD 77 DD  // U.U.U.w.w.w.w.w.
    6DA0: 77 DD 77 DD 77 18 18 18 18 18 18 18 18 18 18 18  // w.w.w...........
    6DB0: 18 18 18 18 18 18 18 18 18 18 18 18 F8 18 18 18  // ................
    6DC0: 18 18 18 18 18 18 18 18 18 18 F8 18 F8 18 18 18  // ................
    6DD0: 18 18 18 18 18 36 36 36 36 36 36 36 F6 36 36 36  // .....6666666.666
    6DE0: 36 36 36 36 36 00 00 00 00 00 00 00 FE 36 36 36  // 66666........666
    6DF0: 36 36 36 36 36 00 00 00 00 00 F8 18 F8 18 18 18  // 66666...........
    6E00: 18 18 18 18 18 36 36 36 36 36 F6 06 F6 36 36 36  // .....66666...666
    6E10: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6666666666666666
    6E20: 36 36 36 36 36 00 00 00 00 00 FE 06 F6 36 36 36  // 66666........666
    6E30: 36 36 36 36 36 36 36 36 36 36 F6 06 FE 00 00 00  // 6666666666......
    6E40: 00 00 00 00 00 36 36 36 36 36 36 36 FE 00 00 00  // .....6666666....
    6E50: 00 00 00 00 00 18 18 18 18 18 F8 18 F8 00 00 00  // ................
    6E60: 00 00 00 00 00 00 00 00 00 00 00 00 F8 18 18 18  // ................
    6E70: 18 18 18 18 18 18 18 18 18 18 18 18 1F 00 00 00  // ................
    6E80: 00 00 00 00 00 18 18 18 18 18 18 18 FF 00 00 00  // ................
    6E90: 00 00 00 00 00 00 00 00 00 00 00 00 FF 18 18 18  // ................
    6EA0: 18 18 18 18 18 18 18 18 18 18 18 18 1F 18 18 18  // ................
    6EB0: 18 18 18 18 18 00 00 00 00 00 00 00 FF 00 00 00  // ................
    6EC0: 00 00 00 00 00 18 18 18 18 18 18 18 FF 18 18 18  // ................
    6ED0: 18 18 18 18 18 18 18 18 18 18 1F 18 1F 18 18 18  // ................
    6EE0: 18 18 18 18 18 36 36 36 36 36 36 36 37 36 36 36  // .....66666667666
    6EF0: 36 36 36 36 36 36 36 36 36 36 37 30 3F 00 00 00  // 666666666670?...
    6F00: 00 00 00 00 00 00 00 00 00 00 3F 30 37 36 36 36  // ..........?07666
    6F10: 36 36 36 36 36 36 36 36 36 36 F7 00 FF 00 00 00  // 6666666666......
    6F20: 00 00 00 00 00 00 00 00 00 00 FF 00 F7 36 36 36  // .............666
    6F30: 36 36 36 36 36 36 36 36 36 36 37 30 37 36 36 36  // 6666666666707666
    6F40: 36 36 36 36 36 00 00 00 00 00 FF 00 FF 00 00 00  // 66666...........
    6F50: 00 00 00 00 00 36 36 36 36 36 F7 00 F7 36 36 36  // .....66666...666
    6F60: 36 36 36 36 36 18 18 18 18 18 FF 00 FF 00 00 00  // 66666...........
    6F70: 00 00 00 00 00 36 36 36 36 36 36 36 FF 00 00 00  // .....6666666....
    6F80: 00 00 00 00 00 00 00 00 00 00 FF 00 FF 18 18 18  // ................
    6F90: 18 18 18 18 18 00 00 00 00 00 00 00 FF 36 36 36  // .............666
    6FA0: 36 36 36 36 36 36 36 36 36 36 36 36 3F 00 00 00  // 666666666666?...
    6FB0: 00 00 00 00 00 18 18 18 18 18 1F 18 1F 00 00 00  // ................
    6FC0: 00 00 00 00 00 00 00 00 00 00 1F 18 1F 18 18 18  // ................
    6FD0: 18 18 18 18 18 00 00 00 00 00 00 00 3F 36 36 36  // ............?666
    6FE0: 36 36 36 36 36 36 36 36 36 36 36 36 FF 36 36 36  // 666666666666.666
    6FF0: 36 36 36 36 36 18 18 18 18 18 FF 18 FF 18 18 18  // 66666...........
    7000: 18 18 18 18 18 18 18 18 18 18 18 18 F8 00 00 00  // ................
    7010: 00 00 00 00 00 00 00 00 00 00 00 00 1F 18 18 18  // ................
    7020: 18 18 18 18 18 FF FF FF FF FF FF FF FF FF FF FF  // ................
    7030: FF FF FF FF FF 00 00 00 00 00 00 00 00 FF FF FF  // ................
    7040: FF FF FF FF FF F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0  // ................
    7050: F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    7060: 0F 0F 0F 0F 0F FF FF FF FF FF FF FF FF 00 00 00  // ................
    7070: 00 00 00 00 00 00 00 00 00 76 DC D8 D8 D8 D8 DC  // .........v......
    7080: 76 00 00 00 00 00 00 78 CC CC D8 FC C6 C6 C6 C6  // v......x........
    7090: CC 00 00 00 00 00 00 FE 66 62 60 60 60 60 60 60  // ........fb``````
    70A0: 60 00 00 00 00 00 00 00 00 00 FE 6C 6C 6C 6C 6C  // `..........lllll
    70B0: 6C 00 00 00 00 00 00 FE C6 62 30 18 18 30 62 C6  // l........b0..0b.
    70C0: FE 00 00 00 00 00 00 00 00 00 7E D8 CC CC CC D8  // ..........~.....
    70D0: 70 00 00 00 00 00 00 00 00 66 66 66 66 66 7C 60  // p........fffff|`
    70E0: C0 80 00 00 00 00 00 00 00 00 76 DC 18 18 18 18  // ..........v.....
    70F0: 18 00 00 00 00 00 00 FE 38 38 6C C6 C6 6C 38 38  // ........88l..l88
    7100: FE 00 00 00 00 00 00 00 38 6C C6 C6 FE C6 C6 6C  // ........8l.....l
    7110: 38 00 00 00 00 00 00 38 6C C6 C6 C6 C6 6C 6C 6C  // 8......8l....lll
    7120: EE 00 00 00 00 00 00 3E 60 60 3C 66 C6 C6 C6 CC  // .......>``<f....
    7130: 78 00 00 00 00 00 00 00 00 00 7E DB DB DB 7E 00  // x.........~...~.
    7140: 00 00 00 00 00 00 00 02 06 7C CE DE F6 F6 7C 60  // .........|....|`
    7150: C0 00 00 00 00 00 00 00 1C 30 60 60 7C 60 60 30  // .........0``|``0
    7160: 1C 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6  // .......|........
    7170: C6 00 00 00 00 00 00 00 00 FE 00 00 FE 00 00 FE  // ................
    7180: 00 00 00 00 00 00 00 00 00 18 18 7E 18 18 00 00  // ...........~....
    7190: 7E 00 00 00 00 00 00 30 18 0C 06 0C 18 30 00 00  // ~......0.....0..
    71A0: 7E 00 00 00 00 00 00 0C 18 30 60 30 18 0C 00 00  // ~........0`0....
    71B0: 7E 00 00 00 00 00 00 00 00 0C 1E 1A 18 18 18 18  // ~...............
    71C0: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 58  // ...............X
    71D0: 78 30 00 00 00 00 00 00 00 18 18 00 7E 00 18 18  // x0..........~...
    71E0: 00 00 00 00 00 00 00 00 00 00 00 76 DC 00 76 DC  // ...........v..v.
    71F0: 00 00 00 00 00 00 00 78 CC CC 78 00 00 00 00 00  // .......x..x.....
    7200: 00 00 00 00 00 00 00 00 00 00 00 00 18 18 00 00  // ................
    7210: 00 00 00 00 00 00 00 00 00 00 00 00 00 18 00 00  // ................
    7220: 00 00 00 00 00 00 00 1F 18 18 18 18 18 D8 D8 78  // ...............x
    7230: 38 18 00 00 00 00 00 D8 6C 6C 6C 6C 6C 00 00 00  // 8.......lllll...
    7240: 00 00 00 00 00 00 00 70 D8 18 30 60 F8 00 00 00  // .......p..0`....
    7250: 00 00 00 00 00 00 00 00 00 00 7E 7E 7E 7E 7E 7E  // ..........~~~~~~
    7260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7270: 00 00 00 00 00 1D 00 00 00 00 00 24 66 FF 66 24  // ...........$f.f$
    7280: 00 00 00 00 00 00 2F 00 00 00 01 03 06 0C 18 30  // ....../........0
    7290: 60 C0 80 00 00 00 00 30 00 00 7E C3 C3 C3 DB DB  // `......0..~.....
    72A0: C3 C3 C3 7E 00 00 00 00 4D 00 00 C3 C3 E7 FF FF  // ...~....M.......
    72B0: DB DB C3 C3 C3 00 00 00 00 54 00 00 FF 99 18 18  // .........T......
    72C0: 18 18 18 18 18 3C 00 00 00 00 56 00 00 C3 C3 C3  // .....<....V.....
    72D0: C3 C3 C3 C3 66 3C 18 00 00 00 00 57 00 00 C3 C3  // ....f<.....W....
    72E0: C3 C3 DB DB DB DB FF 66 00 00 00 00 58 00 00 C3  // .......f....X...
    72F0: C3 C3 66 3C 3C 66 C3 C3 C3 00 00 00 00 59 00 00  // ..f<<f.......Y..
    7300: C3 C3 C3 C3 66 3C 18 18 18 3C 00 00 00 00 5C 00  // ....f<...<....\.
    7310: 00 00 80 C0 60 30 18 0C 06 03 01 00 00 00 00 6D  // ....`0.........m
    7320: 00 00 00 00 00 66 FF DB DB DB C3 C3 00 00 00 00  // .....f..........
    7330: 76 00 00 00 00 00 C3 C3 C3 C3 66 3C 18 00 00 00  // v.........f<....
    7340: 00 77 00 00 00 00 00 C3 C3 DB DB DB FF 66 00 00  // .w...........f..
    7350: 00 00 00 00 0D 62 C3 0B DB 74 03 E9 46 01 57 32  // .....b...t..F.W2
    7360: C0 B9 40 00 F3 AA 5F BB DA 8F 26 89 1D 26 8C 4D  // ..@..._...&..&.M
    7370: 02 2E 8E 1E 03 03 57 BE 49 04 B9 1E 00 83 C7 04  // ......W.I.......
    7380: FC 8A 04 26 88 05 46 47 E2 F7 5F A0 84 04 FE C0  // ...&..FG.._.....
    7390: 26 88 45 22 A1 85 04 26 89 45 23 57 E8 D9 1B 5F  // &.E"...&.E#W..._
    73A0: 26 88 5D 25 26 88 7D 26 8A 1E 49 04 E8 FC 05 74  // &.]%&.}&..I....t
    73B0: 05 80 FB 13 7F 1D 32 FF D1 E3 2E 8A 87 B2 8F 32  // ......2........2
    73C0: E4 0A C0 74 01 40 26 89 45 27 2E 8A 87 B3 8F 26  // ...t.@&.E'.....&
    73D0: 88 45 29 A1 85 04 8A 16 84 04 FE C2 F6 E2 B2 00  // .E).............
    73E0: 3D C8 00 7E 15 B2 01 3D 5E 01 7E 0E B2 02 3D 90  // =..~...=^.~...=.
    73F0: 01 7E 07 B2 03 3D E0 01 7E 00 26 88 55 2A 8A 26  // .~...=..~.&.U*.&
    7400: 87 04 8A C4 24 01 C0 E0 04 80 E4 02 D0 E4 0A E0  // ....$...........
    7410: 80 F4 10 A0 89 04 24 0A 0A E0 E8 94 08 B2 C0 B0  // ......$.........
    7420: 30 EE 42 EC 24 08 C0 E0 02 0A C4 0C 01 26 88 45  // 0.B.$........&.E
    7430: 2D B0 03 26 88 45 31 E8 77 08 1E 06 32 D2 C4 1E  // -..&.E1.w...2...
    7440: A8 04 8C C1 8C CE 3B CE 74 34 26 C5 77 04 8C D9  // ......;.t4&.w...
    7450: 0B F1 74 03 80 CA 10 26 C5 77 0C 8C D9 0B F1 74  // ..t....&.w.....t
    7460: 03 80 CA 08 26 C5 77 08 8C D9 0B F1 74 03 80 CA  // ....&.w.....t...
    7470: 04 26 C5 77 10 8C D9 0B F1 74 03 80 CA 01 07 1F  // .&.w.....t......
    7480: 26 88 55 32 B0 03 BA C4 03 E8 E4 04 8A E0 C0 EC  // &.U2............
    7490: 02 8A D4 8A F2 D0 EE 81 E2 04 04 25 03 03 0B C2  // ...........%....
    74A0: 26 89 45 2B 8B EC C6 46 1A 1B C3 0A C0 74 0F FE  // &.E+...F.....t..
    74B0: C8 74 36 FE C8 74 56 8B EC C6 46 1A 00 C3 B8 20  // .t6..tV...F.... 
    74C0: 00 F6 C1 01 74 03 83 C0 60 F6 C1 02 74 03 83 C0  // ....t...`...t...
    74D0: 3A F6 C1 04 74 03 05 03 03 83 C0 3F C1 E8 06 8B  // :...t......?....
    74E0: EC 89 46 0E C6 46 1A 1C C3 8B FB 83 C7 20 F6 C1  // ..F..F....... ..
    74F0: 01 74 03 E8 85 00 F6 C1 02 74 03 E8 EF 00 F6 C1  // .t.......t......
    7500: 04 74 03 E8 F8 01 8B EC C6 46 1A 1C C3 F6 C1 01  // .t.......F......
    7510: 74 06 E8 16 15 E8 25 01 F6 C1 02 74 03 E8 85 01  // t.....%....t....
    7520: F6 C1 04 74 03 E8 12 02 EB DC 8A C4 EE 42 EC AA  // ...t.........B..
    7530: FE C4 4A E2 F5 C3 E8 6B 04 BD C0 03 B9 15 00 32  // ..J....k.......2
    7540: E4 EC 87 EA 8A C4 EE 42 EC AA FE C4 4A 87 EA E2  // .......B....J...
    7550: F0 EC 87 EA B0 20 EE C3 26 8A 05 88 04 47 46 E2  // ..... ..&....GF.
    7560: F7 C3 26 8A 25 EF 47 FE C0 E2 F7 C3 B2 C0 8A C4  // ..&.%.G.........
    7570: EE 26 8A 05 47 FE C4 EE E2 F4 C3 9C FA 51 57 8B  // .&..G........QW.
    7580: C7 2B C3 26 89 07 8B F7 E8 0A 04 EC 26 88 44 01  // .+.&........&.D.
    7590: 26 89 54 41 B2 CE EC 26 88 44 02 B2 CC EC 26 88  // &.TA...&.D....&.
    75A0: 44 09 B2 CA EC 26 88 44 04 B2 C4 EC 26 88 04 83  // D....&.D....&...
    75B0: C7 05 B9 04 00 B4 01 E8 70 FF 26 8A 04 EE 8B FE  // ........p.&.....
    75C0: 83 C7 0A 26 8B 54 41 32 E4 B9 19 00 E8 5B FF 26  // ...&.TA2.....[.&
    75D0: 8A 44 01 EE E8 5F FF B2 CE 32 E4 B9 09 00 E8 49  // .D..._...2.....I
    75E0: FF 26 8A 44 02 EE 5F 59 83 C7 60 9D C3 9C FA 8B  // .&.D.._Y..`.....
    75F0: C7 2B C3 26 89 47 02 51 57 2E 8E 1E 03 03 A0 10  // .+.&.G.QW.......
    7600: 04 24 30 AA BE 49 04 B9 1E 00 F3 A4 BE 84 04 B1  // .$0..I..........
    7610: 07 F3 A4 BE A8 04 B1 04 F3 A4 BE 14 00 B1 04 F3  // ................
    7620: A4 BE 74 00 B1 04 F3 A4 BE 7C 00 B1 04 F3 A4 BE  // ..t......|......
    7630: 0C 01 B1 04 F3 A4 5F 59 83 C7 3A 9D C3 9C FA 26  // ......_Y..:....&
    7640: 8B 3F 03 FB 8B F7 51 8B FE 83 C7 05 BA C4 03 B8  // .?....Q.........
    7650: 00 01 EF B0 01 B9 04 00 E8 07 FF 47 B2 C2 26 8A  // ...........G..&.
    7660: 44 09 EE B2 C4 B8 00 03 EF 26 8A 04 EE 26 8B 54  // D........&...&.T
    7670: 41 B8 11 00 EF B1 19 32 C0 E8 E6 FE 26 8A 44 01  // A......2....&.D.
    7680: EE 80 C2 06 26 8A 44 04 EE EC B1 15 32 E4 E8 DB  // ....&.D.....2...
    7690: FE B0 20 EE B1 09 32 C0 B2 CE E8 C5 FE 26 8A 44  // .. ...2......&.D
    76A0: 02 EE 59 9D C3 9C FA 26 8B 7F 02 03 FB 06 51 2E  // ..Y....&......Q.
    76B0: 8E 1E 03 03 26 8A 05 80 26 10 04 CF 08 06 10 04  // ....&...&.......
    76C0: 47 BE 49 04 B9 1E 00 E8 8E FE BE 84 04 B1 07 E8  // G.I.............
    76D0: 86 FE BE A8 04 B1 04 E8 7E FE BE 14 00 B1 04 E8  // ........~.......
    76E0: 76 FE BE 74 00 B1 04 E8 6E FE BE 7C 00 B1 04 E8  // v..t....n..|....
    76F0: 66 FE BE 0C 01 B1 04 E8 5E FE 59 07 9D C3 9C FA  // f.......^.Y.....
    7700: 8B C7 2B C3 26 89 47 04 E8 A6 05 B2 C0 B0 34 EE  // ..+.&.G.......4.
    7710: 42 EC 26 88 05 BA C8 03 EC 26 88 45 01 50 4A 4A  // B.&......&.E.PJJ
    7720: EC 26 88 45 02 83 C7 03 B9 00 03 42 32 C0 EE 42  // .&.E.......B2..B
    7730: 42 EC AA E2 FC 58 4A EE 9D C3 9C FA 26 8B 77 04  // B....XJ.....&.w.
    7740: 03 F3 E8 6C 05 B2 C0 B0 34 EE 26 8A 04 EE BA C6  // ...l....4.&.....
    7750: 03 26 8A 44 02 EE 56 42 42 83 C6 03 32 C0 EE 42  // .&.D..VBB...2..B
    7760: B9 00 03 26 8A 04 EE 46 E2 F9 5E FE CA 26 8A 44  // ...&...F..^..&.D
    7770: 01 EE 9D C3 BA CC 03 EC 24 FE 0A C4 B2 C2 EE C3  // ........$.......
    7780: E8 A8 12 B2 C0 86 C4 EE EB 00 EB 00 86 C4 EE EB  // ................
    7790: 00 EB 00 B0 20 EE C3 50 8A E0 80 E4 80 80 26 87  // .... ..P......&.
    77A0: 04 7F 08 26 87 04 24 7F 8A E0 3C 07 7E 1E 26 F6  // ...&..$...<.~.&.
    77B0: 47 33 01 75 17 3C 23 74 13 3C 32 74 0F 3C 33 74  // G3.u.<#t.<2t.<3t
    77C0: 0B B4 03 26 F6 47 09 01 75 02 B4 07 88 26 49 04  // ...&.G..u....&I.
    77D0: BA B4 03 80 0E 87 04 02 26 F6 47 09 01 74 07 B2  // ........&.G..t..
    77E0: D4 80 26 87 04 FD 89 16 63 04 C7 06 4E 04 00 00  // ..&.....c...N...
    77F0: C6 06 62 04 00 B9 08 00 BF 50 04 FC 06 1E 07 33  // ..b......P.....3
    7800: C0 F3 AB 07 26 8A 07 32 E4 A3 4A 04 26 8A 47 01  // ....&..2..J.&.G.
    7810: A2 84 04 26 8A 47 02 A3 85 04 26 8B 47 03 A3 4C  // ...&.G....&.G..L
    7820: 04 26 8B 47 14 86 C4 A3 60 04 58 C3 52 32 E4 33  // .&.G....`.X.R2.3
    7830: D2 B0 0D CD 17 F6 C4 29 75 08 32 E4 33 D2 B0 0A  // .......)u.2.3...
    7840: CD 17 5A C3 06 1E 60 2E 8E 1E 03 03 2E 83 0E 0D  // ..Z...`.........
    7850: 03 00 75 6E 80 3E 00 05 01 74 67 C6 06 00 05 01  // ..un.>...tg.....
    7860: 8A 1E 62 04 32 FF D1 E3 8B FB 8B 85 50 04 8A 3E  // ..b.2.......P..>
    7870: 62 04 50 32 F6 8A 0E 84 04 32 ED 41 51 8B 0E 4A  // b.P2.....2.AQ..J
    7880: 04 32 D2 E8 A6 FF F6 C4 29 75 3D 51 52 89 95 50  // .2......)u=QR..P
    7890: 04 B4 08 E8 AA D4 0A C0 75 02 B0 20 33 D2 32 E4  // ........u.. 3.2.
    78A0: CD 17 F6 C4 29 75 1F 5A FE C2 59 E2 DE FE C6 59  // ....)u.Z..Y....Y
    78B0: E2 CA E8 77 FF 32 C0 A2 00 05 58 89 85 50 04 E8  // ...w.2....X..P..
    78C0: AF 03 61 1F 07 CF 5A 59 59 B0 FF EB EA 52 2A F5  // ..a...ZYY....R*.
    78D0: 38 C6 7D 02 32 C0 2E 8E 06 05 03 5A C3 A0 85 04  // 8.}.2......Z....
    78E0: F6 E3 8A F7 8B D8 8B CA BA C4 03 B8 02 0F EF B4  // ................
    78F0: 02 E8 6D 00 8B D1 32 ED 8A E6 8A C6 F3 AA 03 FD  // ..m...2.........
    7900: 8A CA 4B 75 F7 32 E4 E8 57 00 C3 53 8A 1E 62 04  // ..Ku.2..W..S..b.
    7910: 0B C0 75 04 0A DB 74 03 E8 35 03 5B 8B F8 2B D1  // ..u...t..5.[..+.
    7920: 81 C2 01 01 8A C3 32 E4 C3 8A C6 32 F6 2B EA 0A  // ......2....2.+..
    7930: DB 74 2A 2A C3 F6 26 85 04 8B C8 52 B4 01 E8 20  // .t**..&....R... 
    7940: 00 B2 C4 B8 02 0F EF 5A 1E 06 1F 8B C1 8B CA F3  // .......Z........
    7950: A4 03 F5 03 FD 48 75 F5 1F E8 81 FF C3 8A D8 EB  // .....Hu.........
    7960: F8 BA CE 03 B0 05 EE 42 EC 24 FC 0A C4 EE 4A C3  // .......B.$....J.
    7970: 9C FA EE 42 EB 00 EC 4A 9D C3 1E 2E 8E 1E 03 03  // ...B...J........
    7980: 8B 16 63 04 80 C2 06 1F C3 1E 2E 8E 1E 03 03 8B  // ..c.............
    7990: 16 63 04 1F C3 50 BA CC 03 EC B2 D4 A8 01 75 02  // .c...P........u.
    79A0: B2 B4 58 C3 E8 EE FF 80 C2 06 C3 1E 2E 8E 1E 03  // ..X.............
    79B0: 03 80 3E 49 04 03 74 13 80 3E 49 04 02 74 0C 80  // ..>I..t..>I..t..
    79C0: 3E 49 04 01 74 05 80 3E 49 04 00 1F C3 50 2E 8E  // >I..t..>I....P..
    79D0: 06 07 03 A0 10 04 24 30 3C 30 74 05 2E 8E 06 09  // ......$0<0t.....
    79E0: 03 58 0B C0 74 03 E8 E1 01 03 06 4E 04 81 C2 01  // .X..t......N....
    79F0: 01 2B D1 32 ED 8B 2E 4A 04 8B F8 8B F0 8B C5 F6  // .+.2...J........
    7A00: E3 D1 E0 D1 E5 0A DB 75 02 8A DE 38 F3 7E 02 8A  // .......u...8.~..
    7A10: DE C3 FC 8A D8 8B C1 E8 B3 FF 03 F0 3A 16 4A 04  // ............:.J.
    7A20: 74 06 06 1F E8 1B 00 C3 06 1F E8 40 00 C3 FC 8A  // t..........@....
    7A30: D8 8A C1 8A E6 E8 95 FF F7 DD 2B F0 06 1F E8 01  // ..........+.....
    7A40: 00 C3 53 8A CE 2A CB 32 ED 32 F6 2B EA 2B EA E3  // ..S..*.2.2.+.+..
    7A50: 0E 8A E1 8B CA F3 A5 03 F5 03 FD FE CC 75 F4 58  // .............u.X
    7A60: B0 20 8A CA F3 AB 03 FD FE CB 75 F6 C3 53 8A C6  // . ........u..S..
    7A70: 2A C3 74 06 F6 E2 8B C8 F3 A5 58 8B C8 F6 E2 91  // *.t.......X.....
    7A80: B0 20 F3 AB C3 8B D8 E8 2E 00 2E 8E 1E 09 03 8A  // . ..............
    7A90: C3 22 DF D3 E3 A8 80 74 03 30 1C C3 F6 D7 8A 34  // .".....t.0.....4
    7AA0: 22 F7 0A DE 88 1C C3 8A FC E8 0C 00 2E 8E 1E 09  // "...............
    7AB0: 03 8A 04 D2 E8 22 C7 C3 B0 28 F6 E2 F6 C2 01 74  // ....."...(.....t
    7AC0: 03 05 D8 1F 8B F1 C1 EE 02 80 FF 05 7F 0C 03 F0  // ................
    7AD0: F6 D1 80 E1 03 D0 E1 B7 03 C3 D1 EE 03 F0 F6 D1  // ................
    7AE0: 80 E1 07 B7 01 C3 FC 8A D8 2E 8E 06 09 03 8B C1  // ................
    7AF0: E8 86 00 75 02 8A DE 03 F0 E8 24 00 C3 FC 8A D8  // ...u......$.....
    7B00: 2E 8E 06 09 03 8A C1 8A E6 E8 6D 00 75 02 8A DE  // ..........m.u...
    7B10: F7 DD 81 C6 F0 00 81 C7 F0 00 2B F0 E8 01 00 C3  // ..........+.....
    7B20: 8A CE 2A CB E3 2C 51 8A CA 56 57 D1 E9 F3 A5 13  // ..*..,Q..VW.....
    7B30: C9 F3 A4 8A CA 2B F1 2B F9 81 C6 00 20 81 C7 00  // .....+.+.... ...
    7B40: 20 D1 E9 F3 A5 13 C9 F3 A4 5F 5E 03 F5 03 FD 59  //  ........_^....Y
    7B50: E2 D4 8A C7 8A E7 8A CA 57 D1 E9 F3 AB 13 C9 F3  // ........W.......
    7B60: AA 8A CA 2B F9 81 C7 00 20 D1 E9 F3 AB 13 C9 F3  // ...+.... .......
    7B70: AA 5F 03 FD FE CB 75 DE C3 E8 B0 00 81 C2 01 01  // ._....u.........
    7B80: 2B D1 38 F3 76 02 32 DB 51 B1 02 D2 E6 D2 E3 59  // +.8.v.2.Q......Y
    7B90: 32 ED BD 50 00 80 3E 49 04 06 74 04 D0 E2 D1 E0  // 2..P..>I..t.....
    7BA0: 06 1F 8B F8 8B F0 B0 50 F6 E3 0A DB C3 52 53 8A  // .......P.....RS.
    7BB0: DF 32 FF D1 E3 8B 87 50 04 E8 0E 00 50 D1 EB A1  // .2.....P....P...
    7BC0: 4C 04 F7 E3 5B 03 C3 5B 5A C3 52 8B D0 A0 4A 04  // L...[..[Z.R...J.
    7BD0: F6 E4 32 F6 03 C2 D1 E0 5A C3 8B E8 83 E5 0F 2E  // ..2.....Z.......
    7BE0: 8A A6 8A 7B 8B E8 C1 ED 04 83 E5 0F 2E 8A 86 8A  // ...{............
    7BF0: 7B C3 00 03 0C 0F 30 33 3C 3F C0 C3 CC CF F0 F3  // {.....03<?......
    7C00: FC FF 26 8B 04 86 E0 BA 00 80 F6 C4 C0 74 02 0A  // ..&..........t..
    7C10: D6 D0 EE C1 E0 02 75 F2 88 56 00 45 C3 8B 16 63  // ......u..V.E...c
    7C20: 04 8A C5 86 E0 EF 8A E1 FE C0 EF C3 52 8B D0 8A  // ............R...
    7C30: C4 F6 26 4A 04 C1 E0 02 32 F6 03 C2 5A C3 53 8A  // ..&J....2...Z.S.
    7C40: DF 32 FF D1 E3 8B 87 50 04 D1 EB E8 02 00 5B C3  // .2.....P......[.
    7C50: 52 8B D0 32 F6 52 8A C4 F6 26 85 04 F7 26 4A 04  // R..2.R...&...&J.
    7C60: 5A 03 C2 0A DB 74 08 03 06 4C 04 FE CB 75 F8 5A  // Z....t...L...u.Z
    7C70: C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 03  // .R...J...2......
    7C80: 06 4E 04 D1 F8 8B C8 B4 0E E8 91 FF 5A C3 8B C2  // .N..........Z...
    7C90: F7 26 4A 04 8B F9 C1 EF 03 03 F8 0A FF 74 0A 8A  // .&J..........t..
    7CA0: C7 32 E4 F7 26 4C 04 03 F8 80 E1 07 B4 80 D2 EC  // .2..&L..........
    7CB0: C3 E8 F0 FC EC C3 E8 F8 FF B2 C0 B0 20 EE C3 E8  // ............ ...
    7CC0: EF FF B2 C0 32 C0 EE C3 C4 3E A8 04 26 C4 7D 04  // ....2....>..&.}.
    7CD0: 8C C5 0B EF C3 53 B0 0E E8 95 FC 8A E0 B0 0F E8  // .....S..........
    7CE0: 8E FC 8B D8 B8 0E AA EF B8 0F 55 EF B0 0E E8 7F  // ..........U.....
    7CF0: FC 3C AA 74 0D B0 0F E8 76 FC 3C 55 74 04 32 C0  // .<.t....v.<Ut.2.
    7D00: 5B C3 B0 0E 8A E7 EF FE C0 8A E3 EF B0 01 0A C0  // [...............
    7D10: 5B C3 8A EE 8A 36 85 04 06 1F 0A DB 74 25 8A C5  // [....6......t%..
    7D20: 2A C3 F6 E6 8B C8 52 32 F6 C1 E2 02 8B C2 D1 E2  // *.....R2........
    7D30: 2B D5 51 8B C8 F3 A5 2B FA 2B F2 59 E2 F4 5A E8  // +.Q....+.+.Y..Z.
    7D40: 05 00 C3 8A DD EB F8 8A C6 F6 E3 8B C8 8A C7 8A  // ................
    7D50: E0 32 F6 C1 E2 02 8B DA D1 E2 8B F1 2B D5 8B CB  // .2..........+...
    7D60: F3 AB 2B FA 4E 75 F7 C3 2E 8E 1E 03 03 89 0E 60  // ..+.Nu.........`
    7D70: 04 8A C5 24 60 A8 20 74 06 B9 00 1E E9 94 00 F6  // ...$`. t........
    7D80: 06 87 04 01 0F 85 8B 00 80 3E 49 04 07 74 06 E8  // .........>I..t..
    7D90: 19 FC 74 01 C3 F6 06 87 04 08 74 03 CD 42 C3 8A  // ..t.......t..B..
    7DA0: 36 85 04 8A D6 FE CA 38 CD 7E 1F 0A C9 74 64 8A  // 6......8.~...td.
    7DB0: E9 8A CE FE C9 EB 5C 38 D1 74 58 8A CE 80 FD 03  // ......\8.tX.....
    7DC0: 7C 04 8A E9 D0 ED FE C9 EB 49 80 F9 03 7E 44 8A  // |........I...~D.
    7DD0: E1 2A E5 0A E4 75 0A 38 CA 74 38 FE CA 38 CA 74  // .*...u.8.t8..8.t
    7DE0: 32 8A C5 0A C1 38 F0 7E 0A 80 FC 02 7E 12 80 FD  // 2....8.~....~...
    7DF0: 02 7F C8 80 FC 03 7D BF 8A D6 FE CA 38 D1 74 13  // ......}.....8.t.
    7E00: 8A CE FE C9 FE C9 8A E9 2A EC 80 FE 08 7F 04 FE  // ........*.......
    7E10: C1 FE C5 B4 0A E8 05 FE C3 2E 8E 1E 03 03 A2 62  // ...............b
    7E20: 04 32 E4 8B F0 F7 26 4C 04 A3 4E 04 8B C8 E8 7A  // .2....&L..N....z
    7E30: FB 74 07 80 3E 49 04 07 77 02 D1 F9 B4 0C E8 DC  // .t..>I..w.......
    7E40: FD D1 E6 8B 84 50 04 E8 27 FE C3 2E 8E 1E 03 03  // .....P..'.......
    7E50: 8A 26 49 04 E8 BB 9C 74 07 C7 06 50 04 00 00 C3  // .&I....t...P....
    7E60: E8 48 FB 74 0B 80 FC 07 74 06 77 08 E8 77 FC C3  // .H.t....t.w..w..
    7E70: E8 9F FB C3 80 FC 13 7C 03 74 1F C3 E8 4E FA 8A  // .......|.t...N..
    7E80: D8 8B C1 E8 85 FA 8B 2E 4A 04 52 F6 26 85 04 F7  // ........J.R.&...
    7E90: E5 8B F7 03 F0 5A E8 90 FA C3 E8 30 FA 8A D8 8B  // .....Z.....0....
    7EA0: C1 E8 67 FA C1 E7 03 52 8B 2E 4A 04 C1 E5 03 F7  // ..g....R..J.....
    7EB0: 26 85 04 F7 E5 8B F7 03 F0 5A E8 55 FE C3 2E 8E  // &........Z.U....
    7EC0: 1E 03 03 8A 26 49 04 E8 E1 FA 74 0C 80 FC 07 74  // ....&I....t....t
    7ED0: 07 77 40 80 FC 03 7F 04 E8 53 FB C3 E8 1E FC C3  // .w@......S......
    7EE0: E8 EA F9 8A D8 8A C1 8A E6 FE C4 E8 1D FA 2B 3E  // ..............+>
    7EF0: 4A 04 C1 E7 03 52 F7 26 85 04 F7 26 4A 04 C1 E0  // J....R.&...&J...
    7F00: 03 8B F7 2B F0 5A 8B 2E 4A 04 C1 E5 03 F7 DD E8  // ...+.Z..J.......
    7F10: 00 FE C3 80 FC 13 7C 03 74 C6 C3 E8 AF F9 8A D8  // ......|.t.......
    7F20: 8A C1 8A E6 FE C4 E8 E2 F9 52 8B 2E 4A 04 F7 26  // .........R..J..&
    7F30: 85 04 F7 E5 2B FD 8B F7 2B F0 5A F7 DD E8 E9 F9  // ....+...+.Z.....
    7F40: C3 2E 8E 1E 03 03 2E 8E 06 09 03 E8 5D FA 74 11  // ............].t.
    7F50: 80 3E 49 04 07 7C 18 2E 8E 06 07 03 74 03 E9 B1  // .>I..|......t...
    7F60: 00 E8 49 FC 8B D8 26 8B 07 8B EC 89 46 1A C3 A1  // ..I...&.....F...
    7F70: 50 04 E8 B7 FC 8B F0 BB 08 00 2B E3 8B EC 80 3E  // P.........+....>
    7F80: 49 04 06 75 1F B9 04 00 26 8A 04 88 46 00 45 26  // I..u....&...F.E&
    7F90: 8A 84 00 20 88 46 00 45 83 C6 50 E2 EB B8 00 02  // ... .F.E..P.....
    7FA0: B2 80 EB 17 D1 E6 B9 04 00 E8 56 FC 81 C6 00 20  // ..........V.... 
    7FB0: E8 4F FC 81 EE B0 1F E2 F0 EB E2 2B EB C4 3E 0C  // .O.........+..>.
    7FC0: 01 32 F6 80 FB 0E 75 09 26 83 7D FE 10 75 02 B6  // .2....u.&.}..u..
    7FD0: 80 16 1F 8B F5 8B CB F6 C6 80 74 01 47 56 57 F3  // ..........t.GVW.
    7FE0: A6 5F 5E 74 23 FE C0 03 FB F6 C6 80 74 01 47 FE  // ._^t#.......t.G.
    7FF0: CA 75 E2 FE CC 74 0F 2E 8E 1E 03 03 C4 3E 7C 00  // .u...t.......>|.
    8000: B0 80 B2 80 EB CB 32 C0 8B E5 03 E3 8B EC 89 46  // ......2........F
    8010: 1A C3 80 3E 49 04 13 7C 05 75 02 EB 5A C3 2E 8E  // ...>I..|.u..Z...
    8020: 06 05 03 E8 18 FC 8B F0 8B 1E 85 04 2B E3 8B EC  // ............+...
    8030: B8 05 08 B9 05 00 BA CE 03 80 3E 49 04 0F 72 1A  // ..........>I..r.
    8040: F6 06 87 04 60 75 13 B4 0A F7 C6 01 00 75 02 B4  // ....`u.......u..
    8050: 05 B0 07 EF B8 05 18 B9 05 01 EF 51 8B CB 26 8A  // ...........Q..&.
    8060: 04 F6 D0 88 46 00 45 03 36 4A 04 E2 F1 58 EF B8  // ....F.E.6J...X..
    8070: 00 01 32 D2 E9 44 FF 2E 8E 06 05 03 A1 50 04 8B  // ..2..D.......P..
    8080: D0 32 F6 52 8A C4 32 E4 F7 26 4A 04 F7 26 85 04  // .2.R..2..&J..&..
    8090: 5A 03 C2 8B F0 8B 1E 85 04 2B E3 8B EC 53 8B 3E  // Z........+...S.>
    80A0: 4A 04 4F C1 E7 03 C1 E6 03 B9 08 00 32 E4 26 8A  // J.O.........2.&.
    80B0: 04 D0 E4 0A C0 74 03 80 CC 01 46 E2 F1 88 66 00  // .....t....F...f.
    80C0: 45 03 F7 4B 75 E3 5B B8 00 01 32 D2 E9 EC FE 33  // E..Ku.[...2....3
    80D0: ED EB 03 BD 01 00 2E 8E 1E 03 03 2E 8E 06 09 03  // ................
    80E0: 8A 26 49 04 E8 C4 F8 74 0F 2E 8E 06 07 03 80 FC  // .&I....t........
    80F0: 07 74 05 7C 3D E9 0B 02 8A E3 8B F0 8A DF 32 FF  // .t.|=.........2.
    8100: D1 E3 8B 87 50 04 8B D0 A0 4A 04 F6 E4 32 F6 03  // ....P....J...2..
    8110: C2 8B F8 D1 E7 0A DB 74 0B D0 EB A1 4C 04 03 F8  // .......t....L...
    8120: FE CB 75 FA 8B C6 0B ED 75 03 F3 AB C3 AA 47 E2  // ..u.....u.....G.
    8130: FC C3 50 2E 8E 06 09 03 A1 50 04 E8 EE FA 8B F8  // ..P......P......
    8140: A0 50 04 8A 26 4A 04 8B E8 58 A8 80 74 08 24 7F  // .P..&J...X..t.$.
    8150: C5 36 7C 00 EB 04 C5 36 0C 01 8A FC 32 E4 C1 E0  // .6|....6....2...
    8160: 03 03 F0 80 FF 06 74 69 D1 E7 8A F3 B0 55 80 E3  // ......ti.....U..
    8170: 03 F6 E3 8A D8 8A F8 8B C5 50 B2 04 F6 C6 80 75  // .........P.....u
    8180: 27 AC E8 55 FA 23 C3 AB AC E8 4E FA 23 C3 26 89  // '..U.#....N.#.&.
    8190: 85 FE 1F 83 C7 4E FE CA 75 E7 83 EE 08 81 EF 3E  // .....N..u......>
    81A0: 01 58 E8 72 00 E2 D2 C3 AC E8 2E FA 23 C3 26 31  // .X.r........#.&1
    81B0: 05 AC E8 25 FA 23 C3 26 31 85 00 20 83 C7 50 FE  // ...%.#.&1.. ..P.
    81C0: CA 75 E5 83 EE 08 81 EF 3E 01 58 E8 49 00 E2 A9  // .u......>.X.I...
    81D0: C3 8B C5 50 B2 04 F6 C3 80 74 1F AC 26 30 05 AC  // ...P.....t..&0..
    81E0: 26 30 85 00 20 83 C7 50 FE CA 7F EF 83 EE 08 81  // &0.. ..P........
    81F0: EF 3F 01 58 E8 20 00 E2 DA C3 AC AA AC 26 88 85  // .?.X. .......&..
    8200: FF 1F 83 C7 4F FE CA 7F F1 83 EE 08 81 EF 3F 01  // ....O.........?.
    8210: 58 E8 03 00 E2 BD C3 FE C0 38 E0 72 06 32 C0 81  // X........8.r.2..
    8220: C7 F0 00 C3 8A 16 85 04 F6 E2 8B F0 32 F6 8B EA  // ............2...
    8230: 66 0F B6 06 51 04 F6 E2 66 0F B7 16 4A 04 83 FA  // f...Q...f...J...
    8240: 64 75 03 BA 68 00 83 FA 5A 75 03 BA 60 00 81 FA  // du..h...Zu..`...
    8250: AF 00 75 03 BA B0 00 52 F7 E2 66 0F B7 F8 66 0F  // ..u....R..f...f.
    8260: B6 06 50 04 66 03 F8 66 C1 CF 10 03 FA 66 C1 C7  // ..P.f..f.....f..
    8270: 03 81 CF 00 FF 66 C1 C7 10 5A 8A E2 4A C1 E2 03  // .....f...Z..J...
    8280: A0 50 04 50 C5 06 0C 01 03 F0 2E 8E 06 05 03 58  // .P.P...........X
    8290: 57 51 50 9C FC 8B CD E8 3B 00 B5 08 AC 8A E0 8A  // WQP.....;.......
    82A0: C7 D0 E4 73 02 8A C3 26 88 05 66 47 FE CD 75 EF  // ...s...&..fG..u.
    82B0: 66 03 FA E2 E2 9D 58 59 5F 83 C7 08 FE C0 38 E0  // f.....XY_.....8.
    82C0: 72 0E 51 32 C0 8B CD 49 03 FA 83 C7 08 E2 F9 59  // r.Q2...I.......Y
    82D0: 2B F5 E2 BC C3 06 52 33 C0 8E C0 66 C1 C7 10 8B  // +.....R3...f....
    82E0: C7 66 C1 C7 10 E8 2A 98 74 16 38 E0 74 12 0F B6  // .f....*.t.8.t...
    82F0: D0 E8 85 C9 8A E0 66 C1 C7 10 8B F8 66 C1 C7 10  // ......f.....f...
    8300: 5A 07 C3 80 FC 13 7C 0B 0F 84 18 FF 80 FC 62 0F  // Z.....|.......b.
    8310: 84 11 FF E8 01 00 C3 80 FC 11 75 06 80 E3 80 80  // ..........u.....
    8320: CB 0F 50 53 8A DF 32 FF D1 E3 8B 97 50 04 5B 2E  // ..PS..2.....P.[.
    8330: 8E 06 05 03 E8 07 F9 8B F8 8B 2E 85 04 58 32 F6  // .............X2.
    8340: 52 8B 36 4A 04 56 8A 26 85 04 C5 36 0C 01 80 FC  // R.6J.V.&...6....
    8350: 0E 75 09 83 7C FE 10 75 03 B4 10 46 F6 E4 03 F0  // .u..|..u...F....
    8360: B6 03 F6 C3 80 75 6D B2 C4 B8 02 0F EF 5A 58 50  // .....um......ZXP
    8370: 52 4A 8A E0 57 51 51 57 8B CD 32 C0 AA 03 FA E2  // RJ..WQQW..2.....
    8380: FB 5F 47 FE C4 38 D4 76 0A 32 E4 8B CD 49 03 FA  // ._G..8.v.2...I..
    8390: 47 E2 FB 59 E2 E0 59 5F BA C4 03 B0 02 8A E3 EF  // G..Y..Y_........
    83A0: 5B 4B 5A 51 57 8B CD AC 26 8A 25 AA 03 FB E2 F7  // [KZQW...&.%.....
    83B0: 5F 47 2B F5 42 3B D3 76 0A 33 D2 8B CD 49 03 FB  // _G+.B;.v.3...I..
    83C0: 47 E2 FB 59 E2 DD BA CE 03 B8 03 00 EF B2 C4 B8  // G..Y............
    83D0: 02 0F EF C3 B2 CE B8 03 18 EF EB BC 2E 8E 1E 03  // ................
    83E0: 03 80 3E 63 04 B4 74 0B BA CC 03 EC A8 01 75 04  // ..>c..t.......u.
    83F0: CD 42 C3 C3 E8 D1 F8 0A FF 75 1C 8A E3 80 E4 1F  // .B.......u......
    8400: 80 26 66 04 E0 08 26 66 04 E8 2D 00 8A 1E 66 04  // .&f...&f..-...f.
    8410: 80 E3 20 B1 05 D2 EB E8 91 F5 74 19 A0 66 04 24  // .. .......t..f.$
    8420: DF 80 E3 01 74 02 0C 20 A2 66 04 24 10 0C 02 0A  // ....t.. .f.$....
    8430: D8 E8 53 00 C3 E8 7E F8 C3 53 50 80 E3 0F 8A FB  // ..S...~..SP.....
    8440: D0 E3 81 E3 10 07 0A DF E8 60 F5 74 0E B4 00 8A  // .........`.t....
    8450: C3 E8 2C F3 0B ED 74 03 26 88 1D 8A C3 E8 0B 00  // ..,...t.&.......
    8460: 0B ED 74 04 26 88 5D 10 58 5B C3 8A E0 1E 2E 8E  // ..t.&.].X[......
    8470: 1E 03 03 80 3E 49 04 33 1F 7F 08 8A C4 B4 11 E8  // ....>I.3........
    8480: FE F2 C3 E8 30 F8 C3 9C FA E8 9F 05 B2 C0 B9 03  // ....0...........
    8490: 00 B4 01 8A C4 EE 8A C3 EE 0B ED 74 04 47 26 88  // ...........t.G&.
    84A0: 1D FE C4 80 C3 02 E2 EB B0 20 EE 9D C3 2E 8E 1E  // ......... ......
    84B0: 03 03 8A 26 49 04 E8 F2 F4 74 0A 80 FC 07 77 06  // ...&I....t....w.
    84C0: 74 03 E8 C0 F5 C3 80 FC 13 7C 03 74 4C C3 8A D8  // t........|.tL...
    84D0: E8 BB F7 BA CE 03 B0 08 EF 2E 8E 1E 05 03 F6 C3  // ................
    84E0: 80 75 1C B2 C4 B8 02 FF EF 8A 25 C6 05 00 8A E3  // .u........%.....
    84F0: EF 8A 25 B4 FF 88 25 EF B2 CE B8 08 FF EF C3 B8  // ..%...%.........
    8500: 03 18 EF B2 C4 B0 02 8A E3 EF 8A 25 B4 FF 88 25  // ...........%...%
    8510: EF B2 CE B8 03 00 EF EB E1 50 2E 8E 06 05 03 A1  // .........P......
    8520: 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 58 26 88 05 C3  // J..........X&...
    8530: 2E 8E 1E 03 03 8A 26 49 04 E8 6F F4 74 0F 80 FC  // ......&I..o.t...
    8540: 07 77 0B 74 08 E8 5F F5 8B EC 89 46 1A C3 80 FC  // .w.t.._....F....
    8550: 13 7C 03 74 29 C3 E8 35 F7 8A CC 2E 8E 1E 05 03  // .|.t)..5........
    8560: BA CE 03 32 FF B8 04 03 EF D0 E7 8A 1D 22 D9 74  // ...2.........".t
    8570: 03 80 CF 01 FE CC 7D F0 8B EC 88 7E 1A C3 A1 4A  // ......}....~...J
    8580: 04 C1 E0 03 F7 E2 03 C1 8B F8 2E 8E 1E 05 03 8A  // ................
    8590: 05 8B EC 88 46 1A C3 2E 8E 1E 03 03 8A 3E 62 04  // ....F........>b.
    85A0: 8A CF D0 E1 32 ED BE 50 04 03 F1 8B 14 8A 0E 49  // ....2..P.......I
    85B0: 04 3C 0D 76 4A 2E 8E 06 09 03 E8 EE F3 75 33 8A  // .<.vJ........u3.
    85C0: 1E 4A 04 8A F8 8A C6 F6 E3 8A CA 03 C8 D1 E1 03  // .J..............
    85D0: 0E 4E 04 8B F9 8A C7 AA D1 E9 41 FE C2 38 DA 73  // .N........A..8.s
    85E0: 59 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0  // Y....c..........
    85F0: EF C3 2E 8E 06 07 03 80 F9 07 74 C3 E9 83 00 75  // ..........t....u
    8600: 04 32 D2 EB 0F 3C 0A 75 1D 3A 36 84 04 75 03 E9  // .2...<.u.:6..u..
    8610: 93 00 FE C6 89 14 E8 92 F3 75 05 80 F9 07 7F 05  // .........u......
    8620: 8B C2 E8 4C F6 C3 3C 07 75 04 E8 41 7F C3 3C 08  // ...L..<.u..A..<.
    8630: 75 83 0A D2 74 DE FE CA EB DA 32 FF 32 D2 2B CB  // u...t.....2.2.+.
    8640: 3A 36 84 04 74 06 FE C6 03 CB EB 95 89 14 8B 16  // :6..t...........
    8650: 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF 2B FB 2B FB  // c...........+.+.
    8660: 26 8A 65 02 50 8B 3E 4E 04 8B F3 D1 E6 03 F7 A0  // &.e.P.>N........
    8670: 84 04 F6 E3 8B C8 06 1F F3 A5 8B CB 58 B0 20 F3  // ............X. .
    8680: AB C3 B9 01 00 B4 0A E8 B6 C6 FE C2 3A 16 4A 04  // ............:.J.
    8690: 74 03 89 14 C3 32 FF 32 D2 89 14 3A 36 84 04 74  // t....2.2...:6..t
    86A0: 2E FE C6 EB ED 89 14 2E 8E 06 09 03 E8 FC F2 74  // ...............t
    86B0: 0E 2E 8E 06 07 03 80 F9 07 74 04 32 FF EB 10 8B  // .........t.2....
    86C0: C2 E8 AD F5 8B F9 D1 E7 4F 8B 1E 4A 04 EB 91 33  // ........O..J...3
    86D0: C9 8A 36 84 04 8A 16 4A 04 FE CA B0 01 E9 70 F7  // ..6....J......p.
    86E0: 2E 8E 1E 03 03 F6 06 87 04 08 74 03 CD 42 C3 E8  // ..........t..B..
    86F0: 76 F6 8B EC C6 46 1B 00 C3 2E 8E 1E 03 03 8A DF  // v....F..........
    8700: 32 FF D1 E3 89 97 50 04 D0 EB 38 1E 62 04 75 05  // 2.....P...8.b.u.
    8710: 8B C2 E8 5C F5 C3 2E 8E 1E 03 03 8A DF 32 FF D1  // ...\.........2..
    8720: E3 8B 97 50 04 8B 0E 60 04 8B EC 89 4E 16 89 56  // ...P...`....N..V
    8730: 12 C3 2E 8E 1E 03 03 A0 87 04 24 80 0A 06 49 04  // ..........$...I.
    8740: 8A 26 4A 04 F6 06 87 04 08 75 2D E8 5D F2 74 07  // .&J......u-.].t.
    8750: 80 3E 49 04 07 7F 21 51 8A CC 8A 2E 84 04 BE 23  // .>I...!Q.......#
    8760: 87 81 FE 2C 87 74 10 2E 3B 0C 74 05 83 C6 03 EB  // ...,.t..;.t.....
    8770: F0 24 80 2E 0A 44 02 59 8A 3E 62 04 8B EC 89 46  // .$...D.Y.>b....F
    8780: 1A 89 5E 0E 89 4E 16 89 56 12 C3 84 18 23 84 2B  // ..^..N..V....#.+
    8790: 33 84 2A 32 2E 8E 1E 03 03 3C 04 7F 1B 50 52 BA  // 3.*2.....<...PR.
    87A0: CC 03 EC A8 01 5A 58 74 08 80 3E 63 04 D4 74 08  // .....ZXt..>c..t.
    87B0: C3 80 3E 63 04 B4 75 F8 3C 1C 73 F4 32 E4 8B E8  // ..>c..u.<.s.2...
    87C0: D1 E5 2E FF A6 5F 87 97 87 B7 87 C9 87 FE 87 48  // ....._.........H
    87D0: 87 48 87 48 87 23 88 3B 88 3F 88 48 87 48 87 48  // .H.H.#.;.?.H.H.H
    87E0: 87 48 87 48 87 48 87 6D 88 48 87 71 88 8C 88 48  // .H.H.H.m.H.q...H
    87F0: 87 CB 88 48 87 D9 88 F4 88 FB 88 07 89 2B 89 80  // ...H.........+..
    8800: 3E 49 04 13 74 15 E8 BF F4 8B C3 86 E0 E8 70 EF  // >I..t.........p.
    8810: 0B ED 74 07 8A C7 32 FF 26 88 01 E8 93 F4 C3 E8  // ..t...2.&.......
    8820: A6 F4 8A C7 E8 44 FC 0B ED 74 F0 26 88 7D 11 EB  // .....D...t.&.}..
    8830: EA 80 3E 49 04 13 74 E3 06 E8 8C F4 1F 0B ED 74  // ..>I..t........t
    8840: 07 8B F2 B9 11 00 F3 A4 8B F2 E8 DE 01 32 E4 B9  // .............2..
    8850: 10 00 B2 C0 9C FA 8A C4 EE AC EE 9D FE C4 E2 F4  // ................
    8860: AC E8 07 FC EB B5 80 FB 01 77 B0 E8 43 F4 B2 C0  // .........w..C...
    8870: B0 30 E8 FB F0 24 F7 80 26 65 04 DF 80 FB 00 74  // .0...$..&e.....t
    8880: 07 0C 08 80 0E 65 04 20 EE EB 90 E8 9D 01 8A C3  // .....e. ........
    8890: B2 C0 E8 DB F0 8B C8 EE B0 20 EE 8B EC 88 4E 0F  // ......... ....N.
    88A0: E9 78 FF B3 11 EB E4 8B FA E8 05 F4 B9 10 00 32  // .x.............2
    88B0: E4 B2 C0 8A C4 9C FA EE 42 EC 26 88 05 FE C4 4A  // ........B.&....J
    88C0: EE 9D 47 E2 EE 9C FA B0 11 EE 42 EC 9D 26 88 05  // ..G.......B..&..
    88D0: E8 E3 F3 EB 5A E8 CE 00 C3 8B FA 51 8B C3 26 8A  // ....Z......Q..&.
    88E0: 35 26 8A 6D 01 26 8A 4D 02 E8 CA 00 83 C7 03 43  // 5&.m.&.M.......C
    88F0: 59 E2 E8 C3 0A DB 75 1A E8 B6 F3 B2 C0 B0 30 E8  // Y.....u.......0.
    8900: 6E F0 24 7F F6 C7 01 74 02 0C 80 B4 30 E8 70 EE  // n.$....t....0.p.
    8910: EB 1D FE CB 75 1C E8 98 F3 B2 C0 B0 30 E8 50 F0  // ....u.......0.P.
    8920: EE A8 80 75 03 C0 E7 02 B4 34 8A C7 E8 51 EE E8  // ...u.....4...Q..
    8930: 7F F3 C3 8A C3 E8 D1 00 8B EC 89 4E 16 88 76 13  // ...........N..v.
    8940: C3 8B FA 51 8B C3 E8 C3 00 26 88 35 26 88 6D 01  // ...Q.....&.5&.m.
    8950: 26 88 4D 02 83 C7 03 43 59 E2 E8 C3 BA C6 03 8A  // &.M....CY.......
    8960: C3 EE C3 BA C6 03 EC 32 E4 8B EC 89 46 0E C3 E8  // .......2....F...
    8970: 3F F3 B2 C0 B0 34 E8 F7 EF 8A F8 EE B0 30 E8 EF  // ?....4.......0..
    8980: EF B3 01 A8 80 75 05 B3 00 C0 EF 02 8B EC 89 5E  // .....u.........^
    8990: 0E EB 9C 51 8B C3 E8 73 00 E8 2A 00 8A C3 E8 52  // ...Q...s..*....R
    89A0: 00 43 59 E2 EE C3 F6 06 89 04 02 74 03 E8 16 00  // .CY........t....
    89B0: 8A C3 E8 39 00 C3 F6 06 89 04 02 74 03 E8 06 00  // ...9.......t....
    89C0: 8A C3 E8 2E 00 C3 50 B0 1E F6 E6 50 B0 3B F6 E5  // ......P....P.;..
    89D0: 50 B0 0B F6 E1 59 03 C1 59 03 C1 B1 64 F6 F1 80  // P....Y..Y...d...
    89E0: FC 32 7C 02 FE C0 8A F0 8A E8 8A C8 58 C3 52 E8  // .2|.........X.R.
    89F0: 39 00 5A 53 8B DA BA C8 03 9C FA EE 42 8A C7 EE  // 9.ZS........B...
    8A00: 8A C5 EE 8A C1 EE 9D 5B C3 E8 1F 00 53 9C FA BA  // .......[....S...
    8A10: C7 03 EE 42 42 EC 8A F8 EB 00 EB 00 EC 8A E8 EB  // ...BB...........
    8A20: 00 EB 00 EC 8A C8 8A F7 9D 5B C3 50 51 E8 81 F2  // .........[.PQ...
    8A30: B9 FF 7F EC A8 08 75 02 E2 F9 59 58 C3 2E 8E 1E  // ......u...YX....
    8A40: 03 03 8B F8 24 0F 81 E7 F0 00 C1 EF 03 83 FF 06  // ....$...........
    8A50: 7F 18 2E FF A5 EF 89 F7 89 0C 8A AA 8A 06 8B 3C  // ...............<
    8A60: 03 74 08 3C 04 7F 03 E8 CF 01 C3 BA C4 03 B0 03  // .t.<............
    8A70: 8A E3 EF C3 3C 04 77 F2 50 53 50 52 8B 16 63 04  // ....<.w.PSPR..c.
    8A80: B0 07 E8 EB EE 8A E0 D0 EC 80 E4 01 A8 40 74 03  // .............@t.
    8A90: 80 CC 02 B0 12 E8 D8 EE 40 A3 85 04 B0 09 E8 CF  // ........@.......
    8AA0: EE A8 80 74 04 D1 2E 85 04 A1 85 04 8B D0 3D F4  // ...t..........=.
    8AB0: 01 73 1B BA E0 01 3D C2 01 73 13 BA 90 01 3D 7C  // .s....=..s....=|
    8AC0: 01 73 0B BA 5E 01 3D 4A 01 73 03 BA C8 00 89 16  // .s..^.=J.s......
    8AD0: 85 04 5A 58 C6 06 84 04 FF E8 5D 01 5B 58 8A DF  // ..ZX......].[X..
    8AE0: 32 FF 0A C0 74 0E B3 0E 3C 01 74 08 B3 08 3C 02  // 2...t...<.t...<.
    8AF0: 74 02 B3 10 8A CB 8A E9 81 E9 01 02 80 F9 08 7E  // t..............~
    8B00: 04 81 E9 01 01 87 1E 85 04 53 E8 5B F2 5B E8 85  // .........S.[.[..
    8B10: 02 C3 0A C0 74 11 FE C8 74 1A FE C8 74 38 FE C8  // ....t...t...t8..
    8B20: 74 3C FE C8 74 40 C3 89 2E 7C 00 8C 06 7E 00 C3  // t<..t@...|...~..
    8B30: 8C C8 8E C0 FE CA 0A DB 74 07 32 FF 2E 8A 97 EA  // ........t.2.....
    8B40: 8A 89 0E 85 04 88 16 84 04 89 2E 0C 01 8C 06 0E  // ................
    8B50: 01 C3 00 0D 18 2A E8 09 03 B9 0E 00 EB D6 BD FA  // .....*..........
    8B60: 59 B9 08 00 EB CA BD 0D 62 B9 10 00 EB C2 0A C0  // Y.......b.......
    8B70: 75 BD 8B 0E 85 04 8A 16 84 04 80 FF 07 77 35 80  // u............w5.
    8B80: FF 01 77 10 0A FF 75 06 C4 2E 7C 00 EB 26 C4 2E  // ..w...u...|..&..
    8B90: 0C 01 EB 20 80 FF 02 75 0B 8C CD 8E C5 2E 8B 2E  // ... ...u........
    8BA0: EC 72 EB 10 0E 07 8A DF 32 FF 80 EB 02 D1 E3 2E  // .r......2.......
    8BB0: 8B AF 5D 8B 8B C5 8B EC 89 4E 16 89 56 12 89 46  // ..]......N..V..F
    8BC0: 0A 8C 46 1E C3 0D 62 FA 59 FA 5D FA 61 0D 62 0D  // ..F...b.Y.].a.b.
    8BD0: 72 53 06 8A 26 49 04 E8 CD C3 26 8A 47 02 26 8A  // rS..&I....&.G.&.
    8BE0: 67 33 F6 C4 01 74 22 BD 0D 62 3C 10 7D 0E E8 71  // g3...t"..b<.}..q
    8BF0: 02 8C 06 0E 01 3C 0E 7D 07 BD FA 59 8C 0E 0E 01  // .....<.}...Y....
    8C00: 89 2E 0C 01 E8 10 01 EB 2D B4 84 3C 10 7D 13 B4  // ........-..<.}..
    8C10: 81 3C 0E 74 0D 7F 15 B4 02 3C 08 74 05 80 CC 80  // .<.t.....<.t....
    8C20: EB 0A 26 F6 47 05 01 74 03 80 E4 7F 86 C4 32 DB  // ..&.G..t......2.
    8C30: E8 06 00 E8 C9 01 07 5B C3 8B F8 8B F2 BA CE 03  // .......[........
    8C40: EC B8 05 00 EF B8 06 04 EF B2 C4 EC B8 02 04 EF  // ................
    8C50: B8 04 07 EF 8B D6 8B C7 50 24 7F 0A C0 74 22 0E  // ........P$...t".
    8C60: 07 33 D2 B9 00 01 3C 04 75 07 B7 10 BD 0D 62 EB  // .3....<.u.....b.
    8C70: 10 FE C8 75 07 B7 0E E8 E8 01 EB 05 B7 08 BD FA  // ...u............
    8C80: 59 E8 2D 00 58 A8 80 74 00 BA C4 03 B8 02 03 EF  // Y.-.X..t........
    8C90: B8 04 02 EF B2 CC EC A8 01 B8 06 0E 75 02 B4 0A  // ............u...
    8CA0: B2 CE 50 EC 58 EF B0 04 EE 32 C0 EE B8 05 10 EF  // ..P.X....2......
    8CB0: C3 FC 0B C9 75 01 C3 80 FF 0E 75 0A 26 83 7E FE  // ....u.....u.&.~.
    8CC0: 10 75 03 80 CD 80 1E 06 1F 2E 8E 06 05 03 8B FA  // .u..............
    8CD0: C1 E7 05 B0 40 53 80 E3 03 F6 E3 5B F6 C3 04 74  // ....@S.....[...t
    8CE0: 02 04 20 86 E0 8B D0 03 FA 8B F5 E3 28 32 C0 86  // .. .........(2..
    8CF0: FB 32 FF 51 F6 C5 80 74 01 46 8B CB F3 A4 83 FB  // .2.Q...t.F......
    8D00: 20 74 07 B9 20 00 2B CB F3 AA 59 F6 C5 80 74 01  //  t.. .+...Y...t.
    8D10: 46 FE C9 75 DE 1F C3 8A 26 49 04 50 06 57 C4 3E  // F..u....&I.P.W.>
    8D20: A8 04 26 C4 7D 0C 8C C5 0B EF 74 30 8B EF 83 C7  // ..&.}.....t0....
    8D30: 07 26 8A 05 3C FF 74 24 38 E0 74 03 47 EB F2 8B  // .&..<.t$8.t.G...
    8D40: FD 26 8A 05 FE C8 A2 84 04 26 8B 45 01 A3 85 04  // .&.......&.E....
    8D50: 26 C4 7D 03 89 3E 0C 01 8C 06 0E 01 5F 07 58 C3  // &.}..>......_.X.
    8D60: 26 F6 47 33 01 74 01 C3 C4 1E A8 04 26 C4 5F 08  // &.G3.t......&._.
    8D70: 8C C0 0B C3 74 1F BF 0B 00 26 8A 01 3C FF 74 15  // ....t....&..<.t.
    8D80: 47 38 06 49 04 75 F2 26 8A 07 32 E4 87 06 85 04  // G8.I.u.&..2.....
    8D90: 8B D8 E8 01 00 C3 8B 16 63 04 8A 26 85 04 FE CC  // ........c..&....
    8DA0: 80 E4 1F 9C FA 80 FA D4 74 0B B0 14 EE 42 EC 24  // ........t....B.$
    8DB0: E0 0A C4 EE 4A B0 09 EE 42 EC 24 E0 0A C4 EE 9D  // ....J...B.$.....
    8DC0: 8A C8 8B C3 8A 16 85 04 F6 F2 80 3E 84 04 FF 75  // ...........>...u
    8DD0: 07 A2 84 04 FE 0E 84 04 F6 E2 F6 C1 80 74 02 D1  // .............t..
    8DE0: E0 48 8A E0 B0 12 8B 16 63 04 EF A0 4A 04 8A 26  // .H......c...J..&
    8DF0: 84 04 FE C4 F6 E4 D1 E0 05 00 01 A3 4C 04 C3 8A  // ............L...
    8E00: 26 49 04 50 06 57 C4 3E A8 04 26 C4 7D 08 8C C5  // &I.P.W.>..&.}...
    8E10: 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05 3C FF 74 3E  // ..tJ.....&..<.t>
    8E20: 38 E0 74 03 47 EB F2 8B FD 26 8A 3D 26 8A 5D 01  // 8.t.G....&.=&.].
    8E30: 26 8B 4D 02 26 8B 55 04 26 8A 45 0A 3C FF 74 02  // &.M.&.U.&.E.<.t.
    8E40: FE C8 50 A0 84 04 FE C0 F6 26 85 04 A3 85 04 58  // ..P......&.....X
    8E50: A2 84 04 26 C4 7D 06 8B EF 32 C0 E8 DB FD 5F 07  // ...&.}...2...._.
    8E60: 58 C3 50 53 51 52 2E A1 0D 03 0B C0 74 09 2E 8B  // X.PSQR......t...
    8E70: 2E EC 72 0E 07 EB 08 B8 30 11 B7 02 E8 C1 BE 5A  // ..r.....0......Z
    8E80: 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53 2E 8E 1E 03  // Y[X.<.|....S....
    8E90: 03 86 FB 32 FF D1 E3 8B FB 81 C7 50 04 8B 35 5B  // ...2.......P..5[
    8EA0: 89 15 56 8B F0 51 53 26 8A 46 00 45 3C 0D 7F 1F  // ..V..QS&.F.E<...
    8EB0: 75 04 32 D2 EB 40 3C 0A 74 32 3C 07 75 05 E8 AD  // u.2..@<.t2<.u...
    8EC0: 76 EB 62 3C 08 75 08 0A D2 74 5A FE CA EB 27 F7  // v.b<.u...tZ...'.
    8ED0: C6 02 00 74 05 26 8A 5E 00 45 B9 01 00 B4 09 E8  // ...t.&.^.E......
    8EE0: 5E BE FE C2 3A 16 4A 04 72 0C 32 D2 89 15 3A 36  // ^...:.J.r.2...:6
    8EF0: 84 04 73 06 FE C6 89 15 EB 2B 50 E8 AD EA 75 08  // ..s......+P...u.
    8F00: B8 00 08 E8 3A BE EB 09 80 3E 49 04 07 74 F1 32  // ....:....>I..t.2
    8F10: E4 86 3E 62 04 53 8A FC 55 E8 25 00 5D 5B 86 3E  // ..>b.S..U.%.][.>
    8F20: 62 04 58 8B 15 5B 59 E2 15 5A F7 C6 01 00 75 02  // b.X..[Y..Z....u.
    8F30: 89 15 8B 05 3A 3E 62 04 75 03 E8 34 ED C3 E9 64  // ....:>b.u..4...d
    8F40: FF 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B8 01 06  // .3..6....J......
    8F50: E8 ED BD C3 2E 8E 1E 03 03 0A C0 75 0D E8 18 00  // ...........u....
    8F60: 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01 75 09 E8 41  // ...^..F...<.u..A
    8F70: 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF EA 8F 2E 3A  // ....F..........:
    8F80: 05 72 04 BB FF FF C3 32 E4 D1 E0 03 F8 2E 8B 5D  // .r.....2.......]
    8F90: 04 0A DB 74 05 0A FF 75 04 C3 86 FB C3 A0 10 04  // ...t...u........
    8FA0: 24 30 3C 30 74 06 F6 C3 01 75 EF C3 F6 C3 01 74  // $0<0t....u.....t
    8FB0: E9 C3 BF EA 8F 2E 8A 0D 32 C0 83 C7 04 2E 3B 1D  // ........2.....;.
    8FC0: 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02 FE C0 38 C8  // t....;.t......8.
    8FD0: 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6 06 89 04 02  // ~...............
    8FE0: 74 0E BB 07 00 BA CC 03 EC A8 01 74 18 BB 08 00  // t..........t....
    8FF0: BA B4 03 E8 DF EC 74 21 B7 01 E8 8C E9 80 FA D4  // ......t!........
    9000: 74 17 86 FB C3 BA D4 03 E8 CA EC 74 0C B7 02 E8  // t..........t....
    9010: 77 E9 80 FA B4 74 02 86 FB C3 0F 08 0F 08 0F 08  // w....t..........
    9020: 0F 08 03 01 03 01 01 01 00 08 01 01 01 01 01 01  // ................
    9030: 01 01 0F 01 0F 08 0F 04 00 02 0F 02 01 01 0F 01  // ................
    9040: FF 01 FF E0 0F 00 00 00 00 07 02 08 FF 0E 00 00  // ................
    9050: 3F 00 10 01 08 00 00 00 00 01 00 02 02 01 00 04  // ?...............
    9060: 04 01 00 05 02 05 00 06 01 06 05 06 00 08 01 08  // ................
    9070: 00 07 02 07 06 07 CA 00 34 00 90 00 96 00 00 00  // ........4.......
    9080: 00 00 00 00 5F 57 C3 90 50 66 52 E8 F4 FF FF FF  // ...._W..PfR.....
    9090: 81 EF 10 00 00 00 2E 8B 07 66 BA F8 0C EF 66 BA  // .........f....f.
    90A0: FC 0C ED 32 C0 66 8B F8 66 5A 58 C3 66 B8 4F 03  // ...2.f..fZX.f.O.
    90B0: 66 52 66 56 53 57 50 0A FF 75 44 E8 C8 FF FF FF  // fRfVSWP..uD.....
    90C0: 66 33 F6 66 BB 53 00 E8 48 00 00 00 C1 E8 10 F6  // f3.f.S..H.......
    90D0: C4 40 75 2B 66 81 E2 FF 02 66 D1 E2 66 8B C2 66  // .@u+f....f..f..f
    90E0: 40 C1 E0 10 66 8B C2 66 BB 13 00 E8 30 00 00 00  // @...f..f....0...
    90F0: 66 BB 12 00 E8 27 00 00 00 66 58 32 E4 66 50 58  // f....'...fX2.fPX
    9100: 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03 C3 90 66 B8  // _[f^fZ..f.O...f.
    9110: 4F 03 C3 90 66 52 E8 11 00 00 00 ED 66 5A C3 90  // O...fR......fZ..
    9120: 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B D7 50  // fR......fZ..f..P
    9130: 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83 C2 04  // 3.f..f......f...
    9140: 58 C3 EC 38 DF 38 DF 38 DF 38 CA 38 CA 38 CA 38  // X..8.8.8.8.8.8.8
    9150: CA 38 0C 35 83 35 AD 35 EE 36 ED 36 ED 36 33 37  // .8.5.5.5.6.6.637
    9160: 98 37 C8 37 85 38 AE 38 AE 38 25 37 18 37 18 37  // .7.7.8.8.8%7.7.7
    9170: 18 37 18 37 18 37 33 37 98 37 C8 37 85 38 B3 38  // .7.7.737.7.7.8.8
    9180: F9 38 AE 38 AE 38 FF FF FF FF FF FF 00 00 FF FF  // .8.8.8..........
    9190: 00 00 FF FF 00 00 FF 00 00 00 FF 00 00 00 FF 00  // ................
    91A0: 00 00 FF 00 00 00 00 00 08 10 00 08 10 18 00 08  // ................
    91B0: 10 18 10 33 01 10 33 02 1E 47 03 FE 46 03 35 34  // ...3..3..G..F.54
    91C0: 03 E9 33 03 11 33 04 2A 33 04 3A 33 04 10 33 03  // ..3..3.*3.:3..3.
    91D0: 00 00 00 00 BD 3A 00 02 BD 3A 01 02 BD 3A 02 02  // .....:...:...:..
    91E0: BD 3A 03 02 BD 3A 04 02 BD 3A 05 02 B7 3C 00 02  // .:...:...:...<..
    91F0: B7 3C 01 02 B7 3C 02 02 B7 3C 03 02 B7 3C 04 02  // .<...<...<...<..
    9200: B7 3C 05 02 EC 3C 00 02 EC 3C 01 02 EC 3C 02 02  // .<...<...<...<..
    9210: EC 3C 03 02 EC 3C 04 02 EC 3C 05 02 27 3F 00 02  // .<...<...<..'?..
    9220: 27 3F 01 02 27 3F 02 02 27 3F 03 02 27 3F 04 02  // '?..'?..'?..'?..
    9230: 27 3F 05 02 27 3F 00 02 27 3F 01 02 27 3F 02 02  // '?..'?..'?..'?..
    9240: 27 3F 03 02 27 3F 04 02 27 3F 05 02 EE 3D 00 02  // '?..'?..'?...=..
    9250: EE 3D 01 02 EE 3D 02 02 EE 3D 03 02 EE 3D 04 02  // .=...=...=...=..
    9260: EE 3D 05 02 2A 3E 00 02 2A 3E 01 02 2A 3E 02 02  // .=..*>..*>..*>..
    9270: 2A 3E 03 02 2A 3E 04 02 2A 3E 05 02 9B 3D 00 02  // *>..*>..*>...=..
    9280: 9B 3D 01 02 9B 3D 02 02 9B 3D 03 02 9B 3D 04 02  // .=...=...=...=..
    9290: 9B 3D 05 02 CF 3D 00 02 CF 3D 01 02 CF 3D 02 02  // .=...=...=...=..
    92A0: CF 3D 03 02 CF 3D 04 02 CF 3D 05 02 7F 41 00 00  // .=...=...=...A..
    92B0: B2 41 01 00 B2 41 02 00 9F 41 00 00 8D 40 00 02  // .A...A...A...@..
    92C0: 86 3E 00 02 86 3E 01 02 86 3E 02 02 86 3E 03 02  // .>...>...>...>..
    92D0: 86 3E 04 02 86 3E 05 02 A5 40 00 02 FA 42 05 00  // .>...>...@...B..
    92E0: FA 42 01 00 FA 42 00 00 FA 42 02 00 3B 43 00 00  // .B...B...B..;C..
    92F0: 3B 43 02 00 80 43 00 00 10 40 00 02 10 40 01 02  // ;C...C...@...@..
    9300: 10 40 02 02 10 40 03 02 10 40 04 02 10 40 05 02  // .@...@...@...@..
    9310: CC 41 00 00 F4 41 00 00 75 42 00 00 F0 42 00 00  // .A...A..uB...B..
    9320: D4 3E 00 02 D4 3E 01 02 D4 3E 02 02 D4 3E 03 02  // .>...>...>...>..
    9330: D4 3E 04 02 D4 3E 05 02 EF 42 00 01 EF 42 00 01  // .>...>...B...B..
    9340: F3 3B 00 02 F3 3B 01 02 F3 3B 02 02 F3 3B 03 02  // .;...;...;...;..
    9350: F3 3B 04 02 F3 3B 05 02 14 42 00 00 F0 42 00 00  // .;...;...B...B..
    9360: F0 42 00 00 F0 42 00 00 25 41 00 00 17 3D 00 02  // .B...B..%A...=..
    9370: 17 3D 01 02 17 3D 02 02 17 3D 03 02 17 3D 04 02  // .=...=...=...=..
    9380: 17 3D 05 02 46 3D 00 02 46 3D 01 02 46 3D 02 02  // .=..F=..F=..F=..
    9390: 46 3D 03 02 46 3D 04 02 46 3D 05 02 7C 3D 00 02  // F=..F=..F=..|=..
    93A0: 7C 3D 01 02 7C 3D 02 02 7C 3D 03 02 7C 3D 04 02  // |=..|=..|=..|=..
    93B0: 7C 3D 05 02 37 42 00 00 5A 42 00 00 18 3E 01 02  // |=..7B..ZB...>..
    93C0: 18 3E 02 02 74 3E 01 02 74 3E 02 02 A6 00 02 01  // .>..t>..t>......
    93D0: 08 A4 00 00 00 00 00 00 64 C3 00 00 76 A4 00 00  // ........d...v...
    93E0: 00 00 C0 AD 00 00 00 00 8A AE A8 B3 00 00 00 00  // ................
    93F0: 00 00 00 00 00 00 C2 A4 7C B6 16 A5 68 A5 12 AD  // ........|...h...
    9400: 8E AD A6 AD 52 A4 00 00 00 00 00 00 00 00 00 00  // ....R...........
    9410: 00 00 0C B7 7E B7 BE B7 00 00 02 B8 00 00 72 BB  // ....~.........r.
    9420: 00 00 D2 B8 AC BA 3E BC 90 BD D2 BD 12 D0 00 00  // ......>.........
    9430: 00 00 EA BD B0 BF 12 CE 00 00 46 CF BA BF 00 00  // ..........F.....
    9440: DC C1 00 00 00 00 00 00 22 C2 5C C3 00 00 00 00  // ........".\.....
    9450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9460: 00 00 00 00 00 00 20 D2 A0 C6 E6 C7 72 CB B6 CD  // ...... .....r...
    9470: 00 00 4A 00 02 01 00 00 00 00 00 00 54 94 1C 95  // ..J.........T...
    9480: 64 95 68 98 A8 A2 C0 A3 00 00 00 00 C4 98 D0 9C  // d.h.............
    9490: 34 9D DC A3 A8 9D 00 00 A8 A1 00 00 00 00 00 00  // 4...............
    94A0: 00 00 BC A1 6A A2 00 00 00 00 00 00 70 A2 00 00  // ....j.......p...
    94B0: 00 00 D0 98 00 00 00 00 00 00 00 00 C8 00 02 01  // ................
    94C0: D6 09 80 02 A0 00 E0 01 2D 00 10 00 60 00 0A 00  // ........-...`...
    94D0: 02 00 00 00 00 00 08 08 06 00 12 3C A0 0F 20 03  // ...........<.. .
    94E0: 00 01 58 02 1C 00 28 00 80 00 01 00 04 00 00 00  // ..X...(.........
    94F0: 00 00 00 00 00 00 6A 3C 64 19 00 04 40 01 00 03  // ......j<d...@...
    9500: 26 00 18 00 88 00 03 00 06 00 00 00 00 00 00 00  // &...............
    9510: 06 00 55 3C 30 2A 00 05 08 02 C0 03 28 00 60 00  // ..U<0*......(.`.
    9520: 70 00 01 00 03 00 00 00 00 00 00 00 00 00 E9 3C  // p..............<
    9530: 30 2A 00 05 98 01 00 04 2A 00 30 00 70 00 01 00  // 0*......*.0.p...
    9540: 03 00 00 00 00 00 00 00 00 00 EA 3C 8F 2F 78 05  // ...........<./x.
    9550: D0 01 1A 04 27 00 58 00 90 00 03 00 04 00 00 00  // ....'.X.........
    9560: 00 00 00 00 02 00 EB 3C 48 3F 40 06 30 02 B0 04  // .......<H?@.0...
    9570: 32 00 40 00 C0 00 01 00 03 00 00 00 00 00 00 00  // 2.@.............
    9580: 00 00 EC 3C 48 00 03 01 0A 00 02 10 20 4E 00 00  // ...<H....... N..
    9590: 20 4E 00 00 01 00 00 00 C2 2C 00 00 4C 00 00 00  //  N.......,..L...
    95A0: 00 00 00 00 00 00 00 00 00 00 00 00 F4 00 00 00  // ................
    95B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    95C0: 00 00 00 00 00 00 00 00 00 00 00 00 04 03 02 01  // ................
    95D0: 00 00 00 00 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A  // .....*.*..***..*
    95E0: 00 2A 2A 15 00 2A 2A 2A 15 15 15 15 15 3F 15 3F  // .**..***.....?.?
    95F0: 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F  // ..???..?.???.???
    9600: 00 00 00 05 05 05 08 08 08 0B 0B 0B 0E 0E 0E 11  // ................
    9610: 11 11 14 14 14 18 18 18 1C 1C 1C 20 20 20 24 24  // ...........   $$
    9620: 24 28 28 28 2D 2D 2D 32 32 32 38 38 38 3F 3F 3F  // $(((---222888???
    9630: 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00 3F 3F  // ..?..?..?/.??.??
    9640: 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F 10 00 3F 1F  // ./?..?..?..?..?.
    9650: 00 3F 2F 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00  // .?/.??./?..?..?.
    9660: 00 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00  // .?..?..?..?/.??.
    9670: 2F 3F 00 1F 3F 00 10 3F 1F 1F 3F 27 1F 3F 2F 1F  // /?..?..?..?'.?/.
    9680: 3F 37 1F 3F 3F 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27  // ?7.??.??.7?./?.'
    9690: 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37  // ?..?'.?/.?7.??.7
    96A0: 3F 1F 2F 3F 1F 27 3F 1F 1F 3F 1F 1F 3F 27 1F 3F  // ?./?.'?..?..?'.?
    96B0: 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F  // /.?7.??.7?./?.'?
    96C0: 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3F 3F  // --?1-?6-?:-??-??
    96D0: 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F 31 2D 3F 36  // -:?-6?-1?--?1-?6
    96E0: 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D  // -?:-??-:?-6?-1?-
    96F0: 2D 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D  // -?--?1-?6-?:-??-
    9700: 3A 3F 2D 36 3F 2D 31 3F 00 00 1C 07 00 1C 0E 00  // :?-6?-1?........
    9710: 1C 15 00 1C 1C 00 1C 1C 00 15 1C 00 0E 1C 00 07  // ................
    9720: 1C 00 00 1C 07 00 1C 0E 00 1C 15 00 1C 1C 00 15  // ................
    9730: 1C 00 0E 1C 00 07 1C 00 00 1C 00 00 1C 07 00 1C  // ................
    9740: 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C  // ................
    9750: 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 1C 1C  // ................
    9760: 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C 11 0E 1C 15  // ................
    9770: 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E  // ................
    9780: 0E 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E  // ................
    9790: 18 1C 0E 15 1C 0E 11 1C 14 14 1C 16 14 1C 18 14  // ................
    97A0: 1C 1A 14 1C 1C 14 1C 1C 14 1A 1C 14 18 1C 14 16  // ................
    97B0: 1C 14 14 1C 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A  // ................
    97C0: 1C 14 18 1C 14 16 1C 14 14 1C 14 14 1C 16 14 1C  // ................
    97D0: 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C  // ................
    97E0: 00 00 10 04 00 10 08 00 10 0C 00 10 10 00 10 10  // ................
    97F0: 00 0C 10 00 08 10 00 04 10 00 00 10 04 00 10 08  // ................
    9800: 00 10 0C 00 10 10 00 0C 10 00 08 10 00 04 10 00  // ................
    9810: 00 10 00 00 10 04 00 10 08 00 10 0C 00 10 10 00  // ................
    9820: 0C 10 00 08 10 00 04 10 08 08 10 0A 08 10 0C 08  // ................
    9830: 10 0E 08 10 10 08 10 10 08 0E 10 08 0C 10 08 0A  // ................
    9840: 10 08 08 10 0A 08 10 0C 08 10 0E 08 10 10 08 0E  // ................
    9850: 10 08 0C 10 08 0A 10 08 08 10 08 08 10 0A 08 10  // ................
    9860: 0C 08 10 0E 08 10 10 08 0E 10 08 0C 10 08 0A 10  // ................
    9870: 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 10 10  // ................
    9880: 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10 0C 0B 10 0D  // ................
    9890: 0B 10 0F 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B  // ................
    98A0: 0B 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B  // ................
    98B0: 0F 10 0B 0D 10 0B 0C 10 00 00 00 00 00 00 00 00  // ................
    98C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    98D0: 5C 00 02 01 2E 36 80 07 A0 00 38 04 1F 00 30 00  // \....6....8...0.
    98E0: 20 00 03 00 05 00 58 01 C2 00 00 00 04 00 00 3C  //  .....X........<
    98F0: C8 00 00 00 00 00 34 21 00 00 B8 0B 00 00 00 00  // ......4!........
    9900: 7D 00 00 01 0B 0A 82 01 00 FF FF 00 00 00 00 00  // }...............
    9910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9920: 00 00 00 00 00 00 00 00 00 00 00 00 0C 00 02 01  // ................
    9930: 00 00 00 00 00 00 00 00 00 04 01 0B 00 00 00 00  // ................
    9940: 00 00 00 00 00 00 00 00 00 00 00 00 77 01 00 00  // ............w...
    9950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9960: C8 00 1A 01 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9970: 8C 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9980: 00 00 00 00 08 00 10 02 0C 31 00 00 00 00 E4 00  // .........1......
    9990: 08 00 00 00 02 00 10 01 14 31 01 01 00 00 E4 00  // .........1......
    99A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A20: 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF  // ................
    9A30: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A40: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A50: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 FF FF  // ................
    9A60: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A70: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A80: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF  // ................
    9B90: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BA0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BB0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BC0: 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF  // ................
    9BD0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BF0: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 FF FF  // ................
    9C00: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C10: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C20: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D30: 00 00 00 00 00 00 00 00 64 00 02 01 B5 5D 00 00  // ........d....]..
    9D40: 00 00 01 00 B5 5D 00 00 08 08 02 00 B5 5D 00 00  // .....].......]..
    9D50: 10 10 03 00 B5 5D 00 00 18 14 04 00 B5 5D 00 00  // .....].......]..
    9D60: 1A 18 05 00 B5 5D 00 00 1C 1C 06 00 91 5D 00 00  // .....].......]..
    9D70: 08 08 90 00 95 5D 00 00 08 08 91 00 99 5D 00 00  // .....].......]..
    9D80: 08 08 92 00 9D 5D 00 00 08 08 93 00 A1 5D 00 00  // .....].......]..
    9D90: 08 08 94 00 A5 5D 00 00 08 08 95 00 74 00 01 01  // .....]......t...
    9DA0: 10 01 06 12 11 01 16 12 13 01 06 6A 14 01 16 6A  // ...........j...j
    9DB0: 16 01 06 55 17 01 16 55 19 01 06 EA 1A 01 16 EA  // ...U...U........
    9DC0: 65 01 16 E9 66 01 0A E9 21 01 0A 12 22 01 0A 6A  // e...f...!..."..j
    9DD0: 23 01 0A 55 24 01 0A EA 45 01 16 EB 46 01 0A EB  // #..U$...E...F...
    9DE0: 75 01 16 EC 76 01 0A EC D2 01 16 70 D4 01 0A 70  // u...v......p...p
    9DF0: D8 01 16 71 D9 01 0A 71 E2 01 16 72 E4 01 0A 72  // ...q...q...r...r
    9E00: E8 01 16 73 E9 01 0A 73 F5 01 16 74 F6 01 0A 74  // ...s...s...t...t
    9E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A210: 14 00 02 01 02 00 08 00 80 00 00 02 00 04 FF FF  // ................
    A220: 40 00 FF FF AD 00 01 04 0A 00 05 00 0C 31 58 00  // @............1X.
    A230: 1E 21 00 00 7C 00 00 00 08 00 00 00 14 31 61 00  // .!..|........1a.
    A240: 1E 22 00 00 83 00 00 00 02 00 00 00 00 00 6A 00  // ."............j.
    A250: 20 21 00 00 8A 00 00 00 00 00 00 00 00 00 73 00  //  !............s.
    A260: 20 22 00 00 91 00 00 00 00 00 00 00 03 71 98 00  //  "...........q..
    A270: 00 00 00 00 00 00 00 00 00 00 00 00 01 04 90 00  // ................
    A280: 02 04 01 00 FF 01 04 91 00 02 04 02 00 FF 01 04  // ................
    A290: 93 00 02 04 04 00 FF 01 04 91 00 02 04 02 00 FF  // ................
    A2A0: 14 06 0F 00 00 00 FF 14 06 0F 00 00 00 FF 14 06  // ................
    A2B0: 0F 00 00 00 FF 14 06 0F 00 00 00 FF 10 0A 01 02  // ................
    A2C0: 03 04 00 00 00 00 11 0A 90 91 92 93 00 00 00 00  // ................
    A2D0: FF 00 05 00 01 01 00 00 38 00 04 02 04 00 00 00  // ........8.......
    A2E0: 60 EA 00 00 C0 12 60 09 00 00 00 00 00 00 00 00  // `.....`.........
    A2F0: 7C 01 4E 0C 01 01 00 00 55 00 00 00 C0 12 00 00  // |.N.....U.......
    A300: 00 01 04 01 00 04 04 00 00 00 00 00 00 00 00 00  // ................
    A310: 18 01 03 02 0A 00 34 00 04 01 0C 00 FF FF FF 00  // ......4.........
    A320: 02 0F 00 00 00 5F 00 08 40 9C 00 00 03 0F 00 00  // ....._..@.......
    A330: 00 5F 00 08 FF FF FF 00 03 0F 00 00 2A 57 20 10  // ._..........*W .
    A340: 00 00 00 00 0F 00 05 00 CE 00 00 4B 00 00 80 01  // ...........K....
    A350: 3A 00 00 80 02 1B 00 00 80 03 00 00 00 80 08 34  // :..............4
    A360: 25 00 80 09 1C 25 00 80 0A 00 1B 00 9F 10 14 3F  // %....%.........?
    A370: 00 80 11 01 38 00 9F 18 00 4A 00 9F 00 4B 00 00  // ....8....J...K..
    A380: 80 01 3A 00 00 80 02 1B 00 00 80 03 00 00 00 80  // ..:.............
    A390: 08 34 25 00 80 09 1C 25 00 80 0A 00 1B 00 9F 10  // .4%....%........
    A3A0: 14 3F 00 80 11 01 38 00 9F 18 00 4A 00 9F 00 4B  // .?....8....J...K
    A3B0: 00 00 80 01 3A 00 00 80 02 1B 00 00 80 03 00 00  // ....:...........
    A3C0: 00 80 08 34 25 00 80 09 1C 25 00 80 0A 00 1B 00  // ...4%....%......
    A3D0: 9F 10 14 3F 00 80 11 01 38 00 9F 18 00 4A 00 9F  // ...?....8....J..
    A3E0: 00 4B 00 00 80 01 3A 00 00 80 02 1B 00 00 80 03  // .K....:.........
    A3F0: 00 00 00 80 08 34 25 00 80 09 1C 25 00 80 0A 00  // .....4%....%....
    A400: 1B 00 9F 10 14 3F 00 80 11 01 38 00 9F 18 00 4A  // .....?....8....J
    A410: 00 9F 00 00 00 01 02 03 01 00 01 02 03 01 00 01  // ................
    A420: 02 03 01 00 01 02 03 01 1C 00 03 01 00 0A 00 00  // ................
    A430: 00 00 00 00 77 01 35 0C 10 27 00 00 FF 00 FF 00  // ....w.5..'......
    A440: FF 00 00 00 2C 00 02 02 00 09 01 02 08 01 02 02  // ....,...........
    A450: 64 C0 00 00 65 C0 00 00 66 C0 00 00 67 C0 00 00  // d...e...f...g...
    A460: E8 C0 00 00 A0 21 00 00 42 EC 00 00 10 27 00 00  // .....!..B....'..
    A470: 4A 00 02 01 00 08 37 00 00 4B E5 00 04 49 43 00  // J.....7..K...IC.
    A480: 4A 05 53 00 00 02 00 00 49 42 00 52 1A 52 19 52  // J.S.....IB.R.R.R
    A490: 16 52 18 52 3D 02 05 02 00 02 00 00 52 0D 02 05  // .R.R=.......R...
    A4A0: 02 00 04 00 00 55 00 03 52 15 0D 05 53 00 00 02  // .....U..R...S...
    A4B0: 00 00 5B 52 16 52 18 52 3D 5B 24 00 01 01 00 00  // ..[R.R.R=[$.....
    A4C0: 37 00 00 03 00 41 E3 0D 33 05 41 01 00 00 00 1B  // 7....A..3.A.....
    A4D0: 05 41 0B 01 02 06 00 41 0D 25 1F 0E 03 5B 4B 00  // .A.....A.%...[K.
    A4E0: 01 01 00 00 37 00 00 42 21 00 63 00 1F 00 63 01  // ....7..B!.c...c.
    A4F0: 39 00 63 03 3F 00 63 02 45 00 5A 5A 5B 03 05 40  // 9.c.?.c.E.ZZ[..@
    A500: 00 00 05 04 2D 19 40 00 15 05 40 02 01 02 0C 00  // ....-.@...@.....
    A510: 40 02 00 00 0D 00 5B 02 00 00 E3 0D 5B 02 00 00  // @.....[.....[...
    A520: E7 0D 5B 02 00 00 E8 0D 5B 00 54 00 01 02 00 00  // ..[.....[.T.....
    A530: 37 00 00 01 05 00 00 9B 62 01 00 54 00 01 00 01  // 7.......b..T....
    A540: 05 00 00 93 62 01 00 01 01 01 00 01 56 00 41 03  // ....b.......V.A.
    A550: 09 41 00 01 05 00 00 83 62 01 00 01 02 01 00 41  // .A......b......A
    A560: 01 05 00 00 9B 62 01 00 3C 25 01 00 00 44 36 00  // .....b..<%...D6.
    A570: 01 05 00 00 93 62 01 00 02 00 01 01 00 5B 52 00  // .....b.......[R.
    A580: 02 01 08 08 37 00 00 3D 25 00 00 44 14 00 55 38  // ....7..=%..D..U8
    A590: 00 5B 01 05 00 00 61 60 01 00 3C E5 01 00 FF 44  // .[....a`..<....D
    A5A0: 10 00 4A E5 01 00 80 44 24 00 01 05 00 00 62 60  // ..J....D$.....b`
    A5B0: 01 00 01 01 01 00 01 56 00 40 03 A9 40 00 01 05  // .......V.@..@...
    A5C0: 00 00 61 60 01 00 01 02 01 00 40 02 E5 00 01 5B  // ..a`......@....[
    A5D0: A9 07 01 01 00 00 37 00 00 02 05 00 01 00 00 00  // ......7.........
    A5E0: 52 06 01 05 80 29 00 F4 00 00 01 05 00 00 2C A8  // R....)........,.
    A5F0: 01 00 01 05 01 00 00 F4 00 00 1A 05 00 04 2C 05  // ..............,.
    A600: 00 FF F3 00 00 01 01 81 29 00 01 05 00 00 2D A8  // ........).....-.
    A610: 01 00 01 01 01 00 00 01 05 85 29 00 00 3D 00 01  // ..........)..=..
    A620: 05 00 00 31 A8 01 00 01 05 01 00 00 00 3D 00 14  // ...1.........=..
    A630: 05 00 06 0E 0D 00 3F 00 2C 05 00 01 00 00 00 01  // ......?.,.......
    A640: 01 86 29 00 01 05 00 00 32 A8 01 00 01 01 01 00  // ..).....2.......
    A650: 00 01 05 50 28 EB 0F E4 60 01 05 00 00 90 A6 01  // ...P(...`.......
    A660: 00 01 05 01 00 EB 0F E4 60 01 05 6E 29 00 00 00  // ........`..n)...
    A670: 00 01 05 00 00 1A A8 01 00 01 05 01 00 00 00 00  // ................
    A680: 00 01 05 59 28 FF 21 10 00 01 05 00 00 99 A6 01  // ...Y(.!.........
    A690: 00 01 05 01 00 FF 21 10 00 01 05 5A 28 FF 25 10  // ......!....Z(.%.
    A6A0: 00 01 05 00 00 9A A6 01 00 01 05 01 00 FF 25 10  // ..............%.
    A6B0: 00 01 05 72 29 FF FF 0F 00 01 05 00 00 1E A8 01  // ...r)...........
    A6C0: 00 01 05 01 00 FF FF 0F 00 01 05 00 00 10 A8 01  // ................
    A6D0: 00 01 00 64 29 01 00 01 05 00 00 11 A8 01 00 01  // ...d)...........
    A6E0: 00 65 29 01 00 01 05 00 00 12 A8 01 00 01 00 66  // .e)............f
    A6F0: 29 01 00 01 05 00 00 13 A8 01 00 01 00 67 29 01  // )............g).
    A700: 00 01 05 00 00 14 A8 01 00 01 00 68 29 01 00 01  // ...........h)...
    A710: 05 00 00 15 A8 01 00 01 00 69 29 01 00 01 05 00  // .........i).....
    A720: 00 16 A8 01 00 01 00 6A 29 01 00 01 05 00 00 17  // .......j).......
    A730: A8 01 00 01 00 6B 29 01 00 03 00 40 01 00 01 02  // .....k)....@....
    A740: 74 29 40 01 05 00 00 20 A8 01 00 01 02 01 00 40  // t)@.... .......@
    A750: 03 00 41 81 29 33 00 41 80 29 2D 02 40 41 01 02  // ..A.)3.A.)-.@A..
    A760: 75 29 40 01 05 00 00 21 A8 01 00 01 02 01 00 40  // u)@....!.......@
    A770: 01 05 00 00 1F A8 01 00 01 00 73 29 01 00 01 05  // ..........s)....
    A780: ED 2A BF 3F 3F 00 01 05 F5 2A F0 BF E0 0D 01 05  // .*.??....*......
    A790: F4 2A 1F 00 00 00 01 05 14 27 01 00 00 00 01 05  // .*.......'......
    A7A0: 0C 27 CC CC 00 00 01 05 0F 2A 24 0F 00 00 01 05  // .'.......*$.....
    A7B0: EA 2A 00 F0 00 00 01 05 0A 2A 04 06 08 20 01 05  // .*.......*... ..
    A7C0: 0C 00 08 20 02 01 01 05 0D 00 01 00 00 00 66 FF  // ... ..........f.
    A7D0: 2D 0D 42 65 06 03 04 40 00 00 3E 05 40 00 00 00  // -.Be...@..>.@...
    A7E0: 00 44 28 02 01 04 00 00 00 00 01 04 01 00 04 00  // .D(.............
    A7F0: 2D 0D 42 08 00 43 05 02 01 05 17 74 11 01 03 00  // -.B..C.....t....
    A800: 03 00 40 26 74 01 05 17 74 15 01 03 00 03 00 41  // ..@&t...t......A
    A810: 26 74 4C 05 40 01 00 00 00 44 AE 02 4C 05 41 FF  // &tL.@....D..L.A.
    A820: 00 00 00 49 AE 02 4C 05 40 F0 00 00 00 44 87 02  // ...I..L.@....D..
    A830: 01 02 32 2A 40 01 02 33 2A 41 01 05 00 00 32 A1  // ..2*@..3*A....2.
    A840: 01 00 01 02 01 00 40 01 05 00 00 33 A1 01 00 01  // ......@....3....
    A850: 02 01 00 41 43 31 03 01 02 34 2A 40 01 02 35 2A  // ...AC1...4*@..5*
    A860: 41 01 05 00 00 34 A1 01 00 01 02 01 00 40 01 05  // A....4.......@..
    A870: 00 00 35 A1 01 00 01 02 01 00 41 43 31 03 01 05  // ..5.......AC1...
    A880: 17 74 19 01 03 00 03 00 40 26 74 01 05 17 74 1D  // .t......@&t...t.
    A890: 01 03 00 03 00 41 26 74 4C 05 40 01 00 00 00 44  // .....A&tL.@....D
    A8A0: 37 03 4C 05 41 FF 00 00 00 49 37 03 4C 05 40 F0  // 7.L.A....I7.L.@.
    A8B0: 00 00 00 44 0D 03 01 02 32 2A 40 01 02 33 2A 41  // ...D....2*@..3*A
    A8C0: 01 05 00 00 32 A1 01 00 01 02 01 00 40 01 05 00  // ....2.......@...
    A8D0: 00 33 A1 01 00 01 02 01 00 41 43 31 03 01 02 34  // .3.......AC1...4
    A8E0: 2A 40 01 02 35 2A 41 01 05 00 00 34 A1 01 00 01  // *@..5*A....4....
    A8F0: 02 01 00 40 01 05 00 00 35 A1 01 00 01 02 01 00  // ...@....5.......
    A900: 41 01 00 36 2A 6D 70 66 FF 2D 0D 42 7D 04 03 04  // A..6*mpf.-.B}...
    A910: 40 00 00 3E 05 40 00 00 00 00 44 9B 03 3E 05 40  // @..>.@....D..>.@
    A920: 00 00 02 00 45 68 03 15 05 40 02 01 02 0C 00 40  // ....Eh...@.....@
    A930: 03 00 41 0D 00 43 73 03 01 04 00 00 00 00 03 00  // ..A..Cs.........
    A940: 41 01 00 03 04 40 04 00 01 02 00 00 40 01 02 01  // A....@......@...
    A950: 00 41 2D 05 40 00 77 01 00 01 02 00 00 40 01 02  // .A-.@.w......@..
    A960: 01 00 41 2D 0D 42 08 00 43 3E 03 01 05 00 00 40  // ..A-.B..C>.....@
    A970: 40 01 00 03 00 40 01 00 4C 05 40 00 00 00 80 49  // @....@..L.@....I
    A980: 0E 04 66 FF 2D 0D 42 31 06 03 04 40 00 00 3E 05  // ..f.-.B1...@..>.
    A990: 40 00 00 00 00 44 FE 03 15 05 40 02 01 02 0C 00  // @....D....@.....
    A9A0: 40 03 00 41 0D 00 03 04 40 04 00 01 02 00 00 40  // @..A....@......@
    A9B0: 01 02 01 00 41 2D 05 40 00 77 01 00 01 02 00 00  // ....A-.@.w......
    A9C0: 40 01 02 01 00 41 2D 0D 42 08 00 43 B9 03 01 05  // @....A-.B..C....
    A9D0: 0C 00 00 02 15 00 03 00 41 0D 00 44 1B 04 01 05  // ........A..D....
    A9E0: 00 00 80 40 01 00 03 00 41 01 00 03 05 40 00 08  // ...@....A....@..
    A9F0: 00 00 4C 65 41 01 44 30 04 0F 05 40 00 00 01 00  // ..LeA.D0...@....
    AA00: 5C 02 42 2A FF E3 FE FF 40 01 05 00 00 42 A1 01  // \.B*....@....B..
    AA10: 00 5C 02 01 00 FF E3 FE FF 40 03 05 40 00 00 00  // .\.......@..@...
    AA20: 00 5C 02 43 2A FF 0F CF FF 40 01 05 00 00 43 A1  // .\.C*....@....C.
    AA30: 01 00 5C 02 01 00 FF 0F CF FF 40 01 0D E7 2A 7F  // ..\.......@...*.
    AA40: 20 0D 05 F4 2A 10 00 00 00 5B 7A 2C 03 00 40 01  //  ...*....[z,..@.
    AA50: 00 58 2A 00 00 00 40 05 00 70 2A 00 00 01 40 01  // .X*...@..p*...@.
    AA60: 00 59 2A 00 00 01 40 05 00 71 2A 00 00 02 40 01  // .Y*...@..q*...@.
    AA70: 00 5A 2A 00 00 02 40 05 00 72 2A 00 00 03 40 01  // .Z*...@..r*...@.
    AA80: 00 5B 2A 00 00 03 40 05 00 73 2A 00 00 04 40 01  // .[*...@..s*...@.
    AA90: 00 5C 2A 00 00 04 40 05 00 74 2A 00 00 05 40 01  // .\*...@..t*...@.
    AAA0: 00 5D 2A 00 00 05 40 05 00 75 2A 00 00 06 40 01  // .]*...@..u*...@.
    AAB0: 00 5E 2A 00 00 06 40 05 00 76 2A 00 00 07 40 01  // .^*...@..v*...@.
    AAC0: 00 5F 2A 00 00 07 40 05 00 77 2A 00 00 08 40 01  // ._*...@..w*...@.
    AAD0: 00 60 2A 00 00 08 40 05 00 78 2A 00 00 09 40 01  // .`*...@..x*...@.
    AAE0: 00 61 2A 00 00 09 40 05 00 79 2A 00 00 0A 40 01  // .a*...@..y*...@.
    AAF0: 00 62 2A 00 00 0A 40 05 00 7A 2A 00 00 0B 40 01  // .b*...@..z*...@.
    AB00: 00 63 2A 00 00 0B 40 05 00 7B 2A 00 00 0C 40 01  // .c*...@..{*...@.
    AB10: 00 64 2A 00 00 0C 40 05 00 7C 2A 00 00 0D 40 01  // .d*...@..|*...@.
    AB20: 00 65 2A 00 00 0D 40 05 00 7D 2A 00 00 10 40 01  // .e*...@..}*...@.
    AB30: 00 66 2A 00 00 10 40 05 00 7E 2A 00 00 11 40 01  // .f*...@..~*...@.
    AB40: 00 67 2A 00 00 11 40 05 00 7F 2A 00 00 14 40 01  // .g*...@...*...@.
    AB50: 00 68 2A 00 00 14 40 05 00 80 2A 00 00 16 40 01  // .h*...@...*...@.
    AB60: 00 69 2A 00 00 16 40 05 00 81 2A 00 00 15 40 01  // .i*...@...*...@.
    AB70: 00 6A 2A 00 00 15 40 05 00 82 2A 00 00 17 40 01  // .j*...@...*...@.
    AB80: 00 6B 2A 00 00 17 40 05 00 83 2A 00 00 1C 40 01  // .k*...@...*...@.
    AB90: 00 6C 2A 00 00 1C 40 05 00 84 2A 00 00 1D 40 01  // .l*...@...*...@.
    ABA0: 00 6D 2A 00 00 1D 40 05 00 85 2A 00 00 1E 40 01  // .m*...@...*...@.
    ABB0: 00 6E 2A 00 00 1E 40 05 00 86 2A 00 00 1F 40 01  // .n*...@...*...@.
    ABC0: 00 6F 2A 00 00 1F 40 05 00 87 2A 00 00 32 40 01  // .o*...@...*..2@.
    ABD0: 00 44 2A 00 00 33 40 01 00 45 2A 00 00 34 40 01  // .D*..3@..E*..4@.
    ABE0: 00 46 2A 00 00 35 40 01 00 47 2A 00 00 36 40 01  // .F*..5@..G*..6@.
    ABF0: 00 48 2A 00 00 3A 40 01 00 4B 2A 00 00 00 00 00  // .H*..:@..K*.....
    AC00: 00 32 40 05 00 44 2A 00 00 33 40 05 00 45 2A 00  // .2@..D*..3@..E*.
    AC10: 00 34 40 05 00 46 2A 00 00 35 40 05 00 47 2A 00  // .4@..F*..5@..G*.
    AC20: 00 36 40 05 00 48 2A 00 00 3A 40 05 00 4B 2A 00  // .6@..H*..:@..K*.
    AC30: 00 00 00 00 00 31 A0 01 00 81 F0 2F FF 34 A0 01  // .....1...../.4..
    AC40: 00 81 F0 2F FF 8E A0 01 00 FA 1F 7C CF 04 A0 01  // .../.......|....
    AC50: 00 FA E0 5F FE 05 A0 01 00 FA E0 5F FE 0D A0 01  // ..._......._....
    AC60: 00 F0 E0 5F FE 13 A0 01 00 FB E0 5F FE 02 A0 01  // ..._......._....
    AC70: 00 F8 E0 5F FE 4A A0 01 00 FB E0 5F FE 4B A0 01  // ..._.J....._.K..
    AC80: 00 FB E0 5F FE 4C A0 01 00 FB E0 5F FE 4F A0 01  // ..._.L....._.O..
    AC90: 00 FB E0 5F FE 50 A0 01 00 FB E0 5F FE 51 A0 01  // ..._.P....._.Q..
    ACA0: 00 FB E0 5F FE 42 A0 01 00 F8 E0 5F FE 44 A0 01  // ..._.B....._.D..
    ACB0: 00 FA E0 5F 0A 47 A0 01 00 FA E0 5F FE 48 A0 01  // ..._.G....._.H..
    ACC0: 00 F8 E0 5F FE 49 A0 01 00 F8 E0 5F FE 38 A0 01  // ..._.I....._.8..
    ACD0: 00 08 04 A1 01 22 A0 01 00 39 00 00 00 62 A0 01  // ....."...9...b..
    ACE0: 00 39 00 00 00 70 A0 01 00 01 00 00 00 83 A0 01  // .9...p..........
    ACF0: 00 70 60 60 60 0A A2 01 00 40 00 00 00 42 A1 01  // .p```....@...B..
    AD00: 00 EF 0D 01 00 43 A1 01 00 00 00 FF 3F ED A1 01  // .....C......?...
    AD10: 00 BF 3F 3F 00 EE A1 01 00 01 00 00 00 F0 A1 01  // ..??............
    AD20: 00 01 00 00 00 F1 A1 01 00 02 20 00 80 F2 A1 01  // .......... .....
    AD30: 00 01 00 00 00 F3 A1 01 00 02 20 00 80 00 A1 01  // .......... .....
    AD40: 00 45 0A 55 51 01 A1 01 00 D5 55 55 55 02 A1 01  // .E.UQ.....UUU...
    AD50: 00 45 96 F0 D7 03 A1 01 00 5F 55 55 55 EA A1 01  // .E......._UUU...
    AD60: 00 07 E0 0C E0 E7 A1 01 00 20 10 11 00 80 A3 01  // ......... ......
    AD70: 00 C9 09 00 00 00 00 00 00 00 7B 00 02 01 00 00  // ..........{.....
    AD80: 37 00 00 3D 65 00 01 44 7A 00 56 00 40 03 21 40  // 7..=e..Dz.V.@.!@
    AD90: 00 21 25 40 C4 03 0A 48 40 01 05 29 3A 00 01 00  // .!%@...H@..):...
    ADA0: 00 5C 05 A1 3A CF FF FF FF 20 00 00 00 5C 05 B4  // .\..:.... ...\..
    ADB0: 3A CF FF FF FF 20 00 00 00 56 00 40 03 21 40 00  // :.... ...V.@.!@.
    ADC0: 21 0D 40 1B 01 03 0A 48 40 5C 05 5F 41 FC FF FF  // !.@....H@\._A...
    ADD0: FF 00 00 00 08 56 00 40 03 21 40 00 21 25 40 80  // .....V.@.!@.!%@.
    ADE0: 03 0A 48 40 5C 05 01 50 FF FC FF FF 00 03 00 00  // ..H@\..P........
    ADF0: 3A 00 00 5B 5B 00 17 00 02 01 00 00 01 05 60 0F  // :..[[.........`.
    AE00: 00 00 00 F4 01 05 62 0F 00 00 00 00 5B 00 1A 00  // ......b.....[...
    AE10: 02 01 00 00 37 00 00 01 05 70 0C 04 A2 FF 03 01  // ....7....p......
    AE20: 05 71 0C 43 48 00 10 5B CA 00 02 01 04 04 37 00  // .q.CH..[......7.
    AE30: 00 66 0C 03 0C 41 00 00 2D 0A 41 42 2D 0D 42 04  // .f...A..-.AB-.B.
    AE40: 00 3D 24 00 06 00 44 31 00 2D 0D 42 08 00 3E 0A  // .=$...D1.-.B..>.
    AE50: 42 41 45 19 00 55 20 00 5B 56 00 43 03 24 43 05  // BAE..U .[V.C.$C.
    AE60: 00 03 04 46 00 00 33 05 46 01 00 00 00 01 02 00  // ...F..3.F.......
    AE70: 00 46 03 00 00 01 00 0D 02 01 00 44 2D 05 46 02  // .F.........D-.F.
    AE80: 00 00 00 01 02 00 00 46 03 24 43 04 00 4B E5 00  // .......F.$C..K..
    AE90: 01 49 AA 00 07 02 01 00 45 2D 05 46 01 00 00 00  // .I......E-.F....
    AEA0: 01 02 00 00 46 4A 02 01 00 44 44 90 00 03 29 43  // ....FJ...DD...)C
    AEB0: 00 0E A2 00 44 43 98 00 03 29 43 00 08 A2 00 45  // ....DC...)C....E
    AEC0: 33 05 46 03 00 00 00 01 02 00 00 46 01 02 01 00  // 3.F........F....
    AED0: 00 5B 0D 02 01 00 44 01 04 00 00 00 00 3D A5 00  // .[....D......=..
    AEE0: 01 44 C4 00 07 02 01 00 45 43 C9 00 0D 02 01 00  // .D......EC......
    AEF0: 44 5B 1D 05 01 07 0C 08 37 00 00 3D 25 01 FF 44  // D[......7..=%..D
    AF00: F7 04 3D 25 01 17 46 F3 04 3D 25 01 02 47 F3 04  // ..=%..F..=%..G..
    AF10: 3D 25 01 14 45 F7 04 3D 05 00 00 00 00 00 44 C3  // =%..E..=......D.
    AF20: 02 4B E5 01 30 44 3D 00 08 E5 01 CF 43 42 00 5D  // .K..0D=.....CB.]
    AF30: E5 01 CF 10 66 1B 56 00 02 3D A5 01 02 49 54 00  // ....f.V..=...IT.
    AF40: 56 08 40 43 66 00 3D A5 01 03 49 61 00 56 08 40  // V.@Cf.=...Ia.V.@
    AF50: 43 66 00 03 0C 40 18 00 3E 0D 40 00 00 44 75 00  // Cf...@..>.@..Du.
    AF60: 03 0A 02 40 43 79 00 0E E5 01 80 4B E5 01 02 49  // ...@Cy.....K...I
    AF70: 87 00 02 A9 02 02 55 28 02 66 FF 2D 0D 42 09 05  // ......U(.f.-.B..
    AF80: 03 39 40 01 09 0D 40 30 00 1B 0D 40 04 21 0D 40  // .9@...@0...@.!.@
    AF90: 05 00 2D 0A 42 40 03 04 40 00 00 27 05 40 10 27  // ..-.B@..@..'.@.'
    AFA0: 00 00 02 A2 03 40 02 E4 03 04 00 56 00 00 56 00  // .....@.....V..V.
    AFB0: 01 02 0D 03 40 01 02 65 01 01 20 05 00 0A 00 00  // ....@..e.. .....
    AFC0: 00 03 02 46 40 3D 05 00 80 8D 5B 00 47 EF 00 3D  // ...F@=....[.G..=
    AFD0: A5 03 64 45 E8 00 02 65 03 03 0E E5 01 08 55 28  // ..dE...e......U(
    AFE0: 01 4B E5 01 08 44 FA 00 1B 05 46 01 3E 05 46 A0  // .K...D....F.>.F.
    AFF0: 2F C5 01 48 0F 01 2C 65 01 01 15 05 46 01 43 FA  // /..H..,e....F.C.
    B000: 00 14 2D 01 05 3D A5 01 00 44 30 01 4B E5 01 80  // ..-..=...D0.K...
    B010: 49 30 01 3D A5 03 64 45 30 01 0E 25 03 01 15 05  // I0.=..dE0..%....
    B020: 46 01 03 05 01 00 00 01 00 4B E5 01 80 44 92 01  // F........K...D..
    B030: 27 04 46 00 00 3E 05 41 00 00 00 00 44 A4 01 03  // '.F..>.A....D...
    B040: 04 40 00 00 03 02 00 41 27 02 40 41 03 02 40 00  // .@.....A'.@A..@.
    B050: 3E 05 41 00 00 00 00 49 52 01 7C 05 00 00 00 01  // >.A....IR.|.....
    B060: 00 7E 04 40 00 00 7C 04 40 00 00 7E 02 40 00 03  // .~.@..|.@..~.@..
    B070: 02 01 40 3E 05 01 33 F3 00 00 48 92 01 03 05 01  // ..@>..3...H.....
    B080: 00 00 01 00 27 04 46 00 00 7C 02 01 41 7E 04 40  // ....'.F..|..A~.@
    B090: 00 00 03 0A 00 40 27 04 46 00 00 03 8A 00 40 56  // .....@'.F.....@V
    B0A0: 18 01 4B E5 01 80 49 2F 02 7C 02 02 00 7E 05 40  // ..K...I/.|...~.@
    B0B0: A0 86 01 00 03 01 41 03 09 05 41 03 00 00 00 6F  // ......A...A....o
    B0C0: 02 40 41 7C 05 40 4E 0C 00 00 7E 04 40 00 00 27  // .@A|.@N...~.@..'
    B0D0: 05 40 05 00 00 00 3E 05 40 00 00 00 00 49 F2 01  // .@....>.@....I..
    B0E0: 03 25 40 01 03 8A 01 40 21 05 40 05 00 00 00 7C  // .%@....@!.@....|
    B0F0: 04 40 00 00 7E 05 40 4E 0C 00 00 03 01 41 03 09  // .@..~.@N.....A..
    B100: 05 41 03 00 00 00 75 02 40 41 3D A5 01 00 44 27  // .A....u.@A=...D'
    B110: 02 1B 05 40 01 2D 02 00 40 03 02 02 00 33 02 02  // ...@.-..@....3..
    B120: 40 66 FF 2D 0D 42 01 05 56 00 40 03 21 40 01 33  // @f.-.B..V.@.!@.3
    B130: 25 40 14 15 25 40 01 2D 0A 42 40 03 0C 48 00 00  // %@..%@.-.B@..H..
    B140: 4A 65 0A 5E 10 44 5D 03 03 39 41 01 09 0D 41 30  // Je.^.D]..9A...A0
    B150: 00 1B 0D 41 04 3C 22 86 5E 41 49 A2 02 3C 21 4B  // ...A.<".^AI..<!K
    B160: 5E 03 49 A2 02 3C 29 4D 5E 03 49 A2 02 03 20 41  // ^.I..<)M^.I... A
    B170: 87 5E 09 25 41 E0 3E 29 41 01 49 A2 02 4B E5 01  // .^.%A.>)A.I..K..
    B180: 40 49 55 03 3C 02 48 5E 00 49 A2 02 3C 0A 4A 5E  // @IU.<.H^.I..<.J^
    B190: 01 44 A6 02 0E E5 01 01 3A 00 00 4B E5 01 01 44  // .D......:..K...D
    B1A0: CB 04 4B E5 01 02 49 C3 02 3D 25 02 03 46 C3 02  // ..K...I..=%..F..
    B1B0: 55 28 02 52 23 56 00 40 03 21 40 01 33 25 40 14  // U(.R#V.@.!@.3%@.
    B1C0: 03 0A 48 40 07 25 60 01 FE 66 FF 2D 0D 42 01 05  // ..H@.%`..f.-.B..
    B1D0: 56 00 40 03 21 40 01 33 25 40 14 15 25 40 01 2D  // V.@.!@.3%@..%@.-
    B1E0: 0A 42 40 03 0C 48 00 00 07 65 4B 5E FE 54 00 49  // .B@..H...eK^.T.I
    B1F0: 5E 54 00 4A 5E 07 65 0A 5E EF 4A 65 0A 5E 20 49  // ^T.J^.e.^.Je.^ I
    B200: 08 03 07 65 1A 5E EF 4A 65 1A 5E 20 49 15 03 3D  // ...e.^.Je.^ I..=
    B210: 05 00 00 00 00 00 49 5D 03 4A A5 E9 5D 80 44 52  // ......I].J..].DR
    B220: 03 56 00 41 5C 25 08 5E F8 06 51 02 4A 65 08 5E  // .V.A\%.^..Q.Je.^
    B230: 01 44 3A 03 2D A5 41 01 2D 0D 48 10 00 3E A5 41  // .D:.-.A.-.H..>.A
    B240: 04 45 32 03 43 F3 04 01 02 48 5E 00 43 87 04 01  // .E2.C....H^.C...
    B250: 05 03 5E 80 88 01 00 3D A5 01 00 49 7E 03 3D 05  // ..^....=...I~.=.
    B260: 00 E0 3B 66 00 45 7E 03 07 25 04 5E FE 43 9E 03  // ..;f.E~..%.^.C..
    B270: 0D 25 04 5E 01 3D A5 01 02 49 9E 03 4B E5 01 08  // .%.^.=...I..K...
    B280: 44 9E 03 01 05 DB 5E 80 88 01 00 0D 25 DC 5E 01  // D.....^.....%.^.
    B290: 0D 25 87 5E 01 03 39 40 01 09 0D 40 30 00 1B 0D  // .%.^..9@...@0...
    B2A0: 40 04 01 22 86 5E 40 0D 65 87 5E 80 5C 79 87 5E  // @..".^@.e.^.\y.^
    B2B0: FB 03 56 00 40 03 31 40 03 03 01 41 03 09 05 41  // ..V.@.1@...A...A
    B2C0: 03 00 00 00 75 02 40 41 03 05 41 A1 83 00 00 3E  // ....u.@A..A....>
    B2D0: 25 40 64 48 F9 03 03 05 41 24 83 00 00 3E 25 40  // %@dH....A$...>%@
    B2E0: 30 48 F9 03 03 05 41 A3 76 00 00 01 0A 4C 5E 41  // 0H....A.v....L^A
    B2F0: 01 E2 4E 5E 40 0D 25 4E 5E 02 01 21 4B 5E 03 01  // ..N^@.%N^..!K^..
    B300: A5 4B 5E E8 01 02 48 5E 00 54 00 49 5E 01 02 4A  // .K^...H^.T.I^..J
    B310: 5E 01 4B E5 01 08 44 2F 04 07 65 87 5E FE 43 34  // ^.K...D/..e.^.C4
    B320: 04 0D 65 87 5E 01 5C 29 87 5E 1F 01 01 8D 53 5E  // ..e.^.\).^....S^
    B330: 20 03 01 29 4D 5E 03 07 65 87 5E 7F 5C 65 0A 5E  //  ..)M^..e.^.\e.^
    B340: E3 04 4A 65 0A 5E 20 49 50 04 0D 65 0A 5E 10 4A  // ..Je.^ IP..e.^.J
    B350: 65 0A 5E 20 44 5D 04 4B E5 01 02 49 87 04 5C 65  // e.^ D].K...I..\e
    B360: 1A 5E E3 04 4A 65 1A 5E 20 49 72 04 0D 65 1A 5E  // .^..Je.^ Ir..e.^
    B370: 10 4A 65 1A 5E 20 44 7F 04 4B E5 01 80 49 9A 04  // .Je.^ D..K...I..
    B380: 01 02 49 5E 02 0D 65 4B 5E 01 51 0A 0D 65 87 5E  // ..I^..eK^.Q..e.^
    B390: 40 51 0A 4A 65 87 5E 20 44 A1 04 07 65 87 5E BF  // @Q.Je.^ D...e.^.
    B3A0: 56 00 40 03 21 40 01 33 25 40 14 03 0A 48 40 0D  // V.@.!@.3%@...H@.
    B3B0: 25 60 01 01 51 0A 4B E5 01 02 49 F3 04 3A 00 00  // %`..Q.K...I..:..
    B3C0: 3D 25 02 03 46 F3 04 02 25 03 02 02 E1 03 02 02  // =%..F...%.......
    B3D0: 61 03 01 02 B9 03 01 08 A5 03 04 0E B1 03 02 02  // a...............
    B3E0: 01 02 00 52 2E 3A 00 00 5B 02 25 01 0B 43 CB 04  // ...R.:..[.%..C..
    B3F0: 7A 1C 00 00 00 D8 00 B0 01 88 02 40 42 0F 00 04  // z..........@B...
    B400: 00 53 07 00 04 00 53 07 00 00 40 42 0F 00 04 00  // .S....S...@B....
    B410: D4 02 02 01 00 04 37 00 00 42 29 00 63 02 49 02  // ......7..B).c.I.
    B420: 63 07 21 00 63 08 1B 00 5A 5A 5B 0D 25 C8 39 02  // c.!.c...ZZ[.%.9.
    B430: 5B 01 05 3B 01 30 02 12 00 01 05 30 01 80 BB 10  // [..;.0.....0....
    B440: 00 01 05 31 01 3C 00 01 08 01 8D 83 38 30 00 01  // ...1.<......80..
    B450: 25 82 38 01 5C 65 D4 00 FC 02 5C 25 50 39 0F C0  // %.8.\e....\%P9..
    B460: 01 25 32 01 00 01 05 4C 35 00 00 00 00 01 05 4A  // .%2....L5......J
    B470: 35 00 00 00 00 01 05 50 35 00 00 00 00 01 05 4E  // 5......P5......N
    B480: 35 00 00 00 00 01 05 54 35 00 00 00 00 01 05 52  // 5......T5......R
    B490: 35 00 00 00 00 01 05 58 35 00 00 00 00 01 05 56  // 5......X5......V
    B4A0: 35 00 00 00 00 01 05 6D 35 01 00 00 00 01 05 DF  // 5......m5.......
    B4B0: 39 01 10 00 00 01 05 24 3A 00 1B 5D 05 01 05 76  // 9......$:..]...v
    B4C0: 3A 35 00 13 00 01 05 77 3A 36 11 00 00 01 05 78  // :5.....w:6.....x
    B4D0: 3A 41 E6 01 00 01 05 79 3A 00 00 00 00 01 05 7A  // :A.....y:......z
    B4E0: 3A 00 00 08 2C 01 05 7C 3A 02 04 00 00 01 05 8C  // :...,..|:.......
    B4F0: 3A 5E 4E 01 00 01 05 7A 3A 00 00 08 2C 01 05 7D  // :^N....z:...,..}
    B500: 3A A4 01 00 00 01 05 7F 3A A4 01 00 00 01 05 81  // :.......:.......
    B510: 3A 00 02 00 00 01 05 82 3A 49 D2 00 00 01 05 85  // :.......:I......
    B520: 3A 20 00 00 00 01 05 86 3A 24 0D 00 00 01 05 89  // : ......:$......
    B530: 3A 00 00 00 00 01 05 8A 3A 00 00 00 00 01 05 5C  // :.......:......\
    B540: 3A 00 00 92 06 01 05 5D 3A AA 08 00 E0 01 05 C9  // :......]:.......
    B550: 39 FE 01 00 00 01 05 CA 39 1E 05 00 00 01 05 CB  // 9.......9.......
    B560: 39 BA 04 00 00 01 05 CC 39 24 04 00 00 01 05 CD  // 9.......9$......
    B570: 39 A2 08 00 00 01 05 CE 39 FE 01 00 00 01 05 CF  // 9.......9.......
    B580: 39 1E 05 00 00 01 05 D0 39 BA 04 00 00 01 05 D1  // 9.......9.......
    B590: 39 24 04 00 00 01 05 D2 39 A2 08 00 00 01 05 D3  // 9$......9.......
    B5A0: 39 FE 01 00 00 01 05 D4 39 1E 05 00 00 01 05 D5  // 9.......9.......
    B5B0: 39 BA 04 00 00 01 05 D6 39 24 04 00 00 01 05 D7  // 9.......9$......
    B5C0: 39 A2 08 00 00 01 05 D8 39 FE 01 00 00 01 05 D9  // 9.......9.......
    B5D0: 39 1E 05 00 00 01 05 DA 39 BA 04 00 00 01 05 DB  // 9.......9.......
    B5E0: 39 24 04 00 00 01 05 DC 39 A2 08 00 00 0D 25 C8  // 9$......9.....%.
    B5F0: 39 02 0D 25 52 41 01 01 25 F2 4A 00 01 25 F0 4A  // 9..%RA..%.J..%.J
    B600: 00 01 25 F1 4A 00 01 25 EF 4B 00 55 00 01 52 17  // ..%.J..%.K.U..R.
    B610: 2C 25 01 01 3D 25 01 01 45 FE 01 55 00 01 52 4E  // ,%..=%..E..U..RN
    B620: 01 05 7C 53 00 00 00 03 02 25 01 07 52 33 02 05  // ..|S.....%..R3..
    B630: 01 00 07 00 00 52 4D 2C 25 01 01 3D 25 01 04 45  // .....RM,%..=%..E
    B640: 25 02 66 16 03 0C 41 04 00 4C 0D 41 02 00 44 46  // %.f...A..L.A..DF
    B650: 02 0D A5 4C 00 02 52 4B 5B 02 05 01 01 00 00 00  // ...L..RK[.......
    B660: 52 06 01 05 00 00 17 A8 01 00 03 00 40 01 00 15  // R...........@...
    B670: 05 40 04 01 02 59 39 40 2D 01 40 01 01 02 5A 39  // .@...Y9@-.@...Z9
    B680: 40 01 05 53 39 00 F4 00 00 03 01 40 01 1B 05 40  // @..S9......@...@
    B690: 04 2D 05 40 FF F3 00 00 01 02 54 39 40 01 05 00  // .-.@......T9@...
    B6A0: 00 17 A8 01 00 01 00 55 39 01 00 01 05 64 3A 00  // .......U9....d:.
    B6B0: 00 40 0F 54 00 65 3A 03 01 40 01 15 05 40 08 33  // .@.T.e:..@...@.3
    B6C0: 05 40 01 00 00 00 2D 05 40 00 00 40 0F 01 02 66  // .@....-.@..@...f
    B6D0: 3A 40 54 00 67 3A 01 25 C9 00 F4 01 05 C4 00 00  // :@T.g:.%........
    B6E0: 00 00 00 5B 90 00 02 01 00 04 66 FF 56 08 47 2D  // ...[......f.V.G-
    B6F0: 0D 42 68 00 03 21 47 00 09 25 47 F0 42 22 47 63  // .Bh..!G..%G.B"Gc
    B700: 00 4F 00 63 60 4A 00 63 20 42 00 63 90 3A 00 63  // .O.c`J.c B.c.:.c
    B710: A0 32 00 5A 5A 5B 2D 0D 42 20 00 43 4F 00 2D 0D  // .2.ZZ[-.B .CO.-.
    B720: 42 18 00 43 4F 00 2D 0D 42 10 00 43 4F 00 2D 0D  // B..CO.-.B..CO.-.
    B730: 42 08 00 03 21 47 00 09 25 47 07 2D 0A 42 47 2D  // B...!G..%G.-.BG-
    B740: 0A 42 47 03 0C 48 00 00 5B 7A 90 00 00 00 80 00  // .BG..H..[z......
    B750: 00 01 80 01 00 00 00 01 00 02 00 03 00 00 D8 00  // ................
    B760: B0 01 88 02 00 00 C4 00 88 01 4C 02 00 00 1B 01  // ..........L.....
    B770: 36 02 51 03 72 00 01 01 00 00 37 00 00 56 00 40  // 6.Q.r.....7..V.@
    B780: 03 21 40 00 21 0D 40 1B 01 03 02 48 40 01 25 24  // .!@.!.@....H@.%$
    B790: 41 01 3D 65 00 02 49 4C 00 01 0D 35 41 01 00 54  // A.=e..IL...5A..T
    B7A0: 00 33 41 0D 25 26 41 01 01 05 25 41 11 00 00 00  // .3A.%&A...%A....
    B7B0: 07 A5 24 41 FE 01 05 27 41 11 01 11 01 43 6E 00  // ..$A...'A....Cn.
    B7C0: 01 05 29 41 00 00 00 01 01 05 2D 41 00 00 00 01  // ..)A......-A....
    B7D0: 01 05 27 41 11 01 11 01 54 00 25 41 01 0D 35 41  // ..'A....T.%A..5A
    B7E0: 00 01 3A 00 00 5B 3F 00 01 01 00 00 37 00 00 52  // ..:..[?.....7..R
    B7F0: 14 54 30 02 50 54 00 21 50 54 00 22 50 3C 69 02  // .T0.PT.!PT."P<i.
    B800: 50 00 44 3B 00 01 69 02 50 00 3D 65 00 00 44 3B  // P.D;..i.P.=e..D;
    B810: 00 4A A5 01 50 01 44 3B 00 4A 25 02 50 01 44 33  // .J..P.D;.J%.P.D3
    B820: 00 3A 00 00 5B 00 43 00 01 01 00 00 37 00 00 52  // .:..[.C.....7..R
    B830: 14 3D 65 00 01 44 3A 00 0D 65 01 50 03 54 20 01  // .=e..D:..e.P.T .
    B840: 50 4A A5 01 50 01 49 1B 00 54 20 0F 50 56 00 40  // PJ..P.I..T .PV.@
    B850: 20 25 00 01 03 0A 48 40 07 E5 E8 39 7F 43 3F 00  //  %....H@...9.C?.
    B860: 0D 25 01 50 01 3A 00 00 5B 00 CF 00 02 01 00 00  // .%.P.:..[.......
    B870: 37 00 00 42 29 00 63 00 1B 00 63 01 1B 00 63 02  // 7..B).c...c...c.
    B880: AA 00 5A 5A 5B 66 FF 56 08 40 2D 0D 42 C3 00 03  // ..ZZ[f.V.@-.B...
    B890: 21 40 00 15 25 40 01 2D 0A 42 40 03 0C 48 00 00  // !@..%@.-.B@..H..
    B8A0: 3D 65 00 00 44 72 00 0D 25 CC 00 01 3A 00 00 01  // =e..Dr..%...:...
    B8B0: 8D C0 00 00 02 51 02 01 05 C6 00 00 00 10 00 01  // .....Q..........
    B8C0: 05 C8 00 00 00 50 00 01 0D C3 00 02 00 54 20 CA  // .....P.......T .
    B8D0: 00 01 05 C2 00 00 01 00 00 43 1A 00 07 25 CC 00  // .........C...%..
    B8E0: FE 3A 00 00 0D 25 CA 00 01 01 25 C2 00 01 07 A5  // .:...%....%.....
    B8F0: C1 00 FE 0D 25 D5 00 01 0D 65 D5 00 01 4A 65 D5  // ....%....e...Je.
    B900: 00 01 44 93 00 54 08 D5 00 54 00 C6 00 54 00 C8  // ..D..T...T...T..
    B910: 00 43 1A 00 5C 65 D4 00 FC 02 01 A1 C0 00 00 2B  // .C..\e.........+
    B920: A5 C0 00 01 0D A5 C1 00 01 5B 7A 0C 00 00 00 02  // .........[z.....
    B930: 00 2C 00 2D 00 2E 00 2F 00 00 DA 01 03 01 00 00  // .,.-.../........
    B940: 37 00 00 03 05 46 10 27 00 00 3D A5 00 02 49 1C  // 7....F.'..=...I.
    B950: 00 02 02 00 46 5B 03 05 40 16 6C 01 00 03 05 41  // ....F[..@.l....A
    B960: 00 6C 01 00 3D 25 00 00 44 54 00 03 05 40 16 6E  // .l..=%..DT...@.n
    B970: 01 00 03 05 41 00 6E 01 00 3D 25 00 01 44 54 00  // ....A.n..=%..DT.
    B980: 03 05 40 16 7E 01 00 03 05 41 00 7E 01 00 01 02  // ..@.~....A.~....
    B990: 00 00 40 03 88 40 01 00 03 18 40 01 00 09 8D 40  // ..@..@....@....@
    B9A0: FF 01 3E 8D 40 00 00 49 AA 00 01 02 00 00 41 03  // ..>.@..I......A.
    B9B0: 00 40 01 00 09 05 40 FF 01 00 00 3E 0D 40 00 00  // .@....@....>.@..
    B9C0: 49 93 00 03 05 46 00 71 02 00 43 CD 00 21 02 40  // I....F.q..C..!.@
    B9D0: 46 03 00 41 01 00 09 05 41 00 1E 00 00 1B 05 41  // F..A....A......A
    B9E0: 09 43 C5 00 7C 02 40 46 7E 05 40 00 00 01 00 03  // .C..|.@F~.@.....
    B9F0: 00 41 01 00 09 05 41 00 F0 00 00 1B 05 41 0C 75  // .A....A......A.u
    BA00: 02 40 41 03 02 46 40 3D A5 00 01 49 D9 00 02 02  // .@A..F@=...I....
    BA10: 00 46 5B 3D E5 00 00 49 3B 01 56 00 40 03 29 40  // .F[=...I;.V.@.)@
    BA20: 00 21 0D 40 0A 00 03 05 41 4A 6C 01 00 3D 25 00  // .!.@....AJl..=%.
    BA30: 00 44 0F 01 03 05 41 4A 6E 01 00 3D 25 00 01 44  // .D....AJn..=%..D
    BA40: 0F 01 03 05 41 4A 7E 01 00 2D 02 40 41 01 02 00  // ....AJ~..-.@A...
    BA50: 00 40 03 00 41 01 00 09 05 41 00 00 F0 07 1B 05  // .@..A....A......
    BA60: 41 14 02 E2 00 41 3D E5 00 00 49 3B 01 02 05 00  // A....A=...I;....
    BA70: 10 27 00 00 5B 56 00 40 03 39 40 00 55 38 00 66  // .'..[V.@.9@.U8.f
    BA80: FF 2D 0D 42 B2 01 3E 0C 40 02 00 47 5C 01 2D 0D  // .-.B..>.@..G\.-.
    BA90: 42 08 00 43 4C 01 33 0C 40 04 00 21 0C 40 06 00  // B..CL.3.@..!.@..
    BAA0: 2D 0C 40 00 00 03 09 42 00 55 00 00 02 0A 00 40  // -.@....B.U.....@
    BAB0: 7C 05 46 40 42 0F 00 7E 01 40 00 02 02 00 40 3E  // |.F@B..~.@....@>
    BAC0: 25 42 00 49 AE 01 56 00 46 66 08 03 0C 46 0C 00  // %B.I..V.Ff...F..
    BAD0: 3E 0D 46 00 00 44 AE 01 7C 02 40 46 7E 05 40 14  // >.F..D..|.@F~.@.
    BAE0: 00 00 00 32 02 00 40 5B 5B 7A 28 00 FF FF 07 00  // ...2..@[[z(.....
    BAF0: 00 00 00 00 C8 00 3F 00 08 00 19 00 40 06 5F 00  // ......?.....@._.
    BB00: 40 00 32 00 80 0C 7E 00 60 00 64 00 00 32 7F 00  // @.2...~.`.d..2..
    BB10: 7F 00 64 00 C6 00 02 03 04 00 37 00 00 56 00 46  // ..d.......7..V.F
    BB20: 56 00 00 03 21 00 00 55 20 00 3D 65 00 03 44 2C  // V...!..U .=e..D,
    BB30: 00 3D 65 00 0B 46 BB 00 02 29 00 00 32 25 00 08  // .=e..F...)..2%..
    BB40: 0E 25 00 60 52 14 5C 22 28 55 F8 00 02 22 00 00  // .%.`R.\"(U..."..
    BB50: 52 14 03 08 41 3D 41 09 0D 41 03 00 66 FF 2D 0D  // R...A=A..A..f.-.
    BB60: 42 C2 00 2D 0A 42 41 03 24 00 00 00 3D E2 00 00  // B..-.BA.$...=...
    BB70: 48 A7 00 3E 25 00 04 44 76 00 03 22 46 00 33 25  // H..>%..Dv.."F.3%
    BB80: 46 01 15 25 46 04 0F 25 46 01 33 39 00 00 3E 25  // F..%F..%F.39..>%
    BB90: 00 01 44 93 00 3E 25 00 02 44 8C 00 03 25 46 21  // ..D..>%..D...%F!
    BBA0: 03 65 00 2F 43 97 00 03 65 00 13 03 79 46 00 33  // .e./C...e...yF.3
    BBB0: 65 46 01 15 2D 46 03 0F 65 46 01 52 14 01 02 01  // eF..-F..eF.R....
    BBC0: 4D 46 01 52 00 4D 00 54 00 08 4D 54 00 FF 4C 3A  // MF.R.M.T..MT..L:
    BBD0: 00 00 5B 7A 04 00 03 02 01 04 CB 00 01 01 00 00  // ..[z............
    BBE0: 37 00 00 3D 65 00 01 44 61 00 56 00 40 20 25 00  // 7..=e..Da.V.@ %.
    BBF0: 10 03 0A 48 40 07 25 8D 4F FD 4A 25 8D 4F 04 49  // ...H@.%.O.J%.O.I
    BC00: 20 00 52 14 07 25 48 50 FE 4A 65 48 50 01 49 2F  //  .R..%HP.JeHP.I/
    BC10: 00 03 21 40 00 21 0D 40 C4 00 03 0A 48 40 07 25  // ..!@.!.@....H@.%
    BC20: 27 3A FE 56 00 40 03 21 40 00 21 0D 40 1B 01 03  // ':.V.@.!@.!.@...
    BC30: 0A 48 40 07 25 FD 40 EF 43 C7 00 56 00 40 20 25  // .H@.%.@.C..V.@ %
    BC40: 00 10 03 0A 48 40 0D 25 8D 4F 02 4A 25 8D 4F 04  // ....H@.%.O.J%.O.
    BC50: 44 71 00 52 14 0D 25 48 50 01 4A 65 48 50 01 44  // Dq.R..%HP.JeHP.D
    BC60: 80 00 56 00 40 03 21 40 00 21 0D 40 C4 00 03 0A  // ..V.@.!@.!.@....
    BC70: 48 40 0D 25 27 3A 01 56 00 40 03 21 40 00 21 0D  // H@.%':.V.@.!@.!.
    BC80: 40 1B 01 03 0A 48 40 0D 25 FD 40 10 56 00 40 03  // @....H@.%.@.V.@.
    BC90: 21 40 00 21 0D 40 5A 00 03 0A 48 40 0D 25 4C 4D  // !@.!.@Z...H@.%LM
    BCA0: 01 3A 00 00 5B 00 51 01 01 04 00 08 37 00 00 3D  // .:..[.Q.....7..=
    BCB0: 65 02 01 49 1A 01 4B A5 02 03 49 2A 00 52 25 02  // e..I..K...I*.R%.
    BCC0: 05 00 00 00 00 00 02 05 01 00 05 02 00 43 2F 00  // .............C/.
    BCD0: 55 28 02 52 25 0E 25 02 90 52 14 08 25 02 07 0D  // U(.R%.%..R..%...
    BCE0: 05 27 3A 11 11 01 00 5C 25 26 3A 0B 01 03 21 41  // .':....\%&:...!A
    BCF0: 02 15 25 41 04 0D 22 26 3A 41 0D 65 29 3A 01 5C  // ..%A.."&:A.e):.\
    BD00: 25 4E 3A FD 01 01 0D 3E 3A F4 00 01 0D 42 3A F4  // %N:....>:....B:.
    BD10: 00 4B A5 02 03 49 85 00 01 05 3D 3A 00 00 10 00  // .K...I....=:....
    BD20: 01 05 41 3A 00 00 50 00 43 95 00 01 05 3D 3A 00  // ..A:..P.C....=:.
    BD30: 00 00 00 01 05 41 3A 00 00 00 00 01 0D 1B 3A 80  // .....A:.......:.
    BD40: 00 01 0D 24 3A 00 03 01 0D 7C 3A 01 03 01 05 7A  // ...$:....|:....z
    BD50: 3A 00 00 08 28 01 05 7B 3A 00 00 08 00 01 E5 5E  // :...(..{:......^
    BD60: 3A 08 01 E5 5D 3A E0 54 00 1C 3A 01 19 1D 3A 00  // :...]:.T..:...:.
    BD70: 01 89 1D 3A 00 01 19 21 3A 00 01 89 21 3A 00 54  // ...:...!:...!:.T
    BD80: 08 19 3A 66 FF 2D 0D 42 42 01 03 0C 40 00 00 3E  // ..:f.-.BB...@..>
    BD90: 0D 40 FF FF 44 01 01 3D 8C 01 00 00 44 01 01 2D  // .@..D..=....D..-
    BDA0: 0D 42 03 00 43 E4 00 01 24 19 3A 02 00 01 09 3B  // .B..C...$.:....;
    BDB0: 3A 01 07 25 26 3A FE 07 25 4E 3A FE 3A 00 00 5B  // :..%&:..%N:.:..[
    BDC0: 0E 25 02 90 52 14 3D 65 02 00 49 2F 01 0D 25 26  // .%..R.=e..I/..%&
    BDD0: 3A 01 43 3B 01 3D 65 02 10 44 3B 01 01 09 3B 3A  // :.C;.=e..D;...;:
    BDE0: 01 3A 00 00 5B 7A 0F 00 01 00 01 01 01 03 01 05  // .:..[z..........
    BDF0: 02 02 00 08 FF FF 08 00 42 00 01 01 00 00 37 00  // ........B.....7.
    BE00: 00 52 14 3D 65 00 01 44 21 00 54 20 4D 50 4A 65  // .R.=e..D!.T MPJe
    BE10: 4D 50 01 49 16 00 43 3E 00 5C 4D 1B 50 FE FF 00  // MP.I..C>.\M.P...
    BE20: 01 4A A5 01 50 01 44 3E 00 0D 25 4D 50 01 4A 65  // .J..P.D>..%MP.Je
    BE30: 4D 50 01 44 36 00 3A 00 00 5B 17 00 01 03 00 00  // MP.D6.:..[......
    BE40: 37 00 00 0E 25 00 A0 52 14 54 00 5F 41 3A 00 00  // 7...%..R.T._A:..
    BE50: 5B 00 C6 01 01 01 00 18 56 00 40 03 21 40 05 21  // [.......V.@.!@.!
    BE60: 0D 40 80 00 03 0A 48 40 37 00 00 01 0D 49 50 0D  // .@....H@7....IP.
    BE70: 00 3D 8D 01 0D 00 46 2C 00 01 19 49 50 01 01 8D  // .=....F,...IP...
    BE80: 4A 50 40 01 01 0D 4B 50 2C 01 03 09 41 00 2D 19  // JP@...KP,...A.-.
    BE90: 41 00 03 8A 41 41 2D 8D 41 01 00 1B 1D 41 02 01  // A...AA-.A....A..
    BEA0: 1A 4A 50 41 33 0D 41 01 00 01 0A EA 4F 41 54 08  // .JPA3.A.....OAT.
    BEB0: EC 4F 01 99 EC 4F 02 03 19 41 00 33 09 41 02 56  // .O...O...A.3.A.V
    BEC0: 18 41 03 B1 41 04 33 1A 41 41 01 8A EB 4F 41 03  // .A..A.3.AA...OA.
    BED0: 19 41 00 33 09 41 02 2D 1A 41 41 2D 09 41 00 4B  // .A.3.A.-.AA-.A.K
    BEE0: 25 04 10 44 98 00 2D 09 41 00 01 0A EB 4F 41 03  // %..D..-.A....OA.
    BEF0: 21 41 04 09 25 41 02 1B 25 41 01 01 22 ED 4F 41  // !A..%A..%A..".OA
    BF00: 03 09 41 01 2D 19 41 01 33 0D 41 01 00 01 0A EF  // ..A.-.A.3.A.....
    BF10: 4F 41 54 08 F7 4F 01 99 F7 4F 03 03 19 41 01 33  // OAT..O...O...A.3
    BF20: 09 41 03 56 18 41 03 B9 41 04 33 1A 41 41 01 8A  // .A.V.A..A.3.AA..
    BF30: F6 4F 41 03 19 41 01 33 09 41 03 2D 1A 41 41 2D  // .OA..A.3.A.-.AA-
    BF40: 09 41 01 4B 25 04 20 44 FC 00 2D 09 41 01 01 0A  // .A.K%. D..-.A...
    BF50: F6 4F 41 03 21 41 04 09 25 41 04 1B 25 41 02 01  // .OA.!A..%A..%A..
    BF60: 22 F8 4F 41 3D 65 05 00 44 21 01 07 65 01 50 EF  // ".OA=e..D!..e.P.
    BF70: 43 26 01 0D 65 01 50 10 03 00 46 EB 4F 02 00 02  // C&..e.P...F.O...
    BF80: F6 4F 56 00 40 03 21 40 05 21 0D 40 01 00 03 0A  // .OV.@.!@.!.@....
    BF90: 48 40 56 00 40 03 09 40 02 3D 65 05 00 49 53 01  // H@V.@..@.=e..IS.
    BFA0: 33 0D 40 02 00 15 05 40 0F 56 00 41 3D 8D 02 0D  // 3.@....@.V.A=...
    BFB0: 00 48 6B 01 03 0D 41 0D 00 33 19 41 02 0F 02 40  // .Hk...A..3.A...@
    BFC0: 41 0F E5 40 80 01 02 E8 39 40 56 00 40 03 21 40  // A..@....9@V.@.!@
    BFD0: 05 21 0D 40 1B 01 03 0A 48 40 01 09 3B 41 00 01  // .!.@....H@..;A..
    BFE0: 89 3B 41 01 01 09 3C 41 00 01 89 3C 41 01 01 02  // .;A...<A...<A...
    BFF0: 38 41 46 01 01 39 41 02 54 00 36 41 01 31 36 41  // 8AF..9A.T.6A.16A
    C000: 04 01 B1 36 41 04 54 00 37 41 01 39 37 41 04 01  // ...6A.T.7A.97A..
    C010: B9 37 41 04 3A 00 00 5B 0A 00 02 03 08 00 37 00  // .7A.:..[......7.
    C020: 00 5B 21 02 01 01 00 00 37 00 00 0D 25 78 53 08  // .[!.....7...%xS.
    C030: 07 25 9E 53 FE 56 00 41 03 39 41 01 09 25 41 0F  // .%.S.V.A.9A..%A.
    C040: 03 0A 40 42 66 FF 2D 0D 42 11 02 15 25 41 02 2D  // ..@Bf.-.B...%A.-
    C050: 0A 42 41 03 0C 41 00 00 01 02 00 00 41 07 A5 01  // .BA..A......A...
    C060: 00 FE 54 08 01 00 01 0C 7F 53 02 00 03 0A 42 40  // ..T......S....B@
    C070: 03 05 40 C0 5D 00 00 56 00 41 03 21 41 00 27 02  // ..@.]..V.A.!A.'.
    C080: 40 41 01 8A 7B 53 40 01 25 7B 53 02 0D 25 79 53  // @A..{S@.%{S..%yS
    C090: 02 01 A9 7D 53 01 4B 25 01 01 49 7F 00 54 30 7D  // ...}S.K%..I..T0}
    C0A0: 53 01 0D 7D 53 00 31 2B A5 7D 53 01 4B 25 01 02  // S..}S.1+.}S.K%..
    C0B0: 44 96 00 2B A5 7D 53 01 56 00 41 03 71 41 01 0F  // D..+.}S.V.A.qA..
    C0C0: E5 41 80 01 02 7E 53 41 03 69 41 00 2D A5 41 01  // .A...~SA.iA.-.A.
    C0D0: 01 02 7E 53 41 4B 25 01 02 44 C6 00 56 28 41 2D  // ..~SAK%..D..V(A-
    C0E0: A5 41 01 01 02 7E 53 41 4B 25 01 01 44 E7 00 03  // .A...~SAK%..D...
    C0F0: 71 41 00 2D A5 41 01 01 02 7E 53 41 03 79 41 00  // qA.-.A...~SA.yA.
    C100: 2D A5 41 01 01 02 7E 53 41 0D 25 78 53 01 03 A5  // -.A...~SA.%xS...
    C110: 41 01 43 BA 01 03 29 40 01 03 65 40 01 03 99 40  // A.C...)@..e@...@
    C120: 00 56 00 41 03 71 41 01 0F 65 41 01 0F E5 41 80  // .V.A.qA..eA...A.
    C130: 01 02 7E 53 41 01 A5 7D 53 04 3D 65 01 04 47 28  // ..~SA..}S.=e..G(
    C140: 01 01 0D 7D 53 01 13 43 57 01 01 A2 7D 53 40 01  // ...}S..CW...}S@.
    C150: 0D 7D 53 01 31 43 57 01 07 65 7D 53 EF 01 A5 7D  // .}S.1CW..e}S...}
    C160: 53 03 3E 25 40 04 46 57 01 01 A2 7D 53 40 31 A5  // S.>%@.FW...}S@1.
    C170: 7D 53 01 5C 65 7D 53 FD 20 0D 25 78 53 01 03 A5  // }S.\e}S. .%xS...
    C180: 41 00 43 BA 01 03 05 41 01 00 00 80 03 AA 41 40  // A.C....A......A@
    C190: 01 02 7E 53 41 3D 65 01 01 49 82 01 02 A8 00 7E  // ..~SA=e..I.....~
    C1A0: 53 43 F9 01 56 00 41 03 1A 41 40 3B 02 41 03 28  // SC..V.A..A@;.A.(
    C1B0: 41 7E 53 03 68 41 7E 53 03 A8 41 7E 53 03 E8 41  // A~S.hA~S..A~S..A
    C1C0: 7E 53 04 02 00 41 56 28 40 2D 8D 40 04 00 3E 25  // ~S...AV(@-.@..>%
    C1D0: 40 04 47 F9 01 33 25 40 04 43 36 01 02 65 00 02  // @.G..3%@.C6..e..
    C1E0: 03 0D 41 64 00 33 0D 41 01 00 3E 0D 41 00 00 44  // ..Ad.3.A..>.A..D
    C1F0: F9 01 51 64 4A 25 7A 53 10 44 C3 01 4A 65 7A 53  // ..QdJ%zS.D..JezS
    C200: 06 49 F9 01 02 65 00 01 0D 25 79 53 02 3E A5 41  // .I...e...%yS.>.A
    C210: 00 44 63 01 4B 25 01 01 44 F3 00 0D 25 79 53 02  // .Dc.K%..D...%yS.
    C220: 01 25 78 53 02 51 01 54 00 78 53 54 00 7F 53 5B  // .%xS.Q.T.xST..S[
    C230: 7A 10 00 90 5D 01 00 94 5D 03 02 98 5D 05 04 9C  // z...]...]...]...
    C240: 5D 42 41 00 46 00 02 02 00 04 37 00 00 55 30 00  // ]BA.F.....7..U0.
    C250: 32 25 00 01 20 25 00 08 56 08 48 03 22 48 40 0D  // 2%.. %..V.H."H@.
    C260: A5 D5 53 01 02 A0 00 D4 53 08 A5 00 03 4A 25 D4  // ..S.....S....J%.
    C270: 53 02 44 3C 00 5C 0D D5 53 FF FE 01 00 43 42 00  // S.D<.\..S....CB.
    C280: 0D 0D D5 53 01 01 3A 00 00 5B 3A 01 01 08 08 00  // ...S..:..[:.....
    C290: 03 01 00 00 3D E5 00 01 44 33 00 3D E5 00 02 44  // ....=...D3.=...D
    C2A0: 33 00 02 05 00 00 00 01 00 52 29 20 05 00 64 00  // 3........R) ..d.
    C2B0: 00 00 03 02 46 40 02 02 00 00 43 93 00 02 05 00  // ....F@....C.....
    C2C0: 01 00 02 00 52 29 03 01 01 00 02 02 00 00 03 01  // ....R)..........
    C2D0: 46 00 56 38 46 03 05 40 80 C3 C9 01 27 02 40 46  // F.V8F..@....'.@F
    C2E0: 2D 05 40 31 00 00 00 27 05 40 32 00 00 00 21 05  // -.@1...'.@2...!.
    C2F0: 40 32 00 00 00 21 02 46 40 03 02 46 40 55 00 03  // @2...!.F@..F@U..
    C300: 27 05 46 19 00 00 00 7C 05 40 00 40 00 00 7E 02  // '.F....|.@.@..~.
    C310: 40 01 02 8A 01 40 02 1A 01 40 55 00 02 55 38 00  // @....@...@U..U8.
    C320: 03 05 40 00 32 00 00 3D 05 00 00 00 00 00 44 D1  // ..@.2..=......D.
    C330: 00 03 02 40 46 27 01 40 00 3E 05 40 9C 18 00 00  // ...@F'.@.>.@....
    C340: 47 C0 00 03 05 40 00 32 00 00 3E 05 40 C8 00 00  // G....@.2..>.@...
    C350: 00 46 D1 00 03 05 40 C8 00 00 00 66 FF 2D 0D 42  // .F....@....f.-.B
    C360: 1A 01 3E 0C 40 02 00 47 E8 00 2D 0D 42 08 00 43  // ..>.@..G..-.B..C
    C370: D8 00 33 0C 40 00 00 27 0C 40 06 00 2D 0C 40 04  // ..3.@..'.@..-.@.
    C380: 00 02 E2 00 40 33 0C 40 04 00 21 0C 40 06 00 2D  // ....@3.@..!.@..-
    C390: 0C 40 00 00 27 02 46 40 02 0A 00 40 02 B2 00 40  // .@..'.F@...@...@
    C3A0: 5B 7A 20 00 C8 00 40 06 08 00 19 00 40 06 80 0C  // [z ...@.....@...
    C3B0: 40 00 32 00 80 0C 38 18 60 00 64 00 00 32 00 32  // @.2...8.`.d..2.2
    C3C0: 7F 00 64 00 07 00 02 01 00 00 5B 00 3B 03 01 05  // ..d.......[.;...
    C3D0: 00 00 37 00 00 0E 25 00 60 52 14 08 25 00 0F 42  // ..7...%.`R..%..B
    C3E0: 29 00 63 0F 53 00 63 11 0C 02 63 12 7D 02 63 01  // ).c.S.c...c.}.c.
    C3F0: D5 02 63 00 21 03 63 08 D6 01 63 09 B7 01 63 0A  // ..c.!.c...c...c.
    C400: BE 01 63 13 C6 01 63 14 CE 01 63 0B DE 01 63 0C  // ..c...c...c...c.
    C410: C5 02 63 0D E6 01 63 10 FF 01 5A 5A 43 B3 01 54  // ..c...c...ZZC..T
    C420: 00 9A 55 01 0D 2B 55 1F 00 3D A5 00 00 44 72 00  // ..U..+U..=...Dr.
    C430: 3D A5 00 02 44 A1 01 3D A5 00 05 49 A9 01 54 00  // =...D..=...I..T.
    C440: C9 55 3D 25 02 00 49 81 00 02 25 02 02 32 25 02  // .U=%..I...%..2%.
    C450: 01 01 E1 C9 55 02 4A 25 CC 55 01 49 D8 00 7B 05  // ....U.J%.U.I..{.
    C460: 01 00 80 00 00 7E 05 40 8C 0A 00 00 56 00 46 03  // .....~.@....V.F.
    C470: 29 46 02 27 02 40 46 07 65 D0 55 FE 01 05 D1 55  // )F.'.@F.e.U....U
    C480: 00 80 00 00 01 02 D2 55 40 0D E5 D3 55 10 0D 65  // .......U@...U..e
    C490: 28 55 04 03 21 40 02 15 25 40 05 01 E2 CA 55 40  // (U..!@..%@....U@
    C4A0: 54 20 CE 55 02 A0 02 28 55 03 0A 46 48 08 A5 02  // T .U...(U..FH...
    C4B0: 07 56 00 40 03 31 40 02 21 0D 40 80 00 03 8A 46  // .V.@.1@.!.@....F
    C4C0: 40 03 0A 48 40 03 88 40 EA 4F 03 08 40 EF 4F 2D  // @..H@..@.O..@.O-
    C4D0: 05 40 01 00 01 00 03 98 41 EB 4F 03 18 41 F6 4F  // .@......A.O..A.O
    C4E0: 03 0A 48 46 3C 02 0C 56 40 44 B3 01 01 02 0C 56  // ..HF<..V@D.....V
    C4F0: 40 01 02 0D 56 41 03 1A 48 46 03 00 40 EB 4F 33  // @...VA..HF..@.O3
    C500: 1A 40 40 33 08 40 36 41 33 08 40 36 41 03 00 41  // .@@3.@6A3.@6A..A
    C510: F6 4F 33 1A 41 41 33 08 41 37 41 33 08 41 37 41  // .O3.AA3.A7A3.A7A
    C520: 03 0A 48 46 01 0A 0F 56 41 01 8A 0F 56 40 03 1A  // ..HF...VA...V@..
    C530: 48 46 03 00 40 EC 4F 33 8A 40 40 03 00 41 F7 4F  // HF..@.O3.@@..A.O
    C540: 33 8A 41 41 4A 25 ED 4F 01 44 84 01 0F E5 40 80  // 3.AAJ%.O.D....@.
    C550: 4A 25 F8 4F 01 44 90 01 0F E5 41 80 03 0A 48 46  // J%.O.D....A...HF
    C560: 01 1A 0E 56 41 01 9A 0E 56 40 43 B3 01 01 05 9A  // ...VA...V@C.....
    C570: 55 00 00 00 00 07 E5 28 55 2F 0D 65 28 55 04 3A  // U......(U/.e(U.:
    C580: 00 00 5B 54 20 D8 55 43 B3 01 01 25 D8 55 01 43  // ..[T .UC...%.U.C
    C590: B3 01 01 25 D8 55 02 43 B3 01 01 25 D8 55 03 43  // ...%.U.C...%.U.C
    C5A0: B3 01 07 25 C8 55 EF 43 B3 01 0D 25 C8 55 10 43  // ...%.U.C...%.U.C
    C5B0: B3 01 0D 65 D0 55 01 51 0A 07 25 CD 55 FE 51 0A  // ...e.U.Q..%.U.Q.
    C5C0: 01 0D CC 55 01 02 51 C8 43 B3 01 0D 25 DE 55 10  // ...U..Q.C...%.U.
    C5D0: 01 31 CF 55 00 43 B3 01 01 69 6F 55 02 3D A5 00  // .1.U.C...ioU.=..
    C5E0: 03 49 28 02 4A 25 35 55 10 49 28 02 01 A5 6F 55  // .I(.J%5U.I(...oU
    C5F0: 02 43 2D 02 01 B1 6F 55 00 3D 25 02 00 44 42 02  // .C-...oU.=%..DB.
    C600: 32 25 02 01 14 25 02 04 5C E1 6F 55 8F 02 3D E5  // 2%...%..\.oU..=.
    C610: 00 04 47 51 02 0D 25 6F 55 01 43 56 02 07 25 6F  // ..GQ..%oU.CV..%o
    C620: 55 FE 3D A5 00 05 44 64 02 3D A5 00 00 49 75 02  // U.=...Dd.=...Iu.
    C630: 02 A5 00 00 03 39 40 00 33 25 40 01 01 22 CB 55  // .....9@.3%@..".U
    C640: 40 02 E0 02 70 55 43 B3 01 02 E0 02 70 55 4B E5  // @...pUC.....pUK.
    C650: 02 01 44 B3 01 02 B0 00 6F 55 02 E5 00 04 4A 25  // ..D.....oU....J%
    C660: 6F 55 01 44 9E 02 02 E5 00 08 3D A5 00 02 44 AC  // oU.D......=...D.
    C670: 02 3D A5 00 03 49 B5 02 54 00 70 55 50 02 43 B3  // .=...I..T.pUP.C.
    C680: 01 02 A5 00 00 03 31 43 00 4A 62 6F 55 44 44 B3  // ......1C.JboUDD.
    C690: 01 54 08 CC 55 51 C8 0D 25 CD 55 01 51 32 43 B3  // .T..UQ..%.U.Q2C.
    C6A0: 01 0D 25 70 55 01 3D A5 00 00 44 EA 02 01 0D A1  // ..%pU.=...D.....
    C6B0: 55 0F 01 43 FB 02 03 39 43 00 03 02 40 44 33 25  // U..C...9C...@D3%
    C6C0: 40 01 01 0A A1 55 40 3A 00 00 20 25 00 02 03 22  // @....U@:.. %..."
    C6D0: 43 40 03 22 40 44 15 25 40 01 0D 22 5E 5D 40 51  // C@."@D.%@.."^]@Q
    C6E0: 64 69 25 40 FF 07 22 5E 5D 40 43 B3 01 54 00 A1  // di%@.."^]@C..T..
    C6F0: 55 07 25 70 55 FE 07 0D 6F 55 FE 80 54 20 C8 55  // U.%pU...oU..T .U
    C700: 54 20 D8 55 43 B3 01 00 46 01 01 06 00 00 37 00  // T .UC...F.....7.
    C710: 00 42 29 00 63 07 24 01 63 01 25 00 63 00 C0 00  // .B).c.$.c.%.c...
    C720: 63 0B 27 01 63 04 2C 01 5A 5A 43 3F 01 02 65 00  // c.'.c.,.ZZC?..e.
    C730: 11 52 04 4B E5 02 01 49 20 01 02 65 00 0A 55 08  // .R.K...I ..e..U.
    C740: 02 52 4D 3D E5 00 04 47 50 00 68 25 00 01 02 25  // .RM=...GP.h%...%
    C750: 02 01 52 4D 68 25 00 01 3D A5 00 00 49 82 00 20  // ..RMh%..=...I.. 
    C760: 05 01 64 00 00 00 02 05 01 14 1E 00 02 2C 21 01  // ..d..........,!.
    C770: 00 02 01 02 00 02 02 00 40 52 0C 26 05 00 64 00  // ........@R.&..d.
    C780: 00 00 02 02 01 40 02 01 00 02 02 65 00 01 55 08  // .....@.....e..U.
    C790: 02 52 4D 3D E5 00 04 47 A0 00 68 25 00 01 02 25  // .RM=...G..h%...%
    C7A0: 02 01 52 4D 68 25 00 01 51 05 02 65 00 01 52 04  // ..RMh%..Q..e..R.
    C7B0: 51 0A 02 65 00 09 52 4D 3D E5 00 04 47 20 01 68  // Q..e..RM=...G .h
    C7C0: 25 00 01 52 4D 43 20 01 02 65 00 12 52 04 4B E5  // %..RMC ..e..R.K.
    C7D0: 02 01 44 20 01 02 65 00 08 52 4D 3D E5 00 04 47  // ..D ..e..RM=...G
    C7E0: E4 00 68 25 00 01 52 4D 68 25 00 01 02 65 00 00  // ..h%..RMh%...e..
    C7F0: 52 04 02 65 00 00 52 4D 3D E5 00 04 47 01 01 68  // R..e..RM=...G..h
    C800: 25 00 01 52 4D 68 25 00 01 3D A5 00 00 49 20 01  // %..RMh%..=...I .
    C810: 02 01 02 00 02 05 01 14 00 00 00 2C 21 01 00 55  // ...........,!..U
    C820: 00 00 52 0C 02 01 00 02 3A 00 00 5B 43 20 01 52  // ..R.....:..[C .R
    C830: 4D 43 20 01 66 06 02 29 00 00 02 68 00 4E 00 02  // MC .f..)...h.N..
    C840: 8C 00 20 00 52 33 5B 02 29 00 00 52 33 5B 8B 03  // .. .R3[.)..R3[..
    C850: 02 01 00 00 37 00 00 0E 25 00 20 52 14 08 25 00  // ....7...%. R..%.
    C860: 0F 42 29 00 63 07 35 00 63 0A 3D 00 63 01 33 01  // .B).c.5.c.=.c.3.
    C870: 63 00 8D 01 63 09 CD 01 63 08 02 02 63 0B 1A 02  // c...c...c...c...
    C880: 5A 5A 5B 0D 65 EC 5D 08 43 87 03 03 0A 46 48 66  // ZZ[.e.].C....FHf
    C890: 07 2D 0C 42 08 00 56 00 40 20 25 00 05 2D 0A 42  // .-.B..V.@ %..-.B
    C8A0: 40 20 25 00 02 03 0A 48 40 01 04 2E 5D 00 00 01  // @ %....H@...]...
    C8B0: 64 2D 5D 04 00 07 E5 2D 5D FC 07 A5 2D 5D 8F 03  // d-]....-]...-]..
    C8C0: 0A 48 46 56 00 41 5C FA FB 5D FC 41 3D A5 00 00  // .HFV.A\..].A=...
    C8D0: 49 A7 00 07 A5 E9 5D 7F 66 07 2D 0C 42 06 00 2D  // I.....].f.-.B..-
    C8E0: 0D 42 06 00 56 00 41 3D A5 02 14 49 23 03 03 25  // .B..V.A=...I#..%
    C8F0: 41 20 43 23 03 0D A5 E9 5D 80 66 1E 2D 0D 42 C4  // A C#....].f.-.B.
    C900: 00 3D A5 00 02 44 CE 00 2D 0D 42 0C 00 3D 05 01  // .=...D..-.B..=..
    C910: 40 9C 00 00 47 CE 00 2D 0D 42 0C 00 03 21 43 00  // @...G..-.B...!C.
    C920: 03 E2 41 44 4C E4 41 05 00 49 21 01 66 07 2D 0C  // ..ADL.A..I!.f.-.
    C930: 42 04 00 2D 0D 42 02 00 03 04 40 00 00 3E 05 40  // B..-.B....@..>.@
    C940: 00 00 00 00 44 87 03 03 21 43 00 03 E2 41 44 4C  // ....D...!C...ADL
    C950: E4 41 05 00 44 19 01 3D A4 00 04 00 49 19 01 3D  // .A..D..=....I..=
    C960: 04 01 00 00 47 21 01 2D 0D 42 0C 00 43 EA 00 03  // ....G!.-.B..C...
    C970: 04 40 06 00 03 24 41 0A 00 03 64 41 0B 00 43 2C  // .@...$A...dA..C,
    C980: 03 07 65 EC 5D F7 03 0A 46 48 56 00 41 3D E5 00  // ..e.]...FHV.A=..
    C990: 04 47 4E 01 07 25 0A 5E F9 43 54 01 5C 25 0A 5E  // .GN..%.^.CT.\%.^
    C9A0: F9 02 4A 65 08 5E 01 44 54 01 07 25 08 5E F8 4A  // ..Je.^.DT..%.^.J
    C9B0: 65 08 5E 01 44 61 01 2D E5 41 01 2D 0D 48 10 00  // e.^.Da.-.A.-.H..
    C9C0: 3E E5 41 04 45 3F 01 03 0A 48 46 0D 25 F9 5D 02  // >.A.E?...HF.%.].
    C9D0: 4A 25 F9 5D 04 44 82 01 43 87 03 07 25 F9 5D FD  // J%.].D..C...%.].
    C9E0: 4A 25 F9 5D 04 49 92 01 0D 65 EC 5D 08 56 00 41  // J%.].I...e.].V.A
    C9F0: 4A 65 08 5E 01 44 A2 01 5C 25 08 5E F8 04 51 02  // Je.^.D..\%.^..Q.
    CA00: 4A 65 08 5E 01 44 B2 01 2D A5 41 01 2D 0D 48 10  // Je.^.D..-.A.-.H.
    CA10: 00 3E A5 41 04 45 A2 01 43 87 03 03 0A 46 48 56  // .>.A.E..C....FHV
    CA20: 08 48 20 25 00 02 03 22 48 40 0D 25 2D 5D 01 51  // .H %..."H@.%-].Q
    CA30: 64 07 25 2D 5D FE 0D E5 2E 5D 10 03 0A 48 46 0D  // d.%-]....]...HF.
    CA40: A5 FB 5D 01 51 14 0D 25 FB 5D 01 51 14 43 87 03  // ..].Q..%.].Q.C..
    CA50: 07 A5 FB 5D FE 56 00 40 20 25 00 02 03 0A 48 40  // ...].V.@ %....H@
    CA60: 07 E5 2E 5D EF 43 87 03 08 A5 00 1B 66 1E 2D 0D  // ...].C......f.-.
    CA70: 42 C0 02 03 21 43 00 03 A2 46 44 03 0C 46 02 00  // B...!C...FD..F..
    CA80: 4C A4 46 00 00 49 89 02 66 1E 2D 0D 42 E8 00 3D  // L.F..I..f.-.B..=
    CA90: 05 01 48 3F 00 00 47 74 02 66 1E 2D 0D 42 50 02  // ..H?..Gt.f.-.BP.
    CAA0: 3D 05 01 78 69 00 00 47 74 02 66 1E 2D 0D 42 88  // =..xi..Gt.f.-.B.
    CAB0: 02 3D 05 01 F0 D2 00 00 47 74 02 66 1E 2D 0D 42  // .=......Gt.f.-.B
    CAC0: 20 01 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C  //  ..!C...FD..F..L
    CAD0: A4 46 00 00 44 AC 02 2D 0D 42 06 00 56 20 41 3D  // .F..D..-.B..V A=
    CAE0: A4 00 00 00 44 23 03 2D 25 41 01 3E 25 41 0A 44  // ....D#.-%A.>%A.D
    CAF0: AC 02 2D 0D 42 05 00 43 91 02 66 07 2D 0C 42 06  // ..-.B..C..f.-.B.
    CB00: 00 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C A4  // ..!C...FD..F..L.
    CB10: 46 00 00 49 D0 02 2D 0C 42 04 00 43 BB 02 2D 0D  // F..I..-.B..C..-.
    CB20: 42 06 00 3D 05 01 48 3F 00 00 47 08 03 03 0A 40  // B..=..H?..G....@
    CB30: 46 21 0D 40 0A 00 2D 0A 42 40 3D 05 01 78 69 00  // F!.@..-.B@=..xi.
    CB40: 00 47 08 03 2D 0A 42 40 3D 05 01 F0 D2 00 00 47  // .G..-.B@=......G
    CB50: 08 03 2D 0A 42 40 3D A4 00 00 00 44 23 03 03 24  // ..-.B@=....D#..$
    CB60: 41 00 00 3E 25 41 18 44 23 03 2D 0A 42 46 43 08  // A..>%A.D#.-.BFC.
    CB70: 03 03 04 40 01 00 03 65 41 08 01 0A EB 5D 40 01  // ...@...eA....]@.
    CB80: 05 03 5E 88 88 01 00 01 F2 04 5E 40 01 BA 0A 5E  // ..^.......^@...^
    CB90: 40 01 BA 1A 5E 40 01 BA 2A 5E 40 01 BA 3A 5E 40  // @...^@..*^@..:^@
    CBA0: 01 25 09 5E 20 01 25 19 5E 20 01 25 29 5E 20 01  // .%.^ .%.^ .%)^ .
    CBB0: 25 39 5E 20 01 2A 09 5E 41 01 2A 19 5E 41 01 2A  // %9^ .*.^A.*.^A.*
    CBC0: 29 5E 41 01 2A 39 5E 41 3D 65 00 0B 44 87 03 5C  // )^A.*9^A=e..D..\
    CBD0: A2 F0 5D DF 41 3A 00 00 5B 00 44 02 01 02 00 00  // ..].A:..[.D.....
    CBE0: 37 00 00 3D 0D 00 00 00 44 CE 01 56 00 41 03 21  // 7..=....D..V.A.!
    CBF0: 41 01 09 25 41 0F 15 0D 41 02 03 0A 40 42 66 FF  // A..%A...A...@Bf.
    CC00: 2D 0D 42 34 02 2D 0A 42 41 03 0C 48 02 00 0D A5  // -.B4.-.BA..H....
    CC10: 90 5D 01 54 08 90 5D 03 0C 48 00 00 03 F9 41 01  // .].T..]..H....A.
    CC20: 15 3D 41 04 5C BA 10 54 8F 41 03 0A 42 40 4A 25  // .=A.\..T.A..B@J%
    CC30: 10 54 01 49 81 00 0D 0D 10 54 01 01 0D 25 10 54  // .T.I.....T...%.T
    CC40: 10 4A 25 10 54 20 44 67 00 07 25 10 54 EF 4A 25  // .J%.T Dg..%.T.J%
    CC50: 10 54 20 49 74 00 0D 25 13 54 40 56 00 41 03 09  // .T It..%.T@V.A..
    CC60: 41 00 3B 02 41 03 3B 41 00 1B 25 41 04 01 A2 11  // A.;.A.;A..%A....
    CC70: 54 41 03 69 41 01 15 2D 41 04 01 2A 11 54 41 56  // TA.iA..-A..*.TAV
    CC80: 00 40 0F E5 40 80 03 73 40 00 01 02 16 54 40 56  // .@..@..s@....T@V
    CC90: 00 40 03 6B 40 00 01 02 16 54 40 03 63 40 00 01  // .@.k@....T@.c@..
    CCA0: 02 16 54 40 03 7B 40 00 09 65 40 0F 01 02 16 54  // ..T@.{@..e@....T
    CCB0: 40 3E 25 41 04 47 10 01 33 25 41 04 2D 05 46 04  // @>%A.G..3%A.-.F.
    CCC0: 00 00 00 03 63 40 00 01 02 16 54 40 03 6B 40 00  // ....c@....T@.k@.
    CCD0: 01 02 16 54 40 03 73 40 00 01 02 16 54 40 03 7B  // ...T@.s@....T@.{
    CCE0: 40 00 01 02 16 54 40 43 D7 00 0D 25 13 54 02 0D  // @....T@C...%.T..
    CCF0: 25 11 54 01 03 29 40 01 21 25 40 0A 2D 25 40 32  // %.T..)@.!%@.-%@2
    CD00: 4A 25 14 54 01 49 42 01 51 0A 33 25 40 01 3E 25  // J%.T.IB.Q.3%@.>%
    CD10: 40 00 49 26 01 02 65 01 01 43 CA 01 4A 05 14 54  // @.I&..e..C..J..T
    CD20: F0 8F FF 00 44 54 01 02 65 01 02 43 CA 01 01 05  // ....DT..e..C....
    CD30: 16 54 01 00 00 80 03 00 40 16 54 02 6A 01 40 02  // .T......@.T.j.@.
    CD40: B8 01 14 54 08 A5 01 1F 3D A5 01 00 46 7C 01 02  // ...T....=...F|..
    CD50: 65 01 03 43 CA 01 32 A5 01 01 3D 8D 00 00 00 44  // e..C..2...=....D
    CD60: CA 01 3D A5 01 00 44 CA 01 03 31 41 01 03 19 40  // ..=...D...1A...@
    CD70: 00 56 18 40 3B 02 40 03 28 40 16 54 03 68 40 16  // .V.@;.@.(@.T.h@.
    CD80: 54 03 A8 40 16 54 03 E8 40 16 54 04 02 00 40 3E  // T..@.T..@.T...@>
    CD90: 25 41 04 47 CA 01 33 25 41 04 2D 05 46 04 00 00  // %A.G..3%A.-.F...
    CDA0: 00 43 9D 01 3A 00 00 5B 66 FF 2D 0D 42 34 02 03  // .C..:..[f.-.B4..
    CDB0: 0C 48 00 00 01 8D 18 54 18 00 01 05 19 54 00 1C  // .H.....T.....T..
    CDC0: 02 00 01 05 1A 54 10 11 3D 12 2D 0D 42 04 00 2C  // .....T..=.-.B..,
    CDD0: 25 00 01 3D 25 00 04 49 D5 01 56 08 48 03 25 41  // %..=%..I..V.H.%A
    CDE0: 10 0D 65 BF 5D 40 07 65 BF 5D BF 33 25 41 01 3E  // ..e.]@.e.].3%A.>
    CDF0: 25 41 00 49 07 02 0D 25 63 5D 01 54 30 63 5D 0D  // %A.I...%c].T0c].
    CE00: 25 64 5D 01 54 30 64 5D 51 32 5B 7A 10 00 00 00  // %d].T0d]Q2[z....
    CE10: 00 00 1C 00 04 00 38 00 08 00 54 00 0C 00 5C 00  // ......8...T...\.
    CE20: 01 02 00 04 02 25 01 04 03 31 41 00 09 0D 41 0F  // .....%...1A...A.
    CE30: 00 15 0D 41 01 66 FF 2D 0D 42 50 00 2D 0A 42 41  // ...A.f.-.BP.-.BA
    CE40: 03 0C 48 00 00 07 A5 90 5D FE 01 0D 90 5D 11 11  // ..H.....]....]..
    CE50: 50 02 4A 0D 93 5D 01 00 49 41 00 02 25 01 13 54  // P.J..]..IA..%..T
    CE60: 08 90 5D 54 00 92 5D 3A 00 00 5B 7A 0C 00 00 00  // ..]T..]:..[z....
    CE70: 04 00 08 00 0C 00 10 00 14 00 34 01 02 01 04 04  // ..........4.....
    CE80: 37 00 00 42 21 00 63 07 29 00 63 03 53 00 63 02  // 7..B!.c.).c.S.c.
    CE90: 65 00 63 04 83 00 63 0C 11 01 63 0D 22 01 5A 5A  // e.c...c...c.".ZZ
    CEA0: 43 33 01 01 0D 45 5D 9F 0F 01 25 46 5D 00 66 06  // C3...E]...%F].f.
    CEB0: 01 24 47 5D 30 00 01 4C 47 5D 31 00 03 24 46 3B  // .$G]0..LG]1..$F;
    CEC0: 00 3E 25 46 00 44 33 01 54 20 47 5D 5B 0D E5 47  // .>%F.D3.T G][..G
    CED0: 5D 01 5C 05 43 5D FF FF FF FD 11 00 00 00 5B 0D  // ].\.C]........[.
    CEE0: E5 47 5D 01 4A 25 44 5D 02 44 77 00 0D A5 43 5D  // .G].J%D].Dw...C]
    CEF0: 01 0D A5 43 5D 02 5C 25 43 5D EF 01 5B 4A 05 53  // ...C].\%C]..[J.S
    CF00: 00 00 02 00 00 44 93 00 0D 25 4B 5D 01 3D 8D 00  // .....D...%K].=..
    CF10: 00 00 44 10 01 03 05 46 00 36 6E 01 56 00 41 03  // ..D....F.6n.V.A.
    CF20: 19 41 00 21 05 41 FF 0F 00 00 27 02 46 40 3E 05  // .A.!.A....'.F@>.
    CF30: 41 00 00 00 00 44 C3 00 2D 0D 40 01 00 01 8A 45  // A....D..-.@....E
    CF40: 5D 40 56 00 41 03 19 41 00 21 02 40 41 27 02 46  // ]@V.A..A.!.@A'.F
    CF50: 40 01 A5 4A 5D 0C 01 0A 4A 5D 40 15 05 40 04 56  // @..J]...J]@..@.V
    CF60: 00 41 03 29 41 00 2D 0D 41 01 00 21 02 40 41 1B  // .A.)A.-.A..!.@A.
    CF70: 05 40 08 01 0A 48 5D 40 0D E5 48 5D C0 07 25 4B  // .@...H]@..H]..%K
    CF80: 5D FE 4A 65 4B 5D 01 49 08 01 5B 5C E5 43 5D FE  // ].JeK].I..[\.C].
    CF90: 02 07 E5 47 5D FE 0D 25 43 5D 11 5B 0D E5 47 5D  // ...G]..%C].[..G]
    CFA0: 01 5C 05 43 5D EF FF FD FD 01 00 00 00 5B CB 00  // .\.C]........[..
    CFB0: 03 02 00 10 37 00 00 56 00 40 4A 25 00 EC 01 44  // ....7..V.@J%...D
    CFC0: 30 00 4A 25 05 EC 1E 49 30 00 03 25 40 01 01 05  // 0.J%...I0..%@...
    CFD0: 05 EC 03 00 00 00 4A 65 05 EC 0F 49 28 00 3D 65  // ......Je...I(.=e
    CFE0: 02 00 49 3B 00 2C 25 02 F4 3D E5 02 00 49 46 00  // ..I;.,%..=...IF.
    CFF0: 2C A5 02 F4 3D 65 02 02 49 4D 00 03 01 40 03 09  // ,...=e..IM...@..
    D000: 05 40 00 00 00 FC 3E 05 40 00 00 00 D0 49 73 00  // .@....>.@....Is.
    D010: 01 05 63 C0 00 00 00 40 55 00 00 55 20 02 43 77  // ..c....@U..U .Cw
    D020: 00 54 00 63 C0 01 01 64 C0 00 56 00 40 03 21 40  // .T.c...d..V.@.!@
    D030: 02 01 02 65 C0 40 01 01 66 C0 01 03 31 40 02 01  // ...e.@..f...1@..
    D040: 02 67 C0 40 01 01 E8 C0 03 3D 65 02 01 44 AB 00  // .g.@.....=e..D..
    D050: 3D E5 02 01 44 AB 00 51 02 4A E5 A0 21 80 49 AB  // =...D..Q.J..!.I.
    D060: 00 3E 25 40 01 49 CA 00 01 05 05 EC 01 00 00 00  // .>%@.I..........
    D070: 4A 65 05 EC 0F 49 C2 00 5B 00 0D 02 02 01 00 00  // Je...I..[.......
    D080: 37 00 00 3D 25 01 01 44 5D 00 3D 25 01 02 44 F1  // 7..=%..D].=%..D.
    D090: 00 3D 25 01 00 49 F6 01 3D 05 00 00 00 00 00 49  // .=%..I..=......I
    D0A0: 39 00 3A 00 00 0D 25 A4 53 01 4A 65 A4 53 01 44  // 9.:...%.S.Je.S.D
    D0B0: 30 00 5B 54 20 A4 53 26 05 00 64 00 00 00 02 02  // 0.[T .S&..d.....
    D0C0: 01 40 02 05 00 04 00 00 00 52 13 20 05 01 64 00  // .@.......R. ..d.
    D0D0: 00 00 02 02 00 40 5B 02 01 02 01 02 05 00 05 00  // .....@[.........
    D0E0: 00 00 02 05 01 58 02 00 00 52 13 20 05 01 40 42  // .....X...R. ..@B
    D0F0: 0F 00 02 02 00 40 02 01 01 02 56 00 46 66 08 03  // .....@....V.Ff..
    D100: 0C 46 0C 00 26 05 00 40 0D 03 00 21 02 40 46 32  // .F..&..@...!.@F2
    D110: 02 00 40 07 0D 18 01 F8 FE 66 08 03 0C 41 0C 00  // ..@......f...A..
    D120: 3E 0D 41 00 00 44 CD 00 01 A5 15 01 01 01 05 13  // >.A..D..........
    D130: 01 C0 12 00 00 01 01 14 01 00 0D 25 15 01 01 4A  // ...........%...J
    D140: 65 15 01 02 44 C5 00 01 01 42 01 00 01 01 46 01  // e...D....B....F.
    D150: 00 01 01 4A 01 00 01 01 4E 01 00 3D 65 01 02 49  // ...J....N..=e..I
    D160: F0 00 5C 0D 18 01 F8 FF 01 01 5B 66 FF 2D 0D 42  // ..\.......[f.-.B
    D170: FD 01 56 00 41 03 39 41 01 15 25 41 02 2D 0A 42  // ..V.A.9A..%A.-.B
    D180: 41 3D 65 01 0B 49 64 01 20 05 00 64 00 00 00 03  // A=e..Id. ..d....
    D190: 0C 48 02 00 03 00 41 40 01 0F 25 41 10 09 0D 41  // .H....A@..%A...A
    D1A0: DF FF 03 0C 48 00 00 4A 05 01 50 01 00 00 00 44  // ....H..J..P....D
    D1B0: 4D 01 03 0C 48 02 00 3C 02 41 01 40 49 4D 01 3C  // M...H..<.A.@IM.<
    D1C0: 02 40 01 41 44 F6 01 03 0C 48 02 00 07 25 40 01  // .@.AD....H...%@.
    D1D0: EF 01 02 41 01 40 01 0A 40 01 41 43 F6 01 56 00  // ...A.@..@.AC..V.
    D1E0: 40 03 8D 40 0C 00 3D 65 01 18 44 87 01 03 8D 40  // @..@..=e..D....@
    D1F0: 3E 00 3D 65 01 19 44 87 01 03 A9 40 01 33 A5 40  // >.=e..D....@.3.@
    D200: 14 03 31 40 01 09 25 40 03 15 25 40 04 0F 0D 40  // ..1@..%@..%@...@
    D210: 01 01 56 00 41 03 29 41 01 33 25 41 14 03 0C 48  // ..V.A.)A.3%A...H
    D220: 00 00 4A 05 01 50 01 00 00 00 44 D4 01 03 0C 48  // ..J..P....D....H
    D230: 02 00 4A 25 40 01 10 49 D4 01 3C 22 43 01 41 49  // ..J%@..I..<"C.AI
    D240: D4 01 03 1A 48 40 3C 0A 00 01 40 44 F6 01 03 1A  // ....H@<...@D....
    D250: 48 40 07 25 00 01 FE 03 0C 48 02 00 01 22 43 01  // H@.%.....H..."C.
    D260: 41 07 0D 40 01 EF FF 03 1A 48 40 01 0A 00 01 40  // A..@.....H@....@
    D270: 3A 00 00 5B 7A 10 00 00 00 00 00 80 00 04 00 00  // :..[z...........
    D280: 01 08 00 80 01 0C 00 00 F2 00 01 01 04 00 37 00  // ..............7.
    D290: 00 56 00 00 66 1E 2D 0D 42 4C 00 56 00 40 21 25  // .V..f.-.BL.V.@!%
    D2A0: 00 10 2D 0A 42 40 03 24 41 0C 00 4C 25 41 08 44  // ..-.B@.$A..L%A.D
    D2B0: E6 00 02 25 00 64 02 0D 01 01 01 02 E4 01 06 00  // ...%.d..........
    D2C0: 0E E5 01 90 66 1E 03 24 41 08 00 4C 25 41 20 49  // ....f..$A..L%A I
    D2D0: 64 00 43 64 00 2D 0D 42 35 02 02 A4 01 00 00 03  // d.Cd.-.B5.......
    D2E0: 64 00 01 00 2D 0D 42 03 00 43 CC 00 3E 0D 00 00  // d...-.B..C..>...
    D2F0: 00 44 87 00 3E 0D 00 01 00 44 9E 00 3E 0D 00 02  // .D..>....D..>...
    D300: 00 44 B5 00 3E 0D 00 03 00 44 4D 00 43 E6 00 2D  // .D..>....DM.C..-
    D310: 0D 42 E4 01 02 A4 01 00 00 03 64 00 01 00 2D 0D  // .B........d...-.
    D320: 42 03 00 43 CC 00 2D 0D 42 FF 01 02 A4 01 00 00  // B..C..-.B.......
    D330: 03 64 00 01 00 2D 0D 42 03 00 43 CC 00 2D 0D 42  // .d...-.B..C..-.B
    D340: 1A 02 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03  // ........d...-.B.
    D350: 00 43 CC 00 3E 65 00 00 44 E6 00 33 65 00 01 02  // .C..>e..D..3e...
    D360: 4C 00 00 00 52 36 2D 0D 42 02 00 43 CC 00 2D 25  // L...R6-.B..C..-%
    D370: 00 01 3E 25 00 04 45 0C 00 5B FF FF FF FF FF FF  // ..>%..E..[......
    D380: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D390: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D400: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D410: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D420: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D430: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D440: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D450: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D460: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D480: 00 00 00 00                                      // ....


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Migrations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 90
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 90 41 43 52 53 59 53  // WSMT(.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 07 00 00 00                          // ........


