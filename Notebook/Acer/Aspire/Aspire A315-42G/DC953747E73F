
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20200110
Copyright (c) 2000 - 2020 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x000008E0  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 02)  MCFG  0x0000003C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 03)  ASF!  0x000000A5  0x20  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 04)  APIC  0x00000138  0x03  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 05)  CRAT  0x00000490  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 06)  SSDT  0x00005A21  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 07)  TPM2  0x00000034  0x04  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 08)  VFCT  0x0000D484  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 09)  BOOT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 10)  SSDT  0x00000050  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 11)  CDIT  0x00000029  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 12)  UEFI  0x00000236  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 13)  IVRS  0x0000013E  0x02  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 14)  DSDT  0x00007562  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 15)  SSDT  0x00000C33  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 16)  WSMT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 17)  SSDT  0x00000164  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 18)  SSDT  0x000001D4  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 19)  SSDT  0x0000107C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 20)  SSDT  0x0000046D  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 21)  FACP  0x0000010C  0x05  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 22)  FPDT  0x00000044  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 23)  SSDT  0x00005419  0x02  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 24)  SSDT  0x000010AC  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 25)  SSDT  0x000002EA  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 26)  HPET  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 27)  SSDT  0x000005C1  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 28)  FACS  0x00000040  0x02
 29)  BGRT  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 30)  SSDT  0x00001C55  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000

Found 30 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000138
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 1C
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 01
[037h 0055   1]                Local Apic ID : 01
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 02
[03Fh 0063   1]                Local Apic ID : 02
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 03
[047h 0071   1]                Local Apic ID : 03
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 04
[04Fh 0079   1]                Local Apic ID : 00
[050h 0080   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 05
[057h 0087   1]                Local Apic ID : 00
[058h 0088   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 06
[05Fh 0095   1]                Local Apic ID : 00
[060h 0096   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 07
[067h 0103   1]                Local Apic ID : 00
[068h 0104   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 08
[06Fh 0111   1]                Local Apic ID : 00
[070h 0112   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 09
[077h 0119   1]                Local Apic ID : 00
[078h 0120   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0A
[07Fh 0127   1]                Local Apic ID : 00
[080h 0128   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0B
[087h 0135   1]                Local Apic ID : 00
[088h 0136   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0C
[08Fh 0143   1]                Local Apic ID : 00
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0D
[097h 0151   1]                Local Apic ID : 00
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 00
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 0F
[0A7h 0167   1]                Local Apic ID : 00
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 01 [I/O APIC]
[0ADh 0173   1]                       Length : 0C
[0AEh 0174   1]                  I/O Apic ID : 21
[0AFh 0175   1]                     Reserved : 00
[0B0h 0176   4]                      Address : FEC00000
[0B4h 0180   4]                    Interrupt : 00000000

[0B8h 0184   1]                Subtable Type : 01 [I/O APIC]
[0B9h 0185   1]                       Length : 0C
[0BAh 0186   1]                  I/O Apic ID : 22
[0BBh 0187   1]                     Reserved : 00
[0BCh 0188   4]                      Address : FEC01000
[0C0h 0192   4]                    Interrupt : 00000018

[0C4h 0196   1]                Subtable Type : 02 [Interrupt Source Override]
[0C5h 0197   1]                       Length : 0A
[0C6h 0198   1]                          Bus : 00
[0C7h 0199   1]                       Source : 00
[0C8h 0200   4]                    Interrupt : 00000002
[0CCh 0204   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[0CEh 0206   1]                Subtable Type : 02 [Interrupt Source Override]
[0CFh 0207   1]                       Length : 0A
[0D0h 0208   1]                          Bus : 00
[0D1h 0209   1]                       Source : 09
[0D2h 0210   4]                    Interrupt : 00000009
[0D6h 0214   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[0D8h 0216   1]                Subtable Type : 04 [Local APIC NMI]
[0D9h 0217   1]                       Length : 06
[0DAh 0218   1]                 Processor ID : 00
[0DBh 0219   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0DDh 0221   1]         Interrupt Input LINT : 01

[0DEh 0222   1]                Subtable Type : 04 [Local APIC NMI]
[0DFh 0223   1]                       Length : 06
[0E0h 0224   1]                 Processor ID : 01
[0E1h 0225   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E3h 0227   1]         Interrupt Input LINT : 01

[0E4h 0228   1]                Subtable Type : 04 [Local APIC NMI]
[0E5h 0229   1]                       Length : 06
[0E6h 0230   1]                 Processor ID : 02
[0E7h 0231   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E9h 0233   1]         Interrupt Input LINT : 01

[0EAh 0234   1]                Subtable Type : 04 [Local APIC NMI]
[0EBh 0235   1]                       Length : 06
[0ECh 0236   1]                 Processor ID : 03
[0EDh 0237   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0EFh 0239   1]         Interrupt Input LINT : 01

[0F0h 0240   1]                Subtable Type : 04 [Local APIC NMI]
[0F1h 0241   1]                       Length : 06
[0F2h 0242   1]                 Processor ID : 04
[0F3h 0243   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0F5h 0245   1]         Interrupt Input LINT : 01

[0F6h 0246   1]                Subtable Type : 04 [Local APIC NMI]
[0F7h 0247   1]                       Length : 06
[0F8h 0248   1]                 Processor ID : 05
[0F9h 0249   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0FBh 0251   1]         Interrupt Input LINT : 01

[0FCh 0252   1]                Subtable Type : 04 [Local APIC NMI]
[0FDh 0253   1]                       Length : 06
[0FEh 0254   1]                 Processor ID : 06
[0FFh 0255   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[101h 0257   1]         Interrupt Input LINT : 01

[102h 0258   1]                Subtable Type : 04 [Local APIC NMI]
[103h 0259   1]                       Length : 06
[104h 0260   1]                 Processor ID : 07
[105h 0261   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[107h 0263   1]         Interrupt Input LINT : 01

[108h 0264   1]                Subtable Type : 04 [Local APIC NMI]
[109h 0265   1]                       Length : 06
[10Ah 0266   1]                 Processor ID : 08
[10Bh 0267   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[10Dh 0269   1]         Interrupt Input LINT : 01

[10Eh 0270   1]                Subtable Type : 04 [Local APIC NMI]
[10Fh 0271   1]                       Length : 06
[110h 0272   1]                 Processor ID : 09
[111h 0273   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[113h 0275   1]         Interrupt Input LINT : 01

[114h 0276   1]                Subtable Type : 04 [Local APIC NMI]
[115h 0277   1]                       Length : 06
[116h 0278   1]                 Processor ID : 0A
[117h 0279   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[119h 0281   1]         Interrupt Input LINT : 01

[11Ah 0282   1]                Subtable Type : 04 [Local APIC NMI]
[11Bh 0283   1]                       Length : 06
[11Ch 0284   1]                 Processor ID : 0B
[11Dh 0285   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[11Fh 0287   1]         Interrupt Input LINT : 01

[120h 0288   1]                Subtable Type : 04 [Local APIC NMI]
[121h 0289   1]                       Length : 06
[122h 0290   1]                 Processor ID : 0C
[123h 0291   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[125h 0293   1]         Interrupt Input LINT : 01

[126h 0294   1]                Subtable Type : 04 [Local APIC NMI]
[127h 0295   1]                       Length : 06
[128h 0296   1]                 Processor ID : 0D
[129h 0297   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[12Bh 0299   1]         Interrupt Input LINT : 01

[12Ch 0300   1]                Subtable Type : 04 [Local APIC NMI]
[12Dh 0301   1]                       Length : 06
[12Eh 0302   1]                 Processor ID : 0E
[12Fh 0303   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[131h 0305   1]         Interrupt Input LINT : 01

[132h 0306   1]                Subtable Type : 04 [Local APIC NMI]
[133h 0307   1]                       Length : 06
[134h 0308   1]                 Processor ID : 0F
[135h 0309   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[137h 0311   1]         Interrupt Input LINT : 01

Raw Table Data: Length 312 (0x138)

    0000: 41 50 49 43 38 01 00 00 03 1C 41 43 52 53 59 53  // APIC8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 01 01 01 00 00 00 00 08 02 02  // ................
    0040: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 04 00  // ................
    0050: 00 00 00 00 00 08 05 00 00 00 00 00 00 08 06 00  // ................
    0060: 00 00 00 00 00 08 07 00 00 00 00 00 00 08 08 00  // ................
    0070: 00 00 00 00 00 08 09 00 00 00 00 00 00 08 0A 00  // ................
    0080: 00 00 00 00 00 08 0B 00 00 00 00 00 00 08 0C 00  // ................
    0090: 00 00 00 00 00 08 0D 00 00 00 00 00 00 08 0E 00  // ................
    00A0: 00 00 00 00 00 08 0F 00 00 00 00 00 01 0C 21 00  // ..............!.
    00B0: 00 00 C0 FE 00 00 00 00 01 0C 22 00 00 10 C0 FE  // ..........".....
    00C0: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    00D0: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    00E0: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................
    00F0: 04 06 04 05 00 01 04 06 05 05 00 01 04 06 06 05  // ................
    0100: 00 01 04 06 07 05 00 01 04 06 08 05 00 01 04 06  // ................
    0110: 09 05 00 01 04 06 0A 05 00 01 04 06 0B 05 00 01  // ................
    0120: 04 06 0C 05 00 01 04 06 0D 05 00 01 04 06 0E 05  // ................
    0130: 00 01 04 06 0F 05 00 01                          // ........


ASF!
----
[000h 0000   4]                    Signature : "ASF!"    [Alert Standard Format table]
[004h 0004   4]                 Table Length : 000000A5
[008h 0008   1]                     Revision : 20
[009h 0009   1]                     Checksum : B1
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]                Subtable Type : 00 [ASF Information]
[025h 0037   1]                     Reserved : 00
[026h 0038   2]                       Length : 0010
[028h 0040   1]          Minimum Reset Value : 00
[029h 0041   1]     Minimum Polling Interval : FF
[02Ah 0042   2]                    System ID : 0001
[02Ch 0044   4]              Manufacturer ID : 57010000
[030h 0048   1]                        Flags : 00
[031h 0049   3]                     Reserved : 000000

[034h 0052   1]                Subtable Type : 01 [ASF Alerts]
[035h 0053   1]                     Reserved : 00
[036h 0054   2]                       Length : 002C
[038h 0056   1]                   AssertMask : 00
[039h 0057   1]                 DeassertMask : 00
[03Ah 0058   1]                  Alert Count : 03
[03Bh 0059   1]            Alert Data Length : 0C

[03Ch 0060   1]                      Address : 80
[03Dh 0061   1]                      Command : 23
[03Eh 0062   1]                         Mask : 01
[03Fh 0063   1]                        Value : 01
[040h 0064   1]                   SensorType : 01
[041h 0065   1]                         Type : 01
[042h 0066   1]                       Offset : 00
[043h 0067   1]                   SourceType : 39
[044h 0068   1]                     Severity : 10
[045h 0069   1]                 SensorNumber : 00
[046h 0070   1]                       Entity : 07
[047h 0071   1]                     Instance : 00

[048h 0072   1]                      Address : 80
[049h 0073   1]                      Command : 23
[04Ah 0074   1]                         Mask : 02
[04Bh 0075   1]                        Value : 02
[04Ch 0076   1]                   SensorType : 01
[04Dh 0077   1]                         Type : 01
[04Eh 0078   1]                       Offset : 00
[04Fh 0079   1]                   SourceType : 39
[050h 0080   1]                     Severity : 10
[051h 0081   1]                 SensorNumber : 01
[052h 0082   1]                       Entity : 07
[053h 0083   1]                     Instance : 00

[054h 0084   1]                      Address : 80
[055h 0085   1]                      Command : 23
[056h 0086   1]                         Mask : 04
[057h 0087   1]                        Value : 04
[058h 0088   1]                   SensorType : 01
[059h 0089   1]                         Type : 01
[05Ah 0090   1]                       Offset : 00
[05Bh 0091   1]                   SourceType : 39
[05Ch 0092   1]                     Severity : 10
[05Dh 0093   1]                 SensorNumber : 02
[05Eh 0094   1]                       Entity : 07
[05Fh 0095   1]                     Instance : 00

[060h 0096   1]                Subtable Type : 02 [ASF Remote Control]
[061h 0097   1]                     Reserved : 00
[062h 0098   2]                       Length : 0018
[064h 0100   1]                Control Count : 04
[065h 0101   1]          Control Data Length : 04
[066h 0102   2]                     Reserved : 0000

[068h 0104   1]                     Function : 00
[069h 0105   1]                      Address : 71
[06Ah 0106   1]                      Command : 00
[06Bh 0107   1]                        Value : 00

[06Ch 0108   1]                     Function : 01
[06Dh 0109   1]                      Address : 71
[06Eh 0110   1]                      Command : 02
[06Fh 0111   1]                        Value : 00

[070h 0112   1]                     Function : 02
[071h 0113   1]                      Address : 71
[072h 0114   1]                      Command : 01
[073h 0115   1]                        Value : 00

[074h 0116   1]                     Function : 03
[075h 0117   1]                      Address : 71
[076h 0118   1]                      Command : 03
[077h 0119   1]                        Value : 00

[078h 0120   1]                Subtable Type : 03 [ASF RMCP Boot Options]
[079h 0121   1]                     Reserved : 00
[07Ah 0122   2]                       Length : 0017
[07Ch 0124   7]                 Capabilities : 21 F8 00 00 00 1B F0
[083h 0131   1]              Completion Code : 00
[084h 0132   4]                Enterprise ID : 57010000
[088h 0136   1]                      Command : 00
[089h 0137   2]                    Parameter : 0100
[08Bh 0139   2]                 Boot Options : 7000
[08Dh 0141   2]               Oem Parameters : 1600

[08Fh 0143   1]                Subtable Type : 00 [ASF Information]
[090h 0144   1]                     Reserved : 10
[091h 0145   2]                       Length : 00A0
[093h 0147   1]          Minimum Reset Value : A2
[094h 0148   1]     Minimum Polling Interval : A4
[095h 0149   2]                    System ID : 0000
[097h 0151   4]              Manufacturer ID : 00000000
[09Bh 0155   1]                        Flags : 00
[09Ch 0156   3]                     Reserved : 000000


Raw Table Data: Length 165 (0xA5)

    0000: 41 53 46 21 A5 00 00 00 20 B1 41 43 52 53 59 53  // ASF!.... .ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 00 00 FF 01 00 00 00 01 57  // ...............W
    0030: 00 00 00 00 01 00 2C 00 00 00 03 0C 80 23 01 01  // ......,......#..
    0040: 01 01 00 39 10 00 07 00 80 23 02 02 01 01 00 39  // ...9.....#.....9
    0050: 10 01 07 00 80 23 04 04 01 01 00 39 10 02 07 00  // .....#.....9....
    0060: 02 00 18 00 04 04 00 00 00 71 00 00 01 71 02 00  // .........q...q..
    0070: 02 71 01 00 03 71 03 00 03 00 17 00 21 F8 00 00  // .q...q......!...
    0080: 00 1B F0 00 00 00 01 57 00 00 01 00 70 00 16 00  // .......W....p...
    0090: 10 A0 00 A2 A4 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 00                                   // .....


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 6C
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 00
                                   Displayed : 0
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 000000007DE3D000
[030h 0048   4]                Image OffsetX : 00000240
[034h 0052   4]                Image OffsetY : 000000C4

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 6C 41 43 52 53 59 53  // BGRT8....lACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 00 D0 E3 7D 00 00 00 00  // ...........}....
    0030: 40 02 00 00 C4 00 00 00                          // @.......


BOOT
----
[000h 0000   4]                    Signature : "BOOT"    [Simple Boot Flag Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 69
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]          Boot Register Index : 44
[025h 0037   3]                     Reserved : 000000

Raw Table Data: Length 40 (0x28)

    0000: 42 4F 4F 54 28 00 00 00 01 69 41 43 52 53 59 53  // BOOT(....iACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 44 00 00 00                          // ....D...


CDIT
----
[000h 0000   4]                    Signature : "CDIT"    
[004h 0004   4]                 Table Length : 00000029
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : B2
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 B2 41 43 52 53 59 53  // CDIT).....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 00000490
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F3
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 1168 (0x490)

    0000: 43 52 41 54 90 04 00 00 01 F3 41 43 52 53 59 53  // CRAT......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 13 00 00 00 01 00 00 00 00 00 00 00  // ................
    0030: 00 28 00 00 1D 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 04 00 2C 00 28 00 00 00 00 00 40 00 40 01 00 00  // ..,.(.....@.@...
    0050: 01 0B 04 20 00 00 00 00 01 28 00 00 01 00 00 00  // ... .....(......
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 10 00  // .(..............
    0090: 00 00 00 00 00 00 F0 8F 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    00B0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 70  // ...............p
    00C0: 01 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    00D0: 02 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0100: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0110: 02 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0140: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0150: 02 40 00 00 0F 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0180: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0190: 02 40 00 00 0F 00 00 00 00 00 00 00 0F 00 00 00  // .@..............
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  // ................
    01C0: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    01D0: 02 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0200: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0210: 02 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0240: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0250: 02 40 00 00 0F 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0280: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0290: 03 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    02C0: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    02D0: 03 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0300: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0310: 03 40 00 00 AB 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0340: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0350: 03 40 00 00 AD 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0380: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0390: 03 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    03C0: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    03D0: 03 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0400: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0410: 03 40 00 00 AB 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0440: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0450: 03 40 00 00 AD 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0480: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................


DSDT
----
DefinitionBlock ("", "DSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    /*
     * iASL Warning: There were 9 external control methods found during
     * disassembly, but only 0 were resolved (9 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.C000.PPCV, IntObj)
    External (_PR_.C001.PPCV, UnknownObj)
    External (_PR_.C002.PPCV, UnknownObj)
    External (_PR_.C003.PPCV, UnknownObj)
    External (_PR_.C004.PPCV, UnknownObj)
    External (_PR_.C005.PPCV, UnknownObj)
    External (_PR_.C006.PPCV, UnknownObj)
    External (_PR_.C007.PPCV, UnknownObj)
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.WMID, UnknownObj)
    External (_SB_.PCI0.WMID.FEBC, UnknownObj)
    External (_SB_.TPM2.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (MWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (WMID, UnknownObj)

    OperationRegion (X1ID, SystemMemory, 0xF8404000, 0x10)
    Field (X1ID, AnyAcc, NoLock, Preserve)
    {
        Offset (0x02), 
        XDID,   16
    }

    OperationRegion (DBG0, SystemIO, 0x80, One)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (DBG1, SystemIO, 0x80, 0x02)
    Field (DBG1, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemIO, 0x0CD6, 0x02)
    Field (PMRG, ByteAcc, NoLock, Preserve)
    {
        PMRI,   8, 
        PMRD,   8
    }

    IndexField (PMRI, PMRD, ByteAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMG, SystemMemory, 0xFED81500, 0x03FF)
    Field (GSMG, AnyAcc, NoLock, Preserve)
    {
        Offset (0x0C), 
        Offset (0x0E), 
        GP03,   1, 
        Offset (0x10), 
        Offset (0x12), 
        GP04,   1, 
        Offset (0x234), 
        Offset (0x236), 
        GP8D,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2, 
        Offset (0x3BB), 
            ,   6, 
        PWDE,   1, 
        Offset (0x3E4), 
        BLNK,   2
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
            ,   14, 
        PEWS,   1, 
        WSTA,   1, 
            ,   14, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, 0x0400, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        PRWP [One] = Arg1
        If ((DAS3 == Zero))
        {
            If ((Arg1 <= 0x03))
            {
                PRWP [One] = Zero
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Method (SPTS, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
    }

    Method (SWAK, 1, NotSerialized)
    {
        BLNK = 0x03
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PWDE = One
        PEWD = Zero
    }

    Method (TPST, 1, Serialized)
    {
        Local0 = (Arg0 + 0xB0000000)
        OperationRegion (VARM, SystemIO, 0x80, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        VARR = Local0
    }

    OperationRegion (GNVS, SystemMemory, 0x8F778998, 0x00000189)
    Field (GNVS, AnyAcc, NoLock, Preserve)
    {
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        BRTL,   8, 
        TLST,   8, 
        IGDS,   8, 
        LCDA,   16, 
        CSTE,   16, 
        NSTE,   16, 
        CADL,   16, 
        PADL,   16, 
        LIDS,   8, 
        PWRS,   8, 
        BVAL,   32, 
        ADDL,   16, 
        BCMD,   8, 
        SBFN,   8, 
        DID,    32, 
        INFO,   2048, 
        TOML,   8, 
        TOMH,   8, 
        CEBP,   8, 
        C0LS,   8, 
        C1LS,   8, 
        C0HS,   8, 
        C1HS,   8, 
        ROMS,   32, 
        MUXF,   8, 
        PDDN,   8, 
        CNSB,   8, 
        RDHW,   8, 
        DAS3,   8, 
        TNBH,   8, 
        TCP0,   8, 
        TCP1,   8, 
        ATNB,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PWMN,   8, 
        LPTY,   8, 
        M92D,   8, 
        WKPM,   8, 
        ALST,   8, 
        AFUC,   8, 
        EXUS,   8, 
        GV0E,   8, 
        WLSH,   8, 
        TSSS,   8, 
        AOZP,   8, 
        TZFG,   8, 
        BPS0,   8, 
        NAPC,   8, 
        PCBA,   32, 
        PCBL,   32, 
        WLAN,   8, 
        BLTH,   8, 
        GPSS,   8, 
        NFCS,   8, 
        SBTY,   8, 
        BDID,   16, 
        MWTT,   8, 
        ACPM,   8, 
        KBCS,   8, 
        ACEC,   8, 
        APTC,   8, 
        MM64,   8, 
        HMB1,   64, 
        HMB2,   64, 
        HMM1,   64, 
        HMM2,   64, 
        HML1,   64, 
        HML2,   64, 
        OSYS,   16
    }

    OperationRegion (OGNS, SystemMemory, 0x8F778C18, 0x0000000C)
    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        OG00,   8, 
        OG01,   8, 
        M2WL,   8, 
        THPN,   8, 
        PBAR,   8, 
        THPD,   8, 
        DTEN,   8, 
        SDMO,   8, 
        USBW,   8, 
        OG09,   8, 
        RV2I,   8, 
        ECID,   8
    }

    OperationRegion (XCMS, SystemIO, 0x72, 0x02)
    Field (XCMS, ByteAcc, NoLock, Preserve)
    {
        CMSI,   8, 
        CMSD,   8
    }

    Method (CMSW, 2, NotSerialized)
    {
        CMSI = Arg0
        CMSD = Arg1
    }

    Method (CMSR, 1, NotSerialized)
    {
        CMSI = Arg0
        Return (CMSD) /* \CMSD */
    }

    Method (SCMP, 2, NotSerialized)
    {
        Name (STG1, Buffer (0x50){})
        Name (STG2, Buffer (0x50){})
        STG1 = Arg0
        STG2 = Arg1
        If ((SizeOf (Arg0) != SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = Zero
        While ((Local0 < SizeOf (Arg0)))
        {
            If ((DerefOf (STG1 [Local0]) != DerefOf (STG2 [Local0]
                )))
            {
                Return (Zero)
            }

            Local0++
        }

        Return (One)
    }

    Name (WNOS, Zero)
    Name (MYOS, Zero)
    Name (HTTS, Zero)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            OSYS = 0x07D9
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                    OSYS = 0x07D9
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                    OSYS = 0x07DC
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                    OSYS = 0x07DD
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                    OSYS = 0x07DF
                }

                If (_OSI ("Windows 2016"))
                {
                    OSSP = One
                    OSTB = 0x71
                    TPOS = 0x71
                    OSYS = 0x07E0
                }

                If (_OSI ("Windows 2017"))
                {
                    OSSP = One
                    OSTB = 0x72
                    TPOS = 0x72
                    OSYS = 0x07E1
                }

                If (_OSI ("Windows 2017.2"))
                {
                    OSSP = One
                    OSTB = 0x73
                    TPOS = 0x73
                    OSYS = 0x07E1
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Name (BUFN, Zero)
    Name (MBUF, Buffer (0x1000){})
    OperationRegion (MDBG, SystemMemory, 0x8F35E018, 0x00001004)
    Field (MDBG, AnyAcc, Lock, Preserve)
    {
        MDG0,   32768
    }

    Method (DB2H, 1, Serialized)
    {
        SHOW (Arg0)
        MDGC (0x20)
        MDG0 = MBUF /* \MBUF */
    }

    Method (DW2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x08)
        Local0 &= 0xFF
        Local1 &= 0xFF
        DB2H (Local1)
        BUFN--
        DB2H (Local0)
    }

    Method (DD2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x10)
        Local0 &= 0xFFFF
        Local1 &= 0xFFFF
        DW2H (Local1)
        BUFN--
        DW2H (Local0)
    }

    Method (MBGS, 1, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Name (BUFS, Buffer (Local0){})
        BUFS = Arg0
        MDGC (0x20)
        While (Local0)
        {
            MDGC (DerefOf (BUFS [(SizeOf (Arg0) - Local0)]))
            Local0--
        }

        MDG0 = MBUF /* \MBUF */
    }

    Method (SHOW, 1, Serialized)
    {
        MDGC (NTOC ((Arg0 >> 0x04)))
        MDGC (NTOC (Arg0))
    }

    Method (LINE, 0, Serialized)
    {
        Local0 = BUFN /* \BUFN */
        Local0 &= 0x0F
        While (Local0)
        {
            MDGC (Zero)
            Local0++
            Local0 &= 0x0F
        }
    }

    Method (MDGC, 1, Serialized)
    {
        MBUF [BUFN] = Arg0
        BUFN += One
        If ((BUFN > 0x0FFF))
        {
            BUFN &= 0x0FFF
            UP_L (One)
        }
    }

    Method (UP_L, 1, Serialized)
    {
        Local2 = Arg0
        Local2 <<= 0x04
        MOVE (Local2)
        Local3 = (0x1000 - Local2)
        While (Local2)
        {
            MBUF [Local3] = Zero
            Local3++
            Local2--
        }
    }

    Method (MOVE, 1, Serialized)
    {
        Local4 = Arg0
        BUFN = Zero
        Local5 = (0x1000 - Local4)
        While (Local5)
        {
            Local5--
            MBUF [BUFN] = DerefOf (MBUF [Local4])
            BUFN++
            Local4++
        }
    }

    Method (NTOC, 1, Serialized)
    {
        Local0 = (Arg0 & 0x0F)
        If ((Local0 < 0x0A))
        {
            Local0 += 0x30
        }
        Else
        {
            Local0 += 0x37
        }

        Return (Local0)
    }

    Scope (_PR)
    {
        Processor (C000, 0x00, 0x00000410, 0x06){}
        Processor (C001, 0x01, 0x00000410, 0x06){}
        Processor (C002, 0x02, 0x00000410, 0x06){}
        Processor (C003, 0x03, 0x00000410, 0x06){}
        Processor (C004, 0x04, 0x00000410, 0x06){}
        Processor (C005, 0x05, 0x00000410, 0x06){}
        Processor (C006, 0x06, 0x00000410, 0x06){}
        Processor (C007, 0x07, 0x00000410, 0x06){}
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    If ((DAS3 == One))
    {
        Name (_S3, Package (0x04)  // _S3_: S3 System State
        {
            0x03, 
            0x03, 
            Zero, 
            Zero
        })
    }

    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        Zero, 
        Zero
    })
    Scope (_GPE)
    {
        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP4, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP18, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L13, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
        }

        Method (_L15, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GP17.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17.XHC1, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Name (PICM, Zero)
    Name (GPIC, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        PICM = Arg0
        GPIC = Arg0
        If (PICM)
        {
            \_SB.DSPI ()
            If (NAPC)
            {
                \_SB.PCI0.NAPE ()
            }
        }
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        SPTS (Arg0)
        If ((Arg0 == One))
        {
            \_SB.S80H (0x51)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0x53)
            SLPS = One
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0x54)
            SLPS = One
            RSTU = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.S80H (0x55)
            BCMD = 0x90
            \_SB.BSMI (Zero)
            \_SB.GSMI (0x03)
        }

        If (CondRefOf (\_SB.TPM2.PTS))
        {
            \_SB.TPM2.PTS (Arg0)
        }

        \_SB.APTS (Arg0)
        If (Arg0)
        {
            \_SB.PCI0.LPC0.ECFG (Zero)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.LPC0.EC0.S3ST = One
            If ((TPDD == 0x02))
            {
                \_SB.PCI0.LPC0.EC0.PTPS = One
            }
            Else
            {
                \_SB.PCI0.LPC0.EC0.PTPS = Zero
            }
        }

        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPC0.EC0.S4ST = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.PCI0.LPC0.EC0.S5ST = One
        }

        If ((Arg0 == 0x04))
        {
            If ((USBW == One))
            {
                \_SB.PCI0.GP17.XHC0.PMEE = One
                \_SB.PCI0.GP17.XHC1.PMEE = One
            }
            Else
            {
                \_SB.PCI0.GP17.XHC0.PMEE = Zero
                \_SB.PCI0.GP17.XHC1.PMEE = Zero
            }
        }

        MPTS (Arg0)
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        SWAK (Arg0)
        \_SB.AWAK (Arg0)
        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((GPIC != Zero))
            {
                \_SB.DSPI ()
                If (NAPC)
                {
                    \_SB.PCI0.NAPE ()
                }
            }
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0xE3)
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0xE4)
        }

        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            \_SB.PCI0.LPC0.ECFG (One)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.LPC0.EC0.S3RM = One
            \_SB.PCI0.LPC0.EC0.TPWA = One
            If ((GP8D == One))
            {
                \_SB.PCI0.LPC0.EC0.DSPM = Zero
            }
        }

        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPC0.OSTP ()
            \_SB.PCI0.LPC0.EC0.S4RM = One
            If ((GP8D == One))
            {
                \_SB.PCI0.LPC0.EC0.DSPM = Zero
            }
        }

        If ((Arg0 == 0x05))
        {
            \_SB.PCI0.LPC0.EC0.S5RM = One
        }

        MWAK (Arg0)
        Return (Zero)
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((GPIC != Zero))
                {
                    DSPI ()
                    If (\NAPC)
                    {
                        NAPE ()
                    }
                }

                OSTP ()
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (TOM, 0, NotSerialized)
            {
                Local0 = (TOML * 0x00010000)
                Local1 = (TOMH * 0x01000000)
                Local0 += Local1
                Return (Local0)
            }

            Name (CRES, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xF7FFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x78000000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFED3FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02D40000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (CRES, \_SB.PCI0._Y00._MIN, BTMN)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._MAX, BTMX)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._LEN, BTLN)  // _LEN: Length
                CreateDWordField (CRES, \_SB.PCI0._Y01._MIN, BTN1)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._MAX, BTX1)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._LEN, BTL1)  // _LEN: Length
                BTMN = TOM ()
                BTMX = (PCBA - One)
                BTLN = (PCBA - BTMN) /* \_SB_.PCI0._CRS.BTMN */
                BTN1 = (PCBL + One)
                BTL1 = (BTX1 - BTN1) /* \_SB_.PCI0._CRS.BTN1 */
                BTL1 += One
                If ((MM64 == One))
                {
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MIN, M1MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MAX, M1MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._LEN, M1LN)  // _LEN: Length
                    M1MN = HMB1 /* \HMB1 */
                    M1MX = HMM1 /* \HMM1 */
                    M1LN = HML1 /* \HML1 */
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MAX, M2MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._LEN, M2LN)  // _LEN: Length
                    M2MN = HMB2 /* \HMB2 */
                    M2MX = HMM2 /* \HMM2 */
                    M2LN = HML2 /* \HML2 */
                }

                Return (CRES) /* \_SB_.PCI0.CRES */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (BAR3, 0xFDE00000)
                Name (MEM1, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y04)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y05)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y06)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._LEN, ML02)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._BAS, MB03)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._LEN, ML03)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x1000
                        If (\NAPC)
                        {
                            ML01 += 0x1000
                        }

                        ML02 = 0x1000
                    }

                    If ((BAR3 != 0xFFF00000))
                    {
                        MB03 = BAR3 /* \_SB_.PCI0.MEMR.BAR3 */
                        ML03 = 0x00100000
                    }

                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            OperationRegion (NAPC, PCI_Config, 0xB8, 0x08)
            Field (NAPC, DWordAcc, NoLock, Preserve)
            {
                NAPX,   32, 
                NAPD,   32
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                NAPX = 0x14300000
                Local0 = NAPD /* \_SB_.PCI0.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                Release (NAPM)
            }

            Name (PR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    LNKD, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    LNKE, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
            Name (AR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x13
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x14
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Name (NR00, Package (0x0A)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x28
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x29
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x2A
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x03, 
                    Zero, 
                    0x2B
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x2B
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x24
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    If (\NAPC)
                    {
                        Return (NR00) /* \_SB_.PCI0.NR00 */
                    }
                    Else
                    {
                        Return (AR00) /* \_SB_.PCI0.AR00 */
                    }
                }
                Else
                {
                    Return (PR00) /* \_SB_.PCI0.PR00 */
                }
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x18
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x19
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR01) /* \_SB_.PCI0.GPP0.NR01 */
                        }
                        Else
                        {
                            Return (AR01) /* \_SB_.PCI0.GPP0.AR01 */
                        }
                    }
                    Else
                    {
                        Return (PR01) /* \_SB_.PCI0.GPP0.PR01 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (Package (0x67)
                            {
                                0x46, 
                                0x28, 
                                Zero, 
                                One, 
                                0x02, 
                                0x03, 
                                0x04, 
                                0x05, 
                                0x06, 
                                0x07, 
                                0x08, 
                                0x09, 
                                0x0A, 
                                0x0B, 
                                0x0C, 
                                0x0D, 
                                0x0E, 
                                0x0F, 
                                0x10, 
                                0x11, 
                                0x12, 
                                0x13, 
                                0x14, 
                                0x15, 
                                0x16, 
                                0x17, 
                                0x18, 
                                0x19, 
                                0x1A, 
                                0x1B, 
                                0x1C, 
                                0x1D, 
                                0x1E, 
                                0x1F, 
                                0x20, 
                                0x21, 
                                0x22, 
                                0x23, 
                                0x24, 
                                0x25, 
                                0x26, 
                                0x27, 
                                0x28, 
                                0x29, 
                                0x2A, 
                                0x2B, 
                                0x2C, 
                                0x2D, 
                                0x2E, 
                                0x2F, 
                                0x30, 
                                0x31, 
                                0x32, 
                                0x33, 
                                0x34, 
                                0x35, 
                                0x36, 
                                0x37, 
                                0x38, 
                                0x39, 
                                0x3A, 
                                0x3B, 
                                0x3C, 
                                0x3D, 
                                0x3E, 
                                0x3F, 
                                0x40, 
                                0x41, 
                                0x42, 
                                0x43, 
                                0x44, 
                                0x45, 
                                0x46, 
                                0x47, 
                                0x48, 
                                0x49, 
                                0x4A, 
                                0x4B, 
                                0x4C, 
                                0x4D, 
                                0x4E, 
                                0x4F, 
                                0x50, 
                                0x51, 
                                0x52, 
                                0x53, 
                                0x54, 
                                0x55, 
                                0x56, 
                                0x57, 
                                0x58, 
                                0x59, 
                                0x5A, 
                                0x5B, 
                                0x5C, 
                                0x5D, 
                                0x5E, 
                                0x5F, 
                                0x60, 
                                0x61, 
                                0x62, 
                                0x63, 
                                0x64
                            })
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                            Divide (Arg0, 0x0A, Local0, Local1)
                            ^^^^LPC0.EC0.BRTS = Local1
                        }

                        Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                        {
                            Local0 = ^^^^LPC0.EC0.BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                            Local0 *= 0x0A
                            Return (Local0)
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x1C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x1D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR02) /* \_SB_.PCI0.GPP1.NR02 */
                        }
                        Else
                        {
                            Return (AR02) /* \_SB_.PCI0.GPP1.AR02 */
                        }
                    }
                    Else
                    {
                        Return (PR02) /* \_SB_.PCI0.GPP1.PR02 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (Package (0x67)
                            {
                                0x46, 
                                0x28, 
                                Zero, 
                                One, 
                                0x02, 
                                0x03, 
                                0x04, 
                                0x05, 
                                0x06, 
                                0x07, 
                                0x08, 
                                0x09, 
                                0x0A, 
                                0x0B, 
                                0x0C, 
                                0x0D, 
                                0x0E, 
                                0x0F, 
                                0x10, 
                                0x11, 
                                0x12, 
                                0x13, 
                                0x14, 
                                0x15, 
                                0x16, 
                                0x17, 
                                0x18, 
                                0x19, 
                                0x1A, 
                                0x1B, 
                                0x1C, 
                                0x1D, 
                                0x1E, 
                                0x1F, 
                                0x20, 
                                0x21, 
                                0x22, 
                                0x23, 
                                0x24, 
                                0x25, 
                                0x26, 
                                0x27, 
                                0x28, 
                                0x29, 
                                0x2A, 
                                0x2B, 
                                0x2C, 
                                0x2D, 
                                0x2E, 
                                0x2F, 
                                0x30, 
                                0x31, 
                                0x32, 
                                0x33, 
                                0x34, 
                                0x35, 
                                0x36, 
                                0x37, 
                                0x38, 
                                0x39, 
                                0x3A, 
                                0x3B, 
                                0x3C, 
                                0x3D, 
                                0x3E, 
                                0x3F, 
                                0x40, 
                                0x41, 
                                0x42, 
                                0x43, 
                                0x44, 
                                0x45, 
                                0x46, 
                                0x47, 
                                0x48, 
                                0x49, 
                                0x4A, 
                                0x4B, 
                                0x4C, 
                                0x4D, 
                                0x4E, 
                                0x4F, 
                                0x50, 
                                0x51, 
                                0x52, 
                                0x53, 
                                0x54, 
                                0x55, 
                                0x56, 
                                0x57, 
                                0x58, 
                                0x59, 
                                0x5A, 
                                0x5B, 
                                0x5C, 
                                0x5D, 
                                0x5E, 
                                0x5F, 
                                0x60, 
                                0x61, 
                                0x62, 
                                0x63, 
                                0x64
                            })
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                            Divide (Arg0, 0x0A, Local0, Local1)
                            ^^^^LPC0.EC0.BRTS = Local1
                        }

                        Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                        {
                            Local0 = ^^^^LPC0.EC0.BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                            Local0 *= 0x0A
                            Return (Local0)
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x20
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x21
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x22
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x23
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR03) /* \_SB_.PCI0.GPP2.NR03 */
                        }
                        Else
                        {
                            Return (AR03) /* \_SB_.PCI0.GPP2.AR03 */
                        }
                    }
                    Else
                    {
                        Return (PR03) /* \_SB_.PCI0.GPP2.PR03 */
                    }
                }

                Device (BCM5)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00010004)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x24
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x25
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x26
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x27
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR04) /* \_SB_.PCI0.GPP3.NR04 */
                        }
                        Else
                        {
                            Return (AR04) /* \_SB_.PCI0.GPP3.AR04 */
                        }
                    }
                    Else
                    {
                        Return (PR04) /* \_SB_.PCI0.GPP3.PR04 */
                    }
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00010005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x28
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x29
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR05) /* \_SB_.PCI0.GPP4.NR05 */
                        }
                        Else
                        {
                            Return (AR05) /* \_SB_.PCI0.GPP4.AR05 */
                        }
                    }
                    Else
                    {
                        Return (PR05) /* \_SB_.PCI0.GPP4.PR05 */
                    }
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00010006)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x2C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x2D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR06) /* \_SB_.PCI0.GPP5.NR06 */
                        }
                        Else
                        {
                            Return (AR06) /* \_SB_.PCI0.GPP5.AR06 */
                        }
                    }
                    Else
                    {
                        Return (PR06) /* \_SB_.PCI0.GPP5.PR06 */
                    }
                }
            }

            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                CMSI = Arg0
                CMSD = Arg1
            }

            Method (CMSR, 1, NotSerialized)
            {
                CMSI = Arg0
                Return (CMSD) /* \_SB_.PCI0.CMSD */
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00010007)  // _ADR: Address
                Name (PR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x30
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x31
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x32
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x33
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR07) /* \_SB_.PCI0.GPP6.NR07 */
                        }
                        Else
                        {
                            Return (AR07) /* \_SB_.PCI0.GPP6.AR07 */
                        }
                    }
                    Else
                    {
                        Return (PR07) /* \_SB_.PCI0.GPP6.PR07 */
                    }
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (WRDX, Package (0x03)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }, 

                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }
                    })
                    Method (WRDD, 0, Serialized)
                    {
                        DerefOf (WRDX [One]) [Zero] = 0x07
                        If ((CMSR (0x91) == 0x04))
                        {
                            DerefOf (WRDX [One]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [One]) [One] = 0x4150
                        }

                        DerefOf (WRDX [0x02]) [Zero] = 0x07
                        If ((CMSR (0x91) == 0x04))
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4150
                        }

                        Return (WRDX) /* \_SB_.PCI0.GPP6.PXSX.WRDX */
                    }
                }
            }

            Device (GP17)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x19, Zero))
                    }
                }

                Name (PR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x34
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x35
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x36
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x37
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR17) /* \_SB_.PCI0.GP17.NR17 */
                        }
                        Else
                        {
                            Return (AR17) /* \_SB_.PCI0.GP17.AR17 */
                        }
                    }
                    Else
                    {
                        Return (PR17) /* \_SB_.PCI0.GP17.PR17 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x07)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240, 
                            0x00031000, 
                            0x00032000
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (BCLB) /* \_SB_.PCI0.GP17.VGA_.LCD_.BCLB */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                        }
                    }
                }

                Device (PSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (ACP)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                }

                Name (UPCN, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC3, Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (UPC2, Package (0x04)
                {
                    0xFF, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (UPCP, Package (0x04)
                {
                    0xFF, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC4, Package (0x04)
                {
                    0xFF, 
                    0x0A, 
                    Zero, 
                    Zero
                })
                Name (PLDC, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLDD, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD2, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD3, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLD4, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x19, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (PLDP, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Name (XUPC, Package (0x04)
                {
                    0xFF, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (XUP1, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (XPLD, Buffer (0x10)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
                })
                Name (NPLD, Zero)
                Name (WPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                        /* 0008 */  0x25, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                        /* 0010 */  0x2C, 0x01, 0xBE, 0x00                           // ,...
                    }
                })
                Name (DPLD, Package (0x01)
                {
                    Buffer (0x10)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                    }
                })
                Name (BPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x00,  // ....d.d.
                        /* 0008 */  0x24, 0x41, 0x80, 0x01, 0x00, 0x00, 0x04, 0x00,  // $A......
                        /* 0010 */  0x00, 0x03, 0xAB, 0x02                           // ....
                    }
                })
                Name (CPLD, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
                        /* 0008 */  0x25, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                    {
                        0x0D, 
                        0x04
                    })
                    OperationRegion (USBR, PCI_Config, 0x74, 0x02)
                    Field (USBR, ByteAcc, NoLock, Preserve)
                    {
                        PMST,   2, 
                        Offset (0x01), 
                        PMEE,   1, 
                            ,   6, 
                        PMES,   1
                    }

                    Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
                    {
                        If ((ECID == 0x02))
                        {
                            PMEE = Arg0
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                    {
                        Return (Zero)
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == 0x02))
                            {
                                Return (Zero)
                            }
                            ElseIf ((RV2I == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCP) /* \_SB_.PCI0.GP17.UPCP */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDP) /* \_SB_.PCI0.GP17.PLDP */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }
                    }

                    Device (RTY2)
                    {
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == 0x02))
                            {
                                Return (Zero)
                            }
                            ElseIf ((RV2I == Zero))
                            {
                                Return (Zero)
                            }
                            Else
                            {
                                Return (0x0F)
                            }
                        }

                        Name (_ADR, Zero)  // _ADR: Address
                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCP) /* \_SB_.PCI0.GP17.UPCP */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDP) /* \_SB_.PCI0.GP17.PLDP */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (XUPC) /* \_SB_.PCI0.GP17.XUPC */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (DPLD) /* \_SB_.PCI0.GP17.DPLD */
                            }

                            Device (UBC5)
                            {
                                Name (_ADR, 0x05)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    If ((NPLD == Zero))
                                    {
                                        Return (WPLD) /* \_SB_.PCI0.GP17.WPLD */
                                    }
                                    ElseIf ((NPLD == One))
                                    {
                                        Return (BPLD) /* \_SB_.PCI0.GP17.BPLD */
                                    }
                                    Else
                                    {
                                        Return (CPLD) /* \_SB_.PCI0.GP17.CPLD */
                                    }
                                }
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT9)
                        {
                            Name (_ADR, 0x09)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }

                        Device (PRTA)
                        {
                            Name (_ADR, 0x0A)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                                }
                                Else
                                {
                                    Return (UPC4) /* \_SB_.PCI0.GP17.UPC4 */
                                }
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                If ((GP03 == Zero))
                                {
                                    Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                                }
                                Else
                                {
                                    Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                                }
                            }
                        }
                    }

                    Device (SPT1)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == One))
                            {
                                Return (Zero)
                            }
                            ElseIf ((RV2I == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (XUPC) /* \_SB_.PCI0.GP17.XUPC */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (DPLD) /* \_SB_.PCI0.GP17.DPLD */
                            }

                            Device (UBC1)
                            {
                                Name (_ADR, One)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    If ((NPLD == Zero))
                                    {
                                        Return (WPLD) /* \_SB_.PCI0.GP17.WPLD */
                                    }
                                    ElseIf ((NPLD == One))
                                    {
                                        Return (BPLD) /* \_SB_.PCI0.GP17.BPLD */
                                    }
                                    Else
                                    {
                                        Return (CPLD) /* \_SB_.PCI0.GP17.CPLD */
                                    }
                                }
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCP) /* \_SB_.PCI0.GP17.UPCP */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDP) /* \_SB_.PCI0.GP17.PLDP */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }
                    }

                    Device (SPT2)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == One))
                            {
                                Return (Zero)
                            }
                            ElseIf ((RV2I == Zero))
                            {
                                Return (Zero)
                            }
                            Else
                            {
                                Return (0x0F)
                            }
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (XUPC) /* \_SB_.PCI0.GP17.XUPC */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (DPLD) /* \_SB_.PCI0.GP17.DPLD */
                            }

                            Device (UBC1)
                            {
                                Name (_ADR, One)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    If ((NPLD == Zero))
                                    {
                                        Return (WPLD) /* \_SB_.PCI0.GP17.WPLD */
                                    }
                                    ElseIf ((NPLD == One))
                                    {
                                        Return (BPLD) /* \_SB_.PCI0.GP17.BPLD */
                                    }
                                    Else
                                    {
                                        Return (CPLD) /* \_SB_.PCI0.GP17.CPLD */
                                    }
                                }
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD3) /* \_SB_.PCI0.GP17.PLD3 */
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCP) /* \_SB_.PCI0.GP17.UPCP */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDP) /* \_SB_.PCI0.GP17.PLDP */
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC3) /* \_SB_.PCI0.GP17.UPC3 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDD) /* \_SB_.PCI0.GP17.PLDD */
                            }
                        }

                        Device (PRT9)
                        {
                            Name (_ADR, 0x09)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRTA)
                        {
                            Name (_ADR, 0x0A)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }
                    }
                }

                Device (XHC1)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                    {
                        0x0D, 
                        0x04
                    })
                    OperationRegion (USBR, PCI_Config, 0x74, 0x02)
                    Field (USBR, ByteAcc, NoLock, Preserve)
                    {
                        PMST,   2, 
                        Offset (0x01), 
                        PMEE,   1, 
                            ,   6, 
                        PMES,   1
                    }

                    Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
                    {
                        If ((ECID == 0x02))
                        {
                            PMEE = Arg0
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                    {
                        Return (Zero)
                    }

                    Device (X1JP)
                    {
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == 0x02))
                            {
                                Return (Zero)
                            }

                            Return (0x0F)
                        }

                        Name (_ADR, Zero)  // _ADR: Address
                        Device (UBC1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (XUPC) /* \_SB_.PCI0.GP17.XUPC */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (DPLD) /* \_SB_.PCI0.GP17.DPLD */
                            }

                            Device (PRT1)
                            {
                                Name (_ADR, One)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    If ((NPLD == Zero))
                                    {
                                        Return (WPLD) /* \_SB_.PCI0.GP17.WPLD */
                                    }
                                    ElseIf ((NPLD == One))
                                    {
                                        Return (BPLD) /* \_SB_.PCI0.GP17.BPLD */
                                    }
                                    Else
                                    {
                                        Return (CPLD) /* \_SB_.PCI0.GP17.CPLD */
                                    }
                                }
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }
                    }

                    Device (X1LP)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((ECID == One))
                            {
                                Return (Zero)
                            }
                            Else
                            {
                                Return (0x0F)
                            }
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.UPC2 */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLDC) /* \_SB_.PCI0.GP17.PLDC */
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (XPLD) /* \_SB_.PCI0.GP17.XPLD */
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPCN) /* \_SB_.PCI0.GP17.UPCN */
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD4) /* \_SB_.PCI0.GP17.PLD4 */
                            }
                        }
                    }
                }

                Device (MP2C)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                }
            }

            Device (GP18)
            {
                Name (_ADR, 0x00080002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKH, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKF, 
                        Zero
                    }
                })
                Name (AR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x17
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x15
                    }
                })
                Name (NR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x36
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x37
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x34
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x35
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (\NAPC)
                        {
                            Return (NR18) /* \_SB_.PCI0.GP18.NR18 */
                        }
                        Else
                        {
                            Return (AR18) /* \_SB_.PCI0.GP18.AR18 */
                        }
                    }
                    Else
                    {
                        Return (PR18) /* \_SB_.PCI0.GP18.PR18 */
                    }
                }

                Device (SATA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (HPET)
            {
                Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((HPEN == One))
                    {
                        If ((OSTB >= 0x40))
                        {
                            Return (0x0F)
                        }

                        HPEN = Zero
                        Return (One)
                    }

                    Return (One)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y07)
                    })
                    CreateDWordField (BUF0, \_SB.PCI0.HPET._CRS._Y07._BAS, HPEB)  // _BAS: Base Address
                    Local0 = 0xFED00000
                    HPEB = (Local0 & 0xFFFFFC00)
                    Return (BUF0) /* \_SB_.PCI0.HPET._CRS.BUF0 */
                }
            }

            Device (SMBS)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (COPR)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.TMR_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.TMR_.BUF1 */
                    }
                }

                Device (KBC0)
                {
                    Name (_HID, EisaId ("FUJ7401"))  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0400,             // Range Minimum
                            0x0400,             // Range Maximum
                            0x01,               // Alignment
                            0xD0,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x0C,               // Length
                            )
                    })
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFFF00000,         // Address Base
                            0x00100000,         // Address Length
                            _Y08)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._LEN, PSIZ)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._BAS, PBAS)  // _BAS: Base Address
                        PSIZ = ROMS /* \ROMS */
                        Local0 = (ROMS - One)
                        PBAS = (Ones - Local0)
                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }
                }

                Mutex (PSMX, 0x00)
            }
        }

        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x0C), 
            SIRA,   8, 
            SIRB,   8, 
            SIRC,   8, 
            SIRD,   8, 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x17), 
            SDCL,   8, 
            Offset (0x1A), 
            SDIO,   8, 
            Offset (0x30), 
            USB1,   8, 
            Offset (0x34), 
            USB3,   8, 
            Offset (0x41), 
            SATA,   8, 
            Offset (0x62), 
            GIOC,   8, 
            Offset (0x70), 
            I2C0,   8, 
            I2C1,   8, 
            I2C2,   8, 
            I2C3,   8, 
            URT0,   8, 
            URT1,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            If (PICM)
            {
                HDAD = Arg0
                SDCL = Arg0
            }
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            If (PICM)
            {
                USB1 = Arg0
                USB3 = Arg0
            }
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            If (PICM)
            {
                SATA = Arg0
            }
        }

        Name (PRS1, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,5,6,10,11}
        })
        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRA && (PIRA != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRA = Local0
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRB && (PIRB != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRB = Local0
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRC && (PIRC != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRC = Local0
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRD && (PIRD != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRD = Local0
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRE && (PIRE != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRF && (PIRF != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRG && (PIRG != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRH && (PIRH != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }

        Method (GSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xE4
            Sleep (0x02)
        }

        Method (S80H, 1, NotSerialized)
        {
            P80H = Arg0
        }

        Method (BSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xBE
            Sleep (One)
        }
    }

    OperationRegion (DBGB, SystemIO, 0x80, One)
    Field (DBGB, ByteAcc, NoLock, Preserve)
    {
        P80B,   8
    }

    OperationRegion (DBGW, SystemIO, 0x80, 0x02)
    Field (DBGW, WordAcc, NoLock, Preserve)
    {
        P80W,   16
    }

    OperationRegion (DBGD, SystemIO, 0x80, 0x04)
    Field (DBGD, DWordAcc, NoLock, Preserve)
    {
        P80D,   32
    }

    Name (TSOS, 0x75)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }
    }

    Scope (_SB)
    {
        OperationRegion (SMIC, SystemMemory, 0xFED80000, 0x00800000)
        Field (SMIC, ByteAcc, NoLock, Preserve)
        {
            Offset (0x36A), 
            SMIB,   8
        }

        OperationRegion (SSMI, SystemIO, SMIB, 0x02)
        Field (SSMI, AnyAcc, NoLock, Preserve)
        {
            SMIW,   16
        }

        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
            SPIE,   1, 
            P80E,   1, 
                ,   2, 
            NI2C,   1, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
                ,   3, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA306C), 
            RAR2,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1, 
            Offset (0xA30D0), 
                ,   13, 
            LCLK,   2
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            IM17,   8, 
            Offset (0x1F), 
            IM1F,   8, 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FMIS, SystemMemory, 0xFED80E00, 0x0100)
        Field (FMIS, AnyAcc, NoLock, Preserve)
        {
            Offset (0x40), 
                ,   13, 
            I24M,   1
        }

        OperationRegion (FGIO, SystemMemory, 0xFED81500, 0x0300)
        Field (FGIO, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA8), 
                ,   22, 
            O042,   1, 
            Offset (0x164), 
                ,   22, 
            O089,   1
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x62), 
            AMTD,   2, 
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        OperationRegion (SPIM, SystemMemory, 0xFEC10000, 0x0100)
        Field (SPIM, AnyAcc, NoLock, Preserve)
        {
            Offset (0x1D), 
            ASCE,   2, 
            Offset (0x22), 
            SSSC,   16, 
            Offset (0xFC), 
            STRN,   1, 
                ,   2, 
            BOWS,   1, 
            DOWS,   1
        }

        Mutex (ASSM, 0x00)
        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, Zero, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        CreateWordField (SVBF, 0x14, RG22)
        CreateDWordField (SVBF, 0x18, SAR2)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 1, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (IUA0) /* \_SB_.IUA0 */
            }

            If ((Arg0 == One))
            {
                Return (IUA1) /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Return (IUA2) /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Return (IUA3) /* \_SB_.IUA3 */
            }

            Return (Zero)
        }

        Method (OP80, 1, Serialized)
        {
            If (P80E)
            {
                P80D = Arg0
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local1 = (Arg1 << 0x05)
            Local1 += 0xB000AF80
            Local1 += Arg0
            OP80 (Local1)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local1 = (Arg1 << 0x05)
            Local1 += 0xB000AF80
            Local1 += Arg0
            OP80 (Local1)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (FPIC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (SPI1)
        {
            Name (_HID, "AMDI0060")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (SPIE)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFEC10000,         // Address Base
                        0x00000100,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPI1._CRS.RBUF */
            }

            Method (ASSC, 2, Serialized)
            {
                Acquire (ASSM, 0xFFFF)
                Local0 = Arg1
                Switch (ToInteger (Arg0))
                {
                    Case (0x03)
                    {
                        DOWS = One
                        STRN = One
                        While ((BOWS && STRN))
                        {
                            If (Arg1)
                            {
                                Stall (One)
                                Local0 -= One
                                If ((Local0 == Zero))
                                {
                                    Break
                                }
                            }
                        }

                        SAR2 = RAR2 /* \_SB_.RAR2 */
                        RAR2 = Zero
                        ASCE = 0x02
                        RG22 = SSSC /* \_SB_.SSSC */
                    }
                    Case (0x04)
                    {
                        SSSC = RG22 /* \_SB_.RG22 */
                        ASCE = Zero
                        RAR2 = SAR2 /* \_SB_.SAR2 */
                        Local0 = One
                        DOWS = Zero
                    }

                }

                Release (ASSM)
                Return (Local0)
            }
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (RST, 0, NotSerialized)
            {
                Notify (GPIO, Zero) // Bus Check
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC9000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC7000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (UOL0)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT0D && UT0E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, 0x03)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCA000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC8000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (UOL1)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT1D && UT1E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, 0x03)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {15}
                Memory32Fixed (ReadWrite,
                    0xFEDCE000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCC000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (UOL2)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT2D && UT2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, 0x03)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {5}
                Memory32Fixed (ReadWrite,
                    0xFEDCF000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCD000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (UOL3)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT3D && UT3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, 0x03)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_ADR, Zero)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_ADR, One)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {14}
                Memory32Fixed (ReadWrite,
                    0xFEDC4000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC2D && IC2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, 0x03)
                }
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {6}
                Memory32Fixed (ReadWrite,
                    0xFEDC5000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC3D && IC3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, Zero)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, 0x03)
                }
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = 0xFF00
            IM15 = One
            IM16 = One
            IM20 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            IM1F = One
            If ((EMMD != One))
            {
                IM4A = One
                IM58 = One
                IM4B = One
                IM57 = One
                IM6D = One
            }

            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (ECRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveLow, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (MHID, "AMDI0041")
        Name (MCID, "AMDI0041")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCI\\CC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If ((EMMD == Zero))
                {
                    Return (AHID) /* \_SB_.AHID */
                }

                If ((EMMD == One))
                {
                    Return (SHID) /* \_SB_.SHID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MHID) /* \_SB_.MHID */
                }

                Return (Zero)
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If ((EMMD == Zero))
                {
                    Return (ACID) /* \_SB_.ACID */
                }

                If ((EMMD == One))
                {
                    Return (SCID) /* \_SB_.SCID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MCID) /* \_SB_.MCID */
                }

                Return (Zero)
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    If ((EMMD == One))
                    {
                        Return (DCRS) /* \_SB_.DCRS */
                    }

                    Return (ECRS) /* \_SB_.ECRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, Zero)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }

            Device (CARD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    If ((EMMD == One))
                    {
                        Return (One)
                    }

                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER0 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y09)
                    IRQNoFlags (_Y0A)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR1._CRS._Y0A._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR0))
                Return (BUF0) /* \_SB_.PCI0.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER1 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0B)
                    IRQNoFlags (_Y0C)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR2._CRS._Y0C._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR1))
                Return (BUF0) /* \_SB_.PCI0.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER2 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0D)
                    IRQNoFlags (_Y0E)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR3._CRS._Y0E._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR2))
                Return (BUF0) /* \_SB_.PCI0.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER3 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0F)
                    IRQNoFlags (_Y10)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR4._CRS._Y10._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR3))
                Return (BUF0) /* \_SB_.PCI0.UAR4._CRS.BUF0 */
            }
        }
    }

    Scope (_SB.PCI0.GP17.VGA)
    {
        Device (CAMF)
        {
            Name (_ADR, 0x1000)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((O042 == One))
                {
                    Return (0x0F)
                }

                Return (0x0B)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                O042 = One
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                O042 = Zero
            }
        }

        Device (CAMR)
        {
            Name (_ADR, 0x2000)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((O089 == One))
                {
                    Return (0x0F)
                }

                Return (0x0B)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                O089 = One
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                O089 = Zero
            }
        }

        Method (RCPU, 0, NotSerialized)
        {
            O089 = One
        }

        Method (RCPD, 0, NotSerialized)
        {
            O089 = Zero
        }

        Method (FCPU, 0, NotSerialized)
        {
            O042 = One
        }

        Method (FCPD, 0, NotSerialized)
        {
            O042 = Zero
        }

        Method (ICLE, 0, NotSerialized)
        {
            I24M = Zero
        }

        Method (ICLD, 0, NotSerialized)
        {
            I24M = One
        }
    }

    Scope (\)
    {
        OperationRegion (COMP, SystemMemory, 0x8F778D18, 0x0200)
        Field (COMP, AnyAcc, Lock, Preserve)
        {
            RSR0,   32, 
            BDDD,   8, 
            CPFB,   8, 
            PBTI,   8, 
            BRLV,   8, 
            CAVR,   8, 
            TJMA,   16, 
            CORE,   8, 
            TPDF,   8, 
            TPLF,   8, 
            TPDD,   8, 
            TMUD,   8, 
            CTUR,   8, 
            CG17,   8, 
            CG18,   8, 
            CG19,   8, 
            CG20,   8, 
            CG21,   8, 
            CG22,   8, 
            CG23,   8, 
            CG24,   8, 
            CG25,   8, 
            CG26,   8, 
            CG27,   8, 
            CG28,   8, 
            CG29,   8, 
            CG30,   8, 
            CG31,   8, 
            SFNO,   16, 
            STDT,   16, 
            BFDT,   1024, 
            ESMS,   8, 
            ESMB,   256, 
            RSR1,   472, 
            IDFD,   1024, 
            RSR2,   1024
        }

        Mutex (CFMX, 0x00)
        Scope (_SB)
        {
            OperationRegion (SMIO, SystemIO, 0xB0, 0x02)
            Field (SMIO, ByteAcc, NoLock, Preserve)
            {
                SMIM,   8, 
                SMID,   8
            }

            Method (CSMI, 2, NotSerialized)
            {
                Acquire (CFMX, 0xFFFF)
                SMID = Arg1
                SMIM = Arg0
                Release (CFMX)
            }
        }

        Scope (_SB.PCI0.LPC0.RTC)
        {
            OperationRegion (RCM0, SystemCMOS, Zero, 0x10)
            Field (RCM0, ByteAcc, NoLock, Preserve)
            {
                AccessAs (ByteAcc, 0x00), 
                RTCS,   8, 
                Offset (0x02), 
                RTCM,   8, 
                Offset (0x04), 
                RTCH,   8, 
                Offset (0x06), 
                RTCW,   8, 
                RTCD,   8
            }
        }

        Scope (_SB.PCI0.LPC0)
        {
            Device (PS2M)
            {
                Name (TPID, Package (0x06)
                {
                    Package (0x05)
                    {
                        Zero, 
                        0xFF, 
                        0xFF, 
                        0x8A1B2E4F, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x2C, 
                        0x20, 
                        "SYNA7DB5", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0x02, 
                        0xFF, 
                        0xFF, 
                        0x10058416, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        0x03, 
                        0x15, 
                        One, 
                        "ELAN0504", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFE, 
                        0x2C, 
                        0x20, 
                        "MSFT0001", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        "MSFT0003", 
                        0x030FD041
                    }
                })
                Method (_HID, 0, Serialized)  // _HID: Hardware ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFF)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFF
                        }

                    }

                    Return (TPDS (0x03, 0xFF, "MSFT0003"))
                }

                Method (_CID, 0, Serialized)  // _CID: Compatible ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFF)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFF
                        }

                    }

                    Return (TPDS (0x04, 0xFF, 0x030FD041))
                }

                Method (TPDS, 3, NotSerialized)
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != Arg1) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Return (Arg2)
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    Return (DerefOf (DerefOf (TPID [Local0]) [Arg0]))
                }

                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    Switch (TPDD)
                    {
                        Case (Zero)
                        {
                            If (Ones)
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Case (One)
                        {
                            Return (0x0F)
                        }
                        Case (0x02)
                        {
                            Return (Zero)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {12}
                })
            }
        }

        Scope (_SB.I2CD)
        {
            Device (TPAD)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_UID, One)  // _UID: Unique ID
                Name (HID2, Zero)
                Name (TPID, Package (0x06)
                {
                    Package (0x05)
                    {
                        Zero, 
                        0xFF, 
                        0xFF, 
                        0x8A1B2E4F, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x2C, 
                        0x20, 
                        "SYNA7DB5", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0x02, 
                        0xFF, 
                        0xFF, 
                        0x10058416, 
                        Package (0x01)
                        {
                            0x130FD041
                        }
                    }, 

                    Package (0x05)
                    {
                        0x03, 
                        0x15, 
                        One, 
                        "ELAN0504", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFE, 
                        0x2C, 
                        0x20, 
                        "MSFT0001", 
                        "PNP0C50"
                    }, 

                    Package (0x05)
                    {
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        "MSFT0003", 
                        0x030FD041
                    }
                })
                Name (SBFB, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, _Y11, Exclusive,
                        )
                })
                Name (SBFI, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, )
                    {
                        0x0000005A,
                    }
                })
                Name (SBFG, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x005A
                        }
                })
                CreateWordField (SBFB, \_SB.I2CD.TPAD._Y11._ADR, ADR0)  // _ADR: Address
                Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                {
                    Return (Zero)
                }

                Method (_HID, 0, Serialized)  // _HID: Hardware ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFE)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFE
                        }

                    }

                    Return (TPDS (0x03, 0xFE, "MSFT0001"))
                }

                Method (_CID, 0, Serialized)  // _CID: Compatible ID
                {
                    If (~CondRefOf (TPDF))
                    {
                        Name (TPDF, 0xFE)
                    }

                    Switch (One)
                    {
                        Case (Zero)
                        {
                            TPDF = 0xFE
                        }
                        Case (One)
                        {
                        }
                        Default
                        {
                            TPDF = 0xFE
                        }

                    }

                    Return (TPDS (0x04, 0xFE, "PNP0C50"))
                }

                Method (TPDS, 3, NotSerialized)
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != Arg1) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Return (Arg2)
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    Return (DerefOf (DerefOf (TPID [Local0]) [Arg0]))
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {
                        If ((Arg2 == Zero))
                        {
                            If ((Arg1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

                        If ((Arg2 == One))
                        {
                            Return (HID2) /* \_SB_.I2CD.TPAD.HID2 */
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    If ((Arg0 == ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b")))
                    {
                        If ((Arg2 == Zero))
                        {
                            If ((Arg1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }

                        If ((Arg2 == One))
                        {
                            Return (ConcatenateResTemplate (SBFB, SBFG))
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    Switch (TPDD)
                    {
                        Case (Zero)
                        {
                            If (Zero)
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Case (One)
                        {
                            Return (Zero)
                        }
                        Case (0x02)
                        {
                            Return (0x0F)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {
                    Local0 = Zero
                    Local1 = Zero
                    Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    While (((Local1 != 0xFE) && (Local1 != TPDF)))
                    {
                        Local0++
                        If ((Local0 >= SizeOf (TPID)))
                        {
                            Break
                        }

                        Local1 = DerefOf (DerefOf (TPID [Local0]) [Zero])
                    }

                    ADR0 = DerefOf (DerefOf (TPID [Local0]) [One])
                    HID2 = DerefOf (DerefOf (TPID [Local0]) [0x02])
                    If ((OSYS < 0x07DC))
                    {
                        Return (SBFI) /* \_SB_.I2CD.TPAD.SBFI */
                    }

                    If (Ones)
                    {
                        Return (ConcatenateResTemplate (SBFB, SBFG))
                    }

                    Return (ConcatenateResTemplate (SBFB, SBFI))
                }
            }
        }

        Mutex (DPMX, 0x00)
        Method (DPTC, 2, Serialized)
        {
            Acquire (DPMX, 0xFFFF)
            Name (XX11, Buffer (0x07){})
            CreateWordField (XX11, Zero, SSZE)
            CreateByteField (XX11, 0x02, SMUF)
            CreateDWordField (XX11, 0x03, SMUD)
            SSZE = 0x07
            Local0 = Arg1
            Switch (ToInteger (Arg0))
            {
                Case (0x03)
                {
                }
                Case (0x05)
                {
                    Local0 *= 0x03E8
                }
                Case (0x06)
                {
                    Local0 *= 0x03E8
                }
                Case (0x07)
                {
                    Local0 *= 0x03E8
                }
                Case (0x08)
                {
                }
                Case (0x09)
                {
                    Local0 *= 0x03E8
                }
                Case (0x0B)
                {
                    Local0 *= 0x03E8
                }
                Case (0x0C)
                {
                    Local0 *= 0x03E8
                }
                Case (0x0E)
                {
                    Local0 *= 0x03E8
                }
                Default
                {
                    Return (Zero)
                }

            }

            SMUF = Arg0
            SMUD = Local0
            \_SB.ALIB (0x0C, XX11)
            Release (DPMX)
            Return (Zero)
        }
    }

    Scope (_SB.PCI0.LPC0)
    {
        Method (ECOK, 0, NotSerialized)
        {
            If ((^EC0.OKEC == One))
            {
                Return (One)
            }
            Else
            {
                Return (Zero)
            }
        }

        Device (EC0)
        {
            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
            Name (_GPE, 0x03)  // _GPE: General Purpose Events
            Name (OKEC, One)
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
            })
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x03))
                {
                    OKEC = Arg1
                    OSTP ()
                    ECFG (One)
                }
            }

            OperationRegion (ECMM, SystemMemory, 0xFE000800, 0x1000)
            Field (ECMM, AnyAcc, Lock, Preserve)
            {
                    ,   1, 
                LCDS,   1, 
                    ,   5, 
                Offset (0x01), 
                HTBN,   8, 
                HTBT,   8, 
                Offset (0x07), 
                    ,   6, 
                PTPS,   1, 
                Offset (0x08), 
                Offset (0x13), 
                C1FR,   16, 
                G1FR,   16, 
                TPWA,   1, 
                Offset (0x20), 
                DCAC,   1, 
                Offset (0x2A), 
                S1TV,   8, 
                Offset (0x2D), 
                DSPM,   1, 
                Offset (0x32), 
                TCLT,   8, 
                Offset (0x5D), 
                ERIB,   16, 
                Offset (0x61), 
                SMST,   8, 
                SMAD,   8, 
                SMCM,   8, 
                SMD0,   256, 
                BCNT,   8, 
                SMAA,   24, 
                SMBN,   8, 
                Offset (0x8D), 
                SUPL,   8, 
                SPPT,   8, 
                FPPT,   8, 
                BMFN,   72, 
                BATD,   56, 
                Offset (0xA1), 
                    ,   1, 
                VIDO,   1, 
                TOUP,   1, 
                Offset (0xA2), 
                ODTS,   8, 
                OSTY,   4, 
                    ,   1, 
                PBOV,   1, 
                ECRD,   1, 
                ADPT,   1, 
                PWAK,   1, 
                MWAK,   1, 
                LWAK,   1, 
                RWAK,   1, 
                WWAK,   1, 
                UWAK,   1, 
                KWAK,   1, 
                TWAK,   1, 
                CCAC,   1, 
                AOAC,   1, 
                BLAC,   1, 
                PSRC,   1, 
                BOAC,   1, 
                LCAC,   1, 
                AAAC,   1, 
                ACAC,   1, 
                S3ST,   1, 
                S3RM,   1, 
                S4ST,   1, 
                S4RM,   1, 
                S5ST,   1, 
                S5RM,   1, 
                CSST,   1, 
                CSRM,   1, 
                OSTT,   8, 
                OSST,   8, 
                THLT,   8, 
                TCNL,   8, 
                MODE,   1, 
                    ,   2, 
                INIT,   1, 
                FAN1,   1, 
                FAN2,   1, 
                FANT,   1, 
                SKNM,   1, 
                SDTM,   8, 
                FSSN,   4, 
                FANU,   4, 
                PCVL,   6, 
                SWTO,   1, 
                TTHR,   1, 
                TTHM,   1, 
                THTL,   1, 
                TFCT,   1, 
                NPST,   5, 
                CTMP,   8, 
                CTML,   8, 
                EST3,   8, 
                SKTB,   8, 
                SKTC,   8, 
                DPOT,   8, 
                EST1,   8, 
                EST2,   8, 
                    ,   1, 
                LIDF,   1, 
                PMEE,   1, 
                PWBE,   1, 
                RNGE,   1, 
                BTWE,   1, 
                Offset (0xB9), 
                BRTS,   8, 
                S35M,   1, 
                S35S,   1, 
                    ,   1, 
                MSFG,   1, 
                FFEN,   1, 
                FFST,   1, 
                Offset (0xBB), 
                WLAT,   1, 
                BTAT,   1, 
                WLEX,   1, 
                BTEX,   1, 
                KLSW,   1, 
                WLOK,   1, 
                AT3G,   1, 
                EX3G,   1, 
                PJID,   8, 
                CPUJ,   3, 
                CPNM,   3, 
                GATY,   2, 
                Offset (0xC0), 
                BTY0,   1, 
                BAM0,   1, 
                BAL0,   1, 
                    ,   1, 
                BMF0,   4, 
                BST0,   8, 
                BRC0,   16, 
                BSN0,   16, 
                BPV0,   16, 
                BDV0,   16, 
                BDC0,   16, 
                BFC0,   16, 
                GAU0,   8, 
                BAT0,   8, 
                BPC0,   16, 
                BAC0,   16, 
                BCG0,   16, 
                BFCB,   16, 
                BTPB,   16, 
                BOL0,   1, 
                BFS0,   1, 
                Offset (0xDB), 
                ORRF,   1, 
                Offset (0xDC), 
                Offset (0xDD)
            }

            OperationRegion (ERAM, EmbeddedControl, Zero, 0xFF)
            Field (ERAM, ByteAcc, Lock, Preserve)
            {
                Offset (0x5F), 
                ERBD,   8, 
                SMPR,   8, 
                Offset (0x62)
            }

            Method (FANG, 1, NotSerialized)
            {
                Local0 = EIDR (Arg0)
                Return (Local0)
            }

            Method (FANW, 2, NotSerialized)
            {
                EIDW (Arg0, Arg1)
                Return (Arg1)
            }

            Method (TUVR, 1, NotSerialized)
            {
                Return (0x05)
            }

            Method (THRO, 1, NotSerialized)
            {
                ATHR (Arg0)
            }

            Method (CLCK, 1, NotSerialized)
            {
                Return (Zero)
            }

            Method (PCLK, 0, NotSerialized)
            {
                APCL ()
            }

            Method (ATHR, 1, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    Return (0xFF)
                }
                ElseIf ((Arg0 == One))
                {
                    Return (\_PR.C000.PPCV) /* External reference */
                }
                ElseIf ((Arg0 == 0x02))
                {
                    Return (TTHR) /* \_SB_.PCI0.LPC0.EC0_.TTHR */
                }
                Else
                {
                    Return (0xFF)
                }
            }

            Method (APCL, 0, NotSerialized)
            {
                Local0 = PCVL /* \_SB_.PCI0.LPC0.EC0_.PCVL */
                Local1 = NPST /* \_SB_.PCI0.LPC0.EC0_.NPST */
                Local2 = CPNM /* \_SB_.PCI0.LPC0.EC0_.CPNM */
                If ((Local0 <= Local1))
                {
                    Local3 = Local0
                }
                Else
                {
                    Local3 = Local1
                }

                \_PR.C000.PPCV = Local3
                If ((Local2 >= One))
                {
                    \_PR.C001.PPCV = Local3
                }

                If ((Local2 >= 0x02))
                {
                    \_PR.C002.PPCV = Local3
                    \_PR.C003.PPCV = Local3
                }

                If ((Local2 >= 0x03))
                {
                    \_PR.C004.PPCV = Local3
                    \_PR.C005.PPCV = Local3
                    \_PR.C006.PPCV = Local3
                    \_PR.C007.PPCV = Local3
                }

                Notify (\_PR.C000, 0x80) // Performance Capability Change
                If ((Local2 >= One))
                {
                    Notify (\_PR.C001, 0x80) // Performance Capability Change
                }

                If ((Local2 >= 0x02))
                {
                    Notify (\_PR.C002, 0x80) // Performance Capability Change
                    Notify (\_PR.C003, 0x80) // Performance Capability Change
                }

                If ((Local2 >= 0x03))
                {
                    Notify (\_PR.C004, 0x80) // Performance Capability Change
                    Notify (\_PR.C005, 0x80) // Performance Capability Change
                    Notify (\_PR.C006, 0x80) // Performance Capability Change
                    Notify (\_PR.C007, 0x80) // Performance Capability Change
                }
            }

            Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_10====="
            }

            Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_11====="
                P80H = 0x11
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
                If ((OSYS >= 0x07D6))
                {
                    Notify (^^^GP17.VGA.LCD, 0x87) // Device-Specific
                }

                ^^^WMID.FEBC [One] = BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                ^^^WMID.FEBC [Zero] = 0x04
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_12====="
                P80H = 0x12
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
                If ((OSYS >= 0x07D6))
                {
                    Notify (^^^GP17.VGA.LCD, 0x86) // Device-Specific
                }

                ^^^WMID.FEBC [One] = BRTS /* \_SB_.PCI0.LPC0.EC0_.BRTS */
                ^^^WMID.FEBC [Zero] = 0x04
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_13====="
            }

            Method (_Q15, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_15====="
                P80H = 0x15
                Notify (LID0, 0x80) // Status Change
            }

            Method (_Q1D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((ECID == 0x02))
                {
                    Debug = "=====PROJECT_QUERY_1D====="
                }
                Else
                {
                    Debug = "=====QUERY_1D====="
                    P80H = 0x1D
                    PCLK ()
                }
            }

            Method (_Q1E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((ECID == 0x02))
                {
                    Debug = "=====PROJECT_QUERY_1E====="
                }
                Else
                {
                    Debug = "=====QUERY_1E====="
                    P80H = 0x1E
                    If (CTUR)
                    {
                        If ((TFCT == Zero))
                        {
                            CSMI (0xDA, Zero)
                        }
                        Else
                        {
                            CSMI (0xDA, One)
                        }
                    }
                }
            }

            Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If ((ECID == 0x02))
                {
                    Debug = "=====QUERY_20====="
                    P80H = 0x20
                    Local0 = SUPL /* \_SB_.PCI0.LPC0.EC0_.SUPL */
                    Local1 = SPPT /* \_SB_.PCI0.LPC0.EC0_.SPPT */
                    Local2 = FPPT /* \_SB_.PCI0.LPC0.EC0_.FPPT */
                    Local3 = TCLT /* \_SB_.PCI0.LPC0.EC0_.TCLT */
                    DPTC (0x05, Local0)
                    DPTC (0x07, Local1)
                    DPTC (0x06, Local2)
                    DPTC (0x03, Local3)
                }
                Else
                {
                    Debug = "=====PROJECT_QUERY_20====="
                }
            }

            Method (_Q22, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x22
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q32, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_32====="
            }

            Method (_Q33, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_33====="
            }

            Method (_Q34, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====PROJECT_QUERY_34====="
            }

            Method (_Q37, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x37
                Debug = "=====PROJECT_QUERY_37====="
                Notify (ACAD, 0x80) // Status Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
                PWRS = ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                ^^^WMID.FEBC [One] = ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                ^^^WMID.FEBC [Zero] = 0x08
                Notify (WMID, 0xBC) // Device-Specific
                DCAC = Zero
            }

            Method (_Q41, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x41
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = 0x8A
                ^^^WMID.FEBC [0x02] = One
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q43, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x43
                Notify (I2CD, One) // Device Check
            }

            Method (_Q45, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x45
                ^^^WMID.FEBC [Zero] = One
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q46, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x46
                ^^^WMID.FEBC [Zero] = 0x02
                ^^^WMID.FEBC [One] = HTBN /* \_SB_.PCI0.LPC0.EC0_.HTBN */
                Notify (WMID, 0xBC) // Device-Specific
            }

            Method (_Q4C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                CSMI (0x4C, Zero)
                Stall (0xFF)
                Stall (0xFF)
            }

            Method (_Q63, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                P80H = 0x63
                Notify (AAMC, 0x80) // Status Change
            }

            OperationRegion (PRT0, SystemIO, 0x80, 0x04)
            Field (PRT0, ByteAcc, Lock, Preserve)
            {
                P80H,   8
            }

            Method (_Q24, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_24====="
                P80H = 0x24
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Method (_Q25, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Debug = "=====QUERY_25====="
                P80H = 0x25
                Sleep (0x03E8)
                Notify (BAT1, 0x81) // Information Change
                Sleep (0x03E8)
                Notify (BAT1, 0x80) // Status Change
            }

            Name (CTSL, Package (0x19)
            {
                0x10, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x17, 
                0x20, 
                0x21, 
                0x22, 
                0x24, 
                0x25, 
                0x26, 
                0x28, 
                0x90, 
                0x91, 
                0xFE, 
                0x92, 
                0x93, 
                0x94, 
                0x95, 
                0x96, 
                0x97, 
                0x98, 
                0x99
            })
            Mutex (CFMX, 0x00)
            Method (CFUN, 4, Serialized)
            {
                Name (ESRC, 0x05)
                If ((DerefOf (Arg0 [Zero]) == 0x15))
                {
                    CreateWordField (Arg1, Zero, SFUN)
                    If ((SFUN == 0x9001)){}
                    ElseIf ((SFUN == 0x9002))
                    {
                        STDT = Zero
                        BFDT = Zero
                        BFDT = Zero
                        STDT = One
                    }
                    ElseIf ((SFUN == 0x9000))
                    {
                        ESMC (Arg2)
                        If ((ESMS != 0xFF))
                        {
                            Local1 = Buffer (0x80){}
                            Local1 [Zero] = 0x80
                            Local1 [One] = ESMS /* \ESMS */
                            Local3 = ESMB /* \ESMB */
                            Local1 [0x02] = DerefOf (Local3 [Zero])
                            Local1 [0x03] = DerefOf (Local3 [One])
                            Local1 [0x04] = DerefOf (Local3 [0x02])
                            Local1 [0x05] = DerefOf (Local3 [0x03])
                            Local1 [0x06] = DerefOf (Local3 [0x04])
                            Local1 [0x07] = DerefOf (Local3 [0x05])
                            Local1 [0x08] = DerefOf (Local3 [0x06])
                            Local1 [0x09] = DerefOf (Local3 [0x07])
                            Local1 [0x0A] = DerefOf (Local3 [0x08])
                            Local1 [0x0B] = DerefOf (Local3 [0x09])
                            Local1 [0x0C] = DerefOf (Local3 [0x0A])
                            Local1 [0x0D] = DerefOf (Local3 [0x0B])
                            Local1 [0x0E] = DerefOf (Local3 [0x0C])
                            Local1 [0x0F] = DerefOf (Local3 [0x0D])
                            Local1 [0x10] = DerefOf (Local3 [0x0E])
                            Local1 [0x11] = DerefOf (Local3 [0x0F])
                            Local1 [0x12] = DerefOf (Local3 [0x10])
                            Local1 [0x13] = DerefOf (Local3 [0x11])
                            Local1 [0x14] = DerefOf (Local3 [0x12])
                            Local1 [0x15] = DerefOf (Local3 [0x13])
                            Local1 [0x16] = DerefOf (Local3 [0x14])
                            Local1 [0x17] = DerefOf (Local3 [0x15])
                            Local1 [0x18] = DerefOf (Local3 [0x16])
                            Local1 [0x19] = DerefOf (Local3 [0x17])
                            Local1 [0x1A] = DerefOf (Local3 [0x18])
                            Local1 [0x1B] = DerefOf (Local3 [0x19])
                            Local1 [0x1C] = DerefOf (Local3 [0x1A])
                            Local1 [0x1D] = DerefOf (Local3 [0x1B])
                            Local1 [0x1E] = DerefOf (Local3 [0x1C])
                            Local1 [0x1F] = DerefOf (Local3 [0x1D])
                            Local1 [0x20] = DerefOf (Local3 [0x1E])
                            Local1 [0x21] = DerefOf (Local3 [0x1F])
                            BFDT = Local1
                            STDT = One
                        }
                        Else
                        {
                            STDT = 0x8000
                        }
                    }
                    Else
                    {
                        SFNO = Arg1
                        BFDT = Arg2
                        CSMI (0xCE, Arg0)
                    }
                }
                ElseIf ((Match (CTSL, MEQ, DerefOf (Arg0 [Zero]), 
                    MTR, Zero, Zero) != Ones))
                {
                    SFNO = Arg1
                    BFDT = Arg2
                    CSMI (0xCE, Arg0)
                }
                Else
                {
                    STDT = 0x8000
                }
            }

            Name (OCSL, Package (0x03)
            {
                0x80, 
                0x81, 
                0x82
            })
            Method (PFUN, 4, Serialized)
            {
                SFNO = Arg1
                BFDT = Arg2
                CSMI (0xCF, Arg0)
                STDT = Zero
            }

            Method (CMFC, 4, Serialized)
            {
                Name (RTVL, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Debug = "=== In CMFC method ==="
                If ((ObjectType (Arg0) == One))
                {
                    RTVL [Zero] = 0x8000
                }
                ElseIf ((DerefOf (Arg0 [Zero]) < 0xFF))
                {
                    Local1 = Buffer (0x82){}
                    CreateWordField (Local1, Zero, RTST)
                    CreateField (Local1, 0x10, 0x0400, RTDT)
                    If (((ToInteger (Arg0) <= 0x8F) && (ToInteger (Arg0
                        ) >= 0x80)))
                    {
                        PFUN (Arg0, Arg1, Arg2, Arg3)
                    }
                    Else
                    {
                        CFUN (Arg0, Arg1, Arg2, Arg3)
                    }

                    RTST = STDT /* \STDT */
                    RTDT = BFDT /* \BFDT */
                    Return (Local1)
                }
                Else
                {
                    RTVL [Zero] = 0x8000
                }

                Return (RTVL) /* \_SB_.PCI0.LPC0.EC0_.CMFC.RTVL */
            }

            Mutex (FAMX, 0x00)
            Method (EIDR, 1, Serialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                Local0 = ERRD (0x5F)
                Release (FAMX)
                Return (Local0)
            }

            Method (EIDW, 2, Serialized)
            {
                Acquire (FAMX, 0xFFFF)
                ERIB = Arg0
                ERWT (0x5F, Arg1)
                Release (FAMX)
            }

            OperationRegion (ECCD, SystemMemory, 0xFE000800, 0x1000)
            Field (ECCD, AnyAcc, Lock, Preserve)
            {
                Offset (0x580), 
                Offset (0x582), 
                ECTB,   1, 
                ECTE,   1, 
                Offset (0x583), 
                ERN1,   8, 
                ERN2,   8, 
                ERN3,   8, 
                ERN4,   8, 
                ERN5,   8, 
                ERN6,   8, 
                ERN7,   8, 
                ERN8,   8, 
                ECMD,   8, 
                EDT1,   8, 
                EDT2,   8, 
                EDT3,   8, 
                EDT4,   8, 
                EDT5,   8, 
                    ,   1
            }

            Method (ERWT, 2, Serialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = 0xB1
                Local0 [One] = Arg0
                Local0 [0x02] = Arg1
                ERCD (Local0)
            }

            Method (ERRD, 1, Serialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = 0xB0
                Local0 [One] = Arg0
                Return (ERCD (Local0))
            }

            Mutex (CSMX, 0x00)
            Method (ERCD, 1, Serialized)
            {
                Acquire (CSMX, 0xFFFF)
                Name (ESRC, 0x64)
                ECTB = One
                ECMD = DerefOf (Arg0 [Zero])
                EDT1 = DerefOf (Arg0 [One])
                EDT2 = DerefOf (Arg0 [0x02])
                ECTE = One
                While (((ESRC != Zero) && (ECTE != Zero)))
                {
                    Sleep (0x0A)
                    ESRC -= One
                }

                Local0 = ERN1 /* \_SB_.PCI0.LPC0.EC0_.ERN1 */
                ECTB = Zero
                Release (CSMX)
                Return (Local0)
            }

            Method (SBAT, 2, NotSerialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = Arg0
                Local0 [One] = 0x16
                Local0 [0x02] = Arg1
                Local0 [0x03] = Zero
                Local0 [0x04] = Zero
                ESMC (Local0)
            }

            Method (SBA2, 2, NotSerialized)
            {
                Local0 = Buffer (0x08){}
                Local0 [Zero] = Arg0
                Local0 [One] = 0x36
                Local0 [0x02] = Arg1
                Local0 [0x03] = Zero
                Local0 [0x04] = Zero
                ESMC (Local0)
            }

            Mutex (ESCX, 0x00)
            Method (ESMC, 1, NotSerialized)
            {
                Acquire (ESCX, 0xFFFF)
                Name (ESRC, 0x05)
                SMD0 = Zero
                SMAD = DerefOf (Arg0 [One])
                SMCM = DerefOf (Arg0 [0x02])
                SMBN = DerefOf (Arg0 [0x03])
                Local4 = DerefOf (Arg0 [0x04])
                Local5 = Zero
                BCNT = Local4
                If ((Local4 != Zero))
                {
                    Local1 = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                    While (~(Local4 == Local5))
                    {
                        Local1 [Local5] = DerefOf (Arg0 [(0x05 + Local5)]
                            )
                        Local5 += One
                    }

                    SMD0 = Local1
                }

                SMPR = DerefOf (Arg0 [Zero])
                While ((~(ESRC == Zero) && ~((SMST & 0x80
                    ) == 0x80)))
                {
                    Sleep (0x14)
                    ESRC -= One
                }

                If ((SMST == 0x80))
                {
                    ESMB = SMD0 /* \_SB_.PCI0.LPC0.EC0_.SMD0 */
                    ESMS = BCNT /* \_SB_.PCI0.LPC0.EC0_.BCNT */
                }
                Else
                {
                    Debug = "====== Sent EC SMBus command time out. ======"
                    ESMS = 0xFF
                }

                Release (ESCX)
            }
        }

        Scope (EC0)
        {
            Method (GBMN, 0, NotSerialized)
            {
                ToHexString (BATD, Local0)
                Return (Local0)
            }

            Method (GUBS, 0, NotSerialized)
            {
                ToHexString (BSN0, Local1)
                Mid (Local1, 0x02, 0x04, Local0)
                Return (Local0)
            }

            Method (GUBT, 0, NotSerialized)
            {
                Local0 = "Li-Ion"
                Return (Local0)
            }

            Method (GUBI, 0, Serialized)
            {
                Local1 = BMF0 /* \_SB_.PCI0.LPC0.EC0_.BMF0 */
                Switch (Local1)
                {
                    Case (One)
                    {
                        Local0 = "SANYO "
                    }
                    Case (0x02)
                    {
                        Local0 = "SONY "
                    }
                    Case (0x03)
                    {
                        Local0 = "SDI "
                    }
                    Case (0x04)
                    {
                        Local0 = "PANASONIC "
                    }
                    Case (0x05)
                    {
                        Local0 = "Samsung "
                    }
                    Case (0x06)
                    {
                        Local0 = "Simplo "
                    }
                    Case (0x07)
                    {
                        Local0 = "Dynapack "
                    }
                    Case (0x08)
                    {
                        Local0 = "LG "
                    }
                    Case (0x09)
                    {
                        Local0 = "WELLTECH ENERGY "
                    }
                    Case (0x0A)
                    {
                        Local0 = "Celxpert "
                    }
                    Case (0x0B)
                    {
                        Local0 = "Murata "
                    }
                    Default
                    {
                        Local0 = "COMPAL "
                    }

                }

                Return (Local0)
            }

            Method (BMN2, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (UBS2, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (UBT2, 0, NotSerialized)
            {
                Local0 = "Li-Ion"
                Return (Local0)
            }

            Method (UBI2, 0, NotSerialized)
            {
                Return (Zero)
            }
        }

        Device (BAT1)
        {
            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (BMDL, Zero)
            Name (BASC, One)
            Name (BFFW, Zero)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (ECOK ())
                {
                    If (^^EC0.BOL0)
                    {
                        Return (0x1F)
                    }
                    Else
                    {
                        Return (0x0F)
                    }
                }
                Else
                {
                    Return (0x1F)
                }
            }

            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
            {
                Return (BIFX (Zero))
            }

            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
            {
                Return (BIFX (One))
            }

            Method (BIFX, 1, NotSerialized)
            {
                Name (STAX, Package (0x14)
                {
                    Zero, 
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "COMPAL "
                })
                Name (STAF, Package (0x0D)
                {
                    One, 
                    0x1770, 
                    0x1770, 
                    One, 
                    0x2A30, 
                    0x0258, 
                    0xB4, 
                    0x0108, 
                    0x0EC4, 
                    "PABAS0241231", 
                    "41167", 
                    "Li-Ion", 
                    "COMPAL "
                })
                STAX [0x10] = ^^EC0.GBMN ()
                STAX [0x11] = ^^EC0.GUBS ()
                STAX [0x13] = ^^EC0.GUBI ()
                If (ECOK ())
                {
                    BFFW = ^^EC0.ORRF /* \_SB_.PCI0.LPC0.EC0_.ORRF */
                    If ((^^EC0.BAM0 == Zero))
                    {
                        BASC = 0x0A
                    }

                    STAX [One] = ^^EC0.BAM0 /* \_SB_.PCI0.LPC0.EC0_.BAM0 */
                    Local0 = ^^EC0.BDC0 /* \_SB_.PCI0.LPC0.EC0_.BDC0 */
                    BMDL = Local0
                    STAX [0x02] = (^^EC0.BDC0 * BASC)
                    STAX [0x05] = ^^EC0.BDV0 /* \_SB_.PCI0.LPC0.EC0_.BDV0 */
                    If ((BFFW == One))
                    {
                        Local2 = ^^EC0.BFCB /* \_SB_.PCI0.LPC0.EC0_.BFCB */
                    }
                    Else
                    {
                        Local2 = ^^EC0.BFC0 /* \_SB_.PCI0.LPC0.EC0_.BFC0 */
                    }

                    Local2 = (Local2 * BASC)
                    STAX [0x03] = Local2
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x0A
                    STAX [0x06] = Local1
                    Divide (Local2, 0x64, Local0, Local1)
                    Local1 *= 0x03
                    STAX [0x07] = Local1
                    STAF [Zero] = DerefOf (STAX [One])
                    STAF [One] = DerefOf (STAX [0x02])
                    STAF [0x02] = DerefOf (STAX [0x03])
                    STAF [0x03] = DerefOf (STAX [0x04])
                    STAF [0x04] = DerefOf (STAX [0x05])
                    STAF [0x05] = DerefOf (STAX [0x06])
                    STAF [0x06] = DerefOf (STAX [0x07])
                    STAF [0x07] = DerefOf (STAX [0x0E])
                    STAF [0x08] = DerefOf (STAX [0x0F])
                    STAF [0x09] = DerefOf (STAX [0x10])
                    STAF [0x0A] = DerefOf (STAX [0x11])
                    STAF [0x0B] = DerefOf (STAX [0x12])
                    STAF [0x0C] = DerefOf (STAX [0x13])
                    If ((Arg0 == One))
                    {
                        Return (STAX) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAX */
                    }
                    Else
                    {
                        Return (STAF) /* \_SB_.PCI0.LPC0.BAT1.BIFX.STAF */
                    }
                }
            }

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {
                Name (PBST, Package (0x04)
                {
                    Zero, 
                    Ones, 
                    Ones, 
                    0x1770
                })
                If (ECOK ())
                {
                    PBST [Zero] = ^^EC0.BST0 /* \_SB_.PCI0.LPC0.EC0_.BST0 */
                    If ((^^EC0.BAC0 >> 0x0F))
                    {
                        Local4 = ((~^^EC0.BAC0 & 0xFFFF) + One)
                    }
                    Else
                    {
                        Local4 = ^^EC0.BAC0 /* \_SB_.PCI0.LPC0.EC0_.BAC0 */
                    }

                    If ((^^EC0.BAM0 == Zero))
                    {
                        Local4 = ((Local4 * ^^EC0.BPV0) / 0x03E8)
                    }

                    PBST [One] = Local4
                    PBST [0x02] = (^^EC0.BRC0 * BASC)
                    PBST [0x03] = ^^EC0.BPV0 /* \_SB_.PCI0.LPC0.EC0_.BPV0 */
                    If ((^^EC0.BDC0 != BMDL))
                    {
                        Notify (BAT1, 0x81) // Information Change
                    }
                }

                Return (PBST) /* \_SB_.PCI0.LPC0.BAT1._BST.PBST */
            }

            Method (_BTP, 1, NotSerialized)  // _BTP: Battery Trip Point
            {
                Local0 = (Arg0 / BASC)
                ^^EC0.BTPB = Local0
            }
        }

        Device (ACAD)
        {
            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })
            Name (XX00, Buffer (0x03){})
            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Local0 = ^^EC0.ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                CreateWordField (XX00, Zero, SSZE)
                CreateByteField (XX00, 0x02, ACST)
                SSZE = 0x03
                If (Local0)
                {
                    P80H = 0xAC
                    AFN4 (One)
                    ACST = Zero
                }
                Else
                {
                    P80H = 0xDC
                    AFN4 (0x02)
                    ACST = One
                }

                ALIB (One, XX00)
                Return (Local0)
            }
        }

        Method (OSTP, 0, NotSerialized)
        {
            Local1 = One
            If ((OSYS == 0x07D1))
            {
                Local1 = Zero
            }

            If ((OSYS == 0x07D2))
            {
                Local1 = Zero
            }

            If ((OSYS == 0x07D6))
            {
                Local1 = One
            }

            If ((OSYS == 0x03E8))
            {
                Local1 = 0x02
            }

            If ((OSYS == 0x07D9))
            {
                Local1 = 0x03
            }

            If ((OSYS == 0x07DC))
            {
                Local1 = 0x04
            }

            If ((OSYS == 0x07DD))
            {
                Local1 = 0x05
            }

            If ((OSYS == 0x07DF))
            {
                Local1 = 0x06
            }

            If ((OSYS == 0x07E0))
            {
                Local1 = 0x06
            }

            If ((OSYS == 0x07E1))
            {
                If (_OSI ("Windows 2017.2"))
                {
                    Local1 = 0x07
                }
                Else
                {
                    Local1 = 0x06
                }
            }

            ^EC0.OSTY = Local1
        }

        Device (LID0)
        {
            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
            Name (PLID, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Local0 = ^^EC0.LIDF /* \_SB_.PCI0.LPC0.EC0_.LIDF */
                If (Local0)
                {
                    Return (Zero)
                }

                Return (One)
            }
        }

        Method (ECFG, 1, NotSerialized)
        {
            If ((Arg0 == One))
            {
                ^EC0.ECRD = One
            }
            Else
            {
                ^EC0.ECRD = Zero
            }
        }
    }

    Scope (_SB.PCI0.LPC0.EC0)
    {
        Method (GCMS, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GOTS, 2, Serialized)
        {
            Local0 = Zero
            Local1 = (Arg0 & 0xFF)
            Switch (Local1)
            {
                Case (0x83)
                {
                    If (!TOUP)
                    {
                        Local0 |= 0x02
                    }
                }

            }

            Arg1 = Local0
            Return (Zero)
        }

        Method (GBL1, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GBL2, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GSTY, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GSDA, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GTTY, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GTDA, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GACS, 1, NotSerialized)
        {
            Local0 = Zero
            Local0 = ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
            Arg0 = Local0
            Return (Zero)
        }

        Method (GHKF, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GHKD, 1, NotSerialized)
        {
            Local0 = Zero
            Arg0 = Local0
            Return (Zero)
        }

        Method (GGSI, 2, Serialized)
        {
            Local0 = Zero
            Local1 = DerefOf (Arg0 [Zero])
            Local2 = DerefOf (Arg0 [One])
            If ((Local1 == Zero))
            {
                Arg1 = Local0
            }
            ElseIf ((Local1 == One))
            {
                Switch (Local2)
                {
                    Case (One)
                    {
                        Local0 = CTMP /* \_SB_.PCI0.LPC0.EC0_.CTMP */
                    }
                    Case (0x02)
                    {
                        Local0 = C1FR /* \_SB_.PCI0.LPC0.EC0_.C1FR */
                    }
                    Case (0x03)
                    {
                        Local0 = S1TV /* \_SB_.PCI0.LPC0.EC0_.S1TV */
                    }
                    Case (0x04)
                    {
                    }
                    Case (0x05)
                    {
                    }
                    Case (0x06)
                    {
                        Local0 = G1FR /* \_SB_.PCI0.LPC0.EC0_.G1FR */
                    }
                    Case (0x07)
                    {
                    }
                    Case (0x08)
                    {
                    }
                    Case (0x09)
                    {
                    }
                    Case (0x0A)
                    {
                        Local0 = SKTC /* \_SB_.PCI0.LPC0.EC0_.SKTC */
                    }
                    Case (0x0B)
                    {
                    }
                    Case (0x0C)
                    {
                    }
                    Case (0x0D)
                    {
                    }
                    Case (0x0E)
                    {
                    }
                    Case (0x0F)
                    {
                    }
                    Case (0x10)
                    {
                    }
                    Case (0x11)
                    {
                    }

                }

                Arg1 = Local0
            }

            Return (Zero)
        }
    }

    Device (AAMC)
    {
        Name (_HID, "10251229")  // _HID: Hardware ID
        Name (_DDN, "Acer Airplane Mode Controller")  // _DDN: DOS Device Name
        Name (_UID, Zero)  // _UID: Unique ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            Return (0x0F)
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 0000010C
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : 73
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]                 FACS Address : 8F360000
[028h 0040   4]                 DSDT Address : 8F7E6000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000400
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000404
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000800
[04Ch 0076   4]       PM Timer Block Address : 00000408
[050h 0080   4]           GPE0 Block Address : 00000420
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0064
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 00
[06Dh 0109   2]   Boot Flags (decoded below) : 0003
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0000C5AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000000000B0

[080h 0128   1]         Value to cause reset : FB
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 000000008F7E6000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000000400

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 00 [SystemMemory]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000404

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000000800

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000408

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 04 [QWord Access:64]
[0E0h 0224   8]                      Address : 0000000000000420

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 00 [SystemMemory]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 73 41 43 52 53 59 53  // FACP.....sACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 36 8F 00 60 7E 8F 00 02 09 00  // ......6..`~.....
    0030: B0 00 00 00 A0 A1 00 00 00 04 00 00 00 00 00 00  // ................
    0040: 04 04 00 00 00 00 00 00 00 08 00 00 08 04 00 00  // ................
    0050: 20 04 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 64 00 E9 03 00 00 00 00 01 03 0D 00 00 03 00 00  // d...............
    0070: AD C5 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    0080: FB 00 00 00 00 00 00 00 00 00 00 00 00 60 7E 8F  // .............`~.
    0090: 00 00 00 00 01 20 00 03 00 04 00 00 00 00 00 00  // ..... ..........
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 00 08 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 04 00 00 00 00 00 00 01 40 00 04  // . ...........@..
    00E0: 20 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 7B5ED15E
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 5E D1 5E 7B 00 00 00 00  // FACS@...^.^{....
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 07
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 000000008E99F000

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 000000008EE8E000

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 07 41 43 52 53 59 53  // FPDTD.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 01 00 00 00 00 00 F0 99 8E  // ................
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 00 E0 E8 8E  // ................
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8E
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]            Hardware Block ID : 10228210

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 8E 41 43 52 53 59 53  // HPET8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 10 82 22 10 00 00 00 00 00 00 D0 FE  // ......".........
    0030: 00 00 00 00 00 80 00 00                          // ........


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 0000013E
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 7D
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block]
[031h 0049   1]                        Flags : B0
[032h 0050   2]                       Length : 0048
[034h 0052   2]                     DeviceId : 0002

[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FDD00000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]                     Reserved : 80048F6E

[048h 0072   1]                   Entry Type : 03
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1]                 Data Setting : 00

[04Ch 0076   1]                   Entry Type : 04
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1]                 Data Setting : 00

[050h 0080   1]                   Entry Type : 43
[051h 0081   2]                    Device ID : FF00
[053h 0083   1]                 Data Setting : 00
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A4
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                   Entry Type : 04
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1]                 Data Setting : 00

[05Ch 0092   1]                   Entry Type : 00
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1]                 Data Setting : 00

[060h 0096   1]                   Entry Type : 48
[061h 0097   2]                    Device ID : 0000
[063h 0099   1]                 Data Setting : 00
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                   Entry Type : 48
[069h 0105   2]                    Device ID : 0000
[06Bh 0107   1]                 Data Setting : D7
[06Ch 0108   1]                       Handle : 21
[06Dh 0109   2]        Source Used Device ID : 00A0
[06Fh 0111   1]                      Variety : 01

[070h 0112   1]                   Entry Type : 48
[071h 0113   2]                    Device ID : 0000
[073h 0115   1]                 Data Setting : 00
[074h 0116   1]                       Handle : 22
[075h 0117   2]        Source Used Device ID : 0001
[077h 0119   1]                      Variety : 01

[078h 0120   1]                Subtable Type : 11 [Unknown Subtable Type]
[079h 0121   1]                        Flags : B0
[07Ah 0122   2]                       Length : 0058
[07Ch 0124   2]                     DeviceId : 0002

**** Unknown IVRS subtable type 0x11

[0D0h 0208   1]                Subtable Type : 40 [Unknown Subtable Type]
[0D1h 0209   1]                        Flags : B0
[0D2h 0210   2]                       Length : 006E
[0D4h 0212   2]                     DeviceId : 0002

**** Unknown IVRS subtable type 0x40

Raw Table Data: Length 318 (0x13E)

    0000: 49 56 52 53 3E 01 00 00 02 7D 41 43 52 53 59 53  // IVRS>....}ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 D0 FD 00 00 00 00  // ..H...@.........
    0040: 00 00 00 00 6E 8F 04 80 03 08 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    0070: 48 00 00 00 22 01 00 01 11 B0 58 00 02 00 40 00  // H...".....X...@.
    0080: 00 00 D0 FD 00 00 00 00 00 00 00 00 00 02 04 00  // ................
    0090: DA 4A 29 22 EF 77 4F 00 00 00 00 00 00 00 00 00  // .J)".wO.........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A4 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 21 A0 00 01 48 00 00 00 22 01 00 01  // H...!...H..."...
    00D0: 40 B0 6E 00 02 00 40 00 00 00 D0 FD 00 00 00 00  // @.n...@.........
    00E0: 00 00 00 00 00 02 04 00 DA 4A 29 22 EF 77 4F 00  // .........J)".wO.
    00F0: 00 00 00 00 00 00 00 00 03 08 00 00 04 FE FF 00  // ................
    0100: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0110: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    0120: 48 00 00 00 22 01 00 01 F0 99 00 F7 50 4E 50 44  // H...".......PNPD
    0130: 30 30 34 30 00 00 00 00 00 00 00 00 00 00        // 0040..........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 79
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 79 41 43 52 53 59 53  // MCFG<....yACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C003, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C002.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000960, 
                0x00000B6D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C003.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 19 external control methods found during
     * disassembly, but only 0 were resolved (19 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M097, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M131, IntObj)
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M232, MethodObj)    // Warning: Unknown method, guessing 7 arguments

    Scope (\_SB)
    {
        Name (MACO, Zero)
    }

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M189, Buffer (0x0100){})
        Name (M190, Ones)
        Name (M191, Ones)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (PX00 ())
            }

            If ((Arg0 == One))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0A))
            {
                PX10 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = Zero
            M158 = Zero
            M160 = Zero
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (One, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            Local7 = Buffer (0x05){}
            CreateWordField (Local7, Zero, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = Zero
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, Zero)
            M133 (0x11, Local0) = M049 /* External reference */
            Store (M113 (Local0, Local6, M023 (Zero, M091, M090), If ((M192 && Local6))
                    {
                        M000 (0x86)
                        M112 (Local0, Zero)
                        M111 (Local0, One)
                        Sleep (0x20)
                        M112 (Local0, 0x02)
                        M112 (Local0, One)
                        M000 (0x87)
                        HPOK = Zero
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        Local2 = Zero
                        While ((Local2 < 0x0F))
                        {
                            M023 (Zero, M091, M090)
                            Local4 = One
                            Local5 = 0xC8
                            While ((Local4 && Local5))
                            {
                                0xA5 = M021 (Zero, M091, M090)
                                Local0
                                Local0 &= 0x7F
                                If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                {
                                    Local4 = Zero
                                }
                                Else
                                {
                                    Sleep (0x05)
                                    Local5--
                                }
                            }

                            If (!Local4)
                            {
                                M090 = M024 (Zero, M091)
                                Local5
                                If (Local5)
                                {
                                    M026 (Zero, M091, M090)
                                    Sleep (0x05)
                                    Local2++
                                }
                                Else
                                {
                                    Local0 = Zero
                                    If ((M025 == Zero))
                                    {
                                        M091
                                        M090
                                        Ones
                                        Local0 = One
                                    }

                                    If (Local0)
                                    {
                                        M111 (M049, M133 (0x17, One))
                                        M111 (M049, M133 (0x18, One))
                                        HPOK = One
                                        Local2 = 0x10
                                    }
                                    Else
                                    {
                                        HPOK = Zero
                                        Local2 = 0x10
                                    }
                                }
                            }
                            Else
                            {
                                Local2 = 0x10
                            }
                        }

                        If (!HPOK)
                        {
                            M000 (0x88)
                            Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                Local5 = 0x05, While ((Local4 && Local5))
                                        {
                                            0xA5 = M021 (Zero, M091, M090)
                                            Local0
                                            Local0 &= 0x7F
                                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                            {
                                                Local4 = Zero
                                            }
                                            Else
                                            {
                                                Store (M019 (M095 (M094 (M093 (Zero, Local0), Sleep (0x05), Local5--), 
                                                    M201 = Zero, \_SB.ALIB, 0x06), Local7, If ((M097 (Zero, 0x54 = M019 (
                                                    Zero, M091, M090), Local0, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFC)), 
                                                    M232 (M097 (Zero, 0x10, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFF)), 
                                                    M000 (0x89), Else
                                                                                {
                                                                                    M000 (0x8A)
                                                                                    M201 = Zero
                                                                                    \_SB.ALIB
                                                                                    0x06
                                                                                    Local7
                                                                                    M000 (0x8B)
                                                                                    M111 (M049, M133 (0x17, Zero))
                                                                                    M111 (M049, M133 (0x18, Zero))
                                                                                    M112 (Local0, Zero)
                                                                                    Sleep (0x0A)
                                                                                    M111 (Local0, Zero)
                                                                                    M023 (Zero, M091, M090)
                                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                                                                        Local5 = 0x05, While ((Local4 && Local5))
                                                                                                {
                                                                                                    0xA5 = M021 (Zero, M091, M090)
                                                                                                    Local0
                                                                                                    Local0 &= 0x7F
                                                                                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                                                                    {
                                                                                                        Local4 = Zero
                                                                                                    }
                                                                                                    Else
                                                                                                    {
                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x05), Local5--), 
                                                                                                            HPOK = 0x02, M000 (0x8C), If (HPOK)
                                                                                                                    {
                                                                                                                        Local5 = 0x7FFFFFFF
                                                                                                                        Local5 |= 0x80000000
                                                                                                                        0x54 = M019 (Zero, M091, M090)
                                                                                                                        Local1
                                                                                                                        M020 (Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFC))
                                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local0), If (((HPOK == One) && 
                                                                                                                            (Local0 != Local5)))
                                                                                                                                        {
                                                                                                                                            M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                                                                Local5))
                                                                                                                                                        {
                                                                                                                                                            M020 (M095 (M094 (M191 = (M093 (One, Zero) + 0x4C), Sleep (0x0A), M020 (
                                                                                                                                                                Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFF)))))
                                                                                                                                                        })))
                                                                                                                                        })))
                                                                                                                    }))
                                                                                                    }
                                                                                                }))
                                                                                }))) != )){})
                                            }
                                        }))
                        }
                    })
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & One)
            If (M195)
            {
                M111 (M049, M133 (0x17, One))
            }
            Else
            {
                M111 (M049, M133 (0x17, Zero))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & One)
            If (M196)
            {
                M111 (M049, M133 (0x18, One))
            }
            Else
            {
                M111 (M049, M133 (0x18, Zero))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX08.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX09.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX10, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            \_SB.MACO = (Arg0 & One)
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & One)
            Local2 = M162 /* \_SB_.PCI0.GP17.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0E, Zero, 0x08, Local2)
            }
        }

        Name (ATIB, Buffer (0x0100){})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (AF00 ())
            }

            If ((Arg0 == One))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, Zero, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = Zero
                M158 = Zero
                M159 = Zero
                M160 = Zero
                Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = One
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, Zero)
        Name (M211, Zero)
        Name (M212, Zero)
        Name (M213, Zero)
        Name (M214, Zero)
        Name (M215, Zero)
        Name (M303, Zero)
        Name (M304, Zero)
        Name (SSDM, 0x0A)
        Name (SCDY, Zero)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, Zero, M165)
            CreateBitField (M164, One, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.GP17.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.GP17.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.GP17.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.GP17.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.GP17.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.GP17.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.GP17.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.GP17.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, Zero)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = Zero
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.GP17.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.GP17.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.GP17.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = Zero
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.GP17.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = Zero
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ One)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = Zero
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, Zero), 0x10, Local0)
            Else
            {
                 = M043 (Zero, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [Zero] = 0x05
                    ATIB [One] = Zero
                    ATIB [0x02] = Zero
                    ATIB [0x03] = Zero
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & One))
            {
                CreateBitField (M164, Zero, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, One, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)){}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                Local0 = (Arg0 & 0x03)
                M303 = Local0
                Local0 = (Arg1 & Ones)
                M304 = Local0
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 5 external control methods found during
     * disassembly, but only 0 were resolved (5 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.GP17.ACP_, DeviceObj)
    External (_SB_.PCI0.GP17.AZAL, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M017, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M249, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M250, MethodObj)    // Warning: Unknown method, guessing 4 arguments

    Name (M278, One)
    Name (M279, One)
    Name (M27A, One)
    Method (M276, 0, NotSerialized)
    {
        If ((M27A == Zero))
        {
            M278 = Zero
        }

        If (((M278 == One) || (M279 == One)))
        {
            0x08 = M017 (Zero, 0x08, One, 0x19, Zero)
            Local0
             = M019 (Local0, Zero, 0x05)
            Local1
            If ((M27A == Zero))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                If ((Local1 != Ones))
                {
                    M000 (0xB4)
                    M250 (Zero, Zero, 0x00058A74, Zero)
                    M250 (Zero, Zero, 0x00058A54, 0xC8)
                    M250 (Zero, Zero, 0x00058A14, 0x03)
                    0x00058A74 = M249 (Zero, Zero)
                    Local4
                    While ((Local4 == Zero))
                    {
                        0x00058A74 = M249 (Zero, Zero)
                        Local4
                        If ((Local4 != Zero))
                        {
                            Break
                        }
                    }

                    M250 (Zero, Zero, 0x00048720, 0x0103)
                    Local4 = One
                    Local5 = 0x64
                    While (((Local4 != Zero) && Local5))
                    {
                        0x00048720 = M249 (Zero, Zero)
                        Local4
                        Local4 |= 0x06
                        Local4 &= 0xFFFFFF0F
                        M250 (Zero, Zero, 0x00048720, Local4)
                        0x00048728 = M249 (Zero, Zero)
                        Local4
                        Local4 &= 0x03
                        Local5--
                        Stall (0x63)
                    }

                    M250 (Zero, Zero, 0x00048720, Zero)
                    M000 (0xB5)
                }
            }
        }
    }

    Method (M277, 0, NotSerialized)
    {
        If ((M27A == Zero))
        {
            M278 = Zero
        }

        If (((M278 == Zero) && (M279 == Zero)))
        {
            0x08 = M017 (Zero, 0x08, One, 0x19, Zero)
            Local0
             = M019 (Local0, Zero, 0x05)
            Local1
            If ((M27A == Zero))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                If ((Local1 != Ones))
                {
                    M000 (0xB6)
                    M250 (Zero, Zero, 0x00058A74, Zero)
                    M250 (Zero, Zero, 0x00058A54, Zero)
                    M250 (Zero, Zero, 0x00058A14, 0x03)
                    0x00058A74 = M249 (Zero, Zero)
                    Local4
                    While ((Local4 == Zero))
                    {
                        0x00058A74 = M249 (Zero, Zero)
                        Local4
                        If ((Local4 != Zero))
                        {
                            Break
                        }
                    }

                    M250 (Zero, Zero, 0x00048720, 0x0101)
                    Local4 = One
                    Local5 = 0x64
                    While (((Local4 != 0x02) && Local5))
                    {
                        0x00048720 = M249 (Zero, Zero)
                        Local4
                        Local4 |= 0x06
                        Local4 &= 0xFFFFFF0F
                        M250 (Zero, Zero, 0x00048720, Local4)
                        0x00048728 = M249 (Zero, Zero)
                        Local4
                        Local4 &= 0x03
                        Local5--
                        Stall (0x63)
                    }

                    M250 (Zero, Zero, 0x00048720, Zero)
                    M000 (0xB7)
                }
            }
        }
    }

    Scope (\_SB.PCI0.GP17.ACP)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M278 = One
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M278 = Zero
            M277 ()
        }
    }

    Scope (\_SB.PCI0.GP17.AZAL)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M279 = One
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M279 = Zero
            M277 ()
        }
    }
}



SSDT12
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 7 external control methods found during
     * disassembly, but only 0 were resolved (7 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.LPC0.EC0_, DeviceObj)
    External (_SB_.PCI0.M223, UnknownObj)
    External (_SB_.PCI0.M225, UnknownObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M029, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M032, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, IntObj)
    External (M114, MethodObj)    // Warning: Unknown method, guessing 6 arguments
    External (M219, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M226, UnknownObj)

    Scope (\_GPE)
    {
        Method (M222, 0, NotSerialized)
        {
            M226 = M049 /* External reference */
            0x11
            Local0
            M226 = M049 /* External reference */
            0x12
            Local1
            M226 = M049 /* External reference */
            0x14
            Local2
            M226 = M049 /* External reference */
            0x18
            Local3
            M226 = M049 /* External reference */
            0x17
            Local5
            If (M029 (Local2, M000 (0x91), M032 (Local2, Zero), M112 (Local3, Zero), Sleep (
                0x0A), M111 (Local3, Zero), Sleep (0x0A)))
            {
                M219 (Local3, Zero, M114 (Local0, Local1, Zero, Local5, M000 (0x92), Else
                        {
                            M032 (Local2, One)
                            Local3 = M113 /* External reference */
                            Local4
                            If (Local4)
                            {
                                M000 (0x93)
                                M219 (Local3, One, M112 (Local3, Zero), M111 (Local3, One))
                                Sleep (0x0A)
                                M112 (Local3, 0x02)
                                M112 (Local3, One)
                                Sleep (0x0A)
                                M114 (Local0, Local1, One, Local5, M219 (Local3, 0x02, M000 (0x94), If (CondRefOf (
                                    \_SB.PCI0.M223))
                                        {
                                            Notify (\_SB.PCI0.M223, Zero) // Bus Check
                                        }))
                            }
                        }))
            }
        }

        Method (M224, 0, NotSerialized)
        {
            M226 = M049 /* External reference */
            0x19
            Local0
            M226 = M049 /* External reference */
            0x1A
            Local1
            M226 = M049 /* External reference */
            0x1C
            Local2
            M226 = M049 /* External reference */
            0x20
            Local3
            M226 = M049 /* External reference */
            0x1F
            Local5
            If (M029 (Local2, M000 (0x95), M032 (Local2, Zero), M112 (Local3, Zero), Sleep (
                0x0A), M111 (Local3, Zero), Sleep (0x0A)))
            {
                M219 (Local3, Zero, M114 (Local0, Local1, Zero, Local5, M000 (0x96), Else
                        {
                            M032 (Local2, One)
                            Local3 = M113 /* External reference */
                            Local4
                            If (Local4)
                            {
                                M000 (0x97)
                                M219 (Local3, One, M112 (Local3, Zero), M111 (Local3, One))
                                Sleep (0x0A)
                                M112 (Local3, 0x02)
                                M112 (Local3, One)
                                Sleep (0x0A)
                                M114 (Local0, Local1, One, Local5, M219 (Local3, 0x02, M000 (0x98), If (CondRefOf (
                                    \_SB.PCI0.M225))
                                        {
                                            Notify (\_SB.PCI0.M225, Zero) // Bus Check
                                        }))
                            }
                        }))
            }
        }
    }

    Scope (\_SB.PCI0.LPC0.EC0)
    {
        Method (M257, 0, Serialized)
        {
            M226 = M049 /* External reference */
            0x11
            Local0
            M226 = M049 /* External reference */
            0x12
            Local1
            M226 = M049 /* External reference */
            0x18
            Local3
            M226 = M049 /* External reference */
            0x17
            Local5
            Local3 = M113 /* External reference */
            Local4
            If (Local4)
            {
                M000 (0x93)
                M219 (Local3, One, M112 (Local3, Zero), M111 (Local3, One))
                Sleep (0x0A)
                M112 (Local3, 0x02)
                M112 (Local3, One)
                Sleep (0x0A)
                M114 (Local0, Local1, One, Local5, M219 (Local3, 0x02, M000 (0x94), If (CondRefOf (
                    \_SB.PCI0.M223))
                        {
                            Notify (\_SB.PCI0.M223, Zero) // Bus Check
                        }))
            }
        }

        Method (M258, 0, Serialized)
        {
            M226 = M049 /* External reference */
            0x11
            Local0
            M226 = M049 /* External reference */
            0x12
            Local1
            M226 = M049 /* External reference */
            0x18
            Local3
            M226 = M049 /* External reference */
            0x17
            Local5
            M000 (0x91)
            M112 (Local3, Zero)
            Sleep (0x0A)
            M111 (Local3, Zero)
            Sleep (0x0A)
            M219 (Local3, Zero, M114 (Local0, Local1, Zero, Local5, M000 (0x92), If (CondRefOf (
                \_SB.PCI0.M223))
                    {
                        Notify (\_SB.PCI0.M223, Zero) // Bus Check
                    }))
        }

        Method (M259, 0, Serialized)
        {
            M226 = M049 /* External reference */
            0x19
            Local0
            M226 = M049 /* External reference */
            0x1A
            Local1
            M226 = M049 /* External reference */
            0x20
            Local3
            M226 = M049 /* External reference */
            0x1F
            Local5
            Local3 = M113 /* External reference */
            Local4
            If (Local4)
            {
                M000 (0x97)
                M219 (Local3, One, M112 (Local3, Zero), M111 (Local3, One))
                Sleep (0x0A)
                M112 (Local3, 0x02)
                M112 (Local3, One)
                Sleep (0x0A)
                M114 (Local0, Local1, One, Local5, M219 (Local3, 0x02, M000 (0x98), If (CondRefOf (
                    \_SB.PCI0.M225))
                        {
                            Notify (\_SB.PCI0.M225, Zero) // Bus Check
                        }))
            }
        }

        Method (M260, 0, Serialized)
        {
            M226 = M049 /* External reference */
            0x19
            Local0
            M226 = M049 /* External reference */
            0x1A
            Local1
            M226 = M049 /* External reference */
            0x20
            Local3
            M226 = M049 /* External reference */
            0x1F
            Local5
            M000 (0x95)
            M112 (Local3, Zero)
            Sleep (0x0A)
            M111 (Local3, Zero)
            Sleep (0x0A)
            M219 (Local3, Zero, M114 (Local0, Local1, Zero, Local5, M000 (0x96), If (CondRefOf (
                \_SB.PCI0.M225))
                    {
                        Notify (\_SB.PCI0.M225, Zero) // Bus Check
                    }))
        }
    }

    Scope (\_SB)
    {
        Name (M261, Zero)
        Name (M262, Zero)
        Method (M263, 1, Serialized)
        {
            If (((Arg0 == 0x03) || (Arg0 == 0x04)))
            {
                M000 (0xAE)
                M226 = M049 /* External reference */
                0x10
                Local0
                M226 = M049 /* External reference */
                0x18
                Local3
                Local3 = M113 /* External reference */
                M261
                If ((Local0 == 0x02))
                {
                    M226 = M049 /* External reference */
                    0x20
                    Local3
                    Local3 = M113 /* External reference */
                    M262
                }

                M000 (0xAF)
            }
        }

        Method (M264, 1, Serialized)
        {
            If (((Arg0 == 0x03) || (Arg0 == 0x04)))
            {
                M000 (0xB0)
                M226 = M049 /* External reference */
                0x10
                Local0
                M226 = M049 /* External reference */
                0x18
                Local3
                If ((M113 != Local3))
                {
                    M261
                    If (CondRefOf (\_SB.PCI0.M223))
                    {
                        Notify (\_SB.PCI0.M223, Zero) // Bus Check
                    }
                }

                If ((Local0 == 0x02))
                {
                    M226 = M049 /* External reference */
                    0x20
                    Local3
                    If ((M113 != Local3))
                    {
                        M262
                        If (CondRefOf (\_SB.PCI0.M225))
                        {
                            Notify (\_SB.PCI0.M225, Zero) // Bus Check
                        }
                    }
                }

                M000 (0xB1)
            }
        }
    }
}



SSDT13
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 8 external control methods found during
     * disassembly, but only 0 were resolved (8 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.M263, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M264, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP18.SATA.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP18.SATA.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SATA.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SATA.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0x8F767018, 0x000100C9)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   32, 
        M327,   16, 
        M328,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32, 
        M290,   32
    }

    Method (M000, 1, Serialized)
    {
        Name (M285, Buffer (0x04)
        {
             0x01, 0x03, 0x80, 0x00                           // ....
        })
        CreateByteField (M285, Zero, M286)
        CreateByteField (M285, One, M287)
        CreateWordField (M285, 0x02, M288)
        If ((ToInteger (M286) == One))
        {
            Local0 = (Arg0 + 0xB0000C00)
            Local1 = ToInteger (M288)
            If ((ToInteger (M287) == 0x03))
            {
                OperationRegion (VARM, SystemIO, Local1, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                VARR = Local0
            }
            ElseIf ((ToInteger (M287) == 0x02))
            {
                OperationRegion (VARN, SystemIO, Local1, 0x02)
                Field (VARN, WordAcc, NoLock, Preserve)
                {
                    VARS,   16
                }

                VARS = (Local0 & 0xFFFF)
            }
            ElseIf ((ToInteger (M287) == One))
            {
                OperationRegion (VARO, SystemIO, Local1, One)
                Field (VARO, ByteAcc, NoLock, Preserve)
                {
                    VART,   8
                }

                VART = (Local0 & 0xFF)
            }
        }
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Mutex (M253, 0x00)
    Method (M249, 3, Serialized)
    {
        If (((Arg0 == Zero) && (Arg1 == Zero)))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1)
        }

        If ((Local0 == Ones))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg2, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 4, Serialized)
    {
        If (((Arg0 == Zero) && (Arg1 == Zero)))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1)
        }

        If ((Local0 != Ones))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg2, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg3
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x68)
        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local0 |= 0x20
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M019 (Arg0, Arg1, Arg2, 0x68)
            If ((Local3 & 0x08000000))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If ((Local0 == Zero))
        {
            If ((M085 >= 0x02))
            {
                Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                    One)
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf ((Local0 == One))
        {
            Local1 = M038 /* External reference */
            Local2
        }
        ElseIf ((Local0 == 0x02))
        {
            (Local1 + 0x08) = M038 /* External reference */
            Local2
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        If ((Local0 == Zero))
        {
            If ((M085 >= 0x02))
            {
                M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                    0x02 | Arg1))
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, One, Zero)
            }
        }
        ElseIf ((Local0 == One))
        {
            M039 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x02))
        {
            M039 ((Local1 + 0x08), Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M330, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((M085 >= 0x0B))
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                    0x04), Zero, One))
            }
            Else
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                    0x04), Zero, One))
            }
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 >= 0x03))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), Zero, One))
        }
        Else
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            If ((M013 (Local0, Zero, Zero, 0x20) != Ones))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, One)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, One)
                If (((Local3 == One) && (Local4 == One)))
                {
                    Local0 = One
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local3 != Zero))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)){}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = Zero
                    Local2 = One
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == Zero))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Zero)
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            One) * 0x04), 0x04, Zero)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == One))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                One) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (Zero, M013 ((Local0 + Local1), 0x05, Zero, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, Zero, 0x08), 0x19, Zero, 0x08)
                                        If ((M265 (Local6, Zero, Zero) == One))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, One)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    One) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        One) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                If ((M009 (Local5) == Local6))
                                {
                                    Local7 = One
                                }
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                If ((Arg3 != One))
                {
                    M120 = Zero
                    \_SB.ALIB (0x06, M115)
                }
            }
            Else
            {
                If ((Arg3 != One))
                {
                    M120 = One
                    \_SB.ALIB (0x06, M115)
                }

                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 2, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = Zero
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M011 ((Local0 + Local1), One, Zero, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Return (Local4)
                    }

                    Local1 += 0x03
                }
            }
        }

        Return (Ones)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = One
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        Sleep (Local2)
        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (ToInteger (Local0))
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x0B))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, Arg0, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, 0x02, 0x19, Zero, 0x08))
            }
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TPTS (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TPTS (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            \_SB.M263 (Arg0)
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TWAK (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TWAK (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            \_SB.M264 (Arg0)
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_.GACS, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GBBC, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GBBS, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GBL1, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GBL2, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GBSI, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GCMS, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GGSI, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GHKD, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GHKF, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GOTS, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GSDA, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GSKS, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GSTY, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GTDA, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GTTY, IntObj)

    Scope (\_SB.PCI0)
    {
        Device (WMID)
        {
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "APGe")  // _UID: Unique ID
            OperationRegion (AGNS, SystemMemory, 0x8F35A000, 0x00001187)
            Field (AGNS, AnyAcc, Lock, Preserve)
            {
                D2DF,   8, 
                MTID,   8, 
                WMIB,   33056, 
                ECDA,   2048, 
                HDIF,   504, 
                ODIF,   168, 
                CTID,   16, 
                LMST,   8, 
                EPMS,   8, 
                DCST,   8, 
                APUS,   8, 
                RFDS,   8, 
                ODST,   8, 
                HSST,   8, 
                TMGB,   16, 
                TOPT,   8, 
                PSSP,   8
            }

            Name (_WDG, Buffer (0xF0)
            {
                /* 0000 */  0x5E, 0xA1, 0x6A, 0x67, 0x47, 0x6A, 0x9F, 0x4D,  // ^.jgGj.M
                /* 0008 */  0xA2, 0xCC, 0x1E, 0x6D, 0x18, 0xD1, 0x40, 0x26,  // ...m..@&
                /* 0010 */  0xBC, 0x00, 0x01, 0x08, 0xEA, 0x69, 0xEF, 0x61,  // .....i.a
                /* 0018 */  0x5C, 0x86, 0xC3, 0x4B, 0xA5, 0x02, 0xA0, 0xDE,  // \..K....
                /* 0020 */  0xBA, 0x0C, 0xB5, 0x31, 0x41, 0x41, 0x01, 0x02,  // ...1AA..
                /* 0028 */  0xC5, 0x2E, 0x77, 0x79, 0xB1, 0x04, 0xFD, 0x4B,  // ..wy...K
                /* 0030 */  0x84, 0x3C, 0x61, 0xE7, 0xF7, 0x7B, 0x6C, 0xC9,  // .<a..{l.
                /* 0038 */  0x42, 0x45, 0x01, 0x02, 0xC6, 0x2E, 0x77, 0x79,  // BE....wy
                /* 0040 */  0xB1, 0x04, 0xFD, 0x4B, 0x84, 0x3C, 0x61, 0xE7,  // ...K.<a.
                /* 0048 */  0xF7, 0x7B, 0x6C, 0xC9, 0x42, 0x46, 0x01, 0x02,  // .{l.BF..
                /* 0050 */  0x66, 0x56, 0x5F, 0xF7, 0xB3, 0xB8, 0x5D, 0x4A,  // fV_...]J
                /* 0058 */  0xA9, 0x1C, 0x74, 0x88, 0xF6, 0x2E, 0x56, 0x37,  // ..t...V7
                /* 0060 */  0x42, 0x4B, 0x01, 0x02, 0xDA, 0xBB, 0x1D, 0xFE,  // BK......
                /* 0068 */  0x14, 0x30, 0x56, 0x48, 0x87, 0x0C, 0x5B, 0x3A,  // .0VH..[:
                /* 0070 */  0x74, 0x4B, 0xF3, 0x41, 0x42, 0x4C, 0x01, 0x02,  // tK.ABL..
                /* 0078 */  0xA7, 0xC3, 0xB0, 0x77, 0x1D, 0xF7, 0xCB, 0x43,  // ...w...C
                /* 0080 */  0xB7, 0x49, 0x91, 0xCB, 0xFF, 0x5D, 0xDC, 0x43,  // .I...].C
                /* 0088 */  0x42, 0x47, 0x01, 0x02, 0xE7, 0xDF, 0x4D, 0x7A,  // BG....Mz
                /* 0090 */  0x5D, 0x5B, 0xB4, 0x40, 0x85, 0x95, 0x44, 0x08,  // ][.@..D.
                /* 0098 */  0xE0, 0xCC, 0x7F, 0x56, 0x42, 0x48, 0x01, 0x02,  // ...VBH..
                /* 00A0 */  0x43, 0x34, 0xB5, 0x4B, 0x8A, 0x48, 0x0D, 0x43,  // C4.K.H.C
                /* 00A8 */  0xA2, 0x5C, 0x87, 0x46, 0x60, 0xE2, 0x3B, 0xDD,  // .\.F`.;.
                /* 00B0 */  0x41, 0x43, 0x01, 0x02, 0xF6, 0x7E, 0xD7, 0xA9,  // AC...~..
                /* 00B8 */  0xE0, 0x55, 0x06, 0x47, 0xB1, 0x39, 0x96, 0xAC,  // .U.G.9..
                /* 00C0 */  0xE1, 0x3F, 0x22, 0x69, 0xBD, 0x00, 0x01, 0x08,  // .?"i....
                /* 00C8 */  0x0E, 0x13, 0x98, 0x9F, 0x48, 0x3B, 0xB3, 0x40,  // ....H;.@
                /* 00D0 */  0x94, 0x02, 0xDE, 0x8E, 0x16, 0x0F, 0x30, 0xCC,  // ......0.
                /* 00D8 */  0x41, 0x42, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AB..!...
                /* 00E0 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 00E8 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00   // ..).AB..
            })
            Name (BFFB, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (FEBC, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (AAST, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (AAGT, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BEBI, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BEGB, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BESB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGP, Buffer (0x0C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKGB, Buffer (0x14)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSU, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSS, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BLSP, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACGB, Buffer (0x0804)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLLB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLSD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLDR, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGP, Buffer (0x20)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHSK, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BHGK, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHLK, Buffer (0x10)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BGS3, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (BKMN, Buffer (0x58)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKSN, Buffer (0x30)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKAT, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGU, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGS, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BLGB, Buffer (0x100C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0808 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0810 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0818 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0820 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0828 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0830 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0838 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0840 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0848 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0850 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0858 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0860 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0868 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0870 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0878 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0880 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0888 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0890 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0898 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0900 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0908 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0910 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0918 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0920 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0928 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0930 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0938 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0940 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0948 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0950 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0958 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0960 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0968 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0970 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0978 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0980 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0988 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0990 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0998 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ABST, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (ABGT, Buffer (0x84)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                CMSI = Arg0
                CMSD = Arg1
            }

            Method (CLBC, 2, NotSerialized)
            {
                Local1 = Arg0
                Local2 = Arg1
                Local2 += Local1
                While (One)
                {
                    FEBC [Local1] = Zero
                    Local1 += One
                    If ((Local1 == Local2))
                    {
                        Break
                    }
                }
            }

            Method (CMSR, 1, NotSerialized)
            {
                CMSI = Arg0
                Return (CMSD) /* \_SB_.PCI0.WMID.CMSD */
            }

            OperationRegion (CSPR, SystemIO, PSSP, 0x02)
            Field (CSPR, ByteAcc, NoLock, Preserve)
            {
                WSSP,   8
            }

            Method (WSMI, 2, NotSerialized)
            {
                MTID = Arg0
                WMIB = Arg1
                WSSP = 0xD0
            }

            Name (WQAB, Buffer (0x2CE8)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xD8, 0x2C, 0x00, 0x00, 0x62, 0x48, 0x01, 0x00,  // .,..bH..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xC3, 0x9C, 0x01, 0x01, 0x08, 0x09, 0x42,  // .......B
                /* 0020 */  0xD8, 0x06, 0x84, 0x48, 0x08, 0x81, 0x44, 0x40,  // ...H..D@
                /* 0028 */  0x28, 0x32, 0x0B, 0x83, 0x21, 0x04, 0x8E, 0x0B,  // (2..!...
                /* 0030 */  0x21, 0x07, 0x10, 0x12, 0x07, 0x85, 0x12, 0x02,  // !.......
                /* 0038 */  0xA1, 0xFE, 0x04, 0xF2, 0x2B, 0x00, 0xA1, 0x43,  // ....+..C
                /* 0040 */  0x01, 0x32, 0x05, 0x18, 0x14, 0xE0, 0x14, 0x41,  // .2.....A
                /* 0048 */  0x04, 0xBD, 0x0A, 0xB0, 0x29, 0xC0, 0xA4, 0x00,  // ....)...
                /* 0050 */  0x8B, 0x02, 0xB4, 0x0B, 0xB0, 0x2C, 0x40, 0xB7,  // .....,@.
                /* 0058 */  0x00, 0xE9, 0xB0, 0x44, 0x24, 0x38, 0x4A, 0x0C,  // ...D$8J.
                /* 0060 */  0x38, 0x4A, 0x27, 0xB6, 0x70, 0xC3, 0x06, 0x2F,  // 8J'.p../
                /* 0068 */  0x14, 0x45, 0x33, 0x88, 0x92, 0xA0, 0x72, 0x01,  // .E3...r.
                /* 0070 */  0xBE, 0x11, 0x04, 0x5E, 0xAE, 0x00, 0xC9, 0x13,  // ...^....
                /* 0078 */  0x90, 0x66, 0x01, 0x86, 0x05, 0x58, 0x17, 0x20,  // .f...X. 
                /* 0080 */  0x7B, 0x08, 0x54, 0xEA, 0x10, 0x50, 0x72, 0x86,  // {.T..Pr.
                /* 0088 */  0x80, 0x1A, 0x40, 0xAB, 0x13, 0x10, 0x7E, 0xA5,  // ..@...~.
                /* 0090 */  0x53, 0x42, 0x12, 0x84, 0x33, 0x56, 0xF1, 0xF8,  // SB..3V..
                /* 0098 */  0x9A, 0x45, 0xD3, 0x73, 0x92, 0x73, 0x0C, 0x39,  // .E.s.s.9
                /* 00A0 */  0x1E, 0x17, 0x7A, 0x10, 0x3C, 0xAC, 0x04, 0x10,  // ..z.<...
                /* 00A8 */  0x16, 0x60, 0xC8, 0x8A, 0x07, 0x83, 0xD2, 0x30,  // .`.....0
                /* 00B0 */  0x16, 0xEA, 0x62, 0xD4, 0xA8, 0x91, 0xB2, 0x01,  // ..b.....
                /* 00B8 */  0x19, 0xA2, 0x24, 0x38, 0xD4, 0xA8, 0x2D, 0x51,  // ..$8..-Q
                /* 00C0 */  0x80, 0xF9, 0x71, 0x68, 0x76, 0x6D, 0x8F, 0x85,  // ..qhvm..
                /* 00C8 */  0x40, 0x32, 0x69, 0x43, 0x41, 0x49, 0x81, 0xD0,  // @2iCAI..
                /* 00D0 */  0xD8, 0xCE, 0xD4, 0x33, 0x8A, 0x78, 0xA4, 0x86,  // ...3.x..
                /* 00D8 */  0x49, 0xE0, 0x51, 0x44, 0x36, 0x1A, 0x87, 0xC6,  // I.QD6...
                /* 00E0 */  0x0E, 0xC3, 0xC3, 0x0C, 0x76, 0x10, 0x87, 0x71,  // ....v..q
                /* 00E8 */  0xCC, 0x91, 0x13, 0x78, 0x42, 0x47, 0x7A, 0xE4,  // ...xBGz.
                /* 00F0 */  0x85, 0xCD, 0x53, 0xA8, 0x31, 0x9A, 0x83, 0x22,  // ..S.1.."
                /* 00F8 */  0x73, 0x78, 0x14, 0xC0, 0x8E, 0x29, 0xEC, 0xD1,  // sx...)..
                /* 0100 */  0xC6, 0x3E, 0x5F, 0x0B, 0x1F, 0xAC, 0x30, 0x8E,  // .>_...0.
                /* 0108 */  0xE0, 0xB8, 0x12, 0xFC, 0xFF, 0x4F, 0xFC, 0x50,  // .....O.P
                /* 0110 */  0x7A, 0x84, 0x93, 0xA0, 0x29, 0x52, 0x90, 0xA3,  // z...)R..
                /* 0118 */  0xC6, 0xC8, 0xC2, 0x91, 0xD6, 0x59, 0x91, 0xB9,  // .....Y..
                /* 0120 */  0x1B, 0xD8, 0x40, 0x95, 0x09, 0xD0, 0x25, 0x40,  // ..@...%@
                /* 0128 */  0x9B, 0x00, 0x67, 0xC3, 0x20, 0x03, 0x3A, 0x12,  // ..g. .:.
                /* 0130 */  0x8C, 0x0C, 0x08, 0x79, 0x3E, 0x18, 0x68, 0x88,  // ...y>.h.
                /* 0138 */  0x26, 0xB0, 0x7B, 0x4C, 0x79, 0x83, 0xD0, 0x40,  // &.{Ly..@
                /* 0140 */  0x22, 0x34, 0x26, 0xC0, 0xDA, 0x2C, 0x64, 0x0B,  // "4&..,d.
                /* 0148 */  0x87, 0x4C, 0x2C, 0x56, 0x94, 0x18, 0x07, 0x75,  // .L,V...u
                /* 0150 */  0x68, 0x35, 0xA2, 0x08, 0xE9, 0x24, 0x5E, 0x0D,  // h5...$^.
                /* 0158 */  0x22, 0x44, 0x89, 0x19, 0x32, 0x62, 0xB0, 0x20,  // "D..2b. 
                /* 0160 */  0xCF, 0x11, 0x31, 0x3C, 0x46, 0xC3, 0x45, 0x6A,  // ..1<F.Ej
                /* 0168 */  0x7F, 0x10, 0x44, 0xDE, 0x6B, 0x42, 0x07, 0x02,  // ..D.kB..
                /* 0170 */  0x47, 0x1A, 0x0D, 0xEA, 0xB4, 0xE0, 0x43, 0x81,  // G.....C.
                /* 0178 */  0x67, 0xF7, 0x90, 0xE0, 0xC1, 0x9D, 0x74, 0x90,  // g.....t.
                /* 0180 */  0x13, 0x3D, 0xB8, 0x67, 0x88, 0xA7, 0x01, 0x8F,  // .=.g....
                /* 0188 */  0x9B, 0x5D, 0x13, 0x7C, 0xB8, 0xF0, 0xF1, 0x00,  // .].|....
                /* 0190 */  0xEF, 0x1A, 0x50, 0xF7, 0x82, 0xA7, 0x02, 0x36,  // ..P....6
                /* 0198 */  0xCB, 0x70, 0x98, 0x21, 0x7A, 0xB0, 0xE1, 0x4E,  // .p.!z..N
                /* 01A0 */  0xE0, 0x10, 0x19, 0xA0, 0x87, 0xF4, 0x40, 0x80,  // ......@.
                /* 01A8 */  0x9D, 0xDB, 0xC9, 0x1C, 0xFB, 0x0B, 0x45, 0xB3,  // ......E.
                /* 01B0 */  0x57, 0x09, 0x42, 0x70, 0x3C, 0xBE, 0x45, 0xB0,  // W.Bp<.E.
                /* 01B8 */  0x09, 0x27, 0xB0, 0xFC, 0x41, 0xA0, 0x46, 0x66,  // .'..A.Ff
                /* 01C0 */  0x68, 0x0F, 0xF5, 0xB4, 0xDE, 0x06, 0x7C, 0x0E,  // h.....|.
                /* 01C8 */  0x30, 0x81, 0xC5, 0x42, 0x48, 0x01, 0x84, 0xC6,  // 0..BH...
                /* 01D0 */  0x03, 0x7E, 0xC5, 0x27, 0x0F, 0x72, 0x65, 0xF0,  // .~.'.re.
                /* 01D8 */  0x7C, 0x7D, 0x88, 0xD0, 0xD1, 0x42, 0x46, 0x56,  // |}...BFV
                /* 01E0 */  0xE1, 0xF1, 0xD0, 0xF3, 0x82, 0x2F, 0x09, 0x98,  // ...../..
                /* 01E8 */  0x1B, 0x83, 0x87, 0xEE, 0x21, 0x3D, 0x1F, 0x58,  // ....!=.X
                /* 01F0 */  0x12, 0xAC, 0xFE, 0xFF, 0xA7, 0x00, 0x8B, 0x1A,  // ........
                /* 01F8 */  0x39, 0x3D, 0x55, 0xF0, 0x03, 0x05, 0x83, 0x0D,  // 9=U.....
                /* 0200 */  0x1A, 0xD6, 0x83, 0x39, 0x27, 0x7F, 0x5A, 0x3C,  // ...9'.Z<
                /* 0208 */  0x36, 0xF8, 0x80, 0x78, 0xEF, 0xB3, 0x26, 0x23,  // 6..x..&#
                /* 0210 */  0x38, 0x59, 0x03, 0xFA, 0xF0, 0x80, 0x3B, 0x55,  // 8Y....;U
                /* 0218 */  0x80, 0x17, 0xE6, 0xB0, 0xF8, 0xBD, 0x02, 0xF6,  // ........
                /* 0220 */  0x61, 0xC1, 0xA3, 0xE4, 0xA3, 0xF1, 0x10, 0xCE,  // a.......
                /* 0228 */  0xE2, 0x69, 0xC0, 0x30, 0x46, 0x7F, 0x0A, 0x80,  // .i.0F...
                /* 0230 */  0x7D, 0xC3, 0xF0, 0x58, 0x7C, 0xD2, 0xF1, 0x51,  // }..X|..Q
                /* 0238 */  0x07, 0x1C, 0x83, 0xE3, 0x77, 0x18, 0xDC, 0x51,  // ....w..Q
                /* 0240 */  0x07, 0x78, 0xCC, 0xF5, 0x51, 0x07, 0x6C, 0xE7,  // .x..Q.l.
                /* 0248 */  0x03, 0x76, 0xCC, 0x81, 0x25, 0xE1, 0x98, 0x84,  // .v..%...
                /* 0250 */  0x0A, 0x0D, 0x45, 0xFF, 0xFF, 0x70, 0x3C, 0xF0,  // ..E..p<.
                /* 0258 */  0xE0, 0xA9, 0xBC, 0xC1, 0x82, 0x02, 0xE2, 0x38,  // .......8
                /* 0260 */  0xDE, 0x0E, 0xDE, 0x93, 0x60, 0x9C, 0x93, 0x00,  // ....`...
                /* 0268 */  0x3E, 0x1E, 0x0D, 0xD8, 0xA5, 0xE3, 0x39, 0x09,  // >.....9.
                /* 0270 */  0xEE, 0xFF, 0xFF, 0x9C, 0x04, 0xD6, 0xF3, 0xC0,  // ........
                /* 0278 */  0x29, 0x9D, 0xCD, 0x2B, 0x52, 0x84, 0x93, 0x78,  // )..+R..x
                /* 0280 */  0x43, 0x0A, 0xFD, 0x7E, 0xF4, 0xA2, 0xF4, 0xA4,  // C..~....
                /* 0288 */  0xE4, 0x89, 0x3D, 0x27, 0x19, 0x2B, 0x48, 0x28,  // ..='.+H(
                /* 0290 */  0x2B, 0xBC, 0x21, 0x69, 0x0E, 0x51, 0xA3, 0x84,  // +.!i.Q..
                /* 0298 */  0x78, 0x5E, 0xF2, 0x75, 0xC1, 0x48, 0x46, 0x3E,  // x^.u.HF>
                /* 02A0 */  0x95, 0xD7, 0x24, 0x63, 0x3D, 0x27, 0x01, 0x0C,  // ..$c='..
                /* 02A8 */  0xFC, 0xFF, 0x9F, 0x93, 0x80, 0xEF, 0xA9, 0x02,  // ........
                /* 02B0 */  0xEE, 0x39, 0x09, 0x70, 0x32, 0x38, 0x76, 0xC2,  // .9.p28v.
                /* 02B8 */  0x04, 0x56, 0xE7, 0x24, 0xE0, 0x12, 0xD5, 0xC4,  // .V.$....
                /* 02C0 */  0x19, 0x07, 0x23, 0x6B, 0xDD, 0xF4, 0x98, 0x03,  // ..#k....
                /* 02C8 */  0x8E, 0xFF, 0xFF, 0xE9, 0x12, 0xB0, 0x88, 0xF1,  // ........
                /* 02D0 */  0xBC, 0x61, 0xD1, 0x80, 0x1A, 0xC1, 0xF3, 0x03,  // .a......
                /* 02D8 */  0xEC, 0xD3, 0x25, 0xFC, 0x1B, 0xA5, 0x2F, 0x39,  // ..%.../9
                /* 02E0 */  0x9E, 0x54, 0x90, 0x43, 0x79, 0xBD, 0x79, 0x72,  // .T.Cy.yr
                /* 02E8 */  0x08, 0xF3, 0x9A, 0xF3, 0x60, 0xE9, 0xA1, 0x3D,  // ....`..=
                /* 02F0 */  0xE4, 0x04, 0x39, 0x82, 0xA7, 0x4B, 0x23, 0x3D,  // ..9..K#=
                /* 02F8 */  0x57, 0x1A, 0xC5, 0x20, 0x67, 0x16, 0x35, 0x5A,  // W.. g.5Z
                /* 0300 */  0x14, 0xE3, 0x05, 0x89, 0x16, 0xF1, 0x08, 0x1E,  // ........
                /* 0308 */  0x73, 0x58, 0xAC, 0x03, 0x81, 0x3E, 0x52, 0x3E,  // sX...>R>
                /* 0310 */  0xE6, 0x00, 0x6E, 0xFE, 0xFF, 0xC7, 0x1C, 0xC0,  // ..n.....
                /* 0318 */  0xC1, 0x69, 0x0E, 0x1C, 0xA7, 0x05, 0x3E, 0x2A,  // .i....>*
                /* 0320 */  0x7E, 0x65, 0x60, 0x67, 0x12, 0x60, 0x12, 0xE5,  // ~e`g.`..
                /* 0328 */  0xE9, 0xA1, 0x71, 0x5A, 0xE3, 0x73, 0x40, 0x36,  // ..qZ.s@6
                /* 0330 */  0x4E, 0x42, 0x74, 0x10, 0x56, 0x42, 0xA5, 0x13,  // NBt.VB..
                /* 0338 */  0x8B, 0x31, 0xDF, 0x1A, 0xE2, 0x3E, 0x1B, 0x78,  // .1...>.x
                /* 0340 */  0x3E, 0x98, 0xF4, 0x07, 0x05, 0x9D, 0x7F, 0x0C,  // >.......
                /* 0348 */  0xEE, 0xDC, 0x24, 0xCA, 0x3D, 0x20, 0x0A, 0xEF,  // ..$.= ..
                /* 0350 */  0xA4, 0xC7, 0x20, 0x0A, 0x62, 0x40, 0xC7, 0x80,  // .. .b@..
                /* 0358 */  0x90, 0x95, 0x83, 0x00, 0xFA, 0x3A, 0xE1, 0x23,  // .....:.#
                /* 0360 */  0x83, 0xCF, 0x19, 0x51, 0xCE, 0xC8, 0x07, 0x8C,  // ...Q....
                /* 0368 */  0xC7, 0x05, 0x36, 0x1C, 0x1F, 0x04, 0xF8, 0x01,  // ..6.....
                /* 0370 */  0xC5, 0x37, 0x03, 0x63, 0x5B, 0xCD, 0x71, 0x07,  // .7.c[.q.
                /* 0378 */  0x05, 0x66, 0xF8, 0x17, 0x18, 0x13, 0xF8, 0x9E,  // .f......
                /* 0380 */  0xF1, 0xB6, 0x03, 0x96, 0x33, 0xC6, 0x63, 0x89,  // ....3.c.
                /* 0388 */  0xF5, 0xE1, 0xA2, 0xFE, 0xFF, 0x87, 0x01, 0x78,  // .......x
                /* 0390 */  0x40, 0x9E, 0xBE, 0x4F, 0x34, 0x8F, 0x00, 0x6C,  // @..O4..l
                /* 0398 */  0x0C, 0x0F, 0x35, 0x46, 0x33, 0x3A, 0x8F, 0x3F,  // ..5F3:.?
                /* 03A0 */  0x57, 0xD4, 0xFD, 0xD1, 0x73, 0x35, 0x88, 0xE7,  // W...s5..
                /* 03A8 */  0xEA, 0x30, 0x10, 0x72, 0x32, 0x57, 0xD4, 0xED,  // .0.r2W..
                /* 03B0 */  0xC5, 0x23, 0xB2, 0xCF, 0xA9, 0x92, 0xC1, 0x72,  // .#.....r
                /* 03B8 */  0x82, 0x28, 0xAF, 0x1A, 0xB0, 0x0E, 0x02, 0x11,  // .(......
                /* 03C0 */  0xD9, 0x3C, 0x7C, 0x57, 0xC2, 0xCF, 0x96, 0x0F,  // .<|W....
                /* 03C8 */  0xC6, 0x57, 0x09, 0xF8, 0xC3, 0xE5, 0xA7, 0x92,  // .W......
                /* 03D0 */  0x77, 0x93, 0x04, 0x16, 0x38, 0x5D, 0x90, 0xC3,  // w...8]..
                /* 03D8 */  0x63, 0x04, 0xAD, 0x47, 0x16, 0xEE, 0x52, 0x74,  // c..G..Rt
                /* 03E0 */  0x5C, 0xFC, 0x76, 0xE0, 0x1B, 0x0F, 0xBB, 0xD3,  // \.v.....
                /* 03E8 */  0xE0, 0x2E, 0x62, 0x18, 0x58, 0x8F, 0x94, 0xC3,  // ..b.X...
                /* 03F0 */  0x1A, 0x2D, 0xEC, 0x01, 0xBF, 0x71, 0xF8, 0xB8,  // .-...q..
                /* 03F8 */  0xE2, 0x99, 0x19, 0x23, 0xAC, 0xEF, 0x29, 0xE0,  // ...#..).
                /* 0400 */  0xB8, 0x93, 0xC1, 0x0F, 0x70, 0x05, 0x02, 0xD1,  // ....p...
                /* 0408 */  0xFF, 0xFF, 0x0A, 0x84, 0x3F, 0x6B, 0xB0, 0x2B,  // ....?k.+
                /* 0410 */  0x99, 0x41, 0x5E, 0x94, 0x7C, 0xAE, 0x31, 0x7A,  // .A^.|.1z
                /* 0418 */  0xA0, 0xF7, 0x0D, 0xFC, 0x4D, 0x08, 0xF6, 0x0D,  // ....M...
                /* 0420 */  0x04, 0xCE, 0x50, 0x7C, 0x03, 0x01, 0x0E, 0xC7,  // ..P|....
                /* 0428 */  0x08, 0xDC, 0x0D, 0x04, 0x58, 0xDF, 0x21, 0xD8,  // ....X.!.
                /* 0430 */  0x0D, 0x04, 0x58, 0x9E, 0x5E, 0x70, 0x37, 0x10,  // ..X.^p7.
                /* 0438 */  0xE0, 0xF4, 0xFF, 0xBF, 0x81, 0x80, 0xEB, 0xFE,  // ........
                /* 0440 */  0xC2, 0x6E, 0x20, 0xC0, 0x7C, 0xD4, 0xBE, 0x81,  // .n .|...
                /* 0448 */  0x00, 0x96, 0xCE, 0x1A, 0xEC, 0x06, 0x02, 0xFE,  // ........
                /* 0450 */  0xA0, 0x3E, 0xC6, 0xC3, 0x82, 0x0C, 0x5D, 0xE2,  // .>....].
                /* 0458 */  0x16, 0x4E, 0x61, 0x7C, 0x4A, 0x04, 0x2E, 0xFF,  // .Na|J...
                /* 0460 */  0xFF, 0x53, 0x22, 0xF0, 0x3B, 0x50, 0xF8, 0x04,  // .S".;P..
                /* 0468 */  0x00, 0xB6, 0xCB, 0x28, 0x1B, 0xFA, 0xBB, 0x81,  // ...(....
                /* 0470 */  0x2F, 0x8A, 0xE0, 0x3C, 0x29, 0xC2, 0x1F, 0xD6,  // /..<)...
                /* 0478 */  0x1B, 0x41, 0x88, 0xC7, 0xC4, 0x57, 0x6A, 0xCF,  // .A...Wj.
                /* 0480 */  0xEC, 0xAD, 0xE2, 0x0D, 0x31, 0xC8, 0xE3, 0xE1,  // ....1...
                /* 0488 */  0xC9, 0x45, 0x7A, 0x52, 0x34, 0x52, 0x98, 0x27,  // .EzR4R.'
                /* 0490 */  0x45, 0x23, 0x86, 0xF1, 0x49, 0xD1, 0x07, 0x45,  // E#..I..E
                /* 0498 */  0xC3, 0xBD, 0x5E, 0x7B, 0x20, 0x91, 0xC2, 0xC7,  // ..^{ ...
                /* 04A0 */  0xF6, 0x55, 0x23, 0xC2, 0x93, 0x22, 0x0B, 0x75,  // .U#..".u
                /* 04A8 */  0x52, 0x04, 0xF4, 0xFD, 0xFF, 0x4F, 0x8A, 0xC0,  // R....O..
                /* 04B0 */  0xF3, 0x2C, 0x0C, 0x8E, 0xFB, 0x32, 0x9F, 0xC1,  // .,...2..
                /* 04B8 */  0xB9, 0xC4, 0xF6, 0x00, 0x1F, 0x14, 0x81, 0x49,  // .......I
                /* 04C0 */  0x84, 0x15, 0x6A, 0x98, 0x4E, 0xF4, 0x98, 0xD1,  // ..j.N...
                /* 04C8 */  0xB5, 0x8A, 0x73, 0x58, 0xF9, 0xFB, 0x40, 0xA7,  // ..sX..@.
                /* 04D0 */  0x2D, 0x76, 0x5C, 0x38, 0xC1, 0xD7, 0xA0, 0x53,  // -v\8...S
                /* 04D8 */  0x32, 0x8E, 0x47, 0xED, 0xE1, 0x7B, 0x44, 0x56,  // 2.G..{DV
                /* 04E0 */  0x0A, 0xA9, 0x8B, 0x15, 0xD7, 0x08, 0x23, 0x85,  // ......#.
                /* 04E8 */  0xCF, 0x03, 0x9D, 0x8E, 0xB8, 0x26, 0x18, 0xC1,  // .....&..
                /* 04F0 */  0x19, 0xC4, 0xC7, 0x12, 0x27, 0x81, 0x90, 0x91,  // ....'...
                /* 04F8 */  0x93, 0x00, 0x6A, 0x74, 0xBE, 0xAD, 0xE0, 0xC7,  // ..jt....
                /* 0500 */  0x17, 0xE8, 0x91, 0x21, 0xC1, 0x89, 0xBD, 0x5A,  // ...!...Z
                /* 0508 */  0x81, 0xF7, 0xA6, 0x0D, 0xAE, 0x20, 0x93, 0x42,  // ..... .B
                /* 0510 */  0x6B, 0xB9, 0xBD, 0x93, 0x41, 0xF9, 0x28, 0x11,  // k...A.(.
                /* 0518 */  0xFA, 0xFF, 0xFF, 0x16, 0x82, 0x19, 0x14, 0x78,  // .......x
                /* 0520 */  0xCF, 0x79, 0x7C, 0x50, 0xE0, 0x39, 0xA1, 0x79,  // .y|P.9.y
                /* 0528 */  0x50, 0x38, 0x25, 0x17, 0x01, 0xDF, 0x5A, 0xC8,  // P8%...Z.
                /* 0530 */  0x25, 0xC5, 0x47, 0x0A, 0x8F, 0x09, 0xCC, 0x17,  // %.G.....
                /* 0538 */  0x27, 0x3E, 0x26, 0xF0, 0xA4, 0x18, 0x13, 0xFA,  // '>&.....
                /* 0540 */  0xEE, 0xC3, 0x6E, 0x14, 0xEC, 0x58, 0xF1, 0x10,  // ..n..X..
                /* 0548 */  0xE5, 0x29, 0x81, 0x17, 0xC9, 0x53, 0x02, 0x57,  // .)...S.W
                /* 0550 */  0xA8, 0x29, 0xF9, 0x58, 0x41, 0x67, 0xCD, 0x6F,  // .).XAg.o
                /* 0558 */  0x06, 0x7C, 0x52, 0x9C, 0x60, 0x02, 0x08, 0xDD,  // .|R.`...
                /* 0560 */  0x65, 0x3C, 0x26, 0x78, 0xD7, 0x7E, 0x78, 0x57,  // e<&x.~xW
                /* 0568 */  0x2C, 0x0F, 0x0D, 0xD6, 0xFF, 0x7F, 0x0E, 0x1E,  // ,.......
                /* 0570 */  0x1A, 0xB8, 0x6E, 0x7B, 0xC0, 0xE2, 0xF5, 0xE0,  // ..n{....
                /* 0578 */  0x0B, 0x08, 0x8F, 0x7C, 0x82, 0xA0, 0x20, 0x3E,  // ...|.. >
                /* 0580 */  0x20, 0x38, 0xCE, 0xE1, 0xD1, 0x17, 0x10, 0xF4,  //  8......
                /* 0588 */  0xC1, 0xC1, 0x03, 0x7A, 0x6A, 0xF2, 0x90, 0x4E,  // ...zj..N
                /* 0590 */  0xE5, 0xDD, 0xC2, 0x77, 0x1B, 0x76, 0xDD, 0x03,  // ...w.v..
                /* 0598 */  0xF7, 0x75, 0xCE, 0xD7, 0x3D, 0xF0, 0x9C, 0x97,  // .u..=...
                /* 05A0 */  0x7C, 0xDD, 0x03, 0x2E, 0x72, 0x0E, 0xB0, 0x80,  // |...r...
                /* 05A8 */  0x88, 0xFF, 0xFF, 0x75, 0x0F, 0xD6, 0xD5, 0xC9,  // ...u....
                /* 05B0 */  0x07, 0x58, 0xF0, 0x9F, 0x2E, 0xD8, 0x69, 0x0F,  // .X....i.
                /* 05B8 */  0x7C, 0x04, 0xD3, 0xBE, 0x2B, 0x74, 0x31, 0xC2,  // |...+t1.
                /* 05C0 */  0xA5, 0x5A, 0xBA, 0x0E, 0x81, 0xEC, 0x62, 0x04,  // .Z....b.
                /* 05C8 */  0x33, 0x05, 0xA4, 0x2E, 0x46, 0x5C, 0x3F, 0x8C,  // 3...F\?.
                /* 05D0 */  0xF4, 0x5D, 0x8C, 0x50, 0x8A, 0x2E, 0x46, 0x14,  // .].P..F.
                /* 05D8 */  0xC4, 0x17, 0x23, 0x80, 0x11, 0xFF, 0xFF, 0x8B,  // ..#.....
                /* 05E0 */  0x11, 0xE0, 0x27, 0xC4, 0x98, 0xD0, 0x3A, 0x80,  // ..'...:.
                /* 05E8 */  0xC9, 0xB9, 0xE0, 0x84, 0x1E, 0x8C, 0x80, 0x6D,  // .......m
                /* 05F0 */  0xA6, 0x83, 0x11, 0x1A, 0xD8, 0x27, 0x03, 0x3E,  // .....'.>
                /* 05F8 */  0x28, 0x76, 0x2F, 0x02, 0xF3, 0x2D, 0xC6, 0xF7,  // (v/..-..
                /* 0600 */  0x22, 0xE0, 0xFD, 0xFF, 0xBF, 0x17, 0xC1, 0x91,  // ".......
                /* 0608 */  0xF7, 0x32, 0xD0, 0xFD, 0x83, 0x0B, 0x82, 0xD1,  // .2......
                /* 0610 */  0x01, 0xC2, 0x20, 0x9E, 0x93, 0xEF, 0x45, 0x80,  // .. ...E.
                /* 0618 */  0x9B, 0x28, 0xE3, 0x42, 0xDF, 0xD1, 0xE0, 0x8C,  // .(.B....
                /* 0620 */  0x0A, 0xDC, 0xC7, 0x02, 0x8F, 0x0A, 0x7C, 0xC7,  // ......|.
                /* 0628 */  0x34, 0xFC, 0x5D, 0xC8, 0x87, 0x34, 0xCC, 0x41,  // 4.]..4.A
                /* 0630 */  0x83, 0x1D, 0x03, 0x3C, 0x28, 0x70, 0xDD, 0xD2,  // ...<(p..
                /* 0638 */  0x70, 0x63, 0x83, 0xE7, 0xE1, 0xFA, 0x00, 0x9A,  // pc......
                /* 0640 */  0xFF, 0xFF, 0xF5, 0x81, 0x5F, 0xB3, 0x80, 0xF7,  // ...._...
                /* 0648 */  0x29, 0x1D, 0xF8, 0x5E, 0xB3, 0xC0, 0x7C, 0x4A,  // )..^..|J
                /* 0650 */  0xC7, 0x5C, 0xB3, 0xC0, 0x2B, 0xCB, 0xC9, 0x70,  // .\..+..p
                /* 0658 */  0xD8, 0xE9, 0xD9, 0x72, 0xD7, 0x4D, 0x61, 0x7C,  // ...r.Ma|
                /* 0660 */  0x48, 0x07, 0xEE, 0xFF, 0xFF, 0x43, 0x3A, 0xF8,  // H....C:.
                /* 0668 */  0xCE, 0x4D, 0x3E, 0x00, 0x80, 0xE3, 0xF8, 0x70,  // .M>....p
                /* 0670 */  0x06, 0xA7, 0x10, 0xED, 0x6D, 0xDF, 0x33, 0x7F,  // ....m.3.
                /* 0678 */  0x7D, 0xF2, 0x90, 0xA2, 0x04, 0x8C, 0x17, 0x23,  // }......#
                /* 0680 */  0x6E, 0x48, 0x9F, 0xAB, 0x7D, 0x71, 0x36, 0x50,  // nH..}q6P
                /* 0688 */  0xBC, 0xC3, 0x0A, 0x1B, 0xE7, 0x3D, 0xC0, 0xC7,  // .....=..
                /* 0690 */  0xE7, 0xF7, 0x00, 0x1F, 0x0E, 0x0C, 0x74, 0xA6,  // ......t.
                /* 0698 */  0x2F, 0x01, 0xB0, 0x8F, 0xEA, 0xB0, 0xBD, 0x4D,  // /......M
                /* 06A0 */  0x4E, 0x10, 0x11, 0x02, 0xBF, 0x59, 0x9C, 0x53,  // N....Y.S
                /* 06A8 */  0x6B, 0x57, 0x74, 0x8D, 0xF0, 0x10, 0x9F, 0xE0,  // kWt.....
                /* 06B0 */  0x5E, 0x4B, 0x1E, 0xD5, 0x3D, 0x94, 0xC7, 0xA7,  // ^K..=...
                /* 06B8 */  0xA8, 0x51, 0x9E, 0x37, 0xC2, 0x1C, 0x43, 0xC0,  // .Q.7..C.
                /* 06C0 */  0x28, 0x47, 0x11, 0x2D, 0x6A, 0xE0, 0xB7, 0x84,  // (G.-j...
                /* 06C8 */  0xD8, 0x06, 0x0D, 0xF4, 0xA6, 0xEE, 0x11, 0x3C,  // .......<
                /* 06D0 */  0xAA, 0xB3, 0x68, 0x47, 0x75, 0x40, 0xEB, 0xFF,  // ..hGu@..
                /* 06D8 */  0xFF, 0xA8, 0x0E, 0x7C, 0xEE, 0x33, 0x3E, 0xC2,  // ...|.3>.
                /* 06E0 */  0xC0, 0x3F, 0x07, 0x3C, 0x29, 0xE0, 0x2E, 0x4F,  // .?.<)..O
                /* 06E8 */  0xBE, 0x33, 0x60, 0x08, 0x7C, 0x5A, 0x07, 0x1E,  // .3`.|Z..
                /* 06F0 */  0xF1, 0x7C, 0x9C, 0x07, 0x58, 0x6C, 0x0A, 0x5D,  // .|..Xl.]
                /* 06F8 */  0x22, 0xF9, 0x59, 0xC6, 0x21, 0x97, 0xAB, 0x4B,  // ".Y.!..K
                /* 0700 */  0x24, 0x9F, 0x12, 0xBB, 0x20, 0x18, 0xFE, 0x10,  // $... ...
                /* 0708 */  0x82, 0x78, 0x58, 0x6C, 0x0A, 0x3E, 0x23, 0x98,  // .xXl.>#.
                /* 0710 */  0xC0, 0x71, 0x4E, 0x5C, 0x74, 0xF0, 0x0E, 0x42,  // .qN\t..B
                /* 0718 */  0xA1, 0x28, 0xF7, 0x5B, 0x94, 0x78, 0x18, 0xC1,  // .(.[.x..
                /* 0720 */  0x19, 0xC4, 0x63, 0x71, 0x20, 0x08, 0xFD, 0x54,  // ..cq ..T
                /* 0728 */  0x28, 0x24, 0x39, 0x9F, 0x78, 0x52, 0x27, 0x8B,  // ($9.xR'.
                /* 0730 */  0x9D, 0x0B, 0x6E, 0x76, 0x3E, 0x88, 0x24, 0x78,  // ..nv>.$x
                /* 0738 */  0xEA, 0x79, 0x95, 0x04, 0xEF, 0x9D, 0xE3, 0x4D,  // .y.....M
                /* 0740 */  0x09, 0x2C, 0x37, 0x8D, 0x57, 0x8E, 0xF7, 0x4D,  // .,7.W..M
                /* 0748 */  0x36, 0x30, 0xDC, 0xFF, 0xFF, 0x2C, 0xE9, 0x81,  // 60...,..
                /* 0750 */  0xE1, 0x8F, 0x02, 0xC7, 0x75, 0x52, 0xE0, 0x1D,  // ....uR..
                /* 0758 */  0xB3, 0x27, 0x05, 0xB6, 0xD3, 0x1D, 0xB0, 0x08,  // .'......
                /* 0760 */  0x8F, 0x4E, 0x61, 0x1C, 0x77, 0x48, 0x14, 0xC4,  // .Na.wH..
                /* 0768 */  0xA7, 0x03, 0x1F, 0xDB, 0x3C, 0x5A, 0xDC, 0x4C,  // ....<Z.L
                /* 0770 */  0x3C, 0xA2, 0xB7, 0x3B, 0xDC, 0xB1, 0x0D, 0xEC,  // <..;....
                /* 0778 */  0x23, 0xF1, 0xB1, 0x0D, 0x3C, 0xA3, 0x65, 0x87,  // #...<.e.
                /* 0780 */  0x31, 0x60, 0x22, 0xE4, 0x30, 0x06, 0xBA, 0x21,  // 1`".0..!
                /* 0788 */  0xFB, 0x30, 0x86, 0xFB, 0xFF, 0x1F, 0xC6, 0x80,  // .0......
                /* 0790 */  0xDF, 0x31, 0xC0, 0x87, 0x27, 0x70, 0xDC, 0xC3,  // .1..'p..
                /* 0798 */  0xF8, 0x81, 0x09, 0x0B, 0xF4, 0xEC, 0xC1, 0x71,  // .......q
                /* 07A0 */  0x9E, 0x9C, 0x0C, 0xCC, 0xC1, 0xD8, 0xD5, 0x04,  // ........
                /* 07A8 */  0x7B, 0x9B, 0xF0, 0x88, 0x74, 0x7F, 0x46, 0xC9,  // {...t.F.
                /* 07B0 */  0x83, 0x50, 0xE8, 0xD7, 0x91, 0xCE, 0x2A, 0xD8,  // .P....*.
                /* 07B8 */  0x69, 0xB0, 0x93, 0xCC, 0x21, 0xFA, 0xEA, 0xE2,  // i...!...
                /* 07C0 */  0x79, 0xBF, 0xD0, 0x60, 0x0F, 0x02, 0xAF, 0x48,  // y..`...H
                /* 07C8 */  0xBE, 0x36, 0xF8, 0x1A, 0xED, 0x58, 0x03, 0xD0,  // .6...X..
                /* 07D0 */  0x79, 0x85, 0x07, 0x82, 0x91, 0xB4, 0x73, 0x27,  // y.....s'
                /* 07D8 */  0x4A, 0xCC, 0xB1, 0x85, 0x82, 0xF8, 0xDC, 0xE4,  // J.......
                /* 07E0 */  0x23, 0x32, 0x9C, 0x73, 0x08, 0xAC, 0x63, 0x34,  // #2.s..c4
                /* 07E8 */  0xB0, 0x0C, 0x33, 0x28, 0xB4, 0x1E, 0x40, 0x72,  // ..3(..@r
                /* 07F0 */  0xBB, 0xC3, 0xFE, 0xFF, 0x51, 0x1A, 0x05, 0xD2,  // ....Q...
                /* 07F8 */  0xB8, 0xD8, 0x41, 0x1A, 0x78, 0xA6, 0x3A, 0x75,  // ..A.x.:u
                /* 0800 */  0xA2, 0x0F, 0x77, 0x3E, 0x94, 0xB0, 0x8B, 0x34,  // ..w>...4
                /* 0808 */  0xF6, 0x10, 0x0C, 0xDE, 0xB3, 0x81, 0xEF, 0xD3,  // ........
                /* 0810 */  0xC0, 0xE2, 0x5C, 0x03, 0x2C, 0x44, 0x9F, 0x1E,  // ..\.,D..
                /* 0818 */  0x50, 0x32, 0x4F, 0x0F, 0x14, 0xC4, 0x87, 0x60,  // P2O....`
                /* 0820 */  0x7E, 0x32, 0xC0, 0x8D, 0xD2, 0x27, 0x03, 0x18,  // ~2...'..
                /* 0828 */  0x73, 0x09, 0xF2, 0xA6, 0xE6, 0xD3, 0x1E, 0x3B,  // s......;
                /* 0830 */  0xDA, 0x80, 0xF7, 0xB4, 0x0D, 0xE7, 0xFF, 0x3F,  // .......?
                /* 0838 */  0x5F, 0xB8, 0xB1, 0x4E, 0xDB, 0x50, 0x8E, 0x3F,  // _..N.P.?
                /* 0840 */  0xF8, 0x03, 0x2E, 0xB8, 0xEF, 0x04, 0x1E, 0x1B,  // ........
                /* 0848 */  0xBC, 0xEB, 0x36, 0xF8, 0xE2, 0x8D, 0x0D, 0xCD,  // ..6.....
                /* 0850 */  0xE2, 0x23, 0x00, 0x8C, 0x73, 0x0A, 0x76, 0x7C,  // .#..s.v|
                /* 0858 */  0xE0, 0x3E, 0x0D, 0xF9, 0x7C, 0x0D, 0xF7, 0x3C,  // .>..|..<
                /* 0860 */  0x0C, 0x9C, 0xCF, 0x4C, 0xE0, 0x3B, 0x8E, 0xF8,  // ...L.;..
                /* 0868 */  0xFF, 0x7F, 0x66, 0x02, 0xDC, 0x5C, 0x7F, 0xB0,  // ..f..\..
                /* 0870 */  0x40, 0x4F, 0x47, 0x38, 0x9C, 0xB7, 0x23, 0x2C,  // @OG8..#,
                /* 0878 */  0xD0, 0x73, 0x02, 0xEE, 0xCC, 0xC4, 0xE2, 0xAD,  // .s......
                /* 0880 */  0x59, 0x67, 0x26, 0x7E, 0x30, 0x73, 0xA8, 0xB7,  // Yg&~0s..
                /* 0888 */  0x82, 0x30, 0x9F, 0x99, 0xC0, 0x75, 0x4C, 0xD4,  // .0...uL.
                /* 0890 */  0x81, 0x09, 0x25, 0x1B, 0x46, 0x41, 0xCF, 0x28,  // ..%.FA.(
                /* 0898 */  0xA8, 0x68, 0x67, 0x14, 0x0A, 0xE2, 0xE3, 0x80,  // .hg.....
                /* 08A0 */  0x0F, 0x4C, 0x80, 0x8F, 0x2C, 0xE7, 0x18, 0x50,  // .L..,..P
                /* 08A8 */  0xFC, 0xFF, 0x51, 0xE2, 0x3F, 0x1A, 0xFB, 0x50,  // ..Q.?..P
                /* 08B0 */  0xFB, 0xBE, 0x04, 0x3C, 0xD3, 0xCC, 0x0A, 0x7D,  // ...<...}
                /* 08B8 */  0x35, 0x01, 0xC7, 0xB4, 0xC0, 0x7A, 0x57, 0x02,  // 5....zW.
                /* 08C0 */  0x5F, 0xAE, 0x13, 0x0C, 0x7A, 0x2E, 0x3E, 0x56,  // _...z.>V
                /* 08C8 */  0xC1, 0xB8, 0xCE, 0xF9, 0x5C, 0x05, 0xE6, 0xA3,  // ....\...
                /* 08D0 */  0x83, 0xE7, 0x06, 0xEB, 0x5E, 0x04, 0xBE, 0x73,  // ....^..s
                /* 08D8 */  0x15, 0xB0, 0xF8, 0xFF, 0x87, 0x39, 0xE3, 0xA2,  // .....9..
                /* 08E0 */  0xE4, 0x9F, 0x71, 0x29, 0x88, 0xE7, 0xE4, 0xE3,  // ..q)....
                /* 08E8 */  0xA7, 0x95, 0x1C, 0x3F, 0x81, 0xDA, 0x01, 0xC0,  // ...?....
                /* 08F0 */  0xC7, 0x4F, 0xF0, 0x9C, 0xCB, 0x1F, 0xCA, 0x13,  // .O......
                /* 08F8 */  0xF8, 0x20, 0xEC, 0x51, 0xE1, 0x4E, 0x19, 0xEC,  // . .Q.N..
                /* 0900 */  0x64, 0x80, 0xF7, 0x39, 0x1F, 0x3A, 0x30, 0xB0,  // d..9.:0.
                /* 0908 */  0x9F, 0x0D, 0x3C, 0x30, 0xF0, 0x9D, 0x91, 0x80,  // ..<0....
                /* 0910 */  0xC7, 0x93, 0xC0, 0x67, 0x24, 0x70, 0x59, 0x39,  // ...g$pY9
                /* 0918 */  0x23, 0x81, 0xF6, 0xFF, 0x7F, 0x46, 0x02, 0xAF,  // #....F..
                /* 0920 */  0xE0, 0x33, 0x12, 0x68, 0x0E, 0x43, 0xEC, 0x8C,  // .3.h.C..
                /* 0928 */  0x04, 0xB6, 0xFB, 0x91, 0x13, 0x6D, 0x3B, 0x01,  // .....m;.
                /* 0930 */  0x09, 0x32, 0x64, 0x49, 0x5C, 0x30, 0x85, 0xF1,  // .2dI\0..
                /* 0938 */  0xE1, 0xC3, 0x67, 0x04, 0xFC, 0xA8, 0x0F, 0xFA,  // ..g.....
                /* 0940 */  0x58, 0x0F, 0x8B, 0x1D, 0xC6, 0x0D, 0xC7, 0x0F,  // X.......
                /* 0948 */  0x04, 0x1E, 0xD6, 0xB9, 0x9C, 0xC6, 0xA9, 0x9C,  // ........
                /* 0950 */  0xBD, 0xE7, 0x15, 0x92, 0x49, 0x1B, 0x1F, 0xEA,  // ....I...
                /* 0958 */  0xC4, 0xE5, 0x33, 0xC1, 0xE1, 0xF8, 0xFA, 0x10,  // ..3.....
                /* 0960 */  0xF1, 0x9D, 0xDC, 0x30, 0x09, 0x7C, 0x14, 0x60,  // ...0.|.`
                /* 0968 */  0x68, 0x1C, 0x1A, 0x3B, 0x0C, 0xDF, 0x11, 0x82,  // h..;....
                /* 0970 */  0x1D, 0xC4, 0x09, 0xFA, 0xE4, 0xCE, 0x26, 0x74,  // ......&t
                /* 0978 */  0xAA, 0x4F, 0xF4, 0xEF, 0x0E, 0xCF, 0xE8, 0x51,  // .O.....Q
                /* 0980 */  0x63, 0x34, 0x07, 0x45, 0x0E, 0x12, 0x1E, 0x39,  // c4.E...9
                /* 0988 */  0x38, 0xE6, 0x7B, 0x06, 0x4F, 0x44, 0x46, 0x38,  // 8.{.ODF8
                /* 0990 */  0xE5, 0x87, 0x1D, 0xDF, 0x0C, 0x8C, 0xF2, 0xB6,  // ........
                /* 0998 */  0xCB, 0x90, 0x8C, 0x6A, 0xC4, 0xF7, 0x01, 0x8F,  // ...j....
                /* 09A0 */  0xF1, 0x49, 0x21, 0x52, 0xAD, 0x33, 0x23, 0xA0,  // .I!R.3#.
                /* 09A8 */  0xCF, 0xBC, 0xFC, 0x12, 0x7D, 0xF2, 0xEF, 0x13,  // ....}...
                /* 09B0 */  0xAF, 0xD1, 0x09, 0x7C, 0xBA, 0xF2, 0x68, 0xF8,  // ...|..h.
                /* 09B8 */  0xF1, 0xC0, 0x9E, 0x2F, 0x16, 0xE4, 0x98, 0xC0,  // .../....
                /* 09C0 */  0xDC, 0xDF, 0x84, 0x74, 0x95, 0x78, 0xB5, 0x38,  // ...t.x.8
                /* 09C8 */  0xA4, 0x77, 0x82, 0x08, 0x31, 0x7E, 0x04, 0xDA,  // .w..1~..
                /* 09D0 */  0x12, 0xF0, 0xFF, 0xC7, 0x3E, 0xB7, 0x48, 0x47,  // ....>.HG
                /* 09D8 */  0x17, 0x25, 0xC4, 0x5B, 0x4C, 0x6B, 0x43, 0x10,  // .%.[LkC.
                /* 09E0 */  0x4A, 0x90, 0xDE, 0xB0, 0x34, 0xAB, 0x28, 0x81,  // J...4.(.
                /* 09E8 */  0x82, 0x46, 0x0C, 0x1A, 0x28, 0x5E, 0x84, 0x30,  // .F..(^.0
                /* 09F0 */  0x07, 0x10, 0x27, 0x48, 0xE0, 0xF6, 0x07, 0x41,  // ..'H...A
                /* 09F8 */  0xA2, 0x1D, 0x0A, 0x74, 0x42, 0x71, 0xA4, 0xD1,  // ...tBq..
                /* 0A00 */  0xA0, 0x4E, 0x25, 0xFC, 0xE6, 0xE3, 0xCB, 0xA5,  // .N%.....
                /* 0A08 */  0x87, 0xF9, 0x96, 0xE4, 0xC1, 0x3D, 0x6E, 0x3D,  // .....=n=
                /* 0A10 */  0x11, 0x78, 0xEC, 0x6C, 0xD8, 0x3E, 0x95, 0xC0,  // .x.l.>..
                /* 0A18 */  0x39, 0x51, 0x05, 0x7C, 0xA3, 0xF5, 0xC1, 0x02,  // 9Q.|....
                /* 0A20 */  0x1C, 0xC7, 0x12, 0xF8, 0xE3, 0xF1, 0x51, 0xC0,  // ......Q.
                /* 0A28 */  0xF3, 0x39, 0xE1, 0xE7, 0x1C, 0x32, 0x08, 0xD4,  // .9...2..
                /* 0A30 */  0x19, 0x87, 0x0F, 0xF3, 0x61, 0x8A, 0x9D, 0x5E,  // ....a..^
                /* 0A38 */  0x4C, 0xE0, 0x53, 0x25, 0x1F, 0x0F, 0xF8, 0x4F,  // L.S%...O
                /* 0A40 */  0xD8, 0x8F, 0x05, 0x8F, 0x18, 0xC6, 0xF6, 0x41,  // .......A
                /* 0A48 */  0xC1, 0x77, 0x18, 0x9F, 0x5A, 0xE0, 0x5B, 0xBD,  // .w..Z.[.
                /* 0A50 */  0x29, 0x20, 0xEF, 0x5C, 0x78, 0x82, 0x87, 0x8F,  // ) .\x...
                /* 0A58 */  0x67, 0x08, 0xEC, 0x08, 0xF8, 0x31, 0xE0, 0x09,  // g....1..
                /* 0A60 */  0x86, 0x8D, 0xE0, 0x25, 0xC6, 0x93, 0x38, 0x20,  // ...%..8 
                /* 0A68 */  0x9F, 0x2E, 0x8C, 0x10, 0xFE, 0xA1, 0xE2, 0x21,  // .......!
                /* 0A70 */  0xC3, 0x07, 0x6F, 0xCF, 0xE1, 0x55, 0xC4, 0x04,  // ..o..U..
                /* 0A78 */  0x56, 0xF9, 0x7B, 0xD2, 0x28, 0xAD, 0xE7, 0xDC,  // V.{.(...
                /* 0A80 */  0x47, 0xFF, 0xFF, 0x04, 0x3E, 0x12, 0x58, 0xC1,  // G...>.X.
                /* 0A88 */  0x13, 0x41, 0xF8, 0xCF, 0x24, 0x81, 0xCF, 0xE6,  // .A..$...
                /* 0A90 */  0x91, 0xE0, 0x18, 0x1E, 0x2A, 0xD8, 0x6D, 0xE5,  // ....*.m.
                /* 0A98 */  0x89, 0xC2, 0xD3, 0x75, 0xE6, 0xC7, 0x81, 0x8E,  // ...u....
                /* 0AA0 */  0x7C, 0x3C, 0x2D, 0x8C, 0x54, 0x1D, 0xF9, 0x50,  // |<-.T..P
                /* 0AA8 */  0x3A, 0x8E, 0x7C, 0x14, 0xC4, 0x87, 0x06, 0x1F,  // :.|.....
                /* 0AB0 */  0x9F, 0xF0, 0x83, 0xF3, 0x24, 0xF0, 0xD3, 0x7D,  // ....$..}
                /* 0AB8 */  0xA9, 0xF1, 0xB9, 0x57, 0x57, 0x3E, 0x10, 0xDF,  // ...WW>..
                /* 0AC0 */  0x5C, 0x7C, 0x2D, 0x02, 0x53, 0xA8, 0x73, 0x1A,  // \|-.S.s.
                /* 0AC8 */  0x7A, 0x60, 0x9E, 0x29, 0x8C, 0x5B, 0x1A, 0x78,  // z`.).[.x
                /* 0AD0 */  0x07, 0xE4, 0x7B, 0x1F, 0xB0, 0x88, 0x71, 0x06,  // ..{...q.
                /* 0AD8 */  0x41, 0x03, 0xB3, 0x81, 0x3D, 0x7F, 0x3C, 0xF0,  // A...=.<.
                /* 0AE0 */  0x1B, 0xF3, 0xCC, 0x3C, 0x7A, 0xB0, 0x5E, 0x0F,  // ...<z.^.
                /* 0AE8 */  0x3C, 0x7A, 0x18, 0xFF, 0xFF, 0xDB, 0x07, 0xDC,  // <z......
                /* 0AF0 */  0x8B, 0x1C, 0xB0, 0x88, 0x75, 0x91, 0x43, 0x5D,  // ....u.C]
                /* 0AF8 */  0x90, 0x3C, 0x69, 0x83, 0x78, 0x62, 0xBE, 0x6F,  // .<i.xb.o
                /* 0B00 */  0xDB, 0xC9, 0xD5, 0x01, 0x7D, 0x90, 0xC3, 0x4D,  // ....}..M
                /* 0B08 */  0xD7, 0x27, 0x0C, 0x5F, 0xD1, 0xC0, 0x0F, 0xE5,  // .'._....
                /* 0B10 */  0x2B, 0x1A, 0x78, 0x2E, 0x3A, 0x0F, 0x41, 0x87,  // +.x.:.A.
                /* 0B18 */  0x47, 0xC6, 0x85, 0x16, 0x75, 0x79, 0x80, 0x32,  // G...uy.2
                /* 0B20 */  0x81, 0x30, 0x27, 0x12, 0xFC, 0x49, 0x24, 0xC2,  // .0'..I$.
                /* 0B28 */  0x53, 0x91, 0x6F, 0x62, 0xEC, 0xD6, 0x07, 0x4C,  // S.ob...L
                /* 0B30 */  0xC7, 0xC6, 0x6F, 0x73, 0x60, 0xFE, 0xFF, 0xDF,  // ..os`...
                /* 0B38 */  0xE6, 0xB0, 0x22, 0x6E, 0x73, 0xA0, 0xBB, 0x67,  // .."ns..g
                /* 0B40 */  0xF0, 0xDB, 0x1C, 0xF0, 0xBC, 0x6E, 0xF8, 0x12,  // .....n..
                /* 0B48 */  0x06, 0x96, 0x2B, 0x0E, 0xBF, 0x84, 0xF1, 0x2B,  // ..+....+
                /* 0B50 */  0x98, 0x41, 0xC2, 0xC4, 0x7C, 0x73, 0x64, 0xA8,  // .A..|sd.
                /* 0B58 */  0x71, 0x1E, 0xC4, 0x18, 0xD2, 0x53, 0x02, 0xF6,  // q....S..
                /* 0B60 */  0xE4, 0xE1, 0x7C, 0xF7, 0x1E, 0xD4, 0x50, 0x9C,  // ..|...P.
                /* 0B68 */  0xE9, 0xFA, 0x8C, 0x38, 0xBD, 0xC0, 0xC8, 0x71,  // ...8...q
                /* 0B70 */  0x71, 0x46, 0x25, 0x80, 0x91, 0xFE, 0xE5, 0xEB,  // qF%.....
                /* 0B78 */  0xB0, 0xC1, 0x15, 0xDF, 0x7E, 0x28, 0x88, 0xAF,  // ....~(..
                /* 0B80 */  0x24, 0x3E, 0xEF, 0xFA, 0xDA, 0x83, 0xD3, 0x03,  // $>......
                /* 0B88 */  0xA2, 0xB3, 0xE5, 0xB1, 0x1F, 0xC2, 0x83, 0x0F,  // ........
                /* 0B90 */  0xF0, 0xFE, 0xFF, 0x1F, 0x7C, 0xF8, 0x79, 0x17,  // ....|.y.
                /* 0B98 */  0xCE, 0xB4, 0x60, 0xDD, 0x7C, 0x00, 0x07, 0x47,  // ..`.|..G
                /* 0BA0 */  0x00, 0x38, 0x57, 0xAE, 0x93, 0x3F, 0xB2, 0x47,  // .8W..?.G
                /* 0BA8 */  0x00, 0x60, 0x73, 0xFA, 0x01, 0xC7, 0x11, 0x00,  // .`s.....
                /* 0BB0 */  0x0C, 0xD3, 0x82, 0x75, 0x04, 0x00, 0x4E, 0x27,  // ...u..N'
                /* 0BB8 */  0x68, 0xF0, 0xDD, 0xA5, 0xFE, 0xFF, 0xEF, 0x52,  // h......R
                /* 0BC0 */  0xC0, 0x6B, 0x98, 0xBE, 0x4B, 0x01, 0xE7, 0x2F,  // .k..K../
                /* 0BC8 */  0x84, 0xEF, 0x23, 0x3C, 0xF2, 0x35, 0x82, 0x82,  // ..#<.5..
                /* 0BD0 */  0xF8, 0x8A, 0xE0, 0xBB, 0x14, 0xF0, 0x3C, 0x3E,  // ......<>
                /* 0BD8 */  0x83, 0xEB, 0x82, 0x04, 0x7C, 0x24, 0x5C, 0x90,  // ....|$\.
                /* 0BE0 */  0x40, 0xF7, 0xFF, 0x3F, 0xF9, 0xF3, 0x0B, 0x12,  // @..?....
                /* 0BE8 */  0xF0, 0x44, 0xF5, 0xF1, 0x19, 0x5C, 0xF7, 0x23,  // .D...\.#
                /* 0BF0 */  0x70, 0x6A, 0xFD, 0x51, 0xE8, 0x7E, 0xC4, 0x39,  // pj.Q.~.9
                /* 0BF8 */  0xAC, 0x74, 0xD1, 0xF2, 0x38, 0x08, 0x72, 0xC1,  // .t..8.r.
                /* 0C00 */  0x3D, 0xCE, 0xB7, 0x9C, 0x77, 0x00, 0xE3, 0x78,  // =...w..x
                /* 0C08 */  0x2E, 0x3E, 0x4F, 0x18, 0x3F, 0x41, 0x65, 0x90,  // .>O.?Ae.
                /* 0C10 */  0xBA, 0x21, 0x71, 0x4D, 0x30, 0xD2, 0x76, 0xD0,  // .!qM0.v.
                /* 0C18 */  0x44, 0xA9, 0x39, 0x68, 0x52, 0x10, 0x1F, 0x34,  // D.9hR..4
                /* 0C20 */  0x01, 0x9F, 0xFF, 0xFF, 0xEB, 0x11, 0xF0, 0x0D,  // ........
                /* 0C28 */  0x33, 0x7E, 0xF4, 0x64, 0x7C, 0x27, 0xC0, 0x9F,  // 3~.d|'..
                /* 0C30 */  0x9F, 0x7D, 0x24, 0xF1, 0x19, 0xFC, 0xF1, 0x08,  // .}$.....
                /* 0C38 */  0x98, 0xDE, 0x67, 0x80, 0x45, 0xEC, 0xDB, 0x03,  // ..g.E...
                /* 0C40 */  0x2A, 0xE8, 0xED, 0x81, 0x82, 0xF8, 0x52, 0xE2,  // *.....R.
                /* 0C48 */  0xB3, 0x26, 0x60, 0xE5, 0xFF, 0x7F, 0x9F, 0x61,  // .&`....a
                /* 0C50 */  0x97, 0x0C, 0xFC, 0xF5, 0x9F, 0xDD, 0x1F, 0x1E,  // ........
                /* 0C58 */  0xD0, 0x7D, 0xC5, 0xE0, 0xA7, 0x4C, 0xE0, 0x79,  // .}...L.y
                /* 0C60 */  0x28, 0x60, 0x97, 0x0C, 0x18, 0x77, 0x18, 0x8F,  // (`...w..
                /* 0C68 */  0x8A, 0x13, 0x38, 0xC4, 0x30, 0xE8, 0xA0, 0xC0,  // ..8.0...
                /* 0C70 */  0x75, 0xC8, 0xE0, 0x0B, 0xF2, 0xFD, 0x08, 0xEE,  // u.......
                /* 0C78 */  0x25, 0x03, 0x5C, 0xC1, 0x86, 0x86, 0x96, 0x72,  // %.\....r
                /* 0C80 */  0x4C, 0xA0, 0xC7, 0x1B, 0x76, 0x8E, 0xF7, 0xBD,  // L...v...
                /* 0C88 */  0x87, 0x0D, 0x0E, 0xDC, 0x87, 0x0C, 0x0F, 0x0E,  // ........
                /* 0C90 */  0xDE, 0x6D, 0xC3, 0x83, 0x03, 0xD7, 0x55, 0x0A,  // .m....U.
                /* 0C98 */  0xFB, 0xFF, 0xBF, 0x4A, 0x81, 0x39, 0xF8, 0xD8,  // ...J.9..
                /* 0CA0 */  0x51, 0x57, 0x29, 0x70, 0x9C, 0xEB, 0xF8, 0x55,  // QW)p...U
                /* 0CA8 */  0x0A, 0x78, 0x0E, 0xF0, 0x55, 0x0A, 0x2C, 0xD7,  // .x..U.,.
                /* 0CB0 */  0x26, 0x36, 0x87, 0xE7, 0x26, 0x7E, 0x95, 0xF2,  // &6..&~..
                /* 0CB8 */  0xA1, 0x06, 0x7B, 0x85, 0xF1, 0xF5, 0x46, 0xA7,  // ..{...F.
                /* 0CC0 */  0x56, 0x14, 0x87, 0xA3, 0x9C, 0x5A, 0x11, 0xB7,  // V....Z..
                /* 0CC8 */  0x28, 0x98, 0xD2, 0xCF, 0xAD, 0x28, 0xD1, 0x30,  // (....(.0
                /* 0CD0 */  0x92, 0x7C, 0x6E, 0x45, 0x89, 0x3C, 0xB7, 0x52,  // .|nE.<.R
                /* 0CD8 */  0x10, 0x9F, 0x10, 0x7C, 0x8B, 0x02, 0xD6, 0xFF,  // ...|....
                /* 0CE0 */  0xFF, 0x5B, 0x14, 0x60, 0xF1, 0xD0, 0x0A, 0x07,  // .[.`....
                /* 0CE8 */  0xF0, 0x31, 0x0A, 0x70, 0x70, 0x11, 0xF5, 0x35,  // .1.pp..5
                /* 0CF0 */  0x08, 0xFE, 0x98, 0xC0, 0x8A, 0xE4, 0x31, 0x81,  // ......1.
                /* 0CF8 */  0x2D, 0xD0, 0x1D, 0x01, 0xAD, 0x02, 0x44, 0xFF,  // -.....D.
                /* 0D00 */  0xFF, 0x4B, 0x10, 0xE6, 0x86, 0x00, 0xDE, 0xE5,  // .K......
                /* 0D08 */  0xF8, 0xC4, 0x0A, 0xF3, 0x86, 0x00, 0xAE, 0x0B,  // ........
                /* 0D10 */  0x2B, 0xC0, 0xA2, 0x63, 0x11, 0xD8, 0xFE, 0xFF,  // +..c....
                /* 0D18 */  0x37, 0x03, 0xCC, 0xB1, 0x08, 0xF0, 0x71, 0x61,  // 7.....qa
                /* 0D20 */  0xE5, 0xC7, 0x22, 0xF0, 0x85, 0x39, 0x16, 0x21,  // .."..9.!
                /* 0D28 */  0x44, 0x8E, 0x43, 0x08, 0x0F, 0x37, 0x30, 0x08,  // D.C..70.
                /* 0D30 */  0x8A, 0x3F, 0x16, 0xA1, 0x64, 0xC3, 0x48, 0xF4,  // .?..d.H.
                /* 0D38 */  0xB1, 0x08, 0x25, 0xF3, 0x58, 0x44, 0x41, 0x7C,  // ..%.XDA|
                /* 0D40 */  0xC6, 0x70, 0x90, 0x0B, 0x0A, 0xFA, 0xA0, 0xE6,  // .p......
                /* 0D48 */  0x41, 0xBD, 0xD2, 0xB2, 0xF3, 0x87, 0x07, 0xC7,  // A.......
                /* 0D50 */  0x4F, 0x45, 0xC0, 0xF3, 0x22, 0x0F, 0x67, 0xAA,  // OE..".g.
                /* 0D58 */  0xF0, 0x4E, 0x29, 0x60, 0xF8, 0xFF, 0x5F, 0x8B,  // .N)`.._.
                /* 0D60 */  0x80, 0xDF, 0x2D, 0x0B, 0x18, 0x9E, 0x8A, 0x80,  // ..-.....
                /* 0D68 */  0xC5, 0x05, 0x80, 0x21, 0x37, 0x7F, 0x4D, 0x20,  // ...!7.M 
                /* 0D70 */  0xA7, 0x22, 0x60, 0x7A, 0x11, 0x83, 0x73, 0x7F,  // ."`z..s.
                /* 0D78 */  0x84, 0x71, 0x44, 0x00, 0x2F, 0xB0, 0xCF, 0x45,  // .qD./..E
                /* 0D80 */  0xB0, 0xFF, 0xFF, 0xE7, 0x22, 0x80, 0x6D, 0xB1,  // ....".m.
                /* 0D88 */  0xCF, 0x45, 0xA0, 0x83, 0xE5, 0xE7, 0x22, 0x60,  // .E...."`
                /* 0D90 */  0xF6, 0xFF, 0x3F, 0x17, 0x61, 0xE7, 0xF8, 0x5C,  // ..?.a..\
                /* 0D98 */  0x04, 0xB6, 0xDB, 0x07, 0x03, 0x09, 0xF7, 0x92,  // ........
                /* 0DA0 */  0x82, 0x3D, 0x71, 0x38, 0xDE, 0x5B, 0x42, 0xC7,  // .=q8.[B.
                /* 0DA8 */  0x22, 0x7E, 0x81, 0x70, 0xA0, 0x35, 0x0A, 0x36,  // "~.p.5.6
                /* 0DB0 */  0xE0, 0x39, 0x74, 0x3D, 0x74, 0x81, 0x7A, 0x02,  // .9t=t.z.
                /* 0DB8 */  0x35, 0x4E, 0x42, 0x20, 0x87, 0x18, 0xFC, 0x00,  // 5NB ....
                /* 0DC0 */  0x8E, 0xCD, 0x60, 0x31, 0xA2, 0x3D, 0x27, 0xBD,  // ..`1.='.
                /* 0DC8 */  0x06, 0x19, 0xEB, 0xA8, 0x7D, 0x55, 0xF2, 0x9D,  // ....}U..
                /* 0DD0 */  0x44, 0xF0, 0x3A, 0x1C, 0x71, 0xB9, 0x30, 0x12,  // D.:.q.0.
                /* 0DD8 */  0xFB, 0xBF, 0xD0, 0x11, 0x82, 0xCB, 0x3B, 0x23,  // ......;#
                /* 0DE0 */  0x51, 0x10, 0x8F, 0xCF, 0x39, 0x2E, 0x21, 0x3E,  // Q...9.!>
                /* 0DE8 */  0x1C, 0x81, 0x42, 0xF3, 0xE1, 0x08, 0xC4, 0xC7,  // ..B.....
                /* 0DF0 */  0x0F, 0x70, 0xCD, 0x09, 0xCE, 0xFC, 0xDF, 0x0F,  // .p......
                /* 0DF8 */  0x4E, 0xE9, 0x39, 0xC5, 0xE7, 0x02, 0x23, 0x1C,  // N.9...#.
                /* 0E00 */  0xD6, 0x39, 0x81, 0xF7, 0x4E, 0x04, 0xBE, 0xEB,  // .9..N...
                /* 0E08 */  0x8E, 0xE7, 0x84, 0xBB, 0xCB, 0xFC, 0xFF, 0xCF,  // ........
                /* 0E10 */  0xC9, 0x47, 0x81, 0x8A, 0x31, 0x75, 0x3F, 0x88,  // .G..1u?.
                /* 0E18 */  0x1E, 0xE5, 0xD9, 0xC1, 0x63, 0x02, 0xEB, 0xB9,  // ....c...
                /* 0E20 */  0xC0, 0xD3, 0x06, 0xFF, 0x59, 0xED, 0x81, 0xE8,  // ....Y...
                /* 0E28 */  0x9D, 0xC2, 0x67, 0x15, 0xC3, 0x46, 0xF5, 0x9C,  // ..g..F..
                /* 0E30 */  0xC0, 0x7B, 0x97, 0xE6, 0xD3, 0x06, 0xF7, 0xFD,  // .{......
                /* 0E38 */  0xE4, 0x8C, 0x4E, 0xFA, 0x1D, 0xE5, 0xC9, 0x80,  // ..N.....
                /* 0E40 */  0x9D, 0x3B, 0x3C, 0x26, 0xB0, 0x9E, 0x85, 0xC0,  // .;<&....
                /* 0E48 */  0x37, 0x26, 0x30, 0x1C, 0x47, 0x8E, 0x09, 0xBC,  // 7&0.G...
                /* 0E50 */  0xF7, 0x7C, 0xFC, 0xFF, 0x7F, 0x4C, 0xF0, 0x0F,  // .|...L..
                /* 0E58 */  0x56, 0x70, 0x4E, 0xAF, 0xFC, 0x6E, 0xC0, 0x0F,  // VpN..n..
                /* 0E60 */  0x56, 0x60, 0x3E, 0x1A, 0x7B, 0x68, 0xB0, 0x6E,  // V`>.{h.n
                /* 0E68 */  0xF9, 0xE0, 0x3B, 0x58, 0x01, 0x26, 0x3D, 0x1C,  // ..;X.&=.
                /* 0E70 */  0xAC, 0x80, 0xEC, 0xFF, 0xFF, 0x60, 0x85, 0x15,  // .....`..
                /* 0E78 */  0xB1, 0x58, 0x1D, 0xAC, 0xC0, 0x75, 0x33, 0xE0,  // .X...u3.
                /* 0E80 */  0x07, 0x2B, 0xE0, 0x79, 0x2B, 0xF4, 0xC1, 0x0A,  // .+.y+...
                /* 0E88 */  0x1C, 0x47, 0x29, 0x3E, 0x88, 0x57, 0x29, 0x8E,  // .G)>.W).
                /* 0E90 */  0xF2, 0x2C, 0x85, 0x87, 0xF3, 0x5D, 0x0A, 0xCE,  // .,...]..
                /* 0E98 */  0xF9, 0xCA, 0xC2, 0xDF, 0x18, 0x3A, 0x5F, 0x71,  // .....:_q
                /* 0EA0 */  0x49, 0xA7, 0x29, 0xAF, 0x59, 0xA7, 0x2D, 0x36,  // I.).Y.-6
                /* 0EA8 */  0xFE, 0xC3, 0x78, 0x85, 0xF2, 0x44, 0xE2, 0xC6,  // ..x..D..
                /* 0EB0 */  0x8E, 0x1B, 0xF9, 0x04, 0x4E, 0xE8, 0x74, 0x0C,  // ....N.t.
                /* 0EB8 */  0xF6, 0xA8, 0xA5, 0xF3, 0x2B, 0x3D, 0xF3, 0x10,  // ....+=..
                /* 0EC0 */  0x18, 0xC9, 0x3F, 0x44, 0xA0, 0x04, 0xC3, 0x08,  // ..?D....
                /* 0EC8 */  0xCE, 0x20, 0x3E, 0x07, 0xF8, 0x18, 0xEB, 0x9B,  // . >.....
                /* 0ED0 */  0x0A, 0x4E, 0xCB, 0x31, 0x0C, 0x71, 0x85, 0xF0,  // .N.1.q..
                /* 0ED8 */  0xA0, 0x3C, 0x90, 0x87, 0x7B, 0x5F, 0xAD, 0x80,  // .<..{_..
                /* 0EE0 */  0xDD, 0xFF, 0xFF, 0x02, 0x82, 0x49, 0x31, 0x28,  // .....I1(
                /* 0EE8 */  0x34, 0xB0, 0x07, 0x15, 0xF1, 0xB9, 0xE9, 0xF4,  // 4.......
                /* 0EF0 */  0x9F, 0x89, 0x3C, 0x50, 0xDF, 0xAC, 0x80, 0xE5,  // ..<P....
                /* 0EF8 */  0x19, 0x05, 0x58, 0xC4, 0x3A, 0x0F, 0xA0, 0x82,  // ..X.:...
                /* 0F00 */  0x9C, 0x07, 0x28, 0x88, 0x07, 0xE6, 0x30, 0x63,  // ..(...0c
                /* 0F08 */  0x45, 0x9F, 0x51, 0xE0, 0x5E, 0x31, 0x9E, 0x51,  // E.Q.^1.Q
                /* 0F10 */  0xC0, 0x7C, 0xEA, 0x02, 0x5F, 0xB0, 0xBB, 0x10,  // .|.._...
                /* 0F18 */  0xFA, 0xD4, 0xE5, 0x3B, 0x2B, 0x0C, 0x82, 0x21,  // ...;+..!
                /* 0F20 */  0x0E, 0x43, 0x74, 0x54, 0xE0, 0x3A, 0x0D, 0xF1,  // .CtT.:..
                /* 0F28 */  0x31, 0x72, 0x38, 0xF6, 0xFF, 0x1F, 0x1C, 0xF6,  // 1r8.....
                /* 0F30 */  0xF6, 0x05, 0xBE, 0xE3, 0x0C, 0xF0, 0x78, 0x17,  // ......x.
                /* 0F38 */  0xF8, 0x38, 0x03, 0xAE, 0x93, 0x8F, 0x8F, 0x33,  // .8.....3
                /* 0F40 */  0xC0, 0x55, 0xF0, 0xB1, 0x13, 0x74, 0x37, 0x17,  // .U...t7.
                /* 0F48 */  0x8E, 0xF2, 0xE8, 0x02, 0x07, 0x2B, 0xE8, 0x03,  // .....+..
                /* 0F50 */  0x98, 0xEF, 0x12, 0xBE, 0xE1, 0xB3, 0xF4, 0x87,  // ........
                /* 0F58 */  0x19, 0xD4, 0x79, 0xC9, 0x99, 0x57, 0x2C, 0x8F,  // ..y..W,.
                /* 0F60 */  0x87, 0x19, 0x10, 0xCC, 0x00, 0x47, 0x30, 0xDB,  // .....G0.
                /* 0F68 */  0x79, 0x06, 0x95, 0x0A, 0x46, 0xFA, 0x0F, 0x1C,  // y...F...
                /* 0F70 */  0x28, 0xC5, 0x07, 0x0E, 0x0A, 0xE2, 0xF3, 0x0C,  // (.......
                /* 0F78 */  0xF6, 0xFF, 0x7F, 0x9E, 0xC1, 0x0C, 0x86, 0x9D,  // ........
                /* 0F80 */  0x67, 0x80, 0xF5, 0x65, 0x0F, 0xD6, 0x71, 0x03,  // g..e..q.
                /* 0F88 */  0x7F, 0x9F, 0x01, 0x5C, 0x89, 0xFA, 0x11, 0xE8,  // ...\....
                /* 0F90 */  0x3E, 0xC0, 0x65, 0xC0, 0x68, 0x46, 0x06, 0xF1,  // >.e.hF..
                /* 0F98 */  0xED, 0xC4, 0xF7, 0x19, 0xC0, 0xC5, 0xFF, 0x7F,  // ........
                /* 0FA0 */  0xBA, 0xB8, 0x5B, 0x03, 0x1E, 0xD8, 0x37, 0x02,  // ..[...7.
                /* 0FA8 */  0x86, 0x79, 0x48, 0xE7, 0xE2, 0x41, 0x81, 0xFD,  // .yH..A..
                /* 0FB0 */  0x1E, 0x03, 0xBE, 0xCB, 0xA0, 0xAF, 0x0C, 0x1E,  // ........
                /* 0FB8 */  0x3A, 0x0E, 0xF8, 0xB5, 0xE2, 0x5D, 0xDA, 0xB7,  // :....]..
                /* 0FC0 */  0xAA, 0xA0, 0xC7, 0xF4, 0x64, 0xE2, 0x13, 0xE5,  // ....d...
                /* 0FC8 */  0xCB, 0x20, 0xF8, 0x4F, 0x05, 0xBE, 0x0C, 0x82,  // . .O....
                /* 0FD0 */  0xC7, 0x98, 0x00, 0x6D, 0x97, 0x41, 0x20, 0x73,  // ...m.A s
                /* 0FD8 */  0xDD, 0x01, 0x1F, 0xB8, 0xAF, 0x3B, 0xC0, 0xE5,  // .....;..
                /* 0FE0 */  0xFF, 0x7F, 0xDD, 0x01, 0x1E, 0xF7, 0x17, 0x76,  // .......v
                /* 0FE8 */  0xDD, 0x01, 0x63, 0x80, 0xEB, 0x0E, 0x4A, 0xD4,  // ..c...J.
                /* 0FF0 */  0x55, 0xDD, 0x2B, 0xD6, 0x48, 0x7C, 0x5A, 0x09,  // U.+.H|Z.
                /* 0FF8 */  0x6C, 0x90, 0xE7, 0xB9, 0x53, 0x7E, 0x6B, 0x87,  // l...S~k.
                /* 1000 */  0x27, 0xF0, 0xB2, 0x83, 0x92, 0x06, 0xA3, 0x00,  // '.......
                /* 1008 */  0x97, 0x1D, 0x94, 0xE4, 0xCB, 0x0E, 0x05, 0xF1,  // ........
                /* 1010 */  0x31, 0xC0, 0xB7, 0x76, 0xC0, 0xC6, 0x81, 0x08,  // 1..v....
                /* 1018 */  0xCE, 0x61, 0x07, 0x8F, 0x7F, 0x50, 0x60, 0x3E,  // .a...P`>
                /* 1020 */  0xED, 0x80, 0xE9, 0xFF, 0x7F, 0xDA, 0x01, 0x2E,  // ........
                /* 1028 */  0xC1, 0x0E, 0x04, 0xA8, 0x28, 0x07, 0x02, 0x0A,  // ....(...
                /* 1030 */  0xE2, 0xCB, 0x20, 0xE0, 0x26, 0xDA, 0x65, 0x10,  // .. .&.e.
                /* 1038 */  0x3D, 0x2C, 0x7E, 0x25, 0xC0, 0x1D, 0x1D, 0x0E,  // =,~%....
                /* 1040 */  0x87, 0xDD, 0x06, 0x01, 0x9F, 0x12, 0xCE, 0x05,  // ........
                /* 1048 */  0xFA, 0xFF, 0x9F, 0x67, 0xC0, 0x65, 0xE2, 0x3C,  // ...g.e.<
                /* 1050 */  0x03, 0x74, 0x0F, 0x3B, 0xFC, 0xAE, 0x0C, 0x86,  // .t.;....
                /* 1058 */  0xC3, 0x0B, 0xE6, 0xA8, 0x0C, 0x36, 0x82, 0xD9,  // .....6..
                /* 1060 */  0x5F, 0x1F, 0x3A, 0xD0, 0x70, 0x0E, 0x67, 0x5F,  // _.:.p.g_
                /* 1068 */  0xB4, 0xCE, 0x38, 0x4C, 0xE4, 0x30, 0x84, 0x10,  // ..8L.0..
                /* 1070 */  0x3E, 0xF4, 0xD1, 0x44, 0x38, 0x87, 0x47, 0x68,  // >..D8.Gh
                /* 1078 */  0x8F, 0x8F, 0x65, 0x85, 0xD4, 0x71, 0x86, 0xA7,  // ..e..q..
                /* 1080 */  0x84, 0x91, 0xAA, 0xB3, 0x1A, 0x4A, 0xC7, 0x59,  // .....J.Y
                /* 1088 */  0x8D, 0x82, 0xF8, 0xEC, 0xE0, 0xAB, 0x8A, 0x4F,  // .......O
                /* 1090 */  0x58, 0xB8, 0xE3, 0x0C, 0xBC, 0x6B, 0xB6, 0x8F,  // X....k..
                /* 1098 */  0x33, 0x60, 0x1D, 0xA2, 0xAF, 0x57, 0x60, 0xBA,  // 3`...W`.
                /* 10A0 */  0x0A, 0x7A, 0x50, 0xB8, 0xFF, 0x3F, 0xB2, 0xA7,  // .zP..?..
                /* 10A8 */  0xCA, 0x90, 0x5F, 0xC1, 0x0E, 0xCB, 0x63, 0x02,  // .._...c.
                /* 10B0 */  0xEF, 0x6C, 0x3D, 0x26, 0xB0, 0xC5, 0x3A, 0x8F,  // .l=&..:.
                /* 10B8 */  0xA0, 0x6F, 0x3C, 0x30, 0x13, 0x5C, 0x47, 0xE8,  // .o<0.\G.
                /* 10C0 */  0xA4, 0xE0, 0xDD, 0x46, 0xE0, 0x81, 0x79, 0x6E,  // ...F..yn
                /* 10C8 */  0xB0, 0x8E, 0x2E, 0xE0, 0xBB, 0xF8, 0x00, 0x8B,  // ........
                /* 10D0 */  0x38, 0x4B, 0xD2, 0xD5, 0x81, 0x07, 0xB8, 0x5F,  // 8K....._
                /* 10D8 */  0x51, 0x10, 0x0F, 0xCB, 0x77, 0x3D, 0x3B, 0xB9,  // Q...w=;.
                /* 10E0 */  0xF8, 0x80, 0xE6, 0xAE, 0x07, 0x6E, 0x28, 0xDF,  // .....n(.
                /* 10E8 */  0xF5, 0x30, 0xFF, 0xFF, 0xE9, 0xC2, 0x76, 0x26,  // .0....v&
                /* 10F0 */  0x40, 0x19, 0x24, 0xB9, 0x1F, 0xF9, 0x86, 0x81,  // @.$.....
                /* 10F8 */  0x47, 0x7D, 0x74, 0x79, 0xA1, 0xC5, 0xDE, 0x08,  // G}ty....
                /* 1100 */  0x81, 0xF1, 0xFD, 0x08, 0xCE, 0xF1, 0x04, 0xDE,  // ........
                /* 1108 */  0xFD, 0x08, 0xDC, 0x63, 0xF2, 0xF0, 0xE0, 0x5D,  // ...c...]
                /* 1110 */  0x80, 0xF8, 0x2D, 0x13, 0xDC, 0x73, 0xC3, 0x9F,  // ..-..s..
                /* 1118 */  0x22, 0x9E, 0x81, 0x7C, 0x08, 0x00, 0xFB, 0x29,  // "..|...)
                /* 1120 */  0xC2, 0x87, 0x00, 0x30, 0xFC, 0xFF, 0x0F, 0x01,  // ...0....
                /* 1128 */  0x60, 0xB8, 0x73, 0x01, 0xA7, 0xBB, 0x92, 0x87,  // `.s.....
                /* 1130 */  0x07, 0xEF, 0x9C, 0xCE, 0xEF, 0x5C, 0xC0, 0x37,  // .....\.7
                /* 1138 */  0xF6, 0x19, 0x01, 0x75, 0xE7, 0x02, 0x87, 0x8A,  // ...u....
                /* 1140 */  0x3B, 0x17, 0xD0, 0x9D, 0xE3, 0x2B, 0x29, 0xD8,  // ;....+).
                /* 1148 */  0x8E, 0x1C, 0x0C, 0xE4, 0xDD, 0xD7, 0xE7, 0x08,  // ........
                /* 1150 */  0xDC, 0xC9, 0xC8, 0x9A, 0x16, 0xAA, 0xDB, 0x16,  // ........
                /* 1158 */  0xFB, 0xFF, 0xDF, 0x46, 0x99, 0xA2, 0x3F, 0x8F,  // ...F..?.
                /* 1160 */  0xC0, 0xD9, 0x75, 0xC2, 0xB7, 0x21, 0x86, 0xF1,  // ..u..!..
                /* 1168 */  0x12, 0xE6, 0x7B, 0x8A, 0xC1, 0x7D, 0x55, 0xF1,  // ..{..}U.
                /* 1170 */  0x49, 0x85, 0xA5, 0xBF, 0x26, 0xD2, 0x0B, 0x90,  // I...&...
                /* 1178 */  0x73, 0x93, 0x28, 0xF7, 0x69, 0x80, 0xC2, 0x39,  // s.(.i..9
                /* 1180 */  0xE9, 0x91, 0x89, 0x82, 0x18, 0xD0, 0x77, 0x29,  // ......w)
                /* 1188 */  0x9F, 0x72, 0x70, 0x07, 0x03, 0x9F, 0x0F, 0x3C,  // .rp....<
                /* 1190 */  0x10, 0x0F, 0xEB, 0xD1, 0x81, 0x5D, 0xB7, 0x80,  // .....]..
                /* 1198 */  0xE1, 0x0D, 0x87, 0x5D, 0x90, 0x80, 0x45, 0xFC,  // ...]..E.
                /* 11A0 */  0xB9, 0xA2, 0x02, 0xCF, 0x95, 0x82, 0x78, 0xAE,  // ......x.
                /* 11A8 */  0xBE, 0xF9, 0xD8, 0xCA, 0xCD, 0x07, 0x3D, 0x22,  // ......="
                /* 11B0 */  0x5F, 0x3E, 0xD8, 0x60, 0xF9, 0x2D, 0x05, 0xEC,  // _>.`.-..
                /* 11B8 */  0x83, 0xF1, 0x2D, 0x05, 0x3C, 0xA7, 0x94, 0xD2,  // ..-.<...
                /* 11C0 */  0xCE, 0xD6, 0x20, 0xF8, 0xFF, 0x5F, 0x3C, 0xC0,  // .. .._<.
                /* 11C8 */  0x15, 0xFC, 0xE2, 0x01, 0xBA, 0x71, 0xFA, 0xE2,  // .....q..
                /* 11D0 */  0x01, 0x5C, 0x07, 0xF8, 0xE2, 0x01, 0xB6, 0xF9,  // .\......
                /* 11D8 */  0x1E, 0xE9, 0x8B, 0x87, 0xEF, 0x1A, 0x30, 0xCE,  // ......0.
                /* 11E0 */  0x8D, 0x4C, 0xCF, 0xCD, 0x03, 0xC5, 0x61, 0x35,  // .L....a5
                /* 11E8 */  0x2F, 0x05, 0x4D, 0xFA, 0xCD, 0x03, 0xEE, 0xBD,  // /.M.....
                /* 11F0 */  0x03, 0x8C, 0x87, 0x07, 0xDC, 0xBD, 0x03, 0x38,  // .......8
                /* 11F8 */  0xFF, 0xFF, 0x6F, 0x0E, 0xFC, 0xDE, 0x01, 0x2C,  // ..o....,
                /* 1200 */  0xCF, 0x2C, 0xB8, 0x7B, 0x07, 0xF0, 0x3F, 0xE7,  // .,.{..?.
                /* 1208 */  0xF1, 0x7B, 0x07, 0xF0, 0xBE, 0x60, 0xF8, 0xDE,  // .{...`..
                /* 1210 */  0x01, 0x18, 0xF8, 0xFF, 0xDF, 0x3B, 0x60, 0x5C,  // .....;`\
                /* 1218 */  0x34, 0xD8, 0xBD, 0x03, 0x0C, 0xB9, 0x9F, 0x07,  // 4.......
                /* 1220 */  0x4F, 0x99, 0xEC, 0x35, 0x20, 0x91, 0x8B, 0xA5,  // O..5 ...
                /* 1228 */  0x30, 0xBE, 0x51, 0xF8, 0x7C, 0x80, 0x1F, 0xF1,  // 0.Q.|...
                /* 1230 */  0x01, 0x1F, 0xC2, 0x21, 0x31, 0x49, 0x70, 0xA8,  // ...!1Ip.
                /* 1238 */  0xC3, 0x80, 0xC7, 0xF1, 0x38, 0x7B, 0x22, 0xAF,  // ....8{".
                /* 1240 */  0xC5, 0x1E, 0x89, 0x21, 0xD9, 0xA5, 0xC2, 0x63,  // ...!...c
                /* 1248 */  0xE3, 0x47, 0x07, 0x0F, 0xEC, 0x05, 0xD9, 0x27,  // .G.....'
                /* 1250 */  0x65, 0x5F, 0x38, 0x7D, 0x14, 0xF1, 0x31, 0x80,  // e_8}..1.
                /* 1258 */  0x9F, 0x93, 0x19, 0x5A, 0x68, 0xEC, 0x30, 0x3C,  // ...Zh.0<
                /* 1260 */  0xC0, 0x60, 0x47, 0xE7, 0x3B, 0x80, 0x09, 0x3C,  // .`G.;..<
                /* 1268 */  0xA1, 0xD3, 0x2C, 0xF7, 0xDE, 0x20, 0xF1, 0xA8,  // ..,.. ..
                /* 1270 */  0xC2, 0x68, 0x0E, 0x8A, 0x04, 0x18, 0x35, 0x68,  // .h....5h
                /* 1278 */  0xCE, 0x0C, 0x67, 0xF0, 0x06, 0xC6, 0x06, 0xFD,  // ..g.....
                /* 1280 */  0xAC, 0xE9, 0x5B, 0x81, 0x51, 0x6A, 0x9E, 0x33,  // ..[.Qj.3
                /* 1288 */  0x01, 0xA9, 0x70, 0x9C, 0x5A, 0xF3, 0x79, 0x44,  // ..p.Z.yD
                /* 1290 */  0x89, 0x66, 0xEC, 0xE0, 0xBE, 0x48, 0x1B, 0xE7,  // .f...H..
                /* 1298 */  0x41, 0x21, 0x54, 0xAD, 0x93, 0x23, 0x30, 0xC7,  // A!T..#0.
                /* 12A0 */  0xC0, 0x80, 0xDE, 0x26, 0x1E, 0x00, 0x9E, 0x46,  // ...&...F
                /* 12A8 */  0xDE, 0x27, 0x5E, 0xF5, 0xF9, 0x80, 0xF8, 0xE9,  // .'^.....
                /* 12B0 */  0xC0, 0xD0, 0xEF, 0x15, 0x3E, 0x25, 0x30, 0xF7,  // ....>%0.
                /* 12B8 */  0x57, 0x6C, 0x79, 0x13, 0x60, 0x0D, 0x43, 0x10,  // Wly.`.C.
                /* 12C0 */  0x81, 0x23, 0xD8, 0xD6, 0x54, 0x74, 0xD9, 0x0B,  // .#..Tt..
                /* 12C8 */  0x11, 0x3E, 0xCA, 0x11, 0x1E, 0x54, 0xB0, 0xA8,  // .>...T..
                /* 12D0 */  0x51, 0x5E, 0x2A, 0x8E, 0xF1, 0x01, 0xF1, 0xC4,  // Q^*.....
                /* 12D8 */  0xA2, 0xC4, 0x8D, 0x15, 0x30, 0x42, 0xE4, 0xB0,  // ....0B..
                /* 12E0 */  0x67, 0xF2, 0x7E, 0x10, 0xDC, 0xB0, 0xB1, 0xDA,  // g.~.....
                /* 12E8 */  0x1F, 0x04, 0x89, 0x75, 0x2E, 0xD0, 0xE1, 0xD0,  // ...u....
                /* 12F0 */  0x91, 0x46, 0x83, 0x3A, 0x0B, 0xFC, 0xFF, 0x9F,  // .F.:....
                /* 12F8 */  0x7F, 0xD9, 0x49, 0xC1, 0x13, 0x7B, 0x46, 0x35,  // ..I..{F5
                /* 1300 */  0xC8, 0x1B, 0xB8, 0x75, 0x1E, 0x0A, 0xC8, 0xF0,  // ...u....
                /* 1308 */  0xD9, 0x69, 0xC4, 0x87, 0x12, 0x38, 0xAE, 0x01,  // .i...8..
                /* 1310 */  0x75, 0x3D, 0x78, 0xAE, 0x00, 0xCB, 0xA9, 0x04,  // u=x.....
                /* 1318 */  0xFE, 0x78, 0x7C, 0x1A, 0xF0, 0xEC, 0x4D, 0x60,  // .x|...M`
                /* 1320 */  0xF9, 0x83, 0x40, 0x5D, 0x7B, 0xF8, 0x50, 0x4F,  // ..@]{.PO
                /* 1328 */  0xEB, 0x35, 0xC0, 0x37, 0x4A, 0x13, 0xF8, 0x08,  // .5.7J...
                /* 1330 */  0xE9, 0x63, 0x8C, 0xC7, 0x03, 0x7E, 0xC5, 0xC7,  // .c...~..
                /* 1338 */  0x02, 0x21, 0xBC, 0x39, 0x78, 0xBE, 0x26, 0x28,  // .!.9x.&(
                /* 1340 */  0xEF, 0xD0, 0x02, 0x8A, 0xCB, 0x02, 0x3F, 0x7B,  // ......?{
                /* 1348 */  0xB0, 0xC3, 0x02, 0x3F, 0xCF, 0xFA, 0x10, 0x81,  // ...?....
                /* 1350 */  0x85, 0xE7, 0x87, 0x80, 0xC7, 0x17, 0x06, 0xFC,  // ........
                /* 1358 */  0x06, 0xE3, 0x29, 0x1C, 0x8E, 0x8F, 0x17, 0x46,  // ..)....F
                /* 1360 */  0x08, 0xFF, 0x54, 0xF1, 0x94, 0xE1, 0x33, 0xC4,  // ..T...3.
                /* 1368 */  0xF9, 0x3C, 0x2F, 0x9C, 0xD1, 0x13, 0x0F, 0x4B,  // .</....K
                /* 1370 */  0xF2, 0x56, 0xD4, 0x71, 0xC3, 0x69, 0x8F, 0x86,  // .V.q.i..
                /* 1378 */  0xE8, 0x94, 0x8B, 0x15, 0xFE, 0x1B, 0x4C, 0xE0,  // ......L.
                /* 1380 */  0x63, 0x7E, 0x20, 0x78, 0x7B, 0xC5, 0xCF, 0xE2,  // c~ x{...
                /* 1388 */  0x39, 0xE3, 0x94, 0x9E, 0x01, 0x4C, 0xE0, 0x44,  // 9....L.D
                /* 1390 */  0x57, 0x7A, 0x3A, 0x72, 0x67, 0xA1, 0xD0, 0x95,  // Wz:rg...
                /* 1398 */  0x0A, 0xD6, 0xFF, 0xFF, 0x4A, 0x85, 0x39, 0x35,  // ....J.95
                /* 13A0 */  0xE0, 0x86, 0xCE, 0x66, 0xF1, 0xEE, 0xEF, 0x59,  // ...f...Y
                /* 13A8 */  0xFB, 0x0E, 0xE0, 0x2B, 0x15, 0x30, 0xBB, 0x2F,  // ...+.0./
                /* 13B0 */  0x60, 0xAF, 0x54, 0xC0, 0x22, 0xD2, 0x3E, 0x35,  // `.T.".>5
                /* 13B8 */  0x57, 0x1E, 0xE2, 0x54, 0x46, 0x41, 0x3C, 0x31,  // W..TFA<1
                /* 13C0 */  0x5F, 0xC5, 0x81, 0xE7, 0x9D, 0x0A, 0x9C, 0xF7,  // _.......
                /* 13C8 */  0x12, 0x8F, 0x0B, 0xF7, 0x5E, 0xF0, 0x51, 0x01,  // ....^.Q.
                /* 13D0 */  0xE6, 0x6D, 0x1C, 0x18, 0xFC, 0xFF, 0xEF, 0x0B,  // .m......
                /* 13D8 */  0xBE, 0x7C, 0x01, 0xEF, 0xBB, 0x9B, 0x2F, 0x5F,  // .|..../_
                /* 13E0 */  0xE0, 0x3A, 0x04, 0xF8, 0xF2, 0x05, 0x5C, 0xAF,  // .:....\.
                /* 13E8 */  0x25, 0xEF, 0x4D, 0xE0, 0xB9, 0x94, 0xF0, 0xBB,  // %.M.....
                /* 13F0 */  0x30, 0x0C, 0xA4, 0x68, 0xEF, 0x06, 0x7C, 0x60,  // 0..h..|`
                /* 13F8 */  0xBE, 0x07, 0xF9, 0xD0, 0x61, 0x19, 0xD7, 0x14,  // ....a...
                /* 1400 */  0xD4, 0xF5, 0xCA, 0xD1, 0xD7, 0xA9, 0x63, 0x25,  // ......c%
                /* 1408 */  0x9B, 0x7D, 0xF4, 0xF8, 0x4F, 0x4F, 0xBE, 0xC8,  // .}..OO..
                /* 1410 */  0x04, 0x7E, 0x5E, 0xC0, 0x1F, 0x89, 0x7D, 0x24,  // .~^...}$
                /* 1418 */  0xF3, 0x8D, 0xCA, 0x04, 0x0E, 0x78, 0xCE, 0xA0,  // .....x..
                /* 1420 */  0x10, 0x8E, 0x46, 0xA1, 0x60, 0xC7, 0x0D, 0x54,  // ..F.`..T
                /* 1428 */  0x14, 0x38, 0x0A, 0xE2, 0xE3, 0x06, 0xBC, 0xFF,  // .8......
                /* 1430 */  0xFF, 0x71, 0x03, 0x38, 0x11, 0xF8, 0x14, 0x01,  // .q.8....
                /* 1438 */  0xBE, 0x60, 0xE3, 0x42, 0x1F, 0x15, 0x3C, 0x65,  // .`.B..<e
                /* 1440 */  0x70, 0xDD, 0x1E, 0x01, 0x6F, 0x12, 0xD6, 0xA3,  // p...o...
                /* 1448 */  0x13, 0x07, 0xB8, 0x0E, 0x27, 0x3E, 0x71, 0x00,  // ....'>q.
                /* 1450 */  0x97, 0xFF, 0xFF, 0x89, 0x03, 0x3E, 0xAA, 0x4F,  // .....>.O
                /* 1458 */  0xC1, 0xE0, 0x82, 0x7A, 0x3A, 0xE0, 0x30, 0x0F,  // ...z:.0.
                /* 1460 */  0x7B, 0xEC, 0xD2, 0x01, 0xE3, 0x2A, 0xC7, 0xAE,  // {....*..
                /* 1468 */  0x07, 0xEC, 0xCC, 0xE1, 0x44, 0xBF, 0x3A, 0x9D,  // ....D.:.
                /* 1470 */  0x39, 0x70, 0x29, 0x96, 0xAC, 0x6B, 0x18, 0x3B,  // 9p)..k.;
                /* 1478 */  0x73, 0x80, 0x4D, 0x2B, 0xB8, 0x2E, 0x5B, 0x5C,  // s.M+..[\
                /* 1480 */  0x25, 0x8C, 0x34, 0x92, 0xE8, 0xCC, 0xC1, 0x55,  // %.4....U
                /* 1488 */  0xDD, 0xB9, 0x28, 0x88, 0x6F, 0x7C, 0x8E, 0x02,  // ..(.o|..
                /* 1490 */  0x21, 0x25, 0x67, 0x0E, 0xF4, 0x40, 0xF0, 0x37,  // !%g..@.7
                /* 1498 */  0x65, 0x8F, 0xD3, 0x27, 0x62, 0x60, 0x78, 0x40,  // e..'b`x@
                /* 14A0 */  0x7C, 0x35, 0x4C, 0x30, 0x14, 0x84, 0x8C, 0x0C,  // |5L0....
                /* 14A8 */  0x99, 0x8E, 0xCA, 0x03, 0xF3, 0xA8, 0xF0, 0x04,  // ........
                /* 14B0 */  0x13, 0xDC, 0x1E, 0x3C, 0x27, 0xA8, 0x37, 0x0D,  // ...<'.7.
                /* 14B8 */  0xFC, 0x60, 0xDE, 0x27, 0x9E, 0xFD, 0x3C, 0x20,  // .`.'..< 
                /* 14C0 */  0x4F, 0x0D, 0xC6, 0xFF, 0x7F, 0x6A, 0x3E, 0x06,  // O....j>.
                /* 14C8 */  0xF1, 0xA9, 0x81, 0xE3, 0x1E, 0x79, 0x68, 0x6C,  // .....yhl
                /* 14D0 */  0xFC, 0xB8, 0xB3, 0x09, 0xF8, 0x0E, 0x01, 0x60,  // .......`
                /* 14D8 */  0xBD, 0x25, 0xF8, 0x10, 0x00, 0xB6, 0x2B, 0x1C,  // .%....+.
                /* 14E0 */  0xB0, 0xD8, 0xB7, 0x6F, 0x10, 0x3C, 0xF2, 0xDC,  // ...o.<..
                /* 14E8 */  0x29, 0x88, 0x07, 0xE5, 0x4B, 0x10, 0xF0, 0x84,  // )...K...
                /* 14F0 */  0xF2, 0xC5, 0x06, 0x58, 0xFD, 0xFF, 0x2F, 0x36,  // ...X../6
                /* 14F8 */  0xC0, 0x08, 0xD2, 0x17, 0x1B, 0xC0, 0xC9, 0x31,  // .......1
                /* 1500 */  0x9B, 0x5F, 0x6C, 0xC0, 0x29, 0xFB, 0x62, 0x83,  // ._l.).b.
                /* 1508 */  0x3A, 0x12, 0x58, 0xEC, 0x4A, 0x75, 0xD9, 0x61,  // :.X.Ju.a
                /* 1510 */  0x57, 0xD6, 0x37, 0x54, 0x36, 0x1B, 0x1F, 0xAC,  // W.7T6...
                /* 1518 */  0x7D, 0x50, 0xF3, 0xA8, 0xDF, 0x16, 0xD8, 0x60,  // }P.....`
                /* 1520 */  0x1F, 0x81, 0x71, 0xA2, 0xEE, 0x35, 0x28, 0x39,  // ..q..5(9
                /* 1528 */  0x30, 0x0A, 0x70, 0x8C, 0x40, 0x49, 0xBE, 0x9A,  // 0.p.@I..
                /* 1530 */  0x51, 0x10, 0x1F, 0x00, 0x7C, 0x28, 0x05, 0xA6,  // Q...|(..
                /* 1538 */  0xFF, 0xFF, 0x43, 0x29, 0x18, 0x92, 0xDC, 0x55,  // ..C)...U
                /* 1540 */  0xD0, 0x5A, 0x4E, 0x02, 0xE4, 0x92, 0xE7, 0xC3,  // .ZN.....
                /* 1548 */  0xDE, 0x81, 0x9E, 0xF8, 0x49, 0xBD, 0x00, 0x3F,  // ....I..?
                /* 1550 */  0x95, 0xB3, 0x49, 0x81, 0x75, 0xB8, 0x3E, 0xA6,  // ..I.u.>.
                /* 1558 */  0x00, 0xE7, 0x30, 0x07, 0x02, 0x94, 0xFC, 0x03,  // ..0.....
                /* 1560 */  0x01, 0x05, 0xF1, 0xD5, 0x0F, 0xB8, 0xDE, 0x47,  // .......G
                /* 1568 */  0xC1, 0x19, 0xE6, 0xDC, 0x80, 0x3E, 0x3A, 0xFB,  // .....>:.
                /* 1570 */  0x32, 0x01, 0x67, 0x58, 0x60, 0xF9, 0xFF, 0x1F,  // 2.gX`...
                /* 1578 */  0x66, 0xC0, 0x7C, 0x3A, 0xC7, 0x1F, 0x66, 0x80,  // f.|:..f.
                /* 1580 */  0xC7, 0x93, 0xC0, 0x87, 0x19, 0x70, 0x81, 0xFB,  // .....p..
                /* 1588 */  0x30, 0x03, 0x5C, 0x05, 0x5F, 0xFA, 0x40, 0x77,  // 0.\._.@w
                /* 1590 */  0x90, 0x67, 0x28, 0xBE, 0x18, 0xF8, 0xE4, 0xC2,  // .g(.....
                /* 1598 */  0x71, 0x4E, 0xEB, 0xE9, 0x80, 0xC3, 0x04, 0x7E,  // qN.....~
                /* 15A0 */  0x3B, 0x60, 0x47, 0x0E, 0x8B, 0xBF, 0xF3, 0xA1,  // ;`G.....
                /* 15A8 */  0xE5, 0x9E, 0x65, 0x20, 0xDF, 0x72, 0x3C, 0x1D,  // ..e .r<.
                /* 15B0 */  0x0F, 0xE0, 0x79, 0xC1, 0x77, 0x12, 0xDC, 0x61,  // ..y.w..a
                /* 15B8 */  0x06, 0x2C, 0xFF, 0xFF, 0xC3, 0x0C, 0xC0, 0xFF,  // .,......
                /* 15C0 */  0xFF, 0xFF, 0x61, 0x06, 0xAC, 0xB7, 0x09, 0x18,  // ..a.....
                /* 15C8 */  0x87, 0x19, 0xC0, 0x9C, 0x88, 0xC3, 0x0C, 0xE8,  // ........
                /* 15D0 */  0x4C, 0x1C, 0x66, 0x80, 0xEE, 0x4D, 0xC3, 0x87,  // L.f..M..
                /* 15D8 */  0x19, 0xE0, 0x00, 0xFD, 0x74, 0x80, 0xB9, 0xCC,  // ....t...
                /* 15E0 */  0xF8, 0x0A, 0xC2, 0xFE, 0xFF, 0x50, 0xBE, 0x73,  // .....P.s
                /* 15E8 */  0x98, 0x60, 0xBC, 0x77, 0x83, 0x8E, 0x33, 0x7C,  // .`.w..3|
                /* 15F0 */  0x28, 0xBE, 0xC6, 0x7B, 0x14, 0x6C, 0xFC, 0xEF,  // (..{.l..
                /* 15F8 */  0x7D, 0x46, 0xF1, 0x01, 0x20, 0xFE, 0xFB, 0x80,  // }F.. ...
                /* 1600 */  0x43, 0xDD, 0xE6, 0x51, 0x71, 0x28, 0x74, 0xCE,  // C..Qq(t.
                /* 1608 */  0x00, 0x1C, 0xDC, 0xE6, 0xC1, 0x79, 0xCE, 0x80,  // .....y..
                /* 1610 */  0x33, 0x57, 0x18, 0xF7, 0x78, 0x60, 0x78, 0xCE,  // 3W..x`x.
                /* 1618 */  0x00, 0x5E, 0xA1, 0x21, 0x74, 0xCE, 0x80, 0xFD,  // .^.!t...
                /* 1620 */  0xFF, 0x3F, 0x67, 0x60, 0x55, 0x9C, 0x33, 0x80,  // .?g`U.3.
                /* 1628 */  0xAE, 0xC8, 0x73, 0x06, 0xE8, 0x8E, 0xA6, 0x0C,  // ..s.....
                /* 1630 */  0x86, 0x5D, 0x4C, 0x3D, 0xF7, 0xE7, 0x0B, 0x26,  // .]L=...&
                /* 1638 */  0xF4, 0xF4, 0x85, 0x1A, 0x82, 0xA5, 0x5E, 0xE0,  // ......^.
                /* 1640 */  0x11, 0x77, 0x04, 0x18, 0xF2, 0x8E, 0x5D, 0x28,  // .w....](
                /* 1648 */  0x61, 0x30, 0x92, 0x75, 0x73, 0x47, 0x09, 0xB9,  // a0.usG..
                /* 1650 */  0xB9, 0x53, 0x10, 0xDF, 0xDC, 0x01, 0xCB, 0xFF,  // .S......
                /* 1658 */  0xFF, 0x9B, 0x3B, 0x30, 0xCB, 0x71, 0x0E, 0x41,  // ..;0.q.A
                /* 1660 */  0x0F, 0xCD, 0x77, 0x02, 0x18, 0x67, 0x76, 0x60,  // ..w..gv`
                /* 1668 */  0x76, 0x0A, 0xC1, 0x9E, 0xD9, 0x01, 0x5E, 0xFC,  // v.....^.
                /* 1670 */  0xFF, 0x0F, 0x31, 0xC0, 0x6E, 0x9C, 0x3E, 0xC4,  // ..1.n.>.
                /* 1678 */  0x00, 0x4E, 0xCE, 0xEC, 0xFC, 0x10, 0x03, 0x2F,  // .N...../
                /* 1680 */  0xE9, 0x3A, 0x75, 0x88, 0xE1, 0x1C, 0xCE, 0xF9,  // .:u.....
                /* 1688 */  0x50, 0xD0, 0xD4, 0xC3, 0x1F, 0x93, 0x6F, 0xA4,  // P.....o.
                /* 1690 */  0x27, 0xD8, 0xE7, 0x04, 0x34, 0x0E, 0x6B, 0x46,  // '...4.kF
                /* 1698 */  0xD2, 0x59, 0xE0, 0x18, 0x9F, 0x0E, 0x9C, 0xEB,  // .Y......
                /* 16A0 */  0xFC, 0x42, 0xCF, 0x0C, 0x4E, 0x44, 0xA1, 0x3C,  // .B..ND.<
                /* 16A8 */  0x67, 0x07, 0x54, 0x82, 0x53, 0x17, 0x05, 0xF1,  // g.T.S...
                /* 16B0 */  0xF0, 0x7D, 0x8C, 0x01, 0x4C, 0xFC, 0xFF, 0x8F,  // .}..L...
                /* 16B8 */  0x31, 0x80, 0xB1, 0x2B, 0x0A, 0x60, 0xF2, 0x4E,  // 1..+.`.N
                /* 16C0 */  0x0A, 0xCE, 0x2B, 0x0A, 0xF0, 0x08, 0x7E, 0x45,  // ..+...~E
                /* 16C8 */  0xA1, 0xFF, 0xFF, 0x2B, 0x0A, 0x78, 0x6C, 0x5C,  // ...+.xl\
                /* 16D0 */  0x51, 0x80, 0xEE, 0x00, 0x5F, 0x51, 0xC0, 0x72,  // Q..._Q.r
                /* 16D8 */  0x2B, 0xE1, 0x83, 0x78, 0x2C, 0xE1, 0xC7, 0x4D,  // +..x,..M
                /* 16E0 */  0x76, 0x2D, 0xC1, 0x5C, 0x52, 0x58, 0xEC, 0x7B,  // v-.\RX.{
                /* 16E8 */  0x26, 0x8A, 0xC3, 0xA1, 0xEF, 0x99, 0x88, 0x5B,  // &......[
                /* 16F0 */  0x38, 0x3F, 0xB5, 0xD8, 0x38, 0xB4, 0xA6, 0xE8,  // 8?..8...
                /* 16F8 */  0xCB, 0xA7, 0x09, 0x86, 0xBC, 0x69, 0xA2, 0xE2,  // .....i..
                /* 1700 */  0x51, 0x28, 0xDC, 0xE9, 0x01, 0x75, 0xDB, 0xF4,  // Q(...u..
                /* 1708 */  0x7D, 0x93, 0xDF, 0x34, 0x01, 0x3F, 0xE1, 0xAE,  // }..4.?..
                /* 1710 */  0x29, 0xE8, 0x71, 0x78, 0xB6, 0xFC, 0xFF, 0x8F,  // ).qx....
                /* 1718 */  0xFC, 0x12, 0xE0, 0x7B, 0x8A, 0xEF, 0x03, 0x36,  // ...{...6
                /* 1720 */  0x0F, 0x49, 0x42, 0x9C, 0x54, 0xE8, 0xC0, 0xC0,  // .IB.T...
                /* 1728 */  0x75, 0x54, 0xC1, 0x5D, 0x39, 0xE1, 0x5E, 0x55,  // uT.]9.^U
                /* 1730 */  0xC0, 0x75, 0xD6, 0x00, 0xDE, 0x63, 0xF1, 0x59,  // .u...c.Y
                /* 1738 */  0x03, 0x70, 0x72, 0x51, 0x86, 0x71, 0xBE, 0xF2,  // .prQ.q..
                /* 1740 */  0xE9, 0x02, 0x77, 0xD6, 0x60, 0x09, 0xEE, 0x9C,  // ..w.`...
                /* 1748 */  0x28, 0x0E, 0xEB, 0xBF, 0x73, 0x22, 0xCE, 0x1A,  // (...s"..
                /* 1750 */  0x30, 0xFE, 0xFF, 0x67, 0x0D, 0xAE, 0xF7, 0xD6,  // 0..g....
                /* 1758 */  0x89, 0x52, 0x0A, 0x23, 0x9D, 0xB7, 0x4E, 0x94,  // .R.#..N.
                /* 1760 */  0xB2, 0x6B, 0x16, 0x05, 0xF1, 0xAD, 0x13, 0xE0,  // .k......
                /* 1768 */  0x4F, 0xB0, 0xA1, 0xA1, 0x67, 0xE1, 0x33, 0x09,  // O...g.3.
                /* 1770 */  0xCC, 0xC1, 0x01, 0xA3, 0x83, 0x82, 0x07, 0x87,  // ........
                /* 1778 */  0xFB, 0xFF, 0xDF, 0xC5, 0x00, 0xD3, 0xC7, 0x4F,  // .......O
                /* 1780 */  0xE0, 0x7E, 0xA1, 0x01, 0x9F, 0x91, 0x0B, 0x0D,  // .~......
                /* 1788 */  0x10, 0xFD, 0xFF, 0x5F, 0x68, 0xC0, 0x76, 0xFC,  // ..._h.v.
                /* 1790 */  0xE4, 0x17, 0x1A, 0xF8, 0x81, 0x0F, 0xA0, 0x28,  // .......(
                /* 1798 */  0x51, 0x10, 0x8A, 0xF9, 0x54, 0xD0, 0xFD, 0x86,  // Q...T...
                /* 17A0 */  0x4D, 0xC3, 0xDA, 0x07, 0x21, 0x58, 0xCF, 0xE6,  // M...!X..
                /* 17A8 */  0x59, 0xC3, 0x77, 0x1A, 0x9F, 0x47, 0x3D, 0x27,  // Y.w..G='
                /* 17B0 */  0x46, 0x30, 0xD2, 0x11, 0x14, 0x15, 0x86, 0x42,  // F0.....B
                /* 17B8 */  0xE1, 0x8F, 0x03, 0x14, 0xCE, 0x71, 0xCF, 0x0F,  // .....q..
                /* 17C0 */  0x14, 0xC4, 0x80, 0xCE, 0x72, 0x7E, 0x40, 0x9F,  // ....r~@.
                /* 17C8 */  0x36, 0x3C, 0x11, 0xDC, 0x99, 0xE0, 0x0D, 0xE4,  // 6<......
                /* 17D0 */  0x00, 0x83, 0x3C, 0x31, 0xB0, 0x33, 0x0D, 0x30,  // ..<1.3.0
                /* 17D8 */  0x3C, 0x3E, 0xB0, 0xD3, 0x07, 0xB0, 0xB8, 0xC6,  // <>......
                /* 17E0 */  0x79, 0xB8, 0x3C, 0xC0, 0x5D, 0x8E, 0x82, 0xF8,  // y.<.]...
                /* 17E8 */  0x2E, 0x07, 0x6C, 0xFE, 0xFF, 0xA7, 0x0F, 0xD8,  // ..l.....
                /* 17F0 */  0xA3, 0xF1, 0xE9, 0x03, 0x7C, 0xE3, 0x82, 0x73,  // ....|..s
                /* 17F8 */  0x2A, 0xC0, 0xDD, 0x15, 0x70, 0xF7, 0x4F, 0xC0,  // *...p.O.
                /* 1800 */  0xDB, 0xB2, 0x7D, 0x48, 0x01, 0xD7, 0x9D, 0xCA,  // ..}H....
                /* 1808 */  0x87, 0x14, 0xE0, 0x2A, 0xF8, 0x12, 0x07, 0xA2,  // ...*....
                /* 1810 */  0xFF, 0xFF, 0x21, 0x85, 0x9D, 0x1D, 0x7C, 0x30,  // ..!...|0
                /* 1818 */  0xE0, 0xB7, 0x6E, 0xC3, 0xBD, 0x84, 0x1A, 0xF5,  // ..n.....
                /* 1820 */  0xC1, 0x84, 0xDD, 0x54, 0x7C, 0x3A, 0xE0, 0x07,  // ...T|:..
                /* 1828 */  0x15, 0x96, 0x68, 0xBD, 0x3A, 0xA8, 0xE0, 0x72,  // ..h.:..r
                /* 1830 */  0xBC, 0xAC, 0x74, 0x6E, 0x61, 0x07, 0x15, 0x30,  // ..tna..0
                /* 1838 */  0x68, 0x86, 0xD5, 0x41, 0x85, 0xAB, 0x85, 0x91,  // h..A....
                /* 1840 */  0xD6, 0x07, 0x80, 0x8E, 0x1A, 0x5C, 0xDD, 0x8D,  // .....\..
                /* 1848 */  0x8E, 0x82, 0xF8, 0x42, 0xE2, 0xAB, 0x1C, 0xC0,  // ...B....
                /* 1850 */  0x9D, 0x1C, 0xE3, 0x47, 0xC3, 0xF8, 0xE4, 0xE2,  // ...G....
                /* 1858 */  0xCB, 0x91, 0x47, 0xF6, 0x64, 0xF0, 0x2E, 0xC1,  // ..G.d...
                /* 1860 */  0xFE, 0xFF, 0xB3, 0x07, 0xEB, 0xF9, 0xC0, 0xB3,  // ........
                /* 1868 */  0x07, 0xDB, 0xD5, 0x08, 0x38, 0x22, 0xF9, 0x6A,  // ....8".j
                /* 1870 */  0x04, 0xB6, 0x83, 0x84, 0xCF, 0x36, 0xE0, 0x19,  // .....6..
                /* 1878 */  0x15, 0x58, 0x4F, 0x0C, 0xBE, 0x3F, 0x01, 0xE7,  // .XO..?..
                /* 1880 */  0xCB, 0x20, 0x78, 0xFE, 0xFF, 0xF7, 0x27, 0xE0,  // . x...'.
                /* 1888 */  0x76, 0xF1, 0xF1, 0xC5, 0x08, 0xF0, 0x34, 0x68,  // v.....4h
                /* 1890 */  0x5F, 0x8C, 0x00, 0x27, 0x97, 0x41, 0x7E, 0x31,  // _..'.A~1
                /* 1898 */  0x02, 0x5F, 0xA0, 0xC3, 0x3E, 0xEA, 0x08, 0xE0,  // ._..>...
                /* 18A0 */  0x60, 0x87, 0x7D, 0x84, 0x55, 0x04, 0x5D, 0x0C,  // `.}.U.].
                /* 18A8 */  0x58, 0x20, 0x28, 0xFD, 0xFF, 0x0F, 0xFA, 0x3C,  // X (....<
                /* 18B0 */  0x0A, 0x85, 0x82, 0x9C, 0x1E, 0x50, 0xD2, 0xE1,  // .....P..
                /* 18B8 */  0x28, 0x88, 0x0F, 0xFA, 0x80, 0x9F, 0x20, 0xC0,  // (..... .
                /* 18C0 */  0xA8, 0x71, 0xF9, 0x30, 0xE0, 0x99, 0x62, 0x2E,  // .q.0..b.
                /* 18C8 */  0x7C, 0xC0, 0xF0, 0x3C, 0xE0, 0xE3, 0x81, 0x47,  // |..<...G
                /* 18D0 */  0xD5, 0xF3, 0x09, 0x03, 0xC8, 0xDC, 0x34, 0x7D,  // ......4}
                /* 18D8 */  0xC2, 0x00, 0x97, 0x94, 0x13, 0x06, 0x28, 0xFF,  // ......(.
                /* 18E0 */  0xFF, 0x27, 0x0C, 0x70, 0xCB, 0xBB, 0xC9, 0x81,  // .'.p....
                /* 18E8 */  0xEE, 0x54, 0xC0, 0x2F, 0x16, 0x96, 0x76, 0xB2,  // .T./..v.
                /* 18F0 */  0x47, 0x8D, 0xDC, 0x12, 0x4F, 0xF6, 0x88, 0xEB,  // G...O...
                /* 18F8 */  0x01, 0x46, 0xDA, 0xA9, 0x1E, 0x25, 0x0A, 0x46,  // .F...%.F
                /* 1900 */  0x92, 0x4E, 0xF5, 0x28, 0x11, 0x37, 0x57, 0x0A,  // .N.(.7W.
                /* 1908 */  0xE2, 0x53, 0x3D, 0xC0, 0x9D, 0xFF, 0xFF, 0xD5,  // .S=.....
                /* 1910 */  0xCD, 0x19, 0x0E, 0x20, 0x68, 0x15, 0x07, 0x10,  // ... h...
                /* 1918 */  0xE4, 0xC5, 0x0D, 0x98, 0x1D, 0x3F, 0xB0, 0x57,  // .....?.W
                /* 1920 */  0x79, 0x80, 0x45, 0xA7, 0x17, 0xF0, 0xFD, 0xFF,  // y.E.....
                /* 1928 */  0xAD, 0x9C, 0x5E, 0x00, 0x2D, 0xC7, 0x2D, 0x7E,  // ..^.-.-~
                /* 1930 */  0x7A, 0xC1, 0x45, 0x3D, 0x65, 0xA1, 0x38, 0x1C,  // z.E=e.8.
                /* 1938 */  0xF4, 0x94, 0x85, 0xC0, 0xF5, 0x04, 0x3C, 0xA5,  // ......<.
                /* 1940 */  0xB3, 0xAB, 0xF3, 0x1C, 0xA0, 0xE1, 0xBD, 0xD8,  // ........
                /* 1948 */  0x47, 0xF2, 0x71, 0x8B, 0x9D, 0xB4, 0x78, 0x24,  // G.q...x$
                /* 1950 */  0x0A, 0x9D, 0xB6, 0x7C, 0x70, 0xE0, 0x11, 0xE0,  // ...|p...
                /* 1958 */  0x28, 0x88, 0x4F, 0x5A, 0x80, 0x9F, 0x40, 0x27,  // (.OZ..@'
                /* 1960 */  0x13, 0xF4, 0x38, 0x3C, 0x5B, 0x98, 0x03, 0x03,  // ..8<[...
                /* 1968 */  0xD3, 0xFF, 0xFF, 0xB4, 0x05, 0xF8, 0x08, 0x7E,  // .......~
                /* 1970 */  0xC0, 0x00, 0x9D, 0x96, 0x03, 0x06, 0xD0, 0x1D,  // ........
                /* 1978 */  0xE0, 0xD3, 0x16, 0xD8, 0x4E, 0x06, 0x38, 0x9C,  // ....N.8.
                /* 1980 */  0x37, 0x03, 0xDC, 0xD1, 0x90, 0x89, 0x3E, 0x72,  // 7.....>r
                /* 1988 */  0xA1, 0x38, 0x2C, 0xF9, 0xC8, 0x85, 0xB8, 0x27,  // .8,....'
                /* 1990 */  0xC0, 0x3C, 0x7B, 0xF9, 0xD8, 0xC5, 0xC5, 0xC1,  // .<{.....
                /* 1998 */  0x48, 0xDA, 0xB1, 0x0B, 0x25, 0xE6, 0xD8, 0x45,  // H...%..E
                /* 19A0 */  0x41, 0x7C, 0xEC, 0x02, 0xC7, 0xFF, 0xFF, 0xD8,  // A|......
                /* 19A8 */  0x05, 0x70, 0xE3, 0x74, 0xED, 0xD3, 0x08, 0x6E,  // .p.t...n
                /* 19B0 */  0x16, 0xBE, 0x15, 0xC0, 0x3C, 0x7A, 0x01, 0xD6,  // ....<z..
                /* 19B8 */  0xFE, 0xFF, 0x47, 0x2F, 0xC0, 0xFB, 0x51, 0x06,  // ..G/..Q.
                /* 19C0 */  0x7C, 0x5E, 0x8E, 0x32, 0x80, 0x96, 0xA3, 0x17,  // |^.2....
                /* 19C8 */  0x3F, 0xCA, 0xC0, 0x3F, 0x7F, 0xC1, 0xFB, 0xFF,  // ?..?....
                /* 19D0 */  0xC3, 0x9F, 0x4A, 0x85, 0x43, 0x17, 0x46, 0x9F,  // ..J.C.F.
                /* 19D8 */  0x07, 0x00, 0x72, 0x83, 0x66, 0xF8, 0xC7, 0xF2,  // ..r.f...
                /* 19E0 */  0xFC, 0x05, 0xD8, 0x1C, 0x17, 0x6E, 0x1C, 0x9E,  // .....n..
                /* 19E8 */  0x2D, 0xCC, 0xF3, 0x17, 0x30, 0x3C, 0x65, 0x00,  // -...0<e.
                /* 19F0 */  0x1E, 0xE0, 0xFC, 0xFF, 0x3F, 0x7F, 0x01, 0x6E,  // ....?..n
                /* 19F8 */  0x4E, 0x06, 0x0C, 0xC4, 0x37, 0x03, 0x9F, 0xF4,  // N...7...
                /* 1A00 */  0x31, 0x47, 0x03, 0xDF, 0x32, 0x2C, 0x64, 0xAD,  // 1G..2,d.
                /* 1A08 */  0x3A, 0x65, 0xE0, 0x64, 0xFC, 0x9D, 0x74, 0xE8,  // :e.d..t.
                /* 1A10 */  0x60, 0xF7, 0x04, 0x98, 0xB1, 0xCF, 0x5F, 0xA8,  // `....._.
                /* 1A18 */  0xC0, 0xE7, 0x2F, 0x80, 0x02, 0xFF, 0xFF, 0xF3,  // ../.....
                /* 1A20 */  0x17, 0x70, 0x1B, 0x3F, 0x6E, 0x16, 0xBE, 0x15,  // .p.?n...
                /* 1A28 */  0xC0, 0x3C, 0x7F, 0x01, 0xB3, 0xF9, 0x63, 0xCF,  // .<....c.
                /* 1A30 */  0x5F, 0xC0, 0x22, 0xD4, 0x91, 0x07, 0x15, 0xE3,  // _.".....
                /* 1A38 */  0xC8, 0x43, 0x41, 0x7C, 0xE4, 0x01, 0xAE, 0xE7,  // .CA|....
                /* 1A40 */  0x2F, 0x70, 0x9E, 0x1F, 0x3C, 0x2E, 0x9C, 0x24,  // /p..<..$
                /* 1A48 */  0x10, 0xFD, 0xFF, 0xCF, 0x0F, 0x78, 0xF0, 0xE2,  // .....x..
                /* 1A50 */  0xB1, 0x75, 0x15, 0xF1, 0x31, 0xC3, 0xE7, 0x92,  // .u..1...
                /* 1A58 */  0x53, 0xF3, 0xD0, 0xC0, 0x7D, 0xA3, 0xF0, 0xA1,  // S...}...
                /* 1A60 */  0x07, 0xF0, 0x64, 0xE6, 0xA4, 0x06, 0xE8, 0x39,  // ..d....9
                /* 1A68 */  0xF4, 0xC0, 0x5F, 0xA9, 0x0F, 0x3D, 0xFC, 0x50,  // .._..=.P
                /* 1A70 */  0xE0, 0xD0, 0x27, 0x35, 0x48, 0x33, 0x09, 0x6D,  // ..'5H3.m
                /* 1A78 */  0x88, 0x04, 0x63, 0x02, 0xEA, 0xFF, 0x7F, 0x50,  // ..c....P
                /* 1A80 */  0xE3, 0x01, 0x29, 0x14, 0xEF, 0x98, 0x81, 0x3A,  // ..)....:
                /* 1A88 */  0xAB, 0x19, 0xCC, 0x20, 0x3E, 0xA8, 0x01, 0x7E,  // ... >..~
                /* 1A90 */  0xE2, 0x9D, 0x7A, 0xD0, 0x2C, 0xC6, 0x3D, 0xAB,  // ..z.,.=.
                /* 1A98 */  0x23, 0x8D, 0x79, 0xDA, 0x35, 0xDF, 0xF8, 0xC8,  // #.y.5...
                /* 1AA0 */  0xB9, 0xC0, 0x03, 0x3B, 0x5E, 0x4C, 0x88, 0x73,  // ...;^L.s
                /* 1AA8 */  0x05, 0x1D, 0x19, 0xB8, 0x6E, 0x3E, 0x1C, 0xC6,  // ....n>..
                /* 1AB0 */  0x07, 0x36, 0xB8, 0x47, 0x1F, 0x70, 0x9D, 0x35,  // .6.G.p.5
                /* 1AB8 */  0x80, 0x87, 0x84, 0xE5, 0xE8, 0xAC, 0x01, 0xAE,  // ........
                /* 1AC0 */  0x4B, 0x90, 0x61, 0xFD, 0xFF, 0x3F, 0x6B, 0x00,  // K.a..?k.
                /* 1AC8 */  0x4F, 0x54, 0x9F, 0xD7, 0xC0, 0x7D, 0xE1, 0xF5,  // OT...}..
                /* 1AD0 */  0x21, 0x01, 0x06, 0x58, 0x88, 0x97, 0x04, 0x76,  // !..X...v
                /* 1AD8 */  0xE0, 0xB0, 0xDC, 0x03, 0x07, 0x5A, 0xE2, 0xC3,  // .....Z..
                /* 1AE0 */  0x49, 0x87, 0x36, 0x18, 0x27, 0x06, 0x8C, 0xA8,  // I.6.'...
                /* 1AE8 */  0xC3, 0x1A, 0x3D, 0x42, 0x59, 0x0E, 0x85, 0xC4,  // ..=BY...
                /* 1AF0 */  0x1C, 0x38, 0x50, 0xF1, 0xCF, 0x08, 0x14, 0xC4,  // .8P.....
                /* 1AF8 */  0x80, 0xCE, 0x76, 0x92, 0x00, 0xE5, 0x8D, 0x0C,  // ..v.....
                /* 1B00 */  0xBC, 0x30, 0x3E, 0xBC, 0xC1, 0xBC, 0x47, 0x80,  // .0>...G.
                /* 1B08 */  0xEB, 0xB0, 0x05, 0x86, 0xFF, 0xFF, 0xD9, 0x19,  // ........
                /* 1B10 */  0xF0, 0x74, 0x0C, 0x05, 0xEE, 0xE7, 0x10, 0xF0,  // .t......
                /* 1B18 */  0xB9, 0x39, 0x87, 0x00, 0x5A, 0x8E, 0x50, 0x70,  // .9..Z.Pp
                /* 1B20 */  0xFE, 0xFF, 0xE7, 0x10, 0xF0, 0x44, 0xFD, 0x44,  // .....D.D
                /* 1B28 */  0x27, 0x20, 0x71, 0xC6, 0x2C, 0xB1, 0x2B, 0xA6,  // ' q.,.+.
                /* 1B30 */  0x30, 0x3E, 0x57, 0xF8, 0x90, 0x80, 0x1F, 0xF6,  // 0>W.....
                /* 1B38 */  0x51, 0x1F, 0xEC, 0x71, 0xB1, 0x93, 0x9C, 0xE1,  // Q..q....
                /* 1B40 */  0xF8, 0x89, 0xC0, 0xE3, 0x6A, 0x7E, 0x2A, 0x1A,  // ....j~*.
                /* 1B48 */  0xC5, 0xE9, 0x7B, 0x62, 0x21, 0x99, 0xB4, 0x01,  // ..{b!...
                /* 1B50 */  0xA2, 0xA4, 0x9C, 0xEA, 0xC8, 0x84, 0x4E, 0xAE,  // ......N.
                /* 1B58 */  0x76, 0x44, 0x5D, 0x1F, 0x0C, 0x93, 0xC0, 0x67,  // vD]....g
                /* 1B60 */  0x01, 0x86, 0xC6, 0xA1, 0xB1, 0xC3, 0xF0, 0x25,  // .......%
                /* 1B68 */  0x21, 0xD8, 0x41, 0xBC, 0x6F, 0xFB, 0x2C, 0xC1,  // !.A.o.,.
                /* 1B70 */  0x26, 0x74, 0xAE, 0xE5, 0x5E, 0x1E, 0x74, 0xC7,  // &t..^.t.
                /* 1B78 */  0x8B, 0x1A, 0xA3, 0x39, 0x28, 0x12, 0x60, 0xE8,  // ...9(.`.
                /* 1B80 */  0xA0, 0x39, 0x38, 0x9C, 0xC1, 0x5B, 0x1F, 0x1B,  // .98..[..
                /* 1B88 */  0xF1, 0x73, 0x98, 0xE7, 0xCC, 0x00, 0xE3, 0xC5,  // .s......
                /* 1B90 */  0x78, 0xB0, 0x39, 0x3E, 0x06, 0xDA, 0x33, 0x8E,  // x.9>..3.
                /* 1B98 */  0x34, 0x02, 0xEA, 0xE6, 0x67, 0x78, 0x7E, 0x5B,  // 4...gx~[
                /* 1BA0 */  0x08, 0x55, 0xEB, 0xE8, 0x08, 0x76, 0x24, 0x06,  // .U...v$.
                /* 1BA8 */  0xF4, 0x4C, 0xF1, 0x00, 0xF0, 0x3C, 0xF9, 0x54,  // .L...<.T
                /* 1BB0 */  0x91, 0xE0, 0x2C, 0x0E, 0x08, 0x73, 0x44, 0xF0,  // ..,..sD.
                /* 1BB8 */  0x04, 0x5E, 0x2E, 0x7C, 0x54, 0x60, 0xEE, 0x05,  // .^.|T`..
                /* 1BC0 */  0x78, 0x3B, 0x13, 0x68, 0x6C, 0x47, 0x15, 0xE1,  // x;.hlG..
                /* 1BC8 */  0x2C, 0x9E, 0x28, 0xE2, 0xB4, 0x25, 0xC0, 0xDA,  // ,.(..%..
                /* 1BD0 */  0xD1, 0x40, 0x10, 0x81, 0xA2, 0x1C, 0xA1, 0x61,  // .@.....a
                /* 1BD8 */  0x62, 0x44, 0x79, 0x4B, 0x89, 0x74, 0x8E, 0x21,  // bDyK.t.!
                /* 1BE0 */  0x42, 0x19, 0xCB, 0x40, 0x61, 0x63, 0x9C, 0x5C,  // B..@ac.\
                /* 1BE8 */  0x84, 0xC8, 0xC1, 0x83, 0x9D, 0x4A, 0xFB, 0xA7,  // .....J..
                /* 1BF0 */  0x2E, 0x76, 0x2E, 0xD0, 0x79, 0xC6, 0x91, 0x46,  // .v..y..F
                /* 1BF8 */  0x83, 0x3A, 0x6F, 0xF3, 0x73, 0xC1, 0xB3, 0x82,  // .:o.s...
                /* 1C00 */  0xAF, 0x09, 0x06, 0xF9, 0xFF, 0xBF, 0x28, 0xFA,  // ......(.
                /* 1C08 */  0x9B, 0x70, 0x94, 0x1E, 0x3E, 0x3B, 0x92, 0xF8,  // .p..>;..
                /* 1C10 */  0x64, 0x02, 0xC7, 0x35, 0xA0, 0xAE, 0x07, 0x0F,  // d..5....
                /* 1C18 */  0x17, 0x60, 0x39, 0x9A, 0xC0, 0x1F, 0x8F, 0x4F,  // .`9....O
                /* 1C20 */  0x03, 0x3E, 0x01, 0x98, 0xC0, 0xF2, 0x07, 0x81,  // .>......
                /* 1C28 */  0x1A, 0x99, 0xA1, 0x3D, 0xE6, 0xB7, 0x00, 0x76,  // ...=...v
                /* 1C30 */  0x56, 0x38, 0x2C, 0x76, 0xEC, 0xF1, 0x61, 0xC6,  // V8,v..a.
                /* 1C38 */  0xE3, 0x01, 0xFF, 0xA9, 0xFF, 0xAD, 0x20, 0xC2,  // ...... .
                /* 1C40 */  0x9B, 0x83, 0xE7, 0xEB, 0xE3, 0x83, 0x4F, 0x2E,  // ......O.
                /* 1C48 */  0x60, 0x18, 0x93, 0x4F, 0x09, 0x3E, 0x2F, 0xE0,  // `..O.>/.
                /* 1C50 */  0xAE, 0x0B, 0x78, 0x02, 0x8B, 0x3C, 0x48, 0xA0,  // ..x..<H.
                /* 1C58 */  0xC7, 0xC0, 0x0F, 0x02, 0xCF, 0x31, 0x6C, 0x0C,  // .....1l.
                /* 1C60 */  0xAF, 0x32, 0x9E, 0xC6, 0x21, 0xF9, 0x88, 0x61,  // .2..!..a
                /* 1C68 */  0x84, 0xF8, 0x4F, 0x16, 0x4F, 0x1A, 0x3E, 0x8E,  // ..O.O.>.
                /* 1C70 */  0x9C, 0xC6, 0x41, 0x9C, 0xD5, 0xFB, 0x80, 0xEF,  // ..A.....
                /* 1C78 */  0xBC, 0x72, 0x09, 0xD1, 0x0B, 0x88, 0x54, 0x1E,  // .r....T.
                /* 1C80 */  0xB2, 0x50, 0x47, 0x10, 0xEB, 0x39, 0x64, 0x21,  // .PG..9d!
                /* 1C88 */  0xA6, 0x84, 0x3B, 0x75, 0xB0, 0x09, 0xC4, 0x79,  // ..;u...y
                /* 1C90 */  0xDE, 0xE0, 0xE9, 0xCF, 0x87, 0x74, 0xF0, 0xCE,  // .....t..
                /* 1C98 */  0x4D, 0xA2, 0xDC, 0x63, 0xA2, 0x70, 0x4E, 0x7A,  // M..c.pNz
                /* 1CA0 */  0x06, 0xA2, 0x20, 0x06, 0xF4, 0xFF, 0x3F, 0x06,  // .. ...?.
                /* 1CA8 */  0x84, 0xAC, 0x9C, 0x07, 0xD0, 0xA3, 0x38, 0x8E,  // ......8.
                /* 1CB0 */  0x27, 0x07, 0x9F, 0x3A, 0x1E, 0x8B, 0xD8, 0x39,  // '..:...9
                /* 1CB8 */  0x1B, 0x18, 0xDE, 0x2E, 0x1E, 0x52, 0x7C, 0xB7,  // .....R|.
                /* 1CC0 */  0x02, 0x16, 0x97, 0x33, 0xCF, 0x95, 0x07, 0x9E,  // ...3....
                /* 1CC8 */  0x2B, 0x05, 0xF1, 0x5C, 0x1D, 0xE6, 0x6E, 0x85,  // +..\..n.
                /* 1CD0 */  0xBE, 0xCB, 0x78, 0xAE, 0x3E, 0xF2, 0x9C, 0xAA,  // ..x.>...
                /* 1CD8 */  0x07, 0xCB, 0xAF, 0x56, 0x80, 0xB9, 0x0B, 0x9E,  // ...V....
                /* 1CE0 */  0xAF, 0x56, 0xE0, 0xE2, 0xFD, 0xFF, 0xBF, 0x5A,  // .V.....Z
                /* 1CE8 */  0x01, 0xDB, 0x3B, 0xD1, 0xAB, 0x15, 0xD8, 0xAE,  // ..;.....
                /* 1CF0 */  0x23, 0xFC, 0x38, 0x84, 0x3F, 0x6D, 0x60, 0x81,  // #.8.?m`.
                /* 1CF8 */  0xDE, 0xE4, 0x8C, 0x16, 0xC8, 0xA7, 0x20, 0xDF,  // ...... .
                /* 1D00 */  0xB1, 0x3C, 0x06, 0x7E, 0xEC, 0x25, 0x18, 0xAF,  // .<.~.%..
                /* 1D08 */  0x8D, 0x68, 0x2D, 0x57, 0x10, 0x48, 0x67, 0x81,  // .h-W.Hg.
                /* 1D10 */  0x97, 0x80, 0x27, 0x04, 0x76, 0x01, 0x01, 0x4C,  // ..'.v..L
                /* 1D18 */  0xFF, 0xFF, 0x2F, 0x20, 0x00, 0x1F, 0xCE, 0x8A,  // ../ ....
                /* 1D20 */  0xE0, 0x1B, 0xB5, 0xCF, 0x8A, 0x80, 0x9B, 0x0B,  // ........
                /* 1D28 */  0x08, 0xBC, 0xB3, 0x06, 0x03, 0xF9, 0xFF, 0xBF,  // ........
                /* 1D30 */  0xC5, 0xC5, 0x3B, 0xC8, 0x68, 0xEF, 0x82, 0x46,  // ..;.h..F
                /* 1D38 */  0x0F, 0xFA, 0x30, 0xE1, 0xE3, 0x14, 0x9C, 0x63,  // ..0....c
                /* 1D40 */  0x31, 0x3B, 0x4E, 0x01, 0x9B, 0x23, 0x04, 0xEE,  // 1;N..#..
                /* 1D48 */  0xF6, 0x01, 0xAC, 0xEF, 0x0F, 0xEC, 0xF6, 0x01,  // ........
                /* 1D50 */  0x2C, 0x4F, 0x2E, 0xB8, 0xDB, 0x07, 0xF0, 0xBF,  // ,O......
                /* 1D58 */  0xBB, 0xB0, 0xDB, 0x87, 0xFF, 0xFF, 0xC7, 0x29,  // .......)
                /* 1D60 */  0x60, 0x0D, 0xE9, 0xE3, 0x14, 0xE0, 0xE4, 0x3E,  // `......>
                /* 1D68 */  0xCF, 0x8F, 0x53, 0xC0, 0xED, 0x0A, 0x02, 0xE3,  // ..S.....
                /* 1D70 */  0x38, 0x05, 0xE6, 0x0B, 0x08, 0x30, 0xF8, 0xFF,  // 8....0..
                /* 1D78 */  0x5F, 0x40, 0x00, 0x1E, 0x1E, 0xA7, 0xC0, 0x77,  // _@.....w
                /* 1D80 */  0x4E, 0xF6, 0x05, 0x04, 0x38, 0xFC, 0xFF, 0x8F,  // N...8...
                /* 1D88 */  0x53, 0xC0, 0xE7, 0x02, 0x02, 0xFF, 0x38, 0x05,  // S.....8.
                /* 1D90 */  0x57, 0xE1, 0x71, 0x0A, 0x24, 0xC3, 0x7F, 0xA4,  // W.q.$...
                /* 1D98 */  0x3E, 0x9D, 0x37, 0x0D, 0x1F, 0x47, 0xA2, 0xBF,  // >.7..G..
                /* 1DA0 */  0x7D, 0x00, 0xFC, 0xF9, 0xFF, 0xDF, 0x3E, 0x00,  // }.....>.
                /* 1DA8 */  0x7B, 0x42, 0x6E, 0x1F, 0xA0, 0x83, 0xE5, 0xB7,  // {Bn.....
                /* 1DB0 */  0x0F, 0xE0, 0x79, 0x0C, 0xF0, 0xED, 0x03, 0x38,  // ..y....8
                /* 1DB8 */  0x9C, 0x36, 0xD8, 0x30, 0x0C, 0x15, 0xE7, 0x79,  // .6.0...y
                /* 1DC0 */  0x83, 0x83, 0xC6, 0x79, 0x99, 0xC2, 0x5E, 0x40,  // ...y..^@
                /* 1DC8 */  0x70, 0x1C, 0x56, 0x73, 0xD4, 0x85, 0x74, 0x03,  // p.Vs..t.
                /* 1DD0 */  0x08, 0xF1, 0xC8, 0xFF, 0x25, 0x1F, 0x22, 0xC1,  // ....%.".
                /* 1DD8 */  0xFF, 0xFF, 0xFD, 0x03, 0xE0, 0xBE, 0x94, 0xF5,  // ........
                /* 1DE0 */  0xE8, 0xFF, 0x7F, 0xFF, 0x00, 0xD7, 0xDD, 0xC0,  // ........
                /* 1DE8 */  0xF7, 0x0F, 0xE0, 0x3A, 0x7E, 0x9F, 0x75, 0x81,  // ...:~.u.
                /* 1DF0 */  0xC3, 0x70, 0x03, 0x3D, 0x4C, 0x05, 0x79, 0xD9,  // .p.=L.y.
                /* 1DF8 */  0x88, 0xF7, 0x08, 0xF2, 0xB6, 0x11, 0x3B, 0x5E,  // ......;^
                /* 1E00 */  0xCC, 0x43, 0x7A, 0x0C, 0x31, 0xBA, 0xA7, 0x60,  // .Cz.1..`
                /* 1E08 */  0x54, 0x5F, 0x40, 0xE0, 0x9D, 0xA8, 0x60, 0x5C,  // T_@...`\
                /* 1E10 */  0x40, 0x00, 0x93, 0xFF, 0xFF, 0x0B, 0x08, 0xC0,  // @.......
                /* 1E18 */  0x36, 0x0F, 0x17, 0x10, 0x40, 0xC8, 0xFF, 0xFF,  // 6...@...
                /* 1E20 */  0x40, 0x05, 0x96, 0x0B, 0x08, 0xB8, 0xEE, 0xEF,  // @.......
                /* 1E28 */  0xB8, 0x63, 0x81, 0x55, 0x9D, 0xA8, 0x20, 0x5D,  // .c.U.. ]
                /* 1E30 */  0x81, 0xB1, 0x33, 0xC0, 0x5E, 0x42, 0xC0, 0x78,  // ..3.^B.x
                /* 1E38 */  0x92, 0xC0, 0x5D, 0x42, 0x80, 0xF5, 0x35, 0x82,  // ..]B..5.
                /* 1E40 */  0x5D, 0x42, 0x80, 0xE5, 0x01, 0x06, 0x77, 0x09,  // ]B....w.
                /* 1E48 */  0x01, 0xFF, 0xFF, 0xFF, 0x12, 0x02, 0xFE, 0x2B,  // .......+
                /* 1E50 */  0x0C, 0xBB, 0x84, 0x00, 0x13, 0x19, 0x97, 0x10,  // ........
                /* 1E58 */  0xD0, 0x81, 0xFB, 0x12, 0x02, 0x5C, 0x67, 0xF1,  // .....\g.
                /* 1E60 */  0x54, 0x05, 0x2C, 0xAE, 0xF0, 0xF8, 0x23, 0x08,  // T.,...#.
                /* 1E68 */  0x8C, 0x2B, 0x08, 0xAC, 0x33, 0x15, 0x8C, 0x2B,  // .+..3..+
                /* 1E70 */  0x08, 0xD8, 0xFF, 0xFF, 0xE7, 0x2A, 0x80, 0xD9,  // .....*..
                /* 1E78 */  0x57, 0x10, 0xB0, 0xFC, 0xFF, 0xAF, 0x20, 0x18,  // W..... .
                /* 1E80 */  0x13, 0x57, 0x10, 0x40, 0xCB, 0xB9, 0x0A, 0xFE,  // .W.@....
                /* 1E88 */  0x15, 0x04, 0x7C, 0x23, 0xB5, 0xA6, 0x53, 0x15,  // ..|#..S.
                /* 1E90 */  0xA4, 0x73, 0x3D, 0xBB, 0xD6, 0xE3, 0x2F, 0x8A,  // .s=.../.
                /* 1E98 */  0xE0, 0x3C, 0x54, 0x01, 0xA6, 0xFE, 0xFF, 0x87,  // .<T.....
                /* 1EA0 */  0x2A, 0x80, 0x1F, 0x17, 0x79, 0xF0, 0xA9, 0xB8,  // *...y...
                /* 1EA8 */  0xC8, 0x03, 0x5A, 0x0E, 0x55, 0xF0, 0xFE, 0xFF,  // ..Z.U...
                /* 1EB0 */  0x37, 0x10, 0x7E, 0xDE, 0x60, 0x58, 0xBE, 0x83,  // 7.~.`X..
                /* 1EB8 */  0xF8, 0x0E, 0x10, 0x3E, 0xCC, 0x2B, 0x07, 0xFE,  // ...>.+..
                /* 1EC0 */  0x9E, 0x88, 0xBF, 0x82, 0xF0, 0x53, 0x15, 0x8C,  // .....S..
                /* 1EC8 */  0x2B, 0x08, 0x30, 0x39, 0x54, 0x01, 0xFC, 0xFA,  // +.09T...
                /* 1ED0 */  0xFF, 0x1F, 0xAA, 0x80, 0xE9, 0x15, 0x04, 0x7C,  // .......|
                /* 1ED8 */  0xE3, 0xF4, 0x15, 0x04, 0x70, 0x72, 0xA8, 0x82,  // ....pr..
                /* 1EE0 */  0x7F, 0x05, 0x01, 0x8F, 0xBE, 0x2B, 0x08, 0x4A,  // .....+.J
                /* 1EE8 */  0x12, 0x84, 0xF4, 0x9C, 0xAA, 0xA0, 0x9E, 0x05,  // ........
                /* 1EF0 */  0x62, 0x9F, 0xED, 0x13, 0x08, 0x3B, 0x53, 0x01,  // b....;S.
                /* 1EF8 */  0x9B, 0xFF, 0xFF, 0xB9, 0x17, 0xE0, 0xF6, 0x4D,  // .......M
                /* 1F00 */  0xC3, 0x17, 0x10, 0xF8, 0xFF, 0xFF, 0x73, 0x2F,  // ......s/
                /* 1F08 */  0xE0, 0xE4, 0x02, 0x02, 0xE7, 0xC2, 0x81, 0xB9,  // ........
                /* 1F10 */  0x24, 0xB2, 0xFB, 0x07, 0x9C, 0x23, 0x15, 0xBC,  // $....#..
                /* 1F18 */  0xFB, 0x07, 0xB8, 0x0F, 0x54, 0x80, 0xDF, 0xFF,  // ....T...
                /* 1F20 */  0xFF, 0xA1, 0x17, 0x60, 0x86, 0x8D, 0x43, 0x2F,  // ...`..C/
                /* 1F28 */  0xA0, 0xED, 0xFE, 0x01, 0x8E, 0x1B, 0x22, 0xE6,  // ......".
                /* 1F30 */  0xFF, 0x7F, 0xE8, 0x85, 0xAB, 0x11, 0x46, 0x20,  // ......F 
                /* 1F38 */  0x0F, 0xBD, 0x00, 0xBB, 0xFF, 0xFF, 0x37, 0x44,  // ......7D
                /* 1F40 */  0xE0, 0xA7, 0xE3, 0xD0, 0x0B, 0x68, 0x3B, 0x6F,  // .....h;o
                /* 1F48 */  0xB0, 0x43, 0x2F, 0xF0, 0xB8, 0x82, 0x00, 0x93,  // .C/.....
                /* 1F50 */  0x43, 0x15, 0xF0, 0xF9, 0xFF, 0x1F, 0x7A, 0x01,  // C.....z.
                /* 1F58 */  0xA6, 0xFA, 0xB8, 0x82, 0x00, 0xA9, 0xFF, 0xFF,  // ........
                /* 1F60 */  0xA1, 0x17, 0x18, 0x5E, 0x41, 0xC0, 0x73, 0xE8,  // ...^A.s.
                /* 1F68 */  0x05, 0xCB, 0x1C, 0x18, 0xD8, 0x19, 0x44, 0x3B,  // ......D;
                /* 1F70 */  0x56, 0x76, 0xA6, 0x02, 0xD8, 0xF3, 0xFF, 0x3F,  // Vv.....?
                /* 1F78 */  0xF4, 0x02, 0xAE, 0xC7, 0xE2, 0x43, 0x2F, 0xE0,  // .....C/.
                /* 1F80 */  0xEC, 0x02, 0x02, 0xE7, 0xC2, 0x81, 0x39, 0xF4,  // ......9.
                /* 1F88 */  0x82, 0xEB, 0xFE, 0x01, 0xE3, 0xFF, 0x7F, 0xE8,  // ........
                /* 1F90 */  0x05, 0xF8, 0xFF, 0xFF, 0xBF, 0x7F, 0x80, 0xC9,  // ........
                /* 1F98 */  0xC8, 0xA1, 0x17, 0xD0, 0x76, 0xFF, 0x00, 0x87,  // ....v...
                /* 1FA0 */  0xB2, 0xF3, 0x14, 0xA8, 0xCE, 0x00, 0x31, 0x2A,  // ......1*
                /* 1FA8 */  0x1E, 0x2D, 0x39, 0x4F, 0x01, 0x0E, 0xFF, 0xFF,  // .-9O....
                /* 1FB0 */  0xE7, 0x29, 0x80, 0x37, 0xEB, 0xF1, 0xFD, 0x03,  // .).7....
                /* 1FB8 */  0x5C, 0x4A, 0xEE, 0x1F, 0x40, 0x57, 0xF0, 0xFD,  // \J..@W..
                /* 1FC0 */  0x03, 0x34, 0xFF, 0xFF, 0xF3, 0x14, 0x78, 0x6E,  // .4....xn
                /* 1FC8 */  0x1B, 0x98, 0xCB, 0x07, 0xCC, 0xC3, 0x14, 0xBC,  // ........
                /* 1FD0 */  0xCB, 0x07, 0xB8, 0x0F, 0x53, 0x00, 0xBF, 0xFE,  // ....S...
                /* 1FD8 */  0xFF, 0x87, 0x29, 0x60, 0x7A, 0xF9, 0x00, 0xDF,  // ..)`z...
                /* 1FE0 */  0x75, 0xC1, 0x97, 0x0F, 0xC0, 0xC9, 0x61, 0x0A,  // u.....a.
                /* 1FE8 */  0x3C, 0x97, 0x0F, 0xBC, 0xF8, 0xAB, 0x3B, 0x5A,  // <.....;Z
                /* 1FF0 */  0xE0, 0x49, 0x0A, 0x92, 0xCB, 0x73, 0xAF, 0x10,  // .I...s..
                /* 1FF8 */  0x02, 0x1D, 0x47, 0xD7, 0xF0, 0x82, 0x8A, 0x74,  // ..G....t
                /* 2000 */  0xD4, 0x8F, 0x0B, 0x4C, 0x0A, 0xB0, 0xAE, 0x1F,  // ...L....
                /* 2008 */  0x5C, 0x04, 0x85, 0x44, 0xD0, 0xE8, 0x0C, 0xC1,  // \..D....
                /* 2010 */  0x63, 0x9F, 0x13, 0x28, 0x88, 0x01, 0x9D, 0xE9,  // c..(....
                /* 2018 */  0x70, 0xE6, 0xB1, 0xD0, 0xEB, 0x07, 0xBC, 0x04,  // p.......
                /* 2020 */  0x10, 0x92, 0x20, 0xE0, 0xFF, 0x7F, 0xFD, 0x80,  // .. .....
                /* 2028 */  0x79, 0x82, 0xC0, 0x5F, 0x0C, 0x4E, 0xB6, 0xD8,  // y.._.N..
                /* 2030 */  0x13, 0x03, 0xBD, 0x85, 0xC0, 0x9C, 0xA6, 0xEF,  // ........
                /* 2038 */  0x11, 0xE0, 0x10, 0x77, 0xA3, 0x02, 0x48, 0x24,  // ...w..H$
                /* 2040 */  0xE9, 0x14, 0x02, 0xBA, 0x01, 0xFB, 0x14, 0x82,  // ........
                /* 2048 */  0xFD, 0xFF, 0x9F, 0x42, 0x80, 0x5D, 0x84, 0x1B,  // ...B.]..
                /* 2050 */  0x15, 0xD0, 0xB8, 0x75, 0xC4, 0x6A, 0xFE, 0x0E,  // ...u.j..
                /* 2058 */  0x22, 0xDC, 0x58, 0xF1, 0x0E, 0xE8, 0x05, 0xDE,  // ".X.....
                /* 2060 */  0x27, 0x0F, 0xFC, 0x2D, 0x1E, 0x16, 0x41, 0xED,  // '..-..A.
                /* 2068 */  0xC7, 0x11, 0xB4, 0xBE, 0xAB, 0x15, 0xA4, 0xE3,  // ........
                /* 2070 */  0x08, 0x4C, 0x25, 0xC7, 0x11, 0x94, 0x06, 0x0A,  // .L%.....
                /* 2078 */  0x5D, 0xAE, 0x00, 0x9B, 0xFF, 0xFF, 0x7B, 0x08,  // ].....{.
                /* 2080 */  0x7C, 0x29, 0x37, 0x19, 0x54, 0xF8, 0xB9, 0x52,  // |)7.T..R
                /* 2088 */  0x10, 0xCF, 0xD5, 0xC1, 0x6E, 0x32, 0xE8, 0x7B,  // ....n2.{
                /* 2090 */  0x08, 0xBC, 0x10, 0x57, 0x19, 0x7A, 0x0F, 0x01,  // ...W.z..
                /* 2098 */  0xD7, 0x5D, 0x06, 0x77, 0x1D, 0x81, 0x7B, 0x98,  // .].w..{.
                /* 20A0 */  0x01, 0xD7, 0x6D, 0x04, 0x78, 0xDF, 0xD2, 0x7C,  // ..m.x..|
                /* 20A8 */  0x1B, 0x01, 0x9C, 0xDC, 0x38, 0xFC, 0xFF, 0xBF,  // ....8...
                /* 20B0 */  0x8D, 0x00, 0x2F, 0xA5, 0xB7, 0x11, 0xB4, 0xA6,  // ../.....
                /* 20B8 */  0xBB, 0x16, 0xA4, 0xB1, 0x07, 0x39, 0x2D, 0xA3,  // .....9-.
                /* 20C0 */  0xB1, 0x69, 0x19, 0xCB, 0x04, 0xBE, 0x06, 0x03,  // .i......
                /* 20C8 */  0x3C, 0xFB, 0xFF, 0x9F, 0xB2, 0x00, 0x23, 0x62,  // <.....#b
                /* 20D0 */  0xEE, 0x21, 0xA0, 0xD3, 0x72, 0x0F, 0x01, 0xBA,  // .!..r...
                /* 20D8 */  0xE2, 0x4F, 0x59, 0x40, 0xE3, 0xBC, 0xC1, 0xE1,  // .OY@....
                /* 20E0 */  0x0E, 0x2D, 0xC2, 0xD3, 0xA3, 0x51, 0x9E, 0x0B,  // .-...Q..
                /* 20E8 */  0x0C, 0xF5, 0x60, 0xEF, 0x43, 0x07, 0xEE, 0x12,  // ..`.C...
                /* 20F0 */  0x02, 0xF3, 0x88, 0x05, 0xE3, 0x12, 0x02, 0xBE,  // ........
                /* 20F8 */  0xFF, 0xFF, 0x75, 0x18, 0xE0, 0xF8, 0x25, 0x04,  // ..u...%.
                /* 2100 */  0xEE, 0xFF, 0xFF, 0x12, 0x02, 0xC7, 0xCB, 0x25,  // .......%
                /* 2108 */  0x04, 0xD0, 0x72, 0xB8, 0x82, 0x7F, 0x09, 0x01,  // ..r.....
                /* 2110 */  0x5F, 0x06, 0x1B, 0xA3, 0x61, 0x41, 0x06, 0x2E,  // _...aA..
                /* 2118 */  0x89, 0xCB, 0xA6, 0x30, 0xBE, 0x5B, 0xF8, 0xA4,  // ...0.[..
                /* 2120 */  0x80, 0x1F, 0xFB, 0x79, 0x1C, 0xF1, 0xC1, 0xB1,  // ...y....
                /* 2128 */  0xC3, 0xBE, 0xE1, 0xF8, 0xB1, 0xC0, 0x83, 0x7B,  // .......{
                /* 2130 */  0xF3, 0x3A, 0x8B, 0x53, 0x62, 0xF3, 0x09, 0xC9,  // .:.Sb...
                /* 2138 */  0x2E, 0x08, 0x3E, 0x01, 0x22, 0x20, 0x74, 0x32,  // ..>." t2
                /* 2140 */  0x38, 0xB8, 0x63, 0x7A, 0xF2, 0xF2, 0xB0, 0x8F,  // 8.cz....
                /* 2148 */  0xCF, 0x04, 0x3E, 0x10, 0x30, 0x34, 0x0E, 0x8D,  // ..>.04..
                /* 2150 */  0x1D, 0x86, 0x6F, 0x0A, 0xC1, 0x0E, 0xE2, 0x30,  // ..o....0
                /* 2158 */  0x5E, 0xFF, 0xD9, 0xA9, 0xCF, 0x33, 0x2C, 0xF7,  // ^....3,.
                /* 2160 */  0x06, 0xA1, 0xC1, 0x47, 0x8D, 0xD1, 0x1C, 0x14,  // ...G....
                /* 2168 */  0x39, 0x4E, 0x78, 0xFC, 0xE0, 0x38, 0x3D, 0x9C,  // 9Nx..8=.
                /* 2170 */  0xB4, 0xD1, 0x8E, 0xD9, 0x93, 0xF6, 0xFD, 0xC0,  // ........
                /* 2178 */  0x28, 0x01, 0xFF, 0xFF, 0xF1, 0x62, 0x1C, 0x8A,  // (....b..
                /* 2180 */  0x2F, 0x00, 0xEC, 0xFA, 0x10, 0x2E, 0xCA, 0xF3,  // /.......
                /* 2188 */  0x42, 0x94, 0x5A, 0x67, 0x46, 0x40, 0x0F, 0x80,  // B.ZgF@..
                /* 2190 */  0x01, 0xBD, 0x92, 0x1C, 0xFD, 0x63, 0xC5, 0x4B,  // .....c.K
                /* 2198 */  0x49, 0x02, 0x4F, 0xE1, 0x68, 0x30, 0x87, 0x04,  // I.O.h0..
                /* 21A0 */  0xA3, 0xBF, 0x5E, 0xF8, 0xB0, 0xC0, 0xDC, 0x0B,  // ..^.....
                /* 21A8 */  0xF0, 0x36, 0x2D, 0x41, 0x44, 0x88, 0xFC, 0x4A,  // .6-AD..J
                /* 21B0 */  0x71, 0x36, 0xA1, 0xDB, 0x1A, 0x9B, 0x06, 0xF7,  // q6......
                /* 21B8 */  0xE6, 0xD6, 0x18, 0x8A, 0x40, 0xDE, 0xE1, 0x6A,  // ....@..j
                /* 21C0 */  0x46, 0x15, 0xCA, 0x43, 0x61, 0x98, 0x73, 0x08,  // F..Ca.s.
                /* 21C8 */  0x18, 0x25, 0x62, 0xB4, 0xA8, 0x81, 0x1F, 0xBF,  // .%b.....
                /* 21D0 */  0x63, 0x1B, 0x34, 0x50, 0xAC, 0x08, 0x47, 0xD0,  // c.4P..G.
                /* 21D8 */  0xFE, 0x20, 0x48, 0xB4, 0x43, 0x81, 0xCE, 0x8F,  // . H.C...
                /* 21E0 */  0x8E, 0x34, 0x1A, 0xD4, 0x91, 0xC3, 0x07, 0x03,  // .4......
                /* 21E8 */  0xDF, 0x69, 0x3C, 0xB1, 0x23, 0x7C, 0x55, 0xF0,  // .i<.#|U.
                /* 21F0 */  0x6D, 0xC1, 0x3A, 0x4F, 0x04, 0x64, 0xEC, 0x6C,  // m.:O.d.l
                /* 21F8 */  0xD8, 0x3E, 0x9B, 0xC0, 0x39, 0xDF, 0x3D, 0xE5,  // .>..9.=.
                /* 2200 */  0xF9, 0x78, 0x01, 0x96, 0xC3, 0x09, 0xFC, 0xF1,  // .x......
                /* 2208 */  0xF8, 0x28, 0xE0, 0x8B, 0x10, 0x97, 0x3F, 0x08,  // .(....?.
                /* 2210 */  0xD4, 0xED, 0x87, 0x9F, 0x2D, 0x7C, 0x23, 0xF0,  // ....-|#.
                /* 2218 */  0x41, 0xE1, 0xB0, 0xD8, 0x29, 0xD3, 0xA7, 0x19,  // A...)...
                /* 2220 */  0x8F, 0x07, 0xFC, 0xB7, 0x42, 0x23, 0xBC, 0x36,  // ....B#.6
                /* 2228 */  0x78, 0xBE, 0x3E, 0x2E, 0xF8, 0xEC, 0x02, 0x86,  // x.>.....
                /* 2230 */  0xA3, 0x02, 0xBF, 0x29, 0xB0, 0xC3, 0x40, 0x0C,  // ...)..@.
                /* 2238 */  0xFF, 0xFF, 0xE7, 0xC5, 0x4E, 0x0E, 0x4C, 0xE4,  // ....N.L.
                /* 2240 */  0x19, 0x02, 0x3D, 0x02, 0x7E, 0x0C, 0x78, 0x8E,  // ..=.~.x.
                /* 2248 */  0x61, 0x23, 0x78, 0x95, 0xF1, 0x24, 0x0E, 0xC8,  // a#x..$..
                /* 2250 */  0xA7, 0x0B, 0x23, 0x84, 0x7F, 0xA8, 0x78, 0xC8,  // ..#...x.
                /* 2258 */  0xF0, 0x29, 0xE1, 0x8C, 0xCE, 0xE1, 0x9C, 0x1E,  // .)......
                /* 2260 */  0x7D, 0x98, 0x2E, 0x15, 0xE7, 0x01, 0x16, 0xF1,  // }.......
                /* 2268 */  0x72, 0x85, 0xE2, 0x70, 0xAC, 0x13, 0x23, 0x62,  // r..p..#b
                /* 2270 */  0x4A, 0xD8, 0x59, 0x3C, 0x48, 0x1A, 0x22, 0x81,  // J.Y<H.".
                /* 2278 */  0x63, 0xDC, 0x85, 0x51, 0x01, 0x28, 0x14, 0xE0,  // c..Q.(..
                /* 2280 */  0x40, 0x8B, 0x92, 0x7C, 0xC1, 0xA2, 0x20, 0x1E,  // @..|.. .
                /* 2288 */  0x88, 0xB3, 0x1C, 0x68, 0x7D, 0x6A, 0x40, 0xCF,  // ...h}j@.
                /* 2290 */  0x12, 0x7F, 0x72, 0xF0, 0xC4, 0x7C, 0x92, 0xF1,  // ..r..|..
                /* 2298 */  0xCC, 0x5E, 0xAE, 0xC0, 0x7B, 0x93, 0x05, 0xD7,  // .^..{...
                /* 22A0 */  0x5D, 0xD7, 0xB3, 0xC2, 0xE9, 0xB8, 0xAF, 0x90,  // ].......
                /* 22A8 */  0x3B, 0x88, 0x27, 0xE5, 0x8B, 0x82, 0x87, 0x04,  // ;.'.....
                /* 22B0 */  0xD6, 0xBB, 0x2E, 0xF8, 0x8E, 0x5F, 0x60, 0xF9,  // ....._`.
                /* 22B8 */  0xFF, 0x1F, 0xBF, 0xC0, 0xAF, 0xE4, 0xF8, 0x85,  // ........
                /* 22C0 */  0x1E, 0xC0, 0xA1, 0x3E, 0x37, 0x18, 0xE2, 0x50,  // ...>7..P
                /* 22C8 */  0xCE, 0xD5, 0xB7, 0x0D, 0x1F, 0xBF, 0xC0, 0x3D,  // .......=
                /* 22D0 */  0x14, 0x1F, 0xBF, 0xC0, 0x73, 0x84, 0x79, 0x7E,  // ....s.y~
                /* 22D8 */  0x79, 0xFC, 0x02, 0x2E, 0x12, 0x8E, 0x5F, 0xA0,  // y....._.
                /* 22E0 */  0xBB, 0x18, 0xF0, 0xE3, 0x17, 0xF0, 0x44, 0xF5,  // ......D.
                /* 22E8 */  0x79, 0x09, 0x1C, 0x07, 0x25, 0x3C, 0xC8, 0xCB,  // y...%<..
                /* 22F0 */  0x08, 0x3F, 0x25, 0xFD, 0xFF, 0xC3, 0xB0, 0x63,  // .?%....c
                /* 22F8 */  0x13, 0xBB, 0x33, 0xB1, 0x0B, 0xD1, 0xD1, 0xBD,  // ..3.....
                /* 2300 */  0xEE, 0x9D, 0xF2, 0x93, 0x17, 0x13, 0x78, 0x42,  // ......xB
                /* 2308 */  0x41, 0x1D, 0xB7, 0x2C, 0xEA, 0x84, 0x82, 0xB8,  // A..,....
                /* 2310 */  0x8A, 0xC0, 0x1D, 0xBF, 0x8E, 0x28, 0xA8, 0xF0,  // .....(..
                /* 2318 */  0x24, 0x3A, 0xBD, 0xFB, 0x08, 0xC1, 0xE3, 0x8E,  // $:......
                /* 2320 */  0x9D, 0x82, 0x18, 0xD0, 0x47, 0x14, 0xC0, 0xCA,  // ....G...
                /* 2328 */  0x01, 0x04, 0xB0, 0x78, 0x9C, 0x84, 0xFF, 0xFF,  // ...x....
                /* 2330 */  0x3F, 0x80, 0x00, 0x2E, 0x46, 0xED, 0x03, 0x08,  // ?...F...
                /* 2338 */  0xE0, 0x53, 0xD1, 0x01, 0x04, 0x75, 0x50, 0xB0,  // .S...uP.
                /* 2340 */  0x8A, 0x03, 0x08, 0xE2, 0xD4, 0x84, 0xCD, 0x7E,  // .......~
                /* 2348 */  0x2F, 0x46, 0xA5, 0x26, 0x51, 0xEA, 0xE3, 0x03,  // /F.&Q...
                /* 2350 */  0x2A, 0xE7, 0x11, 0x81, 0x82, 0x18, 0xD0, 0x17,  // *.......
                /* 2358 */  0x29, 0xE0, 0xF2, 0xFF, 0xBF, 0x78, 0x00, 0x6C,  // )....x.l
                /* 2360 */  0x85, 0xF4, 0xC5, 0x03, 0xD8, 0xFC, 0xFF, 0x2F,  // ......./
                /* 2368 */  0x1E, 0x80, 0x81, 0x68, 0x0F, 0x0A, 0x5F, 0x87,  // ...h.._.
                /* 2370 */  0xA9, 0xC8, 0x1B, 0x31, 0xA0, 0x7E, 0x16, 0x0F,  // ...1.~..
                /* 2378 */  0xBD, 0x0F, 0x00, 0x46, 0x37, 0xDC, 0x33, 0x82,  // ...F7.3.
                /* 2380 */  0x8F, 0xC4, 0xB0, 0x6F, 0xC4, 0xF0, 0xCF, 0xC0,  // ...o....
                /* 2388 */  0x1E, 0xD8, 0xC9, 0x84, 0x7D, 0xA0, 0x08, 0xF3,  // ....}...
                /* 2390 */  0x28, 0xFC, 0x20, 0xEC, 0x03, 0xC6, 0x69, 0xBD,  // (. ...i.
                /* 2398 */  0x11, 0x1B, 0xEA, 0xB8, 0x5E, 0x60, 0xA3, 0x44,  // ....^`.D
                /* 23A0 */  0xFC, 0xFF, 0x87, 0x8A, 0x73, 0x84, 0x51, 0x42,  // ....s.QB
                /* 23A8 */  0x84, 0x0B, 0x1B, 0x28, 0x66, 0x84, 0xD6, 0x30,  // ...(f..0
                /* 23B0 */  0x85, 0x10, 0x27, 0xA8, 0x6F, 0xC4, 0x2C, 0xDC,  // ..'.o.,.
                /* 23B8 */  0x8D, 0x18, 0xA0, 0xC9, 0x05, 0x18, 0x77, 0x6C,  // ......wl
                /* 23C0 */  0x81, 0x77, 0x54, 0xF0, 0x4D, 0x01, 0x77, 0x24,  // .wT.M.w$
                /* 23C8 */  0x86, 0x71, 0x25, 0x06, 0x26, 0x62, 0xDF, 0x03,  // .q%.&b..
                /* 23D0 */  0x3A, 0xE8, 0x58, 0xE8, 0x95, 0x18, 0x2D, 0x6B,  // :.X...-k
                /* 23D8 */  0xBD, 0x3A, 0xFF, 0xBF, 0xC7, 0xF8, 0xFF, 0x3F,  // .:.....?
                /* 23E0 */  0x27, 0xFC, 0x38, 0xCF, 0xE8, 0xFD, 0x80, 0xC9,  // '.8.....
                /* 23E8 */  0xB8, 0x20, 0xA2, 0x28, 0x7C, 0x41, 0x04, 0xDF,  // . .(|A..
                /* 23F0 */  0x05, 0xE2, 0x24, 0x5E, 0x58, 0x7C, 0x41, 0x04,  // ..$^X|A.
                /* 23F8 */  0xFC, 0x9D, 0x8C, 0x3C, 0x5C, 0x1E, 0x7A, 0xB8,  // ...<\.z.
                /* 2400 */  0x14, 0xC4, 0xC3, 0x75, 0xA0, 0x83, 0x15, 0x7A,  // ...u...z
                /* 2408 */  0xB8, 0x70, 0x2E, 0x01, 0x98, 0xA3, 0x15, 0xE0,  // .p......
                /* 2410 */  0xE4, 0xFF, 0x7F, 0xB4, 0x02, 0x8B, 0x90, 0x2B,  // .......+
                /* 2418 */  0x2F, 0xA0, 0xE7, 0x18, 0xE0, 0x03, 0x11, 0x38,  // /......8
                /* 2420 */  0x86, 0xF0, 0xB6, 0xC1, 0xEE, 0x42, 0x70, 0x70,  // .....Bpp
                /* 2428 */  0x5E, 0x0D, 0x38, 0xCA, 0xDB, 0x15, 0x7C, 0xB1,  // ^.8...|.
                /* 2430 */  0x2B, 0xF2, 0xD1, 0x8A, 0x9E, 0x44, 0x7C, 0xBA,  // +....D|.
                /* 2438 */  0x02, 0xCC, 0xFD, 0xFF, 0x47, 0x0F, 0x86, 0xF3,  // ....G...
                /* 2440 */  0x8F, 0x87, 0xE3, 0x09, 0x63, 0xE6, 0xEF, 0x1B,  // ....c...
                /* 2448 */  0x80, 0x21, 0x7D, 0x5B, 0x63, 0xD3, 0x7F, 0xE4,  // .!}[c...
                /* 2450 */  0x61, 0x97, 0x2B, 0xD8, 0xA7, 0x2B, 0xF8, 0xE3,  // a.+..+..
                /* 2458 */  0x3A, 0x91, 0x08, 0xEF, 0x53, 0x61, 0xA3, 0x3C,  // :...Sa.<
                /* 2460 */  0x4F, 0xF9, 0x6A, 0xE5, 0x23, 0x4A, 0x84, 0x13,  // O.j.#J..
                /* 2468 */  0x7A, 0xBA, 0x62, 0xD3, 0x7B, 0xBF, 0x32, 0xCE,  // z.b.{.2.
                /* 2470 */  0x49, 0x84, 0x7C, 0xC1, 0x88, 0x12, 0xED, 0xFD,  // I.|.....
                /* 2478 */  0xCA, 0xE3, 0x88, 0x10, 0xED, 0xE9, 0x22, 0x56,  // ......"V
                /* 2480 */  0xC4, 0xF8, 0xAF, 0x57, 0x3E, 0x5D, 0xB1, 0x90,  // ...W>]..
                /* 2488 */  0xA7, 0x2B, 0x80, 0x24, 0xFF, 0xFF, 0x61, 0xB0,  // .+.$..a.
                /* 2490 */  0x93, 0x0B, 0xFC, 0x13, 0x03, 0x3F, 0x08, 0xBC,  // .....?..
                /* 2498 */  0x25, 0x78, 0x7E, 0xAF, 0xA3, 0x86, 0x7F, 0x43,  // %x~....C
                /* 24A0 */  0x8A, 0xF3, 0x82, 0xE0, 0xBB, 0x0E, 0x76, 0x1E,  // ......v.
                /* 24A8 */  0xEC, 0x84, 0x05, 0x4C, 0x62, 0xAF, 0x40, 0xC3,  // ...Lb.@.
                /* 24B0 */  0xB5, 0xEE, 0x37, 0x82, 0x4E, 0x58, 0x38, 0xDD,  // ..7.NX8.
                /* 24B8 */  0x2F, 0x03, 0x1D, 0x29, 0xD8, 0xAC, 0xF8, 0xB9,  // /..)....
                /* 24C0 */  0xE2, 0xF1, 0x02, 0x83, 0x93, 0xC0, 0x3A, 0x0F,  // ......:.
                /* 24C8 */  0x5C, 0x74, 0x00, 0x56, 0x08, 0x23, 0x7D, 0x24,  // \t.V.#}$
                /* 24D0 */  0x3A, 0x23, 0x71, 0x45, 0x07, 0x2D, 0x0A, 0xE2,  // :#qE.-..
                /* 24D8 */  0xA3, 0x83, 0xA3, 0x9C, 0x91, 0xD0, 0xA3, 0xF3,  // ........
                /* 24E0 */  0x89, 0x85, 0x1F, 0x66, 0x1E, 0x66, 0x3D, 0xAE,  // ...f.f=.
                /* 24E8 */  0x93, 0x7E, 0xBD, 0x31, 0xC1, 0xB3, 0xCE, 0x03,  // .~.1....
                /* 24F0 */  0x16, 0x78, 0xEF, 0x2F, 0xBE, 0x20, 0x81, 0x29,  // .x./. .)
                /* 24F8 */  0xD4, 0x31, 0xCC, 0xA3, 0xA5, 0xA3, 0xF2, 0xC0,  // .1......
                /* 2500 */  0x3C, 0x2A, 0x3C, 0xC1, 0x04, 0x37, 0x2B, 0xCF,  // <*<..7+.
                /* 2508 */  0x09, 0xEA, 0x25, 0x0A, 0x3F, 0x98, 0xC7, 0x81,  // ..%.?...
                /* 2510 */  0xB7, 0x05, 0x0F, 0xC8, 0xFF, 0xFF, 0xA9, 0xC1,  // ........
                /* 2518 */  0x3A, 0x20, 0xF1, 0xAB, 0x18, 0x78, 0x8E, 0x5C,  // : ...x.\
                /* 2520 */  0x1E, 0x1A, 0x4E, 0xC5, 0x21, 0x86, 0xDC, 0x1A,  // ..N.!...
                /* 2528 */  0x0C, 0x71, 0x60, 0x60, 0xA6, 0xF1, 0xC0, 0x60,  // .q``...`
                /* 2530 */  0x5D, 0xDD, 0xF9, 0x95, 0x0D, 0xD8, 0xEE, 0xDA,  // ].......
                /* 2538 */  0xF7, 0x07, 0x1E, 0x79, 0xE6, 0x14, 0xC4, 0x73,  // ...y...s
                /* 2540 */  0x72, 0x1C, 0x08, 0x39, 0xB9, 0x3F, 0xA0, 0xEF,  // r..9.?..
                /* 2548 */  0x51, 0x1E, 0xD0, 0x83, 0x87, 0x87, 0xF4, 0x6C,  // Q......l
                /* 2550 */  0x8D, 0xB9, 0xB1, 0x81, 0x1D, 0xCA, 0x37, 0x36,  // ......76
                /* 2558 */  0xF0, 0x1C, 0x7A, 0x9E, 0x7A, 0xDE, 0xD8, 0xE0,  // ..z.z...
                /* 2560 */  0xFF, 0xFF, 0x6F, 0x6C, 0xE0, 0x8A, 0x0D, 0xA1,  // ..ol....
                /* 2568 */  0x1B, 0x1B, 0xE0, 0x66, 0x8E, 0x2F, 0x59, 0x60,  // ...f./Y`
                /* 2570 */  0xB9, 0xBD, 0xB0, 0x43, 0x16, 0xEE, 0xFA, 0x02,  // ...C....
                /* 2578 */  0x43, 0xFB, 0x5D, 0x06, 0xAD, 0x7D, 0xB1, 0x3A,  // C.]..}.:
                /* 2580 */  0xBF, 0xB1, 0xBB, 0x0C, 0x4C, 0xAD, 0x77, 0x19,  // ....L.w.
                /* 2588 */  0x94, 0x4A, 0x18, 0xE5, 0x39, 0x3C, 0xA0, 0x12,  // .J..9<..
                /* 2590 */  0xC0, 0x08, 0xCE, 0x20, 0x1E, 0xBF, 0xEF, 0x32,  // ... ...2
                /* 2598 */  0x80, 0x87, 0xFF, 0xFF, 0x5D, 0x06, 0x70, 0x76,  // ....].pv
                /* 25A0 */  0x47, 0x01, 0x16, 0xA1, 0xEE, 0x05, 0xA8, 0x18,  // G.......
                /* 25A8 */  0xF7, 0x02, 0x0A, 0xE2, 0x81, 0xF9, 0x8E, 0x02,  // ........
                /* 25B0 */  0x3C, 0xAF, 0x0E, 0xBE, 0xA3, 0x80, 0xEF, 0x66,  // <......f
                /* 25B8 */  0x80, 0xBF, 0x72, 0xF8, 0x2C, 0x84, 0x21, 0x18,  // ..r.,.!.
                /* 25C0 */  0xE2, 0x60, 0x40, 0x07, 0x05, 0x96, 0xFF, 0xFF,  // .`@.....
                /* 25C8 */  0x65, 0x08, 0xC6, 0x75, 0x06, 0xEE, 0xCD, 0x00,  // e..u....
                /* 25D0 */  0x5C, 0xB7, 0x19, 0xE0, 0x7D, 0x6E, 0xE2, 0xB7,  // \...}n..
                /* 25D8 */  0x19, 0xC0, 0xC7, 0x75, 0x96, 0xDF, 0x66, 0xE0,  // ...u..f.
                /* 25E0 */  0x2A, 0xB4, 0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06,  // *..S.Q..
                /* 25E8 */  0x65, 0x6A, 0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5,  // ej.iP.O.
                /* 25F0 */  0xC6, 0x8C, 0x85, 0x3D, 0x54, 0x48, 0xD2, 0x6A,  // ...=TH.j
                /* 25F8 */  0x35, 0x5C, 0x07, 0x02, 0xA1, 0xD1, 0xDF, 0x09,  // 5\......
                /* 2600 */  0x1A, 0x32, 0x31, 0x01, 0xC2, 0xE4, 0x83, 0xD0,  // .21.....
                /* 2608 */  0xA0, 0xAF, 0x31, 0x81, 0x38, 0xAC, 0x0D, 0x10,  // ..1.8...
                /* 2610 */  0x26, 0x55, 0x07, 0x08, 0x8B, 0xE5, 0xE3, 0x5C,  // &U.....\
                /* 2618 */  0xCE, 0x32, 0x82, 0x08, 0xC8, 0x89, 0xDE, 0x04,  // .2......
                /* 2620 */  0x02, 0x72, 0x3E, 0x10, 0x01, 0xFD, 0xFF, 0x13,  // .r>.....
                /* 2628 */  0x4C, 0xFE, 0x53, 0x11, 0x90, 0x65, 0x3C, 0x36,  // L.S..e<6
                /* 2630 */  0x04, 0xE4, 0xD0, 0x20, 0x02, 0xB2, 0x84, 0xF7,  // ... ....
                /* 2638 */  0xAC, 0x80, 0x1C, 0xCF, 0x0B, 0x08, 0x13, 0xB7,  // ........
                /* 2640 */  0x4E, 0x9D, 0x3B, 0x88, 0x19, 0x40, 0x96, 0x0D,  // N.;..@..
                /* 2648 */  0x44, 0xA7, 0x06, 0xF2, 0x4A, 0x11, 0x90, 0x35,  // D...J..5
                /* 2650 */  0x82, 0x08, 0xC8, 0xE1, 0x80, 0x68, 0x52, 0x20,  // .....hR 
                /* 2658 */  0xAA, 0xD0, 0x0D, 0x10, 0x93, 0x0B, 0x22, 0x20,  // ......" 
                /* 2660 */  0xA7, 0x06, 0xA2, 0x12, 0x9E, 0x12, 0x02, 0x72,  // .......r
                /* 2668 */  0x62, 0x10, 0x01, 0x39, 0x3F, 0x10, 0xD5, 0xE7,  // b..9?...
                /* 2670 */  0x07, 0x88, 0x89, 0x05, 0x11, 0x90, 0x73, 0x02,  // ......s.
                /* 2678 */  0xD1, 0xD0, 0x40, 0x54, 0xED, 0xA3, 0x40, 0x40,  // ..@T..@@
                /* 2680 */  0x96, 0x0E, 0xA2, 0x01, 0x10, 0x20, 0x1A, 0x1F,  // ..... ..
                /* 2688 */  0x88, 0x86, 0x30, 0x04, 0xC4, 0x12, 0x81, 0x08,  // ..0.....
                /* 2690 */  0xC8, 0x01, 0x14, 0x01, 0xB1, 0x38, 0x20, 0x02,  // .....8 .
                /* 2698 */  0xB2, 0x14, 0x47, 0x40, 0x4C, 0x18, 0x88, 0x80,  // ..G@L...
                /* 26A0 */  0x1C, 0x10, 0x88, 0xC6, 0x05, 0xA2, 0x91, 0x3C,  // .......<
                /* 26A8 */  0x81, 0x30, 0x41, 0xA2, 0x40, 0x58, 0x28, 0x53,  // .0A.@X(S
                /* 26B0 */  0x80, 0x2C, 0x21, 0x88, 0x80, 0xAC, 0x4E, 0x15,  // .,!...N.
                /* 26B8 */  0x10, 0x93, 0x0A, 0xA2, 0x01, 0x13, 0x57, 0x40,  // ......W@
                /* 26C0 */  0x4C, 0x24, 0x88, 0x80, 0x9C, 0xE5, 0x59, 0x1B,  // L$....Y.
                /* 26C8 */  0x88, 0x04, 0x03, 0x11, 0x90, 0x75, 0xBD, 0x88,  // .....u..
                /* 26D0 */  0x04, 0x48, 0x40, 0x74, 0x30, 0x20, 0x40, 0x34,  // .H@t0 @4
                /* 26D8 */  0x39, 0x10, 0x8D, 0xEA, 0x0B, 0x88, 0x05, 0x07,  // 9.......
                /* 26E0 */  0xD1, 0xE0, 0xC8, 0xA3, 0x45, 0x83, 0x23, 0x20,  // ....E.# 
                /* 26E8 */  0x02, 0xB2, 0xBC, 0x77, 0xD1, 0x41, 0x33, 0x10,  // ...w.A3.
                /* 26F0 */  0x0D, 0x84, 0x7C, 0x81, 0x35, 0x10, 0x02, 0xA2,  // ..|.5...
                /* 26F8 */  0x01, 0x91, 0xF7, 0xB2, 0x0E, 0x04, 0x04, 0x44,  // .......D
                /* 2700 */  0x40, 0xCE, 0x08, 0x44, 0x03, 0x03, 0x51, 0xE9,  // @..D..Q.
                /* 2708 */  0x6F, 0xDF, 0x40, 0x24, 0x07, 0x88, 0x80, 0x2C,  // o.@$...,
                /* 2710 */  0xF9, 0xAB, 0x24, 0x20, 0x07, 0x00, 0x11, 0xD0,  // ..$ ....
                /* 2718 */  0xFF, 0xFF, 0x91, 0x40, 0x2F, 0xE0, 0x40, 0x44,  // ...@/.@D
                /* 2720 */  0x10, 0x88, 0x0E, 0x08, 0x44, 0x1D, 0x08, 0x93,  // ....D...
                /* 2728 */  0xE6, 0xEE, 0x38, 0x41, 0xE5, 0x01, 0xB2, 0x74,  // ..8A...t
                /* 2730 */  0x20, 0x02, 0xB2, 0x4A, 0x7B, 0x40, 0x4C, 0x32,  //  ..J{@L2
                /* 2738 */  0x88, 0x06, 0x48, 0x80, 0x68, 0x6E, 0x20, 0x9A,  // ..H.hn .
                /* 2740 */  0xF3, 0x5F, 0x24, 0x20, 0xA7, 0x06, 0x11, 0x90,  // ._$ ....
                /* 2748 */  0xD5, 0xFB, 0x03, 0x62, 0x59, 0x40, 0x74, 0x18,  // ...bY@t.
                /* 2750 */  0x20, 0x5F, 0x95, 0x40, 0x24, 0x2D, 0x88, 0x80,  //  _.@$-..
                /* 2758 */  0x2C, 0xFC, 0xD1, 0x11, 0x88, 0xA4, 0x00, 0x11,  // ,.......
                /* 2760 */  0x90, 0x45, 0x3C, 0x5C, 0x02, 0x11, 0x45, 0x20,  // .E<\..E 
                /* 2768 */  0x1A, 0x14, 0x01, 0xA2, 0x49, 0x81, 0xA8, 0xC2,  // ....I...
                /* 2770 */  0x3F, 0x8D, 0x0E, 0x11, 0x04, 0x44, 0x03, 0x27,  // ?....D.'
                /* 2778 */  0xCF, 0x19, 0x0D, 0x9C, 0x80, 0xE8, 0x00, 0x40,  // .......@
                /* 2780 */  0x9E, 0x22, 0x81, 0x48, 0x1A, 0x10, 0x01, 0x59,  // .".H...Y
                /* 2788 */  0xD5, 0x93, 0x56, 0x40, 0x96, 0x08, 0xA2, 0x01,  // ..V@....
                /* 2790 */  0x11, 0x20, 0x9A, 0x16, 0x88, 0xA6, 0x7B, 0x97,  // . ....{.
                /* 2798 */  0x0B, 0xC8, 0x59, 0x41, 0x04, 0x64, 0x9D, 0x2A,  // ..YA.d.*
                /* 27A0 */  0x81, 0x98, 0x6A, 0x10, 0x01, 0x39, 0x3D, 0x10,  // ..j..9=.
                /* 27A8 */  0xD5, 0xE2, 0x12, 0x88, 0xA5, 0x02, 0xD1, 0x21,  // .......!
                /* 27B0 */  0x84, 0x00, 0xD1, 0xAC, 0x1F, 0x9A, 0x07, 0x04,  // ........
                /* 27B8 */  0x06, 0xA2, 0x01, 0x91, 0x87, 0xEE, 0x01, 0x31,  // .......1
                /* 27C0 */  0x10, 0xDD, 0xCE, 0xC8, 0x4F, 0x25, 0x10, 0x51,  // ....O%.Q
                /* 27C8 */  0x06, 0xA2, 0x83, 0x04, 0x01, 0xA2, 0xF9, 0x80,  // ........
                /* 27D0 */  0xA8, 0xC6, 0x07, 0x4F, 0x20, 0x22, 0x18, 0x44,  // ...O ".D
                /* 27D8 */  0x07, 0x0E, 0x62, 0x14, 0x88, 0xA9, 0x05, 0x11,  // ..b.....
                /* 27E0 */  0x90, 0x55, 0xFF, 0x79, 0x04, 0xE4, 0x08, 0x20,  // .U.y... 
                /* 27E8 */  0x02, 0xB2, 0x9A, 0x97, 0x4F, 0x20, 0x22, 0x0D,  // ....O ".
                /* 27F0 */  0x44, 0x07, 0x15, 0x02, 0x44, 0x33, 0x02, 0x51,  // D...D3.Q
                /* 27F8 */  0x71, 0x56, 0x81, 0x98, 0x52, 0x10, 0x1D, 0x3C,  // qV..R..<
                /* 2800 */  0x08, 0x10, 0x8D, 0x0F, 0x44, 0xD3, 0x3E, 0xCC,  // ....D.>.
                /* 2808 */  0x03, 0x91, 0xEC, 0x20, 0x02, 0xFA, 0xFF, 0x1F,  // ... ....
                /* 2810 */  0x84, 0xDE, 0x47, 0x07, 0xC1, 0x40, 0x74, 0xD8,  // ..G..@t.
                /* 2818 */  0x20, 0x40, 0x34, 0x21, 0x10, 0x95, 0xA6, 0x16,  //  @4!....
                /* 2820 */  0x88, 0xE9, 0x04, 0x11, 0x90, 0x13, 0x02, 0xD1,  // ........
                /* 2828 */  0xB8, 0x40, 0x54, 0xA7, 0x5B, 0x20, 0x26, 0x1A,  // .@T.[ &.
                /* 2830 */  0x44, 0x03, 0x21, 0x40, 0x34, 0x3A, 0x10, 0x4D,  // D.!@4:.M
                /* 2838 */  0xF0, 0x4A, 0x7E, 0xC8, 0x60, 0x20, 0x3A, 0x34,  // .J~.` :4
                /* 2840 */  0x10, 0xBB, 0x87, 0x06, 0x0A, 0x22, 0x20, 0x47,  // ....." G
                /* 2848 */  0xFC, 0x30, 0x05, 0x22, 0x79, 0x41, 0x34, 0x08,  // .0."yA4.
                /* 2850 */  0x22, 0x78, 0x10, 0x14, 0x44, 0x03, 0x27, 0xBF,  // "x..D.'.
                /* 2858 */  0x2C, 0x01, 0x59, 0x31, 0x88, 0x80, 0x9C, 0x1D,  // ,.Y1....
                /* 2860 */  0x88, 0x2A, 0x79, 0x62, 0x07, 0x22, 0x02, 0xBF,  // .*yb."..
                /* 2868 */  0x46, 0x1A, 0x3C, 0x01, 0x11, 0x90, 0x63, 0x02,  // F.<...c.
                /* 2870 */  0xD1, 0xCC, 0x40, 0x34, 0xE2, 0xD3, 0x48, 0x87,  // ..@4..H.
                /* 2878 */  0x0E, 0x02, 0xA2, 0x63, 0x0F, 0xF9, 0x47, 0x07,  // ...c..G.
                /* 2880 */  0x22, 0xC2, 0x41, 0x04, 0xE4, 0xD8, 0x40, 0x54,  // ".A...@T
                /* 2888 */  0xC4, 0x97, 0x5C, 0xF7, 0x50, 0xF2, 0x28, 0x0A,  // ..\.P.(.
                /* 2890 */  0x44, 0x54, 0x82, 0xE8, 0xF0, 0x40, 0x80, 0x68,  // DT...@.h
                /* 2898 */  0x5A, 0x20, 0x1A, 0x4E, 0x35, 0x10, 0x8B, 0x0A,  // Z .N5...
                /* 28A0 */  0x22, 0x20, 0xCB, 0x7E, 0xB6, 0x07, 0x22, 0x21,  // " .~.."!
                /* 28A8 */  0x40, 0x74, 0x00, 0x20, 0x1F, 0xA9, 0x07, 0x00,  // @t. ....
                /* 28B0 */  0x06, 0xA2, 0x03, 0x00, 0x79, 0x2F, 0xE9, 0x00,  // ....y/..
                /* 28B8 */  0x40, 0x40, 0x74, 0x28, 0x20, 0x40, 0x34, 0x3E,  // @@t( @4>
                /* 28C0 */  0x10, 0x4D, 0xFB, 0x5F, 0x7A, 0x28, 0x60, 0x20,  // .M._z(` 
                /* 28C8 */  0x02, 0xB2, 0xF2, 0x47, 0x9C, 0x0E, 0x27, 0x04,  // ...G..'.
                /* 28D0 */  0x44, 0x07, 0x0C, 0x62, 0xFC, 0xA0, 0x42, 0x41,  // D..b..BA
                /* 28D8 */  0x74, 0x20, 0x20, 0x40, 0x34, 0x2F, 0x10, 0x55,  // t  @4/.U
                /* 28E0 */  0xFF, 0x94, 0x7A, 0x08, 0x60, 0x20, 0x3A, 0x28,  // ..z.` :(
                /* 28E8 */  0x91, 0x97, 0x9A, 0x80, 0x1C, 0x0F, 0x44, 0x40,  // ......D@
                /* 28F0 */  0x0E, 0xF3, 0x2A, 0x0B, 0x44, 0xA2, 0x81, 0x68,  // ..*.D..h
                /* 28F8 */  0x90, 0xE4, 0x81, 0x75, 0x90, 0x0C, 0x44, 0x40,  // ...u..D@
                /* 2900 */  0xFF, 0xFF, 0x47, 0x24, 0x89, 0x3F, 0x88, 0x50,  // ..G$.?.P
                /* 2908 */  0x10, 0x0D, 0x88, 0xA8, 0x3F, 0xF3, 0x31, 0xCD,  // ....?.1.
                /* 2910 */  0xAF, 0x7A, 0x0D, 0x8E, 0x80, 0x50, 0x95, 0xFA,  // .z...P..
                /* 2918 */  0x8F, 0x2B, 0x14, 0x44, 0x40, 0x96, 0xE8, 0xFF,  // .+.D@...
                /* 2920 */  0x78, 0x41, 0x41, 0x74, 0x7C, 0x22, 0x40, 0x54,  // xAAt|"@T
                /* 2928 */  0x42, 0x80, 0x63, 0x09, 0x7D, 0x3A, 0xEA, 0x58,  // B.c.}:.X
                /* 2930 */  0x42, 0x40, 0x74, 0x14, 0x20, 0x40, 0x54, 0x44,  // B@t. @TD
                /* 2938 */  0x83, 0x01, 0xD0, 0x0A, 0x40, 0x4C, 0x2F, 0x88,  // ....@L/.
                /* 2940 */  0x80, 0x9C, 0x1B, 0x88, 0x8A, 0xC8, 0x70, 0xF1,  // ......p.
                /* 2948 */  0xA4, 0x20, 0x02, 0x72, 0x2E, 0x20, 0x9A, 0xA3,  // . .r. ..
                /* 2950 */  0x03, 0x10, 0x4B, 0x05, 0xA2, 0xE1, 0x93, 0x12,  // ..K.....
                /* 2958 */  0x47, 0x09, 0x0A, 0xA2, 0x23, 0x01, 0x49, 0x01,  // G...#.I.
                /* 2960 */  0xC4, 0x32, 0x80, 0x08, 0xC8, 0x9A, 0x5B, 0x00,  // .2....[.
                /* 2968 */  0xB1, 0x04, 0x20, 0x02, 0x72, 0x7E, 0x20, 0xAA,  // .. .r~ .
                /* 2970 */  0x26, 0xC6, 0x20, 0x69, 0x8E, 0x41, 0x52, 0x10,  // &. i.AR.
                /* 2978 */  0x01, 0x39, 0x2E, 0x10, 0xCD, 0x0E, 0x44, 0xB3,  // .9....D.
                /* 2980 */  0xF6, 0x38, 0x1A, 0x51, 0x10, 0x01, 0x59, 0x77,  // .8.Q..Yw
                /* 2988 */  0x90, 0xA3, 0x0D, 0x05, 0x11, 0x90, 0x93, 0x25,  // .......%
                /* 2990 */  0x01, 0x62, 0x39, 0x41, 0x34, 0x08, 0xD2, 0x04,  // .b9A4...
                /* 2998 */  0x88, 0x69, 0x06, 0xD1, 0xF1, 0x84, 0x54, 0x39,  // .i....T9
                /* 29A0 */  0x9E, 0x50, 0x10, 0x1D, 0xA7, 0x48, 0x16, 0x20,  // .P...H. 
                /* 29A8 */  0xA6, 0x0B, 0x44, 0xC7, 0x20, 0x02, 0x44, 0xD3,  // ..D. .D.
                /* 29B0 */  0x01, 0xD1, 0x34, 0x5D, 0x8E, 0x61, 0x14, 0x44,  // ..4].a.D
                /* 29B8 */  0x47, 0x05, 0x52, 0xE6, 0x28, 0x42, 0x41, 0x34,  // G.R.(BA4
                /* 29C0 */  0x50, 0x92, 0x66, 0xA0, 0x14, 0x44, 0x47, 0x24,  // P.f..DG$
                /* 29C8 */  0xD2, 0xE6, 0x88, 0x44, 0x41, 0x74, 0x54, 0x20,  // ...DAtT 
                /* 29D0 */  0x75, 0x8E, 0x0A, 0x14, 0x44, 0x47, 0x0D, 0x92,  // u...DG..
                /* 29D8 */  0xE7, 0xA8, 0x41, 0x41, 0x74, 0xAC, 0x21, 0x2F,  // ..AAt.!/
                /* 29E0 */  0x73, 0x1D, 0x6B, 0x08, 0x88, 0x8E, 0x11, 0xA4,  // s.k.....
                /* 29E8 */  0x10, 0x90, 0xFF, 0xFF, 0x47, 0x02, 0x81, 0xE8,  // ....G...
                /* 29F0 */  0x10, 0x40, 0x80, 0x68, 0x74, 0x20, 0x9A, 0x34,  // .@.ht .4
                /* 29F8 */  0xD1, 0x31, 0x89, 0x82, 0x08, 0xC8, 0x32, 0x2A,  // .1....2*
                /* 2A00 */  0x01, 0x31, 0x4D, 0x20, 0x02, 0xB2, 0x86, 0x4C,  // .1M ...L
                /* 2A08 */  0x47, 0x23, 0x0A, 0xA2, 0xE3, 0x04, 0x01, 0xA2,  // G#......
                /* 2A10 */  0xF9, 0x80, 0x68, 0xEA, 0xA7, 0xA5, 0x0E, 0x0D,  // ..h.....
                /* 2A18 */  0xA4, 0xD4, 0x21, 0x81, 0x82, 0xE8, 0x90, 0x40,  // ..!....@
                /* 2A20 */  0x80, 0xA8, 0xA0, 0x54, 0x40, 0x4C, 0x1D, 0x88,  // ...T@L..
                /* 2A28 */  0x8E, 0x14, 0x04, 0x88, 0x06, 0x05, 0xA2, 0x2A,  // .......*
                /* 2A30 */  0x5B, 0x1D, 0x0C, 0x28, 0x88, 0x0E, 0x0F, 0x24,  // [..(...$
                /* 2A38 */  0xD6, 0x61, 0x82, 0x82, 0x08, 0xC8, 0xE2, 0x73,  // .a.....s
                /* 2A40 */  0x01, 0xB1, 0x28, 0x20, 0x3A, 0x3E, 0x91, 0x5E,  // ..( :>.^
                /* 2A48 */  0x40, 0x4C, 0x12, 0x88, 0x0E, 0x03, 0xA4, 0xD8,  // @L......
                /* 2A50 */  0x61, 0x80, 0x82, 0x08, 0xC8, 0xF9, 0x80, 0x68,  // a......h
                /* 2A58 */  0x58, 0x20, 0xAA, 0x30, 0xD9, 0x11, 0x8A, 0x82,  // X .0....
                /* 2A60 */  0xE8, 0x70, 0x41, 0x9A, 0x1D, 0x2E, 0x28, 0x88,  // .pA...(.
                /* 2A68 */  0x80, 0x2C, 0xB7, 0x1A, 0x10, 0x13, 0x0F, 0x22,  // .,....."
                /* 2A70 */  0x20, 0xC7, 0x07, 0xA2, 0x62, 0xB2, 0x1D, 0xC7,  //  ...b...
                /* 2A78 */  0x68, 0xB8, 0x63, 0x09, 0x05, 0xD1, 0xE1, 0x81,  // h.c.....
                /* 2A80 */  0x00, 0xD1, 0xE0, 0x40, 0x54, 0x75, 0xB9, 0x03,  // ...@Tu..
                /* 2A88 */  0x03, 0x05, 0xD1, 0xE1, 0x80, 0xA4, 0x3B, 0x1C,  // ......;.
                /* 2A90 */  0x50, 0x10, 0x1D, 0x0E, 0x48, 0xBC, 0xC3, 0x01,  // P...H...
                /* 2A98 */  0x05, 0xD1, 0xF1, 0x88, 0xD4, 0x3B, 0xC6, 0x51,  // .....;.Q
                /* 2AA0 */  0x10, 0x01, 0x59, 0x74, 0xBF, 0x03, 0x06, 0x05,  // ..Yt....
                /* 2AA8 */  0x11, 0x90, 0x95, 0x04, 0x04, 0x62, 0xB2, 0x40,  // .....b.@
                /* 2AB0 */  0x04, 0xE4, 0x4C, 0x40, 0x34, 0x20, 0x10, 0x0D,  // ..L@4 ..
                /* 2AB8 */  0x54, 0xF0, 0xB8, 0x42, 0x41, 0x04, 0x64, 0x91,  // T..BA.d.
                /* 2AC0 */  0x09, 0x0F, 0x00, 0x14, 0x44, 0x83, 0x27, 0x11,  // ....D.'.
                /* 2AC8 */  0x07, 0x4F, 0x41, 0x34, 0x18, 0x52, 0x11, 0xC8,  // .OA4.R..
                /* 2AD0 */  0xFF, 0xFF, 0xC1, 0x08, 0x44, 0x83, 0x22, 0x1D,  // ....D.".
                /* 2AD8 */  0x81, 0x58, 0x32, 0x10, 0x01, 0x39, 0x48, 0x48,  // .X2..9HH
                /* 2AE0 */  0x20, 0x16, 0x0B, 0x44, 0x87, 0x08, 0x12, 0xF3,  //  ..D....
                /* 2AE8 */  0x28, 0x49, 0x41, 0xA8, 0xC4, 0x9C, 0x07, 0x14,  // (IA.....
                /* 2AF0 */  0x0A, 0xA2, 0x63, 0x1F, 0xE9, 0x09, 0xC4, 0xB4,  // ..c.....
                /* 2AF8 */  0x82, 0x08, 0xC8, 0x19, 0x8A, 0x02, 0xB1, 0x40,  // .......@
                /* 2B00 */  0x20, 0x3A, 0x5A, 0x92, 0xA4, 0x40, 0x2C, 0x0C,  //  :Z..@,.
                /* 2B08 */  0x88, 0x8E, 0x91, 0x24, 0xEA, 0x71, 0x8C, 0x82,  // ...$.q..
                /* 2B10 */  0xE8, 0x10, 0x42, 0xAA, 0x1E, 0x42, 0x28, 0x88,  // ..B..B(.
                /* 2B18 */  0x0E, 0x27, 0xA4, 0xEB, 0x61, 0x80, 0x86, 0x3D,  // .'..a..=
                /* 2B20 */  0x6E, 0x52, 0x10, 0x01, 0x59, 0x48, 0xD9, 0x63,  // nR..YH.c
                /* 2B28 */  0x10, 0x6D, 0x7B, 0x0C, 0xA2, 0x20, 0x3A, 0x64,  // .m{.. :d
                /* 2B30 */  0x90, 0xB8, 0x87, 0x02, 0x0A, 0xA2, 0x23, 0x0E,  // ......#.
                /* 2B38 */  0xC9, 0x0B, 0xC4, 0x62, 0x80, 0xE8, 0x10, 0x40,  // ...b...@
                /* 2B40 */  0xFA, 0x1E, 0x0A, 0x28, 0x88, 0x80, 0x1C, 0xAD,  // ...(....
                /* 2B48 */  0xF0, 0x60, 0x28, 0x88, 0x8E, 0x69, 0x24, 0xF1,  // .`(..i$.
                /* 2B50 */  0x11, 0x8C, 0x82, 0xE8, 0xA0, 0x41, 0x2A, 0x1F,  // .....A*.
                /* 2B58 */  0xFB, 0x28, 0x88, 0x0E, 0x0C, 0x04, 0x88, 0x8A,  // .(......
                /* 2B60 */  0xC9, 0x0C, 0xC4, 0x84, 0x86, 0x3E, 0xBA, 0x51,  // .....>.Q
                /* 2B68 */  0x10, 0x1D, 0xAD, 0x48, 0xE9, 0xA3, 0x15, 0x05,  // ...H....
                /* 2B70 */  0xD1, 0xD1, 0x90, 0xB4, 0x3E, 0x1A, 0x52, 0x10,  // ....>.R.
                /* 2B78 */  0x01, 0x39, 0xC6, 0x13, 0x57, 0x40, 0x0E, 0x05,  // .9..W@..
                /* 2B80 */  0x22, 0x20, 0x07, 0xCE, 0x0D, 0xC4, 0xD2, 0x83,  // " ......
                /* 2B88 */  0xE8, 0x00, 0x41, 0x7A, 0x1F, 0x66, 0x28, 0x88,  // ..Az.f(.
                /* 2B90 */  0x80, 0xAC, 0x28, 0x39, 0x10, 0x93, 0x07, 0xA2,  // ..(9....
                /* 2B98 */  0x23, 0x1C, 0x69, 0x7E, 0x34, 0xA3, 0x20, 0x02,  // #.i~4. .
                /* 2BA0 */  0xB2, 0xE0, 0xEA, 0x40, 0x4C, 0x3D, 0x88, 0x80,  // ...@L=..
                /* 2BA8 */  0xAC, 0x35, 0x3B, 0x10, 0x53, 0x0E, 0xA2, 0x83,  // .5;.S...
                /* 2BB0 */  0x03, 0x09, 0x7F, 0x70, 0xA0, 0x20, 0x3A, 0x9E,  // ...p. :.
                /* 2BB8 */  0x92, 0xF2, 0x40, 0x2C, 0x1C, 0x88, 0x80, 0x1C,  // ..@,....
                /* 2BC0 */  0xBC, 0x3D, 0x90, 0xFF, 0xFF, 0x04, 0x55, 0xC4,  // .=....U.
                /* 2BC8 */  0x07, 0x62, 0x99, 0x41, 0x04, 0x64, 0x05, 0xF5,  // .b.A.d..
                /* 2BD0 */  0x81, 0x98, 0xB2, 0x73, 0xAE, 0x80, 0x2C, 0x13,  // ...s..,.
                /* 2BD8 */  0x44, 0x40, 0xFE, 0x73, 0xBE, 0x35, 0x3D, 0xBC,  // D@.s.5=.
                /* 2BE0 */  0x10, 0x10, 0x1D, 0x0F, 0x89, 0x02, 0x20, 0x96,  // ...... .
                /* 2BE8 */  0x02, 0x44, 0x87, 0x21, 0xE2, 0x00, 0x88, 0x25,  // .D.!...%
                /* 2BF0 */  0x00, 0x11, 0x90, 0x73, 0x59, 0x00, 0x62, 0x21,  // ...sY.b!
                /* 2BF8 */  0x41, 0x74, 0xDC, 0x23, 0x1A, 0x80, 0x58, 0x40,  // At.#..X@
                /* 2C00 */  0x10, 0x0D, 0x98, 0x88, 0x00, 0x62, 0xE9, 0x41,  // .....b.A
                /* 2C08 */  0x34, 0x60, 0x62, 0x02, 0x88, 0x25, 0x07, 0x11,  // 4`b..%..
                /* 2C10 */  0x90, 0xB5, 0xC9, 0x00, 0x62, 0x42, 0x41, 0x74,  // ....bBAt
                /* 2C18 */  0x50, 0x20, 0x36, 0x80, 0x98, 0x46, 0x10, 0x01,  // P 6..F..
                /* 2C20 */  0x39, 0x89, 0x0F, 0x20, 0x76, 0xD0, 0x3D, 0x10,  // 9.. v.=.
                /* 2C28 */  0x2A, 0x64, 0x20, 0x14, 0x44, 0x87, 0x16, 0xE2,  // *d .D...
                /* 2C30 */  0x04, 0x88, 0x29, 0x02, 0xD1, 0x21, 0x82, 0x00,  // ..)..!..
                /* 2C38 */  0x51, 0x35, 0x52, 0x80, 0x98, 0x5A, 0x2D, 0x40,  // Q5R..Z-@
                /* 2C40 */  0x4C, 0x3A, 0x88, 0x0E, 0x09, 0xC4, 0x0B, 0x10,  // L:......
                /* 2C48 */  0x93, 0x0D, 0xA2, 0x43, 0x3A, 0x71, 0x03, 0xC2,  // ...C:q..
                /* 2C50 */  0xC2, 0x80, 0x50, 0x19, 0x76, 0x00, 0x99, 0x26,  // ..P.v..&
                /* 2C58 */  0x10, 0x1D, 0x72, 0x08, 0x10, 0xCD, 0x05, 0x44,  // ..r....D
                /* 2C60 */  0x43, 0xE8, 0x01, 0x62, 0x91, 0x40, 0x74, 0xEC,  // C..b.@t.
                /* 2C68 */  0x24, 0x82, 0x80, 0x58, 0x6E, 0x10, 0x01, 0x39,  // $..Xn..9
                /* 2C70 */  0xA4, 0x21, 0x20, 0x16, 0x19, 0x44, 0x47, 0x3C,  // .! ..DG<
                /* 2C78 */  0xE2, 0x08, 0x88, 0x09, 0x91, 0x04, 0xC4, 0x52,  // .......R
                /* 2C80 */  0x83, 0x08, 0xC8, 0x1A, 0x2C, 0x01, 0xB1, 0x44,  // ....,..D
                /* 2C88 */  0xA2, 0x40, 0x98, 0x1E, 0x53, 0x20, 0x2C, 0x8B,  // .@..S ,.
                /* 2C90 */  0x2A, 0x40, 0x16, 0x0C, 0x44, 0x03, 0x26, 0xAE,  // *@..D.&.
                /* 2C98 */  0x06, 0x44, 0x41, 0x74, 0xB0, 0x22, 0xB6, 0x40,  // .DAt.".@
                /* 2CA0 */  0x1E, 0xCF, 0xAC, 0xD5, 0x17, 0x10, 0x4B, 0x0A,  // ......K.
                /* 2CA8 */  0x42, 0xB5, 0x1A, 0x03, 0x65, 0xC2, 0x41, 0x74,  // B...e.At
                /* 2CB0 */  0x7C, 0x26, 0xCA, 0x86, 0x4C, 0x41, 0x04, 0xF4,  // |&..LA..
                /* 2CB8 */  0xFF, 0x7F, 0x30, 0x11, 0x10, 0x4D, 0x07, 0x44,  // ..0..M.D
                /* 2CC0 */  0xC3, 0x38, 0x03, 0x62, 0xD1, 0x40, 0x74, 0x00,  // .8.b.@t.
                /* 2CC8 */  0x24, 0xD6, 0x80, 0x58, 0x5E, 0x10, 0x0D, 0x85,  // $..X^...
                /* 2CD0 */  0x68, 0x03, 0x62, 0x21, 0x40, 0x74, 0x5C, 0x20,  // h.b!@t\ 
                /* 2CD8 */  0xDE, 0x8E, 0x0B, 0x14, 0x44, 0x47, 0x1B, 0x22,  // ....DG."
                /* 2CE0 */  0x0E, 0x88, 0xE9, 0x02, 0x11, 0x90, 0xFF, 0xFF   // ........
            })
            Method (WMAA, 3, Serialized)
            {
                CTID = 0x4141
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        AAST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAST) /* \_SB_.PCI0.WMID.AAST */
                    }
                    Case (0x02)
                    {
                        AAGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAGT) /* \_SB_.PCI0.WMID.AAGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMAB, 3, Serialized)
            {
                CTID = 0x4241
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        ABST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABST) /* \_SB_.PCI0.WMID.ABST */
                    }
                    Case (0x02)
                    {
                        ABGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABGT) /* \_SB_.PCI0.WMID.ABGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMBE, 3, Serialized)
            {
                CTID = 0x4542
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (0x13)
                    {
                        BEBI = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
                    }
                    Case (0x14)
                    {
                        BEGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BEGB) /* \_SB_.PCI0.WMID.BEGB */
                    }
                    Case (0x15)
                    {
                        BESB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BESB) /* \_SB_.PCI0.WMID.BESB */
                    }

                }

                Switch (ToInteger (Arg1))
                {
                    Case (0x13)
                    {
                        BEBI [0x02] = One
                        Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
                    }
                    Case (0x14)
                    {
                        BEGB [One] = One
                        Return (BEGB) /* \_SB_.PCI0.WMID.BEGB */
                    }
                    Case (0x15)
                    {
                        BESB [Zero] = One
                        Return (BESB) /* \_SB_.PCI0.WMID.BESB */
                    }

                }
            }

            Method (WMBK, 3, Serialized)
            {
                CTID = 0x4B42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x02)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x03)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x08)
                    {
                        BKMN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKMN) /* \_SB_.PCI0.WMID.BKMN */
                    }
                    Case (0x09)
                    {
                        BKSN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSN) /* \_SB_.PCI0.WMID.BKSN */
                    }
                    Case (0x0A)
                    {
                        BKAT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKAT) /* \_SB_.PCI0.WMID.BKAT */
                    }
                    Case (0x0B)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x0D)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x10)
                    {
                        BKGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGB) /* \_SB_.PCI0.WMID.BKGB */
                    }
                    Case (0x11)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x12)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x13)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x14)
                    {
                        BKGU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGU) /* \_SB_.PCI0.WMID.BKGU */
                    }
                    Case (0x15)
                    {
                        BKSU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSU) /* \_SB_.PCI0.WMID.BKSU */
                    }
                    Case (0x16)
                    {
                        BKGS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGS) /* \_SB_.PCI0.WMID.BKGS */
                    }
                    Case (0x17)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }
                    Case (0x18)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x19)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x1A)
                    {
                        BKGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGP) /* \_SB_.PCI0.WMID.BKGP */
                    }
                    Case (0x1B)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }

                }

                Return (One)
            }

            Method (WMBL, 3, Serialized)
            {
                CTID = 0x4C42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x02)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x03)
                    {
                        BLGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGB) /* \_SB_.PCI0.WMID.BLGB */
                    }
                    Case (0x04)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x05)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x06)
                    {
                        BLLB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLLB) /* \_SB_.PCI0.WMID.BLLB */
                    }
                    Case (0x07)
                    {
                        BLSD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSD) /* \_SB_.PCI0.WMID.BLSD */
                    }
                    Case (0x08)
                    {
                        BLGD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGD) /* \_SB_.PCI0.WMID.BLGD */
                    }
                    Case (0x09)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x0A)
                    {
                        BLGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGP) /* \_SB_.PCI0.WMID.BLGP */
                    }
                    Case (0x0B)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x0C)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }

                }

                Return (One)
            }

            Method (WMBG, 3, Serialized)
            {
                CTID = 0x4742
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BGS3 = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BGS3) /* \_SB_.PCI0.WMID.BGS3 */
                    }

                }

                Return (0xFFFF)
            }

            Method (WMBH, 3, Serialized)
            {
                CTID = 0x4842
                If ((Arg1 == 0x05))
                {
                    BHSK = Arg2
                    Local0 = DerefOf (BHSK [Zero])
                    Local1 = DerefOf (BHSK [One])
                    Local3 = 0x02
                    BHGK [One] = Zero
                    BHGK [0x02] = Zero
                    BHGK [0x03] = Zero
                    BHGK [0x04] = Zero
                    BHGK [0x05] = Zero
                    BHGK [0x06] = Zero
                    BHGK [0x07] = Zero
                    If ((Local0 == Zero))
                    {
                        Arg2 = \_SB.PCI0.LPC0.EC0.GGSI /* External reference */
                        RefOf (Local2)
                        Local3
                        If ((Local3 == Zero))
                        {
                            BHGK [0x03] = (Local2 & 0xFF)
                            Local2 >>= 0x08
                            BHGK [0x04] = (Local2 & 0xFF)
                        }
                    }
                    ElseIf ((Local0 == One))
                    {
                        Arg2 = \_SB.PCI0.LPC0.EC0.GGSI /* External reference */
                        RefOf (Local2)
                        Local3
                        If ((Local3 == Zero))
                        {
                            BHGK [One] = (Local2 & 0xFF)
                            Local2 >>= 0x08
                            BHGK [0x02] = (Local2 & 0xFF)
                        }
                    }
                    ElseIf ((Local0 == 0x02))
                    {
                        Arg2 = \_SB.PCI0.LPC0.EC0.GGSI /* External reference */
                        RefOf (Local2)
                        Local3
                        If ((Local3 == Zero))
                        {
                            BHGK [0x05] = Local2
                        }
                    }

                    BHGK [Zero] = Local3
                    Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                }

                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x02)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x03)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x04)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x06)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x07)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x08)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x09)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0A)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0B)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0C)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0D)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0E)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0F)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x10)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x11)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x12)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x13)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x14)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x15)
                    {
                        BHLK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHLK) /* \_SB_.PCI0.WMID.BHLK */
                    }
                    Case (0x16)
                    {
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x17)
                    {
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }

                }

                Return (One)
            }

            Method (WMAC, 3, Serialized)
            {
                CTID = 0x4143
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        ACSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACSB) /* \_SB_.PCI0.WMID.ACSB */
                    }
                    Case (0x02)
                    {
                        ACGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACGB) /* \_SB_.PCI0.WMID.ACGB */
                    }

                }

                Return (One)
            }

            Method (EVBC, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (Local0)
                {
                    Case (One)
                    {
                        CLBC (0x04, 0x04)
                        Local1 = DerefOf (FEBC [One])
                        Local2 = Zero
                        If (((Local1 > Zero) && (Local1 < 0x20)))
                        {
                            RefOf (Local2) = \_SB.PCI0.LPC0.EC0.GCMS /* External reference */
                            Local3
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        ElseIf (((Local1 > 0x80) && (Local1 < 0xA0)))
                        {
                            Local1 = \_SB.PCI0.LPC0.EC0.GOTS /* External reference */
                            RefOf (Local2)
                            Local3
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        Else
                        {
                            FEBC [0x02] = Zero
                            FEBC [0x03] = Zero
                        }
                    }
                    Case (0x02)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x03)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x04)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GBL1 /* External reference */
                        Local2
                        If ((Local2 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GBL2 /* External reference */
                            Local2
                            If ((Local2 != Zero))
                            {
                                FEBC [0x02] = Zero
                            }
                            Else
                            {
                                FEBC [0x02] = (Local1 & 0xFF)
                            }
                        }
                    }
                    Case (0x05)
                    {
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GSTY /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            RefOf (Local4) = \_SB.PCI0.LPC0.EC0.GSDA /* External reference */
                            Local5
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x03] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x04] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x05] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x06)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GTTY /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            RefOf (Local4) = \_SB.PCI0.LPC0.EC0.GTDA /* External reference */
                            Local5
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x07)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GHKF /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            RefOf (Local4) = \_SB.PCI0.LPC0.EC0.GHKD /* External reference */
                            Local5
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GACS /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x09)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GBBS /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0A)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GBSI /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0B)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GBBC /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0C)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        RefOf (Local1) = \_SB.PCI0.LPC0.EC0.GSKS /* External reference */
                        Local3
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (EVBD, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (Local0)
                {
                    Case (One)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                        FEBC [One] = 0xE1
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xBC))
                {
                    Return (EVBC ())
                }
                ElseIf ((Arg0 == 0xBD))
                {
                    Return (EVBD ())
                }
                Else
                {
                    CLBC (Zero, 0x08)
                    Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
                }
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PCI0.GPP0.HDAU, DeviceObj)
    External (M097, UnknownObj)

    Scope (\_SB.PCI0.GPP0.HDAU)
    {
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((M097 != Zero))
            {
                Return (Zero)
            }
            Else
            {
                Return (0x0F)
            }
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 32 external control methods found during
     * disassembly, but only 0 were resolved (32 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (_SB_.PCI0.GP17.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M087, UnknownObj)
    External (M100, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M105, IntObj)
    External (M106, IntObj)
    External (M113, IntObj)
    External (M133, UnknownObj)
    External (M232, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M233, IntObj)
    External (M235, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M378, IntObj)
    External (M379, IntObj)
    External (M380, IntObj)
    External (M381, IntObj)
    External (M382, IntObj)
    External (M383, IntObj)
    External (M384, IntObj)
    External (M385, IntObj)
    External (M386, IntObj)
    External (M387, IntObj)
    External (M388, IntObj)
    External (M389, IntObj)
    External (M390, IntObj)
    External (M391, IntObj)
    External (M392, IntObj)

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M207, Buffer (0xFF){})
        Name (M208, Buffer (0x03){})
        Name (M204, One)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                ATC0 ()
            }

            If ((Arg0 == One))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            If ((Arg0 == 0x06))
            {
                ATC6 (Arg1)
            }

            If ((Arg0 == 0x07))
            {
                ATC7 (Arg1)
            }

            Return (M207) /* \_SB_.PCI0.GP17.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = 0x6F
             = \_SB.ALIB /* External reference */
            M207
            M207
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, One, M203)
            M157 = 0x0A
            M161 = One
            0x15 = M100 (M162, M133 = M049 /* External reference */)
            Local0
            If ((Local0 & 0x80))
            {
                M204 = (Local0 & One)
            }
            ElseIf ((Local0 & 0x7F))
            {
                Local0 = M113 /* External reference */
                M204
            }

            M203 = M204 /* \_SB_.PCI0.GP17.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = One
            0x02 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, Zero, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = One
            M197 = 0x03
            M206 = One
            0x03 = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = One
            0x04 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC6, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M234)
            M157 = 0x06
            M234 = M233 /* External reference */
        }

        Method (ATC7, 1, Serialized)
        {
            M232 (M235 (Zero, One))
        }

        Method (ATRM, 2, Serialized)
        {
            If ((M105 == Zero))
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Local4 = M105 /* External reference */
            If ((Local4 > 0x00010000))
            {
                Local4 = 0x00010000
            }

            Local5 = Arg0
            Local6 = Arg1
            If ((Local6 > 0x1000))
            {
                Local6 = 0x1000
            }

            If ((Local5 > Local4))
            {
                Return (Buffer (Local6)
                {
                     0x00                                             // .
                })
            }

            If ((((Local5 & 0x0FFF) + Local6) > 0x1000))
            {
                Local6 = (0x1000 - (Local5 & 0x0FFF))
            }

            Name (M202, Buffer (0x1000)
            {
                 0x00                                             // .
            })
            If (((Local5 & 0xF000) == Zero))
            {
                M202 = M106 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x1000))
            {
                M202 = M378 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x2000))
            {
                M202 = M379 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x3000))
            {
                M202 = M380 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x4000))
            {
                M202 = M381 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x5000))
            {
                M202 = M382 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x6000))
            {
                M202 = M383 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x7000))
            {
                M202 = M384 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x8000))
            {
                M202 = M385 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x9000))
            {
                M202 = M386 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xA000))
            {
                M202 = M387 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xB000))
            {
                M202 = M388 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xC000))
            {
                M202 = M389 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xD000))
            {
                M202 = M390 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xE000))
            {
                M202 = M391 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xF000))
            {
                M202 = M392 /* External reference */
            }

            If (((Local5 + Local6) <= Local4))
            {
                If ((Local6 == 0x1000))
                {
                    Return (M202) /* \_SB_.PCI0.GP17.VGA_.ATRM.M202 */
                }
            }
            Else
            {
                Local6 = (Local4 - Local5)
            }

            Name (M393, Buffer (Local6)
            {
                 0x00                                             // .
            })
            CreateField (M202, ((Local5 & 0x0FFF) * 0x08), (Local6 * 0x08
                ), M394)
            M393 = M394 /* \_SB_.PCI0.GP17.VGA_.ATRM.M394 */
            Return (M393) /* \_SB_.PCI0.GP17.VGA_.ATRM.M393 */
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN0))
            {
                \_SB.PCI0.GP17.VGA.AFN0 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.VGA.AFN0 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0 ()
            }
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN1))
            {
                \_SB.PCI0.GP17.VGA.AFN1 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.VGA.AFN1 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1 (Arg0)
            }
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN2))
            {
                \_SB.PCI0.GP17.VGA.AFN2 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.VGA.AFN2 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2 (Arg0, Arg1)
            }
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN3))
            {
                \_SB.PCI0.GP17.VGA.AFN3 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.VGA.AFN3 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3 (Arg0, Arg1)
            }
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN4))
            {
                \_SB.PCI0.GP17.VGA.AFN4 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.VGA.AFN4 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4 (Arg0)
            }
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN5))
            {
                \_SB.PCI0.GP17.VGA.AFN5 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.VGA.AFN5 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5 ()
            }
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN6))
            {
                \_SB.PCI0.GP17.VGA.AFN6 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.VGA.AFN6 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6 ()
            }
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN7))
            {
                \_SB.PCI0.GP17.VGA.AFN7 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.VGA.AFN7 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7 (Arg0)
            }
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN8))
        {
            \_SB.PCI0.GPP0.VGA.AFN8 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8))
        {
            \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8 ()
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFNC))
            {
                \_SB.PCI0.GP17.VGA.AFNC (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.VGA.AFNC (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC (Arg0, Arg1)
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    Scope (\_SB)
    {
        Name (MDSZ, 0x01E0)
        OperationRegion (PDSP, SystemIO, 0xB0, One)
        Field (PDSP, ByteAcc, NoLock, Preserve)
        {
            IOB2,   8
        }

        OperationRegion (GPCD, SystemMemory, 0x8EF41000, 0x0200)
        Field (GPCD, AnyAcc, NoLock, Preserve)
        {
            DTSZ,   32, 
            TKNO,   32, 
            PTYP,   8, 
            I_PS,   8, 
            PACT,   8, 
            RSVD,   40, 
            PGUI,   128, 
            DBUF,   3840
        }

        Method (PCDE, 2, Serialized)
        {
            PGUI = Arg0
            TKNO = Arg1
            Local0 = Zero
            IOB2 = 0x17
            If ((I_PS == Zero))
            {
                If ((DTSZ <= MDSZ))
                {
                    Mid (DBUF, Zero, DTSZ, Local0)
                }
            }

            Return (Local0)
        }

        Method (HBID, 0, NotSerialized)
        {
            Local0 = \_SB.PCDE (Buffer (0x10)
                    {
                        /* 0000 */  0x83, 0x18, 0x1F, 0xC5, 0x00, 0xDF, 0x6A, 0x4F,  // ......jO
                        /* 0008 */  0x08, 0xA0, 0x36, 0x9F, 0x60, 0x98, 0xFD, 0xAF   // ..6.`...
                    }, 0x20000032)
            Return (Local0)
        }

        Method (SPBD, 1, Serialized)
        {
            Name (POWR, Zero)
            Name (IDEX, Zero)
            If ((Arg0 == Zero))
            {
                Return (One)
            }

            Local0 = \_SB.PCDE (Buffer (0x10)
                    {
                        /* 0000 */  0x83, 0x18, 0x1F, 0xC5, 0x00, 0xDF, 0x6A, 0x4F,  // ......jO
                        /* 0008 */  0x08, 0xA0, 0x36, 0x9F, 0x60, 0x98, 0xFD, 0xAF   // ..6.`...
                    }, 0x20000033)
            Divide (Arg0, 0x08, IDEX, POWR) /* \_SB_.SPBD.POWR */
            Local1 = DerefOf (Local0 [POWR])
            Local2 = (One << IDEX) /* \_SB_.SPBD.IDEX */
            Local3 = (Local1 & Local2)
            If ((Local3 == Zero))
            {
                Return (Zero)
            }
            Else
            {
                Return (One)
            }
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PCI0.LPC0.EC0_, DeviceObj)
    External (M229, UnknownObj)
    External (Z009, UnknownObj)

    Method (M040, 1, Serialized)
    {
        Return (\_SB.PCI0.LPC0.EC0.M040 (Arg0))
    }

    Method (M041, 2, Serialized)
    {
        \_SB.PCI0.LPC0.EC0.M041 (Arg0, Arg1)
    }

    Method (M319, 2, Serialized)
    {
        \_SB.PCI0.LPC0.EC0.M319 (Arg0, Arg1)
    }

    Method (M038, 1, Serialized)
    {
        Local1 = (Arg0 & 0x07)
        Local2 = (Arg0 >> 0x03)
        Local2 += M229 /* External reference */
        Local0 = M040 (Local2)
        Local0 >>= Local1
        Local0 &= One
        Return (Local0)
    }

    Method (M039, 2, Serialized)
    {
        Local1 = (Arg0 & 0x07)
        Local2 = (Arg0 >> 0x03)
        Local2 += M229 /* External reference */
        Local0 = M040 (Local2)
        Local3 = ((Arg1 & One) << Local1)
        Local4 = (0xFF ^ (One << Local1))
        Local0 &= Local4
        M041 (Local2, (Local0 | Local3))
        Local0 = M040 (0xCF)
        M041 (0xCF, (Local0 | One))
    }

    Scope (\_SB.PCI0.LPC0.EC0)
    {
        Method (M040, 1, Serialized)
        {
            Local1 = Zero
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARM, EmbeddedControl, Local0, One)
                Field (VARM, ByteAcc, NoLock, Preserve)
                {
                    VARR,   8
                }

                Local1 = VARR /* \_SB_.PCI0.LPC0.EC0_.M040.VARR */
                Release (Z009)
            }

            Return (Local1)
        }

        Method (M041, 2, Serialized)
        {
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARM, EmbeddedControl, Local0, One)
                Field (VARM, ByteAcc, NoLock, Preserve)
                {
                    VARR,   8
                }

                Local1 = Arg1
                VARR = Local1
                Release (Z009)
            }
        }

        Method (M319, 2, Serialized)
        {
            If (CondRefOf (Z009))
            {
                Acquire (Z009, 0xFFFF)
                Local0 = Arg0
                OperationRegion (VARI, SystemIO, Local0, One)
                Field (VARI, ByteAcc, NoLock, Preserve)
                {
                    VARO,   8
                }

                Local1 = Arg1
                VARO = Local1
                Release (Z009)
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 18 external control methods found during
     * disassembly, but only 0 were resolved (18 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.MACO, UnknownObj)
    External (_SB_.PCI0.GPP0, DeviceObj)
    External (_SB_.PCI0.GPP0.SWUS, DeviceObj)
    External (_SB_.PCI0.GPP0.SWUS.SWDS, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_.DSPM, UnknownObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M014, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M017, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M018, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M027, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M028, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M085, UnknownObj)
    External (M097, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, IntObj)
    External (M128, UnknownObj)
    External (M133, UnknownObj)
    External (M232, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M275, UnknownObj)

    Scope (\_SB.PCI0.GPP0)
    {
        Name (M236, Buffer (0x0C)
        {
            /* 0000 */  0x04, 0x01, 0x01, 0x01, 0x25, 0x10, 0x4E, 0x13,  // ....%.N.
            /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
        })
        Name (M266, Zero)
        Name (M267, Zero)
        Name (M268, Zero)
        Name (M269, Zero)
        Name (M270, Zero)
        Name (M271, Zero)
        Name (M350, Buffer (0x18)
        {
            /* 0000 */  0x07, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x00,  // ........
            /* 0008 */  0xA0, 0xC0, 0xA0, 0xC0, 0x01, 0xB0, 0x11, 0xC0,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M351, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M352, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M353, Buffer (0x18)
        {
            /* 0000 */  0x03, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x00, 0xC0,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xC0,  // ........
            /* 0010 */  0x02, 0x10, 0x87, 0x69, 0x00, 0x00, 0x00, 0x00   // ...i....
        })
        Name (M354, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M355, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M356, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M357, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Name (M358, Buffer (0x18)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (M371, 5, NotSerialized)
        {
            CreateDWordField (Arg3, Zero, M365)
            CreateDWordField (Arg3, 0x04, M366)
            CreateDWordField (Arg3, 0x08, M367)
            CreateDWordField (Arg3, 0x0C, M368)
            CreateDWordField (Arg3, 0x10, M369)
            CreateDWordField (Arg3, 0x14, M370)
            If ((Arg4 < 0x02))
            {
                If ((Arg4 == Zero))
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    M365
                    0x18 = M019 (Arg0, Arg1, Arg2)
                    M366
                    0x20 = M019 (Arg0, Arg1, Arg2)
                    M367
                    0x24 = M019 (Arg0, Arg1, Arg2)
                    M368
                    0x28 = M019 (Arg0, Arg1, Arg2)
                    M369
                    0x2C = M019 (Arg0, Arg1, Arg2)
                    M370
                }
                Else
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    M365
                    0x18 = M019 (Arg0, Arg1, Arg2)
                    M366
                    0x1C = M019 (Arg0, Arg1, Arg2)
                    M367
                    0x24 = M019 (Arg0, Arg1, Arg2)
                    M368
                     = M019 (Arg0, Arg1, Arg2)
                    M369
                    M370 = Arg0
                }
            }
            Else
            {
                If (((Arg4 & One) == Zero))
                {
                    M020 (Arg0, Arg1, Arg2, 0x18, M366)
                    M020 (Arg0, Arg1, Arg2, 0x20, M367)
                    M020 (Arg0, Arg1, Arg2, 0x24, M368)
                    M020 (Arg0, Arg1, Arg2, 0x28, M369)
                    M020 (Arg0, Arg1, Arg2, 0x2C, M370)
                }
                Else
                {
                    M020 (Arg0, Arg1, Arg2, 0x18, M366)
                    M020 (Arg0, Arg1, Arg2, 0x1C, M367)
                    M020 (Arg0, Arg1, Arg2, 0x24, M368)
                }

                If (((Arg4 & 0x04) == 0x04))
                {
                    M020 (Arg0, Arg1, Arg2, 0x04, (M365 & 0x06FFFFFF))
                }
                Else
                {
                    0x04 = M019 (Arg0, Arg1, Arg2)
                    Local0
                    M020 (Arg0, Arg1, Arg2, 0x04, ((Local0 & 0x06FFFFF8) | 0x02))
                }
            }
        }

        Method (M372, 0, NotSerialized)
        {
            CreateDWordField (M353, 0x10, M362)
            Local0 = Zero
            If (((M362 & 0xFFDF) == 0x1002))
            {
                Local1 = (M362 >> 0x10)
                Local1 &= 0xFFFF
                If (((Local1 >= 0x67C0) && (Local1 <= 0x67DF)))
                {
                    Local0 = 0x10
                }
                ElseIf (((Local1 >= 0x67E0) && (Local1 <= 0x67FF)))
                {
                    Local0 = 0x11
                }
                ElseIf (((Local1 >= 0x6900) && (Local1 <= 0x695F)))
                {
                    Local0 = 0x12
                }
                ElseIf (((Local1 >= 0x6980) && (Local1 <= 0x699F)))
                {
                    Local0 = 0x13
                }
                ElseIf (((Local1 >= 0x6860) && (Local1 <= 0x687F)))
                {
                    Local0 = 0x20
                }
                ElseIf (((Local1 >= 0x69A0) && (Local1 <= 0x69BF)))
                {
                    Local0 = 0x21
                }
                Else
                {
                    Local0 = Zero
                }
            }
            ElseIf (((M362 & 0xFFFF) == 0x10DE))
            {
                Local0 = 0xC0
            }

            Return (Local0)
        }

        Method (M373, 3, NotSerialized)
        {
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M354 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M355 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M356 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M357 = M358 /* \_SB_.PCI0.GPP0.M358 */
            M371 (Arg0, Arg1, Arg2, M354, Zero)
            M020 (Arg0, Arg1, Arg2, 0x18, M359)
            Local0 = (M359 >> 0x08)
            Local0 &= 0xFF
            If ((M360 != Zero))
            {
                M371 (Local0, Zero, Zero, M355, Zero)
                M020 (Local0, Zero, Zero, 0x18, M360)
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
            }

            If (((M360 != Zero) && (M361 != Zero)))
            {
                M371 (Local0, Zero, Zero, M356, Zero)
                M020 (Local0, Zero, Zero, 0x18, M361)
                Local0 = (M361 >> 0x08)
                Local0 &= 0xFF
            }

            M371 (Local0, Zero, Zero, M357, One)
        }

        Method (M374, 3, NotSerialized)
        {
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M371 (Arg0, Arg1, Arg2, M350, 0x02)
            Local0 = (M359 >> 0x08)
            Local0 &= 0xFF
            If ((M360 != Zero))
            {
                M371 (Local0, Zero, Zero, M351, 0x02)
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
            }

            If (((M360 != Zero) && (M361 != Zero)))
            {
                M371 (Local0, Zero, Zero, M352, 0x02)
                Local0 = (M361 >> 0x08)
                Local0 &= 0xFF
            }

            M371 (Local0, Zero, Zero, M353, 0x03)
        }

        Method (M375, 0, Serialized)
        {
            CreateQWordField (M353, 0x04, M363)
            CreateDWordField (M353, 0x0C, M364)
            Local0 = M372 ()
            If (((Local0 >= Zero) && (Local0 <= 0x0F)))
            {
                M232 (M097 (Zero, 0x10), ElseIf (((Local0 >= 0x10) && 
                    (Local0 <= 0x1F)))
                    {
                        Store (M013 ((M364 & 0xFFFFFFF0), 0x5418, Zero, 0x20, Local2, M014 ((
                            M364 & 0xFFFFFFF0), 0x5418, Zero, 0x20, (Local2 & 0xFFFFFFFD)), ElseIf ((
                            (Local0 >= 0x20) && (Local0 <= 0xBF)))
                                {
                                    Store (M013 ((M364 & 0xFFFFFFF0), 0x34E0, Zero, 0x20, Local2, M014 ((
                                        M364 & 0xFFFFFFF0), 0x34E0, Zero, 0x20, (Local2 & 0xEFFFFFFF)))
                                })
                    })
            }
        }

        Method (M376, 0, Serialized)
        {
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M236, 0x04, M246)
            CreateDWordField (M236, 0x08, M247)
            Local0 = M372 ()
            If (((Local0 >= Zero) && (Local0 <= 0xBF)))
            {
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                M020 (M245, Zero, Zero, 0x4C, M246)
                 = M019 (M245, Zero, One)
                Local1
                If (((Local1 != Local2) && (M247 != Local2)))
                {
                    M020 (M245, Zero, One, 0x4C, M247)
                }
            }
        }

        Method (M377, 3, NotSerialized)
        {
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M350, 0x04, M359)
            CreateDWordField (M351, 0x04, M360)
            CreateDWordField (M352, 0x04, M361)
            M371 (M245, Zero, Zero, M357, 0x05)
            If (((M360 != Zero) && (M361 != Zero)))
            {
                Local0 = (M360 >> 0x08)
                Local0 &= 0xFF
                M371 (Local0, Zero, Zero, M356, 0x04)
            }

            If ((M360 != Zero))
            {
                Local0 = (M359 >> 0x08)
                Local0 &= 0xFF
                M371 (Local0, Zero, Zero, M355, 0x04)
            }

            M371 (Arg0, Arg1, Arg2, M354, 0x04)
        }

        Mutex (EEBC, 0x00)
        Method (M241, 1, NotSerialized)
        {
            Acquire (EEBC, 0xFFFF)
            CreateByteField (M236, Zero, M242)
            CreateByteField (M236, One, M243)
            CreateByteField (M236, 0x02, M244)
            CreateByteField (M236, 0x03, M245)
            CreateDWordField (M236, 0x04, M246)
            CreateDWordField (M236, 0x08, M247)
            Name (M272, Zero)
            Name (M273, Zero)
            Name (M274, Zero)
            ((0x65 = (M049 >> M128)) /* External reference */ & 0x05)
            One
            M273
            ((0x65 = (M049 >> M128)) /* External reference */ & 0x06)
            One
            M274
            If ((M273 != One))
            {
                Local7 = Buffer (0x05){}
                CreateWordField (Local7, Zero, M197)
                CreateField (Local7, 0x10, 0x03, M200)
                CreateField (Local7, 0x13, 0x05, M199)
                CreateByteField (Local7, 0x03, M198)
                CreateByteField (Local7, 0x04, M201)
                M197 = 0x05
                M198 = Zero
                Local0 = M243 /* \_SB_.PCI0.GPP0.M241.M243 */
                M199 = Local0
                Local0 = M244 /* \_SB_.PCI0.GPP0.M241.M244 */
                M200 = Local0
            }

            If ((M085 >= 0x09))
            {
                Local3 = Buffer (0x08){}
                CreateWordField (Local3, Zero, M254)
                CreateByteField (Local3, 0x02, M255)
                CreateDWordField (Local3, 0x03, M256)
                M254 = 0x07
                M255 = 0x10
            }

            M133 = M049 /* External reference */
            0x01D4
            M266
            M133 = M049 /* External reference */
            0x01D5
            M267
            M133 = M049 /* External reference */
            0x01D6
            M268
            M133 = M049 /* External reference */
            0x01D7
            M269
            M133 = M049 /* External reference */
            0x01D8
            M270
            M133 = M049 /* External reference */
            0x01D9
            M271
            Local0 = ((M084 + 0x1502) + (M266 * 0x04))
            OperationRegion (VAMM, SystemMemory, Local0, One)
            Field (VAMM, ByteAcc, NoLock, Preserve)
            {
                P011,   8
            }

            Local0 = ((M084 + 0x1502) + (M267 * 0x04))
            OperationRegion (VANN, SystemMemory, Local0, One)
            Field (VANN, ByteAcc, NoLock, Preserve)
            {
                P141,   8
            }

            If ((M274 == One))
            {
                Local6 = One
            }
            Else
            {
                M242 = M113 /* External reference */
                Local6
            }

            M023 (Zero, M243, M244)
            If ((M275 == M242))
            {
                Arg0
                Zero
                If ((Arg0 && Local6))
                {
                    \_SB.PCI0.LPC0.EC0.DSPM = Zero
                    M000 (0x9D)
                    If ((\_SB.MACO == One))
                    {
                        P141 = 0xC4
                        Sleep (M270)
                        M112 (M242, One)
                        Sleep (M271)
                        P011 = 0x84
                        \_SB.MACO = Zero
                    }
                    Else
                    {
                        M112 (M242, Zero)
                        M111 (M242, One)
                        Sleep (0x20)
                        M112 (M242, 0x02)
                        M112 (M242, One)
                        Sleep (0x64)
                    }

                    M000 (0x9E)
                    M272 = One
                    If ((M273 == One))
                    {
                        0x08 = M017 (Zero, M243, M244, 0x68, Zero)
                        Local1
                        M018 (Zero, M243, M244, 0x68, Zero, 0x08, (Local1 & 0xEF))
                        Sleep (0x18)
                        M244 = M025 (Zero, M243)
                        Local1
                        Local1 = Zero
                        While (((Local1 & 0x28) != 0x20))
                        {
                            M000 (0xC0)
                            0x08 = M017 (Zero, M243, M244, 0x6B, Zero)
                            Local1
                        }
                    }
                    Else
                    {
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        If ((M085 < 0x08))
                        {
                            M272 = Zero
                            Local2 = Zero
                            While ((Local2 < 0x0F))
                            {
                                M023 (Zero, M243, M244)
                                Local4 = One
                                Local5 = 0xC8
                                While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (Zero, M243, M244)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                    {
                                        Local4 = Zero
                                    }
                                    Else
                                    {
                                        Sleep (0x05)
                                        Local5--
                                    }
                                }

                                If (!Local4)
                                {
                                    M244 = M024 (Zero, M243)
                                    Local5
                                    If (Local5)
                                    {
                                        M026 (Zero, M243, M244)
                                        Sleep (0x05)
                                        Local2++
                                    }
                                    Else
                                    {
                                        Local0 = Zero
                                        If ((M025 (Zero, M243) == M244))
                                        {
                                            Ones
                                            Local0 = One
                                        }

                                        If (Local0)
                                        {
                                            M272 = One
                                            Local2 = 0x10
                                        }
                                        Else
                                        {
                                            M272 = Zero
                                            Local2 = 0x10
                                        }
                                    }
                                }
                                Else
                                {
                                    Local2 = 0x10
                                }
                            }

                            If (!M272)
                            {
                                M000 (0x9F)
                                 = M019 (M245, Zero, Zero)
                                Local1
                                Sleep (0x0A)
                                Local4 = One
                                Local5 = 0x05
                                While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (Zero, M243, M244)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                    {
                                        Local4 = Zero
                                    }
                                    Else
                                    {
                                         = M019 (M245, Zero, Zero)
                                        Local0
                                        Sleep (0x05)
                                        Local5--
                                    }
                                }

                                M201 = Zero
                                \_SB.ALIB
                                0x06
                                Local7
                            }
                        }
                    }

                    M000 (0xC1)
                    If ((M272 == One))
                    {
                        Local6 = 0x7FFFFFFF
                        Local6 |= 0x80000000
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        0x08 = M017 (Zero, M243, M244, 0x19, Zero)
                        Local2
                        Local4 = One
                        Local5 = 0x28
                        While ((Local4 && Local5))
                        {
                             = M019 (Local2, Zero, Zero)
                            Local0
                            If ((Local0 != Local6))
                            {
                                Local0 = M372 ()
                                If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                                {
                                    M373 (Zero, M243, M244)
                                    M374 (Zero, M243, M244)
                                    If ((M097 (Zero, M375 ()) != M376 ())){}
                                    M377 (Zero, M243, M244)
                                }

                                Local4 = Zero
                            }
                            Else
                            {
                                Sleep (0x19)
                                Local5--
                            }
                        }

                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF))
                    }

                    If ((M085 >= 0x09))
                    {
                        Local0 = M372 ()
                        If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                        {
                            M256 = One
                            \_SB.ALIB
                            0x0C
                            Local3
                        }
                    }

                    M000 (0xA0)
                }
                Else
                {
                    \_SB.PCI0.LPC0.EC0.DSPM = One
                    M000 (0xA1)
                    If ((M085 >= 0x09))
                    {
                        Local0 = M372 ()
                        If (((Local0 >= Zero) && (Local0 <= 0xBF)))
                        {
                            M256 = Zero
                            \_SB.ALIB
                            0x0C
                            Local3
                        }
                    }

                    If ((M273 == One))
                    {
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        Sleep (One)
                        0x08 = M017 (Zero, M243, M244, 0x19, Zero)
                        Local2
                        M028 (Local2, Zero, Zero, Zero)
                        M018 (Zero, M243, M244, 0x68, Zero, 0x08, (Local1 | 0x10)) = 
                            M027 (Local2, Zero, Zero, Local3, M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF
                            )), 0x08 = M017 (Zero, M243, M244, 0x68, Zero), Local1)
                        Sleep (0x18)
                    }
                    Else
                    {
                        0x54 = M019 (Zero, M243, M244)
                        Local1
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFC))
                        M201 = Zero
                        \_SB.ALIB
                        0x06
                        Local7
                        M020 (Zero, M243, M244, 0x54, (Local1 & 0xFFFF7FFF))
                    }

                    M000 (0xA2)
                    If ((\_SB.MACO == One))
                    {
                        P011 = 0xC4
                        Stall (M268)
                        P141 = 0x84
                        Sleep (M269)
                        M112 (M242, Zero)
                    }
                    Else
                    {
                        M112 (M242, Zero)
                        Sleep (0x0A)
                        M111 (M242, Zero)
                    }

                    M023 (Zero, M243, M244)
                     = M019 (M245, Zero, Zero)
                    Local1
                    Sleep (0x0A)
                    If ((M085 < 0x08))
                    {
                        Local4 = One
                        Local5 = 0x05
                        While ((Local4 && Local5))
                        {
                            0xA5 = M021 (Zero, M243, M244)
                            Local0
                            Local0 &= 0x7F
                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                            {
                                Local4 = Zero
                            }
                            Else
                            {
                                 = M019 (M245, Zero, Zero)
                                Local1
                                Sleep (0x05)
                                Local5--
                            }
                        }
                    }

                    M000 (0xA3)
                    M272 = 0x02
                }
            }

            Release (EEBC)
        }

        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                If ((M239 == Zero))
                {
                    M241 (One)
                }

                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                If ((M239 == One))
                {
                    M241 (Zero)
                }

                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }

    Scope (\_SB.PCI0.GPP0.SWUS)
    {
        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.SWUS.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }

    Scope (\_SB.PCI0.GPP0.SWUS.SWDS)
    {
        PowerResource (M237, 0x00, 0x0000)
        {
            Name (M239, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (M239) /* \_SB_.PCI0.GPP0.SWUS.SWDS.M237.M239 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                M239 = One
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                M239 = Zero
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            M237
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            M237
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            M237
        })
        Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    Scope (\_SB)
    {
        Device (TPM2)
        {
            Name (_HID, "MSFT0101" /* TPM 2.0 Security Device */)  // _HID: Hardware ID
            Name (_CID, "MSFT0101" /* TPM 2.0 Security Device */)  // _CID: Compatible ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x8EDF5000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x8EDF9000,         // Address Base
                    0x00004000,         // Address Length
                    )
            })
            OperationRegion (SMIP, SystemIO, 0xB0, One)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            OperationRegion (TNVS, SystemMemory, 0x8F350000, 0x27)
            Field (TNVS, AnyAcc, NoLock, Preserve)
            {
                PPIN,   8, 
                PPIP,   32, 
                PPRP,   32, 
                PPRQ,   32, 
                PPRM,   32, 
                LPPR,   32, 
                FRET,   32, 
                MCIN,   8, 
                MCIP,   32, 
                MORD,   32, 
                MRET,   32, 
                CAIN,   8
            }

            OperationRegion (CONA, SystemMemory, 0x8F34F000, 0x30)
            Field (CONA, DWordAcc, NoLock, Preserve)
            {
                HRTB,   32, 
                ERRR,   32, 
                CLFG,   32, 
                STA1,   32, 
                AccessAs (QWordAcc, 0x00), 
                INTC,   64, 
                AccessAs (DWordAcc, 0x00), 
                CMSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                CMDB,   64, 
                AccessAs (DWordAcc, 0x00), 
                RPSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                RESP,   64
            }

            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(MORD & 0x10))
                    {
                        MCIP = 0x02
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                    }
                }

                Return (Zero)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (HINF, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Name (TPMV, Package (0x02)
                        {
                            One, 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        })
                        If ((_STA () == Zero))
                        {
                            Return (Package (0x01)
                            {
                                Zero
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM2.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        PPRQ = DerefOf (Arg2 [Zero])
                        PPIP = 0x02
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x03)
                    {
                        TPM2 [One] = PPRQ /* \_SB_.TPM2.PPRQ */
                        Return (TPM2) /* \_SB_.TPM2.TPM2 */
                    }
                    Case (0x04)
                    {
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        PPIP = 0x05
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        TPM3 [One] = LPPR /* \_SB_.TPM2.LPPR */
                        TPM3 [0x02] = PPRP /* \_SB_.TPM2.PPRP */
                        Return (TPM3) /* \_SB_.TPM2.TPM3 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        PPIP = 0x07
                        PPRQ = DerefOf (Arg2 [Zero])
                        PPRM = Zero
                        If ((PPRQ == 0x17))
                        {
                            PPRM = DerefOf (Arg2 [One])
                        }

                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x08)
                    {
                        PPIP = 0x08
                        PPRQ = DerefOf (Arg2 [Zero])
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (TMCI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        MORD = DerefOf (Arg2 [Zero])
                        MCIP = One
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                        Return (MRET) /* \_SB_.TPM2.MRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (OASM, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Return (Zero)
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8")))
                {
                    Return (HINF (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    Return (TPPI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d")))
                {
                    Return (TMCI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4")))
                {
                    Return (OASM (Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 2, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08,  // ........
            /* 0028 */  0x0B, 0x00, 0x03, 0x00, 0x03, 0x01, 0x01, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x07, 0x01,  // ........
            /* 0040 */  0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04,  // ........
            /* 0050 */  0x04, 0xFF, 0xFF, 0x02, 0x00, 0x01, 0x07, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x05, 0x05, 0xFF, 0xFF, 0x03,  // ........
            /* 0068 */  0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0088 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 00B0 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A014)
                CreateWordField (Arg1, 0x02, A015)
                CreateDWordField (Arg1, 0x04, A016)
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A017)
                A017 = A014 /* \_SB_.ALIB.A014 */
                CreateWordField (Local0, 0x02, A018)
                A018 = A015 /* \_SB_.ALIB.A015 */
                CreateDWordField (Local0, 0x04, A019)
                A019 = A016 /* \_SB_.ALIB.A016 */
                A019 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A019 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A020 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A023 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A024 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A025 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A026 (Arg1)
            }

            If ((Arg0 == 0x10))
            {
                Local7 = Buffer (0x18){}
                CreateDWordField (Local7, 0x00, A027)
                CreateDWordField (Local7, 0x04, A028)
                CreateDWordField (Local7, 0x08, A029)
                CreateDWordField (Local7, 0x0C, A030)
                CreateDWordField (Local7, 0x10, A031)
                CreateDWordField (Local7, 0x14, A032)
                A027 = 0x00
                A028 = 0x00
                A029 = 0x00
                A030 = 0x00
                A031 = 0x00
                A032 = 0x00
                A012 (0x51, Local7)
            }

            If ((Arg0 == 0x11))
            {
                Local6 = Buffer (0x18){}
                CreateDWordField (Local6, 0x00, A006)
                CreateDWordField (Local6, 0x04, A007)
                CreateDWordField (Local6, 0x08, A008)
                CreateDWordField (Local6, 0x0C, A009)
                CreateDWordField (Local6, 0x10, A010)
                CreateDWordField (Local6, 0x14, A011)
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                A012 (0x52, Local6)
            }

            Return (0x00)
        }

        Method (A023, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A084 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local2 = A085 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A017)
            CreateByteField (Local7, 0x02, A034)
            CreateByteField (Local7, 0x03, A086)
            A017 = 0x04
            A034 = 0x00
            If ((Local2 == 0x00))
            {
                A086 = 0x00
            }
            Else
            {
                A086 = 0x01
            }

            Return (Local7)
        }

        Method (A084, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A079 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A079 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A079 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A079 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A079 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A079 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A079 (Arg1))
            }
        }

        Method (A085, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A080 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A080 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A080 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A080 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A080 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A080 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A080 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A020, 1, NotSerialized)
        {
            AD00 = Arg0
            A005 ()
        }

        Method (A024, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A025, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A033, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A017)
            A017 = 0x03
            CreateByteField (Local7, 0x02, A034)
            A034 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A034 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A034 = 0x01
                Return (Local7)
            }

            A035 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A036 ()
            A034 = 0x02
            Return (Local7)
        }

        Method (A037, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A036 ()
        }

        Method (A038, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A039, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A040, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A041 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A036 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A042, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A035, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                If ((A043 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A044 (Local0)
                        A045 (Local0, Local1)
                    }
                    Else
                    {
                        A045 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A046, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A048, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A049 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A036, 0, NotSerialized)
        {
            A048 ()
            A046 ()
            If ((AP02 != AP01))
            {
                A013 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                Local2 = A050 (Local0)
                If ((Local1 != Local2))
                {
                    A051 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A051 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A051, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A052 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A052 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A052 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A052 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A052 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A052 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A052 (Arg1))
            }
        }

        Method (A050, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A053 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A053 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A053 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A053 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A053 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A053 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A053 ())
            }
        }

        Method (A047, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A054 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A054 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A054 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A054 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A054 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A054 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A054 ())
            }
        }

        Method (A049, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A055 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A055 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A055 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A055 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A055 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A055 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A055 ())
            }
        }

        Method (A044, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A056 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A056 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A056 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A056 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A056 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A056 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A056 ())
            }
        }

        Method (A045, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A057 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A057 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A057 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A057 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A057 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A057 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A057 (Arg1))
            }
        }

        Method (A043, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A058 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A058 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A058 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A058 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A058 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A058 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A058 (Arg1))
            }
        }

        Method (A041, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A059 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A059 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A059 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A059 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A059 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A059 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A059 ())
            }
        }

        OperationRegion (A111, SystemMemory, AGRB, 0x1000)
        Field (A111, DWordAcc, Lock, Preserve)
        {
            Offset (0xB8), 
            A112,   32
        }

        BankField (A111, A112, 0x03B10528, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A109,   32
        }

        BankField (A111, A112, 0x03B10564, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A103,   32
        }

        BankField (A111, A112, 0x03B10998, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A071,   32
        }

        BankField (A111, A112, 0x03B1099C, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A104,   32
        }

        BankField (A111, A112, 0x03B109A0, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A105,   32
        }

        BankField (A111, A112, 0x03B109A4, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A106,   32
        }

        BankField (A111, A112, 0x03B109A8, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A107,   32
        }

        BankField (A111, A112, 0x03B109AC, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A108,   32
        }

        BankField (A111, A112, 0x13B00084, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A089,   32
        }

        BankField (A111, A112, 0x11140280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A090,   32
        }

        BankField (A111, A112, 0x11141280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A091,   32
        }

        BankField (A111, A112, 0x11142280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A092,   32
        }

        BankField (A111, A112, 0x11143280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A093,   32
        }

        BankField (A111, A112, 0x11144280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A094,   32
        }

        BankField (A111, A112, 0x11145280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A095,   32
        }

        BankField (A111, A112, 0x11146280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A096,   32
        }

        Method (A087, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A067 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A067 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A067 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A067 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A067 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A067 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A067 (Arg1))
            }
        }

        Method (A088, 2, NotSerialized)
        {
            If ((Arg1 == 0x01))
            {
                If ((Arg0 == 0x00))
                {
                    Local0 = 0x00090300
                }

                If ((Arg0 == 0x01))
                {
                    Local0 = 0x000A0300
                }

                If ((Arg0 == 0x02))
                {
                    Local0 = 0x000B0300
                }

                If ((Arg0 == 0x03))
                {
                    Local0 = 0x000C0300
                }

                If ((Arg0 == 0x04))
                {
                    Local0 = 0x000D0300
                }

                If ((Arg0 == 0x05))
                {
                    Local0 = 0x000E0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x000F0300
                }

                Local1 = A089 /* \_SB_.A089 */
                Local1 &= 0xFF00FCFF
                A089 = (Local0 | Local1)
                Local1 = A089 /* \_SB_.A089 */
                A089 = (0xFFFFFDFF & Local1)
            }
            ElseIf ((Arg1 == 0x00))
            {
                If ((Arg0 == 0x00))
                {
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0x00400000 | Local1)
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x01))
                {
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0x00400000 | Local1)
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x02))
                {
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0x00400000 | Local1)
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x03))
                {
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0x00400000 | Local1)
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x04))
                {
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0x00400000 | Local1)
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x05))
                {
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0x00400000 | Local1)
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x06))
                {
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0x00400000 | Local1)
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0xFFBFFFFF & Local1)
                }
            }
        }

        Method (A004, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A087 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    A088 (Local0, Arg1)
                    Break
                }

                Local0++
            }
        }

        Method (A012, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A097)
            CreateDWordField (Arg1, 0x04, A098)
            CreateDWordField (Arg1, 0x08, A099)
            CreateDWordField (Arg1, 0x0C, A100)
            CreateDWordField (Arg1, 0x10, A101)
            CreateDWordField (Arg1, 0x14, A102)
            A103 = 0x00
            While ((A103 != 0x00)){}
            A071 = A097 /* \_SB_.A012.A097 */
            A104 = A098 /* \_SB_.A012.A098 */
            A105 = A099 /* \_SB_.A012.A099 */
            A106 = A100 /* \_SB_.A012.A100 */
            A107 = A101 /* \_SB_.A012.A101 */
            A108 = A102 /* \_SB_.A012.A102 */
            A109 = Arg0
            While ((A103 == 0x00)){}
        }

        Method (A082, 5, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg0
            A007 = Arg1
            A008 = Arg2
            A009 = Arg3
            A012 (0x0A, Local7)
        }

        Method (A026, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A110)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            Local0 = 0x02
            While ((Local0 < A110))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                If ((Local1 == 0x01))
                {
                    A006 = Local2
                    A012 (0x1E, Local7)
                }

                If ((Local1 == 0x03))
                {
                    A006 = Local2
                    A012 (0x1F, Local7)
                }

                If ((Local1 == 0x05))
                {
                    A006 = Local2
                    A012 (0x1A, Local7)
                }

                If ((Local1 == 0x06))
                {
                    A006 = Local2
                    A012 (0x1B, Local7)
                }

                If ((Local1 == 0x07))
                {
                    A006 = Local2
                    A012 (0x1C, Local7)
                }

                If ((Local1 == 0x08))
                {
                    A006 = Local2
                    A012 (0x1D, Local7)
                }

                If ((Local1 == 0x09))
                {
                    A006 = Local2
                    A012 (0x26, Local7)
                }

                If ((Local1 == 0x0A))
                {
                    A006 = Local2
                    A012 (0x27, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A006 = Local2
                    A012 (0x20, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A006 = Local2
                    A012 (0x22, Local7)
                }

                If ((Local1 == 0x0D))
                {
                    A006 = Local2
                    A012 (0x24, Local7)
                }

                If ((Local1 == 0x0F))
                {
                    A006 = Local2
                    A012 (0x25, Local7)
                }

                If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
                {
                    If ((Local1 == 0x10))
                    {
                        If ((Local2 == 0x00))
                        {
                            A012 (0x2B, Local7)
                        }
                        Else
                        {
                            A012 (0x2A, Local7)
                        }
                    }
                }
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR0.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR0.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR1.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR1.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR2.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR2.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR3.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR3.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR4.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR4.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR5)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x85)  // _UID: Unique ID
                Name (AB12, 0x84)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR5.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR5.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR5.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR5.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR5.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR6)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x86)  // _UID: Unique ID
                Name (AB12, 0x98)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR6.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR6.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR6.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR6.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR6.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Method (A003, 0, Serialized)
        {
            If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A113 (Local0)
                    Local0++
                }
            }
        }

        Method (A070, 3, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg1
            A007 = Arg2
            A012 (Arg0, Local7)
        }

        Method (A113, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A068 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A068 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A068 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A068 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A068 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A068 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A068 ())
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)){}
        }

        Method (AWAK, 1, NotSerialized)
        {
            A003 ()
            If ((Arg0 == 0x03)){}
        }

        Method (APPM, 1, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [0x04])
            Local1 = DerefOf (Arg0 [0x02])
            A004 (Local0, Local1)
        }

        Method (A005, 0, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = 0x00
            A007 = 0x00
            A008 = 0x00
            A009 = 0x00
            A010 = 0x00
            A011 = 0x00
            If ((AD00 == 0x00))
            {
                A012 (0x18, Local7)
            }
            Else
            {
                A012 (0x19, Local7)
            }
        }

        Method (A013, 2, NotSerialized)
        {
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : BA
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]               Platform Class : 0000
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]              Control Address : 00000000FDE10510
[030h 0048   4]                 Start Method : 02 [ACPI Start Method]

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 52 (0x34)

    0000: 54 50 4D 32 34 00 00 00 04 BA 41 43 52 53 59 53  // TPM24.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 10 05 E1 FD 00 00 00 00  // ................
    0030: 02 00 00 00                                      // ....


UEFI
----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000236
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : C0
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  16]              UUID Identifier : 9D4BF935-A674-4710-BA02-BF0AA1758C7B
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 566 (0x236)

    0000: 55 45 46 49 36 02 00 00 01 C0 41 43 52 53 59 53  // UEFI6.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 35 F9 4B 9D 74 A6 10 47 BA 02 BF 0A  // ....5.K.t..G....
    0030: A1 75 8C 7B 36 00 24 42 56 44 54 24 00 00 00 24  // .u.{6.$BVDT$...$
    0040: 00 00 00 24 56 31 2E 30 37 00 00 00 00 00 00 00  // ...$V1.07.......
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 24 45 48 35  // ............$EH5
    0060: 4C 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // LP..............
    0070: 00 00 00 00 00 00 24 30 35 2E 33 32 2E 34 30 00  // ......$05.32.40.
    0080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF  // ................
    00A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0100: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0110: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0120: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0130: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0150: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0160: FF FF FF FF FF 24 42 4D 45 24 00 90 6D 00 00 10  // .....$BME$..m...
    0170: 00 00 24 00 00 80 00 00 00 00 00 24 00 FF FF FF  // ..$........$....
    0180: FF FF FF FF FF 24 5F 4D 53 43 5F 56 45 52 3D 40  // .....$_MSC_VER=@
    0190: 06 24 52 44 41 54 45 19 12 04 24 45 53 52 54 07  // .$RDATE...$ESRT.
    01A0: 01 04 81 B6 4B B3 DE FD 48 1F 4D 94 42 21 31 B1  // ....K...H.M.B!1.
    01B0: 0D D7 A0 8B 01 00 00 24 45 4E 44 4F 46 42 56 44  // .......$ENDOFBVD
    01C0: 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // T...............
    01D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0200: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0210: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0220: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0230: FF FF FF FF FF FF                                // ......


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000D484
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : D0
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 54404 (0xD484)

    0000: 56 46 43 54 84 D4 00 00 01 D0 41 43 52 53 59 53  // VFCT......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 D8 15 00 00 00 00  // ................
    0060: 01 00 00 00 00 D4 00 00 55 AA 6A E9 FF 01 00 00  // ........U.j.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: B0 01 00 00 00 00 49 42 4D BB 1C 90 00 00 00 00  // ......IBM.......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: 86 01 00 00 00 00 00 00 30 31 2F 30 33 2F 31 39  // ........01/03/19
    00C0: 2C 31 30 3A 30 34 3A 35 38 00 00 00 E9 ED 02 00  // ,10:04:58.......
    00D0: E9 F7 02 00 00 00 70 00 31 31 33 2D 52 41 56 45  // ......p.113-RAVE
    00E0: 4E 32 2D 31 31 34 00 52 41 56 45 4E 32 00 50 43  // N2-114.RAVEN2.PC
    00F0: 49 5F 45 58 50 52 45 53 53 00 30 00 0D 0A 52 61  // I_EXPRESS.0...Ra
    0100: 76 65 6E 32 20 47 65 6E 65 72 69 63 20 56 42 49  // ven2 Generic VBI
    0110: 4F 53 20 20 20 20 20 20 20 20 20 20 20 20 20 20  // OS              
    0120: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0130: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0140: 20 20 20 20 20 20 20 20 20 20 0D 0A 00 0D 0A 20  //           ..... 
    0150: 0D 0A 00 28 43 29 20 31 39 38 38 2D 32 30 31 30  // ...(C) 1988-2010
    0160: 2C 20 41 64 76 61 6E 63 65 64 20 4D 69 63 72 6F  // , Advanced Micro
    0170: 20 44 65 76 69 63 65 73 2C 20 49 6E 63 2E 00 41  //  Devices, Inc..A
    0180: 54 4F 4D 42 49 4F 53 42 4B 2D 41 4D 44 20 56 45  // TOMBIOSBK-AMD VE
    0190: 52 30 31 36 2E 30 30 32 2E 30 30 30 2E 30 31 30  // R016.002.000.010
    01A0: 2E 30 30 30 30 30 30 00 52 61 76 65 6E 32 47 65  // .000000.Raven2Ge
    01B0: 6E 65 72 69 00 31 37 32 35 35 35 36 31 00 34 33  // neri.17255561.43
    01C0: 38 34 38 38 20 20 00 20 20 20 20 20 20 20 20 00  // 8488  .        .
    01D0: 41 6D 64 52 61 76 65 6E 32 5F 47 65 6E 65 72 69  // AmdRaven2_Generi
    01E0: 63 5C 63 6F 6E 66 69 67 2E 68 00 00 00 90 28 00  // c\config.h....(.
    01F0: 02 02 41 54 4F 4D 00 C0 FF 02 40 01 D5 01 94 00  // ..ATOM....@.....
    0200: 32 03 00 00 00 00 02 10 02 10 B0 01 68 93 0E 94  // 2...........h...
    0210: 00 00 00 00 00 00 00 00 50 43 49 52 02 10 D8 15  // ........PCIR....
    0220: 00 00 18 00 00 00 00 03 6A 00 02 10 00 80 00 00  // ........j.......
    0230: 41 4D 44 20 41 54 4F 4D 42 49 4F 53 00 6A 5B 29  // AMD ATOMBIOS.j[)
    0240: 67 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // g...............
    0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 1E 06 66  // ...............f
    0270: 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F A3  // PfQfRfSfUfVfW...
    0280: 14 00 8C 0E 08 00 B2 20 E8 2B 2F 0B C0 75 14 A2  // ....... .+/..u..
    0290: 02 00 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58  // ..f_f^f]f[fZfYfX
    02A0: 07 1F CB E8 45 30 E8 17 2E 32 D2 8D 3E 86 01 89  // ....E0...2..>...
    02B0: 55 16 E8 3C 11 E8 FF 10 E8 56 12 E8 AD 02 E8 60  // U..<.....V.....`
    02C0: 28 0B C0 74 0C E8 39 00 E8 0D 56 E8 FB 10 E8 5C  // (..t..9...V....\
    02D0: 56 E8 A9 00 B4 80 E8 11 2E 8A C7 66 C1 E0 10 8A  // V..........f....
    02E0: E3 B0 20 66 A3 1C 90 E8 AC 02 E8 0E 11 E8 20 30  // .. f.......... 0
    02F0: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0300: CB 2E 8B 1E 08 00 83 3E 11 03 00 75 04 89 1E 0F  // .......>...u....
    0310: 03 1E 2E 8E 1E 07 03 9C FA 66 C7 06 08 01 65 F0  // .........f....e.
    0320: 00 F0 C7 06 40 00 32 03 89 1E 42 00 C7 06 B4 01  // ....@.2...B.....
    0330: 32 03 89 1E B6 01 C7 06 7C 00 FE 5D 89 1E 7E 00  // 2.......|..]..~.
    0340: C7 06 0C 01 11 62 89 1E 0E 01 C7 06 A8 04 36 58  // .....b........6X
    0350: 89 1E AA 04 2E 8E 1E 0F 03 8B C3 A3 38 58 A3 48  // ............8X.H
    0360: 58 A3 5A 58 9D 1F C3 50 4D 49 44 32 03 5C 48 00  // X.ZX...PMID2.\H.
    0370: 00 00 A0 00 B0 00 B8 00 C0 00 00 00 00 BB 00 00  // ................
    0380: E8 61 10 66 C1 E8 10 A3 B6 01 BB 0B 00 E8 54 10  // .a.f..........T.
    0390: 8D 3E 86 01 66 89 45 18 C3 00 E8 4E 2F 80 FC A0  // .>..f.E....N/...
    03A0: 75 05 E8 3D 00 EB 11 80 FC 4F 75 05 E8 3B 44 EB  // u..=.....Ou..;D.
    03B0: 07 E8 90 49 EB 02 B4 01 E8 55 2F CF E8 2C 2F E8  // ...I.....U/..,/.
    03C0: 20 00 EB 02 B4 01 E8 47 2F CB E8 1E 2F 80 FC 4F  //  ......G/.../..O
    03D0: 75 05 E8 15 44 EB 07 E8 6A 49 EB 02 B4 01 E8 2F  // u...D...jI...../
    03E0: 2F CB 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // /...fPfQfRfSfUfV
    03F0: 66 57 0E 1F 3C 04 75 29 2E A1 1A 00 66 C1 E0 10  // fW..<.u)....f...
    0400: 2E A1 18 00 8D 36 95 00 8A 3C 80 EF 30 B3 02 8B  // .....6...<..0...
    0410: EC 89 5E 0C 89 46 04 66 C1 E8 10 89 46 00 E9 28  // ..^..F.f....F..(
    0420: 01 3C 05 75 18 E8 C2 2C E8 95 2C 2E A1 08 00 8B  // .<.u...,..,.....
    0430: EC 89 56 10 89 46 00 89 5E 04 E9 0C 01 3C 06 75  // ..V..F..^....<.u
    0440: 32 E8 88 0F 66 D1 E0 8B EC 89 46 14 BB 02 00 E8  // 2...f.....F.....
    0450: 92 0F 88 46 18 E8 7C 0F 66 89 46 0C BB 09 00 E8  // ...F..|.f.F.....
    0460: 82 0F 33 C0 66 89 46 00 2E 8B 16 B6 01 89 56 10  // ..3.f.F.......V.
    0470: E9 D6 00 3C 0B 75 24 0A DB 75 11 B9 80 00 BB 02  // ...<.u$..u......
    0480: 00 8B EC 89 5E 0C 89 4E 14 E9 BD 00 8A C7 E8 D0  // ....^..N........
    0490: 00 E8 34 01 0F 84 A9 00 E9 AE 00 3C 17 75 1D E8  // ..4........<.u..
    04A0: 2E 12 74 06 E8 8B 0D E8 16 17 E8 EE 09 E8 FA 0E  // ..t.............
    04B0: 33 C9 8B C8 8B EC 89 4E 14 E9 8D 00 3C 18 75 45  // 3......N....<.uE
    04C0: 0A FF 75 10 E8 B5 11 8B EC 89 46 0C E8 3B 0A 89  // ..u.......F..;..
    04D0: 4E 10 EB 75 E8 F9 11 75 68 BB 00 1C E8 C8 2D 66  // N..u...uh.....-f
    04E0: 0B C0 74 5D 23 C9 74 59 E8 CD 11 BE 00 1C E8 20  // ..t]#.tY....... 
    04F0: 0F 74 4E BE 00 1C B0 40 E8 6F 0F E8 7E 11 8B EC  // .tN....@.o..~...
    0500: 89 46 0C EB 44 3C 82 75 1A 80 FB 05 75 15 0A FF  // .F..D<.u....u...
    0510: 75 0A E8 C2 10 8B EC 89 46 14 EB 2D E8 8F 10 74  // u.......F..-...t
    0520: 18 EB 26 3C 8E 75 12 80 FF 01 74 08 80 FF 02 75  // ..&<.u....t....u
    0530: 08 80 C1 02 E8 E8 10 EB 10 8B EC C6 46 19 02 EB  // ............F...
    0540: 0F 8B EC C6 46 19 01 EB 07 32 E4 8B EC 88 66 19  // ....F....2....f.
    0550: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0560: C3 51 8A C8 B8 01 00 D3 E0 59 C3 E8 C8 2D C3 0C  // .Q.......Y...-..
    0570: 01 C3 50 51 B0 B6 E6 43 B0 33 E6 42 B0 05 E6 42  // ..PQ...C.3.B...B
    0580: E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8 00 E8 FA 28  // .a.....a.......(
    0590: E6 61 59 58 C3 00 1E 56 0E 1F 80 3E 02 00 80 76  // .aYX...V...>...v
    05A0: 05 C6 06 02 00 80 8A 0E 02 00 C1 E1 09 FC C6 06  // ................
    05B0: 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB F6 D4 FE C4  // !..3.2..........
    05C0: 88 26 21 00 5E 1F C3 00 57 0B C0 75 0F E8 2A 0C  // .&!.^...W..u..*.
    05D0: 74 25 E8 24 00 F6 C3 04 74 F3 EB 11 8B C8 E8 40  // t%.$....t......@
    05E0: 25 23 C1 74 12 E8 11 00 F6 C3 04 74 0A 5F 8D 5C  // %#.t.......t._.\
    05F0: 28 E8 4C 06 0B F6 C3 5F C3 50 E8 DF 0B E8 92 24  // (.L...._.P.....$
    0600: E8 A0 24 0A C9 74 69 0A ED 74 10 8A CD B5 02 E8  // ..$..ti..t......
    0610: FB 27 B1 02 8D 9C 48 01 E8 30 2C E8 76 02 F6 C3  // .'....H..0,.v...
    0620: 04 74 08 E8 F2 0C E8 03 23 74 45 8D 5C 28 E8 69  // .t......#tE.\(.i
    0630: 00 56 83 C6 08 E8 CF 22 5E 80 FD 02 75 11 51 E8  // .V....."^...u.Q.
    0640: 0E 18 59 80 FB 00 75 4D 51 B5 08 E8 E8 05 59 8A  // ..Y...uMQ.....Y.
    0650: DD 33 C9 E8 FF 16 0A C0 75 3B E8 37 02 8A EB 8D  // .3......u;.7....
    0660: 5C 28 80 CD 02 E8 3B 00 74 03 80 CD 04 E8 C6 05  // \(....;.t.......
    0670: 8D 9C A6 00 E8 30 2C 0A C0 74 1A 56 83 C6 08 E8  // .....0,..t.V....
    0680: 85 22 5E 8A DD B9 80 00 E8 CA 16 E8 D8 04 74 05  // ."^...........t.
    0690: 33 C9 E8 A1 05 E8 FC 01 58 C3 51 B9 49 00 E8 98  // 3.......X.Q.I...
    06A0: 27 59 C3 51 E8 1A 00 75 14 E8 B9 01 3C 01 75 0D  // 'Y.Q...u....<.u.
    06B0: B9 20 00 E8 27 00 75 05 80 C9 01 EB 02 33 C9 59  // . ..'.u......3.Y
    06C0: C3 53 E8 E2 2B 66 3D 00 FF FF FF 75 0E 83 C3 04  // .S..+f=....u....
    06D0: E8 D4 2B 66 3D FF FF FF 00 75 00 5B C3 50 52 32  // ..+f=....u.[.PR2
    06E0: D2 E8 C3 2B 02 D0 02 D4 66 C1 E8 10 02 D0 02 D4  // ...+....f.......
    06F0: 83 C3 04 E2 EC 0A D2 5A 58 C3 E8 DF 0A 8D 9C 4C  // .......ZX......L
    0700: 01 E8 39 01 E8 8D 01 B5 13 F6 C3 08 75 0C E8 07  // ..9.........u...
    0710: 0C 8A EA 80 FD 13 75 02 B5 03 66 50 8D 9C B8 02  // ......u...fP....
    0720: 66 33 C0 8A C5 E8 DF 2A 66 58 A9 C8 0E 74 55 E8  // f3.....*fX...tU.
    0730: 62 01 F6 C3 08 74 0F E8 0F 05 8D 5C 28 E8 04 01  // b....t.....\(...
    0740: 75 04 E8 72 00 C3 B5 02 E8 23 01 E8 46 01 F6 C3  // u..r.....#..F...
    0750: 04 74 21 8D 5C 28 E8 49 01 E8 94 03 74 05 B5 03  // .t!.\(.I....t...
    0760: E8 0B 01 E8 68 04 E8 21 01 80 FD 00 75 48 B5 02  // ....h..!....uH..
    0770: E8 0D 01 C3 8D 9C 68 01 B8 00 55 E8 5B 11 B5 02  // ......h...U.[...
    0780: E8 FD 00 C3 A9 02 00 74 2D B5 04 E8 E0 00 E8 03  // .......t-.......
    0790: 01 F6 C3 08 74 03 E8 B0 04 8D 9C 68 01 56 E8 CD  // ....t......h.V..
    07A0: 28 8B F7 E8 68 04 5E E8 6A 28 E8 D3 00 8D 5C 28  // (...h.^.j(....\(
    07B0: E8 8A 28 E8 18 04 C3 B5 01 E8 B2 00 B5 02 E8 BF  // ..(.............
    07C0: 00 E8 D0 00 F6 C3 04 75 10 8D 9C 68 01 B8 00 55  // .......u...h...U
    07D0: E8 06 11 B5 02 E8 17 00 C3 E8 C6 00 B5 02 8D 5C  // ...............\
    07E0: 28 E8 6E 00 75 02 B5 01 E8 04 00 E8 E0 03 C3 8D  // (.n.u...........
    07F0: 9C B4 02 B1 02 E8 53 2A B5 02 E8 83 00 C3 8D 9C  // ......S*........
    0800: 4C 01 E8 38 00 E8 8C 00 F6 C3 04 74 23 8D 5C 28  // L..8.......t#.\(
    0810: E8 8F 00 E8 58 28 8D 9C 68 01 06 0E 07 B9 07 00  // ....X(..h.......
    0820: E8 50 26 07 E8 63 00 E8 EE 0A 8D 5C 28 E8 49 28  // .P&..c.....\(.I(
    0830: 8D 5C 28 E8 E7 27 B8 02 00 E8 BE FE C3 B9 61 00  // .\(..'........a.
    0840: E8 F6 25 C3 53 81 C3 05 01 E8 5B 2A 24 06 3C 02  // ..%.S.....[*$.<.
    0850: 5B C3 E8 10 00 3D 01 04 75 0A 53 83 C3 18 E8 46  // [....=..u.S....F
    0860: 2A 5B A8 01 C3 53 83 C3 12 E8 3B 2A 5B C3 8D 9C  // *[...S....;*[...
    0870: B4 02 32 C9 E8 D4 29 C3 8D 9C B4 02 E8 28 2A C3  // ..2...)......(*.
    0880: 8D 9C B4 02 B1 01 E8 C2 29 C3 8D 9C B4 02 B1 01  // ........).......
    0890: E8 D0 29 C3 66 50 8D 9C 48 01 E8 0A 2A 8A D8 66  // ..).fP..H...*..f
    08A0: 58 C3 55 57 51 B9 08 00 BD 00 00 BB 08 00 2B D9  // X.UWQ.........+.
    08B0: D1 E3 8D 58 4E E8 EF 29 E8 E3 01 E2 EE 8D 5C 4B  // ...XN..)......\K
    08C0: E8 E4 29 B9 03 00 8B D0 BF 1A 09 85 55 06 74 17  // ..).........U.t.
    08D0: 66 8B 05 8D 9A F4 01 E8 2D 29 8B 45 04 8D 9A F8  // f.......-).E....
    08E0: 01 E8 3B 29 83 C5 08 83 C7 08 E2 DF 8D 7C 5E B9  // ..;).........|^.
    08F0: 04 00 33 ED 8B DF E8 AE 29 0B C0 74 09 E8 5D 01  // ..3.....)..t..].
    0900: E8 97 00 83 C5 1C 83 C7 12 E2 E9 55 32 ED E8 6F  // ...........U2..o
    0910: FF 8D 5C 28 E8 4E FF 3D 01 04 75 10 83 C3 14 E8  // ..\(.N.=..u.....
    0920: 85 29 24 70 C0 E8 04 8A E8 E8 54 FF 5D 8D 9C A6  // .)$p......T.]...
    0930: 00 E8 73 29 0A C0 74 46 8D 9C A8 00 E8 68 29 3C  // ..s)..tF.....h)<
    0940: 02 75 3B 66 C1 E8 10 3C 04 72 33 8D 9C A8 00 32  // .u;f...<.r3....2
    0950: E4 03 D8 8B FB B9 04 00 8B DF E8 4A 29 0B C0 74  // ...........J)..t
    0960: 15 E8 F9 00 A9 80 00 75 0D E8 2E 00 83 C5 1C 55  // .......u.......U
    0970: 58 83 F8 70 73 08 83 C7 12 49 0B C9 75 DA 59 5F  // X..ps....I..u.Y_
    0980: 5D C3 20 03 58 02 3C 00 01 00 00 04 00 03 3C 00  // ]. .X.<.......<.
    0990: 00 08 80 02 E0 01 3C 00 20 00 51 8D 1D E8 07 29  // ......<. .Q....)
    09A0: 8D 9A 68 01 E8 78 28 8D 5D 02 E8 FA 28 8D 9A 6A  // ..h..x(.]...(..j
    09B0: 01 E8 89 00 8D 5D 05 E8 ED 28 8D 9A 6E 01 E8 7C  // .....]...(..n..|
    09C0: 00 8D 5D 08 E8 E0 28 8B C8 8A DC 66 C1 C8 10 8A  // ..]...(....f....
    09D0: D0 80 E2 0F 8A F0 C0 EE 04 8A EC C0 ED 06 8A FC  // ................
    09E0: C0 EF 04 80 E7 03 80 E4 0F C0 E4 04 0A D4 80 E2  // ................
    09F0: 3F 80 E4 C0 C0 EC 02 0A F4 8B C3 8D 9A 74 01 E8  // ?............t..
    0A00: 1D 28 8D 9A 72 01 8B C1 E8 14 28 8D 9A 76 01 33  // .(..r.....(..v.3
    0A10: C0 8A C6 E8 09 28 8D 9A 78 01 33 C0 8A C2 E8 FE  // .....(..x.3.....
    0A20: 27 8D 5D 0C E8 80 28 8D 9A 7A 01 E8 0F 00 8D 5D  // '.]...(..z.....]
    0A30: 0F E8 73 28 8D 9A 7E 01 E8 E4 27 59 C3 8B C8 8A  // ..s(..~...'Y....
    0A40: D4 66 C1 C8 10 8A F0 80 E6 0F 8A E8 C0 ED 04 8B  // .f..............
    0A50: C1 E8 CB 27 83 C3 02 8B C2 E8 C3 27 C3 8D 5D 11  // ...'.......'..].
    0A60: E8 44 28 8A E0 BA 06 00 C0 E8 07 74 03 80 CA 80  // .D(........t....
    0A70: 8A C4 C0 E8 03 24 03 3C 02 75 03 80 CA 40 3C 03  // .....$.<.u...@<.
    0A80: 75 12 8A C4 D0 E8 A8 01 74 03 80 E2 FD A8 02 74  // u.......t......t
    0A90: 03 80 E2 FB 8B C2 8D 9A 80 01 E8 82 27 C3 3C 01  // ............'.<.
    0AA0: 74 3D 8B D0 0F B6 C6 24 3F 04 3C 8D 9A F8 01 E8  // t=.....$?.<.....
    0AB0: 6D 27 0F B6 C2 83 C0 1F C1 E0 03 8D 9A F4 01 E8  // m'..............
    0AC0: 5D 27 0F B6 DE C1 EB 06 C1 E3 02 2E F7 A7 7A 0A  // ]'............z.
    0AD0: 2E F7 B7 78 0A 8D 9A F6 01 E8 43 27 83 C5 08 C3  // ...x......C'....
    0AE0: 10 00 0A 00 04 00 03 00 05 00 04 00 10 00 09 00  // ................
    0AF0: 8D 9C A6 00 E8 B0 27 0A C0 74 1F 8D 9C A8 00 51  // ......'..t.....Q
    0B00: B1 03 E8 18 00 59 0B DB 74 10 E8 9A 27 32 C0 66  // .....Y..t...'2.f
    0B10: 3D 00 03 0C 00 75 03 0B DB C3 33 DB C3 66 50 52  // =....u....3..fPR
    0B20: E8 84 27 3C 02 75 39 80 FC 03 72 34 66 C1 E8 10  // ..'<.u9...r4f...
    0B30: 32 E4 3C 04 76 2A 03 C3 8B D0 83 C3 04 3B DA 73  // 2.<.v*.......;.s
    0B40: 1F E8 63 27 8A E0 80 E4 E0 C0 EC 05 24 1F 38 CC  // ..c'........$.8.
    0B50: 74 08 32 E4 FE C0 03 D8 EB E3 0B DB 5A 66 58 C3  // t.2.........ZfX.
    0B60: 33 DB 5A 66 58 C3 51 8D 9C A6 00 E8 39 27 0A C0  // 3.ZfX.Q.....9'..
    0B70: 74 1B 8D 9C A8 00 B1 12 E8 18 00 74 10 E8 27 27  // t..........t..''
    0B80: 66 C1 E0 10 80 E4 07 75 04 B0 01 EB 02 32 C0 0A  // f......u.....2..
    0B90: C0 59 C3 66 50 52 E8 0E 27 3C 70 75 2B 66 C1 E8  // .Y.fPR..'<pu+f..
    0BA0: 10 32 E4 83 C3 05 03 C3 8B D0 3B DA 73 1A E8 F6  // .2........;.s...
    0BB0: 26 38 C8 74 0D 66 C1 E8 10 32 E4 83 C0 03 03 D8  // &8.t.f...2......
    0BC0: EB E8 0B DB 5A 66 58 C3 33 DB 5A 66 58 C3 57 66  // ....ZfX.3.ZfX.Wf
    0BD0: 51 8D 9C 68 01 8B FB 8B DF E8 3D 00 0B C9 74 0B  // Q..h......=...t.
    0BE0: 66 8B D1 E8 A1 0F 83 C7 1C EB EC 66 59 5F C3 50  // f..........fY_.P
    0BF0: 53 51 B9 07 00 53 8B DA E8 AC 26 83 F8 00 5B 74  // SQ...S....&...[t
    0C00: 09 66 C1 E3 10 8B DA E8 44 22 59 5B 58 C3 51 53  // .f......D"Y[X.QS
    0C10: B9 07 00 E8 51 22 5B 59 C3 66 50 53 83 C3 06 E8  // ....Q"[Y.fPS....
    0C20: 85 26 5B 8B C8 66 C1 E1 10 53 83 C3 02 E8 77 26  // .&[..f...S....w&
    0C30: 8B C8 5B 66 58 C3 8D 9C 48 01 32 C9 E8 0C 26 C3  // ..[fX...H.2...&.
    0C40: 57 B9 20 00 E8 2C 22 5F C3 E8 83 01 66 8B CA 66  // W. ..,"_....f..f
    0C50: 52 E8 C4 06 E8 D5 1C 66 5A 74 10 E8 3A 06 B3 00  // R......fZt..:...
    0C60: E8 82 19 66 3B CA 73 03 66 8B D1 8D 9C D0 03 E8  // ...f;.s.f.......
    0C70: 35 26 0B C0 75 44 8D 9C 54 02 66 B8 48 3F 00 00  // 5&..uD..T.f.H?..
    0C80: E8 84 25 B5 01 66 81 FA 78 69 00 00 72 25 83 C3  // ..%..f..xi..r%..
    0C90: 04 66 B8 78 69 00 00 E8 6D 25 B5 02 66 81 FA F0  // .f.xi...m%..f...
    0CA0: D2 00 00 72 0E 83 C3 04 66 B8 F0 D2 00 00 E8 56  // ...r....f......V
    0CB0: 25 B5 03 B1 03 E8 CF 01 EB 45 66 B9 08 00 00 00  // %........Ef.....
    0CC0: 66 33 D2 53 8D 9C 54 02 8B D3 5B E8 D9 25 0B C0  // f3.S..T...[..%..
    0CD0: 74 22 66 25 FF FF 00 00 66 D1 E0 53 8B DA E8 26  // t"f%....f..S...&
    0CE0: 25 5B 66 C1 CA 10 FE C2 66 C1 CA 10 83 C2 04 83  // %[f.....f.......
    0CF0: C3 02 E2 D7 66 C1 CA 10 8A EA B1 03 E8 88 01 E8  // ....f...........
    0D00: 38 06 A8 01 74 3F 8D 9C AE 03 E8 9A 25 3C 00 74  // 8...t?......%<.t
    0D10: 34 E8 CF 05 8A EB E8 5C 01 32 ED E8 63 01 E8 A2  // 4......\.2..c...
    0D20: 05 8D 9C BB 02 E8 7F 25 33 C9 8A C8 E8 28 01 66  // .......%3....(.f
    0D30: 3B C2 74 0E 51 E8 43 01 FE C5 E8 44 01 59 E2 EC  // ;.t.Q.C....D.Y..
    0D40: EB 03 B3 00 C3 8D 9C BB 02 E8 5B 25 FE C8 8A E8  // ..........[%....
    0D50: E8 2E 01 8D 9C 40 03 B9 00 00 E8 EE 24 E8 C2 02  // .....@......$...
    0D60: E8 D2 00 E8 0F 01 66 52 E8 AD 05 E8 BE 1B 66 5A  // ......fR......fZ
    0D70: 75 04 B3 00 EB 58 E8 F6 00 80 FD 01 77 07 E8 FA  // u....X......w...
    0D80: 00 0A ED 74 47 E8 1E 03 E8 32 11 80 FB 00 75 1D  // ...tG....2....u.
    0D90: E8 A7 05 A8 01 74 07 B1 0D E8 2B 19 EB 30 B5 01  // .....t....+..0..
    0DA0: E8 9E 05 E8 2F 0F B5 00 E8 96 05 EB 21 E8 BF 00  // ..../.......!...
    0DB0: 80 FD 01 76 07 D0 ED E8 BB 00 EB BA E8 76 00 E8  // ...v.........v..
    0DC0: B3 00 E8 B6 00 FE CD E8 B7 00 EB AA B3 08 C3 8D  // ................
    0DD0: 9C 29 01 E8 D1 24 66 33 D2 8A D0 66 B8 8C 0A 00  // .)...$f3...f....
    0DE0: 00 66 F7 E2 E8 31 05 E8 42 1B 75 3D 66 50 8D 9C  // .f...1..B.u=fP..
    0DF0: 28 01 E8 B2 24 3C 14 66 58 72 2E 66 50 8D 9C D0  // (...$<.fXr.fP...
    0E00: 03 E8 A3 24 0B C0 66 58 74 1F B9 07 00 8D 9C D0  // ...$..fXt.......
    0E10: 03 8B C1 D1 E0 03 D8 E8 8D 24 0B C0 75 02 E2 ED  // .........$..u...
    0E20: 66 25 FF FF 00 00 66 D1 E0 66 0B C0 75 03 B8 48  // f%....f..f..u..H
    0E30: 3F 66 8B D0 C3 8D 9C 2A 01 E8 6B 24 24 0F 8A E8  // ?f.....*..k$$...
    0E40: 0A ED 75 02 B5 01 C3 B5 00 8D 9C 31 01 E8 57 24  // ..u........1..W$
    0E50: A8 01 74 02 B5 01 C3 53 51 E8 1F 00 32 E4 8A C5  // ..t....SQ...2...
    0E60: C1 E0 02 59 8D 9C 54 02 03 D8 E8 3A 24 5B C3 B1  // ...Y..T....:$[..
    0E70: 02 E8 1D 00 C3 B1 02 E8 0D 00 C3 B1 01 E8 11 00  // ................
    0E80: C3 B1 01 E8 01 00 C3 53 8D 9C B8 02 E8 BC 23 5B  // .......S......#[
    0E90: C3 53 8D 9C B8 02 E8 CA 23 5B C3 33 C9 E8 63 20  // .S......#[.3..c 
    0EA0: 75 3C 66 BA 37 F1 FF FF 66 33 C0 E8 E3 04 33 C0  // u<f.7...f3....3.
    0EB0: E8 47 03 74 1C A9 C8 0E 74 F6 E8 3C F7 F6 C3 04  // .G.t....t..<....
    0EC0: 75 05 F6 C3 18 74 E9 E8 30 00 50 E8 2C F8 58 EB  // u....t..0.P.,.X.
    0ED0: DF E8 1C 00 75 08 E8 31 00 8B C1 E8 1C F8 C3 8D  // ....u..1........
    0EE0: 5D 28 66 C1 E3 10 8D 5C 28 B9 49 00 E8 5F 1F C3  // ](f....\(.I.._..
    0EF0: 66 50 E8 B5 04 8B C8 66 58 C3 66 52 66 BA FF FF  // fP.....fX.fRf...
    0F00: FF FF 33 D0 E8 8A 04 66 5A C3 50 53 52 E8 E0 FF  // ..3....fZ.PSR...
    0F10: 75 09 33 C0 E8 E3 02 8B C8 EB 10 83 F9 02 74 0B  // u.3...........t.
    0F20: E8 2C 08 80 FB 01 75 03 83 E1 FD 5A 5B 58 C3 56  // .,....u....Z[X.V
    0F30: 66 33 C0 66 BA 00 F0 FF FF E8 4F 07 66 C1 E6 10  // f3.f......O.f...
    0F40: E8 C4 02 0B C0 74 03 E8 1C 00 E8 2F 07 5E C3 66  // .....t...../.^.f
    0F50: 52 66 8B D0 E8 CA 15 8D 9C 1C 03 E8 49 23 8A C2  // Rf..........I#..
    0F60: E8 A4 22 66 5A C3 50 51 E8 71 02 50 32 C0 E8 00  // .."fZ.PQ.q.P2...
    0F70: 04 E8 CC 01 E8 98 00 8D 9C 40 03 E8 29 23 38 E8  // .........@..)#8.
    0F80: 74 0A 8A C5 E8 80 22 B0 02 E8 E5 03 58 E8 CA 00  // t.....".....X...
    0F90: E8 A8 00 E8 8C 00 8D 9C 4C 01 E8 0A 23 8B C8 8B  // ........L...#...
    0FA0: D3 8D 9C 00 03 E8 FF 22 3B C1 74 05 B0 02 E8 C0  // .......";.t.....
    0FB0: 03 E8 3B FC 8D 9C 00 03 E8 43 15 8D 9C D8 02 E8  // ..;......C......
    0FC0: 45 22 E8 8A FF 66 C1 CE 10 8B FE 66 C1 CE 10 E8  // E"...f.....f....
    0FD0: 95 00 E8 D1 00 E8 24 03 8A E9 8D 9C DC 02 32 C9  // ......$.......2.
    0FE0: E8 68 22 E8 0D 03 66 25 FF 0F 00 00 59 58 66 BA  // .h"...f%....YXf.
    0FF0: FF FF FF FF 33 D0 E8 92 06 33 D2 C3 53 66 50 8D  // ....3....3..SfP.
    1000: 9C D4 02 E8 A1 22 8A C4 E8 FC 21 66 58 5B C3 53  // ....."....!fX[.S
    1010: 66 50 8D 9C D4 02 E8 8E 22 8A E0 E8 E9 21 66 58  // fP......"....!fX
    1020: 5B C3 E8 73 02 E8 2E 02 8A DD E8 7F 16 8A E9 8D  // [..s............
    1030: 9C 3C 03 32 C9 E8 13 22 0B DB C3 83 EC 08 8B EC  // .<.2..."........
    1040: E8 55 02 E8 10 02 E8 05 16 8D 9C 4C 03 E8 57 22  // .U.........L..W"
    1050: 8A 46 00 E8 B1 21 83 C4 08 C3 8D 9C D4 02 E8 46  // .F...!.........F
    1060: 22 32 C0 E8 A1 21 C3 E8 0A 00 8D 9C D0 02 32 C9  // "2...!........2.
    1070: E8 D8 21 C3 B5 00 8D 1D E8 2C 22 66 8B D0 8D 9C  // ..!......,"f....
    1080: 02 03 E8 22 22 0B C0 74 1C 51 8B C8 8D 9C 06 03  // ...""..t.Q......
    1090: E8 14 22 66 C1 E0 10 8B C1 59 66 3B C2 75 04 B5  // .."f.....Yf;.u..
    10A0: 00 EB 02 B5 02 C3 E8 2B 02 8D 9C 40 03 B1 03 E8  // .......+...@....
    10B0: 99 21 E8 D5 F7 8D 9C 40 03 B1 02 E8 8D 21 E8 95  // .!.....@.....!..
    10C0: 01 80 FD 00 75 14 E8 A6 FD E8 8E 02 E8 88 FD 66  // ....u..........f
    10D0: 8B D0 E8 77 02 E8 8E 02 EB 21 E8 4A 02 E8 6C 02  // ...w.....!.J..l.
    10E0: E8 73 01 80 FD 02 B5 04 75 0B 81 FA 74 40 76 05  // .s......u...t@v.
    10F0: B5 08 66 D1 EA E8 6E 02 E8 5F 02 E8 2B 00 C3 66  // ..f...n.._..+..f
    1100: 52 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B  // RR2.........f3..
    1110: C8 5A 51 66 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59  // .ZQf....f..f...Y
    1120: 66 F7 F1 66 8B C8 66 5A C3 B5 00 E8 EA 01 E8 F7  // f..f..fZ........
    1130: 17 75 03 E8 11 FD 8D 9C 48 03 32 C9 E8 0C 21 C3  // .u......H.2...!.
    1140: 53 E8 5F 01 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8  // S._.f....M......
    1150: 55 21 8A E8 8D 9C B4 02 E8 4C 21 8A C8 E8 A6 14  // U!.......L!.....
    1160: 8A EB 5B C3 57 53 53 E8 D6 FF E8 2B 01 5B E8 0B  // ..[.WSS....+.[..
    1170: 15 74 66 80 FD 00 75 29 53 E8 DB FC 66 8B D0 E8  // .tf...u)S...f...
    1180: 08 F7 8A CD 51 E8 E7 FC 8A FD 59 E8 71 FF 5B E8  // ....Q.....Y.q.[.
    1190: 15 21 66 25 FF FF 00 00 66 3B C8 73 39 32 DB EB  // .!f%....f;.s92..
    11A0: 38 80 FD 02 75 16 E8 6F 01 E8 8D 17 74 28 8D 1F  // 8...u..o....t(..
    11B0: E8 F4 20 3D 74 40 76 1E 32 DB EB 1D 80 FD 03 75  // .. =t@v.2......u
    11C0: 15 53 E8 D3 00 B3 03 E8 1B 14 5B E8 D9 20 3B C2  // .S........[.. ;.
    11D0: 76 04 32 DB EB 03 80 CB 01 5B 5F C3 53 8B F0 E8  // v.2......[_.S...
    11E0: 3F 19 23 F0 74 09 8B C6 E8 DE 17 8B F3 0B DB 5B  // ?.#.t..........[
    11F0: C3 51 E8 15 FD E8 0F 00 59 C3 51 50 E8 22 19 8B  // .Q......Y.QP."..
    1200: C8 58 E8 02 00 59 C3 57 53 E8 EC 1A 0B C0 74 09  // .X...Y.WS.....t.
    1210: 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83 FB FF 74 0B  // .....;.u......t.
    1220: 83 C7 02 85 D9 74 F2 8B C3 EB 02 33 C0 0B C0 5B  // .....t.....3...[
    1230: 5F C3 33 C0 E8 C3 FF 74 13 E8 A0 FF 8B DE B9 FB  // _.3....t........
    1240: 00 E8 F5 1B 83 C6 08 E8 87 18 EB E8 BB F0 16 B8  // ................
    1250: 5A A5 E8 CA 1F C3 53 66 50 8D 9C 40 03 E8 47 20  // Z.....SfP..@..G 
    1260: 8A E8 66 58 5B C3 8D 9C 69 03 E8 3A 20 C3 8D 9C  // ..fX[...i..: ...
    1270: 64 03 E8 32 20 0B C0 C3 53 66 50 8D 9C D4 02 E8  // d..2 ...SfP.....
    1280: 25 20 8A C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8  // % ..fX[.SfP.....
    1290: 15 20 8A C8 66 58 5B C3 53 8D 5C 14 E8 08 20 8B  // . ..fX[.S.\... .
    12A0: D0 5B C3 53 66 50 8D 5C 16 E8 FB 1F 8B D0 66 58  // .[.SfP.\......fX
    12B0: 5B C3 53 66 50 8D 9C 50 03 E8 EB 1F 66 8B D0 66  // [.SfP..P....f..f
    12C0: 58 5B C3 53 66 50 8D 9C 54 03 E8 DA 1F 66 8B D0  // X[.SfP..T....f..
    12D0: 66 58 5B C3 53 66 50 8D 5C 10 E8 CA 1F 8B C8 66  // fX[.SfP.\......f
    12E0: 58 5B C3 66 50 53 8D 9C 41 03 E8 BA 1F 5B 8A D8  // X[.fPS..A....[..
    12F0: 66 58 C3 53 8D 5C 08 E8 AD 1F 5B C3 53 50 8D 9C  // fX.S.\....[.SP..
    1300: 4C 03 E8 A2 1F 8A C8 58 5B C3 53 50 8D 9C 4D 03  // L......X[.SP..M.
    1310: E8 94 1F 8A C8 58 5B C3 53 66 50 8D 5C 0C E8 86  // .....X[.SfP.\...
    1320: 1F 8B D0 66 58 5B C3 53 66 50 8D 9C 00 03 E8 76  // ...fX[.SfP.....v
    1330: 1F 66 33 D2 8B D0 66 58 5B C3 8D 5C 04 E8 67 1F  // .f3...fX[..\..g.
    1340: C3 51 8D 5C 04 32 C9 E8 01 1F 59 C3 8D 9C 50 03  // .Q.\.2....Y...P.
    1350: E8 54 1F 66 8B C2 E8 AE 1E C3 53 8D 9C 40 03 B1  // .T.f......S..@..
    1360: 01 E8 E7 1E 5B C3 8D 9C 54 03 66 8B C2 E8 97 1E  // ....[...T.f.....
    1370: C3 53 51 8A E8 E8 C2 FF 24 FD 0A E8 E8 C2 FF 59  // .SQ.....$......Y
    1380: 5B C3 66 50 8D 9C D8 02 E8 1C 1F 66 8B D0 66 58  // [.fP.......f..fX
    1390: C3 53 66 50 51 66 8B C8 BB 00 00 E8 0C 16 23 C2  // .SfPQf........#.
    13A0: 0B C1 E8 0E 16 59 66 58 5B C3 BB 00 00 E8 FA 15  // .....YfX[.......
    13B0: 66 25 CA 0E 00 00 C3 E8 3D 1A E8 B5 19 E8 93 19  // f%......=.......
    13C0: 75 06 E8 6E 17 E8 97 19 C3 B0 01 C3 55 B3 01 E8  // u..n........U...
    13D0: C8 1C 5D C3 66 53 66 BB 04 00 00 00 E8 05 00 33  // ..].fSf........3
    13E0: C0 66 5B C3 55 66 C1 E3 10 BB 00 00 E8 AB 1C 5D  // .f[.Uf.........]
    13F0: C3 E8 FC 1A BB 0A 00 E8 B9 15 C3 BB 0A 00 E8 A9  // ................
    1400: 15 66 8B C8 E8 E9 1A BB 0A 00 66 2B C1 E8 A3 15  // .f........f+....
    1410: C3 E8 29 00 0B C9 74 22 E8 14 FB E8 2E 07 66 51  // ..)...t"......fQ
    1420: 66 8B C8 BB 07 00 E8 81 15 66 25 00 FE 00 00 66  // f........f%....f
    1430: 0B C1 E8 7E 15 66 59 0C 01 C3 32 C0 C3 E8 68 02  // ...~.fY...2...h.
    1440: 0B C9 75 06 E8 C3 FA E8 6E 02 51 E8 BC FA 66 C1  // ..u.....n.Q...f.
    1450: E6 10 33 C0 E8 9A FD 74 09 E8 13 03 75 F6 33 C8  // ..3....t....u.3.
    1460: EB F2 58 23 C8 66 C1 EE 10 C3 A8 10 75 63 E8 ED  // ..X#.f......uc..
    1470: 06 66 C1 E6 10 33 C0 E8 80 FD 74 35 E8 5D FD 50  // .f...3....t5.].P
    1480: 51 8B C8 E8 F6 01 85 C1 59 58 74 0D 50 E8 AA FE  // Q.......YXt.P...
    1490: 24 03 3C 03 58 75 E0 EB 0C 50 E8 9D FE A8 01 58  // $.<.Xu...P.....X
    14A0: 74 D5 E8 6A FB 50 E8 D7 07 58 B5 00 E8 92 FE EB  // t..j.P...X......
    14B0: C6 E8 C8 01 E8 25 FD E8 31 01 B1 00 E8 4B 07 66  // .....%..1....K.f
    14C0: C1 EE 10 E8 91 06 A8 20 75 42 A8 40 75 03 E8 07  // ....... uB.@u...
    14D0: 0E E8 78 06 0A C0 75 07 32 C9 B5 01 E8 AA 0E E8  // ..x...u.2.......
    14E0: 9A 01 E8 F7 FC E8 30 FE E8 41 14 75 14 E8 5F 02  // ......0..A.u.._.
    14F0: 0A DB 74 0D E8 18 FB E8 86 07 B5 00 E8 42 FE EB  // ..t..........B..
    1500: 08 E8 63 07 B5 01 E8 38 FE E8 E3 00 C3 E8 11 16  // ..c....8........
    1510: C3 E8 1E FD E8 A9 06 33 C9 E8 9C 01 66 33 D2 66  // .......3....f3.f
    1520: 33 C0 E8 6C FE E8 4F 00 B1 FF E8 81 00 33 C0 E8  // 3..l..O......3..
    1530: C8 FC 74 0A E8 A5 FC 50 E8 CF 07 58 EB F1 32 C9  // ..t....P...X..2.
    1540: E8 C1 01 E8 DB 15 0B C0 C3 E8 E6 FC E8 71 06 66  // .............q.f
    1550: 33 C0 66 BA 00 F0 FF FF E8 30 01 51 B1 01 E8 89  // 3.f......0.Q....
    1560: 01 59 33 C0 E8 93 FC 74 0A E8 70 FC 50 E8 65 07  // .Y3....t..p.P.e.
    1570: 58 EB F1 E8 9F 0D C3 B8 02 00 E8 5F FC 74 2E B1  // X.........._.t..
    1580: 07 E8 E4 11 B8 02 00 E8 6F F0 F6 C3 04 75 12 E8  // ........o....u..
    1590: DC 1A 83 3D 00 75 0A E8 87 15 83 E0 FD E8 8A 15  // ...=.u..........
    15A0: C3 66 B8 02 00 00 00 E8 E7 FD E8 51 F2 C3 E8 0B  // .f.........Q....
    15B0: 14 74 23 38 E1 76 04 8A CC EB 06 38 C1 73 02 8A  // .t#8.v.....8.s..
    15C0: C8 BB 02 00 E8 E3 13 8A E1 E8 E7 13 B1 04 E8 97  // ................
    15D0: 11 0C 01 C3 0C 01 C3 51 E8 E1 13 74 0C 8A CC BB  // .......Q...t....
    15E0: 02 00 E8 C5 13 8A C4 8A E1 59 C3 E8 FE 05 C3 E8  // .........Y......
    15F0: 09 06 C3 E8 0D 19 75 18 E8 81 00 E8 DE FB 80 F9  // ......u.........
    1600: 01 75 0E 51 E8 60 06 B5 01 E8 35 FD 59 E8 DF FF  // .u.Q.`....5.Y...
    1610: C3 E8 D7 FF 51 E8 BD 06 B5 00 E8 24 FD 59 C3 B8  // ....Q......$.Y..
    1620: 02 00 E8 B7 FB 74 03 E8 3E 11 C3 E8 BD 04 3B C1  // .....t..>.....;.
    1630: 7C 3A 8B C1 E8 FD 04 E8 B5 0E 8B C8 51 E8 2D 05  // |:..........Q.-.
    1640: E8 F1 04 59 E8 A8 0E 3B C8 72 02 8B C1 8D 5C 04  // ...Y...;.r....\.
    1650: E8 CC 1B 32 C9 B5 0F E8 F3 0C E8 D3 17 FE C1 38  // ...2...........8
    1660: C1 72 F2 8D 5C 04 E8 3E 1C 0B C0 C3 33 C0 C3 BB  // .r..\..>....3...
    1670: 00 18 33 C0 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00  // ..3.........S...
    1680: E8 27 13 66 25 FF 0F 00 00 5B C3 53 66 50 66 51  // .'.f%....[.SfPfQ
    1690: 66 8B C8 BB 03 00 E8 11 13 66 23 C2 66 0B C1 E8  // f........f#.f...
    16A0: 11 13 66 59 66 58 5B C3 66 50 BB 05 00 E8 FA 12  // ..fYfX[.fP......
    16B0: 25 FF 0F 8B C8 66 58 C3 E8 66 14 23 C8 66 50 BB  // %....fX..f.#.fP.
    16C0: 05 00 E8 E5 12 25 00 F0 0B C1 E8 E6 12 66 58 C3  // .....%.......fX.
    16D0: 66 50 53 BB 06 00 E8 D1 12 A8 10 75 09 BB F0 16  // fPS........u....
    16E0: E8 C4 1B 3D 5A A5 5B 66 58 C3 66 50 53 BB 06 00  // ...=Z.[fX.fPS...
    16F0: E8 B7 12 80 F1 01 C0 E1 04 24 EF 0A C1 E8 B3 12  // .........$......
    1700: 5B 66 58 C3 53 66 50 BB F8 16 E8 9A 1B 8A C1 E8  // [fX.SfP.........
    1710: F5 1A 66 58 5B C3 53 BB F8 16 E8 8A 1B 83 E0 01  // ..fX[.S.........
    1720: 5B C3 53 66 50 BB 07 00 E8 7F 12 F6 C4 01 66 58  // [.SfP.........fX
    1730: B0 06 74 02 B0 08 5B C3 53 BB 07 00 E8 6B 12 80  // ..t...[.S....k..
    1740: E4 FE 80 FD 06 74 03 80 CC 01 E8 66 12 5B C3 66  // .....t.....f.[.f
    1750: 50 BB 06 00 E8 53 12 24 40 C0 E8 06 8A D8 66 58  // P....S.$@.....fX
    1760: C3 B3 81 E8 29 19 75 04 83 C8 01 C3 33 C0 C3 50  // ....).u.....3..P
    1770: 66 51 E8 67 FA 83 EC 04 8B EC 66 33 C0 66 89 46  // fQ.g......f3.f.F
    1780: 00 33 D2 8D BC 68 01 8D 1D E8 1B 1B 0B C0 74 22  // .3...h........t"
    1790: 8B DF B0 00 E8 12 01 74 14 8B DF E8 7B F4 66 8B  // .......t....{.f.
    17A0: 46 00 66 3B C8 72 06 8B D7 66 89 4E 00 83 C7 1C  // F.f;.r...f.N....
    17B0: EB D5 0B D2 74 0A 8D 9C 4C 01 E8 32 F4 E9 88 00  // ....t...L..2....
    17C0: 66 33 C0 66 89 46 00 8D BC F4 01 33 D2 8D 1D E8  // f3.f.F.....3....
    17D0: D5 1A 0B C0 74 58 66 50 E8 9D F0 3C 01 66 58 74  // ....tXfP...<.fXt
    17E0: 05 3D 40 06 73 43 66 52 66 8B D0 8D 5D 04 E8 B6  // .=@.sCfRf...]...
    17F0: 1A E8 5D 00 8B CA 66 5A 74 2F 56 8D 9C 4C 01 8B  // ..]...fZt/V..L..
    1800: F1 E8 0A F4 5E B0 00 E8 9F 00 74 1D 8D 1D E8 96  // ....^.....t.....
    1810: 1A 8B D9 8B 47 06 66 C1 E0 10 8B 47 02 66 3B 46  // ....G.f....G.f;F
    1820: 00 72 06 8B D1 66 89 46 00 83 C7 08 EB 9F 0B D2  // .r...f.F........
    1830: 74 16 56 8D 9C 4C 01 8B F2 E8 D2 F3 5E 53 8D 9C  // t.V..L......^S..
    1840: 62 01 33 C0 E8 D8 19 5B 83 C4 04 0B D2 66 59 58  // b.3....[.....fYX
    1850: C3 57 53 51 E8 C8 14 3B 55 02 75 18 66 C1 CA 10  // .WSQ...;U.u.f...
    1860: 8B DA 66 C1 CA 10 3B 5D 06 75 09 0A C0 74 0E 3A  // ..f...;].u...t.:
    1870: 45 1B 74 09 83 C7 1C E2 DE 33 D2 EB 02 8B D7 0B  // E.t......3......
    1880: D2 59 5B 5F C3 51 66 52 E8 94 14 3A 65 1A 75 09  // .Y[_.QfR...:e.u.
    1890: 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 ED 33 FF  // ..t.:E.t......3.
    18A0: EB 00 0B FF 66 5A 59 C3 C3 66 51 66 52 53 53 66  // ....fZY..fQfRSSf
    18B0: C1 CE 10 8B DE 66 C1 CE 10 E8 EB 19 5B 66 8B D0  // .....f......[f..
    18C0: E8 56 F3 3B CA 72 0A 66 3B CA 72 05 E8 95 F8 75  // .V.;.r.f;.r....u
    18D0: 02 32 C0 5B 66 5A 66 59 C3 56 57 E8 A7 FF 8B F7  // .2.[fZfY.VW.....
    18E0: E8 2B F3 5F 5E C3 66 50 53 66 51 52 57 56 51 8B  // .+._^.fPSfQRWVQ.
    18F0: DE B9 08 00 E8 42 15 59 8D 5C 08 8B C1 66 C1 E0  // .....B.Y.\...f..
    1900: 10 8A C2 E8 01 19 F6 C2 03 75 24 8B C1 24 7F BF  // .........u$..$..
    1910: C9 19 80 3D FF 0F 84 0F 01 3A 05 75 0D 66 8B 45  // ...=.....:.u.f.E
    1920: 01 66 B9 00 05 02 00 E9 96 00 83 C7 05 EB E3 F6  // .f..............
    1930: C2 01 74 25 8B C1 E8 70 01 0F 84 EB 00 33 C9 8A  // ..t%...p.....3..
    1940: CC 8A D0 0A C0 75 12 8D 5C 08 66 25 FF FF 00 00  // .....u..\.f%....
    1950: 66 C1 E0 08 E8 B0 18 EB B2 8A E1 8A CA 80 E1 0C  // f...............
    1960: C0 E9 02 80 E2 F0 C0 EA 04 8A EA 80 FC 70 72 2A  // .............pr*
    1970: 80 FC 75 73 25 80 EC 70 8A C4 32 E4 50 E8 30 02  // ..us%..p..2.P.0.
    1980: 8B D8 58 38 D8 72 05 33 C0 E9 9C 00 E8 28 02 E8  // ..X8.r.3.....(..
    1990: 15 19 0B C0 0F 84 90 00 EB 1B 32 C0 E8 E6 FE 0F  // ..........2.....
    19A0: 84 85 00 8D 5C 16 8B 05 E8 74 18 8B 45 06 66 C1  // ....\....t..E.f.
    19B0: E0 10 8B 45 02 50 E8 36 0B 66 C1 E1 10 8B C8 58  // ...E.P.6.f.....X
    19C0: 8D 1C E8 42 18 66 50 8D 5C 04 66 8B C1 E8 37 18  // ...B.fP.\.f...7.
    19D0: 66 58 66 C1 E8 10 66 81 E1 FF FF 00 00 66 F7 E1  // fXf...f......f..
    19E0: 66 50 8D 5C 06 E8 BF 18 8B C8 66 58 66 D3 E0 66  // fP.\......fXf..f
    19F0: C1 E8 10 40 8D 5C 14 E8 25 18 BF 29 1A 83 F9 01  // ...@.\..%..)....
    1A00: 74 11 BF 31 1A 81 F9 01 01 74 08 BF 39 1A 83 F9  // t..1.....t..9...
    1A10: 02 75 15 8D 5C 0C 66 8B 05 E8 EB 17 8D 5C 10 66  // .u..\.f......\.f
    1A20: 8B 45 04 E8 E1 17 0B DB 5E 5F 5A 66 59 5B 66 58  // .E......^_ZfY[fX
    1A30: C3 00 40 01 90 01 01 40 01 90 01 02 80 02 90 01  // ..@....@........
    1A40: 03 80 02 90 01 04 40 01 90 01 05 40 01 90 01 06  // ......@....@....
    1A50: 80 02 90 01 07 D0 02 5E 01 0D 40 01 90 01 0E 80  // .......^..@.....
    1A60: 02 90 01 0F 80 02 5E 01 10 80 02 5E 01 11 80 02  // ......^....^....
    1A70: E0 01 12 80 02 E0 01 13 80 02 90 01 23 20 04 90  // ............# ..
    1A80: 01 32 20 04 B0 02 33 20 04 C0 02 62 80 02 E0 01  // .2 ...3 ...b....
    1A90: FF 05 0A 05 05 05 00 00 00 05 0B 06 05 05 00 00  // ................
    1AA0: 00 08 10 08 08 08 00 00 00 56 E8 58 15 80 E4 01  // .........V.X....
    1AB0: 3B 04 74 09 83 C6 04 E2 F7 33 C0 EB 05 8B 44 02  // ;.t......3....D.
    1AC0: 0B C0 5E C3 57 53 50 E8 3B 15 83 E9 0A E8 E0 00  // ..^.WSP.;.......
    1AD0: 83 F8 05 76 03 B8 05 00 D1 E0 03 C8 FB A5 83 C6  // ...v............
    1AE0: 02 E2 FA B8 FF FF AB 58 5B 5F C3 66 53 51 66 52  // .......X[_.fSQfR
    1AF0: E8 41 00 E8 77 00 66 C1 E8 10 66 0F B7 D8 66 B8  // .A..w.f...f...f.
    1B00: 00 00 00 03 66 D3 E8 66 33 D2 66 F7 F3 E8 DF 09  // ....f..f3.f.....
    1B10: 66 5A 59 66 5B C3 53 66 50 BB 07 00 E8 8B 0E 0A  // fZYf[.SfP.......
    1B20: C0 66 58 5B C3 53 66 50 BB 07 00 E8 7C 0E A8 01  // .fX[.SfP....|...
    1B30: 66 58 5B C3 53 66 50 8D 5C 06 E8 6A 17 8A C8 66  // fX[.SfP.\..j...f
    1B40: 58 5B C3 51 B9 08 00 E8 04 13 59 C3 53 8D 5C 08  // X[.Q......Y.S.\.
    1B50: E8 54 17 24 03 5B C3 8D 5C 09 E8 4A 17 C3 51 53  // .T.$.[..\..J..QS
    1B60: B1 01 8A E8 8D 5C 08 E8 E1 16 5B 59 C3 53 8D 1C  // .....\....[Y.S..
    1B70: E8 34 17 5B C3 53 8D 5C 04 E8 2B 17 5B C3 53 8D  // .4.[.S.\..+.[.S.
    1B80: 5C 16 E8 22 17 5B C3 53 66 52 33 C0 E8 C2 FC 66  // \..".[.SfR3....f
    1B90: 5A 75 1B E8 34 00 74 16 E8 15 00 40 83 F8 05 73  // Zu..4.t....@...s
    1BA0: 0D E8 63 16 48 E8 0F 00 66 8B C2 E8 59 16 5B C3  // ..c.H...f...Y.[.
    1BB0: BB 00 1E E8 F1 16 C3 BB 08 1E C1 E0 03 03 D8 C3  // ................
    1BC0: BB 00 1E B9 32 00 E8 70 12 C3 51 E8 E2 FF 0B C0  // ....2..p..Q.....
    1BD0: 74 12 8B C8 BB 08 1E E8 CD 16 66 3B C2 74 07 83  // t.........f;.t..
    1BE0: C3 08 E2 F3 0B DB 59 C3 C3 00 C3 00 BB 20 DF E8  // ......Y...... ..
    1BF0: 63 36 E8 83 F6 B5 01 E8 D3 07 C3 BB 00 DF E8 54  // c6.............T
    1C00: 36 E8 74 F6 B5 00 E8 C4 07 C3 80 F9 00 75 0A E8  // 6.t..........u..
    1C10: 24 12 8A C8 B5 02 E8 0B 09 0B F6 74 2E E8 58 F6  // $..........t..X.
    1C20: B5 01 51 E8 AE 07 59 E8 B1 07 56 33 F6 B5 00 E8  // ..Q...Y...V3....
    1C30: 1B 07 5E B5 01 E8 C4 F6 E8 E9 08 E8 A6 09 E8 37  // ..^............7
    1C40: F6 8D 9C 00 03 E8 9A 07 E8 E3 07 66 C1 CE 10 B5  // ...........f....
    1C50: 01 E8 F9 06 E8 00 FF A8 40 75 07 32 C0 B5 01 E8  // ........@u.2....
    1C60: 6C 08 66 C1 CE 10 C3 E8 0E F6 B5 01 E8 39 07 B5  // l.f..........9..
    1C70: 00 E8 67 07 E8 CA 07 B1 0F E8 4B 0A E8 26 00 C3  // ..g.......K..&..
    1C80: E8 52 00 E8 02 F6 B5 00 E8 1D 07 B5 00 E8 4B 07  // .R............K.
    1C90: E8 77 F6 E8 A0 11 38 C1 74 0A 80 F9 0B 74 05 B5  // .w....8.t....t..
    1CA0: 03 E8 80 08 C3 B1 10 E8 1D 0A E8 A9 F5 80 FD 00  // ................
    1CB0: 74 06 B1 01 E8 B1 0A C3 E8 94 05 80 FD 01 75 07  // t.............u.
    1CC0: B5 02 E8 C3 05 EB 03 E8 F3 01 B1 0D E8 F8 09 B1  // ................
    1CD0: 03 E8 54 00 C3 E8 CB F5 0B D2 74 05 B1 00 E8 24  // ..T.......t....$
    1CE0: 0A B1 02 E8 42 00 E8 51 F6 A8 01 74 12 E8 66 F5  // ....B..Q...t..f.
    1CF0: 80 FD 00 75 0A B1 0C E8 CD 09 B0 02 E8 91 04 B1  // ...u............
    1D00: 00 E8 64 0A B1 0D E8 1F 00 C3 B1 07 E8 59 0A E8  // ..d..........Y..
    1D10: 91 F5 0B D2 75 0C E8 FF F5 E8 0C 0C 75 09 E8 FF  // ....u.......u...
    1D20: 0A C3 B1 07 E8 DE 09 C3 E8 ED F5 E8 FA 0B 75 24  // ..............u$
    1D30: 51 E8 34 0A 59 80 F9 0C 75 1A 33 D2 56 83 C6 08  // Q.4.Y...u.3.V...
    1D40: E8 23 0C 5E 0A C0 75 0C B9 0A 00 E8 3C 11 42 83  // .#.^..u.....<.B.
    1D50: FA 1E 75 E8 C3 80 FB 01 0F 84 C5 00 E8 93 05 66  // ..u............f
    1D60: C1 E1 10 8D 9C 35 01 E8 3D 15 A8 01 74 05 51 E8  // .....5..=...t.Q.
    1D70: 2B 04 59 E8 5E F5 B0 04 E8 8A 05 66 BA 50 01 40  // +.Y.^......f.P.@
    1D80: 50 E8 64 05 E8 D9 0A 75 7E 66 BA 50 01 50 4F 8D  // P.d....u~f.P.PO.
    1D90: 9C 2D 01 E8 11 15 24 06 3C 02 75 02 B6 02 B0 05  // .-....$.<.u.....
    1DA0: E8 62 05 E8 42 05 8D 5C 28 03 D8 E8 B2 0A 75 57  // .b..B..\(.....uW
    1DB0: 0A FF 75 09 B0 0A E8 4C 05 32 DB EB 4A 51 33 C9  // ..u....L.2..JQ3.
    1DC0: 8A CF E8 23 05 03 C8 E8 28 05 59 B0 07 E8 35 05  // ...#....(.Y...5.
    1DD0: 66 BA 50 01 10 30 33 DB E8 85 0A 74 0F 51 8A EB  // f.P..03....t.Q..
    1DE0: 8D 9C 44 01 B1 02 E8 62 14 59 EB 61 E8 F9 04 66  // ..D....b.Y.a...f
    1DF0: C1 C9 10 2B C1 66 C1 C1 10 3D 80 00 0F 82 76 FF  // ...+.f...=....v.
    1E00: B0 08 E8 00 05 EB 43 51 8A EB 8D 9C 44 01 B1 02  // ......CQ....D...
    1E10: E8 38 14 59 66 BA 50 01 10 30 33 DB E8 41 0A EB  // .8.Yf.P..03..A..
    1E20: 2C 8D 5C 28 03 D9 53 8A E9 B1 32 51 5F E8 A4 F4  // ,.\(..S...2Q_...
    1E30: 8A E9 B1 A0 BA 00 80 E8 FB 09 80 FF 01 5B 74 0A  // .............[t.
    1E40: B1 A2 E8 F0 09 80 FF 01 75 03 B0 00 C3 B0 01 C3  // ........u.......
    1E50: 51 B1 0C E8 D2 FE 59 B0 01 E8 A9 04 56 83 C6 08  // Q.....Y.....V...
    1E60: E8 03 0B 5E 0A C0 75 04 B3 10 EB 3F B0 02 E8 94  // ...^..u....?....
    1E70: 04 E8 38 00 74 11 B0 03 E8 8A 04 B0 01 E8 10 03  // ..8.t...........
    1E80: 75 29 E8 27 00 75 24 66 BA 0C 00 90 43 8D 9C 30  // u).'.u$f....C..0
    1E90: 01 E8 CC 09 66 BA 20 00 90 41 8D 9C 34 01 E8 BF  // ....f. ..A..4...
    1EA0: 09 E8 AB 03 B0 09 E8 5C 04 33 DB C3 E8 25 F4 66  // .......\.3...%.f
    1EB0: BA 00 00 90 47 8D 9C 28 01 E8 A4 09 C3 B1 0C E8  // ....G..(........
    1EC0: 66 FE B1 00 E8 A1 08 B1 01 E8 9C 08 8D 9C AC 03  // f...............
    1ED0: 66 B8 00 00 00 00 E8 2E 13 B0 01 E8 B2 02 74 0A  // f.............t.
    1EE0: B5 04 E8 B9 03 B3 08 E9 3F 01 B1 08 E8 D8 07 E8  // ........?.......
    1EF0: D2 02 B1 09 E8 D0 07 E8 C5 01 8D 9C B8 03 66 33  // ..............f3
    1F00: C0 E8 03 13 E8 60 01 B9 90 01 E8 72 0F B0 01 E8  // .....`.....r....
    1F10: 63 02 B5 02 E8 7B 03 E8 74 01 E8 8D 03 E8 E0 01  // c....{..t.......
    1F20: B5 03 E8 6D 03 33 C9 E8 00 01 F6 C5 01 75 34 B5  // ...m.3.......u4.
    1F30: 02 E8 5E 03 E8 20 01 F6 C5 04 74 08 B5 01 E8 5D  // ..^.. ....t....]
    1F40: 03 E9 CC 00 8A FD 80 E7 03 E8 E8 00 80 E3 03 38  // ...............8
    1F50: FB 75 0D E8 4C 01 75 08 B5 02 E8 41 03 E9 B0 00  // .u..L.u....A....
    1F60: E8 67 01 FE C1 E8 7B F3 38 D9 75 BB 8D 9C AC 03  // .g....{.8.u.....
    1F70: E8 34 13 3C 03 74 05 E8 ED 00 EB 9B 8D 9C B0 03  // .4.<.t..........
    1F80: 66 33 C0 E8 81 12 8D 9C 2A 01 E8 1A 13 A8 40 74  // f3......*.....@t
    1F90: 0C B1 13 E8 31 07 B0 03 E8 DA 01 EB 0A B1 0A E8  // ....1...........
    1FA0: 25 07 B0 02 E8 CE 01 B5 04 E8 E6 02 E8 DF 00 E8  // %...............
    1FB0: F8 02 E8 4B 01 B5 05 E8 D8 02 33 C9 E8 6B 00 80  // ...K......3..k..
    1FC0: FD 07 75 05 E8 86 00 75 2E 51 B5 04 E8 C3 02 59  // ..u....u.Q.....Y
    1FD0: F6 C5 01 75 07 B5 03 E8 C4 02 EB 34 E8 78 00 8A  // ...u.......4.x..
    1FE0: D5 E8 E6 00 E8 70 00 38 EA 75 0C E8 B4 00 75 07  // .....p.8.u....u.
    1FF0: B5 02 E8 A9 02 EB 19 FE C1 E8 E7 F2 38 D9 75 BC  // ............8.u.
    2000: 8D 9C AC 03 E8 A0 12 3C 04 75 05 E8 59 00 EB 9C  // .......<.u..Y...
    2010: B0 00 E8 60 01 B1 0B E8 AD 06 8D 9C AD 03 E8 86  // ...`............
    2020: 12 B3 00 0A C0 74 02 B3 08 C3 8D 9C C0 03 E8 0F  // .....t..........
    2030: 00 8A E8 C3 53 8D 9C C4 03 E8 04 00 5B 8A D8 C3  // ....S.......[...
    2040: 51 E8 63 12 C0 E1 02 D3 E8 24 0F 59 C3 8D 9C C2  // Q.c......$.Y....
    2050: 03 E8 53 12 A8 01 C3 8D 9C B8 03 E8 05 12 C3 8D  // ..S.............
    2060: 9C B8 03 E8 E5 11 C3 33 C9 33 D2 E8 E9 FF 38 D5  // .......3.3....8.
    2070: 76 02 8A D5 FE C1 E8 6A F2 38 D9 72 EE 33 C9 8A  // v......j.8.r.3..
    2080: EA 8D 9C 5C 03 E8 C3 11 B1 0B E8 DB 06 C3 E8 43  // ...\...........C
    2090: F2 8D 9C B8 03 E8 0F 12 66 BA 03 01 80 83 E8 BF  // ........f.......
    20A0: 07 C3 51 53 8D 9C B0 03 E8 B8 11 FE C5 E8 9B 11  // ..QS............
    20B0: 80 FD 06 72 07 B5 02 E8 E4 01 33 C9 5B 59 C3 66  // ...r......3.[Y.f
    20C0: 33 C0 8D 9C B0 03 E8 3E 11 C3 32 ED E8 65 FF 80  // 3......>..2..e..
    20D0: E3 0C C0 EB 02 B7 03 2A FB C0 E3 03 8A EB 80 FB  // .......*........
    20E0: 18 72 03 80 CD 20 E8 4B FF 80 E3 03 38 FB 72 02  // .r... .K....8.r.
    20F0: 8A DF 80 FB 03 75 03 80 CD 04 0A EB E8 60 FF C3  // .....u.......`..
    2100: E8 D1 F1 8D 9C C0 03 66 BA 02 02 90 45 E8 50 07  // .......f....E.P.
    2110: C3 E8 C0 F1 66 BA 00 01 90 42 8D 9C B4 03 E8 3F  // ....f....B.....?
    2120: 07 E8 B0 F1 66 BA 03 01 90 45 8D 9C B8 03 E8 2F  // ....f....E...../
    2130: 07 E8 E4 F1 E8 F5 07 75 3B E8 98 F1 66 BA 0A 01  // .......u;...f...
    2140: 90 40 8D 9C BF 03 E8 17 07 8D 9C 28 01 E8 57 11  // .@.........(..W.
    2150: 3C 14 72 20 E8 7D F1 66 BA 10 00 90 4F 8D 9C D0  // <.r .}.f....O...
    2160: 03 E8 FC 06 E8 6D F1 66 BA 15 01 90 40 8D 9C CC  // .....m.f....@...
    2170: 03 E8 EC 06 C3 E8 5C F1 66 BA 02 01 80 50 E8 DF  // ......\.f....P..
    2180: 06 C3 E8 3E F1 8B C2 66 33 D2 B9 8C 0A F7 F1 C3  // ...>...f3.......
    2190: E8 41 F1 66 BA 00 06 80 50 E8 C4 06 C3 E8 34 F1  // .A.f....P.....4.
    21A0: 66 BA 11 01 80 50 B0 04 E8 B5 06 C3 E8 25 F1 66  // f....P.......%.f
    21B0: BA 00 06 90 40 8D 9C C8 03 E8 A4 06 8D 9C C8 03  // ....@...........
    21C0: E8 E4 10 C3 E8 BB FF E8 19 F1 8A E3 80 CC 80 50  // ...............P
    21D0: E8 01 F1 58 66 BA 00 01 80 61 E8 83 06 33 C9 E8  // ...Xf....a...3..
    21E0: 8C F0 0B C0 74 02 B5 10 8D 9C BC 03 E8 5C 10 8A  // ....t........\..
    21F0: C5 E8 E0 F0 66 BA 07 01 80 50 E8 63 06 E8 18 F1  // ....f....P.c....
    2200: E8 29 07 75 49 8D 9C 48 03 E8 9B 10 0A C0 74 0E  // .).uI..H......t.
    2210: E8 C1 F0 66 BA 0A 01 80 50 B0 01 E8 42 06 8D 9C  // ...f....P...B...
    2220: 28 01 E8 82 10 3C 14 72 25 8D 9C 29 01 E8 77 10  // (....<.r%..)..w.
    2230: 0A C0 75 1A E8 44 EC 32 C9 8D 9C CC 03 E8 0B 10  // ..u..D.2........
    2240: 8A C5 E8 8F F0 66 BA 15 01 80 50 E8 12 06 C3 8D  // .....f....P.....
    2250: 9C B4 03 B9 0E 00 E8 E0 0B E8 B5 FE E8 A1 FE E8  // ................
    2260: 4A FF 3C 01 75 1C E8 E4 FD 74 17 33 C9 E8 BA FD  // J.<.u....t.3....
    2270: 80 FD 07 75 0D FE C1 E8 69 F0 38 D9 75 EF B5 01  // ...u....i.8.u...
    2280: EB 02 B5 00 E8 01 00 C3 8D 9C AC 03 B1 02 E8 BA  // ................
    2290: 0F C3 51 8D 9C AC 03 32 C9 E8 AF 0F 59 C3 51 8D  // ..Q....2....Y.Q.
    22A0: 9C AC 03 B1 01 E8 A3 0F 59 C3 8D 9C 32 01 E8 F6  // ........Y...2...
    22B0: 0F 24 07 75 15 B9 64 00 8D 9C AC 03 E8 E8 0F 3C  // .$.u..d........<
    22C0: 02 74 03 B9 90 01 E8 B6 0B C3 32 E4 B1 04 33 D2  // .t........2...3.
    22D0: F6 E1 8B C8 E8 B3 0B C3 51 8D 5C 14 E8 C8 0F 66  // ........Q.\....f
    22E0: C1 E0 10 E8 A4 01 59 C3 53 8D 9C 44 01 E8 B7 0F  // ......Y.S..D....
    22F0: 5B C3 53 66 50 8D 9C 44 01 E8 AB 0F 8B C1 E8 06  // [.SfP..D........
    2300: 0F 66 58 5B C3 53 51 8D 9C 44 01 8A E8 B1 03 E8  // .fX[.SQ..D......
    2310: 39 0F 59 5B C3 33 C9 E8 16 0B 38 C1 73 05 B5 00  // 9.Y[.3....8.s...
    2320: E8 8C 00 B5 00 E8 80 00 FE C1 E8 06 0B 38 C1 72  // .............8.r
    2330: E6 B1 14 8A E9 E8 FE 0A 38 C1 74 05 B5 03 E8 E3  // ........8.t.....
    2340: 01 FE C1 E8 E7 0A 04 14 38 C1 76 E7 C3 83 EC 0C  // ........8.v.....
    2350: 8B EC 0B F6 74 1E E8 14 F8 66 C1 C8 10 66 89 46  // ....t....f...f.F
    2360: 00 8D 5C 04 E8 40 0F 66 89 46 04 8D 5C 08 E8 36  // ..\..@.f.F..\..6
    2370: 0F 88 46 0A 89 4E 08 8C D0 66 C1 E0 10 8B C4 BB  // ..F..N...f......
    2380: 2B 00 E8 AD 09 83 C4 0C C3 83 EC 04 8B EC B0 02  // +...............
    2390: 88 46 01 88 4E 00 8C D0 66 C1 E0 10 8B C4 BB 25  // .F..N...f......%
    23A0: 00 E8 8E 09 83 C4 04 C3 BB 23 00 E8 08 00 C3 BB  // .........#......
    23B0: 17 00 E8 01 00 C3 83 EC 04 8B EC 89 4E 00 8C D0  // ............N...
    23C0: 66 C1 E0 10 8B C4 E8 69 09 83 C4 04 C3 BB 22 00  // f......i......".
    23D0: E8 E3 FF C3 BB 27 00 E8 DC FF C3 BB 2C 00 E8 D5  // .....'......,...
    23E0: FF C3 E8 C2 0E 66 A9 00 00 FF FF 74 40 83 EC 18  // .....f.....t@...
    23F0: 8B EC 55 51 B9 04 00 83 C3 02 E8 AA 0E 66 89 46  // ..UQ.........f.F
    2400: 00 83 C5 04 83 C3 04 E2 F1 83 C3 04 E8 98 0E 66  // ...............f
    2410: C1 C8 10 66 89 46 00 59 5D 88 4E 14 8C D0 66 C1  // ...f.F.Y].N...f.
    2420: E0 10 8B C4 BB 31 00 E8 08 09 83 C4 18 C3 E8 47  // .....1.........G
    2430: EE 8D 9C D0 02 E8 6F 0E 8A E8 BB 21 00 E8 76 FF  // ......o....!..v.
    2440: C3 8D 9C 3C 03 E8 5F 0E 8A F8 E8 09 EE 8A DD 53  // ...<.._........S
    2450: 8D 9C 42 03 E8 50 0E 8A E8 5B E8 1B EE E8 B8 EE  // ..B..P...[......
    2460: E8 C9 04 75 02 B3 01 83 EC 04 8B EC 88 4E 00 88  // ...u.........N..
    2470: 7E 01 88 5E 02 88 6E 03 8C D0 66 C1 E0 10 8B C4  // ~..^..n...f.....
    2480: BB 2A 00 E8 AC 08 83 C4 04 C3 83 EC 10 8B EC 66  // .*.............f
    2490: 3D F0 FF FF 03 76 06 66 B8 F0 FF FF 03 66 8B C8  // =....v.f.....f..
    24A0: 66 33 C0 66 89 46 04 66 89 46 00 66 89 46 08 66  // f3.f.F.f.F.f.F.f
    24B0: B8 00 00 00 D0 66 0B C1 66 89 46 0C 8C D0 66 C1  // .....f..f.F...f.
    24C0: E0 10 8B C4 BB 35 00 E8 68 08 83 C4 10 C3 83 EC  // .....5..h.......
    24D0: 08 8B EC 89 4E 00 66 89 56 02 89 5E 06 8C D0 66  // ....N.f.V..^...f
    24E0: C1 E0 10 8B C4 BB 2D 00 E8 47 08 83 C4 08 C3 3D  // ......-..G.....=
    24F0: C0 7F 76 04 B8 C0 7F C3 83 C0 3F 24 C0 C3 51 E8  // ..v.......?$..Q.
    2500: A5 0D 66 33 D2 B9 0A 00 F7 F1 8B C8 E8 98 0D 03  // ..f3............
    2510: C1 66 25 FF FF 00 00 59 3D 10 27 73 03 B8 10 27  // .f%....Y=.'s...'
    2520: C3 32 D2 C3 80 FD 02 75 19 E8 56 EE 66 BB 00 08  // .2.....u..V.f...
    2530: 00 00 E8 8E 00 66 33 D2 66 BB 01 08 00 00 E8 82  // .....f3.f.......
    2540: 00 C3 80 FD 03 75 10 66 33 C0 8A C1 66 33 D2 66  // .....u.f3...f3.f
    2550: BB FF 00 00 00 EB 36 51 33 D2 E8 F9 EC 8A D5 66  // ......6Q3......f
    2560: C1 E2 10 E8 32 ED 8A F2 8A D1 66 8B C2 66 0D 00  // ....2.....f..f..
    2570: 00 00 80 E8 6D ED 80 FB 04 76 06 66 0D 00 00 00  // ....m....v.f....
    2580: 08 E8 A3 ED E8 F1 EC 66 33 DB 8A D9 59 83 EC 10  // .......f3...Y...
    2590: 8B EC 66 89 46 04 66 89 5E 08 66 8B C2 66 33 D2  // ..f.F.f.^.f..f3.
    25A0: 66 BB 64 00 00 00 66 F7 E3 66 89 46 00 BB 0C 00  // f.d...f..f.F....
    25B0: 8C D0 66 C1 E0 10 8B C4 E8 77 07 8B EC B3 01 83  // ..f......w......
    25C0: C4 10 C3 83 EC 10 8B EC 66 89 56 00 66 89 5E 04  // ........f.V.f.^.
    25D0: BB 2E 00 8C D0 66 C1 E0 10 8B C4 E8 54 07 B3 01  // .....f......T...
    25E0: 83 C4 10 C3 C3 53 51 66 50 B9 68 74 80 FB 03 74  // .....SQfP.ht...t
    25F0: 0B B9 A0 8C 80 FB 00 75 03 B9 78 69 66 33 D2 8B  // .......u..xif3..
    2600: D1 66 58 59 5B C3 66 52 B3 00 66 F7 C2 00 00 FF  // .fXY[.fR..f.....
    2610: FF 75 1A 80 FD 13 74 15 80 FD 14 74 10 B3 01 80  // .u....t....t....
    2620: FD 0E 74 09 B3 03 80 F9 03 74 02 B3 02 66 5A C3  // ..t......t...fZ.
    2630: B5 11 80 FA 23 74 07 80 FA 22 74 02 B5 00 C3 B5  // ....#t..."t.....
    2640: 02 80 FA 23 74 07 80 FA 22 74 02 B3 01 C3 32 C9  // ...#t..."t....2.
    2650: 80 FD 00 75 08 C7 46 00 0B 01 B1 01 C3 50 33 C0  // ...u..F......P3.
    2660: E8 9E 01 04 14 89 46 00 58 B1 01 C3 C3 8B DA B7  // ......F.X.......
    2670: 22 80 FE 21 74 02 B7 21 C3 0C 01 C3 E8 28 0C 66  // "..!t..!.....(.f
    2680: C1 E8 10 0B C0 74 1C 53 83 C3 06 E8 19 0C 5B 3D  // .....t.S......[=
    2690: E0 01 72 0F 53 83 C3 18 E8 0C 0C 5B A8 80 75 03  // ..r.S......[..u.
    26A0: 0C 01 C3 32 C0 C3 B5 0C C3 B5 02 C3 50 E8 51 01  // ...2........P.Q.
    26B0: B1 03 0A C0 74 04 B1 08 02 C8 58 C3 80 FA 22 75  // ....t.....X..."u
    26C0: 05 C7 46 00 78 69 C3 E8 1A 01 80 FD FF 74 35 83  // ..F.xi.......t5.
    26D0: EC 0C 8B EC 88 4E 01 88 6E 00 80 F9 0F 75 05 E8  // .....N..n....u..
    26E0: 4F 00 EB 0F 80 F9 10 75 0A 8D 9C 48 03 E8 B7 0B  // O......u...H....
    26F0: 88 46 02 8C D0 66 C1 E0 10 8B C4 BB 04 00 E8 31  // .F...f.........1
    2700: 06 83 C4 0C C3 83 EC 10 8B EC 88 4E 01 E8 93 EB  // ...........N....
    2710: 81 E2 00 07 FE CE C0 E6 04 88 76 00 E8 12 00 8C  // ..........v.....
    2720: D0 66 C1 E0 10 8B C4 BB 32 00 E8 05 06 83 C4 10  // .f......2.......
    2730: C3 66 53 E8 8D EB 66 8B C2 66 33 D2 66 BB 8C 0A  // .fS...f..f3.f...
    2740: 00 00 66 F7 F3 66 5B 8A E8 88 6E 09 8D 9C 40 03  // ..f..f[...n...@.
    2750: E8 54 0B 88 46 02 88 66 03 66 C1 E8 10 88 46 08  // .T..F..f.f....F.
    2760: E8 4F EB 66 89 56 04 C3 83 EC 20 8B EC 80 F9 04  // .O.f.V.... .....
    2770: 75 0A 88 4E 01 32 C0 88 46 00 EB 56 E8 19 EB E8  // u..N.2..F..V....
    2780: 7F 00 88 46 00 88 4E 01 E8 8D EB 88 56 0A 80 F9  // ...F..N.....V...
    2790: 01 74 18 80 F9 0B 75 3A 8D 9C 5C 03 E8 08 0B 88  // .t....u:..\.....
    27A0: 46 02 E8 0D EB 66 89 56 04 EB 27 E8 26 EB 88 6E  // F....f.V..'.&..n
    27B0: 08 E8 FE EA 66 89 56 04 E8 28 EB 88 5E 03 E8 95  // ....f.V..(..^...
    27C0: EA 88 6E 02 51 E8 1C 00 8A CD B0 01 D2 E0 59 88  // ..n.Q.........Y.
    27D0: 46 09 8C D0 66 C1 E0 10 8B C4 BB 4C 00 E8 52 05  // F...f......L..R.
    27E0: 83 C4 20 C3 8D 9C 3C 03 E8 BC 0A 32 ED 3C 03 74  // .. ...<....2.<.t
    27F0: 0C 3C 09 72 09 3C 0E 77 05 2C 08 8A E8 C3 B5 FF  // .<.r.<.w.,......
    2800: C3 52 32 C0 80 EE 21 80 FA 1E 74 10 B0 02 80 FA  // .R2...!...t.....
    2810: 20 74 09 B0 04 80 FA 21 74 02 B0 06 02 C6 5A C3  //  t.....!t.....Z.
    2820: 83 EC 08 8C D0 66 C1 E0 10 8B C4 BB 4B 00 E8 01  // .....f......K...
    2830: 05 83 C4 08 C3 83 EC 08 8B EC 89 7E 00 89 5E 02  // ...........~..^.
    2840: 89 56 04 89 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36  // .V..N...f......6
    2850: 00 E8 DE 04 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3  // .......^..~.....
    2860: 56 33 F6 66 F7 C2 00 00 80 00 75 0A 50 33 C0 8A  // V3.f......u.P3..
    2870: C6 8B F0 32 F6 58 53 BB 04 1F E8 8A 09 66 8B C2  // ...2.XS......f..
    2880: BB 00 1F E8 81 09 5B 66 F7 C2 00 00 10 00 75 02  // ......[f......u.
    2890: 33 DB 8B D3 66 C1 E2 10 BA 00 1F 83 EC 08 8B EC  // 3...f...........
    28A0: 66 89 56 00 88 4E 04 8A C5 FE C8 88 46 07 C6 46  // f.V..N......F..F
    28B0: 05 00 C6 46 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E  // ...F....f......N
    28C0: 00 E8 6E 04 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A  // ..n....^..~.....
    28D0: DB 74 32 51 B9 90 01 80 FB 20 74 05 80 FB 80 75  // .t2Q..... t....u
    28E0: 13 B9 0A 00 8B C6 0A C0 74 0A B9 90 01 3C 01 74  // ........t....<.t
    28F0: 03 B9 E8 03 E8 88 05 59 8B C6 FE C4 8B F0 80 FC  // .......Y........
    2900: 06 76 98 0A DB 5E C3 8D 5C 04 E8 9A 09 8B D0 B5  // .v...^..\.......
    2910: 02 E8 14 00 74 11 B5 01 80 FA 13 75 0A E8 61 00  // ....t......u..a.
    2920: 80 FA 13 75 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74  // ...u...........t
    2930: 03 80 FA 0E C3 80 FA 05 C3 80 FA 02 74 03 80 FA  // ............t...
    2940: 04 C3 80 FA 01 74 03 80 FA 02 C3 80 FA 02 75 03  // .....t........u.
    2950: B2 01 C3 80 FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8  // ......u.........
    2960: FF 74 02 B5 04 C3 8D 5C 09 E8 3B 09 8A C8 0A C9  // .t.....\..;.....
    2970: 75 03 32 C0 C3 B5 02 E8 93 04 8A C5 24 02 D0 E8  // u.2.........$...
    2980: C3 8D 5C 08 E8 20 09 8A D0 B6 01 83 EC 10 8B EC  // ..\.. ..........
    2990: 89 56 02 8C D0 66 C1 E0 10 8B C4 BB 4F 00 E8 91  // .V...f......O...
    29A0: 03 8B EC 8A 56 04 83 C4 10 C3 53 83 C3 4C E8 C4  // ....V.....S..L..
    29B0: 08 5B C3 53 83 C3 4C E8 16 08 5B C3 56 E8 2F 03  // .[.S..L...[.V./.
    29C0: 8B 44 38 83 7D 20 00 5E C3 52 50 0F BC D8 32 FF  // .D8.} .^.RP...2.
    29D0: 80 FB 01 75 05 BB 00 24 EB 0C FE CB B8 00 04 F7  // ...u...$........
    29E0: E3 05 00 20 8B D8 58 5A C3 57 E8 56 00 74 0A 8B  // ... ..XZ.W.V.t..
    29F0: 5D 02 E8 08 00 0B DB 5F C3 33 DB 5F C3 52 51 0B  // ]......_.3._.RQ.
    2A00: DB 74 1B 56 E8 CF 02 03 DE 5E 33 C9 8A 4F 01 80  // .t.V.....^3..O..
    2A10: 3F FF 74 08 3A 07 74 06 03 D9 EB F0 33 DB 0B DB  // ?.t.:.t.....3...
    2A20: 59 5A C3 56 51 E8 AE 02 32 C9 8D 7C 08 3B 5D 04  // YZ.VQ...2..|.;].
    2A30: 74 0C 83 C7 10 FE C1 3A 4C 06 72 F1 33 FF 0B FF  // t......:L.r.3...
    2A40: 59 5E C3 56 51 E8 8E 02 32 C9 8D 7C 08 3B 1D 74  // Y^.VQ...2..|.;.t
    2A50: 0C 83 C7 10 FE C1 3A 4C 06 72 F2 33 FF 0B FF 59  // ......:L.r.3...Y
    2A60: 5E C3 56 51 E8 6F 02 32 C9 8D 7C 08 3B 45 0C 74  // ^.VQ.o.2..|.;E.t
    2A70: 0C 83 C7 10 FE C1 3A 4C 06 72 F1 33 FF 0B FF 59  // ......:L.r.3...Y
    2A80: 5E C3 57 50 E8 DB FF 8A C3 8B 5D 02 E8 6E FF 58  // ^.WP......]..n.X
    2A90: 5F C3 53 32 C9 B3 01 E8 E8 FF 74 03 8A 4F 02 0A  // _.S2......t..O..
    2AA0: C9 5B C3 53 32 ED B3 02 E8 D7 FF 74 03 8A 6F 02  // .[.S2......t..o.
    2AB0: 0A ED 5B C3 50 57 8B DA E8 68 FF 75 04 33 DB EB  // ..[.PW...h.u.3..
    2AC0: 0D B0 14 8B 5D 08 E8 34 FF 74 F2 8B 5F 02 5F 58  // ....]..4.t.._._X
    2AD0: C3 66 50 53 51 57 8D 1C 66 25 FF FF 00 00 E8 26  // .fPSQW..f%.....&
    2AE0: 07 8B D8 E8 3B 00 23 C3 74 31 E8 75 FF 0B FF 74  // ....;.#.t1.u...t
    2AF0: 2A 66 50 66 8B 45 04 8D 5C 0C E8 0A 07 66 33 C0  // *fPf.E..\....f3.
    2B00: 8B 05 8D 5C 04 E8 FF 06 66 58 E8 85 FF E8 93 FF  // ...\....fX......
    2B10: 8D 5C 08 66 33 C0 8B C1 E8 EC 06 5F 59 5B 66 58  // .\.f3......_Y[fX
    2B20: C3 56 E8 B1 01 8B 44 04 5E C3 56 E8 A8 01 89 44  // .V....D.^.V....D
    2B30: 04 5E C3 E8 CE 01 8B F7 83 C6 38 BB 00 2C B9 23  // .^........8..,.#
    2B40: 00 E8 23 03 E8 01 00 C3 51 66 57 56 E8 87 01 66  // ..#.....QfWV...f
    2B50: 33 FF 8D 7C 08 33 C0 E8 D0 FF 32 C9 8B 15 B8 00  // 3..|.3....2.....
    2B60: 70 23 C2 3D 00 30 75 54 80 FA 15 74 0B E8 B1 FF  // p#.=.0uT...t....
    2B70: 0B 45 0C E8 B4 FF EB 44 E8 5E 00 89 45 0C 0B C0  // .E.....D.^..E...
    2B80: 75 04 89 05 EB 36 E8 98 FF 0B 45 0C E8 9B FF 83  // u....6....E.....
    2B90: 7D 06 00 74 16 E8 4A 00 89 45 06 0B C0 74 0C 83  // }..t..J..E...t..
    2BA0: 7D 06 00 74 06 8B 5C 0A E8 BB 00 E8 40 00 89 05  // }..t..\.....@...
    2BB0: 8B 5D 02 E8 B0 00 8B 5D 08 E8 CB 00 83 C7 10 FE  // .].....]........
    2BC0: C1 3A 4C 06 72 96 5E 66 5F 59 C3 08 00 80 00 00  // .:L.r.^f_Y......
    2BD0: 02 00 04 00 08 40 00 00 00 53 E8 58 00 E8 C7 06  // .....@...S.X....
    2BE0: 5B C3 53 E8 4F 00 83 C3 08 E8 BB 06 5B C3 53 57  // [.S.O.......[.SW
    2BF0: 52 E8 41 00 83 C3 04 E8 AD 06 8B D0 E8 3A FD 75  // R.A..........:.u
    2C00: 16 8B 5D 04 8B D3 E8 64 FA 57 E8 16 FE 5F 75 07  // ..]....d.W..._u.
    2C10: 8B D0 E8 36 FD 8B C2 5A 5F 5B C3 E8 D0 FF 66 C1  // ...6...Z_[....f.
    2C20: E8 10 B4 11 E8 25 00 C3 E8 C3 FF 66 C1 E8 18 B4  // .....%.....f....
    2C30: 10 E8 18 00 C3 51 52 33 C9 8A CE 80 E1 07 49 B8  // .....QR3......I.
    2C40: 10 00 F7 E1 BB 14 2C 03 D8 5A 59 C3 57 53 51 33  // ......,..ZY.WSQ3
    2C50: C9 8A C8 8A C4 BB 03 71 E8 8E FD 83 C3 02 03 D9  // .......q........
    2C60: 8A 07 59 5B 5F C3 50 53 B0 01 E8 90 FD 74 15 E8  // ..Y[_.PS.....t..
    2C70: A9 FF 88 47 02 5B 53 B0 02 E8 81 FD 74 06 E8 A7  // ...G.[S.....t...
    2C80: FF 88 47 02 5B 58 C3 51 50 B0 14 E8 6F FD 74 3A  // ..G.[X.QP...o.t:
    2C90: 53 E8 A1 FF 83 C3 0C E8 0D 06 8B C8 5B F6 C1 01  // S...........[...
    2CA0: 74 05 66 83 67 02 FD F6 C1 80 74 05 66 83 67 02  // t.f.g.....t.f.g.
    2CB0: F7 F7 C1 00 01 74 08 66 81 4F 02 00 01 00 00 F7  // .....t.f.O......
    2CC0: C1 00 02 74 05 66 83 67 02 FB 58 59 C3 BF A6 01  // ...t.f.g..XY....
    2CD0: 8B 3D 8B 7D 0C C3 BE A6 01 8B 34 8B 74 30 C3 1E  // .=.}......4.t0..
    2CE0: 0E 1F BF A6 01 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE  // ......=.}.......
    2CF0: A6 01 8B 34 8B 74 10 C3 BF A6 01 8B 3D 8B 7D 26  // ...4.t......=.}&
    2D00: 83 C7 04 C3 BF A6 01 8B 3D 8B 7D 40 C3 BE A6 01  // ........=.}@....
    2D10: 8B 34 8B 74 1A C3 BE A6 01 8B 34 8B 74 3A C3 BF  // .4.t......4.t:..
    2D20: A6 01 8B 3D 8B 7D 0A 83 C7 04 B9 07 00 C3 E8 01  // ...=.}..........
    2D30: 00 CB 83 EC 06 8B EC 89 46 00 66 33 C0 C6 46 04  // ........F.f3..F.
    2D40: 00 89 46 02 06 52 8A D3 8B C5 E8 7E 17 5A 07 83  // ..F..R.....~.Z..
    2D50: C4 06 C3 E8 77 FF 66 F7 45 10 01 00 00 00 C3 50  // ....w.f.E......P
    2D60: E8 6A FF B8 01 00 09 45 10 58 C3 E8 5F FF 88 45  // .j.....E.X.._..E
    2D70: 10 C3 66 53 83 EC 48 8B EC 66 89 5E 00 66 89 4E  // ..fS..H..f.^.f.N
    2D80: 04 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8 A3 FF 83  // ...f............
    2D90: C4 48 66 5B E8 81 01 E8 AA 01 83 EC 1C 8B EC C6  // .Hf[............
    2DA0: 46 01 07 8C D0 66 C1 E0 10 8B C4 BB 0D 00 E8 81  // F....f..........
    2DB0: FF 83 C4 1C 83 EC 1C 8B EC C6 46 01 08 8C D0 66  // ..........F....f
    2DC0: C1 E0 10 8B C4 BB 0D 00 E8 67 FF 83 C4 1C BB 04  // .........g......
    2DD0: 00 E8 D6 FB 66 C1 E8 10 E8 90 FF C3 83 EC 54 8B  // ....f.........T.
    2DE0: EC 66 89 5E 00 8C D0 66 C1 E0 10 8B C4 BB 0A 00  // .f.^...f........
    2DF0: E8 3F FF 83 C4 54 C3 E8 D3 FE 66 8B 5D 08 66 8B  // .?...T....f.].f.
    2E00: 4D 0C C3 56 E8 0F FF 66 8B 44 08 5E C3 83 EC 04  // M..V...f.D.^....
    2E10: 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38 00  // ...N...f......8.
    2E20: E8 0F FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 04 C3  // ......n.........
    2E30: B0 01 C3 B0 04 C3 B0 08 C3 53 66 50 66 33 C0 E8  // .........SfPf3..
    2E40: C5 03 83 C3 04 E2 F8 66 58 5B C3 32 C0 C3 FC E8  // .......fX[.2....
    2E50: 55 04 66 C1 CB 10 E8 AE 03 66 C1 CB 10 66 81 C3  // U.f......f...f..
    2E60: 04 00 04 00 E2 E9 C3 FC 66 AD E8 9A 03 83 C3 04  // ........f.......
    2E70: E2 F6 C3 FC E8 30 04 66 AB 83 C3 04 E2 F6 C3 66  // .....0.f.......f
    2E80: 50 B8 64 00 E8 10 00 66 58 C3 66 50 B8 50 C3 D1  // P.d....fX.fP.P..
    2E90: E1 E8 03 00 66 58 C3 52 F7 E1 8B CA E8 21 02 66  // ....fX.R.....!.f
    2EA0: 53 8B D9 66 C1 E3 10 8B D8 66 B8 04 B1 03 00 B2  // S..f.....f......
    2EB0: 00 66 EF B2 04 66 33 C0 66 EF 66 B8 08 B1 03 00  // .f...f3.f.f.....
    2EC0: B2 00 66 EF B2 04 66 ED 33 C9 66 03 D8 73 0A 66  // ..f...f.3.f..s.f
    2ED0: ED 66 A9 00 00 00 80 75 F6 66 ED 66 3B C3 73 0C  // .f.....u.f.f;.s.
    2EE0: 66 C1 E8 10 3B C1 72 04 8B C8 EB ED 66 5B 5A C3  // f...;.r.....f[Z.
    2EF0: BB 42 EC E8 7F 03 66 33 D2 66 BB 64 00 00 00 66  // .B....f3.f.d...f
    2F00: F7 F3 C3 66 50 53 BB 07 00 E8 9E FA 25 00 02 35  // ...fPS......%..5
    2F10: 00 02 0B C0 5B 66 58 C3 B3 01 E8 7D 01 66 C1 E0  // ....[fX....}.f..
    2F20: 0A 66 83 E8 20 E8 E5 FD 66 89 44 04 C7 44 08 20  // .f.. ...f.D..D. 
    2F30: 00 C3 56 1E 0E 1F E8 D4 FD 66 8B 44 04 66 C1 E0  // ..V......f.D.f..
    2F40: 0A 1F 5E C3 E8 D1 FF 06 E8 B9 FD 0E 07 BB 00 78  // ..^............x
    2F50: E8 54 03 66 3B 05 75 19 B9 00 01 FC E8 14 FF BB  // .T.f;.u.........
    2F60: 00 7C BF A6 01 8B 3D 8B 7D 22 B9 00 01 FC E8 02  // .|....=.}"......
    2F70: FF E8 90 FD BE A6 01 8B 34 8B 74 14 8B 45 14 89  // ........4.t..E..
    2F80: 44 0C E8 6A FD 0B F6 74 49 8B 45 28 89 44 20 F6  // D..j...tI.E(.D .
    2F90: 45 26 08 74 17 8A 45 26 C0 E8 04 88 44 24 80 64  // E&.t..E&....D$.d
    2FA0: 24 FD F6 45 26 01 74 04 80 4C 24 02 57 83 C7 38  // $..E&.t..L$.W..8
    2FB0: 8A 85 87 00 88 44 3B 5F 66 8B 45 18 89 44 28 B9  // .....D;_f.E..D(.
    2FC0: 07 00 8D 5D 2C 8A 07 0A C0 74 03 88 44 2C 43 46  // ...],....t..D,CF
    2FD0: E2 F3 E8 41 FD 8B 45 20 89 44 10 8B 45 22 89 44  // ...A..E .D..E".D
    2FE0: 12 8B 45 1C 89 44 14 8B 45 1E 89 44 16 BB 04 71  // ..E..D..E..D...q
    2FF0: B0 09 E8 F4 F9 74 0C 57 83 C7 38 8A 85 85 00 88  // .....t.W..8.....
    3000: 47 04 5F 07 C3 BE A6 01 8B 34 8B 74 1E 83 C6 04  // G._......4.t....
    3010: B9 1C 00 C3 56 E8 D7 FC 8A 6C 33 5E C3 56 E8 CE  // ....V....l3^.V..
    3020: FC 53 81 C3 09 01 E8 7E 02 8A E8 5B 53 81 C3 00  // .S.....~...[S...
    3030: 01 E8 73 02 5B 8A C5 66 89 44 34 5E C3 56 E8 AE  // ..s.[..f.D4^.V..
    3040: FC 66 8B 44 34 53 81 C3 08 01 B1 01 8A E8 E8 FA  // .f.D4S..........
    3050: 01 5B 53 81 C3 00 01 B1 01 8A EC E8 ED 01 5B 53  // .[S...........[S
    3060: 81 C3 02 01 66 C1 E8 10 E8 B4 01 5B 5E C3 56 E8  // ....f......[^.V.
    3070: 7D FC 8B FE 83 C7 04 5E C3 56 E8 72 FC 8A 44 24  // }......^.V.r..D$
    3080: 80 FD 00 74 05 88 6C 33 0C 02 88 44 24 5E C3 32  // ...t..l3...D$^.2
    3090: C0 C3 E8 6F FC 66 8B 45 08 C3 66 53 83 EC 04 8B  // ...o.f.E..fS....
    30A0: EC 8C D0 66 C1 E0 10 8B C4 66 89 5E 00 BB 06 00  // ...f.....f.^....
    30B0: E8 7F FC 8B EC 66 8B 46 00 83 C4 04 66 5B C3 00  // .....f.F....f[..
    30C0: 66 50 8C C8 3D 00 C0 75 0C BA C3 03 EC 8A F0 0A  // fP..=..u........
    30D0: F6 74 02 EB 0E 53 2E 8B 1E 14 00 B2 20 E8 D6 00  // .t...S...... ...
    30E0: 8A F4 5B 32 D2 66 ED 66 58 C3 2E 8B 1E 14 00 C3  // ..[2.f.fX.......
    30F0: 0B C9 75 1A 4B 74 16 43 3B DA 77 09 8B C8 8B C2  // ..u.Kt.C;.w.....
    3100: 2B D2 F7 F3 91 F7 F3 8B DA 8B D1 2B C9 C3 3B CA  // +..........+..;.
    3110: 72 1A 75 10 3B D8 77 0C 2B C3 8B D8 2B C9 2B D2  // r.u.;.w.+...+.+.
    3120: B8 01 00 C3 2B C9 2B DB 93 87 CA C3 55 56 2B F6  // ....+.+.....UV+.
    3130: 8B EE 03 DB 13 C9 72 11 45 3B CA 72 F5 77 04 3B  // ......r.E;.r.w.;
    3140: D8 76 EF F8 13 F6 4D 78 20 D1 D9 D1 DB 2B C3 1B  // .v....Mx ....+..
    3150: D1 F5 72 F0 03 F6 4D 78 0C D1 E9 D1 DB 03 C3 13  // ..r...Mx........
    3160: D1 73 F1 EB DF 03 C3 13 D1 8B D8 8B CA 8B C6 33  // .s.............3
    3170: D2 5E 5D C3 93 50 92 0B C0 74 02 F7 E2 91 0B C0  // .^]..P...t......
    3180: 74 04 F7 E3 03 C8 58 F7 E3 03 D1 C3 52 66 50 B4  // t.....X.....RfP.
    3190: 80 8A C7 66 C1 E0 10 8A E3 8A C2 24 FC BA F8 0C  // ...f.......$....
    31A0: 66 EF 66 58 5A C3 52 BA FC 0C 66 ED 5A C3 52 BA  // f.fXZ.R...f.Z.R.
    31B0: FC 0C 66 EF 5A C3 E8 31 FF 9C FA E8 CE FF E8 E5  // ..f.Z..1........
    31C0: FF 9D C3 E8 24 FF 9C FA E8 C1 FF E8 E0 FF 9D C3  // ....$...........
    31D0: 52 66 53 66 50 E8 06 00 66 58 66 5B 5A C3 66 C1  // RfSfP...fXf[Z.f.
    31E0: E3 10 66 C1 EB 0E E8 D7 FE E8 75 01 C3 66 50 66  // ..f.......u..fPf
    31F0: C1 E3 10 66 C1 EB 10 E8 38 FD 66 03 D8 66 81 CB  // ...f....8.f..f..
    3200: 00 00 00 80 66 58 C3 52 66 53 E8 04 00 66 5B 5A  // ....fX.RfS...f[Z
    3210: C3 66 50 E8 AA FE E8 D4 FF E8 45 01 66 58 C3 52  // .fP.......E.fX.R
    3220: 51 66 53 66 50 8A CB 80 E3 FC 80 E1 03 C0 E1 03  // QfSfP...........
    3230: E8 8D FE E8 B7 FF E8 0F 01 66 D3 C8 58 50 66 D3  // .........f..XPf.
    3240: C0 E8 1D 01 66 58 66 5B 59 5A C3 66 50 51 C0 E1  // ....fXf[YZ.fPQ..
    3250: 03 E8 53 00 66 D3 C8 8A C5 66 D3 C0 E8 A8 FF 59  // ..S.f....f.....Y
    3260: 66 58 C3 66 50 51 C0 E1 03 E8 3B 00 66 D3 C8 59  // fX.fPQ....;.f..Y
    3270: 8A E8 66 58 C3 E8 5F 00 C3 E8 44 FE 66 C1 E3 10  // ..fX.._...D.f...
    3280: 66 C1 EB 0E E8 C1 00 C3 E8 35 FE 66 C1 E3 02 E8  // f........5.f....
    3290: B6 00 C3 52 66 53 E8 04 00 66 5B 5A C3 E8 20 FE  // ...RfS...f[Z.. .
    32A0: E8 4A FF E8 A2 00 C3 51 66 52 8A EB 8A CB 80 E1  // .J.....QfR......
    32B0: 03 C0 E1 03 80 E3 FC E8 D9 FF 80 F9 00 74 14 66  // .............t.f
    32C0: 8B D0 83 C3 04 E8 CB FF 83 EB 04 66 92 66 0F AD  // ...........f.f..
    32D0: D0 8A DD 66 5A 59 C3 52 66 53 E8 9C FF 66 5B 5A  // ...fZY.RfS...f[Z
    32E0: C3 52 66 53 E8 A1 FF 66 5B 5A C3 66 50 55 52 66  // .RfS...f[Z.fPURf
    32F0: 50 8B EC 8B 56 0C 89 56 08 E8 C4 FD 2E A1 F5 01  // P...V..V........
    3300: B2 18 EF B2 00 66 ED 66 89 46 0A 66 58 5A 5D C3  // .....f.f.F.fXZ].
    3310: 66 50 55 52 8B EC E8 A7 FD B2 00 66 8B 46 0A 66  // fPUR.......f.F.f
    3320: EF 8B 56 08 89 56 0C 66 8B 46 04 66 89 46 08 5A  // ..V..V.f.F.f.F.Z
    3330: 5D 66 58 66 58 C3 66 50 52 E8 84 FD B2 18 66 ED  // ]fXfX.fPR.....f.
    3340: 2E A3 F5 01 5A 66 58 C3 66 81 FB FF 00 00 00 77  // ....ZfX.f......w
    3350: 04 8A D3 EB 09 66 8B C3 B2 00 66 EF B2 04 66 ED  // .....f....f...f.
    3360: C3 66 81 FB FF 00 00 00 77 04 8A D3 EB 0A 66 93  // .f......w.....f.
    3370: B2 00 66 EF 66 93 B2 04 66 EF C3 C3 C3 55 8B EC  // ..f.f...f....U..
    3380: 53 51 8B F0 26 8B 5C 14 26 8B 4C 16 E8 28 00 8D  // SQ..&.\.&.L..(..
    3390: 66 FC 59 5B 5D C3 53 51 8B F0 26 8B 5C 24 33 C9  // f.Y[].SQ..&.\$3.
    33A0: E8 14 00 59 5B C3 55 8B EC 53 51 8B F0 26 8B 5C  // ...Y[.U..SQ..&.\
    33B0: 08 26 8B 4C 0A EB D5 52 56 57 C8 06 00 00 8B F0  // .&.L...RVW......
    33C0: 89 4E FE 8C D0 8E C0 26 8B 7C 26 8A 45 01 32 E4  // .N.....&.|&.E.2.
    33D0: B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8  // . .+............
    33E0: E2 FA 8A 4D 03 32 ED 8B FA E3 06 D1 E0 D1 D7 E2  // ...M.2..........
    33F0: FA F7 D0 F7 D7 26 21 44 1C 26 21 7C 1E 8C D0 8E  // .....&!D.&!|....
    3400: C0 26 8B 7C 26 8A 4D 01 32 ED B8 20 00 2B C1 8B  // .&.|&.M.2.. .+..
    3410: C8 66 C7 46 FA FF FF FF FF E3 08 D1 6E FC D1 5E  // .f.F........n..^
    3420: FA E2 F8 8A 4D 02 32 ED 8B C3 8B 56 FE E3 06 D1  // ....M.2....V....
    3430: EA D1 D8 E2 FA 23 46 FA 23 56 FC 8A 4D 03 32 ED  // .....#F.#V..M.2.
    3440: E3 06 D1 E0 D1 D2 E2 FA 26 09 44 1C 26 09 54 1E  // ........&.D.&.T.
    3450: C9 5F 5E 5A C3 55 8B EC 53 51 52 57 50 8B D8 26  // ._^Z.U..SQRWP..&
    3460: 8B 7F 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF  // ..&.E.2.. .+....
    3470: 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 02 88 4E F6  // ...........M..N.
    3480: C6 46 F7 00 8B FA 8B 4E F6 E3 06 D1 E0 D1 D7 E2  // .F.....N........
    3490: FA 26 09 47 1C 26 09 7F 1E 8D 66 F8 5F 5A E9 F1  // .&.G.&....f._Z..
    34A0: FE 53 51 52 57 8B D8 8C D0 8E C0 26 8B 77 26 8A  // .SQRW......&.w&.
    34B0: 4C 01 32 ED B8 20 00 2B C1 8B C8 BE FF FF 8B D6  // L.2.. .+........
    34C0: E3 06 D1 EA D1 DE E2 FA 26 8B 7F 26 8A 4D 02 32  // ........&..&.M.2
    34D0: ED 8B C6 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26  // ...............&
    34E0: 21 47 1C 26 21 57 1E 5F E9 CC 05 53 56 8B D8 8C  // !G.&!W._...SV...
    34F0: D2 8E C2 26 8B 77 26 80 3C 00 74 73 80 3C 01 75  // ...&.w&.<.ts.<.u
    3500: 58 8A 44 01 32 E4 26 83 7F 1E 00 75 4C 26 3B 47  // X.D.2.&....uL&;G
    3510: 1C 75 46 8A 04 6B F0 03 8A 84 50 91 26 01 47 26  // .uF..k....P.&.G&
    3520: 8C D0 8E C0 26 8B 77 26 80 3C 09 74 17 8A 04 32  // ....&.w&.<.t...2
    3530: E4 6B F0 03 8B C3 FF 94 4E 91 26 8B 77 26 8A 04  // .k......N.&.w&..
    3540: 32 E4 EB D1 8B 44 01 26 29 47 26 26 FF 47 26 26  // 2....D.&)G&&.G&&
    3550: 8B 47 1C 26 8B 77 1E EB 1A 26 8B 77 26 8A 04 32  // .G.&.w...&.w&..2
    3560: E4 6B F0 03 8A 84 50 91 26 01 47 26 E9 80 FF 33  // .k....P.&.G&...3
    3570: C0 33 F6 8B D6 5E 5B C3 53 51 52 56 8B D8 8D 77  // .3...^[.SQRV...w
    3580: 35 26 8B 54 02 26 89 57 14 26 C7 47 16 00 00 8B  // 5&.T.&.W.&.G....
    3590: F0 26 8B 47 20 33 D2 26 01 47 14 26 11 54 16 8C  // .&.G 3.&.G.&.T..
    35A0: D1 8E C1 26 F6 47 2F 06 0F 85 0A 05 26 80 7F 34  // ...&.G/.....&..4
    35B0: 00 75 22 26 8B 77 16 26 0B 77 14 75 10 26 D1 67  // .u"&.w.&.w.u.&.g
    35C0: 08 26 D1 57 0A 26 D1 67 08 26 D1 57 0A 8B C3 E8  // .&.W.&.g.&.W....
    35D0: 79 11 E9 E1 04 26 8A 47 34 32 E4 05 80 00 99 26  // y....&.G42.....&
    35E0: 89 47 1C 26 89 57 1E 8B C3 E8 FF FE E9 C7 04 53  // .G.&.W.........S
    35F0: 56 8B D8 8D 77 35 26 8A 44 02 32 E4 C1 E0 02 26  // V...w5&.D.2....&
    3600: 8B 37 26 8B 34 03 F0 26 8B 47 08 26 8B 5F 0A 26  // .7&.4..&.G.&._.&
    3610: 89 04 26 89 5C 02 5E 5B C3 53 52 56 8B D8 8C D0  // ..&.\.^[.SRV....
    3620: 8D 77 35 8E C0 26 8A 54 02 80 FA 40 73 21 26 8B  // .w5..&.T...@s!&.
    3630: 77 02 32 F6 C1 E2 02 26 8B 74 04 03 F2 26 8B 57  // w.2....&.t...&.W
    3640: 08 26 8B 47 0A 26 89 14 26 89 44 02 E9 7F 00 80  // .&.G.&..&.D.....
    3650: FA 41 75 12 26 8B 47 08 26 8B 57 0A 26 89 47 10  // .Au.&.G.&.W.&.G.
    3660: 26 89 57 12 EB 68 80 FA 40 75 12 26 8B 47 08 26  // &.W..h..@u.&.G.&
    3670: 8B 57 0A 26 89 47 0C 26 89 57 0E EB 51 80 FA 42  // .W.&.G.&.W..Q..B
    3680: 75 0A 26 8B 47 08 26 89 47 22 EB 42 80 FA 43 75  // u.&.G.&.G".B..Cu
    3690: 0A 26 8A 47 08 26 88 47 33 EB 33 80 FA 46 75 12  // .&.G.&.G3.3..Fu.
    36A0: 26 8B 57 08 26 8B 47 0A 26 89 57 18 26 89 47 1A  // &.W.&.G.&.W.&.G.
    36B0: EB 1C 80 FA 47 75 0A 26 8B 47 08 26 89 47 24 EB  // ....Gu.&.G.&.G$.
    36C0: 0D 80 FA 48 75 08 26 8B 47 08 26 89 47 20 5E 5A  // ...Hu.&.G.&.G ^Z
    36D0: 5B C3 53 56 8B D8 8D 77 35 26 8A 44 02 32 E4 26  // [.SV...w5&.D.2.&
    36E0: 89 47 14 26 C7 47 16 00 00 5E 5B C3 53 56 8B D8  // .G.&.G...^[.SV..
    36F0: 26 8B 77 02 26 8B 74 02 8A 04 32 E4 26 89 47 14  // &.w.&.t...2.&.G.
    3700: 26 C7 47 16 00 00 26 8B 5F 02 26 FF 47 02 5E 5B  // &.G...&._.&.G.^[
    3710: C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B 34 26  // .SV..&.w.&.t..4&
    3720: 89 77 14 26 C7 47 16 00 00 26 8B 5F 02 26 83 47  // .w.&.G...&._.&.G
    3730: 02 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74  // ..^[.SV..&.w.&.t
    3740: 02 8B 04 8B 74 02 26 89 47 14 26 89 77 16 26 8B  // ....t.&.G.&.w.&.
    3750: 5F 02 26 83 47 02 04 5E 5B C3 53 52 56 8B D8 E8  // _.&.G..^[.SRV...
    3760: 70 FF 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1 D8  // p...&.G.&.W.....
    3770: D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3 E8 2B  // ....&.G.&.T....+
    3780: 10 E9 4A FF 53 8B D8 26 8B 5F 02 26 FF 47 02 5B  // ..J.S..&._.&.G.[
    3790: C3 53 8B D8 26 8B 5F 02 26 83 47 02 02 5B C3 53  // .S..&._.&.G..[.S
    37A0: 56 8B D8 E8 6B FF 8B F3 26 8B 57 20 33 C0 26 01  // V...k...&.W 3.&.
    37B0: 57 14 26 11 44 16 8C D2 8E C2 26 8B 47 2E 32 C0  // W.&.D.....&.G.2.
    37C0: 80 E4 06 3D 00 02 75 07 32 E4 33 D2 5E 5B C3 26  // ...=..u.2.3.^[.&
    37D0: 8B 47 2E 32 C0 80 E4 06 3D 00 04 74 EB 26 80 7F  // .G.2....=..t.&..
    37E0: 34 00 75 08 8B C3 E8 2F 0F 5E 5B C3 26 8A 47 34  // 4.u..../.^[.&.G4
    37F0: 32 E4 26 89 47 1C 26 C7 47 1E 00 00 8B C3 E8 EA  // 2.&.G.&.G.......
    3800: FC 5E 5B C3 53 8B D8 E8 E2 FE 26 8B 47 14 C1 E0  // .^[.S.....&.G...
    3810: 02 26 8B 1F 26 8B 1F 03 D8 26 8B 07 26 8B 57 02  // .&..&....&..&.W.
    3820: 5B C3 28 38 1D 38 33 38 82 38 39 38 51 38 6B 38  // [.(8.838.898Q8k8
    3830: 76 38 7C 38 53 51 56 8B D8 E8 B0 FE 8C D2 8E C2  // v8|8SQV.........
    3840: 26 83 7F 16 00 75 22 26 83 7F 14 40 73 1B 26 8B  // &....u"&...@s.&.
    3850: 77 02 26 8B 5F 14 C1 E3 02 26 8B 44 04 03 D8 26  // w.&._....&.D...&
    3860: 8B 07 26 8B 57 02 E9 7B 05 26 8B 77 14 26 8B 47  // ..&.W..{.&.w.&.G
    3870: 16 83 C6 C0 83 D0 FF 75 71 83 FE 08 77 6C 03 F6  // .......uq...wl..
    3880: 2E FF A4 BA 37 26 8B 47 10 26 8B 57 12 E9 54 05  // ....7&.G.&.W..T.
    3890: 26 8B 47 0C 26 8B 57 0E E9 49 05 26 8B 47 22 EB  // &.G.&.W..I.&.G".
    38A0: 4B 26 8A 4F 33 32 ED BB 01 00 33 D2 E3 06 D1 E3  // K&.O32....3.....
    38B0: D1 D2 E2 FA 8B C3 E9 2B 05 26 8A 4F 33 32 ED B8  // .......+.&.O32..
    38C0: 01 00 33 D2 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..3.............
    38D0: E9 11 05 26 8B 47 18 26 8B 57 1A E9 06 05 26 8B  // ...&.G.&.W....&.
    38E0: 47 24 EB 08 26 8B 47 20 EB 02 33 C0 33 D2 E9 F3  // G$..&.G ..3.3...
    38F0: 04 53 56 8B D8 E8 F4 FD 8B F3 26 8B 47 18 26 8B  // .SV.......&.G.&.
    3900: 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14 26 11  // W.........&.G.&.
    3910: 54 16 8B C3 E8 16 0E 5E 5B C3 33 C0 33 D2 C3 53  // T......^[.3.3..S
    3920: 56 8B D8 E8 EB FD 26 8B 77 14 26 03 77 22 8B 04  // V.....&.w.&.w"..
    3930: 8B 54 02 5E 5B C3 53 8B D8 26 C6 47 2B 04 E8 AB  // .T.^[.S..&.G+...
    3940: FD 26 8B 47 14 26 8B 57 16 5B C3 53 8B D8 26 C6  // .&.G.&.W.[.S..&.
    3950: 47 2B 01 E8 BB FD EB E9 53 8B D8 26 C6 47 2B 00  // G+......S..&.G+.
    3960: E8 D2 FD EB DC 53 8B D8 83 C3 35 26 8A 5F 01 C0  // .....S....5&._..
    3970: EB 03 80 E3 07 32 FF 03 DB FF 97 DE 90 5B C3 53  // .....2.......[.S
    3980: 52 56 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // RV..&.G,2.......
    3990: FF 94 FA 90 26 89 47 08 26 89 57 0A 26 8A 47 2D  // ....&.G.&.W.&.G-
    39A0: 32 E4 8B F0 03 F0 8B C3 FF 94 12 91 26 89 47 04  // 2...........&.G.
    39B0: 26 89 57 06 E9 17 FD 53 51 56 8B D8 26 8A 4F 2B  // &.W....SQV..&.O+
    39C0: 32 ED 8B F1 8A 8C 42 91 E3 0A 26 D1 6F 06 26 D1  // 2.....B...&.o.&.
    39D0: 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B  // _...&.O+2.......
    39E0: 8C 22 91 8B B4 24 91 26 21 4F 04 26 21 77 06 26  // ."...$.&!O.&!w.&
    39F0: 8A 4F 2A 32 ED 8B F1 8A 8C 4A 91 E3 0A 26 D1 67  // .O*2.....J...&.g
    3A00: 04 26 D1 57 06 E2 F6 26 8B 4F 08 26 8B 77 0A 26  // .&.W...&.O.&.w.&
    3A10: 89 4F 14 26 89 77 16 E9 CA 03 53 51 52 56 57 8B  // .O.&.w....SQRVW.
    3A20: D8 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02  // .....&.G+2......
    3A30: 26 8A 47 2A 8B F8 8A 8D 4A 91 32 ED 8B 84 22 91  // &.G*....J.2...".
    3A40: 8B 94 24 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..$.............
    3A50: 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4 8B F0  // &!G.&!W.&.G*2...
    3A60: 8A 8C 4A 91 32 ED E3 0A 26 D1 6F 0A 26 D1 5F 08  // ..J.2...&.o.&._.
    3A70: E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84 22 91 8B  // ..&.G+......."..
    3A80: 94 24 91 26 21 47 08 26 21 57 0A 26 8A 47 2A 32  // .$.&!G.&!W.&.G*2
    3A90: E4 8B F0 8A 8C 4A 91 32 ED E3 0A 26 D1 67 08 26  // .....J.2...&.g.&
    3AA0: D1 57 0A E2 F6 26 8B 47 14 26 8B 57 16 26 09 47  // .W...&.G.&.W.&.G
    3AB0: 08 26 09 57 0A 5F 5E 5A 59 5B C3 53 51 56 8B D8  // .&.W._^ZY[.SQV..
    3AC0: 26 8A 4F 2B 32 ED 8B F1 8A 8C 42 91 E3 0A 26 D1  // &.O+2.....B...&.
    3AD0: 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1  // o.&._...&.O+2...
    3AE0: C1 E6 02 8B 8C 22 91 8B B4 24 91 26 21 4F 04 26  // ....."...$.&!O.&
    3AF0: 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C 4A 91 E3  // !w.&.O*2.....J..
    3B00: 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 4F 2B 32  // .&.o.&._...&.O+2
    3B10: ED 8B F1 C1 E6 02 8B 8C 22 91 8B B4 24 91 26 21  // ........"...$.&!
    3B20: 4F 08 26 21 77 0A E9 BB 02 51 52 57 8B D8 8C D0  // O.&!w....QRW....
    3B30: 8E C0 26 80 7F 2B 00 74 1A 26 8A 47 2C 32 E4 8B  // ..&..+.t.&.G,2..
    3B40: F0 03 F0 8B C3 FF 94 FA 90 26 89 47 08 26 89 57  // .........&.G.&.W
    3B50: 0A EB 10 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // ...&.G,2........
    3B60: 94 06 91 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF  // ...&.G-2........
    3B70: 94 12 91 26 89 47 04 26 89 57 06 8C D2 8E C2 26  // ...&.G.&.W.....&
    3B80: 80 7F 2B 00 74 4A 26 8A 47 2B 32 E4 8B F0 C1 E6  // ..+.tJ&.G+2.....
    3B90: 02 26 8A 47 2A 8B F8 8A 8D 4A 91 32 ED 8B 84 22  // .&.G*....J.2..."
    3BA0: 91 8B 94 24 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7  // ...$............
    3BB0: D2 26 21 47 08 26 21 57 0A 8B C3 E8 F9 FD 26 8B  // .&!G.&!W......&.
    3BC0: 47 04 26 8B 57 06 26 09 47 08 26 09 57 0A EB 10  // G.&.W.&.G.&.W...
    3BD0: 26 8B 57 04 26 8B 47 06 26 89 57 08 26 89 47 0A  // &.W.&.G.&.W.&.G.
    3BE0: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EE 90  // &.G,2...........
    3BF0: 5F 5A 59 C3 53 51 52 56 57 8B D8 26 8A 47 2A 32  // _ZY.SQRVW..&.G*2
    3C00: E4 8B F0 8A 8C 4A 91 32 ED E3 0A 26 D1 67 04 26  // .....J.2...&.g.&
    3C10: D1 57 06 E2 F6 8C D0 8E C0 26 8A 47 2B 32 E4 8B  // .W.......&.G+2..
    3C20: F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D 4A 91 32 ED  // ....&.G*....J.2.
    3C30: 8B 84 22 91 8B 94 24 91 E3 06 D1 E0 D1 D2 E2 FA  // .."...$.........
    3C40: F7 D0 F7 D2 26 09 47 04 26 09 57 06 26 8B 47 04  // ....&.G.&.W.&.G.
    3C50: 26 8B 57 06 26 21 47 08 26 21 57 0A E9 56 FE 55  // &.W.&!G.&!W..V.U
    3C60: 8B EC 51 52 50 8B D8 26 8A 47 2C 32 E4 8B F0 03  // ..QRP..&.G,2....
    3C70: F0 8B C3 FF 94 FA 90 26 89 47 08 26 89 57 0A 26  // .......&.G.&.W.&
    3C80: 8A 47 2B 88 46 FA 8B C3 E8 DA FC 26 89 47 04 26  // .G+.F......&.G.&
    3C90: 89 57 06 26 8A 4F 2D 32 ED 8B F1 03 F1 8B C3 FF  // .W.&.O-2........
    3CA0: 94 12 91 26 89 47 14 26 89 57 16 8B C3 E8 44 FF  // ...&.G.&.W....D.
    3CB0: 8A 46 FA 32 E4 8B F0 8A 8C 42 91 E3 0A 26 D1 6F  // .F.2.....B...&.o
    3CC0: 16 26 D1 5F 14 E2 F6 26 8A 57 2B 32 F6 8B F2 C1  // .&._...&.W+2....
    3CD0: E6 02 8B 84 22 91 8B 94 24 91 26 21 47 14 26 21  // ...."...$.&!G.&!
    3CE0: 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C 4A 91 32 ED  // W.&.G*2.....J.2.
    3CF0: E3 0A 26 D1 67 14 26 D1 57 16 E2 F6 26 8B 47 14  // ..&.g.&.W...&.G.
    3D00: 26 8B 57 16 26 09 47 08 26 09 57 0A 26 8A 47 2C  // &.W.&.G.&.W.&.G,
    3D10: 32 E4 8B F0 03 F0 8B C3 FF 94 EE 90 8D 66 FC 5A  // 2............f.Z
    3D20: 59 5D C3 51 8B D8 E8 56 FC 26 8A 4F 2B 32 ED 8B  // Y].Q...V.&.O+2..
    3D30: F1 8A 8C 42 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2  // ...B...&.o.&._..
    3D40: F6 8B C3 E8 AE FE 26 8A 4F 2C 32 ED 8B F1 03 F1  // ......&.O,2.....
    3D50: 8B C3 FF 94 EE 90 59 C3 8B D8 E8 22 FC 8B C3 E8  // ......Y...."....
    3D60: 55 FC 26 8B 47 04 26 8B 77 06 26 09 47 08 26 09  // U.&.G.&.w.&.G.&.
    3D70: 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // w.&.G,2.........
    3D80: EE 90 C3 53 56 8B D8 E8 F5 FB 8B C3 E8 28 FC 26  // ...SV........(.&
    3D90: 8B 47 04 26 8B 77 06 26 31 47 08 26 31 77 0A 26  // .G.&.w.&1G.&1w.&
    3DA0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EE 90 5E  // .G,2...........^
    3DB0: 5B C3 53 51 56 8B D8 E8 C5 FB 8B C3 E8 F8 FB 26  // [.SQV..........&
    3DC0: 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 8B  // .O...&.g.&.W....
    3DD0: C3 E8 46 FC 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3  // ..F.&.O,2.......
    3DE0: FF 94 EE 90 5E 59 5B C3 53 51 56 8B D8 E8 8F FB  // ....^Y[.SQV.....
    3DF0: 8B C3 E8 C2 FB 26 8B 4F 04 E3 0A 26 D1 6F 0A 26  // .....&.O...&.o.&
    3E00: D1 5F 08 E2 F6 EB C8 52 8B D8 E8 72 FB 8B C3 E8  // ._.....R...r....
    3E10: A5 FB 8B F3 26 8B 47 04 26 8B 57 06 26 01 47 08  // ....&.G.&.W.&.G.
    3E20: 26 11 54 0A 8B C3 E8 F1 FB 26 8A 47 2C 32 E4 8B  // &.T......&.G,2..
    3E30: F0 03 F0 8B C3 FF 94 EE 90 5A C3 52 8B D8 E8 3E  // .........Z.R...>
    3E40: FB 8B C3 E8 71 FB 8B F3 26 8B 47 04 26 8B 57 06  // ....q...&.G.&.W.
    3E50: 26 29 47 08 26 19 54 0A EB CA 51 52 8B F0 E8 1E  // &)G.&.T...QR....
    3E60: FB 8B C6 E8 55 FC 26 8B 44 08 26 8B 54 0A 26 8B  // ....U.&.D.&.T.&.
    3E70: 5C 04 26 8B 4C 06 E8 FB F2 26 89 44 0C 26 89 54  // \.&.L....&.D.&.T
    3E80: 0E 5A 59 C3 52 8B D0 E8 F5 FA 8B C2 E8 2C FC 8B  // .ZY.R........,..
    3E90: C2 E8 5C 08 5A C3 51 52 57 8B F0 E8 E1 FA 8B C6  // ..\.Z.QRW.......
    3EA0: E8 18 FC 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26  // ...&.D.&.T.&.\.&
    3EB0: 8B 4C 06 E8 3A F2 26 89 44 0C 26 89 54 0E 8C D7  // .L..:.&.D.&.T...
    3EC0: 8E C7 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B  // ..&.D.&.T.&.\.&.
    3ED0: 4C 06 E8 1B F2 26 89 5C 10 26 89 4C 12 E9 10 FD  // L....&.\.&.L....
    3EE0: 52 8B D0 E8 99 FA 8B C2 E8 D0 FB 8B C2 E8 D3 07  // R...............
    3EF0: 5A C3 51 52 8B D8 E8 86 FA 8B C3 E8 BD FB 8C D1  // Z.QR............
    3F00: 8E C1 26 8B 47 08 26 8B 57 0A 26 3B 57 06 75 0E  // ..&.G.&.W.&;W.u.
    3F10: 26 3B 47 04 75 08 26 C6 47 30 01 5A 59 C3 8B D0  // &;G.u.&.G0.ZY...
    3F20: 26 8B 47 0A 26 3B 47 06 72 08 75 0A 26 3B 57 04  // &.G.&;G.r.u.&;W.
    3F30: 73 04 33 C0 EB 03 B8 02 00 26 88 47 30 5A 59 C3  // s.3......&.G0ZY.
    3F40: 51 52 57 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // QRW..&.G,2......
    3F50: C3 FF 94 FA 90 26 89 47 08 26 89 57 0A 8C D0 8E  // .....&.G.&.W....
    3F60: C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D  // .&.G+2..........
    3F70: 42 91 32 ED 8B 84 22 91 8B 94 24 91 E3 06 D1 E0  // B.2..."...$.....
    3F80: D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21 57 0A  // ........&!G.&!W.
    3F90: E9 4D FC 55 8B EC 51 52 57 83 EC 06 8B D8 26 8A  // .M.U..QRW.....&.
    3FA0: 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D 42 91 32  // G+2..........B.2
    3FB0: ED 8B 84 22 91 89 46 F4 8B 84 24 91 89 46 F6 E3  // ..."..F...$..F..
    3FC0: 08 D1 66 F4 D1 56 F6 E2 F8 8B 7E F4 8B 46 F6 89  // ..f..V....~..F..
    3FD0: 46 F8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // F.&.G,2.........
    3FE0: FA 90 26 89 47 08 26 89 57 0A 8B C3 E8 47 F9 26  // ..&.G.&.W....G.&
    3FF0: 89 47 04 26 89 57 06 8B C7 F7 D0 8B 56 F6 F7 D2  // .G.&.W......V...
    4000: 26 23 47 08 26 23 57 0A 26 89 47 14 26 89 57 16  // &#G.&#W.&.G.&.W.
    4010: 26 21 7F 08 8B 46 F6 26 21 47 0A 8C D1 8D 77 35  // &!...F.&!G....w5
    4020: 8E C1 26 80 3C 19 73 12 26 8B 4F 04 E3 0A 26 D1  // ..&.<.s.&.O...&.
    4030: 67 08 26 D1 57 0A E2 F6 EB 10 26 8B 4F 04 E3 0A  // g.&.W.....&.O...
    4040: 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 21 7F 08 8B 46  // &.o.&._...&!...F
    4050: F8 26 21 47 0A 26 8B 57 14 26 8B 47 16 26 09 57  // .&!G.&.W.&.G.&.W
    4060: 08 26 09 47 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .&.G.&.G,2......
    4070: C3 FF 94 EE 90 8D 66 FA 5F E9 A3 FC 52 8B D8 E8  // ......f._...R...
    4080: FD F8 8B C3 E8 34 FA 26 8B 47 08 26 8B 57 0A 26  // .....4.&.G.&.W.&
    4090: 85 57 06 75 06 26 85 47 04 74 05 B8 03 00 EB 03  // .W.u.&.G.t......
    40A0: B8 01 00 26 88 47 30 5A C3 53 51 52 56 8B D8 26  // ...&.G0Z.SQRV..&
    40B0: 8A 4F 2D 32 ED 8B F1 03 F1 FF 94 12 91 26 89 47  // .O-2.........&.G
    40C0: 04 26 89 57 06 26 8A 47 2B 32 E4 8B F0 8A 8C 42  // .&.W.&.G+2.....B
    40D0: 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 47  // ...&.o.&._...&.G
    40E0: 2B 8B F0 C1 E6 02 8B 84 22 91 8B 94 24 91 26 21  // +......."...$.&!
    40F0: 47 04 26 21 57 06 E9 BD F9 52 8B D8 E8 AA FF 26  // G.&!W....R.....&
    4100: 8B 47 04 26 8B 57 06 26 89 47 18 26 89 57 1A 5A  // .G.&.W.&.G.&.W.Z
    4110: C3 51 52 8B D8 E8 91 FF 8C D0 8E C0 26 8B 77 02  // .QR.........&.w.
    4120: 26 8B 74 02 81 3C 5A 5A 74 5B 26 8B 77 02 26 8B  // &.t..<ZZt[&.w.&.
    4130: 74 02 80 3C 63 75 E1 26 8B 77 02 26 FF 44 02 8B  // t..<cu.&.w.&.D..
    4140: C3 E8 21 F8 26 89 47 08 26 89 57 0A 8B C3 E8 FA  // ..!.&.G.&.W.....
    4150: F7 26 89 47 14 26 89 57 16 8C D1 8E C1 26 8B 57  // .&.G.&.W.....&.W
    4160: 04 26 8B 47 06 26 3B 47 0A 75 AD 26 3B 57 08 75  // .&.G.&;G.u.&;W.u
    4170: A7 26 8B 77 02 26 8B 04 26 03 47 14 8B DE 26 89  // .&.w.&..&.G...&.
    4180: 47 02 5A 59 C3 26 8B 5F 02 26 83 47 02 02 5A 59  // G.ZY.&._.&.G..ZY
    4190: C3 52 57 8B D8 8C D0 8E C0 26 8B 77 02 26 8B 74  // .RW......&.w.&.t
    41A0: 02 8A 54 01 84 D2 75 08 26 C7 47 22 00 00 EB 2F  // ..T...u.&.G".../
    41B0: 80 FA FF 75 14 26 8B 77 02 26 8B 3F 26 8B 34 26  // ...u.&.w.&.?&.4&
    41C0: 2B 75 02 26 89 77 22 EB 16 26 8B 07 E8 E3 02 8B  // +u.&.w"..&......
    41D0: F0 8A C2 32 E4 03 C0 03 F0 8B 04 26 89 47 22 26  // ...2.......&.G"&
    41E0: 8B 5F 02 26 83 47 02 02 5F 5A C3 8B D8 26 80 67  // ._.&.G.._Z...&.g
    41F0: 2F F9 26 8B 77 02 26 8B 74 02 8A 44 01 26 88 47  // /.&.w.&.t..D.&.G
    4200: 34 26 8B 5F 02 26 83 47 02 03 C3 8B D8 26 8B 77  // 4&._.&.G.....&.w
    4210: 02 26 8B 74 02 8B 74 01 26 89 77 20 EB E3 53 8B  // .&.t..t.&.w ..S.
    4220: D8 26 8A 47 2C 32 E4 24 03 26 80 67 2F F9 C1 E0  // .&.G,2.$.&.g/...
    4230: 09 26 09 47 2E E9 4F F5 8B D8 26 8B 77 02 26 8B  // .&.G..O...&.w.&.
    4240: 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00  // t..D.2.&.G.&.G..
    4250: 00 8B C3 E8 40 04 26 8B 5F 02 26 83 47 02 02 C3  // ....@.&._.&.G...
    4260: 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26  // ..&.w.&.t..D.2.&
    4270: 89 47 04 26 C7 47 06 00 00 8B C3 E8 08 04 EB D6  // .G.&.G..........
    4280: 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32  // SV..&.w.&.t..D.2
    4290: E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 06 04  // .&.G.&.G........
    42A0: E9 86 F4 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A  // ...SV..&.w.&.t..
    42B0: 44 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3  // D.2.&.G.&.G.....
    42C0: E8 F0 03 E9 63 F4 53 56 8B D8 26 8B 77 02 8B DE  // ....c.SV..&.w...
    42D0: 26 8B 5F 02 8B 5F 01 83 C3 03 26 01 5C 02 5E 5B  // &._.._....&.\.^[
    42E0: C3 51 52 8B D8 26 8B 77 02 26 83 44 02 02 26 8B  // .QR..&.w.&.D..&.
    42F0: 07 E8 A0 01 8B C8 26 8B 77 28 8A 44 01 32 E4 03  // ......&.w(.D.2..
    4300: C0 8B F1 03 F0 83 3C 00 74 4F 26 8B 77 28 8A 54  // ......<.tO&.w(.T
    4310: 01 32 F6 8B C3 E8 B0 01 26 88 47 31 26 8B 77 02  // .2......&.G1&.w.
    4320: 26 8B 34 8B 44 04 C1 E8 08 32 E4 24 7F C1 E8 02  // &.4.D....2.$....
    4330: 32 E4 24 1F 26 80 67 2F 07 C1 E0 0B 26 09 47 2E  // 2.$.&.g/....&.G.
    4340: 26 8B 37 26 8B 47 2E C1 E8 0B C1 E0 02 26 01 04  // &.7&.G.......&..
    4350: 26 C6 47 32 01 26 89 4F 28 5A 59 C3 53 8B D8 26  // &.G2.&.O(ZY.S..&
    4360: C6 47 32 82 5B C3 57 8B D8 8C D6 8E C6 26 80 7F  // .G2.[.W......&..
    4370: 2C 05 74 0A 26 8A 47 2C 26 3A 47 30 75 1E 26 8B  // ,.t.&.G,&:G0u.&.
    4380: 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01  // w.&.t.&...&.=.t.
    4390: 03 F7 26 8B 5F 02 26 89 77 02 5F C3 26 8B 5F 02  // ..&._.&.w._.&._.
    43A0: 26 83 47 02 03 5F C3 53 56 57 8B D8 8C D6 8E C6  // &.G.._.SVW......
    43B0: 26 80 7F 30 01 74 0A 26 8A 47 30 26 3A 47 2C 75  // &..0.t.&.G0&:G,u
    43C0: 20 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D  //  &.w.&.t.&...&.=
    43D0: 8B 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F 5E 5B  // .t...&._.&.w._^[
    43E0: C3 26 8B 5F 02 26 83 47 02 03 EB F1 53 56 57 8B  // .&._.&.G....SVW.
    43F0: D8 8C D0 8E C0 26 80 7F 30 01 74 E5 EB C3 55 8B  // .....&..0.t...U.
    4400: EC 53 51 52 57 8B D8 26 8B 77 02 26 8B 74 02 8A  // .SQRW..&.w.&.t..
    4410: 04 26 C6 47 3D 00 8C D1 8E C1 26 80 7F 3D 08 73  // .&.G=.....&..=.s
    4420: 20 26 8B 77 02 26 8A 57 3D 32 F6 26 8B 7C 02 03  //  &.w.&.W=2.&.|..
    4430: FA 8B F3 03 F2 8A 15 26 88 54 35 26 FE 47 3D EB  // .......&.T5&.G=.
    4440: D5 26 8B 7F 02 8A D0 32 F6 8B F2 C1 E6 02 8A 94  // .&.....2........
    4450: 6F 91 26 01 55 02 26 8B 7F 28 8A 55 01 80 E2 07  // o.&.U.&..(.U....
    4460: 26 88 57 2D 26 8B 7F 28 8A 55 01 C0 EA 03 80 E2  // &.W-&..(.U......
    4470: 07 26 88 57 2B 26 8B 7F 28 8A 55 01 C0 EA 06 26  // .&.W+&..(.U....&
    4480: 88 57 2A 8A 94 6E 91 26 88 57 2C 8D 66 F8 5F 5A  // .W*..n.&.W,.f._Z
    4490: 59 5B 5D C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74  // Y[].SV..&.w....t
    44A0: 48 03 F0 8B D8 8B 74 1E 8B C6 03 C3 83 C0 04 5E  // H.....t........^
    44B0: 5B C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74 48 03  // [.SV..&.w....tH.
    44C0: F0 8B D8 8B 74 20 EB E0 8A C2 C3 16 07 55 8B EC  // ....t .......U..
    44D0: 53 51 56 57 83 EC 40 8B F8 89 46 B8 E8 D3 FF 8B  // SQVW..@...F.....
    44E0: D8 89 46 E0 26 8B 45 02 8B 5F 2E 03 D8 89 5E DE  // ..F.&.E.._....^.
    44F0: 83 46 DE 04 8B C7 E8 9B FF 89 46 E0 32 F6 8D 46  // .F........F.2..F
    4500: B8 E8 C4 FF 8A D0 32 F6 03 D2 8B 5E E0 03 DA 83  // ......2....^....
    4510: 3F 00 0F 84 65 01 88 46 E9 80 66 E7 F9 C6 46 EC  // ?...e..F..f...F.
    4520: 00 C7 46 D8 00 00 66 C7 46 D0 00 00 00 00 C7 46  // ..F...f.F......F
    4530: F6 00 00 C6 46 EA 01 EB 06 3C 01 0F 85 8C 00 8A  // ....F....<......
    4540: 56 E9 8A C2 32 E4 03 C0 8B 5E E0 03 D8 83 3F 00  // V...2....^....?.
    4550: 74 75 26 8B 45 02 8B 1F 03 D8 8B 47 04 32 E4 8B  // tu&.E......G.2..
    4560: C8 83 C1 09 32 ED 80 E1 FE 83 F9 00 74 07 D1 E9  // ....2.......t...
    4570: 33 C0 50 E2 FD 8B C4 8B D8 89 46 BA 85 C0 74 41  // 3.P.......F...tA
    4580: 83 C0 08 26 89 47 04 8A C2 32 E4 03 C0 8B 5E E0  // ...&.G...2....^.
    4590: 03 D8 26 8B 45 02 03 07 8B 5E BA 26 89 07 8B 5E  // ..&.E....^.&...^
    45A0: BA 26 8B 07 83 C0 06 26 89 47 02 8B 5E BA 8B 76  // .&.....&.G..^..v
    45B0: F6 26 89 77 06 8B 5E BA 89 5E F6 C6 46 EA 00 EB  // .&.w..^..^..F...
    45C0: 0A C6 46 EA 87 EB 04 C6 46 EA 83 8A 46 EA 32 E4  // ..F.....F...F.2.
    45D0: 83 F8 10 0F 8F 99 00 88 66 EA 8A 46 EA 32 E4 85  // ........f..F.2..
    45E0: C0 0F 8F 83 00 8C D0 8B 5E BA 8E C0 26 8B 5F 02  // ........^...&._.
    45F0: 89 5E E0 8B 5E BA 26 8B 5F 02 80 3F 5B 75 4A C6  // .^..^.&._..?[uJ.
    4600: 46 EA 10 8B 5E BA 26 8B 5F 06 89 5E F6 8B 5E BA  // F...^.&._..^..^.
    4610: 26 8B 1F 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80  // &...G.2......2..
    4620: E1 FE 03 E1 8B 5E F6 89 5E BA 85 DB 74 AC 26 8B  // .....^..^...t.&.
    4630: 1F 8B 47 04 C1 E8 08 32 E4 24 7F C1 E8 02 C1 E0  // ..G....2.$......
    4640: 02 8B 5E B8 26 29 07 EB 91 8D 46 B8 E8 AF FD 8A  // ..^.&)....F.....
    4650: D0 8D 46 B8 E8 2E 00 8A DA 32 FF C1 E3 02 8D 46  // ..F......2.....F
    4660: B8 FF 97 6C 91 E9 72 FF 83 7E F6 00 0F 85 C9 FE  // ...l..r..~......
    4670: 80 7E EA 10 74 05 8A 46 EA EB 02 32 C0 8D 66 F8  // .~..t..F...2..f.
    4680: 5F 5E E9 0B FE C3 53 51 8B D8 26 8A 4F 04 32 ED  // _^....SQ..&.O.2.
    4690: E8 EC E7 59 5B C3 53 51 8B D8 26 8A 4F 04 32 ED  // ...Y[.SQ..&.O.2.
    46A0: E8 E7 E7 59 5B C3 53 8B D8 26 8A 47 04 32 E4 E6  // ...Y[.S..&.G.2..
    46B0: 80 5B C3 53 51 8B D8 26 8A 4F 04 32 ED E8 2A D5  // .[.SQ..&.O.2..*.
    46C0: 59 5B C3 53 8B D8 66 50 66 52 66 51 66 26 8B 47  // Y[.S..fPfRfQf&.G
    46D0: 08 66 26 8B 57 10 66 26 8B 4F 04 66 F7 F1 66 26  // .f&.W.f&.O.f..f&
    46E0: 89 47 0C 66 26 89 57 10 66 59 66 5A 66 58 5B C3  // .G.f&.W.fYfZfX[.
    46F0: 53 8B D8 66 50 66 52 66 51 66 26 8B 47 08 66 26  // S..fPfRfQf&.G.f&
    4700: 8B 4F 04 66 F7 E1 66 26 89 47 0C 66 26 89 57 10  // .O.f..f&.G.f&.W.
    4710: 66 59 66 5A 66 58 5B C3 53 57 8B D8 26 8B 5F 14  // fYfZfX[.SW..&._.
    4720: E8 56 EB 8B D0 66 C1 E8 10 92 5F 5B C3 53 57 8B  // .V...f...._[.SW.
    4730: D8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66 C1 E3  // .&.G.&.W.....f..
    4740: 10 8B DA C1 E3 02 E8 54 EB EB D8 53 52 57 8B D8  // .......T...SRW..
    4750: 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B C2 26  // &.G.&.W..f.....&
    4760: 8B 5F 14 E8 78 EA 5F 5A 5B C3 53 52 8B D8 26 8B  // ._..x._Z[.SR..&.
    4770: 47 1C 26 8B 57 1E 92 66 C1 E0 10 8B C2 26 8B 5F  // G.&.W..f.....&._
    4780: 26 8B 5F 01 E8 57 EA 5A 5B C3 53 52 56 8B F0 26  // &._..W.Z[.SRV..&
    4790: 8B 5C 26 8B 5F 01 E8 E0 EA 8B D0 66 C1 E8 10 92  // .\&._......f....
    47A0: 26 89 44 1C 26 89 54 1E 5E 5A 5B C3 53 51 52 57  // &.D.&.T.^Z[.SQRW
    47B0: 8B D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B  // ..&.G.&.W..f....
    47C0: C2 8B C8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66  // ...&.G.&.W.....f
    47D0: C1 E3 10 8B DA C1 E3 02 8B C1 E8 34 EA 5F 5A 59  // ...........4._ZY
    47E0: 5B C3 8B D0 66 C1 E8 10 92 C3 1E 06 66 50 66 51  // [...f.......fPfQ
    47F0: 66 52 66 53 66 55 66 56 66 57 0E 1F 0A C0 75 06  // fRfSfUfVfW....u.
    4800: E8 07 01 E9 A8 00 3C 01 75 06 E8 37 01 E9 9E 00  // ......<.u..7....
    4810: 3C 02 75 06 E8 5F 02 E9 94 00 3C 03 75 0B E8 91  // <.u.._....<.u...
    4820: 03 8B EC 89 5E 0C E9 85 00 3C 04 75 02 EB 7D 3C  // ....^....<.u..}<
    4830: 05 75 0A E8 0E 04 8B EC 89 56 10 EB 71 3C 06 75  // .u.......V..q<.u
    4840: 10 E8 8C 03 8B EC 89 5E 0C 89 4E 14 89 56 10 EB  // .......^..N..V..
    4850: 5D 3C 07 75 02 EB 55 3C 08 75 0A E8 D0 03 8B EC  // ]<.u..U<.u......
    4860: 88 7E 0D EB 49 3C 09 75 02 EB 41 3C 0A 75 10 E8  // .~..I<.u..A<.u..
    4870: 65 04 8B EC 89 4E 14 89 7E 00 8C 46 1C EB 2F 3C  // e....N..~..F../<
    4880: 0B 75 02 EB 27 3C 10 75 0A E8 5A 04 8B EC 89 5E  // .u..'<.u..Z....^
    4890: 0C EB 1B 3C 11 75 02 EB 13 3C 15 75 0F E8 80 04  // ...<.u...<.u....
    48A0: 8B EC 89 5E 0C EB 07 B8 4F 01 EB 02 32 C0 8B EC  // ...^....O...2...
    48B0: 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66  // .F.f_f^f]f[fZfYf
    48C0: 58 07 1F C3 50 1E 2E 8E 1E 0F 03 8C D8 A3 38 58  // X...P.........8X
    48D0: A3 48 58 A3 5A 58 2E 8E 1E 07 03 A3 AA 04 1F 58  // .HX.ZX.........X
    48E0: CB 00 30 31 2E 30 30 00 56 45 53 41 00 03 C8 01  // ..01.00.VESA....
    48F0: 00 00 01 00 00 00 00 00 00 00 00 03 02 10 EB 00  // ................
    4900: 00 00 7F 00 00 00 7A 48 00 00 B9 3F 00 8B DF 83  // ......zH...?....
    4910: C7 04 FC 66 33 C0 F3 66 AB 8B FB BE 80 48 B9 22  // ...f3..f.....H."
    4920: 00 F3 A4 06 1F 8C 4F 08 8C 47 10 8C 4F 18 8C 4F  // ......O..G..O..O
    4930: 1C 8C 4F 20 83 C7 22 89 7F 0E 0E 1F E8 85 D1 B0  // ..O ..".........
    4940: 4F 32 E4 C3 56 51 57 B9 10 00 66 33 C0 F3 66 AB  // O2..VQW...f3..f.
    4950: 5F 59 8C DB 06 1F C7 05 BB 00 C6 45 02 07 C7 45  // _Y.........E...E
    4960: 04 40 00 C7 45 06 40 00 C6 45 1B 06 C6 45 18 01  // .@..E.@..E...E..
    4970: C6 45 1A 01 C6 45 1E 01 66 C7 45 3E 00 84 D7 17  // .E...E..f.E>....
    4980: 8E DB E8 4F CA 66 0B C0 0F 84 E1 00 06 1F 66 89  // ...O.f........f.
    4990: 45 28 8C C8 66 C1 E0 10 B8 39 4C 66 89 45 0C 81  // E(..f....9Lf.E..
    49A0: F9 FF 81 0F 84 C2 00 80 E5 03 B2 01 53 8E DB BE  // ............S...
    49B0: 80 1C E8 31 CF 5B 06 1F 0F 84 B1 00 53 E8 AD D1  // ...1.[......S...
    49C0: 66 89 45 12 C7 45 16 08 10 8D 5C 0C E8 D8 E8 66  // f.E..E....\....f
    49D0: 89 45 1F 66 89 45 36 8D 5C 10 E8 CA E8 66 89 45  // .E.f.E6.\....f.E
    49E0: 23 66 89 45 3A 8D 5C 08 E8 BC E8 0A C0 75 03 5B  // #f.E:.\......u.[
    49F0: EB 7B E8 78 D1 66 C1 E8 10 3D 58 02 74 0D 3D 5E  // .{.x.f...=X.t.=^
    4A00: 01 74 08 77 0A C6 45 17 08 EB 04 C6 45 17 0E 2E  // .t.w..E.....E...
    4A10: A1 09 03 89 45 08 8D 5C 04 E8 8B E8 66 8B C8 66  // ....E..\....f..f
    4A20: C1 E9 10 D3 E0 89 45 10 89 45 32 B0 08 D2 E0 88  // ......E..E2.....
    4A30: 45 19 8D 5C 14 E8 6F E8 5B 3D 00 03 77 2F 53 8B  // E..\..o.[=..w/S.
    4A40: D8 B8 00 03 33 D2 F7 F3 5B FE C8 88 45 1D 88 45  // ....3...[...E..E
    4A50: 35 88 45 34 8E DB 57 53 BE 80 1C E8 DF C9 5B 5F  // 5.E4..WS......[_
    4A60: 0B C9 75 05 06 1F 83 25 FE 32 E4 EB 02 B4 03 B0  // ..u....%.2......
    4A70: 4F 8E DB 5E C3 00 81 FB FF 81 74 68 0A FF 75 04  // O..^......th..u.
    4A80: 8B C3 EB 21 F6 C7 08 75 61 8B CB B2 01 BE 20 1C  // ...!...ua..... .
    4A90: E8 53 CE 74 55 E8 B4 D0 0A C0 75 0E 66 C1 E8 10  // .S.tU.....u.f...
    4AA0: 80 E7 80 0A C7 E8 D5 02 EB 3A E8 23 CC 74 06 E8  // .........:.#.t..
    4AB0: 97 CA E8 E6 C3 BE 20 1C E8 56 C9 74 2D E8 A5 00  // ...... ..V.t-...
    4AC0: E8 2C 00 66 BB 20 1C 00 1C E8 77 D0 BE 00 1C E8  // .,.f. ....w.....
    4AD0: 7A D0 66 C1 E8 10 8B D8 32 C0 F6 C7 80 74 02 B0  // z.f.....2....t..
    4AE0: 40 E8 86 C9 B0 4F 32 E4 EB 04 B0 4F B4 03 C3 56  // @....O2....O...V
    4AF0: 06 33 C0 8E C0 BE 20 1C E8 72 D0 8B C8 66 C1 E8  // .3.... ..r...f..
    4B00: 10 8B D0 C1 E9 03 26 89 0E 4A 04 C1 EA 04 FE CA  // ......&..J......
    4B10: 26 88 16 84 04 26 C6 06 51 04 00 26 C6 06 50 04  // &....&..Q..&..P.
    4B20: 00 26 C6 06 49 04 62 26 C7 06 4C 04 00 A0 26 C6  // .&..I.b&..L...&.
    4B30: 06 85 04 10 26 C7 06 0C 01 11 62 8C C8 26 A3 0E  // ....&.....b..&..
    4B40: 01 07 5E C3 01 0F 00 0A 00 00 00 00 00 40 05 0F  // ..^..........@..
    4B50: FF 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E  // ................
    4B60: 0F 01 00 0F 00 FC BA C4 03 B8 00 01 EF B9 04 00  // ................
    4B70: B4 01 BE DC 4A AC 86 E0 EF 8A E0 FE C4 E2 F6 B8  // ....J...........
    4B80: 00 03 EF B9 09 00 BA CE 03 32 E4 BE E0 4A 8A C4  // .........2...J..
    4B90: EE AC 42 EE 4A FE C4 E2 F5 BA DA 03 EC B9 14 00  // ..B.J...........
    4BA0: BA C0 03 32 E4 BE E9 4A 8A C4 EE AC EE FE C4 E2  // ...2...J........
    4BB0: F7 C3 BE 00 1C E8 94 CF 66 C1 E8 10 8B D8 E8 64  // ........f......d
    4BC0: CF 75 05 E8 50 CF 75 04 B8 4F 00 C3 B8 4F 03 C3  // .u..P.u..O...O..
    4BD0: E8 52 CF 74 53 BE 00 1C 80 FB 00 74 18 80 FB 01  // .R.tS......t....
    4BE0: 75 05 E8 90 CF EB 1D 80 FB 02 75 10 8B C1 E8 43  // u.........u....C
    4BF0: CF D3 E8 8B C8 E8 33 CA 74 2E EB 08 80 FB 03 75  // ......3.t......u
    4C00: 24 E8 E7 CE E8 2D CF 8B D8 D3 E3 50 33 C0 BA 00  // $....-.....P3...
    4C10: 03 3B DA 77 05 BA FF FF EB 04 F7 F3 8B D0 58 8B  // .;.w..........X.
    4C20: C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03 C3 00 0A DB  // ..O..2...O......
    4C30: 75 07 8A EF E8 01 CB EB 05 E8 E6 CA 8A F8 B0 4F  // u..............O
    4C40: 32 E4 C3 00 E8 DE CE 74 2C BE 00 1C E8 FD CE 66  // 2......t,......f
    4C50: C1 E8 10 F6 C4 40 75 1D 0A FF 75 05 E8 1E 00 EB  // .....@u...u.....
    4C60: 0F 80 FF 01 75 14 BB 13 00 E8 09 E6 D1 E8 8B D0  // ....u...........
    4C70: B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0 C3 52 53 66  // .O2...O...2..RSf
    4C80: 50 81 E2 FF 02 D1 E2 8B C2 40 66 C1 E0 10 8B C2  // P........@f.....
    4C90: BB 13 00 E8 3A E5 BB 12 00 E8 34 E5 66 58 5B 5A  // ....:.....4.fX[Z
    4CA0: C3 9C 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // ....fPfQfRfSfUfV
    4CB0: 66 57 0E 1F E8 34 E6 E8 8A FF E8 53 E6 8B EC 89  // fW...4.....S....
    4CC0: 56 10 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66  // V..F.f_f^f]f[fZf
    4CD0: 59 66 58 07 1F 9D CB 0E 07 BF 14 90 2E 8B 0E 12  // YfX.............
    4CE0: 90 B8 4F 00 C3 00 0A DB 75 06 B7 04 B3 10 EB 26  // ..O.....u......&
    4CF0: 80 FB 01 75 14 E8 D8 C9 75 21 53 B1 01 0A FF 74  // ...u....u!S....t
    4D00: 02 B1 00 E8 ED C8 5B EB 0D 80 FB 02 75 0D E8 05  // ......[.....u...
    4D10: CA 8A F8 C0 E7 02 B0 4F 32 E4 C3 B8 4F 03 C3 00  // .......O2...O...
    4D20: 80 E3 01 0A DB 75 05 BB 02 01 EB 0E E8 A1 C9 75  // .....u.........u
    4D30: 0E 33 C0 53 E8 91 B8 5B 74 05 B0 4F 32 E4 C3 B0  // .3.S...[t..O2...
    4D40: 4F B4 03 C3 80 FC 1D 72 03 CD 42 C3 1E 06 66 50  // O......r..B...fP
    4D50: 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F 50 0F  // fQfRfSfUfVfW..P.
    4D60: B6 C4 D1 E0 8B F0 58 2E FF 94 26 4D 66 5F 66 5E  // ......X...&Mf_f^
    4D70: 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3 0E 1F 50  // f]f[fZfYfX.....P
    4D80: 0F B6 C4 D1 E0 8B F0 58 2E FF 94 26 4D C3 60 4D  // .......X...&M.`M
    4D90: 7C 86 95 86 B2 86 5F 4E B5 7D E7 7D 5A 7E DD 7E  // |....._N.}.}Z~.~
    4DA0: 6B 80 6F 80 78 83 49 84 CC 84 33 85 CE 86 30 87  // k.o.x.I...3...0.
    4DB0: D9 89 78 50 20 8E 14 4D 14 4D 14 4D 14 4D 14 4D  // ..xP ..M.M.M.M.M
    4DC0: 14 4D F0 8E F3 72 47 74 2E 8E 1E 07 03 80 26 87  // .M...rGt......&.
    4DD0: 04 F3 50 8A E0 80 E4 7F 80 FC 03 74 07 80 FC 12  // ..P........t....
    4DE0: 74 02 58 C3 E8 C4 01 3B D3 75 02 58 C3 BA CC 03  // t.X....;.u.X....
    4DF0: EC B2 B4 B1 30 26 F6 47 09 01 74 0C B2 D4 B1 20  // ....0&.G..t.... 
    4E00: A8 01 75 49 B5 09 EB 06 A8 01 74 41 B5 0B 53 E8  // ..uI......tA..S.
    4E10: 6A 41 0A FF 5B 75 0B 80 26 88 04 F0 08 2E 88 04  // jA..[u..&.......
    4E20: EB 2B 58 80 0E 87 04 08 80 26 10 04 CF 08 0E 10  // .+X......&......
    4E30: 04 89 16 63 04 C7 06 85 04 08 00 C6 06 84 04 18  // ...c............
    4E40: C7 06 0C 01 FE 59 8C 0E 0E 01 CD 42 C3 80 26 10  // .....Y.....B..&.
    4E50: 04 CF 08 0E 10 04 58 53 50 0E 1F 33 C9 8A C8 E8  // ......XSP..3....
    4E60: 6E C8 74 06 E8 E2 C6 E8 31 C0 B2 08 BE 40 1C E8  // n.t.....1....@..
    4E70: 74 CA BE 40 1C E8 99 C5 58 5B 0F 84 6E FF 2E 8E  // t..@....X[..n...
    4E80: 1E 07 03 0E 07 E8 13 29 0E 1F 53 66 BB 40 1C 00  // .......)..Sf.@..
    4E90: 1C E8 AF CC BE 00 1C B0 20 E8 CE C5 5B 2E 8E 1E  // ........ ...[...
    4EA0: 07 03 0E 07 E8 1C 2E E8 24 00 E8 28 3D E8 D1 01  // ........$..(=...
    4EB0: E8 8E 01 E8 AE 3E 0E 1F BE 00 1C B0 10 E8 AA C5  // .....>..........
    4EC0: E8 F7 2D E8 EF 2D C3 8B EC C6 46 1B 00 C3 E8 2F  // ..-..-....F..../
    4ED0: 00 E8 0A 00 E8 BD 00 E8 52 00 E8 5C 0A C3 53 83  // ........R..\..S.
    4EE0: C3 0A 8B 16 63 04 B9 19 00 B8 11 30 EF 32 C0 26  // ....c......0.2.&
    4EF0: 8A 27 EF 43 FE C0 E2 F7 5B 80 C2 06 32 C0 EE C3  // .'.C....[...2...
    4F00: 53 BA C4 03 83 C3 05 B9 04 00 B0 01 26 8A 27 3C  // S...........&.'<
    4F10: 01 75 03 80 CC 20 EF 43 FE C0 E2 F0 5B 26 8A 47  // .u... .C....[&.G
    4F20: 09 BA C2 03 EE B2 C4 B8 00 03 EF C3 8B F3 83 C6  // ................
    4F30: 23 BA DA 03 26 F6 47 09 01 75 02 B2 BA F6 06 89  // #...&.G..u......
    4F40: 04 08 74 1D 83 C6 10 EC B9 04 00 B4 10 B2 C0 80  // ..t.............
    4F50: FC 11 74 07 8A C4 EE 26 8A 04 EE 46 FE C4 E2 EF  // ..t....&...F....
    4F60: C3 53 EC 8B DE B9 14 00 32 E4 B2 C0 8A C4 EE FE  // .S......2.......
    4F70: C4 26 8A 07 EE 43 E2 F4 8A C4 EE 32 C0 EE 1E 06  // .&...C.....2....
    4F80: E8 49 2D 0B ED 74 09 1F 1E B9 10 00 F3 A4 46 A4  // .I-..t........F.
    4F90: 07 1F 5B C3 53 83 C3 37 B9 09 00 32 C0 BA CE 03  // ..[.S..7...2....
    4FA0: 26 8A 27 EF 43 FE C0 E2 F7 5B C3 BB 36 52 0E 07  // &.'.C....[..6R..
    4FB0: 8B D3 0A E4 7D 01 C3 E8 01 00 C3 33 F6 80 FC 03  // ....}......3....
    4FC0: 7F 3C 4A F6 06 89 04 10 75 20 A0 88 04 24 0F 3C  // .<J.....u ...$.<
    4FD0: 02 7E 24 3C 08 74 20 3C 06 74 1C 3C 07 74 18 B0  // .~$<.t <.t.<.t..
    4FE0: 40 F6 E4 03 D8 81 C3 00 04 C3 B0 40 D0 EC F6 E4  // @..........@....
    4FF0: 03 D8 81 C3 80 04 C3 B0 40 F6 E4 03 D8 C3 80 FC  // ........@.......
    5000: 07 75 11 F6 06 89 04 10 75 05 81 C3 00 01 C3 81  // .u......u.......
    5010: C3 00 05 C3 BF B8 4F BE D9 4F 33 C9 E8 4E 00 C3  // ......O..O3..N..
    5020: 04 80 00 05 80 00 06 C0 00 0D 80 02 0E C0 02 0F  // ................
    5030: 80 03 10 C0 03 11 40 05 12 80 05 13 C0 05 62 40  // ......@.......b@
    5040: 01 53 8A 1E 49 04 80 FB 07 7F 10 32 FF D1 E3 2E  // .S..I......2....
    5050: 8B 87 F5 4F A2 65 04 88 26 66 04 5B C3 2C 30 28  // ...O.e..&f.[.,0(
    5060: 30 2D 30 29 30 2A 30 2E 30 1E 3F 29 30 2E 38 25  // 0-0)0*0.0.?)0.8%
    5070: 75 07 2E 03 5D 01 33 F6 C3 83 C7 03 3B FE 75 ED  // u...].3.....;.u.
    5080: C3 1E 06 2E 8E 1E 07 03 F6 06 87 04 80 75 49 83  // .............uI.
    5090: 3E 4C 04 00 74 42 A0 49 04 B9 00 20 2E 8B 3E 0D  // >L..tB.I... ..>.
    50A0: 03 26 F6 47 33 01 75 0E 26 F6 47 09 01 75 1B 2E  // .&.G3.u.&.G..u..
    50B0: 8B 3E 0B 03 EB 14 3C 06 7E 0B 2E 8B 3E 09 03 26  // .>....<.~...>..&
    50C0: 8A 67 37 B5 40 66 33 C0 EB 06 66 B8 20 07 20 07  // .g7.@f3...f. . .
    50D0: 8E C7 66 33 FF F3 66 AB 80 26 87 04 7F 07 1F C3  // ..f3..f..&......
    50E0: 2E 8E 1E 07 03 80 FB 10 75 03 E9 7A 01 80 FB 20  // ........u..z... 
    50F0: 75 03 E9 9B 01 80 FB 32 75 1F BA CC 03 0A C0 75  // u......2u......u
    5100: 09 EC 0C 02 B2 C2 EE E9 F3 00 FE C8 0F 85 F3 00  // ................
    5110: EC 24 FD B2 C2 EE E9 E4 00 80 FB 35 75 28 3C 80  // .$.........5u(<.
    5120: 75 08 80 0E 89 04 40 E9 D3 00 F6 06 89 04 40 0F  // u.....@.......@.
    5130: 84 D0 00 0A C0 0F 84 CA 00 FE C8 75 06 E8 98 07  // ...........u....
    5140: E9 BA 00 E9 BD 00 80 FB 30 74 03 E9 96 00 50 E8  // ........0t....P.
    5150: 2A 3E 8A EF BA CC 03 EC 8A C8 58 0A C0 75 30 B7  // *>........X..u0.
    5160: 08 F6 C1 01 75 12 0A ED 75 0B A0 10 04 24 30 3C  // ....u...u....$0<
    5170: 30 75 10 B7 02 E9 8B 00 A0 10 04 24 30 3C 30 75  // 0u.........$0<0u
    5180: 02 B7 02 80 26 89 04 6F 80 0E 89 04 80 EB 36 3C  // ....&..o......6<
    5190: 01 75 41 80 26 89 04 6F B7 09 F6 C1 01 75 15 B7  // .uA.&..o.....u..
    51A0: 0B A0 10 04 24 30 3C 30 74 1B B7 09 0A ED 74 15  // ....$0<0t.....t.
    51B0: B7 05 EB 11 A0 10 04 24 30 3C 30 75 08 B7 0B 0A  // .......$0<0u....
    51C0: ED 74 02 B7 03 8A 1E 88 04 80 E3 F0 0A DF 88 1E  // .t..............
    51D0: 88 04 EB 29 3C 02 75 2B 80 26 89 04 6F 80 0E 89  // ...)<.u+.&..o...
    51E0: 04 10 EB B4 80 FB 31 75 1B 0A C0 74 0B 3C 01 75  // ......1u...t.<.u
    51F0: 0C 80 0E 89 04 08 EB 05 80 26 89 04 F7 8B EC C6  // .........&......
    5200: 46 1A 12 C3 80 FB 33 75 16 3C 00 74 0B 3C 01 75  // F.....3u.<.t.<.u
    5210: EC 80 26 89 04 FD EB E5 80 0E 89 04 02 EB DE 80  // ..&.............
    5220: FB 34 75 17 3C 00 75 07 80 26 87 04 FE EB CE 3C  // .4u.<.u..&.....<
    5230: 01 75 07 80 0E 87 04 01 EB C3 C3 80 FB 36 75 26  // .u...........6u&
    5240: BB 20 FF 3C 01 74 09 BB 00 DF 3C 00 74 02 EB AD  // . .<.t....<.t...
    5250: E8 02 00 EB A8 9C FA BA C4 03 B0 01 EE 42 EC 22  // .............B."
    5260: C7 0A C3 EE 9D C3 C3 B3 03 B7 00 BA CC 03 EC A8  // ................
    5270: 01 75 02 B7 01 A0 88 04 8A E0 B1 04 D2 EC 25 0F  // .u............%.
    5280: 0F 8B C8 8B EC 89 5E 0E 89 4E 16 C6 46 1A 12 C3  // ......^..N..F...
    5290: 9C FA C7 06 14 00 E0 77 8C 0E 16 00 9D C3 28 18  // .......w......(.
    52A0: 08 00 08 09 03 00 02 63 2D 27 28 90 2B A0 BF 1F  // .......c-'(.+...
    52B0: 00 C7 06 07 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3  // ................
    52C0: FF 00 01 02 03 04 05 06 07 10 11 12 13 14 15 16  // ................
    52D0: 17 08 00 0F 00 00 00 00 00 00 10 0E 00 FF 50 18  // ..............P.
    52E0: 08 00 10 01 03 00 02 63 5F 4F 50 82 55 81 BF 1F  // .......c_OP.U...
    52F0: 00 C7 06 07 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3  // ...........(....
    5300: FF 00 01 02 03 04 05 06 07 10 11 12 13 14 15 16  // ................
    5310: 17 08 00 0F 00 00 00 00 00 00 10 0E 00 FF 28 18  // ..............(.
    5320: 08 00 40 09 03 00 02 63 2D 27 28 90 2B 80 BF 1F  // ..@....c-'(.+...
    5330: 00 C1 00 00 00 00 00 00 9C 8E 8F 14 00 96 B9 A2  // ................
    5340: FF 00 13 15 17 02 04 06 07 10 11 12 13 14 15 16  // ................
    5350: 17 01 00 03 00 00 00 00 00 00 30 0F 00 FF 50 18  // ..........0...P.
    5360: 08 00 40 01 01 00 06 63 5F 4F 50 82 54 80 BF 1F  // ..@....c_OP.T...
    5370: 00 C1 00 00 00 00 00 00 9C 8E 8F 28 00 96 B9 C2  // ...........(....
    5380: FF 00 17 17 17 17 17 17 17 17 17 17 17 17 17 17  // ................
    5390: 17 01 00 01 00 00 00 00 00 00 00 0D 00 FF 50 18  // ..............P.
    53A0: 0E 00 10 00 03 00 03 A6 5F 4F 50 82 55 81 BF 1F  // ........_OP.U...
    53B0: 00 4D 0B 0C 00 00 00 00 83 85 5D 28 0D 63 BA A3  // .M........](.c..
    53C0: FF 00 08 08 08 08 08 08 08 10 18 18 18 18 18 18  // ................
    53D0: 18 0E 00 0F 08 00 00 00 00 00 10 0A 00 FF 50 1D  // ..............P.
    53E0: 10 00 A0 01 0F 00 0A E3 5F 4F 50 82 54 80 0B 3E  // ........_OP.T..>
    53F0: 00 40 00 00 00 00 00 00 EA 8C DF 50 00 E7 04 E3  // .@.........P....
    5400: FF 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E  // ................
    5410: 0F 01 00 0F 00 10 00 00 00 00 40 05 0F FF 00 05  // ..........@.....
    5420: 11 1C 08 0B 14 28 0E 18 2D 32 20 24 38 3F 00 05  // .....(..-2 $8?..
    5430: 08 0B 0E 11 14 18 1C 20 24 28 2D 32 38 3F 07 0C  // ....... $(-28?..
    5440: 10 15 1A 18 16 15 13 1C 25 2F 38 33 2E 2A 25 27  // ........%/83.*%'
    5450: 29 2A 2C 23 19 10 23 25 27 2A 2C 2B 2A 29 29 2D  // )*,#..#%'*,+*))-
    5460: 32 37 3B 39 37 34 32 33 34 35 35 31 2C 27 2F 30  // 27;974234551,'/0
    5470: 32 33 34 34 33 33 32 35 38 3A 3D 3C 3A 39 38 38  // 234433258:=<:988
    5480: 39 39 3A 37 34 31 03 05 07 09 0B 0B 0A 09 08 0D  // 99:741..........
    5490: 11 15 19 17 15 13 11 11 12 13 14 0F 0B 07 10 10  // ................
    54A0: 12 13 14 13 13 13 12 14 16 18 1A 19 18 17 16 17  // ................
    54B0: 17 17 18 15 14 11 15 15 16 17 17 17 17 17 16 18  // ................
    54C0: 19 1A 1B 1B 1A 19 19 19 19 19 1A 18 17 16 02 03  // ................
    54D0: 04 05 07 06 06 05 05 07 0A 0C 0E 0D 0C 0B 09 0A  // ................
    54E0: 0A 0B 0B 09 06 04 09 09 0A 0B 0B 0B 0B 0B 0A 0C  // ................
    54F0: 0D 0E 0F 0F 0E 0D 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C  // ................
    5500: 0C 0D 0D 0D 0D 0D 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E  // ................
    5510: 0E 0E 0E 0E 0D 0C 00 00 00 00 00 00 00 00 28 18  // ..............(.
    5520: 08 00 20 09 0F 00 06 63 2D 27 28 90 2B 80 BF 1F  // .. ....c-'(.+...
    5530: 00 C0 00 00 00 00 00 00 9C 8E 8F 14 00 96 B9 E3  // ................
    5540: FF 00 01 02 03 04 05 06 07 10 11 12 13 14 15 16  // ................
    5550: 17 01 00 0F 00 00 00 00 00 00 00 05 0F FF 50 18  // ..............P.
    5560: 08 00 40 01 0F 00 06 63 5F 4F 50 82 54 80 BF 1F  // ..@....c_OP.T...
    5570: 00 C0 00 00 00 00 00 00 9C 8E 8F 28 00 96 B9 E3  // ...........(....
    5580: FF 00 01 02 03 04 05 06 07 10 11 12 13 14 15 16  // ................
    5590: 17 01 00 0F 00 00 00 00 00 00 00 05 0F FF 00 05  // ................
    55A0: 11 1C 08 0B 25 28 02 07 1B 20 0F 14 28 2C 0C 11  // ....%(... ..(,..
    55B0: 25 2A 14 1E 32 36 0F 13 27 2C 1B 20 34 39 06 0B  // %*..26..',. 49..
    55C0: 1F 24 13 18 2C 30 09 0D 21 26 15 1A 2E 33 13 17  // .$..,0..!&...3..
    55D0: 2B 30 1F 24 38 3D 0E 18 2D 32 20 24 38 3F 00 05  // +0.$8=..-2 $8?..
    55E0: 11 1C 08 0B 14 18 00 05 11 1C 08 0B 14 18 0E 18  // ................
    55F0: 2D 32 20 24 38 3F 0E 18 2D 32 20 24 38 3F 00 05  // -2 $8?..-2 $8?..
    5600: 11 1C 08 0B 14 18 00 05 11 1C 08 0B 14 18 0E 18  // ................
    5610: 2D 32 20 24 38 3F 0E 18 2D 32 20 24 38 3F 50 18  // -2 $8?..-2 $8?P.
    5620: 0E 00 80 01 0F 00 06 A2 5F 4F 50 82 54 80 BF 1F  // ........_OP.T...
    5630: 00 40 00 00 00 00 00 00 83 85 5D 28 0F 63 BA E3  // .@........](.c..
    5640: FF 00 08 00 00 18 18 00 00 00 08 00 00 00 18 00  // ................
    5650: 00 0B 00 05 00 00 00 00 00 00 00 05 05 FF 50 18  // ..............P.
    5660: 0E 00 80 01 0F 00 06 A3 5F 4F 50 82 54 80 BF 1F  // ........_OP.T...
    5670: 00 40 00 00 00 00 00 00 83 85 5D 28 0F 63 BA E3  // .@........](.c..
    5680: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    5690: 3F 01 00 0F 00 00 00 00 00 00 00 05 0F FF 28 18  // ?.............(.
    56A0: 0E 00 08 09 03 00 02 A3 2D 27 28 90 2B A0 BF 1F  // ........-'(.+...
    56B0: 00 4D 0B 0C 00 00 00 00 83 85 5D 14 1F 63 BA A3  // .M........]..c..
    56C0: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    56D0: 3F 08 00 0F 00 00 00 00 00 00 10 0E 00 FF 50 18  // ?.............P.
    56E0: 0E 00 10 01 03 00 02 A3 5F 4F 50 82 55 81 BF 1F  // ........_OP.U...
    56F0: 00 4D 0B 0C 00 00 00 00 83 85 5D 28 1F 63 BA A3  // .M........](.c..
    5700: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    5710: 3F 08 00 0F 00 00 00 00 00 00 10 0E 00 FF 28 18  // ?.............(.
    5720: 10 00 08 08 03 00 02 67 2D 27 28 90 2B A0 BF 1F  // .......g-'(.+...
    5730: 00 4F 0D 0E 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3  // .O..............
    5740: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    5750: 3F 0C 00 0F 08 00 00 00 00 00 10 0E 00 FF 50 18  // ?.............P.
    5760: 10 00 10 00 03 00 02 67 5F 4F 50 82 55 81 BF 1F  // .......g_OP.U...
    5770: 00 4F 0D 0E 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3  // .O.........(....
    5780: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    5790: 3F 0C 00 0F 08 00 00 00 00 00 10 0E 00 FF 50 18  // ?.............P.
    57A0: 10 00 10 00 03 00 02 66 5F 4F 50 82 55 81 BF 1F  // .......f_OP.U...
    57B0: 00 4F 0D 0E 00 00 00 00 9C 8E 8F 28 0F 96 B9 A3  // .O.........(....
    57C0: FF 00 08 08 08 08 08 08 08 10 18 18 18 18 18 18  // ................
    57D0: 18 0E 00 0F 08 00 00 00 00 00 10 0A 00 FF 50 1D  // ..............P.
    57E0: 10 00 A0 01 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E  // ........_OP.T..>
    57F0: 00 40 00 00 00 00 00 00 EA 8C DF 28 00 E7 04 C3  // .@.........(....
    5800: FF 00 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F  // ..??????????????
    5810: 3F 01 00 0F 00 00 00 00 00 00 00 05 01 FF 50 1D  // ?.............P.
    5820: 10 00 A0 01 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E  // ........_OP.T..>
    5830: 00 40 00 00 00 00 00 00 EA 8C DF 28 00 E7 04 E3  // .@.........(....
    5840: FF 00 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E  // .........89:;<=>
    5850: 3F 01 00 0F 00 00 00 00 00 00 00 05 0F FF 28 18  // ?.............(.
    5860: 08 00 20 01 0F 00 0E 63 5F 4F 50 82 54 80 BF 1F  // .. ....c_OP.T...
    5870: 00 41 00 00 00 00 00 00 9C 8E 8F 28 40 96 B9 A3  // .A.........(@...
    5880: FF 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E  // ................
    5890: 0F 41 00 0F 00 00 00 00 00 00 40 05 0F FF 36 52  // .A........@...6R
    58A0: 00 C0 00 00 00 00 00 00 00 00 00 00 00 00 56 58  // ..............VX
    58B0: 00 C0 00 00 00 00 00 00 00 00 00 00 00 00 1A 00  // ................
    58C0: EE 8F 00 C0 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    58D0: 00 00 00 00 00 00 00 00 1E E8 10 00 2E 8E 1E 07  // ................
    58E0: 03 E8 F8 36 E8 CF 36 E8 70 1A 1F C3 2E 8E 1E 07  // ...6..6.p.......
    58F0: 03 C7 06 87 04 60 F9 C6 06 8A 04 0B A0 89 04 0C  // .....`..........
    5900: 11 24 17 A2 89 04 B4 01 E8 6D 1E A0 89 04 80 26  // .$.......m.....&
    5910: 10 04 CF 80 0E 10 04 20 C7 06 63 04 D4 03 0E 1F  // ....... ..c.....
    5920: E8 E7 B5 F7 C1 02 00 75 03 E8 6F B5 C3 1E 2E 8E  // .......u..o.....
    5930: 1E 07 03 0E 07 EB 00 1F C3 F6 06 89 04 08 74 01  // ..............t.
    5940: C3 53 BA C8 03 EC B0 FF B2 C6 EE B2 C8 80 3E 63  // .S............>c
    5950: 04 B4 75 2F BE B2 59 B9 40 00 33 DB 9C FA 8A C3  // ..u/..Y.@.3.....
    5960: EE 8B FB C1 EF 03 83 E7 03 03 FE 2E 8A 05 42 EE  // ..............B.
    5970: 2E 8A 45 04 EE 2E 8A 45 08 EE FE C3 4A E2 DF 9D  // ..E....E....J...
    5980: E9 85 00 26 8A 47 2B F6 06 89 04 06 74 31 B9 F8  // ...&.G+.....t1..
    5990: 00 BF B6 53 3C 08 74 11 B9 40 00 BF 36 55 3C 38  // ...S<.t..@..6U<8
    59A0: 74 07 3C 3F 74 03 BF 76 55 33 DB 9C FA 8A C3 EE  // t.<?t..vU3......
    59B0: 2E 8A 01 42 EE EE EE FE C3 4A E2 F1 9D EB 49 3C  // ...B.....J....I<
    59C0: 08 74 25 3C 38 74 2E 3C 3F 74 2A B9 08 00 33 DB  // .t%<8t.<?t*...3.
    59D0: 51 E8 0B D3 B9 08 00 F7 C3 10 00 74 03 83 C7 18  // Q..........t....
    59E0: E8 67 00 59 E2 EA EB 20 E8 F4 D2 B9 00 01 33 DB  // .g.Y... ......3.
    59F0: E8 57 00 EB 13 B9 40 00 33 DB 51 E8 28 00 8A C3  // .W....@.3.Q.(...
    5A00: E8 B7 2F FE C3 59 E2 F2 5B C3 00 2A 00 2A 00 2A  // ../..Y..[..*.*.*
    5A10: 00 2A 15 3F 15 3F 15 3F 15 3F 00 2A 00 3F 00 2A  // .*.?.?.?.?.*.?.*
    5A20: 00 3F 00 2A 00 3F 8B FB C1 EF 02 83 E7 0F 2E 8A  // .?.*.?..........
    5A30: B5 A2 59 8B FB D1 EF 83 E7 0F 2E 8A AD A2 59 8B  // ..Y...........Y.
    5A40: FB 83 E7 0F 2E 8A 8D A2 59 C3 9C 8A C3 FA EE 2E  // ........Y.......
    5A50: 8A 05 42 EE 47 2E 8A 05 EE 47 2E 8A 05 EE 47 FE  // ..B.G....G....G.
    5A60: C3 4A E2 E7 9D C3 00 00 00 00 00 00 00 00 7E 81  // .J............~.
    5A70: A5 81 BD 99 81 7E 7C FE D6 BA C6 FE 7C 00 C6 EE  // .....~|.....|...
    5A80: FE FE 7C 38 10 00 10 38 7C FE 7C 38 10 00 10 38  // ..|8...8|.|8...8
    5A90: 10 EE EE 10 38 00 38 7C FE FE 6C 10 38 00 00 18  // ....8.8|..l.8...
    5AA0: 3C 7E 3C 18 00 00 FF E7 C3 81 C3 E7 FF FF 00 18  // <~<.............
    5AB0: 3C 66 66 3C 18 00 FF E7 C3 99 99 C3 E7 FF 1E 0E  // <ff<............
    5AC0: 1E 36 78 CC CC 78 7E C3 C3 7E 18 7E 18 18 1E 1A  // .6x..x~..~.~....
    5AD0: 1E 18 18 70 F0 60 3E 3E 36 36 F6 66 1E 0C DB 3C  // ...p.`>>66.f...<
    5AE0: 66 E7 66 3C DB 00 80 C0 F0 F8 F0 C0 80 00 02 06  // f.f<............
    5AF0: 1E 3E 1E 06 02 00 18 3C 7E 18 7E 3C 18 00 66 66  // .>.....<~.~<..ff
    5B00: 66 66 66 00 66 00 7F DB 7B 3B 1B 1B 1B 00 3C 66  // fff.f...{;....<f
    5B10: 38 6C 6C 38 CC 78 00 00 00 00 FE FE FE 00 18 3C  // 8ll8.x.........<
    5B20: 7E 18 7E 3C 18 7E 18 3C 7E 18 18 18 18 00 18 18  // ~.~<.~.<~.......
    5B30: 18 18 7E 3C 18 00 00 18 1C FE 1C 18 00 00 00 30  // ..~<...........0
    5B40: 70 FE 70 30 00 00 00 00 C0 C0 C0 FE 00 00 00 24  // p.p0...........$
    5B50: 66 FF 66 24 00 00 00 10 38 7C 7C FE 00 00 00 FE  // f.f$....8||.....
    5B60: 7C 7C 38 10 00 00 00 00 00 00 00 00 00 00 18 3C  // ||8............<
    5B70: 3C 18 18 00 18 00 6C 6C 6C 00 00 00 00 00 6C 6C  // <.....lll.....ll
    5B80: FE 6C FE 6C 6C 00 18 7E C0 7C 06 FC 18 00 00 C6  // .l.ll..~.|......
    5B90: 0C 18 30 60 C6 00 38 6C 38 76 CC CC 76 00 18 18  // ..0`..8l8v..v...
    5BA0: 30 00 00 00 00 00 18 30 60 60 60 30 18 00 60 30  // 0......0```0..`0
    5BB0: 18 18 18 30 60 00 00 EE 7C FE 7C EE 00 00 00 18  // ...0`...|.|.....
    5BC0: 18 7E 18 18 00 00 00 00 00 00 18 18 30 00 00 00  // .~..........0...
    5BD0: 00 FE 00 00 00 00 00 00 00 00 00 38 38 00 06 0C  // ...........88...
    5BE0: 18 30 60 C0 80 00 7C C6 CE DE F6 E6 7C 00 18 78  // .0`...|.....|..x
    5BF0: 18 18 18 18 7E 00 7C C6 0C 18 30 66 FE 00 7C C6  // ....~.|...0f..|.
    5C00: 06 3C 06 C6 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE C0  // .<..|...<l......
    5C10: FC 06 06 C6 7C 00 7C C6 C0 FC C6 C6 7C 00 FE C6  // ....|.|.....|...
    5C20: 06 0C 18 18 18 00 7C C6 C6 7C C6 C6 7C 00 7C C6  // ......|..|..|.|.
    5C30: C6 7E 06 C6 7C 00 00 1C 1C 00 00 1C 1C 00 00 18  // .~..|...........
    5C40: 18 00 00 18 18 30 0C 18 30 60 30 18 0C 00 00 00  // .....0..0`0.....
    5C50: FE 00 00 FE 00 00 60 30 18 0C 18 30 60 00 7C C6  // ......`0...0`.|.
    5C60: 06 0C 18 00 18 00 7C C6 C6 DE DC C0 7E 00 38 6C  // ......|.....~.8l
    5C70: C6 C6 FE C6 C6 00 FC 66 66 7C 66 66 FC 00 3C 66  // .......ff|ff..<f
    5C80: C0 C0 C0 66 3C 00 F8 6C 66 66 66 6C F8 00 FE C2  // ...f<..lfffl....
    5C90: C0 F8 C0 C2 FE 00 FE 62 60 7C 60 60 F0 00 7C C6  // .......b`|``..|.
    5CA0: C0 C0 DE C6 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C 18  // ....|.........<.
    5CB0: 18 18 18 18 3C 00 3C 18 18 18 D8 D8 70 00 C6 CC  // ....<.<.....p...
    5CC0: D8 F0 D8 CC C6 00 F0 60 60 60 60 62 FE 00 C6 EE  // .......````b....
    5CD0: FE D6 D6 C6 C6 00 C6 E6 E6 F6 DE CE C6 00 7C C6  // ..............|.
    5CE0: C6 C6 C6 C6 7C 00 FC 66 66 7C 60 60 F0 00 7C C6  // ....|..ff|``..|.
    5CF0: C6 C6 C6 D6 7C 06 FC C6 C6 FC D8 CC C6 00 7C C6  // ....|.........|.
    5D00: C0 7C 06 C6 7C 00 7E 5A 18 18 18 18 3C 00 C6 C6  // .|..|.~Z....<...
    5D10: C6 C6 C6 C6 7C 00 C6 C6 C6 C6 6C 38 10 00 C6 C6  // ....|.....l8....
    5D20: D6 D6 FE EE C6 00 C6 6C 38 38 38 6C C6 00 66 66  // .......l888l..ff
    5D30: 66 3C 18 18 3C 00 FE 86 0C 18 30 62 FE 00 7C 60  // f<..<.....0b..|`
    5D40: 60 60 60 60 7C 00 C0 60 30 18 0C 06 02 00 7C 0C  // ````|..`0.....|.
    5D50: 0C 0C 0C 0C 7C 00 10 38 6C C6 00 00 00 00 00 00  // ....|..8l.......
    5D60: 00 00 00 00 00 FF 30 30 18 00 00 00 00 00 00 00  // ......00........
    5D70: 78 0C 7C CC 7E 00 E0 60 7C 66 66 66 FC 00 00 00  // x.|.~..`|fff....
    5D80: 7C C6 C0 C6 7C 00 1C 0C 7C CC CC CC 7E 00 00 00  // |...|...|...~...
    5D90: 7C C6 FE C0 7C 00 1C 36 30 FC 30 30 78 00 00 00  // |...|..60.00x...
    5DA0: 76 CE C6 7E 06 7C E0 60 7C 66 66 66 E6 00 18 00  // v..~.|.`|fff....
    5DB0: 38 18 18 18 3C 00 0C 00 1C 0C 0C 0C CC 78 E0 60  // 8...<........x.`
    5DC0: 66 6C 78 6C E6 00 18 18 18 18 18 18 1C 00 00 00  // flxl............
    5DD0: 6C FE D6 D6 C6 00 00 00 DC 66 66 66 66 00 00 00  // l........ffff...
    5DE0: 7C C6 C6 C6 7C 00 00 00 DC 66 66 7C 60 F0 00 00  // |...|....ff|`...
    5DF0: 76 CC CC 7C 0C 1E 00 00 DC 66 60 60 F0 00 00 00  // v..|.....f``....
    5E00: 7C C0 7C 06 7C 00 30 30 FC 30 30 36 1C 00 00 00  // |.|.|.00.006....
    5E10: CC CC CC CC 76 00 00 00 C6 C6 6C 38 10 00 00 00  // ....v.....l8....
    5E20: C6 C6 D6 FE 6C 00 00 00 C6 6C 38 6C C6 00 00 00  // ....l....l8l....
    5E30: C6 C6 CE 76 06 7C 00 00 FC 98 30 64 FC 00 0E 18  // ...v.|....0d....
    5E40: 18 70 18 18 0E 00 18 18 18 00 18 18 18 00 70 18  // .p............p.
    5E50: 18 0E 18 18 70 00 76 DC 00 00 00 00 00 00 00 10  // ....p.v.........
    5E60: 38 38 6C 6C FE 00 3C 66 C0 66 3C 18 CC 78 00 C6  // 88ll..<f.f<..x..
    5E70: 00 C6 C6 CE 76 00 0E 00 7C C6 FE C0 7C 00 7C C6  // ....v...|...|.|.
    5E80: 78 0C 7C CC 7E 00 C6 00 78 0C 7C CC 7E 00 E0 00  // x.|.~...x.|.~...
    5E90: 78 0C 7C CC 7E 00 38 38 78 0C 7C CC 7E 00 00 00  // x.|.~.88x.|.~...
    5EA0: 7C C0 7C 18 6C 38 7C C6 7C C6 FE C0 7C 00 C6 00  // |.|.l8|.|...|...
    5EB0: 7C C6 FE C0 7C 00 E0 00 7C C6 FE C0 7C 00 66 00  // |...|...|...|.f.
    5EC0: 38 18 18 18 3C 00 7C C6 38 18 18 18 3C 00 00 00  // 8...<.|.8...<...
    5ED0: 38 18 18 18 3C 00 C6 38 6C C6 FE C6 C6 00 38 38  // 8...<..8l.....88
    5EE0: 00 7C C6 FE C6 00 0E 00 FE C0 F8 C0 FE 00 00 00  // .|..............
    5EF0: 6C 9A 7E D8 6E 00 7E D8 D8 FE D8 D8 DE 00 7C C6  // l.~.n.~.......|.
    5F00: 00 7C C6 C6 7C 00 00 C6 00 7C C6 C6 7C 00 00 E0  // .|..|....|..|...
    5F10: 00 7C C6 C6 7C 00 7C C6 00 C6 C6 CE 76 00 00 E0  // .|..|.|.....v...
    5F20: 00 C6 C6 CE 76 00 18 00 3C 18 18 18 3C 00 C6 38  // ....v...<...<..8
    5F30: 6C C6 C6 6C 38 00 C6 00 C6 C6 C6 C6 7C 00 00 18  // l..l8.......|...
    5F40: 7E D8 D8 7E 18 00 38 6C 60 F0 66 F6 6C 00 C3 66  // ~..~..8l`.f.l..f
    5F50: 3C 7E 18 3C 18 00 3E 63 38 0E 63 3E 00 1C 00 3E  // <~.<..>c8.c>...>
    5F60: 61 3C 86 7C 00 1C 0E 00 78 0C 7C CC 7E 00 1C 00  // a<.|....x.|.~...
    5F70: 38 18 18 18 3C 00 00 0E 00 7C C6 C6 7C 00 00 0E  // 8...<....|..|...
    5F80: 00 CC CC DC 76 00 00 FC 00 BC 66 66 E6 00 FE 00  // ....v.....ff....
    5F90: C6 E6 F6 CE C6 00 3E 00 3E 60 67 63 3D 00 3E 00  // ......>.>`gc=.>.
    5FA0: 76 CE C6 7E 06 7C 18 00 18 30 60 66 3C 00 00 00  // v..~.|...0`f<...
    5FB0: 00 7C 60 60 00 00 00 00 00 7C 0C 0C 00 00 C0 CC  // .|``.....|......
    5FC0: D8 30 7C 36 0C 3E C0 CC D8 30 6C 3C 7E 0C 18 00  // .0|6.>...0l<~...
    5FD0: 18 18 3C 3C 18 00 00 36 6C D8 6C 36 00 00 00 D8  // ..<<...6l.l6....
    5FE0: 6C 36 6C D8 00 00 22 88 22 88 22 88 22 88 55 AA  // l6l...".".".".U.
    5FF0: 55 AA 55 AA 55 AA DD 77 DD 77 DD 77 DD 77 18 18  // U.U.U..w.w.w.w..
    6000: 18 18 18 18 18 18 18 18 18 18 F8 18 18 18 18 18  // ................
    6010: F8 18 F8 18 18 18 36 36 36 36 F6 36 36 36 00 00  // ......6666.666..
    6020: 00 00 FE 36 36 36 00 00 F8 18 F8 18 18 18 36 36  // ...666........66
    6030: F6 06 F6 36 36 36 36 36 36 36 36 36 36 36 00 00  // ...66666666666..
    6040: FE 06 F6 36 36 36 36 36 F6 06 FE 00 00 00 36 36  // ...66666......66
    6050: 36 36 FE 00 00 00 18 18 F8 18 F8 00 00 00 00 00  // 66..............
    6060: 00 00 F8 18 18 18 18 18 18 18 1F 00 00 00 18 18  // ................
    6070: 18 18 FF 00 00 00 00 00 00 00 FF 18 18 18 18 18  // ................
    6080: 18 18 1F 18 18 18 00 00 00 00 FF 00 00 00 18 18  // ................
    6090: 18 18 FF 18 18 18 18 18 1F 18 1F 18 18 18 36 36  // ..............66
    60A0: 36 36 37 36 36 36 36 36 37 30 3F 00 00 00 00 00  // 6676666670?.....
    60B0: 3F 30 37 36 36 36 36 36 F7 00 FF 00 00 00 00 00  // ?0766666........
    60C0: FF 00 F7 36 36 36 36 36 37 30 37 36 36 36 00 00  // ...66666707666..
    60D0: FF 00 FF 00 00 00 36 36 F7 00 F7 36 36 36 18 18  // ......66...666..
    60E0: FF 00 FF 00 00 00 36 36 36 36 FF 00 00 00 00 00  // ......6666......
    60F0: FF 00 FF 18 18 18 00 00 00 00 FF 36 36 36 36 36  // ...........66666
    6100: 36 36 3F 00 00 00 18 18 1F 18 1F 00 00 00 00 00  // 66?.............
    6110: 1F 18 1F 18 18 18 00 00 00 00 3F 36 36 36 36 36  // ..........?66666
    6120: 36 36 FF 36 36 36 18 18 FF 18 FF 18 18 18 18 18  // 66.666..........
    6130: 18 18 F8 00 00 00 00 00 00 00 1F 18 18 18 FF FF  // ................
    6140: FF FF FF FF FF FF 00 00 00 00 FF FF FF FF F0 F0  // ................
    6150: F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF FF  // ................
    6160: FF FF 00 00 00 00 00 00 66 DC D8 DC 66 00 00 78  // ........f...f..x
    6170: CC F8 CC C6 CC 00 00 FE 62 60 60 60 E0 00 00 FE  // ........b```....
    6180: 6C 6C 6C 6C 6C 00 FE C6 60 30 60 C6 FE 00 00 7E  // lllll...`0`....~
    6190: D8 CC CC D8 70 00 00 66 66 66 66 7C C0 00 00 76  // ....p..ffff|...v
    61A0: DC 18 18 18 38 00 FE 38 6C C6 6C 38 FE 00 38 6C  // ....8..8l.l8..8l
    61B0: C6 FE C6 6C 38 00 38 6C C6 C6 6C 6C EE 00 3E 60  // ...l8.8l..ll..>`
    61C0: 38 66 C6 CC 78 00 00 00 7E DB DB 7E 00 00 06 7C  // 8f..x...~..~...|
    61D0: DE F6 E6 7C C0 00 38 60 C0 F8 C0 60 38 00 7C C6  // ...|..8`...`8.|.
    61E0: C6 C6 C6 C6 C6 00 00 FE 00 FE 00 FE 00 00 18 18  // ................
    61F0: 7E 18 18 00 7E 00 30 18 0C 18 30 00 7E 00 0C 18  // ~...~.0...0.~...
    6200: 30 18 0C 00 7E 00 0C 1E 18 18 18 18 18 18 18 18  // 0...~...........
    6210: 18 18 18 78 30 00 00 00 18 00 7E 00 18 00 00 76  // ...x0.....~....v
    6220: DC 00 76 DC 00 00 7C C6 C6 7C 00 00 00 00 00 00  // ..v...|..|......
    6230: 00 18 18 00 00 00 00 00 00 00 18 00 00 00 1F 18  // ................
    6240: 18 18 F8 38 18 00 D8 6C 6C 6C 00 00 00 00 70 D8  // ...8...lll....p.
    6250: 30 F8 00 00 00 00 00 00 7C 7C 7C 7C 00 00 00 00  // 0.......||||....
    6260: 00 00 00 00 00 00 1D 00 00 00 00 24 66 FF 66 24  // ...........$f.f$
    6270: 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00  // ................
    6280: 00 00 00 00 00 00 00 00 00 00 00 7E 81 A5 81 81  // ...........~....
    6290: BD 99 81 81 7E 00 00 00 00 00 00 7C FE FE D6 FE  // ....~......|....
    62A0: FE BA C6 FE 7C 00 00 00 00 00 00 00 6C EE FE FE  // ....|.......l...
    62B0: FE FE 7C 38 10 00 00 00 00 00 00 00 10 38 7C FE  // ..|8.........8|.
    62C0: 7C 38 10 00 00 00 00 00 00 00 00 00 10 38 38 10  // |8...........88.
    62D0: 6C EE 6C 10 38 00 00 00 00 00 00 10 38 7C 7C FE  // l.l.8.......8||.
    62E0: FE FE 6C 10 38 00 00 00 00 00 00 00 00 00 18 3C  // ..l.8..........<
    62F0: 3C 3C 18 00 00 00 00 00 00 FF FF FF FF FF E7 C3  // <<..............
    6300: C3 C3 E7 FF FF FF FF FF FF 00 00 00 00 18 3C 66  // ..............<f
    6310: 66 66 3C 18 00 00 00 00 00 FF FF FF FF E7 C3 99  // ff<.............
    6320: 99 99 C3 E7 FF FF FF FF FF 00 00 1E 0E 1E 36 78  // ..............6x
    6330: CC CC CC CC 78 00 00 00 00 00 00 3C 66 66 66 3C  // ....x......<fff<
    6340: 18 7E 18 18 18 00 00 00 00 00 00 1E 1A 1E 18 18  // .~..............
    6350: 18 18 78 F8 70 00 00 00 00 00 00 3E 36 3E 36 36  // ..x.p......>6>66
    6360: 76 F6 66 0E 1E 0C 00 00 00 00 00 18 DB 7E 3C 66  // v.f..........~<f
    6370: 66 3C 7E DB 18 00 00 00 00 00 00 00 80 E0 F0 FC  // f<~.............
    6380: FE FC F0 E0 80 00 00 00 00 00 00 00 02 0E 3E 7E  // ..............>~
    6390: FE 7E 3E 0E 02 00 00 00 00 00 00 18 3C 7E 18 18  // .~>.........<~..
    63A0: 18 18 7E 3C 18 00 00 00 00 00 00 66 66 66 66 66  // ..~<.......fffff
    63B0: 66 66 00 66 66 00 00 00 00 00 00 7F DB DB DB DB  // ff.ff...........
    63C0: 7B 1B 1B 1B 1B 00 00 00 00 00 00 7C C6 C6 60 7C  // {..........|..`|
    63D0: F6 DE 7C 0C C6 C6 7C 00 00 00 00 00 00 00 00 00  // ..|...|.........
    63E0: 00 FE FE FE FE 00 00 00 00 00 00 18 3C 7E 18 18  // ............<~..
    63F0: 18 7E 3C 18 7E 00 00 00 00 00 00 18 3C 7E 18 18  // .~<.~.......<~..
    6400: 18 18 18 18 18 00 00 00 00 00 00 18 18 18 18 18  // ................
    6410: 18 18 7E 3C 18 00 00 00 00 00 00 00 00 00 0C 0E  // ..~<............
    6420: FF 0E 0C 00 00 00 00 00 00 00 00 00 00 00 30 70  // ..............0p
    6430: FE 70 30 00 00 00 00 00 00 00 00 00 00 00 00 C0  // .p0.............
    6440: C0 C0 FE 00 00 00 00 00 00 00 00 00 00 00 24 66  // ..............$f
    6450: FF 66 24 00 00 00 00 00 00 00 00 00 10 38 38 38  // .f$..........888
    6460: 7C 7C FE FE 00 00 00 00 00 00 00 00 FE FE 7C 7C  // ||............||
    6470: 7C 38 38 10 00 00 00 00 00 00 00 00 00 00 00 00  // |88.............
    6480: 00 00 00 00 00 00 00 00 00 00 00 18 3C 3C 3C 3C  // ............<<<<
    6490: 18 18 00 18 18 00 00 00 00 00 36 36 36 36 14 00  // ..........6666..
    64A0: 00 00 00 00 00 00 00 00 00 00 00 6C 6C 6C FE 6C  // ...........lll.l
    64B0: 6C FE 6C 6C 6C 00 00 00 00 00 00 18 18 7C C6 C0  // l.lll........|..
    64C0: 78 3C 06 C6 7C 18 18 00 00 00 00 00 00 00 62 66  // x<..|.........bf
    64D0: 0C 18 30 66 C6 00 00 00 00 00 00 38 6C 38 30 76  // ..0f.......8l80v
    64E0: 7E CC CC CC 76 00 00 00 00 00 0C 0C 0C 18 00 00  // ~...v...........
    64F0: 00 00 00 00 00 00 00 00 00 00 00 0C 18 30 30 30  // .............000
    6500: 30 30 30 18 0C 00 00 00 00 00 00 30 18 0C 0C 0C  // 000........0....
    6510: 0C 0C 0C 18 30 00 00 00 00 00 00 00 00 00 6C 38  // ....0.........l8
    6520: FE 38 6C 00 00 00 00 00 00 00 00 00 00 00 18 18  // .8l.............
    6530: 7E 18 18 00 00 00 00 00 00 00 00 00 00 00 00 00  // ~...............
    6540: 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00 00 00  // ................
    6550: FE 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6560: 00 00 00 18 18 00 00 00 00 00 00 00 00 02 06 0C  // ................
    6570: 18 30 60 C0 80 00 00 00 00 00 00 7C C6 C6 CE DE  // .0`........|....
    6580: F6 E6 C6 C6 7C 00 00 00 00 00 00 18 78 18 18 18  // ....|.......x...
    6590: 18 18 18 18 7E 00 00 00 00 00 00 7C C6 C6 06 0C  // ....~......|....
    65A0: 18 30 60 C6 FE 00 00 00 00 00 00 7C C6 06 06 3C  // .0`........|...<
    65B0: 06 06 06 C6 7C 00 00 00 00 00 00 0C 1C 3C 6C CC  // ....|........<l.
    65C0: CC FE 0C 0C 1E 00 00 00 00 00 00 FE C0 C0 C0 FC  // ................
    65D0: 06 06 06 C6 7C 00 00 00 00 00 00 7C C6 C0 C0 FC  // ....|......|....
    65E0: C6 C6 C6 C6 7C 00 00 00 00 00 00 FE C6 06 0C 18  // ....|...........
    65F0: 30 30 30 30 30 00 00 00 00 00 00 7C C6 C6 C6 7C  // 00000......|...|
    6600: C6 C6 C6 C6 7C 00 00 00 00 00 00 7C C6 C6 C6 C6  // ....|......|....
    6610: 7E 06 06 C6 7C 00 00 00 00 00 00 00 00 00 0C 0C  // ~...|...........
    6620: 00 00 0C 0C 00 00 00 00 00 00 00 00 00 00 0C 0C  // ................
    6630: 00 00 0C 0C 0C 18 00 00 00 00 00 00 0C 18 30 60  // ..............0`
    6640: C0 60 30 18 0C 00 00 00 00 00 00 00 00 00 00 FE  // .`0.............
    6650: 00 FE 00 00 00 00 00 00 00 00 00 00 60 30 18 0C  // ............`0..
    6660: 06 0C 18 30 60 00 00 00 00 00 00 7C C6 C6 0C 18  // ...0`......|....
    6670: 18 18 00 18 18 00 00 00 00 00 00 7C C6 C6 C6 DE  // ...........|....
    6680: DE DE DC C0 7E 00 00 00 00 00 00 38 6C C6 C6 C6  // ....~......8l...
    6690: FE C6 C6 C6 C6 00 00 00 00 00 00 FC 66 66 66 7C  // ............fff|
    66A0: 66 66 66 66 FC 00 00 00 00 00 00 3C 66 C2 C0 C0  // ffff.......<f...
    66B0: C0 C0 C2 66 3C 00 00 00 00 00 00 F8 6C 66 66 66  // ...f<.......lfff
    66C0: 66 66 66 6C F8 00 00 00 00 00 00 FE 66 60 64 7C  // fffl........f`d|
    66D0: 64 60 60 66 FE 00 00 00 00 00 00 FE 66 60 64 7C  // d``f........f`d|
    66E0: 64 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C0 C0  // d```.......|....
    66F0: C0 CE C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 FE  // ....|...........
    6700: C6 C6 C6 C6 C6 00 00 00 00 00 00 3C 18 18 18 18  // ...........<....
    6710: 18 18 18 18 3C 00 00 00 00 00 00 3C 18 18 18 18  // ....<......<....
    6720: 18 18 D8 D8 70 00 00 00 00 00 00 C6 C6 CC D8 F0  // ....p...........
    6730: F0 D8 CC C6 C6 00 00 00 00 00 00 F0 60 60 60 60  // ............````
    6740: 60 60 62 66 FE 00 00 00 00 00 00 C6 C6 EE EE FE  // ``bf............
    6750: D6 D6 D6 C6 C6 00 00 00 00 00 00 C6 C6 E6 E6 F6  // ................
    6760: DE CE CE C6 C6 00 00 00 00 00 00 7C C6 C6 C6 C6  // ...........|....
    6770: C6 C6 C6 C6 7C 00 00 00 00 00 00 FC 66 66 66 66  // ....|.......ffff
    6780: 7C 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C6 C6  // |```.......|....
    6790: C6 C6 D6 D6 7C 06 00 00 00 00 00 FC 66 66 66 7C  // ....|.......fff|
    67A0: 78 6C 66 66 E6 00 00 00 00 00 00 7C C6 C0 C0 70  // xlff.......|...p
    67B0: 1C 06 06 C6 7C 00 00 00 00 00 00 7E 5A 18 18 18  // ....|......~Z...
    67C0: 18 18 18 18 3C 00 00 00 00 00 00 C6 C6 C6 C6 C6  // ....<...........
    67D0: C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 C6  // ....|...........
    67E0: C6 C6 6C 38 10 00 00 00 00 00 00 C6 C6 C6 D6 D6  // ..l8............
    67F0: D6 FE EE C6 C6 00 00 00 00 00 00 C6 C6 C6 6C 38  // ..............l8
    6800: 38 6C C6 C6 C6 00 00 00 00 00 00 66 66 66 66 66  // 8l.........fffff
    6810: 3C 18 18 18 3C 00 00 00 00 00 00 FE C6 86 0C 18  // <...<...........
    6820: 30 60 C2 C6 FE 00 00 00 00 00 00 7C 60 60 60 60  // 0`.........|````
    6830: 60 60 60 60 7C 00 00 00 00 00 00 00 00 80 C0 60  // ````|..........`
    6840: 30 18 0C 06 02 00 00 00 00 00 00 7C 0C 0C 0C 0C  // 0..........|....
    6850: 0C 0C 0C 0C 7C 00 00 00 00 00 10 38 6C C6 00 00  // ....|......8l...
    6860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6870: 00 00 00 00 00 00 FF 00 00 00 18 18 18 0C 00 00  // ................
    6880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 0C  // ..............x.
    6890: 7C CC CC DC 76 00 00 00 00 00 00 E0 60 60 7C 66  // |...v.......``|f
    68A0: 66 66 66 66 FC 00 00 00 00 00 00 00 00 00 7C C6  // ffff..........|.
    68B0: C0 C0 C0 C6 7C 00 00 00 00 00 00 1C 0C 0C 7C CC  // ....|.........|.
    68C0: CC CC CC CC 7E 00 00 00 00 00 00 00 00 00 7C C6  // ....~.........|.
    68D0: C6 FE C0 C6 7C 00 00 00 00 00 00 1C 36 30 30 FC  // ....|.......600.
    68E0: 30 30 30 30 78 00 00 00 00 00 00 00 00 00 76 CE  // 0000x.........v.
    68F0: C6 C6 CE 76 06 C6 7C 00 00 00 00 E0 60 60 7C 66  // ...v..|.....``|f
    6900: 66 66 66 66 E6 00 00 00 00 00 00 18 18 00 38 18  // ffff..........8.
    6910: 18 18 18 18 3C 00 00 00 00 00 00 0C 0C 00 1C 0C  // ....<...........
    6920: 0C 0C 0C 0C CC CC 78 00 00 00 00 E0 60 60 66 66  // ......x.....``ff
    6930: 6C 78 6C 66 E6 00 00 00 00 00 00 18 18 18 18 18  // lxlf............
    6940: 18 18 18 18 1C 00 00 00 00 00 00 00 00 00 6C FE  // ..............l.
    6950: D6 D6 C6 C6 C6 00 00 00 00 00 00 00 00 00 DC 66  // ...............f
    6960: 66 66 66 66 66 00 00 00 00 00 00 00 00 00 7C C6  // fffff.........|.
    6970: C6 C6 C6 C6 7C 00 00 00 00 00 00 00 00 00 DC 66  // ....|..........f
    6980: 66 66 66 7C 60 60 F0 00 00 00 00 00 00 00 76 CC  // fff|``........v.
    6990: CC CC CC 7C 0C 0C 1E 00 00 00 00 00 00 00 DC 66  // ...|...........f
    69A0: 60 60 60 60 F0 00 00 00 00 00 00 00 00 00 7C C6  // ````..........|.
    69B0: C0 7C 06 C6 7C 00 00 00 00 00 00 30 30 30 FC 30  // .|..|......000.0
    69C0: 30 30 30 36 1C 00 00 00 00 00 00 00 00 00 CC CC  // 0006............
    69D0: CC CC CC CC 76 00 00 00 00 00 00 00 00 00 C6 C6  // ....v...........
    69E0: C6 C6 6C 38 10 00 00 00 00 00 00 00 00 00 C6 C6  // ..l8............
    69F0: D6 D6 D6 FE 6C 00 00 00 00 00 00 00 00 00 C6 C6  // ....l...........
    6A00: 6C 38 6C C6 C6 00 00 00 00 00 00 00 00 00 C6 C6  // l8l.............
    6A10: C6 C6 CE 76 06 C6 7C 00 00 00 00 00 00 00 FE 86  // ...v..|.........
    6A20: 0C 18 30 62 FE 00 00 00 00 00 00 0E 18 18 18 70  // ..0b...........p
    6A30: 18 18 18 18 0E 00 00 00 00 00 00 18 18 18 18 00  // ................
    6A40: 18 18 18 18 18 00 00 00 00 00 00 70 18 18 18 0E  // ...........p....
    6A50: 18 18 18 18 70 00 00 00 00 00 00 76 DC 00 00 00  // ....p......v....
    6A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 38  // ...............8
    6A70: 38 6C 6C FE 00 00 00 00 00 00 00 3C 66 C0 C0 C0  // 8ll........<f...
    6A80: C6 66 3C 18 0C CC 38 00 00 00 00 C6 00 00 C6 C6  // .f<...8.........
    6A90: C6 C6 C6 CE 76 00 00 00 00 00 0C 18 30 00 7C C6  // ....v.......0.|.
    6AA0: C6 FE C0 C6 7C 00 00 00 00 00 30 78 CC 00 78 0C  // ....|.....0x..x.
    6AB0: 7C CC CC DC 76 00 00 00 00 00 00 CC 00 00 78 0C  // |...v.........x.
    6AC0: 7C CC CC DC 76 00 00 00 00 00 60 30 18 00 78 0C  // |...v.....`0..x.
    6AD0: 7C CC CC DC 76 00 00 00 00 00 38 6C 38 00 78 0C  // |...v.....8l8.x.
    6AE0: 7C CC CC DC 76 00 00 00 00 00 00 00 00 7C C6 C0  // |...v........|..
    6AF0: C0 C6 7C 18 0C 6C 38 00 00 00 30 78 CC 00 7C C6  // ..|..l8...0x..|.
    6B00: C6 FE C0 C6 7C 00 00 00 00 00 00 CC 00 00 7C C6  // ....|.........|.
    6B10: C6 FE C0 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6  // ....|.....0...|.
    6B20: C6 FE C0 C6 7C 00 00 00 00 00 00 66 00 00 38 18  // ....|......f..8.
    6B30: 18 18 18 18 3C 00 00 00 00 00 18 3C 66 00 38 18  // ....<......<f.8.
    6B40: 18 18 18 18 3C 00 00 00 00 00 00 00 00 00 38 18  // ....<.........8.
    6B50: 18 18 18 18 3C 00 00 00 00 00 C6 00 38 6C C6 C6  // ....<.......8l..
    6B60: C6 FE C6 C6 C6 00 00 00 00 38 6C 38 00 38 6C C6  // .........8l8.8l.
    6B70: C6 FE C6 C6 C6 00 00 00 00 0C 18 30 00 FE 60 60  // ...........0..``
    6B80: 7C 60 60 60 FE 00 00 00 00 00 00 00 00 66 DB 1B  // |```.........f..
    6B90: 7F D8 D8 DF 76 00 00 00 00 00 00 7E D8 D8 D8 D8  // ....v......~....
    6BA0: FE D8 D8 D8 DE 00 00 00 00 00 30 78 CC 00 7C C6  // ..........0x..|.
    6BB0: C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 00 00 7C C6  // ....|.........|.
    6BC0: C6 C6 C6 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6  // ....|.....0...|.
    6BD0: C6 C6 C6 C6 7C 00 00 00 00 00 30 78 CC 00 C6 C6  // ....|.....0x....
    6BE0: C6 C6 C6 CE 76 00 00 00 00 00 60 30 18 00 C6 C6  // ....v.....`0....
    6BF0: C6 C6 C6 CE 76 00 00 00 00 00 18 00 3C 18 18 18  // ....v.......<...
    6C00: 18 18 18 18 3C 00 00 00 00 00 C6 00 7C C6 C6 C6  // ....<.......|...
    6C10: C6 C6 C6 C6 7C 00 00 00 00 00 C6 00 C6 C6 C6 C6  // ....|...........
    6C20: C6 C6 C6 C6 7C 00 00 00 00 00 00 18 18 7C C6 C0  // ....|........|..
    6C30: C0 C6 7C 18 18 00 00 00 00 00 38 6C 60 60 F0 60  // ..|.......8l``.`
    6C40: 60 60 66 F6 6C 00 00 00 00 00 66 66 66 66 3C 18  // ``f.l.....ffff<.
    6C50: 7E 18 3C 18 18 00 00 00 00 00 00 3E 63 63 30 1C  // ~.<........>cc0.
    6C60: 06 63 63 3E 00 1C 00 00 00 00 00 00 00 00 3E 63  // .cc>..........>c
    6C70: 38 0E 63 3E 00 1C 00 00 00 00 0C 18 30 00 78 0C  // 8.c>........0.x.
    6C80: 7C CC CC DC 76 00 00 00 00 00 0C 18 30 00 38 18  // |...v.......0.8.
    6C90: 18 18 18 18 3C 00 00 00 00 00 0C 18 30 00 7C C6  // ....<.......0.|.
    6CA0: C6 C6 C6 C6 7C 00 00 00 00 00 18 30 60 00 CC CC  // ....|......0`...
    6CB0: CC CC CC DC 76 00 00 00 00 00 00 76 DC 00 BC 66  // ....v......v...f
    6CC0: 66 66 66 66 E6 00 00 00 00 00 76 DC 00 C6 C6 E6  // ffff......v.....
    6CD0: F6 DE CE C6 C6 00 00 00 00 00 21 1E 00 1E 33 60  // ..........!...3`
    6CE0: 60 67 63 33 1D 00 00 00 00 00 42 3C 00 3B 66 66  // `gc3......B<.;ff
    6CF0: 66 3E 06 66 3C 00 00 00 00 00 00 30 30 00 30 30  // f>.f<......00.00
    6D00: 30 60 C6 C6 7C 00 00 00 00 00 00 00 00 00 00 00  // 0`..|...........
    6D10: 7E 60 60 60 00 00 00 00 00 00 00 00 00 00 00 00  // ~```............
    6D20: 7E 06 06 06 00 00 00 00 00 00 60 60 62 66 6C 18  // ~.........``bfl.
    6D30: 30 60 DC 36 0C 18 3E 00 00 00 60 60 62 66 6C 18  // 0`.6..>...``bfl.
    6D40: 36 6E DE 36 7E 06 06 00 00 00 00 18 18 00 18 18  // 6n.6~...........
    6D50: 3C 3C 3C 3C 18 00 00 00 00 00 00 00 00 00 36 6C  // <<<<..........6l
    6D60: D8 6C 36 00 00 00 00 00 00 00 00 00 00 00 D8 6C  // .l6............l
    6D70: 36 6C D8 00 00 00 00 00 00 11 44 11 44 11 44 11  // 6l........D.D.D.
    6D80: 44 11 44 11 44 11 44 11 44 AA 55 AA 55 AA 55 AA  // D.D.D.D.D.U.U.U.
    6D90: 55 AA 55 AA 55 AA 55 AA 55 DD 77 DD 77 DD 77 DD  // U.U.U.U.U.w.w.w.
    6DA0: 77 DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18 18  // w.w.w.w.w.......
    6DB0: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6DC0: F8 18 18 18 18 18 18 18 18 18 18 18 18 18 F8 18  // ................
    6DD0: F8 18 18 18 18 18 18 18 18 36 36 36 36 36 36 36  // .........6666666
    6DE0: F6 36 36 36 36 36 36 36 36 00 00 00 00 00 00 00  // .66666666.......
    6DF0: FE 36 36 36 36 36 36 36 36 00 00 00 00 00 F8 18  // .66666666.......
    6E00: F8 18 18 18 18 18 18 18 18 36 36 36 36 36 F6 06  // .........66666..
    6E10: F6 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // .666666666666666
    6E20: 36 36 36 36 36 36 36 36 36 00 00 00 00 00 FE 06  // 666666666.......
    6E30: F6 36 36 36 36 36 36 36 36 36 36 36 36 36 F6 06  // .6666666666666..
    6E40: FE 00 00 00 00 00 00 00 00 36 36 36 36 36 36 36  // .........6666666
    6E50: FE 00 00 00 00 00 00 00 00 18 18 18 18 18 F8 18  // ................
    6E60: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6E70: F8 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6E80: 1F 00 00 00 00 00 00 00 00 18 18 18 18 18 18 18  // ................
    6E90: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6EA0: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6EB0: 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6EC0: FF 00 00 00 00 00 00 00 00 18 18 18 18 18 18 18  // ................
    6ED0: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 1F 18  // ................
    6EE0: 1F 18 18 18 18 18 18 18 18 36 36 36 36 36 36 36  // .........6666666
    6EF0: 37 36 36 36 36 36 36 36 36 36 36 36 36 36 37 30  // 7666666666666670
    6F00: 3F 00 00 00 00 00 00 00 00 00 00 00 00 00 3F 30  // ?.............?0
    6F10: 37 36 36 36 36 36 36 36 36 36 36 36 36 36 F7 00  // 76666666666666..
    6F20: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    6F30: F7 36 36 36 36 36 36 36 36 36 36 36 36 36 37 30  // .666666666666670
    6F40: 37 36 36 36 36 36 36 36 36 00 00 00 00 00 FF 00  // 766666666.......
    6F50: FF 00 00 00 00 00 00 00 00 36 36 36 36 36 F7 00  // .........66666..
    6F60: F7 36 36 36 36 36 36 36 36 18 18 18 18 18 FF 00  // .66666666.......
    6F70: FF 00 00 00 00 00 00 00 00 36 36 36 36 36 36 36  // .........6666666
    6F80: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    6F90: FF 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6FA0: FF 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // .666666666666666
    6FB0: 3F 00 00 00 00 00 00 00 00 18 18 18 18 18 1F 18  // ?...............
    6FC0: 1F 00 00 00 00 00 00 00 00 00 00 00 00 00 1F 18  // ................
    6FD0: 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6FE0: 3F 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // ?666666666666666
    6FF0: FF 36 36 36 36 36 36 36 36 18 18 18 18 18 FF 18  // .66666666.......
    7000: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7010: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7020: 1F 18 18 18 18 18 18 18 18 FF FF FF FF FF FF FF  // ................
    7030: FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  // ................
    7040: 00 FF FF FF FF FF FF FF FF F0 F0 F0 F0 F0 F0 F0  // ................
    7050: F0 F0 F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F  // ................
    7060: 0F 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF FF FF FF  // ................
    7070: FF 00 00 00 00 00 00 00 00 00 00 00 00 76 DC D8  // .............v..
    7080: D8 D8 D8 DC 76 00 00 00 00 00 00 78 CC CC D8 FC  // ....v......x....
    7090: C6 C6 C6 C6 CC 00 00 00 00 00 00 FE 66 62 60 60  // ............fb``
    70A0: 60 60 60 60 60 00 00 00 00 00 00 00 00 00 FE 6C  // `````..........l
    70B0: 6C 6C 6C 6C 6C 00 00 00 00 00 00 FE C6 62 30 18  // lllll........b0.
    70C0: 18 30 62 C6 FE 00 00 00 00 00 00 00 00 00 7E D8  // .0b...........~.
    70D0: CC CC CC D8 70 00 00 00 00 00 00 00 00 66 66 66  // ....p........fff
    70E0: 66 66 7C 60 C0 80 00 00 00 00 00 00 00 00 76 DC  // ff|`..........v.
    70F0: 18 18 18 18 18 00 00 00 00 00 00 FE 38 38 6C C6  // ............88l.
    7100: C6 6C 38 38 FE 00 00 00 00 00 00 00 38 6C C6 C6  // .l88........8l..
    7110: FE C6 C6 6C 38 00 00 00 00 00 00 38 6C C6 C6 C6  // ...l8......8l...
    7120: C6 6C 6C 6C EE 00 00 00 00 00 00 3E 60 60 3C 66  // .lll.......>``<f
    7130: C6 C6 C6 CC 78 00 00 00 00 00 00 00 00 00 7E DB  // ....x.........~.
    7140: DB DB 7E 00 00 00 00 00 00 00 00 02 06 7C CE DE  // ..~..........|..
    7150: F6 F6 7C 60 C0 00 00 00 00 00 00 00 1C 30 60 60  // ..|`.........0``
    7160: 7C 60 60 30 1C 00 00 00 00 00 00 7C C6 C6 C6 C6  // |``0.......|....
    7170: C6 C6 C6 C6 C6 00 00 00 00 00 00 00 00 FE 00 00  // ................
    7180: FE 00 00 FE 00 00 00 00 00 00 00 00 00 18 18 7E  // ...............~
    7190: 18 18 00 00 7E 00 00 00 00 00 00 30 18 0C 06 0C  // ....~......0....
    71A0: 18 30 00 00 7E 00 00 00 00 00 00 0C 18 30 60 30  // .0..~........0`0
    71B0: 18 0C 00 00 7E 00 00 00 00 00 00 00 00 0C 1E 1A  // ....~...........
    71C0: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    71D0: 18 18 18 58 78 30 00 00 00 00 00 00 00 18 18 00  // ...Xx0..........
    71E0: 7E 00 18 18 00 00 00 00 00 00 00 00 00 00 00 76  // ~..............v
    71F0: DC 00 76 DC 00 00 00 00 00 00 00 78 CC CC 78 00  // ..v........x..x.
    7200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7210: 18 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7220: 00 18 00 00 00 00 00 00 00 00 00 1F 18 18 18 18  // ................
    7230: 18 D8 D8 78 38 18 00 00 00 00 00 D8 6C 6C 6C 6C  // ...x8.......llll
    7240: 6C 00 00 00 00 00 00 00 00 00 00 70 D8 18 30 60  // l..........p..0`
    7250: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 7E 7E  // ..............~~
    7260: 7E 7E 7E 7E 00 00 00 00 00 00 00 00 00 00 00 00  // ~~~~............
    7270: 00 00 00 00 00 00 00 00 00 1D 00 00 00 00 00 24  // ...............$
    7280: 66 FF 66 24 00 00 00 00 00 00 2F 00 00 00 01 03  // f.f$....../.....
    7290: 06 0C 18 30 60 C0 80 00 00 00 00 30 00 00 7E C3  // ...0`......0..~.
    72A0: C3 C3 DB DB C3 C3 C3 7E 00 00 00 00 4D 00 00 C3  // .......~....M...
    72B0: C3 E7 FF FF DB DB C3 C3 C3 00 00 00 00 54 00 00  // .............T..
    72C0: FF 99 18 18 18 18 18 18 18 3C 00 00 00 00 56 00  // .........<....V.
    72D0: 00 C3 C3 C3 C3 C3 C3 C3 66 3C 18 00 00 00 00 57  // ........f<.....W
    72E0: 00 00 C3 C3 C3 C3 DB DB DB DB FF 66 00 00 00 00  // ...........f....
    72F0: 58 00 00 C3 C3 C3 66 3C 3C 66 C3 C3 C3 00 00 00  // X.....f<<f......
    7300: 00 59 00 00 C3 C3 C3 C3 66 3C 18 18 18 3C 00 00  // .Y......f<...<..
    7310: 00 00 5C 00 00 00 80 C0 60 30 18 0C 06 03 01 00  // ..\.....`0......
    7320: 00 00 00 6D 00 00 00 00 00 66 FF DB DB DB C3 C3  // ...m.....f......
    7330: 00 00 00 00 76 00 00 00 00 00 C3 C3 C3 C3 66 3C  // ....v.........f<
    7340: 18 00 00 00 00 77 00 00 00 00 00 C3 C3 DB DB DB  // .....w..........
    7350: FF 66 00 00 00 00 00 00 11 62 C3 0B DB 74 03 E9  // .f.......b...t..
    7360: 46 01 57 32 C0 B9 40 00 F3 AA 5F BB DE 8F 26 89  // F.W2..@..._...&.
    7370: 1D 26 8C 4D 02 2E 8E 1E 07 03 57 BE 49 04 B9 1E  // .&.M......W.I...
    7380: 00 83 C7 04 FC 8A 04 26 88 05 46 47 E2 F7 5F A0  // .......&..FG.._.
    7390: 84 04 FE C0 26 88 45 22 A1 85 04 26 89 45 23 57  // ....&.E"...&.E#W
    73A0: E8 D9 1B 5F 26 88 5D 25 26 88 7D 26 8A 1E 49 04  // ..._&.]%&.}&..I.
    73B0: E8 FC 05 74 05 80 FB 13 7F 1D 32 FF D1 E3 2E 8A  // ...t......2.....
    73C0: 87 B6 8F 32 E4 0A C0 74 01 40 26 89 45 27 2E 8A  // ...2...t.@&.E'..
    73D0: 87 B7 8F 26 88 45 29 A1 85 04 8A 16 84 04 FE C2  // ...&.E).........
    73E0: F6 E2 B2 00 3D C8 00 7E 15 B2 01 3D 5E 01 7E 0E  // ....=..~...=^.~.
    73F0: B2 02 3D 90 01 7E 07 B2 03 3D E0 01 7E 00 26 88  // ..=..~...=..~.&.
    7400: 55 2A 8A 26 87 04 8A C4 24 01 C0 E0 04 80 E4 02  // U*.&....$.......
    7410: D0 E4 0A E0 80 F4 10 A0 89 04 24 0A 0A E0 E8 94  // ..........$.....
    7420: 08 B2 C0 B0 30 EE 42 EC 24 08 C0 E0 02 0A C4 0C  // ....0.B.$.......
    7430: 01 26 88 45 2D B0 03 26 88 45 31 E8 77 08 1E 06  // .&.E-..&.E1.w...
    7440: 32 D2 C4 1E A8 04 8C C1 8C CE 3B CE 74 34 26 C5  // 2.........;.t4&.
    7450: 77 04 8C D9 0B F1 74 03 80 CA 10 26 C5 77 0C 8C  // w.....t....&.w..
    7460: D9 0B F1 74 03 80 CA 08 26 C5 77 08 8C D9 0B F1  // ...t....&.w.....
    7470: 74 03 80 CA 04 26 C5 77 10 8C D9 0B F1 74 03 80  // t....&.w.....t..
    7480: CA 01 07 1F 26 88 55 32 B0 03 BA C4 03 E8 E4 04  // ....&.U2........
    7490: 8A E0 C0 EC 02 8A D4 8A F2 D0 EE 81 E2 04 04 25  // ...............%
    74A0: 03 03 0B C2 26 89 45 2B 8B EC C6 46 1A 1B C3 0A  // ....&.E+...F....
    74B0: C0 74 0F FE C8 74 36 FE C8 74 56 8B EC C6 46 1A  // .t...t6..tV...F.
    74C0: 00 C3 B8 20 00 F6 C1 01 74 03 83 C0 60 F6 C1 02  // ... ....t...`...
    74D0: 74 03 83 C0 3A F6 C1 04 74 03 05 03 03 83 C0 3F  // t...:...t......?
    74E0: C1 E8 06 8B EC 89 46 0E C6 46 1A 1C C3 8B FB 83  // ......F..F......
    74F0: C7 20 F6 C1 01 74 03 E8 85 00 F6 C1 02 74 03 E8  // . ...t.......t..
    7500: EF 00 F6 C1 04 74 03 E8 F8 01 8B EC C6 46 1A 1C  // .....t.......F..
    7510: C3 F6 C1 01 74 06 E8 16 15 E8 25 01 F6 C1 02 74  // ....t.....%....t
    7520: 03 E8 85 01 F6 C1 04 74 03 E8 12 02 EB DC 8A C4  // .......t........
    7530: EE 42 EC AA FE C4 4A E2 F5 C3 E8 6B 04 BD C0 03  // .B....J....k....
    7540: B9 15 00 32 E4 EC 87 EA 8A C4 EE 42 EC AA FE C4  // ...2.......B....
    7550: 4A 87 EA E2 F0 EC 87 EA B0 20 EE C3 26 8A 05 88  // J........ ..&...
    7560: 04 47 46 E2 F7 C3 26 8A 25 EF 47 FE C0 E2 F7 C3  // .GF...&.%.G.....
    7570: B2 C0 8A C4 EE 26 8A 05 47 FE C4 EE E2 F4 C3 9C  // .....&..G.......
    7580: FA 51 57 8B C7 2B C3 26 89 07 8B F7 E8 0A 04 EC  // .QW..+.&........
    7590: 26 88 44 01 26 89 54 41 B2 CE EC 26 88 44 02 B2  // &.D.&.TA...&.D..
    75A0: CC EC 26 88 44 09 B2 CA EC 26 88 44 04 B2 C4 EC  // ..&.D....&.D....
    75B0: 26 88 04 83 C7 05 B9 04 00 B4 01 E8 70 FF 26 8A  // &...........p.&.
    75C0: 04 EE 8B FE 83 C7 0A 26 8B 54 41 32 E4 B9 19 00  // .......&.TA2....
    75D0: E8 5B FF 26 8A 44 01 EE E8 5F FF B2 CE 32 E4 B9  // .[.&.D..._...2..
    75E0: 09 00 E8 49 FF 26 8A 44 02 EE 5F 59 83 C7 60 9D  // ...I.&.D.._Y..`.
    75F0: C3 9C FA 8B C7 2B C3 26 89 47 02 51 57 2E 8E 1E  // .....+.&.G.QW...
    7600: 07 03 A0 10 04 24 30 AA BE 49 04 B9 1E 00 F3 A4  // .....$0..I......
    7610: BE 84 04 B1 07 F3 A4 BE A8 04 B1 04 F3 A4 BE 14  // ................
    7620: 00 B1 04 F3 A4 BE 74 00 B1 04 F3 A4 BE 7C 00 B1  // ......t......|..
    7630: 04 F3 A4 BE 0C 01 B1 04 F3 A4 5F 59 83 C7 3A 9D  // .........._Y..:.
    7640: C3 9C FA 26 8B 3F 03 FB 8B F7 51 8B FE 83 C7 05  // ...&.?....Q.....
    7650: BA C4 03 B8 00 01 EF B0 01 B9 04 00 E8 07 FF 47  // ...............G
    7660: B2 C2 26 8A 44 09 EE B2 C4 B8 00 03 EF 26 8A 04  // ..&.D........&..
    7670: EE 26 8B 54 41 B8 11 00 EF B1 19 32 C0 E8 E6 FE  // .&.TA......2....
    7680: 26 8A 44 01 EE 80 C2 06 26 8A 44 04 EE EC B1 15  // &.D.....&.D.....
    7690: 32 E4 E8 DB FE B0 20 EE B1 09 32 C0 B2 CE E8 C5  // 2..... ...2.....
    76A0: FE 26 8A 44 02 EE 59 9D C3 9C FA 26 8B 7F 02 03  // .&.D..Y....&....
    76B0: FB 06 51 2E 8E 1E 07 03 26 8A 05 80 26 10 04 CF  // ..Q.....&...&...
    76C0: 08 06 10 04 47 BE 49 04 B9 1E 00 E8 8E FE BE 84  // ....G.I.........
    76D0: 04 B1 07 E8 86 FE BE A8 04 B1 04 E8 7E FE BE 14  // ............~...
    76E0: 00 B1 04 E8 76 FE BE 74 00 B1 04 E8 6E FE BE 7C  // ....v..t....n..|
    76F0: 00 B1 04 E8 66 FE BE 0C 01 B1 04 E8 5E FE 59 07  // ....f.......^.Y.
    7700: 9D C3 9C FA 8B C7 2B C3 26 89 47 04 E8 A6 05 B2  // ......+.&.G.....
    7710: C0 B0 34 EE 42 EC 26 88 05 BA C8 03 EC 26 88 45  // ..4.B.&......&.E
    7720: 01 50 4A 4A EC 26 88 45 02 83 C7 03 B9 00 03 42  // .PJJ.&.E.......B
    7730: 32 C0 EE 42 42 EC AA E2 FC 58 4A EE 9D C3 9C FA  // 2..BB....XJ.....
    7740: 26 8B 77 04 03 F3 E8 6C 05 B2 C0 B0 34 EE 26 8A  // &.w....l....4.&.
    7750: 04 EE BA C6 03 26 8A 44 02 EE 56 42 42 83 C6 03  // .....&.D..VBB...
    7760: 32 C0 EE 42 B9 00 03 26 8A 04 EE 46 E2 F9 5E FE  // 2..B...&...F..^.
    7770: CA 26 8A 44 01 EE 9D C3 BA CC 03 EC 24 FE 0A C4  // .&.D........$...
    7780: B2 C2 EE C3 E8 A8 12 B2 C0 86 C4 EE EB 00 EB 00  // ................
    7790: 86 C4 EE EB 00 EB 00 B0 20 EE C3 50 8A E0 80 E4  // ........ ..P....
    77A0: 80 80 26 87 04 7F 08 26 87 04 24 7F 8A E0 3C 07  // ..&....&..$...<.
    77B0: 7E 1E 26 F6 47 33 01 75 17 3C 23 74 13 3C 32 74  // ~.&.G3.u.<#t.<2t
    77C0: 0F 3C 33 74 0B B4 03 26 F6 47 09 01 75 02 B4 07  // .<3t...&.G..u...
    77D0: 88 26 49 04 BA B4 03 80 0E 87 04 02 26 F6 47 09  // .&I.........&.G.
    77E0: 01 74 07 B2 D4 80 26 87 04 FD 89 16 63 04 C7 06  // .t....&.....c...
    77F0: 4E 04 00 00 C6 06 62 04 00 B9 08 00 BF 50 04 FC  // N.....b......P..
    7800: 06 1E 07 33 C0 F3 AB 07 26 8A 07 32 E4 A3 4A 04  // ...3....&..2..J.
    7810: 26 8A 47 01 A2 84 04 26 8A 47 02 A3 85 04 26 8B  // &.G....&.G....&.
    7820: 47 03 A3 4C 04 26 8B 47 14 86 C4 A3 60 04 58 C3  // G..L.&.G....`.X.
    7830: 52 32 E4 33 D2 B0 0D CD 17 F6 C4 29 75 08 32 E4  // R2.3.......)u.2.
    7840: 33 D2 B0 0A CD 17 5A C3 06 1E 60 2E 8E 1E 07 03  // 3.....Z...`.....
    7850: 2E 83 0E 11 03 00 75 6E 80 3E 00 05 01 74 67 C6  // ......un.>...tg.
    7860: 06 00 05 01 8A 1E 62 04 32 FF D1 E3 8B FB 8B 85  // ......b.2.......
    7870: 50 04 8A 3E 62 04 50 32 F6 8A 0E 84 04 32 ED 41  // P..>b.P2.....2.A
    7880: 51 8B 0E 4A 04 32 D2 E8 A6 FF F6 C4 29 75 3D 51  // Q..J.2......)u=Q
    7890: 52 89 95 50 04 B4 08 E8 AA D4 0A C0 75 02 B0 20  // R..P........u.. 
    78A0: 33 D2 32 E4 CD 17 F6 C4 29 75 1F 5A FE C2 59 E2  // 3.2.....)u.Z..Y.
    78B0: DE FE C6 59 E2 CA E8 77 FF 32 C0 A2 00 05 58 89  // ...Y...w.2....X.
    78C0: 85 50 04 E8 AF 03 61 1F 07 CF 5A 59 59 B0 FF EB  // .P....a...ZYY...
    78D0: EA 52 2A F5 38 C6 7D 02 32 C0 2E 8E 06 09 03 5A  // .R*.8.}.2......Z
    78E0: C3 A0 85 04 F6 E3 8A F7 8B D8 8B CA BA C4 03 B8  // ................
    78F0: 02 0F EF B4 02 E8 6D 00 8B D1 32 ED 8A E6 8A C6  // ......m...2.....
    7900: F3 AA 03 FD 8A CA 4B 75 F7 32 E4 E8 57 00 C3 53  // ......Ku.2..W..S
    7910: 8A 1E 62 04 0B C0 75 04 0A DB 74 03 E8 35 03 5B  // ..b...u...t..5.[
    7920: 8B F8 2B D1 81 C2 01 01 8A C3 32 E4 C3 8A C6 32  // ..+.......2....2
    7930: F6 2B EA 0A DB 74 2A 2A C3 F6 26 85 04 8B C8 52  // .+...t**..&....R
    7940: B4 01 E8 20 00 B2 C4 B8 02 0F EF 5A 1E 06 1F 8B  // ... .......Z....
    7950: C1 8B CA F3 A4 03 F5 03 FD 48 75 F5 1F E8 81 FF  // .........Hu.....
    7960: C3 8A D8 EB F8 BA CE 03 B0 05 EE 42 EC 24 FC 0A  // ...........B.$..
    7970: C4 EE 4A C3 9C FA EE 42 EB 00 EC 4A 9D C3 1E 2E  // ..J....B...J....
    7980: 8E 1E 07 03 8B 16 63 04 80 C2 06 1F C3 1E 2E 8E  // ......c.........
    7990: 1E 07 03 8B 16 63 04 1F C3 50 BA CC 03 EC B2 D4  // .....c...P......
    79A0: A8 01 75 02 B2 B4 58 C3 E8 EE FF 80 C2 06 C3 1E  // ..u...X.........
    79B0: 2E 8E 1E 07 03 80 3E 49 04 03 74 13 80 3E 49 04  // ......>I..t..>I.
    79C0: 02 74 0C 80 3E 49 04 01 74 05 80 3E 49 04 00 1F  // .t..>I..t..>I...
    79D0: C3 50 2E 8E 06 0B 03 A0 10 04 24 30 3C 30 74 05  // .P........$0<0t.
    79E0: 2E 8E 06 0D 03 58 0B C0 74 03 E8 E1 01 03 06 4E  // .....X..t......N
    79F0: 04 81 C2 01 01 2B D1 32 ED 8B 2E 4A 04 8B F8 8B  // .....+.2...J....
    7A00: F0 8B C5 F6 E3 D1 E0 D1 E5 0A DB 75 02 8A DE 38  // ...........u...8
    7A10: F3 7E 02 8A DE C3 FC 8A D8 8B C1 E8 B3 FF 03 F0  // .~..............
    7A20: 3A 16 4A 04 74 06 06 1F E8 1B 00 C3 06 1F E8 40  // :.J.t..........@
    7A30: 00 C3 FC 8A D8 8A C1 8A E6 E8 95 FF F7 DD 2B F0  // ..............+.
    7A40: 06 1F E8 01 00 C3 53 8A CE 2A CB 32 ED 32 F6 2B  // ......S..*.2.2.+
    7A50: EA 2B EA E3 0E 8A E1 8B CA F3 A5 03 F5 03 FD FE  // .+..............
    7A60: CC 75 F4 58 B0 20 8A CA F3 AB 03 FD FE CB 75 F6  // .u.X. ........u.
    7A70: C3 53 8A C6 2A C3 74 06 F6 E2 8B C8 F3 A5 58 8B  // .S..*.t.......X.
    7A80: C8 F6 E2 91 B0 20 F3 AB C3 8B D8 E8 2E 00 2E 8E  // ..... ..........
    7A90: 1E 0D 03 8A C3 22 DF D3 E3 A8 80 74 03 30 1C C3  // .....".....t.0..
    7AA0: F6 D7 8A 34 22 F7 0A DE 88 1C C3 8A FC E8 0C 00  // ...4"...........
    7AB0: 2E 8E 1E 0D 03 8A 04 D2 E8 22 C7 C3 B0 28 F6 E2  // ........."...(..
    7AC0: F6 C2 01 74 03 05 D8 1F 8B F1 C1 EE 02 80 FF 05  // ...t............
    7AD0: 7F 0C 03 F0 F6 D1 80 E1 03 D0 E1 B7 03 C3 D1 EE  // ................
    7AE0: 03 F0 F6 D1 80 E1 07 B7 01 C3 FC 8A D8 2E 8E 06  // ................
    7AF0: 0D 03 8B C1 E8 86 00 75 02 8A DE 03 F0 E8 24 00  // .......u......$.
    7B00: C3 FC 8A D8 2E 8E 06 0D 03 8A C1 8A E6 E8 6D 00  // ..............m.
    7B10: 75 02 8A DE F7 DD 81 C6 F0 00 81 C7 F0 00 2B F0  // u.............+.
    7B20: E8 01 00 C3 8A CE 2A CB E3 2C 51 8A CA 56 57 D1  // ......*..,Q..VW.
    7B30: E9 F3 A5 13 C9 F3 A4 8A CA 2B F1 2B F9 81 C6 00  // .........+.+....
    7B40: 20 81 C7 00 20 D1 E9 F3 A5 13 C9 F3 A4 5F 5E 03  //  ... ........_^.
    7B50: F5 03 FD 59 E2 D4 8A C7 8A E7 8A CA 57 D1 E9 F3  // ...Y........W...
    7B60: AB 13 C9 F3 AA 8A CA 2B F9 81 C7 00 20 D1 E9 F3  // .......+.... ...
    7B70: AB 13 C9 F3 AA 5F 03 FD FE CB 75 DE C3 E8 B0 00  // ....._....u.....
    7B80: 81 C2 01 01 2B D1 38 F3 76 02 32 DB 51 B1 02 D2  // ....+.8.v.2.Q...
    7B90: E6 D2 E3 59 32 ED BD 50 00 80 3E 49 04 06 74 04  // ...Y2..P..>I..t.
    7BA0: D0 E2 D1 E0 06 1F 8B F8 8B F0 B0 50 F6 E3 0A DB  // ...........P....
    7BB0: C3 52 53 8A DF 32 FF D1 E3 8B 87 50 04 E8 0E 00  // .RS..2.....P....
    7BC0: 50 D1 EB A1 4C 04 F7 E3 5B 03 C3 5B 5A C3 52 8B  // P...L...[..[Z.R.
    7BD0: D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 5A C3 8B E8  // ..J...2.....Z...
    7BE0: 83 E5 0F 2E 8A A6 8E 7B 8B E8 C1 ED 04 83 E5 0F  // .......{........
    7BF0: 2E 8A 86 8E 7B C3 00 03 0C 0F 30 33 3C 3F C0 C3  // ....{.....03<?..
    7C00: CC CF F0 F3 FC FF 26 8B 04 86 E0 BA 00 80 F6 C4  // ......&.........
    7C10: C0 74 02 0A D6 D0 EE C1 E0 02 75 F2 88 56 00 45  // .t........u..V.E
    7C20: C3 8B 16 63 04 8A C5 86 E0 EF 8A E1 FE C0 EF C3  // ...c............
    7C30: 52 8B D0 8A C4 F6 26 4A 04 C1 E0 02 32 F6 03 C2  // R.....&J....2...
    7C40: 5A C3 53 8A DF 32 FF D1 E3 8B 87 50 04 D1 EB E8  // Z.S..2.....P....
    7C50: 02 00 5B C3 52 8B D0 32 F6 52 8A C4 F6 26 85 04  // ..[.R..2.R...&..
    7C60: F7 26 4A 04 5A 03 C2 0A DB 74 08 03 06 4C 04 FE  // .&J.Z....t...L..
    7C70: CB 75 F8 5A C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03  // .u.Z.R...J...2..
    7C80: C2 D1 E0 03 06 4E 04 D1 F8 8B C8 B4 0E E8 91 FF  // .....N..........
    7C90: 5A C3 8B C2 F7 26 4A 04 8B F9 C1 EF 03 03 F8 0A  // Z....&J.........
    7CA0: FF 74 0A 8A C7 32 E4 F7 26 4C 04 03 F8 80 E1 07  // .t...2..&L......
    7CB0: B4 80 D2 EC C3 E8 F0 FC EC C3 E8 F8 FF B2 C0 B0  // ................
    7CC0: 20 EE C3 E8 EF FF B2 C0 32 C0 EE C3 C4 3E A8 04  //  .......2....>..
    7CD0: 26 C4 7D 04 8C C5 0B EF C3 53 B0 0E E8 95 FC 8A  // &.}......S......
    7CE0: E0 B0 0F E8 8E FC 8B D8 B8 0E AA EF B8 0F 55 EF  // ..............U.
    7CF0: B0 0E E8 7F FC 3C AA 74 0D B0 0F E8 76 FC 3C 55  // .....<.t....v.<U
    7D00: 74 04 32 C0 5B C3 B0 0E 8A E7 EF FE C0 8A E3 EF  // t.2.[...........
    7D10: B0 01 0A C0 5B C3 8A EE 8A 36 85 04 06 1F 0A DB  // ....[....6......
    7D20: 74 25 8A C5 2A C3 F6 E6 8B C8 52 32 F6 C1 E2 02  // t%..*.....R2....
    7D30: 8B C2 D1 E2 2B D5 51 8B C8 F3 A5 2B FA 2B F2 59  // ....+.Q....+.+.Y
    7D40: E2 F4 5A E8 05 00 C3 8A DD EB F8 8A C6 F6 E3 8B  // ..Z.............
    7D50: C8 8A C7 8A E0 32 F6 C1 E2 02 8B DA D1 E2 8B F1  // .....2..........
    7D60: 2B D5 8B CB F3 AB 2B FA 4E 75 F7 C3 2E 8E 1E 07  // +.....+.Nu......
    7D70: 03 89 0E 60 04 8A C5 24 60 A8 20 74 06 B9 00 1E  // ...`...$`. t....
    7D80: E9 94 00 F6 06 87 04 01 0F 85 8B 00 80 3E 49 04  // .............>I.
    7D90: 07 74 06 E8 19 FC 74 01 C3 F6 06 87 04 08 74 03  // .t....t.......t.
    7DA0: CD 42 C3 8A 36 85 04 8A D6 FE CA 38 CD 7E 1F 0A  // .B..6......8.~..
    7DB0: C9 74 64 8A E9 8A CE FE C9 EB 5C 38 D1 74 58 8A  // .td.......\8.tX.
    7DC0: CE 80 FD 03 7C 04 8A E9 D0 ED FE C9 EB 49 80 F9  // ....|........I..
    7DD0: 03 7E 44 8A E1 2A E5 0A E4 75 0A 38 CA 74 38 FE  // .~D..*...u.8.t8.
    7DE0: CA 38 CA 74 32 8A C5 0A C1 38 F0 7E 0A 80 FC 02  // .8.t2....8.~....
    7DF0: 7E 12 80 FD 02 7F C8 80 FC 03 7D BF 8A D6 FE CA  // ~.........}.....
    7E00: 38 D1 74 13 8A CE FE C9 FE C9 8A E9 2A EC 80 FE  // 8.t.........*...
    7E10: 08 7F 04 FE C1 FE C5 B4 0A E8 05 FE C3 2E 8E 1E  // ................
    7E20: 07 03 A2 62 04 32 E4 8B F0 F7 26 4C 04 A3 4E 04  // ...b.2....&L..N.
    7E30: 8B C8 E8 7A FB 74 07 80 3E 49 04 07 77 02 D1 F9  // ...z.t..>I..w...
    7E40: B4 0C E8 DC FD D1 E6 8B 84 50 04 E8 27 FE C3 2E  // .........P..'...
    7E50: 8E 1E 07 03 8A 26 49 04 E8 BB 9C 74 07 C7 06 50  // .....&I....t...P
    7E60: 04 00 00 C3 E8 48 FB 74 0B 80 FC 07 74 06 77 08  // .....H.t....t.w.
    7E70: E8 77 FC C3 E8 9F FB C3 80 FC 13 7C 03 74 1F C3  // .w.........|.t..
    7E80: E8 4E FA 8A D8 8B C1 E8 85 FA 8B 2E 4A 04 52 F6  // .N..........J.R.
    7E90: 26 85 04 F7 E5 8B F7 03 F0 5A E8 90 FA C3 E8 30  // &........Z.....0
    7EA0: FA 8A D8 8B C1 E8 67 FA C1 E7 03 52 8B 2E 4A 04  // ......g....R..J.
    7EB0: C1 E5 03 F7 26 85 04 F7 E5 8B F7 03 F0 5A E8 55  // ....&........Z.U
    7EC0: FE C3 2E 8E 1E 07 03 8A 26 49 04 E8 E1 FA 74 0C  // ........&I....t.
    7ED0: 80 FC 07 74 07 77 40 80 FC 03 7F 04 E8 53 FB C3  // ...t.w@......S..
    7EE0: E8 1E FC C3 E8 EA F9 8A D8 8A C1 8A E6 FE C4 E8  // ................
    7EF0: 1D FA 2B 3E 4A 04 C1 E7 03 52 F7 26 85 04 F7 26  // ..+>J....R.&...&
    7F00: 4A 04 C1 E0 03 8B F7 2B F0 5A 8B 2E 4A 04 C1 E5  // J......+.Z..J...
    7F10: 03 F7 DD E8 00 FE C3 80 FC 13 7C 03 74 C6 C3 E8  // ..........|.t...
    7F20: AF F9 8A D8 8A C1 8A E6 FE C4 E8 E2 F9 52 8B 2E  // .............R..
    7F30: 4A 04 F7 26 85 04 F7 E5 2B FD 8B F7 2B F0 5A F7  // J..&....+...+.Z.
    7F40: DD E8 E9 F9 C3 2E 8E 1E 07 03 2E 8E 06 0D 03 E8  // ................
    7F50: 5D FA 74 11 80 3E 49 04 07 7C 18 2E 8E 06 0B 03  // ].t..>I..|......
    7F60: 74 03 E9 B1 00 E8 49 FC 8B D8 26 8B 07 8B EC 89  // t.....I...&.....
    7F70: 46 1A C3 A1 50 04 E8 B7 FC 8B F0 BB 08 00 2B E3  // F...P.........+.
    7F80: 8B EC 80 3E 49 04 06 75 1F B9 04 00 26 8A 04 88  // ...>I..u....&...
    7F90: 46 00 45 26 8A 84 00 20 88 46 00 45 83 C6 50 E2  // F.E&... .F.E..P.
    7FA0: EB B8 00 02 B2 80 EB 17 D1 E6 B9 04 00 E8 56 FC  // ..............V.
    7FB0: 81 C6 00 20 E8 4F FC 81 EE B0 1F E2 F0 EB E2 2B  // ... .O.........+
    7FC0: EB C4 3E 0C 01 32 F6 80 FB 0E 75 09 26 83 7D FE  // ..>..2....u.&.}.
    7FD0: 10 75 02 B6 80 16 1F 8B F5 8B CB F6 C6 80 74 01  // .u............t.
    7FE0: 47 56 57 F3 A6 5F 5E 74 23 FE C0 03 FB F6 C6 80  // GVW.._^t#.......
    7FF0: 74 01 47 FE CA 75 E2 FE CC 74 0F 2E 8E 1E 07 03  // t.G..u...t......
    8000: C4 3E 7C 00 B0 80 B2 80 EB CB 32 C0 8B E5 03 E3  // .>|.......2.....
    8010: 8B EC 89 46 1A C3 80 3E 49 04 13 7C 05 75 02 EB  // ...F...>I..|.u..
    8020: 5A C3 2E 8E 06 09 03 E8 18 FC 8B F0 8B 1E 85 04  // Z...............
    8030: 2B E3 8B EC B8 05 08 B9 05 00 BA CE 03 80 3E 49  // +.............>I
    8040: 04 0F 72 1A F6 06 87 04 60 75 13 B4 0A F7 C6 01  // ..r.....`u......
    8050: 00 75 02 B4 05 B0 07 EF B8 05 18 B9 05 01 EF 51  // .u.............Q
    8060: 8B CB 26 8A 04 F6 D0 88 46 00 45 03 36 4A 04 E2  // ..&.....F.E.6J..
    8070: F1 58 EF B8 00 01 32 D2 E9 44 FF 2E 8E 06 09 03  // .X....2..D......
    8080: A1 50 04 8B D0 32 F6 52 8A C4 32 E4 F7 26 4A 04  // .P...2.R..2..&J.
    8090: F7 26 85 04 5A 03 C2 8B F0 8B 1E 85 04 2B E3 8B  // .&..Z........+..
    80A0: EC 53 8B 3E 4A 04 4F C1 E7 03 C1 E6 03 B9 08 00  // .S.>J.O.........
    80B0: 32 E4 26 8A 04 D0 E4 0A C0 74 03 80 CC 01 46 E2  // 2.&......t....F.
    80C0: F1 88 66 00 45 03 F7 4B 75 E3 5B B8 00 01 32 D2  // ..f.E..Ku.[...2.
    80D0: E9 EC FE 33 ED EB 03 BD 01 00 2E 8E 1E 07 03 2E  // ...3............
    80E0: 8E 06 0D 03 8A 26 49 04 E8 C4 F8 74 0F 2E 8E 06  // .....&I....t....
    80F0: 0B 03 80 FC 07 74 05 7C 3D E9 0B 02 8A E3 8B F0  // .....t.|=.......
    8100: 8A DF 32 FF D1 E3 8B 87 50 04 8B D0 A0 4A 04 F6  // ..2.....P....J..
    8110: E4 32 F6 03 C2 8B F8 D1 E7 0A DB 74 0B D0 EB A1  // .2.........t....
    8120: 4C 04 03 F8 FE CB 75 FA 8B C6 0B ED 75 03 F3 AB  // L.....u.....u...
    8130: C3 AA 47 E2 FC C3 50 2E 8E 06 0D 03 A1 50 04 E8  // ..G...P......P..
    8140: EE FA 8B F8 A0 50 04 8A 26 4A 04 8B E8 58 A8 80  // .....P..&J...X..
    8150: 74 08 24 7F C5 36 7C 00 EB 04 C5 36 0C 01 8A FC  // t.$..6|....6....
    8160: 32 E4 C1 E0 03 03 F0 80 FF 06 74 69 D1 E7 8A F3  // 2.........ti....
    8170: B0 55 80 E3 03 F6 E3 8A D8 8A F8 8B C5 50 B2 04  // .U...........P..
    8180: F6 C6 80 75 27 AC E8 55 FA 23 C3 AB AC E8 4E FA  // ...u'..U.#....N.
    8190: 23 C3 26 89 85 FE 1F 83 C7 4E FE CA 75 E7 83 EE  // #.&......N..u...
    81A0: 08 81 EF 3E 01 58 E8 72 00 E2 D2 C3 AC E8 2E FA  // ...>.X.r........
    81B0: 23 C3 26 31 05 AC E8 25 FA 23 C3 26 31 85 00 20  // #.&1...%.#.&1.. 
    81C0: 83 C7 50 FE CA 75 E5 83 EE 08 81 EF 3E 01 58 E8  // ..P..u......>.X.
    81D0: 49 00 E2 A9 C3 8B C5 50 B2 04 F6 C3 80 74 1F AC  // I......P.....t..
    81E0: 26 30 05 AC 26 30 85 00 20 83 C7 50 FE CA 7F EF  // &0..&0.. ..P....
    81F0: 83 EE 08 81 EF 3F 01 58 E8 20 00 E2 DA C3 AC AA  // .....?.X. ......
    8200: AC 26 88 85 FF 1F 83 C7 4F FE CA 7F F1 83 EE 08  // .&......O.......
    8210: 81 EF 3F 01 58 E8 03 00 E2 BD C3 FE C0 38 E0 72  // ..?.X........8.r
    8220: 06 32 C0 81 C7 F0 00 C3 8A 16 85 04 F6 E2 8B F0  // .2..............
    8230: 32 F6 8B EA 66 0F B6 06 51 04 F6 E2 66 0F B7 16  // 2...f...Q...f...
    8240: 4A 04 83 FA 64 75 03 BA 68 00 83 FA 5A 75 03 BA  // J...du..h...Zu..
    8250: 60 00 81 FA AF 00 75 03 BA B0 00 52 F7 E2 66 0F  // `.....u....R..f.
    8260: B7 F8 66 0F B6 06 50 04 66 03 F8 66 C1 CF 10 03  // ..f...P.f..f....
    8270: FA 66 C1 C7 03 81 CF 00 FF 66 C1 C7 10 5A 8A E2  // .f.......f...Z..
    8280: 4A C1 E2 03 A0 50 04 50 C5 06 0C 01 03 F0 2E 8E  // J....P.P........
    8290: 06 09 03 58 57 51 50 9C FC 8B CD E8 3B 00 B5 08  // ...XWQP.....;...
    82A0: AC 8A E0 8A C7 D0 E4 73 02 8A C3 26 88 05 66 47  // .......s...&..fG
    82B0: FE CD 75 EF 66 03 FA E2 E2 9D 58 59 5F 83 C7 08  // ..u.f.....XY_...
    82C0: FE C0 38 E0 72 0E 51 32 C0 8B CD 49 03 FA 83 C7  // ..8.r.Q2...I....
    82D0: 08 E2 F9 59 2B F5 E2 BC C3 06 52 33 C0 8E C0 66  // ...Y+.....R3...f
    82E0: C1 C7 10 8B C7 66 C1 C7 10 E8 2A 98 74 16 38 E0  // .....f....*.t.8.
    82F0: 74 12 0F B6 D0 E8 85 C9 8A E0 66 C1 C7 10 8B F8  // t.........f.....
    8300: 66 C1 C7 10 5A 07 C3 80 FC 13 7C 0B 0F 84 18 FF  // f...Z.....|.....
    8310: 80 FC 62 0F 84 11 FF E8 01 00 C3 80 FC 11 75 06  // ..b...........u.
    8320: 80 E3 80 80 CB 0F 50 53 8A DF 32 FF D1 E3 8B 97  // ......PS..2.....
    8330: 50 04 5B 2E 8E 06 09 03 E8 07 F9 8B F8 8B 2E 85  // P.[.............
    8340: 04 58 32 F6 52 8B 36 4A 04 56 8A 26 85 04 C5 36  // .X2.R.6J.V.&...6
    8350: 0C 01 80 FC 0E 75 09 83 7C FE 10 75 03 B4 10 46  // .....u..|..u...F
    8360: F6 E4 03 F0 B6 03 F6 C3 80 75 6D B2 C4 B8 02 0F  // .........um.....
    8370: EF 5A 58 50 52 4A 8A E0 57 51 51 57 8B CD 32 C0  // .ZXPRJ..WQQW..2.
    8380: AA 03 FA E2 FB 5F 47 FE C4 38 D4 76 0A 32 E4 8B  // ....._G..8.v.2..
    8390: CD 49 03 FA 47 E2 FB 59 E2 E0 59 5F BA C4 03 B0  // .I..G..Y..Y_....
    83A0: 02 8A E3 EF 5B 4B 5A 51 57 8B CD AC 26 8A 25 AA  // ....[KZQW...&.%.
    83B0: 03 FB E2 F7 5F 47 2B F5 42 3B D3 76 0A 33 D2 8B  // ...._G+.B;.v.3..
    83C0: CD 49 03 FB 47 E2 FB 59 E2 DD BA CE 03 B8 03 00  // .I..G..Y........
    83D0: EF B2 C4 B8 02 0F EF C3 B2 CE B8 03 18 EF EB BC  // ................
    83E0: 2E 8E 1E 07 03 80 3E 63 04 B4 74 0B BA CC 03 EC  // ......>c..t.....
    83F0: A8 01 75 04 CD 42 C3 C3 E8 D1 F8 0A FF 75 1C 8A  // ..u..B.......u..
    8400: E3 80 E4 1F 80 26 66 04 E0 08 26 66 04 E8 2D 00  // .....&f...&f..-.
    8410: 8A 1E 66 04 80 E3 20 B1 05 D2 EB E8 91 F5 74 19  // ..f... .......t.
    8420: A0 66 04 24 DF 80 E3 01 74 02 0C 20 A2 66 04 24  // .f.$....t.. .f.$
    8430: 10 0C 02 0A D8 E8 53 00 C3 E8 7E F8 C3 53 50 80  // ......S...~..SP.
    8440: E3 0F 8A FB D0 E3 81 E3 10 07 0A DF E8 60 F5 74  // .............`.t
    8450: 0E B4 00 8A C3 E8 2C F3 0B ED 74 03 26 88 1D 8A  // ......,...t.&...
    8460: C3 E8 0B 00 0B ED 74 04 26 88 5D 10 58 5B C3 8A  // ......t.&.].X[..
    8470: E0 1E 2E 8E 1E 07 03 80 3E 49 04 33 1F 7F 08 8A  // ........>I.3....
    8480: C4 B4 11 E8 FE F2 C3 E8 30 F8 C3 9C FA E8 9F 05  // ........0.......
    8490: B2 C0 B9 03 00 B4 01 8A C4 EE 8A C3 EE 0B ED 74  // ...............t
    84A0: 04 47 26 88 1D FE C4 80 C3 02 E2 EB B0 20 EE 9D  // .G&.......... ..
    84B0: C3 2E 8E 1E 07 03 8A 26 49 04 E8 F2 F4 74 0A 80  // .......&I....t..
    84C0: FC 07 77 06 74 03 E8 C0 F5 C3 80 FC 13 7C 03 74  // ..w.t........|.t
    84D0: 4C C3 8A D8 E8 BB F7 BA CE 03 B0 08 EF 2E 8E 1E  // L...............
    84E0: 09 03 F6 C3 80 75 1C B2 C4 B8 02 FF EF 8A 25 C6  // .....u........%.
    84F0: 05 00 8A E3 EF 8A 25 B4 FF 88 25 EF B2 CE B8 08  // ......%...%.....
    8500: FF EF C3 B8 03 18 EF B2 C4 B0 02 8A E3 EF 8A 25  // ...............%
    8510: B4 FF 88 25 EF B2 CE B8 03 00 EF EB E1 50 2E 8E  // ...%.........P..
    8520: 06 09 03 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 58  // ....J..........X
    8530: 26 88 05 C3 2E 8E 1E 07 03 8A 26 49 04 E8 6F F4  // &.........&I..o.
    8540: 74 0F 80 FC 07 77 0B 74 08 E8 5F F5 8B EC 89 46  // t....w.t.._....F
    8550: 1A C3 80 FC 13 7C 03 74 29 C3 E8 35 F7 8A CC 2E  // .....|.t)..5....
    8560: 8E 1E 09 03 BA CE 03 32 FF B8 04 03 EF D0 E7 8A  // .......2........
    8570: 1D 22 D9 74 03 80 CF 01 FE CC 7D F0 8B EC 88 7E  // .".t......}....~
    8580: 1A C3 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 2E 8E  // ...J............
    8590: 1E 09 03 8A 05 8B EC 88 46 1A C3 2E 8E 1E 07 03  // ........F.......
    85A0: 8A 3E 62 04 8A CF D0 E1 32 ED BE 50 04 03 F1 8B  // .>b.....2..P....
    85B0: 14 8A 0E 49 04 3C 0D 76 4A 2E 8E 06 0D 03 E8 EE  // ...I.<.vJ.......
    85C0: F3 75 33 8A 1E 4A 04 8A F8 8A C6 F6 E3 8A CA 03  // .u3..J..........
    85D0: C8 D1 E1 03 0E 4E 04 8B F9 8A C7 AA D1 E9 41 FE  // .....N........A.
    85E0: C2 38 DA 73 59 89 14 8B 16 63 04 B0 0E 8A E5 EF  // .8.sY....c......
    85F0: 8A E1 FE C0 EF C3 2E 8E 06 0B 03 80 F9 07 74 C3  // ..............t.
    8600: E9 83 00 75 04 32 D2 EB 0F 3C 0A 75 1D 3A 36 84  // ...u.2...<.u.:6.
    8610: 04 75 03 E9 93 00 FE C6 89 14 E8 92 F3 75 05 80  // .u...........u..
    8620: F9 07 7F 05 8B C2 E8 4C F6 C3 3C 07 75 04 E8 41  // .......L..<.u..A
    8630: 7F C3 3C 08 75 83 0A D2 74 DE FE CA EB DA 32 FF  // ..<.u...t.....2.
    8640: 32 D2 2B CB 3A 36 84 04 74 06 FE C6 03 CB EB 95  // 2.+.:6..t.......
    8650: 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF  // ....c...........
    8660: 2B FB 2B FB 26 8A 65 02 50 8B 3E 4E 04 8B F3 D1  // +.+.&.e.P.>N....
    8670: E6 03 F7 A0 84 04 F6 E3 8B C8 06 1F F3 A5 8B CB  // ................
    8680: 58 B0 20 F3 AB C3 B9 01 00 B4 0A E8 B6 C6 FE C2  // X. .............
    8690: 3A 16 4A 04 74 03 89 14 C3 32 FF 32 D2 89 14 3A  // :.J.t....2.2...:
    86A0: 36 84 04 74 2E FE C6 EB ED 89 14 2E 8E 06 0D 03  // 6..t............
    86B0: E8 FC F2 74 0E 2E 8E 06 0B 03 80 F9 07 74 04 32  // ...t.........t.2
    86C0: FF EB 10 8B C2 E8 AD F5 8B F9 D1 E7 4F 8B 1E 4A  // ............O..J
    86D0: 04 EB 91 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B0  // ...3..6....J....
    86E0: 01 E9 70 F7 2E 8E 1E 07 03 F6 06 87 04 08 74 03  // ..p...........t.
    86F0: CD 42 C3 E8 76 F6 8B EC C6 46 1B 00 C3 2E 8E 1E  // .B..v....F......
    8700: 07 03 8A DF 32 FF D1 E3 89 97 50 04 D0 EB 38 1E  // ....2.....P...8.
    8710: 62 04 75 05 8B C2 E8 5C F5 C3 2E 8E 1E 07 03 8A  // b.u....\........
    8720: DF 32 FF D1 E3 8B 97 50 04 8B 0E 60 04 8B EC 89  // .2.....P...`....
    8730: 4E 16 89 56 12 C3 2E 8E 1E 07 03 A0 87 04 24 80  // N..V..........$.
    8740: 0A 06 49 04 8A 26 4A 04 F6 06 87 04 08 75 2D E8  // ..I..&J......u-.
    8750: 5D F2 74 07 80 3E 49 04 07 7F 21 51 8A CC 8A 2E  // ].t..>I...!Q....
    8760: 84 04 BE 27 87 81 FE 30 87 74 10 2E 3B 0C 74 05  // ...'...0.t..;.t.
    8770: 83 C6 03 EB F0 24 80 2E 0A 44 02 59 8A 3E 62 04  // .....$...D.Y.>b.
    8780: 8B EC 89 46 1A 89 5E 0E 89 4E 16 89 56 12 C3 84  // ...F..^..N..V...
    8790: 18 23 84 2B 33 84 2A 32 2E 8E 1E 07 03 3C 04 7F  // .#.+3.*2.....<..
    87A0: 1B 50 52 BA CC 03 EC A8 01 5A 58 74 08 80 3E 63  // .PR......ZXt..>c
    87B0: 04 D4 74 08 C3 80 3E 63 04 B4 75 F8 3C 1C 73 F4  // ..t...>c..u.<.s.
    87C0: 32 E4 8B E8 D1 E5 2E FF A6 63 87 9B 87 BB 87 CD  // 2........c......
    87D0: 87 02 88 4C 87 4C 87 4C 87 27 88 3F 88 43 88 4C  // ...L.L.L.'.?.C.L
    87E0: 87 4C 87 4C 87 4C 87 4C 87 4C 87 71 88 4C 87 75  // .L.L.L.L.L.q.L.u
    87F0: 88 90 88 4C 87 CF 88 4C 87 DD 88 F8 88 FF 88 0B  // ...L...L........
    8800: 89 2F 89 80 3E 49 04 13 74 15 E8 BF F4 8B C3 86  // ./..>I..t.......
    8810: E0 E8 70 EF 0B ED 74 07 8A C7 32 FF 26 88 01 E8  // ..p...t...2.&...
    8820: 93 F4 C3 E8 A6 F4 8A C7 E8 44 FC 0B ED 74 F0 26  // .........D...t.&
    8830: 88 7D 11 EB EA 80 3E 49 04 13 74 E3 06 E8 8C F4  // .}....>I..t.....
    8840: 1F 0B ED 74 07 8B F2 B9 11 00 F3 A4 8B F2 E8 DE  // ...t............
    8850: 01 32 E4 B9 10 00 B2 C0 9C FA 8A C4 EE AC EE 9D  // .2..............
    8860: FE C4 E2 F4 AC E8 07 FC EB B5 80 FB 01 77 B0 E8  // .............w..
    8870: 43 F4 B2 C0 B0 30 E8 FB F0 24 F7 80 26 65 04 DF  // C....0...$..&e..
    8880: 80 FB 00 74 07 0C 08 80 0E 65 04 20 EE EB 90 E8  // ...t.....e. ....
    8890: 9D 01 8A C3 B2 C0 E8 DB F0 8B C8 EE B0 20 EE 8B  // ............. ..
    88A0: EC 88 4E 0F E9 78 FF B3 11 EB E4 8B FA E8 05 F4  // ..N..x..........
    88B0: B9 10 00 32 E4 B2 C0 8A C4 9C FA EE 42 EC 26 88  // ...2........B.&.
    88C0: 05 FE C4 4A EE 9D 47 E2 EE 9C FA B0 11 EE 42 EC  // ...J..G.......B.
    88D0: 9D 26 88 05 E8 E3 F3 EB 5A E8 CE 00 C3 8B FA 51  // .&......Z......Q
    88E0: 8B C3 26 8A 35 26 8A 6D 01 26 8A 4D 02 E8 CA 00  // ..&.5&.m.&.M....
    88F0: 83 C7 03 43 59 E2 E8 C3 0A DB 75 1A E8 B6 F3 B2  // ...CY.....u.....
    8900: C0 B0 30 E8 6E F0 24 7F F6 C7 01 74 02 0C 80 B4  // ..0.n.$....t....
    8910: 30 E8 70 EE EB 1D FE CB 75 1C E8 98 F3 B2 C0 B0  // 0.p.....u.......
    8920: 30 E8 50 F0 EE A8 80 75 03 C0 E7 02 B4 34 8A C7  // 0.P....u.....4..
    8930: E8 51 EE E8 7F F3 C3 8A C3 E8 D1 00 8B EC 89 4E  // .Q.............N
    8940: 16 88 76 13 C3 8B FA 51 8B C3 E8 C3 00 26 88 35  // ..v....Q.....&.5
    8950: 26 88 6D 01 26 88 4D 02 83 C7 03 43 59 E2 E8 C3  // &.m.&.M....CY...
    8960: BA C6 03 8A C3 EE C3 BA C6 03 EC 32 E4 8B EC 89  // ...........2....
    8970: 46 0E C3 E8 3F F3 B2 C0 B0 34 E8 F7 EF 8A F8 EE  // F...?....4......
    8980: B0 30 E8 EF EF B3 01 A8 80 75 05 B3 00 C0 EF 02  // .0.......u......
    8990: 8B EC 89 5E 0E EB 9C 51 8B C3 E8 73 00 E8 2A 00  // ...^...Q...s..*.
    89A0: 8A C3 E8 52 00 43 59 E2 EE C3 F6 06 89 04 02 74  // ...R.CY........t
    89B0: 03 E8 16 00 8A C3 E8 39 00 C3 F6 06 89 04 02 74  // .......9.......t
    89C0: 03 E8 06 00 8A C3 E8 2E 00 C3 50 B0 1E F6 E6 50  // ..........P....P
    89D0: B0 3B F6 E5 50 B0 0B F6 E1 59 03 C1 59 03 C1 B1  // .;..P....Y..Y...
    89E0: 64 F6 F1 80 FC 32 7C 02 FE C0 8A F0 8A E8 8A C8  // d....2|.........
    89F0: 58 C3 52 E8 39 00 5A 53 8B DA BA C8 03 9C FA EE  // X.R.9.ZS........
    8A00: 42 8A C7 EE 8A C5 EE 8A C1 EE 9D 5B C3 E8 1F 00  // B..........[....
    8A10: 53 9C FA BA C7 03 EE 42 42 EC 8A F8 EB 00 EB 00  // S......BB.......
    8A20: EC 8A E8 EB 00 EB 00 EC 8A C8 8A F7 9D 5B C3 50  // .............[.P
    8A30: 51 E8 81 F2 B9 FF 7F EC A8 08 75 02 E2 F9 59 58  // Q.........u...YX
    8A40: C3 2E 8E 1E 07 03 8B F8 24 0F 81 E7 F0 00 C1 EF  // ........$.......
    8A50: 03 83 FF 06 7F 18 2E FF A5 F3 89 FB 89 10 8A AE  // ................
    8A60: 8A 0A 8B 3C 03 74 08 3C 04 7F 03 E8 CF 01 C3 BA  // ...<.t.<........
    8A70: C4 03 B0 03 8A E3 EF C3 3C 04 77 F2 50 53 50 52  // ........<.w.PSPR
    8A80: 8B 16 63 04 B0 07 E8 EB EE 8A E0 D0 EC 80 E4 01  // ..c.............
    8A90: A8 40 74 03 80 CC 02 B0 12 E8 D8 EE 40 A3 85 04  // .@t.........@...
    8AA0: B0 09 E8 CF EE A8 80 74 04 D1 2E 85 04 A1 85 04  // .......t........
    8AB0: 8B D0 3D F4 01 73 1B BA E0 01 3D C2 01 73 13 BA  // ..=..s....=..s..
    8AC0: 90 01 3D 7C 01 73 0B BA 5E 01 3D 4A 01 73 03 BA  // ..=|.s..^.=J.s..
    8AD0: C8 00 89 16 85 04 5A 58 C6 06 84 04 FF E8 5D 01  // ......ZX......].
    8AE0: 5B 58 8A DF 32 FF 0A C0 74 0E B3 0E 3C 01 74 08  // [X..2...t...<.t.
    8AF0: B3 08 3C 02 74 02 B3 10 8A CB 8A E9 81 E9 01 02  // ..<.t...........
    8B00: 80 F9 08 7E 04 81 E9 01 01 87 1E 85 04 53 E8 5B  // ...~.........S.[
    8B10: F2 5B E8 85 02 C3 0A C0 74 11 FE C8 74 1A FE C8  // .[......t...t...
    8B20: 74 38 FE C8 74 3C FE C8 74 40 C3 89 2E 7C 00 8C  // t8..t<..t@...|..
    8B30: 06 7E 00 C3 8C C8 8E C0 FE CA 0A DB 74 07 32 FF  // .~..........t.2.
    8B40: 2E 8A 97 EE 8A 89 0E 85 04 88 16 84 04 89 2E 0C  // ................
    8B50: 01 8C 06 0E 01 C3 00 0D 18 2A E8 09 03 B9 0E 00  // .........*......
    8B60: EB D6 BD FE 59 B9 08 00 EB CA BD 11 62 B9 10 00  // ....Y.......b...
    8B70: EB C2 0A C0 75 BD 8B 0E 85 04 8A 16 84 04 80 FF  // ....u...........
    8B80: 07 77 35 80 FF 01 77 10 0A FF 75 06 C4 2E 7C 00  // .w5...w...u...|.
    8B90: EB 26 C4 2E 0C 01 EB 20 80 FF 02 75 0B 8C CD 8E  // .&..... ...u....
    8BA0: C5 2E 8B 2E F0 72 EB 10 0E 07 8A DF 32 FF 80 EB  // .....r......2...
    8BB0: 02 D1 E3 2E 8B AF 61 8B 8B C5 8B EC 89 4E 16 89  // ......a......N..
    8BC0: 56 12 89 46 0A 8C 46 1E C3 11 62 FE 59 FE 5D FE  // V..F..F...b.Y.].
    8BD0: 61 11 62 11 72 53 06 8A 26 49 04 E8 CD C3 26 8A  // a.b.rS..&I....&.
    8BE0: 47 02 26 8A 67 33 F6 C4 01 74 22 BD 11 62 3C 10  // G.&.g3...t"..b<.
    8BF0: 7D 0E E8 71 02 8C 06 0E 01 3C 0E 7D 07 BD FE 59  // }..q.....<.}...Y
    8C00: 8C 0E 0E 01 89 2E 0C 01 E8 10 01 EB 2D B4 84 3C  // ............-..<
    8C10: 10 7D 13 B4 81 3C 0E 74 0D 7F 15 B4 02 3C 08 74  // .}...<.t.....<.t
    8C20: 05 80 CC 80 EB 0A 26 F6 47 05 01 74 03 80 E4 7F  // ......&.G..t....
    8C30: 86 C4 32 DB E8 06 00 E8 C9 01 07 5B C3 8B F8 8B  // ..2........[....
    8C40: F2 BA CE 03 EC B8 05 00 EF B8 06 04 EF B2 C4 EC  // ................
    8C50: B8 02 04 EF B8 04 07 EF 8B D6 8B C7 50 24 7F 0A  // ............P$..
    8C60: C0 74 22 0E 07 33 D2 B9 00 01 3C 04 75 07 B7 10  // .t"..3....<.u...
    8C70: BD 11 62 EB 10 FE C8 75 07 B7 0E E8 E8 01 EB 05  // ..b....u........
    8C80: B7 08 BD FE 59 E8 2D 00 58 A8 80 74 00 BA C4 03  // ....Y.-.X..t....
    8C90: B8 02 03 EF B8 04 02 EF B2 CC EC A8 01 B8 06 0E  // ................
    8CA0: 75 02 B4 0A B2 CE 50 EC 58 EF B0 04 EE 32 C0 EE  // u.....P.X....2..
    8CB0: B8 05 10 EF C3 FC 0B C9 75 01 C3 80 FF 0E 75 0A  // ........u.....u.
    8CC0: 26 83 7E FE 10 75 03 80 CD 80 1E 06 1F 2E 8E 06  // &.~..u..........
    8CD0: 09 03 8B FA C1 E7 05 B0 40 53 80 E3 03 F6 E3 5B  // ........@S.....[
    8CE0: F6 C3 04 74 02 04 20 86 E0 8B D0 03 FA 8B F5 E3  // ...t.. .........
    8CF0: 28 32 C0 86 FB 32 FF 51 F6 C5 80 74 01 46 8B CB  // (2...2.Q...t.F..
    8D00: F3 A4 83 FB 20 74 07 B9 20 00 2B CB F3 AA 59 F6  // .... t.. .+...Y.
    8D10: C5 80 74 01 46 FE C9 75 DE 1F C3 8A 26 49 04 50  // ..t.F..u....&I.P
    8D20: 06 57 C4 3E A8 04 26 C4 7D 0C 8C C5 0B EF 74 30  // .W.>..&.}.....t0
    8D30: 8B EF 83 C7 07 26 8A 05 3C FF 74 24 38 E0 74 03  // .....&..<.t$8.t.
    8D40: 47 EB F2 8B FD 26 8A 05 FE C8 A2 84 04 26 8B 45  // G....&.......&.E
    8D50: 01 A3 85 04 26 C4 7D 03 89 3E 0C 01 8C 06 0E 01  // ....&.}..>......
    8D60: 5F 07 58 C3 26 F6 47 33 01 74 01 C3 C4 1E A8 04  // _.X.&.G3.t......
    8D70: 26 C4 5F 08 8C C0 0B C3 74 1F BF 0B 00 26 8A 01  // &._.....t....&..
    8D80: 3C FF 74 15 47 38 06 49 04 75 F2 26 8A 07 32 E4  // <.t.G8.I.u.&..2.
    8D90: 87 06 85 04 8B D8 E8 01 00 C3 8B 16 63 04 8A 26  // ............c..&
    8DA0: 85 04 FE CC 80 E4 1F 9C FA 80 FA D4 74 0B B0 14  // ............t...
    8DB0: EE 42 EC 24 E0 0A C4 EE 4A B0 09 EE 42 EC 24 E0  // .B.$....J...B.$.
    8DC0: 0A C4 EE 9D 8A C8 8B C3 8A 16 85 04 F6 F2 80 3E  // ...............>
    8DD0: 84 04 FF 75 07 A2 84 04 FE 0E 84 04 F6 E2 F6 C1  // ...u............
    8DE0: 80 74 02 D1 E0 48 8A E0 B0 12 8B 16 63 04 EF A0  // .t...H......c...
    8DF0: 4A 04 8A 26 84 04 FE C4 F6 E4 D1 E0 05 00 01 A3  // J..&............
    8E00: 4C 04 C3 8A 26 49 04 50 06 57 C4 3E A8 04 26 C4  // L...&I.P.W.>..&.
    8E10: 7D 08 8C C5 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05  // }.....tJ.....&..
    8E20: 3C FF 74 3E 38 E0 74 03 47 EB F2 8B FD 26 8A 3D  // <.t>8.t.G....&.=
    8E30: 26 8A 5D 01 26 8B 4D 02 26 8B 55 04 26 8A 45 0A  // &.].&.M.&.U.&.E.
    8E40: 3C FF 74 02 FE C8 50 A0 84 04 FE C0 F6 26 85 04  // <.t...P......&..
    8E50: A3 85 04 58 A2 84 04 26 C4 7D 06 8B EF 32 C0 E8  // ...X...&.}...2..
    8E60: DB FD 5F 07 58 C3 50 53 51 52 2E A1 11 03 0B C0  // .._.X.PSQR......
    8E70: 74 09 2E 8B 2E F0 72 0E 07 EB 08 B8 30 11 B7 02  // t.....r.....0...
    8E80: E8 C1 BE 5A 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53  // ...ZY[X.<.|....S
    8E90: 2E 8E 1E 07 03 86 FB 32 FF D1 E3 8B FB 81 C7 50  // .......2.......P
    8EA0: 04 8B 35 5B 89 15 56 8B F0 51 53 26 8A 46 00 45  // ..5[..V..QS&.F.E
    8EB0: 3C 0D 7F 1F 75 04 32 D2 EB 40 3C 0A 74 32 3C 07  // <...u.2..@<.t2<.
    8EC0: 75 05 E8 AD 76 EB 62 3C 08 75 08 0A D2 74 5A FE  // u...v.b<.u...tZ.
    8ED0: CA EB 27 F7 C6 02 00 74 05 26 8A 5E 00 45 B9 01  // ..'....t.&.^.E..
    8EE0: 00 B4 09 E8 5E BE FE C2 3A 16 4A 04 72 0C 32 D2  // ....^...:.J.r.2.
    8EF0: 89 15 3A 36 84 04 73 06 FE C6 89 15 EB 2B 50 E8  // ..:6..s......+P.
    8F00: AD EA 75 08 B8 00 08 E8 3A BE EB 09 80 3E 49 04  // ..u.....:....>I.
    8F10: 07 74 F1 32 E4 86 3E 62 04 53 8A FC 55 E8 25 00  // .t.2..>b.S..U.%.
    8F20: 5D 5B 86 3E 62 04 58 8B 15 5B 59 E2 15 5A F7 C6  // ][.>b.X..[Y..Z..
    8F30: 01 00 75 02 89 15 8B 05 3A 3E 62 04 75 03 E8 34  // ..u.....:>b.u..4
    8F40: ED C3 E9 64 FF 33 C9 8A 36 84 04 8A 16 4A 04 FE  // ...d.3..6....J..
    8F50: CA B8 01 06 E8 ED BD C3 2E 8E 1E 07 03 0A C0 75  // ...............u
    8F60: 0D E8 18 00 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01  // .......^..F...<.
    8F70: 75 09 E8 41 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF  // u..A....F.......
    8F80: EE 8F 2E 3A 05 72 04 BB FF FF C3 32 E4 D1 E0 03  // ...:.r.....2....
    8F90: F8 2E 8B 5D 04 0A DB 74 05 0A FF 75 04 C3 86 FB  // ...]...t...u....
    8FA0: C3 A0 10 04 24 30 3C 30 74 06 F6 C3 01 75 EF C3  // ....$0<0t....u..
    8FB0: F6 C3 01 74 E9 C3 BF EE 8F 2E 8A 0D 32 C0 83 C7  // ...t........2...
    8FC0: 04 2E 3B 1D 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02  // ..;.t....;.t....
    8FD0: FE C0 38 C8 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6  // ..8.~...........
    8FE0: 06 89 04 02 74 0E BB 07 00 BA CC 03 EC A8 01 74  // ....t..........t
    8FF0: 18 BB 08 00 BA B4 03 E8 DF EC 74 21 B7 01 E8 8C  // ..........t!....
    9000: E9 80 FA D4 74 17 86 FB C3 BA D4 03 E8 CA EC 74  // ....t..........t
    9010: 0C B7 02 E8 77 E9 80 FA B4 74 02 86 FB C3 0F 08  // ....w....t......
    9020: 0F 08 0F 08 0F 08 03 01 03 01 01 01 00 08 01 01  // ................
    9030: 01 01 01 01 01 01 0F 01 0F 08 0F 04 00 02 0F 02  // ................
    9040: 01 01 0F 01 FF 01 FF E0 0F 00 00 00 00 07 02 08  // ................
    9050: FF 0E 00 00 3F 00 10 01 08 00 00 00 00 01 00 02  // ....?...........
    9060: 02 01 00 04 04 01 00 05 02 05 00 06 01 06 05 06  // ................
    9070: 00 08 01 08 00 07 02 07 06 07 CA 00 34 00 90 00  // ............4...
    9080: 96 00 00 00 00 00 00 00 5F 57 C3 90 50 66 52 E8  // ........_W..PfR.
    9090: F4 FF FF FF 81 EF 10 00 00 00 2E 8B 07 66 BA F8  // .............f..
    90A0: 0C EF 66 BA FC 0C ED 32 C0 66 8B F8 66 5A 58 C3  // ..f....2.f..fZX.
    90B0: 66 B8 4F 03 66 52 66 56 53 57 50 0A FF 75 44 E8  // f.O.fRfVSWP..uD.
    90C0: C8 FF FF FF 66 33 F6 66 BB 53 00 E8 48 00 00 00  // ....f3.f.S..H...
    90D0: C1 E8 10 F6 C4 40 75 2B 66 81 E2 FF 02 66 D1 E2  // .....@u+f....f..
    90E0: 66 8B C2 66 40 C1 E0 10 66 8B C2 66 BB 13 00 E8  // f..f@...f..f....
    90F0: 30 00 00 00 66 BB 12 00 E8 27 00 00 00 66 58 32  // 0...f....'...fX2
    9100: E4 66 50 58 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03  // .fPX_[f^fZ..f.O.
    9110: C3 90 66 B8 4F 03 C3 90 66 52 E8 11 00 00 00 ED  // ..f.O...fR......
    9120: 66 5A C3 90 66 52 E8 05 00 00 00 EF 66 5A C3 90  // fZ..fR......fZ..
    9130: 66 8B D7 50 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF  // f..P3.f..f......
    9140: 66 83 C2 04 58 C3 F0 38 E3 38 E3 38 E3 38 CE 38  // f...X..8.8.8.8.8
    9150: CE 38 CE 38 CE 38 10 35 87 35 B1 35 F2 36 F1 36  // .8.8.8.5.5.5.6.6
    9160: F1 36 37 37 9C 37 CC 37 89 38 B2 38 B2 38 29 37  // .677.7.7.8.8.8)7
    9170: 1C 37 1C 37 1C 37 1C 37 1C 37 37 37 9C 37 CC 37  // .7.7.7.7.777.7.7
    9180: 89 38 B7 38 FD 38 B2 38 B2 38 FF FF FF FF FF FF  // .8.8.8.8.8......
    9190: 00 00 FF FF 00 00 FF FF 00 00 FF 00 00 00 FF 00  // ................
    91A0: 00 00 FF 00 00 00 FF 00 00 00 00 00 08 10 00 08  // ................
    91B0: 10 18 00 08 10 18 14 33 01 14 33 02 22 47 03 02  // .......3..3."G..
    91C0: 47 03 39 34 03 ED 33 03 15 33 04 2E 33 04 3E 33  // G.94..3..3..3.>3
    91D0: 04 14 33 03 00 00 00 00 C1 3A 00 02 C1 3A 01 02  // ..3......:...:..
    91E0: C1 3A 02 02 C1 3A 03 02 C1 3A 04 02 C1 3A 05 02  // .:...:...:...:..
    91F0: BB 3C 00 02 BB 3C 01 02 BB 3C 02 02 BB 3C 03 02  // .<...<...<...<..
    9200: BB 3C 04 02 BB 3C 05 02 F0 3C 00 02 F0 3C 01 02  // .<...<...<...<..
    9210: F0 3C 02 02 F0 3C 03 02 F0 3C 04 02 F0 3C 05 02  // .<...<...<...<..
    9220: 2B 3F 00 02 2B 3F 01 02 2B 3F 02 02 2B 3F 03 02  // +?..+?..+?..+?..
    9230: 2B 3F 04 02 2B 3F 05 02 2B 3F 00 02 2B 3F 01 02  // +?..+?..+?..+?..
    9240: 2B 3F 02 02 2B 3F 03 02 2B 3F 04 02 2B 3F 05 02  // +?..+?..+?..+?..
    9250: F2 3D 00 02 F2 3D 01 02 F2 3D 02 02 F2 3D 03 02  // .=...=...=...=..
    9260: F2 3D 04 02 F2 3D 05 02 2E 3E 00 02 2E 3E 01 02  // .=...=...>...>..
    9270: 2E 3E 02 02 2E 3E 03 02 2E 3E 04 02 2E 3E 05 02  // .>...>...>...>..
    9280: 9F 3D 00 02 9F 3D 01 02 9F 3D 02 02 9F 3D 03 02  // .=...=...=...=..
    9290: 9F 3D 04 02 9F 3D 05 02 D3 3D 00 02 D3 3D 01 02  // .=...=...=...=..
    92A0: D3 3D 02 02 D3 3D 03 02 D3 3D 04 02 D3 3D 05 02  // .=...=...=...=..
    92B0: 83 41 00 00 B6 41 01 00 B6 41 02 00 A3 41 00 00  // .A...A...A...A..
    92C0: 91 40 00 02 8A 3E 00 02 8A 3E 01 02 8A 3E 02 02  // .@...>...>...>..
    92D0: 8A 3E 03 02 8A 3E 04 02 8A 3E 05 02 A9 40 00 02  // .>...>...>...@..
    92E0: FE 42 05 00 FE 42 01 00 FE 42 00 00 FE 42 02 00  // .B...B...B...B..
    92F0: 3F 43 00 00 3F 43 02 00 84 43 00 00 14 40 00 02  // ?C..?C...C...@..
    9300: 14 40 01 02 14 40 02 02 14 40 03 02 14 40 04 02  // .@...@...@...@..
    9310: 14 40 05 02 D0 41 00 00 F8 41 00 00 79 42 00 00  // .@...A...A..yB..
    9320: F4 42 00 00 D8 3E 00 02 D8 3E 01 02 D8 3E 02 02  // .B...>...>...>..
    9330: D8 3E 03 02 D8 3E 04 02 D8 3E 05 02 F3 42 00 01  // .>...>...>...B..
    9340: F3 42 00 01 F7 3B 00 02 F7 3B 01 02 F7 3B 02 02  // .B...;...;...;..
    9350: F7 3B 03 02 F7 3B 04 02 F7 3B 05 02 18 42 00 00  // .;...;...;...B..
    9360: F4 42 00 00 F4 42 00 00 F4 42 00 00 29 41 00 00  // .B...B...B..)A..
    9370: 1B 3D 00 02 1B 3D 01 02 1B 3D 02 02 1B 3D 03 02  // .=...=...=...=..
    9380: 1B 3D 04 02 1B 3D 05 02 4A 3D 00 02 4A 3D 01 02  // .=...=..J=..J=..
    9390: 4A 3D 02 02 4A 3D 03 02 4A 3D 04 02 4A 3D 05 02  // J=..J=..J=..J=..
    93A0: 80 3D 00 02 80 3D 01 02 80 3D 02 02 80 3D 03 02  // .=...=...=...=..
    93B0: 80 3D 04 02 80 3D 05 02 3B 42 00 00 5E 42 00 00  // .=...=..;B..^B..
    93C0: 1C 3E 01 02 1C 3E 02 02 78 3E 01 02 78 3E 02 02  // .>...>..x>..x>..
    93D0: A6 00 02 01 EC A3 00 00 00 00 00 00 C2 C2 00 00  // ................
    93E0: 5A A4 00 00 00 00 22 AD 00 00 00 00 EC AD 0A B3  // Z.....".........
    93F0: 00 00 00 00 00 00 00 00 00 00 A6 A4 DE B5 FA A4  // ................
    9400: 4C A5 84 AC 00 AD 18 AD 36 A4 00 00 00 00 00 00  // L.......6.......
    9410: 00 00 00 00 00 00 6A B6 DC B6 1C B7 00 00 60 B7  // ......j.......`.
    9420: 00 00 D0 BA 00 00 30 B8 0A BA 9C BB EE BC 30 BD  // ......0.......0.
    9430: 70 CF 00 00 00 00 48 BD 0E BF 70 CD 00 00 A4 CE  // p.....H...p.....
    9440: 18 BF 00 00 3A C1 00 00 00 00 00 00 80 C1 BA C2  // ....:...........
    9450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9460: 00 00 00 00 00 00 00 00 00 00 7E D1 FE C5 44 C7  // ..........~...D.
    9470: D0 CA 14 CD 00 00 4A 00 02 01 00 00 00 00 00 00  // ......J.........
    9480: 58 94 20 95 68 95 6C 98 8C A2 A4 A3 00 00 00 00  // X. .h.l.........
    9490: C8 98 D4 9C 38 9D C0 A3 AC 9D 00 00 AC A1 00 00  // ....8...........
    94A0: 00 00 00 00 00 00 C0 A1 4E A2 00 00 00 00 00 00  // ........N.......
    94B0: 54 A2 00 00 00 00 D4 98 00 00 00 00 00 00 00 00  // T...............
    94C0: C8 00 02 01 D6 09 80 02 A0 00 E0 01 2D 00 10 00  // ............-...
    94D0: 60 00 0A 00 02 00 00 00 00 00 08 08 06 00 12 3C  // `..............<
    94E0: A0 0F 20 03 00 01 58 02 1C 00 28 00 80 00 01 00  // .. ...X...(.....
    94F0: 04 00 00 00 00 00 00 00 00 00 6A 3C 64 19 00 04  // ..........j<d...
    9500: 40 01 00 03 26 00 18 00 88 00 03 00 06 00 00 00  // @...&...........
    9510: 00 00 00 00 06 00 55 3C 30 2A 00 05 08 02 C0 03  // ......U<0*......
    9520: 28 00 60 00 70 00 01 00 03 00 00 00 00 00 00 00  // (.`.p...........
    9530: 00 00 E9 3C 30 2A 00 05 98 01 00 04 2A 00 30 00  // ...<0*......*.0.
    9540: 70 00 01 00 03 00 00 00 00 00 00 00 00 00 EA 3C  // p..............<
    9550: 8F 2F 78 05 D0 01 1A 04 27 00 58 00 90 00 03 00  // ./x.....'.X.....
    9560: 04 00 00 00 00 00 00 00 02 00 EB 3C 48 3F 40 06  // ...........<H?@.
    9570: 30 02 B0 04 32 00 40 00 C0 00 01 00 03 00 00 00  // 0...2.@.........
    9580: 00 00 00 00 00 00 EC 3C 48 00 03 01 0A 00 02 10  // .......<H.......
    9590: 20 4E 00 00 20 4E 00 00 01 00 00 00 C6 2C 00 00  //  N.. N.......,..
    95A0: 4C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // L...............
    95B0: F4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    95C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    95D0: 04 03 02 01 00 00 00 00 00 2A 00 2A 00 00 2A 2A  // .........*.*..**
    95E0: 2A 00 00 2A 00 2A 2A 15 00 2A 2A 2A 15 15 15 15  // *..*.**..***....
    95F0: 15 3F 15 3F 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F  // .?.?..???..?.???
    9600: 15 3F 3F 3F 00 00 00 05 05 05 08 08 08 0B 0B 0B  // .???............
    9610: 0E 0E 0E 11 11 11 14 14 14 18 18 18 1C 1C 1C 20  // ............... 
    9620: 20 20 24 24 24 28 28 28 2D 2D 2D 32 32 32 38 38  //   $$$(((---22288
    9630: 38 3F 3F 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F  // 8???..?..?..?/.?
    9640: 3F 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F  // ?.??./?..?..?..?
    9650: 10 00 3F 1F 00 3F 2F 00 3F 3F 00 2F 3F 00 1F 3F  // ..?..?/.??./?..?
    9660: 00 10 3F 00 00 3F 00 00 3F 10 00 3F 1F 00 3F 2F  // ..?..?..?..?..?/
    9670: 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 1F 1F 3F 27  // .??./?..?..?..?'
    9680: 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 3F 3F 1F 37 3F 1F  // .?/.?7.??.??.7?.
    9690: 2F 3F 1F 27 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F  // /?.'?..?'.?/.?7.
    96A0: 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 1F 1F 3F 1F 1F  // ??.7?./?.'?..?..
    96B0: 3F 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F  // ?'.?/.?7.??.7?./
    96C0: 3F 1F 27 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F  // ?.'?--?1-?6-?:-?
    96D0: 3F 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F  // ?-??-:?-6?-1?--?
    96E0: 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36 3F  // 1-?6-?:-??-:?-6?
    96F0: 2D 31 3F 2D 2D 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A  // -1?--?--?1-?6-?:
    9700: 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 00 00 1C 07  // -??-:?-6?-1?....
    9710: 00 1C 0E 00 1C 15 00 1C 1C 00 1C 1C 00 15 1C 00  // ................
    9720: 0E 1C 00 07 1C 00 00 1C 07 00 1C 0E 00 1C 15 00  // ................
    9730: 1C 1C 00 15 1C 00 0E 1C 00 07 1C 00 00 1C 00 00  // ................
    9740: 1C 07 00 1C 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E  // ................
    9750: 1C 00 07 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C  // ................
    9760: 1C 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C  // ................
    9770: 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15 1C  // ................
    9780: 0E 11 1C 0E 0E 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18  // ................
    9790: 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 14 14 1C 16  // ................
    97A0: 14 1C 18 14 1C 1A 14 1C 1C 14 1C 1C 14 1A 1C 14  // ................
    97B0: 18 1C 14 16 1C 14 14 1C 16 14 1C 18 14 1C 1A 14  // ................
    97C0: 1C 1C 14 1A 1C 14 18 1C 14 16 1C 14 14 1C 14 14  // ................
    97D0: 1C 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18  // ................
    97E0: 1C 14 16 1C 00 00 10 04 00 10 08 00 10 0C 00 10  // ................
    97F0: 10 00 10 10 00 0C 10 00 08 10 00 04 10 00 00 10  // ................
    9800: 04 00 10 08 00 10 0C 00 10 10 00 0C 10 00 08 10  // ................
    9810: 00 04 10 00 00 10 00 00 10 04 00 10 08 00 10 0C  // ................
    9820: 00 10 10 00 0C 10 00 08 10 00 04 10 08 08 10 0A  // ................
    9830: 08 10 0C 08 10 0E 08 10 10 08 10 10 08 0E 10 08  // ................
    9840: 0C 10 08 0A 10 08 08 10 0A 08 10 0C 08 10 0E 08  // ................
    9850: 10 10 08 0E 10 08 0C 10 08 0A 10 08 08 10 08 08  // ................
    9860: 10 0A 08 10 0C 08 10 0E 08 10 10 08 0E 10 08 0C  // ................
    9870: 10 08 0A 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10  // ................
    9880: 10 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10  // ................
    9890: 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 0F 10 0B 0D 10  // ................
    98A0: 0B 0C 10 0B 0B 10 0B 0B 10 0C 0B 10 0D 0B 10 0F  // ................
    98B0: 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 00 00 00 00  // ................
    98C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    98D0: 00 00 00 00 5C 00 02 01 B4 3B 80 07 4A 01 38 04  // ....\....;..J.8.
    98E0: 34 00 50 00 3C 00 06 00 08 00 58 01 C1 00 00 00  // 4.P.<.....X.....
    98F0: 06 00 00 3C C8 00 00 00 00 00 34 21 00 00 B8 0B  // ...<......4!....
    9900: 00 00 00 00 7D 00 00 01 03 0A 82 41 00 FF FF 00  // ....}......A....
    9910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9930: 0C 00 02 01 00 00 00 00 00 00 00 00 00 04 01 0B  // ................
    9940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9950: 77 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // w...............
    9960: 00 00 00 00 C8 00 1A 02 00 00 00 00 00 00 00 00  // ................
    9970: 00 00 00 00 8C 00 01 01 00 00 00 00 00 00 00 00  // ................
    9980: 00 00 00 00 00 00 00 00 80 00 20 02 0C 32 00 00  // .......... ..2..
    9990: 00 00 E4 00 08 00 00 00 02 00 10 01 14 31 01 01  // .............1..
    99A0: 00 00 E4 00 00 00 00 00 08 00 10 02 13 31 02 02  // .............1..
    99B0: 00 00 E4 00 00 01 00 00 00 00 00 00 00 00 00 00  // ................
    99C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A20: 00 00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF  // ................
    9A30: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A40: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A50: FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00  // ................
    9A60: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A70: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A80: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A90: FF FF FF FF 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B90: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BA0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BB0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BC0: FF FF FF FF 00 00 00 00 00 00 FF FF FF FF FF FF  // ................
    9BD0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BF0: FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00  // ................
    9C00: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C10: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C20: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C30: FF FF FF FF 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D30: 00 00 00 00 00 00 00 00 00 00 00 00 64 00 02 01  // ............d...
    9D40: B5 5D 00 00 00 00 01 00 B5 5D 00 00 08 08 02 00  // .].......]......
    9D50: B5 5D 00 00 10 10 03 00 B5 5D 00 00 18 14 04 00  // .].......]......
    9D60: B5 5D 00 00 1A 18 05 00 B5 5D 00 00 1C 1C 06 00  // .].......]......
    9D70: 91 5D 00 00 08 08 90 00 95 5D 00 00 08 08 91 00  // .].......]......
    9D80: 99 5D 00 00 08 08 92 00 9D 5D 00 00 08 08 93 00  // .].......]......
    9D90: A1 5D 00 00 08 08 94 00 A5 5D 00 00 08 08 95 00  // .].......]......
    9DA0: 74 00 01 01 10 01 06 12 11 01 16 12 13 01 06 6A  // t..............j
    9DB0: 14 01 16 6A 16 01 06 55 17 01 16 55 19 01 06 EA  // ...j...U...U....
    9DC0: 1A 01 16 EA 65 01 16 E9 66 01 0A E9 21 01 0A 12  // ....e...f...!...
    9DD0: 22 01 0A 6A 23 01 0A 55 24 01 0A EA 45 01 16 EB  // "..j#..U$...E...
    9DE0: 46 01 0A EB 75 01 16 EC 76 01 0A EC D2 01 16 70  // F...u...v......p
    9DF0: D4 01 0A 70 D8 01 16 71 D9 01 0A 71 E2 01 16 72  // ...p...q...q...r
    9E00: E4 01 0A 72 E8 01 16 73 E9 01 0A 73 F5 01 16 74  // ...r...s...s...t
    9E10: F6 01 0A 74 00 00 00 00 00 00 00 00 00 00 00 00  // ...t............
    9E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A210: 00 00 00 00 14 00 02 01 02 00 08 00 80 00 00 02  // ................
    A220: 00 04 FF FF 40 00 FF FF 8D 00 01 04 8A 00 04 00  // ....@...........
    A230: 0C 32 48 00 1E 21 00 00 63 00 00 00 80 00 00 00  // .2H..!..c.......
    A240: 14 31 51 00 1E 22 00 00 6A 00 00 00 02 00 00 00  // .1Q.."..j.......
    A250: 13 31 5A 00 20 21 00 00 71 00 00 00 08 00 00 00  // .1Z. !..q.......
    A260: 03 71 78 00 00 00 00 00 00 00 00 00 00 00 00 00  // .qx.............
    A270: 01 04 90 00 02 04 01 00 FF 01 04 91 00 02 04 02  // ................
    A280: 00 FF 01 04 93 00 02 04 04 00 FF 14 06 0F 00 00  // ................
    A290: 00 FF 14 06 0F 00 00 00 FF 14 06 0F 01 00 00 FF  // ................
    A2A0: 10 0A 01 02 04 03 00 00 00 00 11 0A 90 91 93 92  // ................
    A2B0: 00 00 00 00 FF 00 05 00 01 01 00 00 38 00 04 02  // ............8...
    A2C0: 04 00 00 00 60 EA 00 00 C0 12 60 09 00 00 00 00  // ....`.....`.....
    A2D0: 00 00 00 00 7C 01 4E 0C 01 01 00 00 55 00 00 00  // ....|.N.....U...
    A2E0: C0 12 00 00 00 01 04 01 00 04 04 00 00 00 00 00  // ................
    A2F0: 00 00 00 00 18 01 03 02 0A 00 34 00 04 01 0C 00  // ..........4.....
    A300: FF FF FF 00 02 0F 00 00 00 5F 00 08 40 9C 00 00  // ........._..@...
    A310: 03 0F 00 00 00 5F 00 08 FF FF FF 00 03 0F 00 00  // ....._..........
    A320: 2A 57 20 10 00 00 00 00 0F 00 05 00 CE 00 00 4B  // *W ............K
    A330: 00 00 80 01 3A 00 00 80 02 1B 00 00 80 03 00 00  // ....:...........
    A340: 00 80 08 34 25 00 80 09 1C 25 00 80 0A 00 1B 00  // ...4%....%......
    A350: 9F 10 14 3F 00 80 11 01 38 00 9F 18 00 4A 00 9F  // ...?....8....J..
    A360: 00 4B 00 00 80 01 3A 00 00 80 02 1B 00 00 80 03  // .K....:.........
    A370: 00 00 00 80 08 34 25 00 80 09 1C 25 00 80 0A 00  // .....4%....%....
    A380: 1B 00 9F 10 14 3F 00 80 11 01 38 00 9F 18 00 4A  // .....?....8....J
    A390: 00 9F 00 4B 00 00 80 01 3A 00 00 80 02 1B 00 00  // ...K....:.......
    A3A0: 80 03 00 00 00 80 08 34 25 00 80 09 1C 25 00 80  // .......4%....%..
    A3B0: 0A 00 1B 00 9F 10 14 3F 00 80 11 01 38 00 9F 18  // .......?....8...
    A3C0: 00 4A 00 9F 00 4B 00 00 80 01 3A 00 00 80 02 1B  // .J...K....:.....
    A3D0: 00 00 80 03 00 00 00 80 08 34 25 00 80 09 1C 25  // .........4%....%
    A3E0: 00 80 0A 00 1B 00 9F 10 14 3F 00 80 11 01 38 00  // .........?....8.
    A3F0: 9F 18 00 4A 00 9F 00 00 00 01 02 03 01 00 01 02  // ...J............
    A400: 03 01 00 01 02 03 01 00 01 02 03 01 1C 00 03 01  // ................
    A410: 00 0A 00 00 00 00 00 00 77 01 35 0C 10 27 00 00  // ........w.5..'..
    A420: FF 00 FF 00 FF 00 00 00 2C 00 02 02 00 09 01 02  // ........,.......
    A430: 08 01 02 02 64 C0 00 00 65 C0 00 00 66 C0 00 00  // ....d...e...f...
    A440: 67 C0 00 00 E8 C0 00 00 A0 21 00 00 42 EC 00 00  // g........!..B...
    A450: 10 27 00 00 4A 00 02 01 00 08 37 00 00 4B E5 00  // .'..J.....7..K..
    A460: 04 49 43 00 4A 05 53 00 00 02 00 00 49 42 00 52  // .IC.J.S.....IB.R
    A470: 1A 52 19 52 16 52 18 52 3D 02 05 02 00 02 00 00  // .R.R.R.R=.......
    A480: 52 0D 02 05 02 00 04 00 00 55 00 03 52 15 0D 05  // R........U..R...
    A490: 53 00 00 02 00 00 5B 52 16 52 18 52 3D 5B 24 00  // S.....[R.R.R=[$.
    A4A0: 01 01 00 00 37 00 00 03 00 41 E3 0D 33 05 41 01  // ....7....A..3.A.
    A4B0: 00 00 00 1B 05 41 0B 01 02 06 00 41 0D 25 1F 0E  // .....A.....A.%..
    A4C0: 03 5B 4B 00 01 01 00 00 37 00 00 42 21 00 63 00  // .[K.....7..B!.c.
    A4D0: 1F 00 63 01 39 00 63 03 3F 00 63 02 45 00 5A 5A  // ..c.9.c.?.c.E.ZZ
    A4E0: 5B 03 05 40 00 00 05 04 2D 19 40 00 15 05 40 02  // [..@....-.@...@.
    A4F0: 01 02 0C 00 40 02 00 00 0D 00 5B 02 00 00 E3 0D  // ....@.....[.....
    A500: 5B 02 00 00 E7 0D 5B 02 00 00 E8 0D 5B 00 54 00  // [.....[.....[.T.
    A510: 01 02 00 00 37 00 00 01 05 00 00 9B 62 01 00 54  // ....7.......b..T
    A520: 00 01 00 01 05 00 00 93 62 01 00 01 01 01 00 01  // ........b.......
    A530: 56 00 41 03 09 41 00 01 05 00 00 83 62 01 00 01  // V.A..A......b...
    A540: 02 01 00 41 01 05 00 00 9B 62 01 00 3C 25 01 00  // ...A.....b..<%..
    A550: 00 44 36 00 01 05 00 00 93 62 01 00 02 00 01 01  // .D6......b......
    A560: 00 5B 52 00 02 01 08 08 37 00 00 3D 25 00 00 44  // .[R.....7..=%..D
    A570: 14 00 55 38 00 5B 01 05 00 00 61 60 01 00 3C E5  // ..U8.[....a`..<.
    A580: 01 00 FF 44 10 00 4A E5 01 00 80 44 24 00 01 05  // ...D..J....D$...
    A590: 00 00 62 60 01 00 01 01 01 00 01 56 00 40 03 A9  // ..b`.......V.@..
    A5A0: 40 00 01 05 00 00 61 60 01 00 01 02 01 00 40 02  // @.....a`......@.
    A5B0: E5 00 01 5B 37 07 01 01 00 00 37 00 00 02 05 00  // ...[7.....7.....
    A5C0: 01 00 00 00 52 06 01 05 80 29 00 F4 00 00 01 05  // ....R....)......
    A5D0: 00 00 2C A8 01 00 01 05 01 00 00 F4 00 00 1A 05  // ..,.............
    A5E0: 00 04 2C 05 00 FF F3 00 00 01 01 81 29 00 01 05  // ..,.........)...
    A5F0: 00 00 2D A8 01 00 01 01 01 00 00 01 05 85 29 00  // ..-...........).
    A600: 00 3D 00 01 05 00 00 31 A8 01 00 01 05 01 00 00  // .=.....1........
    A610: 00 3D 00 14 05 00 06 0E 0D 00 3F 00 2C 05 00 01  // .=........?.,...
    A620: 00 00 00 01 01 86 29 00 01 05 00 00 32 A8 01 00  // ......).....2...
    A630: 01 01 01 00 00 01 05 50 28 EB 0F E4 60 01 05 00  // .......P(...`...
    A640: 00 90 A6 01 00 01 05 01 00 EB 0F E4 60 01 05 6E  // ............`..n
    A650: 29 00 00 00 00 01 05 00 00 1A A8 01 00 01 05 01  // )...............
    A660: 00 00 00 00 00 01 05 59 28 FF 21 10 00 01 05 00  // .......Y(.!.....
    A670: 00 99 A6 01 00 01 05 01 00 FF 21 10 00 01 05 5A  // ..........!....Z
    A680: 28 FF 25 10 00 01 05 00 00 9A A6 01 00 01 05 01  // (.%.............
    A690: 00 FF 25 10 00 01 05 58 28 05 00 00 00 01 05 00  // ..%....X(.......
    A6A0: 00 98 A6 01 00 01 05 01 00 05 00 00 00 01 05 72  // ...............r
    A6B0: 29 FF FF 0F 00 01 05 00 00 1E A8 01 00 01 05 01  // )...............
    A6C0: 00 FF FF 0F 00 01 05 73 29 02 00 00 00 01 05 00  // .......s).......
    A6D0: 00 10 A8 01 00 01 00 64 29 01 00 01 05 00 00 11  // .......d).......
    A6E0: A8 01 00 01 00 65 29 01 00 01 05 00 00 12 A8 01  // .....e).........
    A6F0: 00 01 00 66 29 01 00 01 05 00 00 13 A8 01 00 01  // ...f)...........
    A700: 00 67 29 01 00 01 05 00 00 14 A8 01 00 01 00 68  // .g)............h
    A710: 29 01 00 01 05 00 00 15 A8 01 00 01 00 69 29 01  // )............i).
    A720: 00 01 05 00 00 16 A8 01 00 01 00 6A 29 01 00 01  // ...........j)...
    A730: 05 00 00 17 A8 01 00 01 00 6B 29 01 00 03 00 40  // .........k)....@
    A740: 01 00 01 02 74 29 40 01 05 00 00 20 A8 01 00 01  // ....t)@.... ....
    A750: 02 01 00 40 03 00 41 81 29 33 00 41 80 29 2D 02  // ...@..A.)3.A.)-.
    A760: 40 41 01 02 75 29 40 01 05 00 00 21 A8 01 00 01  // @A..u)@....!....
    A770: 02 01 00 40 01 05 F2 2A BF 3F 3F 3F 01 05 FA 2A  // ...@...*.???...*
    A780: F0 BF E0 0D 01 05 F9 2A 1F 00 00 00 01 05 1A 27  // .......*.......'
    A790: 01 00 00 00 01 05 0F 2A 24 0F 00 00 01 05 EF 2A  // .......*$......*
    A7A0: 00 F0 00 00 01 05 0A 2A 04 06 08 20 01 05 48 2A  // .......*... ..H*
    A7B0: 00 F0 3F FF 66 FF 2D 0D 42 CB 05 03 04 40 00 00  // ..?.f.-.B....@..
    A7C0: 3E 05 40 00 00 00 00 44 2A 02 01 04 00 00 00 00  // >.@....D*.......
    A7D0: 01 04 01 00 04 00 2D 0D 42 08 00 43 07 02 01 05  // ......-.B..C....
    A7E0: 17 74 11 01 03 00 03 00 40 26 74 01 05 17 74 15  // .t......@&t...t.
    A7F0: 01 03 00 03 00 41 26 74 4C 05 40 01 00 00 00 44  // .....A&tL.@....D
    A800: B0 02 4C 05 41 FF 00 00 00 49 B0 02 4C 05 40 F0  // ..L.A....I..L.@.
    A810: 00 00 00 44 89 02 01 02 34 2A 40 01 02 35 2A 41  // ...D....4*@..5*A
    A820: 01 05 00 00 34 A1 01 00 01 02 01 00 40 01 05 00  // ....4.......@...
    A830: 00 35 A1 01 00 01 02 01 00 41 43 33 03 01 02 36  // .5.......AC3...6
    A840: 2A 40 01 02 37 2A 41 01 05 00 00 36 A1 01 00 01  // *@..7*A....6....
    A850: 02 01 00 40 01 05 00 00 37 A1 01 00 01 02 01 00  // ...@....7.......
    A860: 41 43 33 03 01 05 17 74 19 01 03 00 03 00 40 26  // AC3....t......@&
    A870: 74 01 05 17 74 1D 01 03 00 03 00 41 26 74 4C 05  // t...t......A&tL.
    A880: 40 01 00 00 00 44 AC 03 4C 05 41 FF 00 00 00 49  // @....D..L.A....I
    A890: AC 03 4C 05 40 F0 00 00 00 44 0F 03 01 02 34 2A  // ..L.@....D....4*
    A8A0: 40 01 02 35 2A 41 01 05 00 00 34 A1 01 00 01 02  // @..5*A....4.....
    A8B0: 01 00 40 01 05 00 00 35 A1 01 00 01 02 01 00 41  // ..@....5.......A
    A8C0: 43 33 03 01 02 36 2A 40 01 02 37 2A 41 01 05 00  // C3...6*@..7*A...
    A8D0: 00 36 A1 01 00 01 02 01 00 40 01 05 00 00 37 A1  // .6.......@....7.
    A8E0: 01 00 01 02 01 00 41 01 00 38 2A 6D 70 03 00 40  // ......A..8*mp..@
    A8F0: 41 70 09 05 40 01 00 00 00 75 05 40 00 00 00 00  // Ap..@....u.@....
    A900: 6F 05 40 00 00 00 00 5C 02 43 2A FE FF FF FF 40  // o.@....\.C*....@
    A910: 01 05 00 00 43 A1 01 00 5C 02 01 00 FE FF FF FF  // ....C...\.......
    A920: 40 03 05 40 00 01 00 00 03 00 41 41 70 75 05 41  // @..@......AApu.A
    A930: 18 00 00 00 33 02 40 41 21 05 40 02 00 00 00 6F  // ....3.@A!.@....o
    A940: 05 40 07 00 00 00 5C 02 43 2A 7F 00 FF FF 40 01  // .@....\.C*....@.
    A950: 05 00 00 43 A1 01 00 5C 02 01 00 7F 00 FF FF 40  // ...C...\.......@
    A960: 66 FF 2D 0D 42 BF 04 03 04 40 00 00 3E 05 40 00  // f.-.B....@..>.@.
    A970: 00 00 00 44 10 04 3E 05 40 00 00 02 00 45 DD 03  // ...D..>.@....E..
    A980: 15 05 40 02 01 02 0C 00 40 03 00 41 0D 00 43 E8  // ..@.....@..A..C.
    A990: 03 01 04 00 00 00 00 03 00 41 01 00 03 04 40 04  // .........A....@.
    A9A0: 00 01 02 00 00 40 01 02 01 00 41 2D 05 40 00 77  // .....@....A-.@.w
    A9B0: 01 00 01 02 00 00 40 01 02 01 00 41 2D 0D 42 08  // ......@....A-.B.
    A9C0: 00 43 B3 03 01 05 00 00 80 40 01 00 03 00 40 01  // .C.......@....@.
    A9D0: 00 09 05 40 00 01 00 00 75 05 40 08 00 00 00 03  // ...@....u.@.....
    A9E0: 00 41 48 2A 01 02 57 00 41 09 05 41 00 01 00 00  // .AH*..W.A..A....
    A9F0: 01 02 58 00 41 75 05 41 08 00 00 00 01 02 59 00  // ..X.Au.A......Y.
    AA00: 41 2D 02 41 40 01 02 5A 00 41 03 A2 40 41 01 02  // A-.A@..Z.A..@A..
    AA10: 5B 00 40 5C 02 47 2A FF FF FE FF 40 01 05 00 00  // [.@\.G*....@....
    AA20: 47 A1 01 00 5C 02 01 00 FF FF FE FF 40 03 00 40  // G...\.......@..@
    AA30: 48 2A 09 05 40 01 00 00 00 75 05 40 00 00 00 00  // H*..@....u.@....
    AA40: 21 05 40 05 00 00 00 2D 05 40 02 00 00 00 6F 05  // !.@....-.@....o.
    AA50: 40 0A 00 00 00 5C 02 47 2A FF E3 FF FF 40 01 05  // @....\.G*....@..
    AA60: 00 00 47 A1 01 00 5C 02 01 00 FF E3 FF FF 40 5B  // ..G...\.......@[
    AA70: 7A 78 02 00 40 01 00 5D 2A 00 00 00 40 05 00 75  // zx..@..]*...@..u
    AA80: 2A 00 00 01 40 01 00 5E 2A 00 00 01 40 05 00 76  // *...@..^*...@..v
    AA90: 2A 00 00 04 40 01 00 61 2A 00 00 04 40 05 00 79  // *...@..a*...@..y
    AAA0: 2A 00 00 05 40 01 00 62 2A 00 00 05 40 05 00 7A  // *...@..b*...@..z
    AAB0: 2A 00 00 08 40 01 00 65 2A 00 00 0A 40 01 00 67  // *...@..e*...@..g
    AAC0: 2A 00 00 0C 40 01 00 69 2A 00 00 10 40 01 00 6B  // *...@..i*...@..k
    AAD0: 2A 00 00 14 40 01 00 6D 2A 00 00 15 40 01 00 6F  // *...@..m*...@..o
    AAE0: 2A 00 00 1C 40 01 00 71 2A 00 00 1E 40 01 00 73  // *...@..q*...@..s
    AAF0: 2A 00 00 08 40 05 00 7D 2A 00 00 0A 40 05 00 7F  // *...@..}*...@...
    AB00: 2A 00 00 0C 40 05 00 81 2A 00 00 10 40 05 00 83  // *...@...*...@...
    AB10: 2A 00 00 14 40 05 00 85 2A 00 00 15 40 05 00 87  // *...@...*...@...
    AB20: 2A 00 00 1C 40 05 00 89 2A 00 00 1E 40 05 00 8B  // *...@...*...@...
    AB30: 2A 00 00 32 40 01 00 49 2A 00 00 33 40 01 00 4A  // *..2@..I*..3@..J
    AB40: 2A 00 00 34 40 01 00 4B 2A 00 00 35 40 01 00 4C  // *..4@..K*..5@..L
    AB50: 2A 00 00 36 40 01 00 4D 2A 00 00 3A 40 01 00 50  // *..6@..M*..:@..P
    AB60: 2A 00 00 3B 40 01 00 51 2A 00 00 38 40 01 00 4E  // *..;@..Q*..8@..N
    AB70: 2A 00 00 39 40 01 00 4F 2A 00 00 00 00 00 00 31  // *..9@..O*......1
    AB80: A0 01 00 81 F0 2F FF 34 A0 01 00 81 F0 2F FF 04  // ...../.4...../..
    AB90: A0 01 00 0A E0 5F FE 05 A0 01 00 6A E6 5F FE 0D  // ....._.....j._..
    ABA0: A0 01 00 F0 E0 5F FE 13 A0 01 00 FB E0 5F FE 02  // ....._......._..
    ABB0: A0 01 00 A8 EA 5F FE 1B A0 01 00 09 E0 5F FE 03  // ....._......._..
    ABC0: A0 01 00 A8 EA 5F FE 06 A0 01 00 68 E6 5F FE 07  // ....._.....h._..
    ABD0: A0 01 00 68 E6 5F FE 08 A0 01 00 68 E6 5F FE 4A  // ...h._.....h._.J
    ABE0: A0 01 00 6B E6 5F FE 4B A0 01 00 6B E6 5F FE 4C  // ...k._.K...k._.L
    ABF0: A0 01 00 6B E6 5F FE 4F A0 01 00 CB EC 5F FE 50  // ...k._.O....._.P
    AC00: A0 01 00 CB EC 5F FE 51 A0 01 00 6B E6 5F FE 42  // ....._.Q...k._.B
    AC10: A0 01 00 A8 EA 5F FE 44 A0 01 00 0A E0 5F 0A 47  // ....._.D....._.G
    AC20: A0 01 00 6A E6 5F FE 48 A0 01 00 C8 EC 5F FE 49  // ...j._.H....._.I
    AC30: A0 01 00 C8 EC 5F FE 4E A0 01 00 68 E6 5F FE 5B  // ....._.N...h._.[
    AC40: A0 01 00 09 E0 5F FE 43 A0 01 00 A8 EA 5F FE 45  // ....._.C....._.E
    AC50: A0 01 00 FA E0 5F FE 46 A0 01 00 69 E6 5F FE 83  // ....._.F...i._..
    AC60: A0 01 00 70 60 60 60 48 A1 01 00 00 00 3E FF F2  // ...p```H.....>..
    AC70: A1 01 00 BF 3F 3F 00 F5 A1 01 00 01 00 00 00 F6  // ....??..........
    AC80: A1 01 00 02 20 00 80 F7 A1 01 00 01 00 00 00 F8  // .... ...........
    AC90: A1 01 00 02 20 00 80 00 A1 01 00 05 0A 54 51 01  // .... ........TQ.
    ACA0: A1 01 00 D5 55 55 55 02 A1 01 00 05 9A F0 C7 03  // ....UUU.........
    ACB0: A1 01 00 5F 55 55 55 EF A1 01 00 07 E0 0C E0 EC  // ..._UUU.........
    ACC0: A1 01 00 20 0F 11 00 F3 A1 01 00 01 00 00 00 82  // ... ............
    ACD0: A3 01 00 00 00 01 00 80 A3 01 00 C9 09 00 00 93  // ................
    ACE0: A3 01 00 00 08 01 00 00 00 00 00 00 7B 00 02 01  // ............{...
    ACF0: 00 00 37 00 00 3D 65 00 01 44 7A 00 56 00 40 03  // ..7..=e..Dz.V.@.
    AD00: 21 40 00 21 25 40 C4 03 0A 48 40 01 05 29 3A 00  // !@.!%@...H@..):.
    AD10: 01 00 00 5C 05 A1 3A CF FF FF FF 20 00 00 00 5C  // ...\..:.... ...\
    AD20: 05 B4 3A CF FF FF FF 20 00 00 00 56 00 40 03 21  // ..:.... ...V.@.!
    AD30: 40 00 21 0D 40 1B 01 03 0A 48 40 5C 05 5F 41 FC  // @.!.@....H@\._A.
    AD40: FF FF FF 00 00 00 08 56 00 40 03 21 40 00 21 25  // .......V.@.!@.!%
    AD50: 40 80 03 0A 48 40 5C 05 01 50 FF FC FF FF 00 03  // @...H@\..P......
    AD60: 00 00 3A 00 00 5B 5B 00 17 00 02 01 00 00 01 05  // ..:..[[.........
    AD70: 60 0F 00 00 00 F4 01 05 62 0F 00 00 00 00 5B 00  // `.......b.....[.
    AD80: 0A 00 02 01 00 00 37 00 00 5B CA 00 02 01 04 04  // ......7..[......
    AD90: 37 00 00 66 0C 03 0C 41 00 00 2D 0A 41 42 2D 0D  // 7..f...A..-.AB-.
    ADA0: 42 04 00 3D 24 00 06 00 44 31 00 2D 0D 42 08 00  // B..=$...D1.-.B..
    ADB0: 3E 0A 42 41 45 19 00 55 20 00 5B 56 00 43 03 24  // >.BAE..U .[V.C.$
    ADC0: 43 05 00 03 04 46 00 00 33 05 46 01 00 00 00 01  // C....F..3.F.....
    ADD0: 02 00 00 46 03 00 00 01 00 0D 02 01 00 44 2D 05  // ...F.........D-.
    ADE0: 46 02 00 00 00 01 02 00 00 46 03 24 43 04 00 4B  // F........F.$C..K
    ADF0: E5 00 01 49 AA 00 07 02 01 00 45 2D 05 46 01 00  // ...I......E-.F..
    AE00: 00 00 01 02 00 00 46 4A 02 01 00 44 44 90 00 03  // ......FJ...DD...
    AE10: 29 43 00 0E A2 00 44 43 98 00 03 29 43 00 08 A2  // )C....DC...)C...
    AE20: 00 45 33 05 46 03 00 00 00 01 02 00 00 46 01 02  // .E3.F........F..
    AE30: 01 00 00 5B 0D 02 01 00 44 01 04 00 00 00 00 3D  // ...[....D......=
    AE40: A5 00 01 44 C4 00 07 02 01 00 45 43 C9 00 0D 02  // ...D......EC....
    AE50: 01 00 44 5B 1D 05 01 07 0C 08 37 00 00 3D 25 01  // ..D[......7..=%.
    AE60: FF 44 F7 04 3D 25 01 17 46 F3 04 3D 25 01 02 47  // .D..=%..F..=%..G
    AE70: F3 04 3D 25 01 14 45 F7 04 3D 05 00 00 00 00 00  // ..=%..E..=......
    AE80: 44 C3 02 4B E5 01 30 44 3D 00 08 E5 01 CF 43 42  // D..K..0D=.....CB
    AE90: 00 5D E5 01 CF 10 66 1B 56 00 02 3D A5 01 02 49  // .]....f.V..=...I
    AEA0: 54 00 56 08 40 43 66 00 3D A5 01 03 49 61 00 56  // T.V.@Cf.=...Ia.V
    AEB0: 08 40 43 66 00 03 0C 40 18 00 3E 0D 40 00 00 44  // .@Cf...@..>.@..D
    AEC0: 75 00 03 0A 02 40 43 79 00 0E E5 01 80 4B E5 01  // u....@Cy.....K..
    AED0: 02 49 87 00 02 A9 02 02 55 28 02 66 FF 2D 0D 42  // .I......U(.f.-.B
    AEE0: 09 05 03 39 40 01 09 0D 40 30 00 1B 0D 40 04 21  // ...9@...@0...@.!
    AEF0: 0D 40 05 00 2D 0A 42 40 03 04 40 00 00 27 05 40  // .@..-.B@..@..'.@
    AF00: 10 27 00 00 02 A2 03 40 02 E4 03 04 00 56 00 00  // .'.....@.....V..
    AF10: 56 00 01 02 0D 03 40 01 02 65 01 01 20 05 00 0A  // V.....@..e.. ...
    AF20: 00 00 00 03 02 46 40 3D 05 00 80 8D 5B 00 47 EF  // .....F@=....[.G.
    AF30: 00 3D A5 03 64 45 E8 00 02 65 03 03 0E E5 01 08  // .=..dE...e......
    AF40: 55 28 01 4B E5 01 08 44 FA 00 1B 05 46 01 3E 05  // U(.K...D....F.>.
    AF50: 46 A0 2F C5 01 48 0F 01 2C 65 01 01 15 05 46 01  // F./..H..,e....F.
    AF60: 43 FA 00 14 2D 01 05 3D A5 01 00 44 30 01 4B E5  // C...-..=...D0.K.
    AF70: 01 80 49 30 01 3D A5 03 64 45 30 01 0E 25 03 01  // ..I0.=..dE0..%..
    AF80: 15 05 46 01 03 05 01 00 00 01 00 4B E5 01 80 44  // ..F........K...D
    AF90: 92 01 27 04 46 00 00 3E 05 41 00 00 00 00 44 A4  // ..'.F..>.A....D.
    AFA0: 01 03 04 40 00 00 03 02 00 41 27 02 40 41 03 02  // ...@.....A'.@A..
    AFB0: 40 00 3E 05 41 00 00 00 00 49 52 01 7C 05 00 00  // @.>.A....IR.|...
    AFC0: 00 01 00 7E 04 40 00 00 7C 04 40 00 00 7E 02 40  // ...~.@..|.@..~.@
    AFD0: 00 03 02 01 40 3E 05 01 33 F3 00 00 48 92 01 03  // ....@>..3...H...
    AFE0: 05 01 00 00 01 00 27 04 46 00 00 7C 02 01 41 7E  // ......'.F..|..A~
    AFF0: 04 40 00 00 03 0A 00 40 27 04 46 00 00 03 8A 00  // .@.....@'.F.....
    B000: 40 56 18 01 4B E5 01 80 49 2F 02 7C 02 02 00 7E  // @V..K...I/.|...~
    B010: 05 40 A0 86 01 00 03 01 41 03 09 05 41 03 00 00  // .@......A...A...
    B020: 00 6F 02 40 41 7C 05 40 4E 0C 00 00 7E 04 40 00  // .o.@A|.@N...~.@.
    B030: 00 27 05 40 05 00 00 00 3E 05 40 00 00 00 00 49  // .'.@....>.@....I
    B040: F2 01 03 25 40 01 03 8A 01 40 21 05 40 05 00 00  // ...%@....@!.@...
    B050: 00 7C 04 40 00 00 7E 05 40 4E 0C 00 00 03 01 41  // .|.@..~.@N.....A
    B060: 03 09 05 41 03 00 00 00 75 02 40 41 3D A5 01 00  // ...A....u.@A=...
    B070: 44 27 02 1B 05 40 01 2D 02 00 40 03 02 02 00 33  // D'...@.-..@....3
    B080: 02 02 40 66 FF 2D 0D 42 01 05 56 00 40 03 21 40  // ..@f.-.B..V.@.!@
    B090: 01 33 25 40 14 15 25 40 01 2D 0A 42 40 03 0C 48  // .3%@..%@.-.B@..H
    B0A0: 00 00 4A 65 0A 5E 10 44 5D 03 03 39 41 01 09 0D  // ..Je.^.D]..9A...
    B0B0: 41 30 00 1B 0D 41 04 3C 22 86 5E 41 49 A2 02 3C  // A0...A.<".^AI..<
    B0C0: 21 4B 5E 03 49 A2 02 3C 29 4D 5E 03 49 A2 02 03  // !K^.I..<)M^.I...
    B0D0: 20 41 87 5E 09 25 41 E0 3E 29 41 01 49 A2 02 4B  //  A.^.%A.>)A.I..K
    B0E0: E5 01 40 49 55 03 3C 02 48 5E 00 49 A2 02 3C 0A  // ..@IU.<.H^.I..<.
    B0F0: 4A 5E 01 44 A6 02 0E E5 01 01 3A 00 00 4B E5 01  // J^.D......:..K..
    B100: 01 44 CB 04 4B E5 01 02 49 C3 02 3D 25 02 03 46  // .D..K...I..=%..F
    B110: C3 02 55 28 02 52 23 56 00 40 03 21 40 01 33 25  // ..U(.R#V.@.!@.3%
    B120: 40 14 03 0A 48 40 07 25 60 01 FE 66 FF 2D 0D 42  // @...H@.%`..f.-.B
    B130: 01 05 56 00 40 03 21 40 01 33 25 40 14 15 25 40  // ..V.@.!@.3%@..%@
    B140: 01 2D 0A 42 40 03 0C 48 00 00 07 65 4B 5E FE 54  // .-.B@..H...eK^.T
    B150: 00 49 5E 54 00 4A 5E 07 65 0A 5E EF 4A 65 0A 5E  // .I^T.J^.e.^.Je.^
    B160: 20 49 08 03 07 65 1A 5E EF 4A 65 1A 5E 20 49 15  //  I...e.^.Je.^ I.
    B170: 03 3D 05 00 00 00 00 00 49 5D 03 4A A5 E9 5D 80  // .=......I].J..].
    B180: 44 52 03 56 00 41 5C 25 08 5E F8 06 51 02 4A 65  // DR.V.A\%.^..Q.Je
    B190: 08 5E 01 44 3A 03 2D A5 41 01 2D 0D 48 10 00 3E  // .^.D:.-.A.-.H..>
    B1A0: A5 41 04 45 32 03 43 F3 04 01 02 48 5E 00 43 87  // .A.E2.C....H^.C.
    B1B0: 04 01 05 03 5E 80 88 01 00 3D A5 01 00 49 7E 03  // ....^....=...I~.
    B1C0: 3D 05 00 E0 3B 66 00 45 7E 03 07 25 04 5E FE 43  // =...;f.E~..%.^.C
    B1D0: 9E 03 0D 25 04 5E 01 3D A5 01 02 49 9E 03 4B E5  // ...%.^.=...I..K.
    B1E0: 01 08 44 9E 03 01 05 DB 5E 80 88 01 00 0D 25 DC  // ..D.....^.....%.
    B1F0: 5E 01 0D 25 87 5E 01 03 39 40 01 09 0D 40 30 00  // ^..%.^..9@...@0.
    B200: 1B 0D 40 04 01 22 86 5E 40 0D 65 87 5E 80 5C 79  // ..@..".^@.e.^.\y
    B210: 87 5E FB 03 56 00 40 03 31 40 03 03 01 41 03 09  // .^..V.@.1@...A..
    B220: 05 41 03 00 00 00 75 02 40 41 03 05 41 A1 83 00  // .A....u.@A..A...
    B230: 00 3E 25 40 64 48 F9 03 03 05 41 24 83 00 00 3E  // .>%@dH....A$...>
    B240: 25 40 30 48 F9 03 03 05 41 A3 76 00 00 01 0A 4C  // %@0H....A.v....L
    B250: 5E 41 01 E2 4E 5E 40 0D 25 4E 5E 02 01 21 4B 5E  // ^A..N^@.%N^..!K^
    B260: 03 01 A5 4B 5E E8 01 02 48 5E 00 54 00 49 5E 01  // ...K^...H^.T.I^.
    B270: 02 4A 5E 01 4B E5 01 08 44 2F 04 07 65 87 5E FE  // .J^.K...D/..e.^.
    B280: 43 34 04 0D 65 87 5E 01 5C 29 87 5E 1F 01 01 8D  // C4..e.^.\).^....
    B290: 53 5E 20 03 01 29 4D 5E 03 07 65 87 5E 7F 5C 65  // S^ ..)M^..e.^.\e
    B2A0: 0A 5E E3 04 4A 65 0A 5E 20 49 50 04 0D 65 0A 5E  // .^..Je.^ IP..e.^
    B2B0: 10 4A 65 0A 5E 20 44 5D 04 4B E5 01 02 49 87 04  // .Je.^ D].K...I..
    B2C0: 5C 65 1A 5E E3 04 4A 65 1A 5E 20 49 72 04 0D 65  // \e.^..Je.^ Ir..e
    B2D0: 1A 5E 10 4A 65 1A 5E 20 44 7F 04 4B E5 01 80 49  // .^.Je.^ D..K...I
    B2E0: 9A 04 01 02 49 5E 02 0D 65 4B 5E 01 51 0A 0D 65  // ....I^..eK^.Q..e
    B2F0: 87 5E 40 51 0A 4A 65 87 5E 20 44 A1 04 07 65 87  // .^@Q.Je.^ D...e.
    B300: 5E BF 56 00 40 03 21 40 01 33 25 40 14 03 0A 48  // ^.V.@.!@.3%@...H
    B310: 40 0D 25 60 01 01 51 0A 4B E5 01 02 49 F3 04 3A  // @.%`..Q.K...I..:
    B320: 00 00 3D 25 02 03 46 F3 04 02 25 03 02 02 E1 03  // ..=%..F...%.....
    B330: 02 02 61 03 01 02 B9 03 01 08 A5 03 04 0E B1 03  // ..a.............
    B340: 02 02 01 02 00 52 2E 3A 00 00 5B 02 25 01 0B 43  // .....R.:..[.%..C
    B350: CB 04 7A 1C 00 00 00 D8 00 B0 01 88 02 40 42 0F  // ..z..........@B.
    B360: 00 04 00 53 07 00 04 00 53 07 00 00 40 42 0F 00  // ...S....S...@B..
    B370: 04 00 D4 02 02 01 00 04 37 00 00 42 29 00 63 02  // ........7..B).c.
    B380: 49 02 63 07 21 00 63 08 1B 00 5A 5A 5B 0D 25 C8  // I.c.!.c...ZZ[.%.
    B390: 39 02 5B 01 05 3B 01 30 02 12 00 01 05 30 01 80  // 9.[..;.0.....0..
    B3A0: BB 10 00 01 05 31 01 3C 00 01 08 01 8D 83 38 30  // .....1.<......80
    B3B0: 00 01 25 82 38 01 5C 65 D4 00 FC 02 5C 25 50 39  // ..%.8.\e....\%P9
    B3C0: 0F C0 01 25 32 01 00 01 05 4C 35 00 00 00 00 01  // ...%2....L5.....
    B3D0: 05 4A 35 00 00 00 00 01 05 50 35 00 00 00 00 01  // .J5......P5.....
    B3E0: 05 4E 35 00 00 00 00 01 05 54 35 00 00 00 00 01  // .N5......T5.....
    B3F0: 05 52 35 00 00 00 00 01 05 58 35 00 00 00 00 01  // .R5......X5.....
    B400: 05 56 35 00 00 00 00 01 05 6D 35 01 00 00 00 01  // .V5......m5.....
    B410: 05 DF 39 01 10 00 00 01 05 24 3A 00 1B 5D 05 01  // ..9......$:..]..
    B420: 05 76 3A 35 00 13 00 01 05 77 3A 36 11 00 00 01  // .v:5.....w:6....
    B430: 05 78 3A 41 E6 01 00 01 05 79 3A 00 00 00 00 01  // .x:A.....y:.....
    B440: 05 7A 3A 00 00 08 2C 01 05 7C 3A 02 04 00 00 01  // .z:...,..|:.....
    B450: 05 8C 3A 5E 4E 01 00 01 05 7A 3A 00 00 08 2C 01  // ..:^N....z:...,.
    B460: 05 7D 3A A4 01 00 00 01 05 7F 3A A4 01 00 00 01  // .}:.......:.....
    B470: 05 81 3A 00 02 00 00 01 05 82 3A 49 D2 00 00 01  // ..:.......:I....
    B480: 05 85 3A 20 00 00 00 01 05 86 3A 24 0D 00 00 01  // ..: ......:$....
    B490: 05 89 3A 00 00 00 00 01 05 8A 3A 00 00 00 00 01  // ..:.......:.....
    B4A0: 05 5C 3A 00 00 92 06 01 05 5D 3A AA 08 00 E0 01  // .\:......]:.....
    B4B0: 05 C9 39 FE 01 00 00 01 05 CA 39 1E 05 00 00 01  // ..9.......9.....
    B4C0: 05 CB 39 BA 04 00 00 01 05 CC 39 24 04 00 00 01  // ..9.......9$....
    B4D0: 05 CD 39 A2 08 00 00 01 05 CE 39 FE 01 00 00 01  // ..9.......9.....
    B4E0: 05 CF 39 1E 05 00 00 01 05 D0 39 BA 04 00 00 01  // ..9.......9.....
    B4F0: 05 D1 39 24 04 00 00 01 05 D2 39 A2 08 00 00 01  // ..9$......9.....
    B500: 05 D3 39 FE 01 00 00 01 05 D4 39 1E 05 00 00 01  // ..9.......9.....
    B510: 05 D5 39 BA 04 00 00 01 05 D6 39 24 04 00 00 01  // ..9.......9$....
    B520: 05 D7 39 A2 08 00 00 01 05 D8 39 FE 01 00 00 01  // ..9.......9.....
    B530: 05 D9 39 1E 05 00 00 01 05 DA 39 BA 04 00 00 01  // ..9.......9.....
    B540: 05 DB 39 24 04 00 00 01 05 DC 39 A2 08 00 00 0D  // ..9$......9.....
    B550: 25 C8 39 02 0D 25 52 41 01 01 25 F2 4A 00 01 25  // %.9..%RA..%.J..%
    B560: F0 4A 00 01 25 F1 4A 00 01 25 EF 4B 00 55 00 01  // .J..%.J..%.K.U..
    B570: 52 17 2C 25 01 01 3D 25 01 01 45 FE 01 55 00 01  // R.,%..=%..E..U..
    B580: 52 4E 01 05 7C 53 00 00 00 03 02 25 01 07 52 33  // RN..|S.....%..R3
    B590: 02 05 01 00 07 00 00 52 4D 2C 25 01 01 3D 25 01  // .......RM,%..=%.
    B5A0: 04 45 25 02 66 16 03 0C 41 04 00 4C 0D 41 02 00  // .E%.f...A..L.A..
    B5B0: 44 46 02 0D A5 4C 00 02 52 4B 5B 02 05 01 01 00  // DF...L..RK[.....
    B5C0: 00 00 52 06 01 05 00 00 17 A8 01 00 03 00 40 01  // ..R...........@.
    B5D0: 00 15 05 40 04 01 02 59 39 40 2D 01 40 01 01 02  // ...@...Y9@-.@...
    B5E0: 5A 39 40 01 05 53 39 00 F4 00 00 03 01 40 01 1B  // Z9@..S9......@..
    B5F0: 05 40 04 2D 05 40 FF F3 00 00 01 02 54 39 40 01  // .@.-.@......T9@.
    B600: 05 00 00 17 A8 01 00 01 00 55 39 01 00 01 05 64  // .........U9....d
    B610: 3A 00 00 40 0F 54 00 65 3A 03 01 40 01 15 05 40  // :..@.T.e:..@...@
    B620: 08 33 05 40 01 00 00 00 2D 05 40 00 00 40 0F 01  // .3.@....-.@..@..
    B630: 02 66 3A 40 54 00 67 3A 01 25 C9 00 F4 01 05 C4  // .f:@T.g:.%......
    B640: 00 00 00 00 00 5B 8C 00 02 01 00 04 66 FF 56 08  // .....[......f.V.
    B650: 47 2D 0D 42 68 00 03 21 47 00 09 25 47 F0 42 22  // G-.Bh..!G..%G.B"
    B660: 47 63 00 4F 00 63 60 4A 00 63 20 42 00 63 90 3A  // Gc.O.c`J.c B.c.:
    B670: 00 63 A0 32 00 5A 5A 5B 2D 0D 42 1E 00 43 4F 00  // .c.2.ZZ[-.B..CO.
    B680: 2D 0D 42 18 00 43 4F 00 2D 0D 42 10 00 43 4F 00  // -.B..CO.-.B..CO.
    B690: 2D 0D 42 08 00 03 21 47 00 09 25 47 07 2D 0A 42  // -.B...!G..%G.-.B
    B6A0: 47 2D 0A 42 47 03 0C 48 00 00 5B 7A 8C 00 00 00  // G-.BG..H..[z....
    B6B0: 80 00 00 01 80 01 00 00 00 01 00 02 00 03 00 00  // ................
    B6C0: D8 00 B0 01 88 02 00 00 C4 00 88 01 00 00 1B 01  // ................
    B6D0: 36 02 72 00 01 01 00 00 37 00 00 56 00 40 03 21  // 6.r.....7..V.@.!
    B6E0: 40 00 21 0D 40 1B 01 03 02 48 40 01 25 24 41 01  // @.!.@....H@.%$A.
    B6F0: 3D 65 00 02 49 4C 00 01 0D 35 41 01 00 54 00 33  // =e..IL...5A..T.3
    B700: 41 0D 25 26 41 01 01 05 25 41 11 00 00 00 07 A5  // A.%&A...%A......
    B710: 24 41 FE 01 05 27 41 11 01 11 01 43 6E 00 01 05  // $A...'A....Cn...
    B720: 29 41 00 00 00 01 01 05 2D 41 00 00 00 01 01 05  // )A......-A......
    B730: 27 41 11 01 11 01 54 00 25 41 01 0D 35 41 00 01  // 'A....T.%A..5A..
    B740: 3A 00 00 5B 3F 00 01 01 00 00 37 00 00 52 14 54  // :..[?.....7..R.T
    B750: 30 02 50 54 00 21 50 54 00 22 50 3C 69 02 50 00  // 0.PT.!PT."P<i.P.
    B760: 44 3B 00 01 69 02 50 00 3D 65 00 00 44 3B 00 4A  // D;..i.P.=e..D;.J
    B770: A5 01 50 01 44 3B 00 4A 25 02 50 01 44 33 00 3A  // ..P.D;.J%.P.D3.:
    B780: 00 00 5B 00 43 00 01 01 00 00 37 00 00 52 14 3D  // ..[.C.....7..R.=
    B790: 65 00 01 44 3A 00 0D 65 01 50 03 54 20 01 50 4A  // e..D:..e.P.T .PJ
    B7A0: A5 01 50 01 49 1B 00 54 20 0F 50 56 00 40 20 25  // ..P.I..T .PV.@ %
    B7B0: 00 01 03 0A 48 40 07 E5 E8 39 7F 43 3F 00 0D 25  // ....H@...9.C?..%
    B7C0: 01 50 01 3A 00 00 5B 00 CF 00 02 01 00 00 37 00  // .P.:..[.......7.
    B7D0: 00 42 29 00 63 00 1B 00 63 01 1B 00 63 02 AA 00  // .B).c...c...c...
    B7E0: 5A 5A 5B 66 FF 56 08 40 2D 0D 42 C3 00 03 21 40  // ZZ[f.V.@-.B...!@
    B7F0: 00 15 25 40 01 2D 0A 42 40 03 0C 48 00 00 3D 65  // ..%@.-.B@..H..=e
    B800: 00 00 44 72 00 0D 25 CC 00 01 3A 00 00 01 8D C0  // ..Dr..%...:.....
    B810: 00 00 02 51 02 01 05 C6 00 00 00 10 00 01 05 C8  // ...Q............
    B820: 00 00 00 50 00 01 0D C3 00 02 00 54 20 CA 00 01  // ...P.......T ...
    B830: 05 C2 00 00 01 00 00 43 1A 00 07 25 CC 00 FE 3A  // .......C...%...:
    B840: 00 00 0D 25 CA 00 01 01 25 C2 00 01 07 A5 C1 00  // ...%....%.......
    B850: FE 0D 25 D5 00 01 0D 65 D5 00 01 4A 65 D5 00 01  // ..%....e...Je...
    B860: 44 93 00 54 08 D5 00 54 00 C6 00 54 00 C8 00 43  // D..T...T...T...C
    B870: 1A 00 5C 65 D4 00 FC 02 01 A1 C0 00 00 2B A5 C0  // ..\e.........+..
    B880: 00 01 0D A5 C1 00 01 5B 7A 0C 00 00 00 02 00 2C  // .......[z......,
    B890: 00 2D 00 2E 00 2F 00 00 DA 01 03 01 00 00 37 00  // .-.../........7.
    B8A0: 00 03 05 46 10 27 00 00 3D A5 00 02 49 1C 00 02  // ...F.'..=...I...
    B8B0: 02 00 46 5B 03 05 40 16 6C 01 00 03 05 41 00 6C  // ..F[..@.l....A.l
    B8C0: 01 00 3D 25 00 00 44 54 00 03 05 40 16 6E 01 00  // ..=%..DT...@.n..
    B8D0: 03 05 41 00 6E 01 00 3D 25 00 01 44 54 00 03 05  // ..A.n..=%..DT...
    B8E0: 40 0C 7E 01 00 03 05 41 00 7E 01 00 01 02 00 00  // @.~....A.~......
    B8F0: 40 03 88 40 01 00 03 18 40 01 00 09 8D 40 FF 01  // @..@....@....@..
    B900: 3E 8D 40 00 00 49 AA 00 01 02 00 00 41 03 00 40  // >.@..I......A..@
    B910: 01 00 09 05 40 FF 01 00 00 3E 0D 40 00 00 49 93  // ....@....>.@..I.
    B920: 00 03 05 46 00 71 02 00 43 CD 00 21 02 40 46 03  // ...F.q..C..!.@F.
    B930: 00 41 01 00 09 05 41 00 1E 00 00 1B 05 41 09 43  // .A....A......A.C
    B940: C5 00 7C 02 40 46 7E 05 40 00 00 01 00 03 00 41  // ..|.@F~.@......A
    B950: 01 00 09 05 41 00 F0 00 00 1B 05 41 0C 75 02 40  // ....A......A.u.@
    B960: 41 03 02 46 40 3D A5 00 01 49 D9 00 02 02 00 46  // A..F@=...I.....F
    B970: 5B 3D E5 00 00 49 3B 01 56 00 40 03 29 40 00 21  // [=...I;.V.@.)@.!
    B980: 0D 40 0A 00 03 05 41 4B 6C 01 00 3D 25 00 00 44  // .@....AKl..=%..D
    B990: 0F 01 03 05 41 4B 6E 01 00 3D 25 00 01 44 0F 01  // ....AKn..=%..D..
    B9A0: 03 05 41 41 7E 01 00 2D 02 40 41 01 02 00 00 40  // ..AA~..-.@A....@
    B9B0: 03 00 41 01 00 09 05 41 00 00 F0 07 1B 05 41 14  // ..A....A......A.
    B9C0: 02 E2 00 41 3D E5 00 00 49 3B 01 02 05 00 10 27  // ...A=...I;.....'
    B9D0: 00 00 5B 56 00 40 03 39 40 00 55 38 00 66 FF 2D  // ..[V.@.9@.U8.f.-
    B9E0: 0D 42 B2 01 3E 0C 40 02 00 47 5C 01 2D 0D 42 08  // .B..>.@..G\.-.B.
    B9F0: 00 43 4C 01 33 0C 40 04 00 21 0C 40 06 00 2D 0C  // .CL.3.@..!.@..-.
    BA00: 40 00 00 03 09 42 00 55 00 00 02 0A 00 40 7C 05  // @....B.U.....@|.
    BA10: 46 40 42 0F 00 7E 01 40 00 02 02 00 40 3E 25 42  // F@B..~.@....@>%B
    BA20: 00 49 AE 01 56 00 46 66 08 03 0C 46 0C 00 3E 0D  // .I..V.Ff...F..>.
    BA30: 46 00 00 44 AE 01 7C 02 40 46 7E 05 40 14 00 00  // F..D..|.@F~.@...
    BA40: 00 32 02 00 40 5B 5B 7A 28 00 FF FF 07 00 00 00  // .2..@[[z(.......
    BA50: 00 00 C8 00 3F 00 08 00 19 00 40 06 5F 00 40 00  // ....?.....@._.@.
    BA60: 32 00 80 0C 7E 00 60 00 64 00 00 32 7F 00 7F 00  // 2...~.`.d..2....
    BA70: 64 00 C6 00 02 03 04 00 37 00 00 56 00 46 56 00  // d.......7..V.FV.
    BA80: 00 03 21 00 00 55 20 00 3D 65 00 03 44 2C 00 3D  // ..!..U .=e..D,.=
    BA90: 65 00 0B 46 BB 00 02 29 00 00 32 25 00 08 0E 25  // e..F...)..2%...%
    BAA0: 00 60 52 14 5C 22 28 55 F8 00 02 22 00 00 52 14  // .`R.\"(U..."..R.
    BAB0: 03 08 41 3D 41 09 0D 41 03 00 66 FF 2D 0D 42 C2  // ..A=A..A..f.-.B.
    BAC0: 00 2D 0A 42 41 03 24 00 00 00 3D E2 00 00 48 A7  // .-.BA.$...=...H.
    BAD0: 00 3E 25 00 04 44 76 00 03 22 46 00 33 25 46 01  // .>%..Dv.."F.3%F.
    BAE0: 15 25 46 04 0F 25 46 01 33 39 00 00 3E 25 00 01  // .%F..%F.39..>%..
    BAF0: 44 93 00 3E 25 00 02 44 8C 00 03 25 46 21 03 65  // D..>%..D...%F!.e
    BB00: 00 2F 43 97 00 03 65 00 13 03 79 46 00 33 65 46  // ./C...e...yF.3eF
    BB10: 01 15 2D 46 03 0F 65 46 01 52 14 01 02 01 4D 46  // ..-F..eF.R....MF
    BB20: 01 52 00 4D 00 54 00 08 4D 54 00 FF 4C 3A 00 00  // .R.M.T..MT..L:..
    BB30: 5B 7A 04 00 03 02 01 04 CB 00 01 01 00 00 37 00  // [z............7.
    BB40: 00 3D 65 00 01 44 61 00 56 00 40 20 25 00 10 03  // .=e..Da.V.@ %...
    BB50: 0A 48 40 07 25 8D 4F FD 4A 25 8D 4F 04 49 20 00  // .H@.%.O.J%.O.I .
    BB60: 52 14 07 25 48 50 FE 4A 65 48 50 01 49 2F 00 03  // R..%HP.JeHP.I/..
    BB70: 21 40 00 21 0D 40 C4 00 03 0A 48 40 07 25 27 3A  // !@.!.@....H@.%':
    BB80: FE 56 00 40 03 21 40 00 21 0D 40 1B 01 03 0A 48  // .V.@.!@.!.@....H
    BB90: 40 07 25 FD 40 EF 43 C7 00 56 00 40 20 25 00 10  // @.%.@.C..V.@ %..
    BBA0: 03 0A 48 40 0D 25 8D 4F 02 4A 25 8D 4F 04 44 71  // ..H@.%.O.J%.O.Dq
    BBB0: 00 52 14 0D 25 48 50 01 4A 65 48 50 01 44 80 00  // .R..%HP.JeHP.D..
    BBC0: 56 00 40 03 21 40 00 21 0D 40 C4 00 03 0A 48 40  // V.@.!@.!.@....H@
    BBD0: 0D 25 27 3A 01 56 00 40 03 21 40 00 21 0D 40 1B  // .%':.V.@.!@.!.@.
    BBE0: 01 03 0A 48 40 0D 25 FD 40 10 56 00 40 03 21 40  // ...H@.%.@.V.@.!@
    BBF0: 00 21 0D 40 5A 00 03 0A 48 40 0D 25 4C 4D 01 3A  // .!.@Z...H@.%LM.:
    BC00: 00 00 5B 00 51 01 01 04 00 08 37 00 00 3D 65 02  // ..[.Q.....7..=e.
    BC10: 01 49 1A 01 4B A5 02 03 49 2A 00 52 25 02 05 00  // .I..K...I*.R%...
    BC20: 00 00 00 00 02 05 01 00 05 02 00 43 2F 00 55 28  // ...........C/.U(
    BC30: 02 52 25 0E 25 02 90 52 14 08 25 02 07 0D 05 27  // .R%.%..R..%....'
    BC40: 3A 11 11 01 00 5C 25 26 3A 0B 01 03 21 41 02 15  // :....\%&:...!A..
    BC50: 25 41 04 0D 22 26 3A 41 0D 65 29 3A 01 5C 25 4E  // %A.."&:A.e):.\%N
    BC60: 3A FD 01 01 0D 3E 3A F4 00 01 0D 42 3A F4 00 4B  // :....>:....B:..K
    BC70: A5 02 03 49 85 00 01 05 3D 3A 00 00 10 00 01 05  // ...I....=:......
    BC80: 41 3A 00 00 50 00 43 95 00 01 05 3D 3A 00 00 00  // A:..P.C....=:...
    BC90: 00 01 05 41 3A 00 00 00 00 01 0D 1B 3A 80 00 01  // ...A:.......:...
    BCA0: 0D 24 3A 00 03 01 0D 7C 3A 01 03 01 05 7A 3A 00  // .$:....|:....z:.
    BCB0: 00 08 28 01 05 7B 3A 00 00 08 00 01 E5 5E 3A 08  // ..(..{:......^:.
    BCC0: 01 E5 5D 3A E0 54 00 1C 3A 01 19 1D 3A 00 01 89  // ..]:.T..:...:...
    BCD0: 1D 3A 00 01 19 21 3A 00 01 89 21 3A 00 54 08 19  // .:...!:...!:.T..
    BCE0: 3A 66 FF 2D 0D 42 42 01 03 0C 40 00 00 3E 0D 40  // :f.-.BB...@..>.@
    BCF0: FF FF 44 01 01 3D 8C 01 00 00 44 01 01 2D 0D 42  // ..D..=....D..-.B
    BD00: 03 00 43 E4 00 01 24 19 3A 02 00 01 09 3B 3A 01  // ..C...$.:....;:.
    BD10: 07 25 26 3A FE 07 25 4E 3A FE 3A 00 00 5B 0E 25  // .%&:..%N:.:..[.%
    BD20: 02 90 52 14 3D 65 02 00 49 2F 01 0D 25 26 3A 01  // ..R.=e..I/..%&:.
    BD30: 43 3B 01 3D 65 02 10 44 3B 01 01 09 3B 3A 01 3A  // C;.=e..D;...;:.:
    BD40: 00 00 5B 7A 0F 00 01 00 01 01 01 03 01 05 02 02  // ..[z............
    BD50: 00 08 FF FF 08 00 42 00 01 01 00 00 37 00 00 52  // ......B.....7..R
    BD60: 14 3D 65 00 01 44 21 00 54 20 4D 50 4A 65 4D 50  // .=e..D!.T MPJeMP
    BD70: 01 49 16 00 43 3E 00 5C 4D 1B 50 FE FF 00 01 4A  // .I..C>.\M.P....J
    BD80: A5 01 50 01 44 3E 00 0D 25 4D 50 01 4A 65 4D 50  // ..P.D>..%MP.JeMP
    BD90: 01 44 36 00 3A 00 00 5B 17 00 01 03 00 00 37 00  // .D6.:..[......7.
    BDA0: 00 0E 25 00 A0 52 14 54 00 5F 41 3A 00 00 5B 00  // ..%..R.T._A:..[.
    BDB0: C6 01 01 01 00 18 56 00 40 03 21 40 05 21 0D 40  // ......V.@.!@.!.@
    BDC0: 80 00 03 0A 48 40 37 00 00 01 0D 49 50 0D 00 3D  // ....H@7....IP..=
    BDD0: 8D 01 0D 00 46 2C 00 01 19 49 50 01 01 8D 4A 50  // ....F,...IP...JP
    BDE0: 40 01 01 0D 4B 50 2C 01 03 09 41 00 2D 19 41 00  // @...KP,...A.-.A.
    BDF0: 03 8A 41 41 2D 8D 41 01 00 1B 1D 41 02 01 1A 4A  // ..AA-.A....A...J
    BE00: 50 41 33 0D 41 01 00 01 0A EA 4F 41 54 08 EC 4F  // PA3.A.....OAT..O
    BE10: 01 99 EC 4F 02 03 19 41 00 33 09 41 02 56 18 41  // ...O...A.3.A.V.A
    BE20: 03 B1 41 04 33 1A 41 41 01 8A EB 4F 41 03 19 41  // ..A.3.AA...OA..A
    BE30: 00 33 09 41 02 2D 1A 41 41 2D 09 41 00 4B 25 04  // .3.A.-.AA-.A.K%.
    BE40: 10 44 98 00 2D 09 41 00 01 0A EB 4F 41 03 21 41  // .D..-.A....OA.!A
    BE50: 04 09 25 41 02 1B 25 41 01 01 22 ED 4F 41 03 09  // ..%A..%A..".OA..
    BE60: 41 01 2D 19 41 01 33 0D 41 01 00 01 0A EF 4F 41  // A.-.A.3.A.....OA
    BE70: 54 08 F7 4F 01 99 F7 4F 03 03 19 41 01 33 09 41  // T..O...O...A.3.A
    BE80: 03 56 18 41 03 B9 41 04 33 1A 41 41 01 8A F6 4F  // .V.A..A.3.AA...O
    BE90: 41 03 19 41 01 33 09 41 03 2D 1A 41 41 2D 09 41  // A..A.3.A.-.AA-.A
    BEA0: 01 4B 25 04 20 44 FC 00 2D 09 41 01 01 0A F6 4F  // .K%. D..-.A....O
    BEB0: 41 03 21 41 04 09 25 41 04 1B 25 41 02 01 22 F8  // A.!A..%A..%A..".
    BEC0: 4F 41 3D 65 05 00 44 21 01 07 65 01 50 EF 43 26  // OA=e..D!..e.P.C&
    BED0: 01 0D 65 01 50 10 03 00 46 EB 4F 02 00 02 F6 4F  // ..e.P...F.O....O
    BEE0: 56 00 40 03 21 40 05 21 0D 40 01 00 03 0A 48 40  // V.@.!@.!.@....H@
    BEF0: 56 00 40 03 09 40 02 3D 65 05 00 49 53 01 33 0D  // V.@..@.=e..IS.3.
    BF00: 40 02 00 15 05 40 0F 56 00 41 3D 8D 02 0D 00 48  // @....@.V.A=....H
    BF10: 6B 01 03 0D 41 0D 00 33 19 41 02 0F 02 40 41 0F  // k...A..3.A...@A.
    BF20: E5 40 80 01 02 E8 39 40 56 00 40 03 21 40 05 21  // .@....9@V.@.!@.!
    BF30: 0D 40 1B 01 03 0A 48 40 01 09 3B 41 00 01 89 3B  // .@....H@..;A...;
    BF40: 41 01 01 09 3C 41 00 01 89 3C 41 01 01 02 38 41  // A...<A...<A...8A
    BF50: 46 01 01 39 41 02 54 00 36 41 01 31 36 41 04 01  // F..9A.T.6A.16A..
    BF60: B1 36 41 04 54 00 37 41 01 39 37 41 04 01 B9 37  // .6A.T.7A.97A...7
    BF70: 41 04 3A 00 00 5B 0A 00 02 03 08 00 37 00 00 5B  // A.:..[......7..[
    BF80: 21 02 01 01 00 00 37 00 00 0D 25 78 53 08 07 25  // !.....7...%xS..%
    BF90: 9E 53 FE 56 00 41 03 39 41 01 09 25 41 0F 03 0A  // .S.V.A.9A..%A...
    BFA0: 40 42 66 FF 2D 0D 42 11 02 15 25 41 02 2D 0A 42  // @Bf.-.B...%A.-.B
    BFB0: 41 03 0C 41 00 00 01 02 00 00 41 07 A5 01 00 FE  // A..A......A.....
    BFC0: 54 08 01 00 01 0C 7F 53 02 00 03 0A 42 40 03 05  // T......S....B@..
    BFD0: 40 C0 5D 00 00 56 00 41 03 21 41 00 27 02 40 41  // @.]..V.A.!A.'.@A
    BFE0: 01 8A 7B 53 40 01 25 7B 53 02 0D 25 79 53 02 01  // ..{S@.%{S..%yS..
    BFF0: A9 7D 53 01 4B 25 01 01 49 7F 00 54 30 7D 53 01  // .}S.K%..I..T0}S.
    C000: 0D 7D 53 00 31 2B A5 7D 53 01 4B 25 01 02 44 96  // .}S.1+.}S.K%..D.
    C010: 00 2B A5 7D 53 01 56 00 41 03 71 41 01 0F E5 41  // .+.}S.V.A.qA...A
    C020: 80 01 02 7E 53 41 03 69 41 00 2D A5 41 01 01 02  // ...~SA.iA.-.A...
    C030: 7E 53 41 4B 25 01 02 44 C6 00 56 28 41 2D A5 41  // ~SAK%..D..V(A-.A
    C040: 01 01 02 7E 53 41 4B 25 01 01 44 E7 00 03 71 41  // ...~SAK%..D...qA
    C050: 00 2D A5 41 01 01 02 7E 53 41 03 79 41 00 2D A5  // .-.A...~SA.yA.-.
    C060: 41 01 01 02 7E 53 41 0D 25 78 53 01 03 A5 41 01  // A...~SA.%xS...A.
    C070: 43 BA 01 03 29 40 01 03 65 40 01 03 99 40 00 56  // C...)@..e@...@.V
    C080: 00 41 03 71 41 01 0F 65 41 01 0F E5 41 80 01 02  // .A.qA..eA...A...
    C090: 7E 53 41 01 A5 7D 53 04 3D 65 01 04 47 28 01 01  // ~SA..}S.=e..G(..
    C0A0: 0D 7D 53 01 13 43 57 01 01 A2 7D 53 40 01 0D 7D  // .}S..CW...}S@..}
    C0B0: 53 01 31 43 57 01 07 65 7D 53 EF 01 A5 7D 53 03  // S.1CW..e}S...}S.
    C0C0: 3E 25 40 04 46 57 01 01 A2 7D 53 40 31 A5 7D 53  // >%@.FW...}S@1.}S
    C0D0: 01 5C 65 7D 53 FD 20 0D 25 78 53 01 03 A5 41 00  // .\e}S. .%xS...A.
    C0E0: 43 BA 01 03 05 41 01 00 00 80 03 AA 41 40 01 02  // C....A......A@..
    C0F0: 7E 53 41 3D 65 01 01 49 82 01 02 A8 00 7E 53 43  // ~SA=e..I.....~SC
    C100: F9 01 56 00 41 03 1A 41 40 3B 02 41 03 28 41 7E  // ..V.A..A@;.A.(A~
    C110: 53 03 68 41 7E 53 03 A8 41 7E 53 03 E8 41 7E 53  // S.hA~S..A~S..A~S
    C120: 04 02 00 41 56 28 40 2D 8D 40 04 00 3E 25 40 04  // ...AV(@-.@..>%@.
    C130: 47 F9 01 33 25 40 04 43 36 01 02 65 00 02 03 0D  // G..3%@.C6..e....
    C140: 41 64 00 33 0D 41 01 00 3E 0D 41 00 00 44 F9 01  // Ad.3.A..>.A..D..
    C150: 51 64 4A 25 7A 53 10 44 C3 01 4A 65 7A 53 06 49  // QdJ%zS.D..JezS.I
    C160: F9 01 02 65 00 01 0D 25 79 53 02 3E A5 41 00 44  // ...e...%yS.>.A.D
    C170: 63 01 4B 25 01 01 44 F3 00 0D 25 79 53 02 01 25  // c.K%..D...%yS..%
    C180: 78 53 02 51 01 54 00 78 53 54 00 7F 53 5B 7A 10  // xS.Q.T.xST..S[z.
    C190: 00 90 5D 01 00 94 5D 03 02 98 5D 05 04 9C 5D 42  // ..]...]...]...]B
    C1A0: 41 00 46 00 02 02 00 04 37 00 00 55 30 00 32 25  // A.F.....7..U0.2%
    C1B0: 00 01 20 25 00 08 56 08 48 03 22 48 40 0D A5 D5  // .. %..V.H."H@...
    C1C0: 53 01 02 A0 00 D4 53 08 A5 00 03 4A 25 D4 53 02  // S.....S....J%.S.
    C1D0: 44 3C 00 5C 0D D5 53 FF FE 01 00 43 42 00 0D 0D  // D<.\..S....CB...
    C1E0: D5 53 01 01 3A 00 00 5B 3A 01 01 08 08 00 03 01  // .S..:..[:.......
    C1F0: 00 00 3D E5 00 01 44 33 00 3D E5 00 02 44 33 00  // ..=...D3.=...D3.
    C200: 02 05 00 00 00 01 00 52 29 20 05 00 64 00 00 00  // .......R) ..d...
    C210: 03 02 46 40 02 02 00 00 43 93 00 02 05 00 01 00  // ..F@....C.......
    C220: 02 00 52 29 03 01 01 00 02 02 00 00 03 01 46 00  // ..R)..........F.
    C230: 56 38 46 03 05 40 80 C3 C9 01 27 02 40 46 2D 05  // V8F..@....'.@F-.
    C240: 40 31 00 00 00 27 05 40 32 00 00 00 21 05 40 32  // @1...'.@2...!.@2
    C250: 00 00 00 21 02 46 40 03 02 46 40 55 00 03 27 05  // ...!.F@..F@U..'.
    C260: 46 19 00 00 00 7C 05 40 00 40 00 00 7E 02 40 01  // F....|.@.@..~.@.
    C270: 02 8A 01 40 02 1A 01 40 55 00 02 55 38 00 03 05  // ...@...@U..U8...
    C280: 40 00 32 00 00 3D 05 00 00 00 00 00 44 D1 00 03  // @.2..=......D...
    C290: 02 40 46 27 01 40 00 3E 05 40 9C 18 00 00 47 C0  // .@F'.@.>.@....G.
    C2A0: 00 03 05 40 00 32 00 00 3E 05 40 C8 00 00 00 46  // ...@.2..>.@....F
    C2B0: D1 00 03 05 40 C8 00 00 00 66 FF 2D 0D 42 1A 01  // ....@....f.-.B..
    C2C0: 3E 0C 40 02 00 47 E8 00 2D 0D 42 08 00 43 D8 00  // >.@..G..-.B..C..
    C2D0: 33 0C 40 00 00 27 0C 40 06 00 2D 0C 40 04 00 02  // 3.@..'.@..-.@...
    C2E0: E2 00 40 33 0C 40 04 00 21 0C 40 06 00 2D 0C 40  // ..@3.@..!.@..-.@
    C2F0: 00 00 27 02 46 40 02 0A 00 40 02 B2 00 40 5B 7A  // ..'.F@...@...@[z
    C300: 20 00 C8 00 40 06 08 00 19 00 40 06 80 0C 40 00  //  ...@.....@...@.
    C310: 32 00 80 0C 38 18 60 00 64 00 00 32 00 32 7F 00  // 2...8.`.d..2.2..
    C320: 64 00 07 00 02 01 00 00 5B 00 3B 03 01 05 00 00  // d.......[.;.....
    C330: 37 00 00 0E 25 00 60 52 14 08 25 00 0F 42 29 00  // 7...%.`R..%..B).
    C340: 63 0F 53 00 63 11 0C 02 63 12 7D 02 63 01 D5 02  // c.S.c...c.}.c...
    C350: 63 00 21 03 63 08 D6 01 63 09 B7 01 63 0A BE 01  // c.!.c...c...c...
    C360: 63 13 C6 01 63 14 CE 01 63 0B DE 01 63 0C C5 02  // c...c...c...c...
    C370: 63 0D E6 01 63 10 FF 01 5A 5A 43 B3 01 54 00 9A  // c...c...ZZC..T..
    C380: 55 01 0D 2B 55 1F 00 3D A5 00 00 44 72 00 3D A5  // U..+U..=...Dr.=.
    C390: 00 02 44 A1 01 3D A5 00 05 49 A9 01 54 00 C9 55  // ..D..=...I..T..U
    C3A0: 3D 25 02 00 49 81 00 02 25 02 02 32 25 02 01 01  // =%..I...%..2%...
    C3B0: E1 C9 55 02 4A 25 CC 55 01 49 D8 00 7B 05 01 00  // ..U.J%.U.I..{...
    C3C0: 80 00 00 7E 05 40 8C 0A 00 00 56 00 46 03 29 46  // ...~.@....V.F.)F
    C3D0: 02 27 02 40 46 07 65 D0 55 FE 01 05 D1 55 00 80  // .'.@F.e.U....U..
    C3E0: 00 00 01 02 D2 55 40 0D E5 D3 55 10 0D 65 28 55  // .....U@...U..e(U
    C3F0: 04 03 21 40 02 15 25 40 05 01 E2 CA 55 40 54 20  // ..!@..%@....U@T 
    C400: CE 55 02 A0 02 28 55 03 0A 46 48 08 A5 02 07 56  // .U...(U..FH....V
    C410: 00 40 03 31 40 02 21 0D 40 80 00 03 8A 46 40 03  // .@.1@.!.@....F@.
    C420: 0A 48 40 03 88 40 EA 4F 03 08 40 EF 4F 2D 05 40  // .H@..@.O..@.O-.@
    C430: 01 00 01 00 03 98 41 EB 4F 03 18 41 F6 4F 03 0A  // ......A.O..A.O..
    C440: 48 46 3C 02 0C 56 40 44 B3 01 01 02 0C 56 40 01  // HF<..V@D.....V@.
    C450: 02 0D 56 41 03 1A 48 46 03 00 40 EB 4F 33 1A 40  // ..VA..HF..@.O3.@
    C460: 40 33 08 40 36 41 33 08 40 36 41 03 00 41 F6 4F  // @3.@6A3.@6A..A.O
    C470: 33 1A 41 41 33 08 41 37 41 33 08 41 37 41 03 0A  // 3.AA3.A7A3.A7A..
    C480: 48 46 01 0A 0F 56 41 01 8A 0F 56 40 03 1A 48 46  // HF...VA...V@..HF
    C490: 03 00 40 EC 4F 33 8A 40 40 03 00 41 F7 4F 33 8A  // ..@.O3.@@..A.O3.
    C4A0: 41 41 4A 25 ED 4F 01 44 84 01 0F E5 40 80 4A 25  // AAJ%.O.D....@.J%
    C4B0: F8 4F 01 44 90 01 0F E5 41 80 03 0A 48 46 01 1A  // .O.D....A...HF..
    C4C0: 0E 56 41 01 9A 0E 56 40 43 B3 01 01 05 9A 55 00  // .VA...V@C.....U.
    C4D0: 00 00 00 07 E5 28 55 2F 0D 65 28 55 04 3A 00 00  // .....(U/.e(U.:..
    C4E0: 5B 54 20 D8 55 43 B3 01 01 25 D8 55 01 43 B3 01  // [T .UC...%.U.C..
    C4F0: 01 25 D8 55 02 43 B3 01 01 25 D8 55 03 43 B3 01  // .%.U.C...%.U.C..
    C500: 07 25 C8 55 EF 43 B3 01 0D 25 C8 55 10 43 B3 01  // .%.U.C...%.U.C..
    C510: 0D 65 D0 55 01 51 0A 07 25 CD 55 FE 51 0A 01 0D  // .e.U.Q..%.U.Q...
    C520: CC 55 01 02 51 C8 43 B3 01 0D 25 DE 55 10 01 31  // .U..Q.C...%.U..1
    C530: CF 55 00 43 B3 01 01 69 6F 55 02 3D A5 00 03 49  // .U.C...ioU.=...I
    C540: 28 02 4A 25 35 55 10 49 28 02 01 A5 6F 55 02 43  // (.J%5U.I(...oU.C
    C550: 2D 02 01 B1 6F 55 00 3D 25 02 00 44 42 02 32 25  // -...oU.=%..DB.2%
    C560: 02 01 14 25 02 04 5C E1 6F 55 8F 02 3D E5 00 04  // ...%..\.oU..=...
    C570: 47 51 02 0D 25 6F 55 01 43 56 02 07 25 6F 55 FE  // GQ..%oU.CV..%oU.
    C580: 3D A5 00 05 44 64 02 3D A5 00 00 49 75 02 02 A5  // =...Dd.=...Iu...
    C590: 00 00 03 39 40 00 33 25 40 01 01 22 CB 55 40 02  // ...9@.3%@..".U@.
    C5A0: E0 02 70 55 43 B3 01 02 E0 02 70 55 4B E5 02 01  // ..pUC.....pUK...
    C5B0: 44 B3 01 02 B0 00 6F 55 02 E5 00 04 4A 25 6F 55  // D.....oU....J%oU
    C5C0: 01 44 9E 02 02 E5 00 08 3D A5 00 02 44 AC 02 3D  // .D......=...D..=
    C5D0: A5 00 03 49 B5 02 54 00 70 55 50 02 43 B3 01 02  // ...I..T.pUP.C...
    C5E0: A5 00 00 03 31 43 00 4A 62 6F 55 44 44 B3 01 54  // ....1C.JboUDD..T
    C5F0: 08 CC 55 51 C8 0D 25 CD 55 01 51 32 43 B3 01 0D  // ..UQ..%.U.Q2C...
    C600: 25 70 55 01 3D A5 00 00 44 EA 02 01 0D A1 55 0F  // %pU.=...D.....U.
    C610: 01 43 FB 02 03 39 43 00 03 02 40 44 33 25 40 01  // .C...9C...@D3%@.
    C620: 01 0A A1 55 40 3A 00 00 20 25 00 02 03 22 43 40  // ...U@:.. %..."C@
    C630: 03 22 40 44 15 25 40 01 0D 22 5E 5D 40 51 64 69  // ."@D.%@.."^]@Qdi
    C640: 25 40 FF 07 22 5E 5D 40 43 B3 01 54 00 A1 55 07  // %@.."^]@C..T..U.
    C650: 25 70 55 FE 07 0D 6F 55 FE 80 54 20 C8 55 54 20  // %pU...oU..T .UT 
    C660: D8 55 43 B3 01 00 46 01 01 06 00 00 37 00 00 42  // .UC...F.....7..B
    C670: 29 00 63 07 24 01 63 01 25 00 63 00 C0 00 63 0B  // ).c.$.c.%.c...c.
    C680: 27 01 63 04 2C 01 5A 5A 43 3F 01 02 65 00 11 52  // '.c.,.ZZC?..e..R
    C690: 04 4B E5 02 01 49 20 01 02 65 00 0A 55 08 02 52  // .K...I ..e..U..R
    C6A0: 4D 3D E5 00 04 47 50 00 68 25 00 01 02 25 02 01  // M=...GP.h%...%..
    C6B0: 52 4D 68 25 00 01 3D A5 00 00 49 82 00 20 05 01  // RMh%..=...I.. ..
    C6C0: 64 00 00 00 02 05 01 14 1E 00 02 2C 21 01 00 02  // d..........,!...
    C6D0: 01 02 00 02 02 00 40 52 0C 26 05 00 64 00 00 00  // ......@R.&..d...
    C6E0: 02 02 01 40 02 01 00 02 02 65 00 01 55 08 02 52  // ...@.....e..U..R
    C6F0: 4D 3D E5 00 04 47 A0 00 68 25 00 01 02 25 02 01  // M=...G..h%...%..
    C700: 52 4D 68 25 00 01 51 05 02 65 00 01 52 04 51 0A  // RMh%..Q..e..R.Q.
    C710: 02 65 00 09 52 4D 3D E5 00 04 47 20 01 68 25 00  // .e..RM=...G .h%.
    C720: 01 52 4D 43 20 01 02 65 00 12 52 04 4B E5 02 01  // .RMC ..e..R.K...
    C730: 44 20 01 02 65 00 08 52 4D 3D E5 00 04 47 E4 00  // D ..e..RM=...G..
    C740: 68 25 00 01 52 4D 68 25 00 01 02 65 00 00 52 04  // h%..RMh%...e..R.
    C750: 02 65 00 00 52 4D 3D E5 00 04 47 01 01 68 25 00  // .e..RM=...G..h%.
    C760: 01 52 4D 68 25 00 01 3D A5 00 00 49 20 01 02 01  // .RMh%..=...I ...
    C770: 02 00 02 05 01 14 00 00 00 2C 21 01 00 55 00 00  // .........,!..U..
    C780: 52 0C 02 01 00 02 3A 00 00 5B 43 20 01 52 4D 43  // R.....:..[C .RMC
    C790: 20 01 66 06 02 29 00 00 02 68 00 4E 00 02 8C 00  //  .f..)...h.N....
    C7A0: 20 00 52 33 5B 02 29 00 00 52 33 5B 8B 03 02 01  //  .R3[.)..R3[....
    C7B0: 00 00 37 00 00 0E 25 00 20 52 14 08 25 00 0F 42  // ..7...%. R..%..B
    C7C0: 29 00 63 07 35 00 63 0A 3D 00 63 01 33 01 63 00  // ).c.5.c.=.c.3.c.
    C7D0: 8D 01 63 09 CD 01 63 08 02 02 63 0B 1A 02 5A 5A  // ..c...c...c...ZZ
    C7E0: 5B 0D 65 EC 5D 08 43 87 03 03 0A 46 48 66 07 2D  // [.e.].C....FHf.-
    C7F0: 0C 42 08 00 56 00 40 20 25 00 05 2D 0A 42 40 20  // .B..V.@ %..-.B@ 
    C800: 25 00 02 03 0A 48 40 01 04 2E 5D 00 00 01 64 2D  // %....H@...]...d-
    C810: 5D 04 00 07 E5 2D 5D FC 07 A5 2D 5D 8F 03 0A 48  // ]....-]...-]...H
    C820: 46 56 00 41 5C FA FB 5D FC 41 3D A5 00 00 49 A7  // FV.A\..].A=...I.
    C830: 00 07 A5 E9 5D 7F 66 07 2D 0C 42 06 00 2D 0D 42  // ....].f.-.B..-.B
    C840: 06 00 56 00 41 3D A5 02 14 49 23 03 03 25 41 20  // ..V.A=...I#..%A 
    C850: 43 23 03 0D A5 E9 5D 80 66 1E 2D 0D 42 C4 00 3D  // C#....].f.-.B..=
    C860: A5 00 02 44 CE 00 2D 0D 42 0C 00 3D 05 01 40 9C  // ...D..-.B..=..@.
    C870: 00 00 47 CE 00 2D 0D 42 0C 00 03 21 43 00 03 E2  // ..G..-.B...!C...
    C880: 41 44 4C E4 41 05 00 49 21 01 66 07 2D 0C 42 04  // ADL.A..I!.f.-.B.
    C890: 00 2D 0D 42 02 00 03 04 40 00 00 3E 05 40 00 00  // .-.B....@..>.@..
    C8A0: 00 00 44 87 03 03 21 43 00 03 E2 41 44 4C E4 41  // ..D...!C...ADL.A
    C8B0: 05 00 44 19 01 3D A4 00 04 00 49 19 01 3D 04 01  // ..D..=....I..=..
    C8C0: 00 00 47 21 01 2D 0D 42 0C 00 43 EA 00 03 04 40  // ..G!.-.B..C....@
    C8D0: 06 00 03 24 41 0A 00 03 64 41 0B 00 43 2C 03 07  // ...$A...dA..C,..
    C8E0: 65 EC 5D F7 03 0A 46 48 56 00 41 3D E5 00 04 47  // e.]...FHV.A=...G
    C8F0: 4E 01 07 25 0A 5E F9 43 54 01 5C 25 0A 5E F9 02  // N..%.^.CT.\%.^..
    C900: 4A 65 08 5E 01 44 54 01 07 25 08 5E F8 4A 65 08  // Je.^.DT..%.^.Je.
    C910: 5E 01 44 61 01 2D E5 41 01 2D 0D 48 10 00 3E E5  // ^.Da.-.A.-.H..>.
    C920: 41 04 45 3F 01 03 0A 48 46 0D 25 F9 5D 02 4A 25  // A.E?...HF.%.].J%
    C930: F9 5D 04 44 82 01 43 87 03 07 25 F9 5D FD 4A 25  // .].D..C...%.].J%
    C940: F9 5D 04 49 92 01 0D 65 EC 5D 08 56 00 41 4A 65  // .].I...e.].V.AJe
    C950: 08 5E 01 44 A2 01 5C 25 08 5E F8 04 51 02 4A 65  // .^.D..\%.^..Q.Je
    C960: 08 5E 01 44 B2 01 2D A5 41 01 2D 0D 48 10 00 3E  // .^.D..-.A.-.H..>
    C970: A5 41 04 45 A2 01 43 87 03 03 0A 46 48 56 08 48  // .A.E..C....FHV.H
    C980: 20 25 00 02 03 22 48 40 0D 25 2D 5D 01 51 64 07  //  %..."H@.%-].Qd.
    C990: 25 2D 5D FE 0D E5 2E 5D 10 03 0A 48 46 0D A5 FB  // %-]....]...HF...
    C9A0: 5D 01 51 14 0D 25 FB 5D 01 51 14 43 87 03 07 A5  // ].Q..%.].Q.C....
    C9B0: FB 5D FE 56 00 40 20 25 00 02 03 0A 48 40 07 E5  // .].V.@ %....H@..
    C9C0: 2E 5D EF 43 87 03 08 A5 00 1B 66 1E 2D 0D 42 C0  // .].C......f.-.B.
    C9D0: 02 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C A4  // ..!C...FD..F..L.
    C9E0: 46 00 00 49 89 02 66 1E 2D 0D 42 E8 00 3D 05 01  // F..I..f.-.B..=..
    C9F0: 48 3F 00 00 47 74 02 66 1E 2D 0D 42 50 02 3D 05  // H?..Gt.f.-.BP.=.
    CA00: 01 78 69 00 00 47 74 02 66 1E 2D 0D 42 88 02 3D  // .xi..Gt.f.-.B..=
    CA10: 05 01 F0 D2 00 00 47 74 02 66 1E 2D 0D 42 20 01  // ......Gt.f.-.B .
    CA20: 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C A4 46  // .!C...FD..F..L.F
    CA30: 00 00 44 AC 02 2D 0D 42 06 00 56 20 41 3D A4 00  // ..D..-.B..V A=..
    CA40: 00 00 44 23 03 2D 25 41 01 3E 25 41 0A 44 AC 02  // ..D#.-%A.>%A.D..
    CA50: 2D 0D 42 05 00 43 91 02 66 07 2D 0C 42 06 00 03  // -.B..C..f.-.B...
    CA60: 21 43 00 03 A2 46 44 03 0C 46 02 00 4C A4 46 00  // !C...FD..F..L.F.
    CA70: 00 49 D0 02 2D 0C 42 04 00 43 BB 02 2D 0D 42 06  // .I..-.B..C..-.B.
    CA80: 00 3D 05 01 48 3F 00 00 47 08 03 03 0A 40 46 21  // .=..H?..G....@F!
    CA90: 0D 40 0A 00 2D 0A 42 40 3D 05 01 78 69 00 00 47  // .@..-.B@=..xi..G
    CAA0: 08 03 2D 0A 42 40 3D 05 01 F0 D2 00 00 47 08 03  // ..-.B@=......G..
    CAB0: 2D 0A 42 40 3D A4 00 00 00 44 23 03 03 24 41 00  // -.B@=....D#..$A.
    CAC0: 00 3E 25 41 18 44 23 03 2D 0A 42 46 43 08 03 03  // .>%A.D#.-.BFC...
    CAD0: 04 40 01 00 03 65 41 08 01 0A EB 5D 40 01 05 03  // .@...eA....]@...
    CAE0: 5E 88 88 01 00 01 F2 04 5E 40 01 BA 0A 5E 40 01  // ^.......^@...^@.
    CAF0: BA 1A 5E 40 01 BA 2A 5E 40 01 BA 3A 5E 40 01 25  // ..^@..*^@..:^@.%
    CB00: 09 5E 20 01 25 19 5E 20 01 25 29 5E 20 01 25 39  // .^ .%.^ .%)^ .%9
    CB10: 5E 20 01 2A 09 5E 41 01 2A 19 5E 41 01 2A 29 5E  // ^ .*.^A.*.^A.*)^
    CB20: 41 01 2A 39 5E 41 3D 65 00 0B 44 87 03 5C A2 F0  // A.*9^A=e..D..\..
    CB30: 5D DF 41 3A 00 00 5B 00 44 02 01 02 00 00 37 00  // ].A:..[.D.....7.
    CB40: 00 3D 0D 00 00 00 44 CE 01 56 00 41 03 21 41 01  // .=....D..V.A.!A.
    CB50: 09 25 41 0F 15 0D 41 02 03 0A 40 42 66 FF 2D 0D  // .%A...A...@Bf.-.
    CB60: 42 34 02 2D 0A 42 41 03 0C 48 02 00 0D A5 90 5D  // B4.-.BA..H.....]
    CB70: 01 54 08 90 5D 03 0C 48 00 00 03 F9 41 01 15 3D  // .T..]..H....A..=
    CB80: 41 04 5C BA 10 54 8F 41 03 0A 42 40 4A 25 10 54  // A.\..T.A..B@J%.T
    CB90: 01 49 81 00 0D 0D 10 54 01 01 0D 25 10 54 10 4A  // .I.....T...%.T.J
    CBA0: 25 10 54 20 44 67 00 07 25 10 54 EF 4A 25 10 54  // %.T Dg..%.T.J%.T
    CBB0: 20 49 74 00 0D 25 13 54 40 56 00 41 03 09 41 00  //  It..%.T@V.A..A.
    CBC0: 3B 02 41 03 3B 41 00 1B 25 41 04 01 A2 11 54 41  // ;.A.;A..%A....TA
    CBD0: 03 69 41 01 15 2D 41 04 01 2A 11 54 41 56 00 40  // .iA..-A..*.TAV.@
    CBE0: 0F E5 40 80 03 73 40 00 01 02 16 54 40 56 00 40  // ..@..s@....T@V.@
    CBF0: 03 6B 40 00 01 02 16 54 40 03 63 40 00 01 02 16  // .k@....T@.c@....
    CC00: 54 40 03 7B 40 00 09 65 40 0F 01 02 16 54 40 3E  // T@.{@..e@....T@>
    CC10: 25 41 04 47 10 01 33 25 41 04 2D 05 46 04 00 00  // %A.G..3%A.-.F...
    CC20: 00 03 63 40 00 01 02 16 54 40 03 6B 40 00 01 02  // ..c@....T@.k@...
    CC30: 16 54 40 03 73 40 00 01 02 16 54 40 03 7B 40 00  // .T@.s@....T@.{@.
    CC40: 01 02 16 54 40 43 D7 00 0D 25 13 54 02 0D 25 11  // ...T@C...%.T..%.
    CC50: 54 01 03 29 40 01 21 25 40 0A 2D 25 40 32 4A 25  // T..)@.!%@.-%@2J%
    CC60: 14 54 01 49 42 01 51 0A 33 25 40 01 3E 25 40 00  // .T.IB.Q.3%@.>%@.
    CC70: 49 26 01 02 65 01 01 43 CA 01 4A 05 14 54 F0 8F  // I&..e..C..J..T..
    CC80: FF 00 44 54 01 02 65 01 02 43 CA 01 01 05 16 54  // ..DT..e..C.....T
    CC90: 01 00 00 80 03 00 40 16 54 02 6A 01 40 02 B8 01  // ......@.T.j.@...
    CCA0: 14 54 08 A5 01 1F 3D A5 01 00 46 7C 01 02 65 01  // .T....=...F|..e.
    CCB0: 03 43 CA 01 32 A5 01 01 3D 8D 00 00 00 44 CA 01  // .C..2...=....D..
    CCC0: 3D A5 01 00 44 CA 01 03 31 41 01 03 19 40 00 56  // =...D...1A...@.V
    CCD0: 18 40 3B 02 40 03 28 40 16 54 03 68 40 16 54 03  // .@;.@.(@.T.h@.T.
    CCE0: A8 40 16 54 03 E8 40 16 54 04 02 00 40 3E 25 41  // .@.T..@.T...@>%A
    CCF0: 04 47 CA 01 33 25 41 04 2D 05 46 04 00 00 00 43  // .G..3%A.-.F....C
    CD00: 9D 01 3A 00 00 5B 66 FF 2D 0D 42 34 02 03 0C 48  // ..:..[f.-.B4...H
    CD10: 00 00 01 8D 18 54 18 00 01 05 19 54 00 1C 02 00  // .....T.....T....
    CD20: 01 05 1A 54 10 11 3D 12 2D 0D 42 04 00 2C 25 00  // ...T..=.-.B..,%.
    CD30: 01 3D 25 00 04 49 D5 01 56 08 48 03 25 41 10 0D  // .=%..I..V.H.%A..
    CD40: 65 BF 5D 40 07 65 BF 5D BF 33 25 41 01 3E 25 41  // e.]@.e.].3%A.>%A
    CD50: 00 49 07 02 0D 25 63 5D 01 54 30 63 5D 0D 25 64  // .I...%c].T0c].%d
    CD60: 5D 01 54 30 64 5D 51 32 5B 7A 10 00 00 00 00 00  // ].T0d]Q2[z......
    CD70: 1C 00 04 00 38 00 08 00 54 00 0C 00 5C 00 01 02  // ....8...T...\...
    CD80: 00 04 02 25 01 04 03 31 41 00 09 0D 41 0F 00 15  // ...%...1A...A...
    CD90: 0D 41 01 66 FF 2D 0D 42 50 00 2D 0A 42 41 03 0C  // .A.f.-.BP.-.BA..
    CDA0: 48 00 00 07 A5 90 5D FE 01 0D 90 5D 11 11 50 02  // H.....]....]..P.
    CDB0: 4A 0D 93 5D 01 00 49 41 00 02 25 01 13 54 08 90  // J..]..IA..%..T..
    CDC0: 5D 54 00 92 5D 3A 00 00 5B 7A 0C 00 00 00 04 00  // ]T..]:..[z......
    CDD0: 08 00 0C 00 10 00 14 00 34 01 02 01 04 04 37 00  // ........4.....7.
    CDE0: 00 42 21 00 63 07 29 00 63 03 53 00 63 02 65 00  // .B!.c.).c.S.c.e.
    CDF0: 63 04 83 00 63 0C 11 01 63 0D 22 01 5A 5A 43 33  // c...c...c.".ZZC3
    CE00: 01 01 0D 45 5D 9F 0F 01 25 46 5D 00 66 06 01 24  // ...E]...%F].f..$
    CE10: 47 5D 30 00 01 4C 47 5D 31 00 03 24 46 3B 00 3E  // G]0..LG]1..$F;.>
    CE20: 25 46 00 44 33 01 54 20 47 5D 5B 0D E5 47 5D 01  // %F.D3.T G][..G].
    CE30: 5C 05 43 5D FF FF FF FD 11 00 00 00 5B 0D E5 47  // \.C]........[..G
    CE40: 5D 01 4A 25 44 5D 02 44 77 00 0D A5 43 5D 01 0D  // ].J%D].Dw...C]..
    CE50: A5 43 5D 02 5C 25 43 5D EF 01 5B 4A 05 53 00 00  // .C].\%C]..[J.S..
    CE60: 02 00 00 44 93 00 0D 25 4B 5D 01 3D 8D 00 00 00  // ...D...%K].=....
    CE70: 44 10 01 03 05 46 00 36 6E 01 56 00 41 03 19 41  // D....F.6n.V.A..A
    CE80: 00 21 05 41 FF 0F 00 00 27 02 46 40 3E 05 41 00  // .!.A....'.F@>.A.
    CE90: 00 00 00 44 C3 00 2D 0D 40 01 00 01 8A 45 5D 40  // ...D..-.@....E]@
    CEA0: 56 00 41 03 19 41 00 21 02 40 41 27 02 46 40 01  // V.A..A.!.@A'.F@.
    CEB0: A5 4A 5D 0C 01 0A 4A 5D 40 15 05 40 04 56 00 41  // .J]...J]@..@.V.A
    CEC0: 03 29 41 00 2D 0D 41 01 00 21 02 40 41 1B 05 40  // .)A.-.A..!.@A..@
    CED0: 08 01 0A 48 5D 40 0D E5 48 5D C0 07 25 4B 5D FE  // ...H]@..H]..%K].
    CEE0: 4A 65 4B 5D 01 49 08 01 5B 5C E5 43 5D FE 02 07  // JeK].I..[\.C]...
    CEF0: E5 47 5D FE 0D 25 43 5D 11 5B 0D E5 47 5D 01 5C  // .G]..%C].[..G].\
    CF00: 05 43 5D EF FF FD FD 01 00 00 00 5B CB 00 03 02  // .C]........[....
    CF10: 00 10 37 00 00 56 00 40 4A 25 00 EC 01 44 30 00  // ..7..V.@J%...D0.
    CF20: 4A 25 05 EC 1E 49 30 00 03 25 40 01 01 05 05 EC  // J%...I0..%@.....
    CF30: 03 00 00 00 4A 65 05 EC 0F 49 28 00 3D 65 02 00  // ....Je...I(.=e..
    CF40: 49 3B 00 2C 25 02 F4 3D E5 02 00 49 46 00 2C A5  // I;.,%..=...IF.,.
    CF50: 02 F4 3D 65 02 02 49 4D 00 03 01 40 03 09 05 40  // ..=e..IM...@...@
    CF60: 00 00 00 FC 3E 05 40 00 00 00 D0 49 73 00 01 05  // ....>.@....Is...
    CF70: 63 C0 00 00 00 40 55 00 00 55 20 02 43 77 00 54  // c....@U..U .Cw.T
    CF80: 00 63 C0 01 01 64 C0 00 56 00 40 03 21 40 02 01  // .c...d..V.@.!@..
    CF90: 02 65 C0 40 01 01 66 C0 01 03 31 40 02 01 02 67  // .e.@..f...1@...g
    CFA0: C0 40 01 01 E8 C0 03 3D 65 02 01 44 AB 00 3D E5  // .@.....=e..D..=.
    CFB0: 02 01 44 AB 00 51 02 4A E5 A0 21 80 49 AB 00 3E  // ..D..Q.J..!.I..>
    CFC0: 25 40 01 49 CA 00 01 05 05 EC 01 00 00 00 4A 65  // %@.I..........Je
    CFD0: 05 EC 0F 49 C2 00 5B 00 0D 02 02 01 00 00 37 00  // ...I..[.......7.
    CFE0: 00 3D 25 01 01 44 5D 00 3D 25 01 02 44 F1 00 3D  // .=%..D].=%..D..=
    CFF0: 25 01 00 49 F6 01 3D 05 00 00 00 00 00 49 39 00  // %..I..=......I9.
    D000: 3A 00 00 0D 25 A4 53 01 4A 65 A4 53 01 44 30 00  // :...%.S.Je.S.D0.
    D010: 5B 54 20 A4 53 26 05 00 64 00 00 00 02 02 01 40  // [T .S&..d......@
    D020: 02 05 00 04 00 00 00 52 13 20 05 01 64 00 00 00  // .......R. ..d...
    D030: 02 02 00 40 5B 02 01 02 01 02 05 00 05 00 00 00  // ...@[...........
    D040: 02 05 01 58 02 00 00 52 13 20 05 01 40 42 0F 00  // ...X...R. ..@B..
    D050: 02 02 00 40 02 01 01 02 56 00 46 66 08 03 0C 46  // ...@....V.Ff...F
    D060: 0C 00 26 05 00 40 0D 03 00 21 02 40 46 32 02 00  // ..&..@...!.@F2..
    D070: 40 07 0D 18 01 F8 FE 66 08 03 0C 41 0C 00 3E 0D  // @......f...A..>.
    D080: 41 00 00 44 CD 00 01 A5 15 01 01 01 05 13 01 C0  // A..D............
    D090: 12 00 00 01 01 14 01 00 0D 25 15 01 01 4A 65 15  // .........%...Je.
    D0A0: 01 02 44 C5 00 01 01 42 01 00 01 01 46 01 00 01  // ..D....B....F...
    D0B0: 01 4A 01 00 01 01 4E 01 00 3D 65 01 02 49 F0 00  // .J....N..=e..I..
    D0C0: 5C 0D 18 01 F8 FF 01 01 5B 66 FF 2D 0D 42 FD 01  // \.......[f.-.B..
    D0D0: 56 00 41 03 39 41 01 15 25 41 02 2D 0A 42 41 3D  // V.A.9A..%A.-.BA=
    D0E0: 65 01 0B 49 64 01 20 05 00 64 00 00 00 03 0C 48  // e..Id. ..d.....H
    D0F0: 02 00 03 00 41 40 01 0F 25 41 10 09 0D 41 DF FF  // ....A@..%A...A..
    D100: 03 0C 48 00 00 4A 05 01 50 01 00 00 00 44 4D 01  // ..H..J..P....DM.
    D110: 03 0C 48 02 00 3C 02 41 01 40 49 4D 01 3C 02 40  // ..H..<.A.@IM.<.@
    D120: 01 41 44 F6 01 03 0C 48 02 00 07 25 40 01 EF 01  // .AD....H...%@...
    D130: 02 41 01 40 01 0A 40 01 41 43 F6 01 56 00 40 03  // .A.@..@.AC..V.@.
    D140: 8D 40 0C 00 3D 65 01 18 44 87 01 03 8D 40 3E 00  // .@..=e..D....@>.
    D150: 3D 65 01 19 44 87 01 03 A9 40 01 33 A5 40 14 03  // =e..D....@.3.@..
    D160: 31 40 01 09 25 40 03 15 25 40 04 0F 0D 40 01 01  // 1@..%@..%@...@..
    D170: 56 00 41 03 29 41 01 33 25 41 14 03 0C 48 00 00  // V.A.)A.3%A...H..
    D180: 4A 05 01 50 01 00 00 00 44 D4 01 03 0C 48 02 00  // J..P....D....H..
    D190: 4A 25 40 01 10 49 D4 01 3C 22 43 01 41 49 D4 01  // J%@..I..<"C.AI..
    D1A0: 03 1A 48 40 3C 0A 00 01 40 44 F6 01 03 1A 48 40  // ..H@<...@D....H@
    D1B0: 07 25 00 01 FE 03 0C 48 02 00 01 22 43 01 41 07  // .%.....H..."C.A.
    D1C0: 0D 40 01 EF FF 03 1A 48 40 01 0A 00 01 40 3A 00  // .@.....H@....@:.
    D1D0: 00 5B 7A 10 00 00 00 00 00 80 00 04 00 00 01 08  // .[z.............
    D1E0: 00 80 01 0C 00 00 F2 00 01 01 04 00 37 00 00 56  // ............7..V
    D1F0: 00 00 66 1E 2D 0D 42 4C 00 56 00 40 21 25 00 10  // ..f.-.BL.V.@!%..
    D200: 2D 0A 42 40 03 24 41 0C 00 4C 25 41 08 44 E6 00  // -.B@.$A..L%A.D..
    D210: 02 25 00 64 02 0D 01 01 01 02 E4 01 06 00 0E E5  // .%.d............
    D220: 01 90 66 1E 03 24 41 08 00 4C 25 41 20 49 64 00  // ..f..$A..L%A Id.
    D230: 43 64 00 2D 0D 42 35 02 02 A4 01 00 00 03 64 00  // Cd.-.B5.......d.
    D240: 01 00 2D 0D 42 03 00 43 CC 00 3E 0D 00 00 00 44  // ..-.B..C..>....D
    D250: 87 00 3E 0D 00 01 00 44 9E 00 3E 0D 00 02 00 44  // ..>....D..>....D
    D260: B5 00 3E 0D 00 03 00 44 4D 00 43 E6 00 2D 0D 42  // ..>....DM.C..-.B
    D270: E4 01 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03  // ........d...-.B.
    D280: 00 43 CC 00 2D 0D 42 FF 01 02 A4 01 00 00 03 64  // .C..-.B........d
    D290: 00 01 00 2D 0D 42 03 00 43 CC 00 2D 0D 42 1A 02  // ...-.B..C..-.B..
    D2A0: 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03 00 43  // ......d...-.B..C
    D2B0: CC 00 3E 65 00 00 44 E6 00 33 65 00 01 02 4C 00  // ..>e..D..3e...L.
    D2C0: 00 00 52 36 2D 0D 42 02 00 43 CC 00 2D 25 00 01  // ..R6-.B..C..-%..
    D2D0: 3E 25 00 04 45 0C 00 5B FF FF FF FF FF FF FF FF  // >%..E..[........
    D2E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D2F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D300: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D310: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D320: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D330: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D340: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D350: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D360: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D370: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D380: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D390: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D400: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D410: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D420: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D430: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D440: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D450: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D460: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D480: 00 00 00 00                                      // ....


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Migrations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8F
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 8F 41 43 52 53 59 53  // WSMT(.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 07 00 00 00                          // ........


