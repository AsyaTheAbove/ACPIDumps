
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20220331
Copyright (c) 2000 - 2022 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00000024  0x01  "AMDFCH"  "FCHZP   "  0x00001000  "INTL"   0x20120913
 02)  MCFG  0x0000003C  0x01  "ALASKA"  "A M I   "  0x01072009  "MSFT"   0x00010013
 03)  APIC  0x0000015E  0x03  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 04)  CRAT  0x00000BD0  0x01  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 05)  SSDT  0x00003B10  0x01  "AMD   "  "AMD AOD "  0x00000001  "INTL"   0x20120913
 06)  TPM2  0x0000004C  0x04  "ALASKA"  "A M I   "  0x00000001  "AMI "   0x00000000
 07)  VFCT  0x0000E884  0x01  "ALASKA"  "A M I   "  0x00000001  "AMD "   0x31504F47
 08)  CDIT  0x00000029  0x01  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 09)  IVRS  0x000000D0  0x02  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000000
 10)  DSDT  0x00006B67  0x02  "ALASKA"  "A M I   "  0x01072009  "INTL"   0x20120913
 11)  SSDT  0x000000BF  0x01  "AMD   "  "AmdTable"  0x00001000  "INTL"   0x20120913
 12)  WSMT  0x00000028  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 13)  SSDT  0x00001A58  0x02  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 14)  SSDT  0x000000C8  0x02  "ALASKA"  "CPUSSDT "  0x01072009  "AMI "   0x01072009
 15)  FACP  0x00000114  0x06  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 16)  FPDT  0x00000044  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x01000013
 17)  SSDT  0x00008C98  0x02  "AMD   "  "AmdTable"  0x00000002  "MSFT"   0x04000000
 18)  SSDT  0x000010AF  0x01  "AMD   "  "MYRTLE  "  0x00000001  "INTL"   0x20120913
 19)  HPET  0x00000038  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00000005
 20)  SSDT  0x0000381A  0x01  "AMD   "  "MYRTLE  "  0x00000001  "INTL"   0x20120913
 21)  FIDT  0x0000009C  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 22)  FACS  0x00000040  0x02
 23)  BGRT  0x00000038  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013

Found 23 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 0000015E
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 15
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 02
[037h 0055   1]                Local Apic ID : 02
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 04
[03Fh 0063   1]                Local Apic ID : 04
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 06
[047h 0071   1]                Local Apic ID : 08
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 08
[04Fh 0079   1]                Local Apic ID : 0A
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 0A
[057h 0087   1]                Local Apic ID : 0C
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 01
[05Fh 0095   1]                Local Apic ID : 01
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 03
[067h 0103   1]                Local Apic ID : 03
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 05
[06Fh 0111   1]                Local Apic ID : 05
[070h 0112   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 07
[077h 0119   1]                Local Apic ID : 09
[078h 0120   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 09
[07Fh 0127   1]                Local Apic ID : 0B
[080h 0128   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0B
[087h 0135   1]                Local Apic ID : 0D
[088h 0136   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0C
[08Fh 0143   1]                Local Apic ID : 00
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0D
[097h 0151   1]                Local Apic ID : 00
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 00
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 0F
[0A7h 0167   1]                Local Apic ID : 00
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 00 [Processor Local APIC]
[0ADh 0173   1]                       Length : 08
[0AEh 0174   1]                 Processor ID : 10
[0AFh 0175   1]                Local Apic ID : 00
[0B0h 0176   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0B4h 0180   1]                Subtable Type : 00 [Processor Local APIC]
[0B5h 0181   1]                       Length : 08
[0B6h 0182   1]                 Processor ID : 11
[0B7h 0183   1]                Local Apic ID : 00
[0B8h 0184   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0BCh 0188   1]                Subtable Type : 00 [Processor Local APIC]
[0BDh 0189   1]                       Length : 08
[0BEh 0190   1]                 Processor ID : 12
[0BFh 0191   1]                Local Apic ID : 00
[0C0h 0192   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0C4h 0196   1]                Subtable Type : 00 [Processor Local APIC]
[0C5h 0197   1]                       Length : 08
[0C6h 0198   1]                 Processor ID : 13
[0C7h 0199   1]                Local Apic ID : 00
[0C8h 0200   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0CCh 0204   1]                Subtable Type : 00 [Processor Local APIC]
[0CDh 0205   1]                       Length : 08
[0CEh 0206   1]                 Processor ID : 14
[0CFh 0207   1]                Local Apic ID : 00
[0D0h 0208   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0D4h 0212   1]                Subtable Type : 00 [Processor Local APIC]
[0D5h 0213   1]                       Length : 08
[0D6h 0214   1]                 Processor ID : 15
[0D7h 0215   1]                Local Apic ID : 00
[0D8h 0216   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0DCh 0220   1]                Subtable Type : 00 [Processor Local APIC]
[0DDh 0221   1]                       Length : 08
[0DEh 0222   1]                 Processor ID : 16
[0DFh 0223   1]                Local Apic ID : 00
[0E0h 0224   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0E4h 0228   1]                Subtable Type : 00 [Processor Local APIC]
[0E5h 0229   1]                       Length : 08
[0E6h 0230   1]                 Processor ID : 17
[0E7h 0231   1]                Local Apic ID : 00
[0E8h 0232   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ECh 0236   1]                Subtable Type : 00 [Processor Local APIC]
[0EDh 0237   1]                       Length : 08
[0EEh 0238   1]                 Processor ID : 18
[0EFh 0239   1]                Local Apic ID : 00
[0F0h 0240   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0F4h 0244   1]                Subtable Type : 00 [Processor Local APIC]
[0F5h 0245   1]                       Length : 08
[0F6h 0246   1]                 Processor ID : 19
[0F7h 0247   1]                Local Apic ID : 00
[0F8h 0248   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0FCh 0252   1]                Subtable Type : 00 [Processor Local APIC]
[0FDh 0253   1]                       Length : 08
[0FEh 0254   1]                 Processor ID : 1A
[0FFh 0255   1]                Local Apic ID : 00
[100h 0256   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[104h 0260   1]                Subtable Type : 00 [Processor Local APIC]
[105h 0261   1]                       Length : 08
[106h 0262   1]                 Processor ID : 1B
[107h 0263   1]                Local Apic ID : 00
[108h 0264   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[10Ch 0268   1]                Subtable Type : 00 [Processor Local APIC]
[10Dh 0269   1]                       Length : 08
[10Eh 0270   1]                 Processor ID : 1C
[10Fh 0271   1]                Local Apic ID : 00
[110h 0272   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[114h 0276   1]                Subtable Type : 00 [Processor Local APIC]
[115h 0277   1]                       Length : 08
[116h 0278   1]                 Processor ID : 1D
[117h 0279   1]                Local Apic ID : 00
[118h 0280   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[11Ch 0284   1]                Subtable Type : 00 [Processor Local APIC]
[11Dh 0285   1]                       Length : 08
[11Eh 0286   1]                 Processor ID : 1E
[11Fh 0287   1]                Local Apic ID : 00
[120h 0288   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[124h 0292   1]                Subtable Type : 00 [Processor Local APIC]
[125h 0293   1]                       Length : 08
[126h 0294   1]                 Processor ID : 1F
[127h 0295   1]                Local Apic ID : 00
[128h 0296   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[12Ch 0300   1]                Subtable Type : 04 [Local APIC NMI]
[12Dh 0301   1]                       Length : 06
[12Eh 0302   1]                 Processor ID : FF
[12Fh 0303   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[131h 0305   1]         Interrupt Input LINT : 01

[132h 0306   1]                Subtable Type : 01 [I/O APIC]
[133h 0307   1]                       Length : 0C
[134h 0308   1]                  I/O Apic ID : 0D
[135h 0309   1]                     Reserved : 00
[136h 0310   4]                      Address : FEC00000
[13Ah 0314   4]                    Interrupt : 00000000

[13Eh 0318   1]                Subtable Type : 01 [I/O APIC]
[13Fh 0319   1]                       Length : 0C
[140h 0320   1]                  I/O Apic ID : 0E
[141h 0321   1]                     Reserved : 00
[142h 0322   4]                      Address : FEC01000
[146h 0326   4]                    Interrupt : 00000018

[14Ah 0330   1]                Subtable Type : 02 [Interrupt Source Override]
[14Bh 0331   1]                       Length : 0A
[14Ch 0332   1]                          Bus : 00
[14Dh 0333   1]                       Source : 00
[14Eh 0334   4]                    Interrupt : 00000002
[152h 0338   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[154h 0340   1]                Subtable Type : 02 [Interrupt Source Override]
[155h 0341   1]                       Length : 0A
[156h 0342   1]                          Bus : 00
[157h 0343   1]                       Source : 09
[158h 0344   4]                    Interrupt : 00000009
[15Ch 0348   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

Raw Table Data: Length 350 (0x15E)

    0000: 41 50 49 43 5E 01 00 00 03 15 41 4C 41 53 4B 41  // APIC^.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 02 02 01 00 00 00 00 08 04 04  // ................
    0040: 01 00 00 00 00 08 06 08 01 00 00 00 00 08 08 0A  // ................
    0050: 01 00 00 00 00 08 0A 0C 01 00 00 00 00 08 01 01  // ................
    0060: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 05 05  // ................
    0070: 01 00 00 00 00 08 07 09 01 00 00 00 00 08 09 0B  // ................
    0080: 01 00 00 00 00 08 0B 0D 01 00 00 00 00 08 0C 00  // ................
    0090: 00 00 00 00 00 08 0D 00 00 00 00 00 00 08 0E 00  // ................
    00A0: 00 00 00 00 00 08 0F 00 00 00 00 00 00 08 10 00  // ................
    00B0: 00 00 00 00 00 08 11 00 00 00 00 00 00 08 12 00  // ................
    00C0: 00 00 00 00 00 08 13 00 00 00 00 00 00 08 14 00  // ................
    00D0: 00 00 00 00 00 08 15 00 00 00 00 00 00 08 16 00  // ................
    00E0: 00 00 00 00 00 08 17 00 00 00 00 00 00 08 18 00  // ................
    00F0: 00 00 00 00 00 08 19 00 00 00 00 00 00 08 1A 00  // ................
    0100: 00 00 00 00 00 08 1B 00 00 00 00 00 00 08 1C 00  // ................
    0110: 00 00 00 00 00 08 1D 00 00 00 00 00 00 08 1E 00  // ................
    0120: 00 00 00 00 00 08 1F 00 00 00 00 00 04 06 FF 05  // ................
    0130: 00 01 01 0C 0D 00 00 00 C0 FE 00 00 00 00 01 0C  // ................
    0140: 0E 00 00 10 C0 FE 18 00 00 00 02 0A 00 00 02 00  // ................
    0150: 00 00 00 00 02 0A 00 09 09 00 00 00 0F 00        // ..............


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : D2
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 01
                                   Displayed : 1
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000B84FC018
[030h 0048   4]                Image OffsetX : 00000433
[034h 0052   4]                Image OffsetY : 0000018D

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 D2 41 4C 41 53 4B 41  // BGRT8.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 01 00 01 00 18 C0 4F B8 00 00 00 00  // ..........O.....
    0030: 33 04 00 00 8D 01 00 00                          // 3.......


CDIT
----
[000h 0000   4]                    Signature : "CDIT"    
[004h 0004   4]                 Table Length : 00000029
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E7
[00Ah 0010   6]                       Oem ID : "AMD"
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 E7 41 4D 44 00 00 00  // CDIT).....AMD...
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 00000BD0
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : FA
[00Ah 0010   6]                       Oem ID : "AMD"
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 3024 (0xBD0)

    0000: 43 52 41 54 D0 0B 00 00 01 FA 41 4D 44 00 00 00  // CRAT......AMD...
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 30 00 00 00 01 00 00 00 00 00 00 00  // ....0...........
    0030: 00 28 00 00 05 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 0C 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 10 00  // .(..............
    0090: 00 00 00 00 00 00 F0 BF 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    00B0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 40  // ...............@
    00C0: 03 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    00D0: 02 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0100: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0110: 02 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0140: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0150: 02 40 00 00 0F 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0180: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0190: 02 40 00 00 0F 00 00 00 00 00 00 00 3F 00 00 00  // .@..........?...
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00  // .............@..
    01C0: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    01D0: 02 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0200: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0210: 02 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0240: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0250: 02 40 00 00 0F 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0280: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0290: 02 40 00 00 0B 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02B0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    02C0: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    02D0: 02 40 00 00 0D 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0300: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0310: 02 40 00 00 0F 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0340: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0350: 02 40 00 00 0B 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0380: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0390: 02 40 00 00 0D 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    03C0: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    03D0: 02 40 00 00 0F 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0400: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0410: 02 40 00 00 0F 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00  // .............@..
    0440: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0450: 02 40 00 00 0B 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0480: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0490: 02 40 00 00 0D 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04B0: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    04C0: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    04D0: 02 40 00 00 0F 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0500: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0510: 02 40 00 00 0B 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0530: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0540: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0550: 02 40 00 00 0D 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0570: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0580: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0590: 02 40 00 00 0F 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    05C0: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    05D0: 03 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0600: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0610: 03 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0630: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0640: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0650: 03 40 00 00 AB 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0670: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0680: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0690: 03 40 00 00 AD 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    06A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    06C0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    06D0: 03 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    06E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0700: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0710: 03 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0730: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0740: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0750: 03 40 00 00 AB 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0770: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0780: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0790: 03 40 00 00 AD 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    07A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    07C0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    07D0: 03 40 00 00 0B 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    07E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0800: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0810: 03 40 00 00 0D 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0830: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0840: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0850: 03 40 00 00 AB 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    0860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0870: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0880: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0890: 03 40 00 00 AD 00 00 00 04 00 00 00 30 00 00 00  // .@..........0...
    08A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    08C0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    08D0: 03 40 00 00 0B 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    08E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0900: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0910: 03 40 00 00 0D 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    0920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0930: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0940: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0950: 03 40 00 00 AB 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    0960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0970: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0980: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0990: 03 40 00 00 AD 00 00 00 08 00 00 00 C0 00 00 00  // .@..............
    09A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09B0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    09C0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    09D0: 03 40 00 00 0B 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    09E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0A00: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0A10: 03 40 00 00 0D 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    0A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A30: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0A40: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0A50: 03 40 00 00 AB 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    0A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A70: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0A80: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0A90: 03 40 00 00 AD 00 00 00 0A 00 00 00 00 03 00 00  // .@..............
    0AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AB0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0AC0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0AD0: 03 40 00 00 0B 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AF0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0B00: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0B10: 03 40 00 00 0D 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B30: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0B40: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0B50: 03 40 00 00 AB 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B70: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0B80: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0B90: 03 40 00 00 AD 00 00 00 0C 00 00 00 00 0C 00 00  // .@..............
    0BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BB0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0BC0: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................


DSDT
----
DefinitionBlock ("", "DSDT", 2, "ALASKA", "A M I ", 0x01072009)
{
    /*
     * iASL Warning: There were 4 external control methods found during
     * disassembly, but only 0 were resolved (4 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (MPTS, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (MWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments

    Name (ENTK, 0x87)
    Name (EXTK, 0xAA)
    Name (IO1B, 0x0A00)
    Name (IO1L, 0x10)
    Name (IO2B, 0x0A10)
    Name (IO2L, 0x10)
    Name (IO3B, 0x0A20)
    Name (IO3L, 0x10)
    Name (IO4B, 0x0A30)
    Name (IO4L, 0x10)
    Name (SP1O, 0x4E)
    Name (IOES, Zero)
    Name (PEBL, 0x08000000)
    Name (ACPM, One)
    Name (CPVD, One)
    Name (SMBB, 0x0B20)
    Name (SMBL, 0x20)
    Name (SMB0, 0x0B00)
    Name (SMBM, 0x10)
    Name (PMBS, 0x0800)
    Name (PMLN, 0xA0)
    Name (SMIO, 0xB2)
    Name (GPBS, Zero)
    Name (GPLN, Zero)
    Name (APCB, 0xFEC00000)
    Name (APCL, 0x1000)
    Name (HPTB, 0xFED00000)
    Name (WDTB, Zero)
    Name (WDTL, Zero)
    Name (GIOB, 0xFED81500)
    Name (IOMB, 0xFED80D00)
    Name (SSMB, 0xFED80200)
    Name (CAFS, 0xBB)
    Name (UTDB, Zero)
    Name (NBTS, 0x5000)
    Name (ASSB, Zero)
    Name (AOTB, Zero)
    Name (AAXB, Zero)
    Name (PEHP, One)
    Name (SHPC, Zero)
    Name (PEER, One)
    Name (PECS, One)
    Name (ITKE, Zero)
    Name (PEBS, 0xF0000000)
    Name (PELN, 0x08000000)
    Name (CSMI, 0x61)
    Name (SMIA, 0xB2)
    Name (SMIB, 0xB3)
    Name (OFST, 0x35)
    Name (TRST, 0x02)
    Name (TCMF, Zero)
    Name (TMF1, Zero)
    Name (TMF2, Zero)
    Name (TMF3, Zero)
    Name (TTPF, Zero)
    Name (DTPT, Zero)
    Name (TTDP, One)
    Name (TPMB, 0xBB684000)
    Name (TPBS, 0x4000)
    Name (TPMC, 0xBB688000)
    Name (TPCS, 0x4000)
    Name (TPMM, 0xFD110510)
    Name (FTPM, 0xFD110510)
    Name (PPIM, 0xBCE02B18)
    Name (PPIL, 0x1C)
    Name (AMDT, One)
    Name (TPMF, One)
    Name (PPIV, One)
    Name (HIDK, "MSFT0001")
    Name (HIDM, "MSFT0003")
    Name (CIDK, 0x0303D041)
    Name (CIDM, 0x030FD041)
    Name (ATIS, 0xB0)
    Name (MBEC, Zero)
    Name (THPN, Zero)
    Name (ALST, Zero)
    Name (NBTP, 0xFEC30000)
    Name (FDSI, 0xD4)
    Name (FESI, 0xD5)
    Name (FSSI, 0xE2)
    Name (SMIP, 0xB2)
    Name (CISI, 0x88)
    Name (LSMB, 0xB2)
    Name (AISV, 0xE3)
    Name (WMSZ, 0x0300)
    Name (PEPM, Zero)
    Name (COMA, One)
    Name (COMB, Zero)
    Name (LPTA, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        If (Arg0)
        {
            \_SB.DSPI ()
            \_SB.PCI0.NAPE ()
        }

        PXXX (Arg0)
    }

    Name (PICM, Zero)
    Method (PXXX, 1, NotSerialized)
    {
        If (Arg0)
        {
            DBG8 = 0xAA
        }
        Else
        {
            DBG8 = 0xAC
        }

        PICM = Arg0
    }

    Name (OSVR, Ones)
    Method (OSFL, 0, NotSerialized)
    {
        If ((OSVR != Ones))
        {
            Return (OSVR) /* \OSVR */
        }

        If ((PICM == Zero))
        {
            DBG8 = 0xAC
        }

        OSVR = 0x03
        If (CondRefOf (\_OSI, Local0))
        {
            If (_OSI ("Windows 2001"))
            {
                OSVR = 0x04
            }

            If (_OSI ("Windows 2001.1"))
            {
                OSVR = 0x05
            }

            If (_OSI ("FreeBSD"))
            {
                OSVR = 0x06
            }

            If (_OSI ("HP-UX"))
            {
                OSVR = 0x07
            }

            If (_OSI ("OpenVMS"))
            {
                OSVR = 0x08
            }

            If (_OSI ("Windows 2001 SP1"))
            {
                OSVR = 0x09
            }

            If (_OSI ("Windows 2001 SP2"))
            {
                OSVR = 0x0A
            }

            If (_OSI ("Windows 2001 SP3"))
            {
                OSVR = 0x0B
            }

            If (_OSI ("Windows 2006"))
            {
                OSVR = 0x0C
            }

            If (_OSI ("Windows 2006 SP1"))
            {
                OSVR = 0x0D
            }

            If (_OSI ("Windows 2009"))
            {
                OSVR = 0x0E
            }

            If (_OSI ("Windows 2012"))
            {
                OSVR = 0x0F
            }

            If (_OSI ("Windows 2013"))
            {
                OSVR = 0x10
            }
        }
        Else
        {
            If (MCTH (_OS, "Microsoft Windows NT"))
            {
                OSVR = Zero
            }

            If (MCTH (_OS, "Microsoft Windows"))
            {
                OSVR = One
            }

            If (MCTH (_OS, "Microsoft WindowsME: Millennium Edition"))
            {
                OSVR = 0x02
            }

            If (MCTH (_OS, "Linux"))
            {
                OSVR = 0x03
            }

            If (MCTH (_OS, "FreeBSD"))
            {
                OSVR = 0x06
            }

            If (MCTH (_OS, "HP-UX"))
            {
                OSVR = 0x07
            }

            If (MCTH (_OS, "OpenVMS"))
            {
                OSVR = 0x08
            }
        }

        Return (OSVR) /* \OSVR */
    }

    Method (MCTH, 2, NotSerialized)
    {
        If ((SizeOf (Arg0) < SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = (SizeOf (Arg0) + One)
        Name (BUF0, Buffer (Local0){})
        Name (BUF1, Buffer (Local0){})
        BUF0 = Arg0
        BUF1 = Arg1
        While (Local0)
        {
            Local0--
            If ((DerefOf (BUF0 [Local0]) != DerefOf (BUF1 [Local0]
                )))
            {
                Return (Zero)
            }
        }

        Return (One)
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        Local0 = (SS1 << One)
        Local0 |= (SS2 << 0x02)
        Local0 |= (SS3 << 0x03)
        Local0 |= (SS4 << 0x04)
        If (((One << Arg1) & Local0))
        {
            PRWP [One] = Arg1
        }
        Else
        {
            Local0 >>= One
            If (((OSFL () == One) || (OSFL () == 0x02)))
            {
                FindSetLeftBit (Local0, PRWP [One])
            }
            Else
            {
                FindSetRightBit (Local0, PRWP [One])
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Name (WAKP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (UPWP, 1, NotSerialized)
    {
        If (DerefOf (WAKP [Zero]))
        {
            WAKP [One] = Zero
        }
        Else
        {
            WAKP [One] = Arg0
        }
    }

    OperationRegion (DEB0, SystemIO, 0x80, One)
    Field (DEB0, ByteAcc, NoLock, Preserve)
    {
        DBG8,   8
    }

    OperationRegion (DEB1, SystemIO, 0x90, 0x02)
    Field (DEB1, WordAcc, NoLock, Preserve)
    {
        DBG9,   16
    }

    Name (SS1, Zero)
    Name (SS2, Zero)
    Name (SS3, One)
    Name (SS4, One)
    Name (IOST, 0x0000)
    Name (TOPM, 0x00000000)
    Name (ROMS, 0xFFE00000)
    Name (VGAF, One)
    OperationRegion (DEB2, SystemIO, 0x80, 0x02)
    Field (DEB2, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    Name (OSTY, Ones)
    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (PSMI, SystemIO, SMIO, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemMemory, 0xFED80300, 0x0100)
    Field (PMRG, AnyAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0x78), 
            ,   20, 
        SI3V,   1, 
        Offset (0x80), 
        SI3R,   1, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x296), 
            ,   7, 
        TMSE,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2, 
        Offset (0x3BB), 
            ,   6, 
        PWDE,   1, 
        Offset (0x3E4), 
        BLNK,   2
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   6, 
        PEWS,   1, 
        WSTA,   1, 
        Offset (0x03), 
            ,   6, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, PMBS, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Method (SPTS, 1, NotSerialized)
    {
        P80H = Arg0
        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
        If ((Arg0 == 0x03))
        {
            SLPS = One
        }

        If ((Arg0 == 0x04))
        {
            SLPS = One
            RSTU = One
        }

        If ((Arg0 == 0x05))
        {
            PWDE = One
        }
    }

    Method (SWAK, 1, NotSerialized)
    {
        BLNK = 0x03
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PEWD = Zero
        If (PICM)
        {
            \_SB.DSPI ()
        }

        If (TMSE)
        {
            TMSE = Zero
        }

        If ((Arg0 == 0x03))
        {
            ACMX = 0xC7
            If ((ACMA == 0x55))
            {
                ACMA = Zero
            }
            Else
            {
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }
        }

        If ((Arg0 == 0x04))
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Scope (_GPE)
    {
    }

    Scope (_SB)
    {
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {4,5,7,10,11,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Name (PD01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x18
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x19
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1B
            }
        })
        Name (PD02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1F
            }
        })
        Name (PD04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x27
            }
        })
        Name (PD05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2B
            }
        })
        Name (PD06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2F
            }
        })
        Name (PD07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x30
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x31
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x32
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x33
            }
        })
        Name (PD08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x35
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x37
            }
        })
        Name (PD09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x37
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x35
            }
        })
        Name (PD0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x32
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x33
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x30
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x31
            }
        })
        Name (PD0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2F
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2D
            }
        })
        Name (PD0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x29
            }
        })
        Name (PD0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x25
            }
        })
        Name (PD0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x23
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x21
            }
        })
        Name (PD0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1F
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1D
            }
        })
        Name (PD10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x18
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x19
            }
        })
        Name (PD11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKG, 
                Zero
            }
        })
        Name (AR11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x26
            }
        })
        Name (PD12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x28
            }
        })
        Name (PD00, Package (0x10)
        {
            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x03, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR00, Package (0x10)
        {
            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                One, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x02, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x03, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PD20, Package (0x00){})
        Name (AR20, Package (0x00){})
        Name (PD21, Package (0x00){})
        Name (AR21, Package (0x00){})
        Name (PD23, Package (0x00){})
        Name (AR23, Package (0x00){})
        Name (PD24, Package (0x00){})
        Name (AR24, Package (0x00){})
        Name (PD25, Package (0x00){})
        Name (AR25, Package (0x00){})
        Name (PD03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x21
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x23
            }
        })
        Name (PD22, Package (0x00){})
        Name (AR22, Package (0x00){})
    }

    Scope (_SB)
    {
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00) /* \_SB_.AR00 */
                }

                Return (PD00) /* \_SB_.PD00 */
            }

            Device (AMDN)
            {
                Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                Name (_UID, 0xC8)  // _UID: Unique ID
                Name (_STA, 0x0F)  // _STA: Status
                Name (NPTR, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y00)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (NPTR, \_SB.PCI0.AMDN._Y00._LEN, PL)  // _LEN: Length
                    CreateDWordField (NPTR, \_SB.PCI0.AMDN._Y00._BAS, PB)  // _BAS: Base Address
                    PB = PEBS /* \PEBS */
                    PL = PEBL /* \PEBL */
                    Return (NPTR) /* \_SB_.PCI0.AMDN.NPTR */
                }
            }

            Method (NPTS, 1, NotSerialized)
            {
                APTS (Arg0)
            }

            Method (NWAK, 1, NotSerialized)
            {
                AWAK (Arg0)
            }

            Name (CPRB, One)
            Name (LVGA, 0x01)
            Name (STAV, 0x0F)
            Name (BRB, 0x0000)
            Name (BRL, 0x0100)
            Name (IOB, 0x1000)
            Name (IOL, 0xF000)
            Name (MBB, 0xC0000000)
            Name (MBL, 0x3D000000)
            Name (MAB, 0x0000000440000000)
            Name (MAL, 0x0000007BC0000000)
            Name (MAM, 0x0000007FFFFFFFFF)
            Name (CRS1, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x007F,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0080,             // Length
                    ,, _Y01)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x03AF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x03B0,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03E0,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0918,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y03, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0x0FFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0300,             // Length
                    ,, _Y02, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x02000000,         // Range Minimum
                    0xFFDFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFDE00000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x02000000,         // Range Minimum
                    0xFFDFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFDE00000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
            })
            Name (CRS2, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0080,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0080,             // Length
                    ,, _Y08)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y0A, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y09, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x80000000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x80000000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (STAV) /* \_SB_.PCI0.STAV */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (CPRB)
                {
                    CreateWordField (CRS1, \_SB.PCI0._Y01._MIN, MIN0)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y01._MAX, MAX0)  // _MAX: Maximum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y01._LEN, LEN0)  // _LEN: Length
                    MIN0 = BRB /* \_SB_.PCI0.BRB_ */
                    LEN0 = BRL /* \_SB_.PCI0.BRL_ */
                    Local0 = LEN0 /* \_SB_.PCI0._CRS.LEN0 */
                    MAX0 = (MIN0 + Local0--)
                    CreateWordField (CRS1, \_SB.PCI0._Y02._MIN, MIN1)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y02._MAX, MAX1)  // _MAX: Maximum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y02._LEN, LEN1)  // _LEN: Length
                    If ((IOB == 0x1000))
                    {
                        Local0 = IOL /* \_SB_.PCI0.IOL_ */
                        MAX1 = (IOB + Local0--)
                        Local0 = (MAX1 - MIN1) /* \_SB_.PCI0._CRS.MIN1 */
                        LEN1 = (Local0 + One)
                    }
                    Else
                    {
                        MIN1 = IOB /* \_SB_.PCI0.IOB_ */
                        LEN1 = IOL /* \_SB_.PCI0.IOL_ */
                        Local0 = LEN1 /* \_SB_.PCI0._CRS.LEN1 */
                        MAX1 = (MIN1 + Local0--)
                    }

                    If (((LVGA == One) || (LVGA == 0x55)))
                    {
                        If (VGAF)
                        {
                            CreateWordField (CRS1, \_SB.PCI0._Y03._MIN, IMN1)  // _MIN: Minimum Base Address
                            CreateWordField (CRS1, \_SB.PCI0._Y03._MAX, IMX1)  // _MAX: Maximum Base Address
                            CreateWordField (CRS1, \_SB.PCI0._Y03._LEN, ILN1)  // _LEN: Length
                            IMN1 = 0x03B0
                            IMX1 = 0x03DF
                            ILN1 = 0x30
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._MIN, VMN1)  // _MIN: Minimum Base Address
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._MAX, VMX1)  // _MAX: Maximum Base Address
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._LEN, VLN1)  // _LEN: Length
                            VMN1 = 0x000A0000
                            VMX1 = 0x000BFFFF
                            VLN1 = 0x00020000
                            VGAF = Zero
                        }
                    }

                    CreateDWordField (CRS1, \_SB.PCI0._Y05._MIN, MIN3)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y05._MAX, MAX3)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y05._LEN, LEN3)  // _LEN: Length
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._MIN, MIN7)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._MAX, MAX7)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._LEN, LEN7)  // _LEN: Length
                    Local0 = (MBB + MBL) /* \_SB_.PCI0.MBL_ */
                    If ((Local0 < NBTP))
                    {
                        MIN3 = MBB /* \_SB_.PCI0.MBB_ */
                        LEN3 = MBL /* \_SB_.PCI0.MBL_ */
                        Local0 = LEN3 /* \_SB_.PCI0._CRS.LEN3 */
                        MAX3 = (MIN3 + Local0--)
                        MIN7 = Zero
                        MAX7 = Zero
                        LEN7 = Zero
                    }
                    Else
                    {
                        MIN3 = MBB /* \_SB_.PCI0.MBB_ */
                        LEN3 = (NBTP - MBB)
                        Local0 = LEN3 /* \_SB_.PCI0._CRS.LEN3 */
                        MAX3 = (MIN3 + Local0--)
                        MIN7 = 0xFEE00000
                        Local0 = (0xFEE00000 - NBTP)
                        LEN7 = (MBL - Local0)
                        LEN7 = (LEN7 - LEN3)
                        Local0 = LEN7 /* \_SB_.PCI0._CRS.LEN7 */
                        MAX7 = (MIN7 + Local0--)
                    }

                    If (MAL)
                    {
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._MIN, MN8)  // _MIN: Minimum Base Address
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._MAX, MX8)  // _MAX: Maximum Base Address
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._LEN, LN8)  // _LEN: Length
                        MN8 = MAB /* \_SB_.PCI0.MAB_ */
                        LN8 = MAL /* \_SB_.PCI0.MAL_ */
                        MX8 = MAM /* \_SB_.PCI0.MAM_ */
                    }

                    Return (CRS1) /* \_SB_.PCI0.CRS1 */
                }
                Else
                {
                    CreateWordField (CRS2, \_SB.PCI0._Y08._MIN, MIN2)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y08._MAX, MAX2)  // _MAX: Maximum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y08._LEN, LEN2)  // _LEN: Length
                    MIN2 = BRB /* \_SB_.PCI0.BRB_ */
                    LEN2 = BRL /* \_SB_.PCI0.BRL_ */
                    Local1 = LEN2 /* \_SB_.PCI0._CRS.LEN2 */
                    MAX2 = (MIN2 + Local1--)
                    CreateWordField (CRS2, \_SB.PCI0._Y09._MIN, MIN4)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y09._MAX, MAX4)  // _MAX: Maximum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y09._LEN, LEN4)  // _LEN: Length
                    MIN4 = IOB /* \_SB_.PCI0.IOB_ */
                    LEN4 = IOL /* \_SB_.PCI0.IOL_ */
                    Local1 = LEN4 /* \_SB_.PCI0._CRS.LEN4 */
                    MAX4 = (MIN4 + Local1--)
                    If (LVGA)
                    {
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._MIN, IMN2)  // _MIN: Minimum Base Address
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._MAX, IMX2)  // _MAX: Maximum Base Address
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._LEN, ILN2)  // _LEN: Length
                        IMN2 = 0x03B0
                        IMX2 = 0x03DF
                        ILN2 = 0x30
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._MIN, VMN2)  // _MIN: Minimum Base Address
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._MAX, VMX2)  // _MAX: Maximum Base Address
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._LEN, VLN2)  // _LEN: Length
                        VMN2 = 0x000A0000
                        VMX2 = 0x000BFFFF
                        VLN2 = 0x00020000
                    }

                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._MIN, MIN5)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._MAX, MAX5)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._LEN, LEN5)  // _LEN: Length
                    MIN5 = MBB /* \_SB_.PCI0.MBB_ */
                    LEN5 = (NBTP - MBB)
                    Local1 = LEN5 /* \_SB_.PCI0._CRS.LEN5 */
                    MAX5 = (MIN5 + Local1--)
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._MIN, MIN6)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._MAX, MAX6)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._LEN, LEN6)  // _LEN: Length
                    MIN6 = (NBTP + NBTS) /* \NBTS */
                    LEN6 = (MBL - NBTS)
                    LEN6 = (LEN6 - LEN5)
                    Local0 = LEN6 /* \_SB_.PCI0._CRS.LEN6 */
                    MAX6 = (MIN6 + Local0--)
                    If (MAL)
                    {
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._MIN, MN9)  // _MIN: Minimum Base Address
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._MAX, MX9)  // _MAX: Maximum Base Address
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._LEN, LN9)  // _LEN: Length
                        MN9 = MAB /* \_SB_.PCI0.MAB_ */
                        LN9 = MAL /* \_SB_.PCI0.MAL_ */
                        MX9 = MAM /* \_SB_.PCI0.MAM_ */
                    }

                    Return (CRS2) /* \_SB_.PCI0.CRS2 */
                }
            }

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Name (SUPP, Zero)
                Name (CTRL, Zero)
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    If (!PEHP)
                    {
                        CTRL &= 0x1E
                    }

                    If (!SHPC)
                    {
                        CTRL &= 0x1D
                    }

                    If (!PEPM)
                    {
                        CTRL &= 0x1B
                    }

                    If (!PEER)
                    {
                        CTRL &= 0x15
                    }

                    If (!PECS)
                    {
                        CTRL &= 0x0F
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0._OSC.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            OperationRegion (NAPC, PCI_Config, 0xB8, 0x08)
            Field (NAPC, DWordAcc, NoLock, Preserve)
            {
                NAPX,   32, 
                NAPD,   32
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                NAPX = 0x14300000
                Local0 = NAPD /* \_SB_.PCI0.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                Release (NAPM)
            }

            Method (GPTS, 1, NotSerialized)
            {
            }

            Method (GWAK, 1, NotSerialized)
            {
                If (PICM)
                {
                    NAPE ()
                }
            }

            Device (IOMA)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x15)  // _UID: Unique ID
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadOnly,
                        0xFEB80000,         // Address Base
                        0x00080000,         // Address Length
                        )
                })
            }

            Device (D002)
            {
                Name (_ADR, Zero)  // _ADR: Address
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR01) /* \_SB_.AR01 */
                    }

                    Return (PD01) /* \_SB_.PD01 */
                }

                Device (D004)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR02) /* \_SB_.AR02 */
                    }

                    Return (PD02) /* \_SB_.PD02 */
                }

                Device (D006)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00010004)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04) /* \_SB_.AR04 */
                    }

                    Return (PD04) /* \_SB_.PD04 */
                }

                Device (D008)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00010005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR05) /* \_SB_.AR05 */
                    }

                    Return (PD05) /* \_SB_.PD05 */
                }

                Device (D00A)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00010006)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR06) /* \_SB_.AR06 */
                    }

                    Return (PD06) /* \_SB_.PD06 */
                }

                Device (D00C)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00010007)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR07) /* \_SB_.AR07 */
                    }

                    Return (PD07) /* \_SB_.PD07 */
                }

                Device (D00E)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP7)
            {
                Name (_ADR, 0x00020001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR08) /* \_SB_.AR08 */
                    }

                    Return (PD08) /* \_SB_.PD08 */
                }

                Device (D010)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP8)
            {
                Name (_ADR, 0x00030001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR09) /* \_SB_.AR09 */
                    }

                    Return (PD09) /* \_SB_.PD09 */
                }

                Device (D012)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP9)
            {
                Name (_ADR, 0x00030002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0A) /* \_SB_.AR0A */
                    }

                    Return (PD0A) /* \_SB_.PD0A */
                }

                Device (D014)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPA)
            {
                Name (_ADR, 0x00030003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0B) /* \_SB_.AR0B */
                    }

                    Return (PD0B) /* \_SB_.PD0B */
                }

                Device (D016)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPB)
            {
                Name (_ADR, 0x00030004)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0C) /* \_SB_.AR0C */
                    }

                    Return (PD0C) /* \_SB_.PD0C */
                }

                Device (D018)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPC)
            {
                Name (_ADR, 0x00030005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0D) /* \_SB_.AR0D */
                    }

                    Return (PD0D) /* \_SB_.PD0D */
                }

                Device (D01A)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPD)
            {
                Name (_ADR, 0x00030006)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0E) /* \_SB_.AR0E */
                    }

                    Return (PD0E) /* \_SB_.PD0E */
                }

                Device (D01C)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPE)
            {
                Name (_ADR, 0x00030007)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0F) /* \_SB_.AR0F */
                    }

                    Return (PD0F) /* \_SB_.PD0F */
                }

                Device (D01E)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPF)
            {
                Name (_ADR, 0x00040001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR10) /* \_SB_.AR10 */
                    }

                    Return (PD10) /* \_SB_.PD10 */
                }

                Device (D020)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GP17)
            {
                Name (_ADR, 0x00070001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x19, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR11) /* \_SB_.AR11 */
                    }

                    Return (PD11) /* \_SB_.PD11 */
                }

                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                }

                Device (APSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (PSPB, 0xFD100000)
                    Name (_STA, 0x0F)  // _STA: Status
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y0F)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.GP17.APSP._Y0F._BAS, PBAS)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.GP17.APSP._Y0F._LEN, PLEN)  // _LEN: Length
                        PBAS = PSPB /* \_SB_.PCI0.GP17.APSP.PSPB */
                        PLEN = 0x00100000
                        Return (CRS) /* \_SB_.PCI0.GP17.APSP.CRS_ */
                    }
                }
            }

            Device (GP18)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR12) /* \_SB_.AR12 */
                    }

                    Return (PD12) /* \_SB_.PD12 */
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                }

                Device (SATA)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (D02D)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }
            }

            Device (D026)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
            }

            Device (SBRG)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (DMAD)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        DMA (Compatibility, BusMaster, Transfer8, )
                            {4}
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0087,             // Range Minimum
                            0x0087,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0089,             // Range Minimum
                            0x0089,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x008F,             // Range Minimum
                            0x008F,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x00,               // Alignment
                            0x20,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x00,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                }

                Device (RTC0)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.SBRG.RTC0.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.SBRG.RTC0.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                OperationRegion (SMI0, SystemIO, SMIO, One)
                Field (SMI0, ByteAcc, NoLock, Preserve)
                {
                    SMIC,   8
                }

                Scope (\_SB)
                {
                    Scope (PCI0)
                    {
                        Device (S900)
                        {
                            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                            Name (_UID, 0x0700)  // _UID: Unique ID
                            Name (_STA, 0x0F)  // _STA: Status
                            Name (CRS, ResourceTemplate ()
                            {
                                IO (Decode16,
                                    0x0010,             // Range Minimum
                                    0x0010,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0022,             // Range Minimum
                                    0x0022,             // Range Maximum
                                    0x00,               // Alignment
                                    0x1E,               // Length
                                    )
                                IO (Decode16,
                                    0x0063,             // Range Minimum
                                    0x0063,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0065,             // Range Minimum
                                    0x0065,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0067,             // Range Minimum
                                    0x0067,             // Range Maximum
                                    0x00,               // Alignment
                                    0x09,               // Length
                                    )
                                IO (Decode16,
                                    0x0072,             // Range Minimum
                                    0x0072,             // Range Maximum
                                    0x00,               // Alignment
                                    0x0E,               // Length
                                    )
                                IO (Decode16,
                                    0x0080,             // Range Minimum
                                    0x0080,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0084,             // Range Minimum
                                    0x0084,             // Range Maximum
                                    0x00,               // Alignment
                                    0x03,               // Length
                                    )
                                IO (Decode16,
                                    0x0088,             // Range Minimum
                                    0x0088,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x008C,             // Range Minimum
                                    0x008C,             // Range Maximum
                                    0x00,               // Alignment
                                    0x03,               // Length
                                    )
                                IO (Decode16,
                                    0x0090,             // Range Minimum
                                    0x0090,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x00A2,             // Range Minimum
                                    0x00A2,             // Range Maximum
                                    0x00,               // Alignment
                                    0x1E,               // Length
                                    )
                                IO (Decode16,
                                    0x00B1,             // Range Minimum
                                    0x00B1,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x00E0,             // Range Minimum
                                    0x00E0,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x04D0,             // Range Minimum
                                    0x04D0,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x040B,             // Range Minimum
                                    0x040B,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x04D6,             // Range Minimum
                                    0x04D6,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C00,             // Range Minimum
                                    0x0C00,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x0C14,             // Range Minimum
                                    0x0C14,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C50,             // Range Minimum
                                    0x0C50,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x0C52,             // Range Minimum
                                    0x0C52,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C6C,             // Range Minimum
                                    0x0C6C,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C6F,             // Range Minimum
                                    0x0C6F,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0CD8,             // Range Minimum
                                    0x0CD8,             // Range Maximum
                                    0x00,               // Alignment
                                    0x08,               // Length
                                    )
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y10)
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y12)
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y11)
                                IO (Decode16,
                                    0x0900,             // Range Minimum
                                    0x0900,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0910,             // Range Minimum
                                    0x0910,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0060,             // Range Minimum
                                    0x0060,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    )
                                IO (Decode16,
                                    0x0064,             // Range Minimum
                                    0x0064,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y13)
                                Memory32Fixed (ReadWrite,
                                    0xFEC01000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFEDC0000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFEE00000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFED80000,         // Address Base
                                    0x00010000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y14)
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y15)
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y16)
                            })
                            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                            {
                                CreateWordField (CRS, \_SB.PCI0.S900._Y10._MIN, PBB)  // _MIN: Minimum Base Address
                                CreateWordField (CRS, \_SB.PCI0.S900._Y10._MAX, PBH)  // _MAX: Maximum Base Address
                                CreateByteField (CRS, \_SB.PCI0.S900._Y10._LEN, PML)  // _LEN: Length
                                PBB = PMBS /* \PMBS */
                                PBH = PMBS /* \PMBS */
                                PML = PMLN /* \PMLN */
                                If (SMBB)
                                {
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y11._MIN, SMB1)  // _MIN: Minimum Base Address
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y11._MAX, SMH1)  // _MAX: Maximum Base Address
                                    CreateByteField (CRS, \_SB.PCI0.S900._Y11._LEN, SML1)  // _LEN: Length
                                    SMB1 = SMBB /* \SMBB */
                                    SMH1 = SMBB /* \SMBB */
                                    SML1 = SMBL /* \SMBL */
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y12._MIN, SMBZ)  // _MIN: Minimum Base Address
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y12._MAX, SMH0)  // _MAX: Maximum Base Address
                                    CreateByteField (CRS, \_SB.PCI0.S900._Y12._LEN, SML0)  // _LEN: Length
                                    SMBZ = SMB0 /* \SMB0 */
                                    SMH0 = SMB0 /* \SMB0 */
                                    SML0 = SMBM /* \SMBM */
                                }

                                If (APCB)
                                {
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y13._BAS, APB)  // _BAS: Base Address
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y13._LEN, APL)  // _LEN: Length
                                    APB = APCB /* \APCB */
                                    APL = APCL /* \APCL */
                                }

                                CreateDWordField (CRS, \_SB.PCI0.S900._Y14._BAS, SPIB)  // _BAS: Base Address
                                CreateDWordField (CRS, \_SB.PCI0.S900._Y14._LEN, SPIL)  // _LEN: Length
                                SPIB = 0xFEC10000
                                SPIL = 0x1000
                                If (WDTB)
                                {
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y15._BAS, WDTB)  // _BAS: Base Address
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y15._LEN, WDTL)  // _LEN: Length
                                    WDTB = \WDTB
                                    WDTL = \WDTL
                                }

                                CreateDWordField (CRS, \_SB.PCI0.S900._Y16._BAS, ROMB)  // _BAS: Base Address
                                CreateDWordField (CRS, \_SB.PCI0.S900._Y16._LEN, ROML)  // _LEN: Length
                                ROMB = 0xFF000000
                                ROML = 0x01000000
                                Return (CRS) /* \_SB_.PCI0.S900.CRS_ */
                            }
                        }
                    }
                }

                Scope (\_SB)
                {
                    Scope (PCI0)
                    {
                        Scope (SBRG)
                        {
                            Method (RRIO, 4, NotSerialized)
                            {
                                Debug = "RRIO"
                            }

                            Method (RDMA, 3, NotSerialized)
                            {
                                Debug = "rDMA"
                            }
                        }
                    }
                }

                Device (SIO1)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y17)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y18)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y19)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1A)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1B)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (((SP1O < 0x03F0) && (SP1O > 0xF0)))
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._MIN, GPI0)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._MAX, GPI1)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._LEN, GPIL)  // _LEN: Length
                            GPI0 = SP1O /* \SP1O */
                            GPI1 = SP1O /* \SP1O */
                            GPIL = 0x02
                        }

                        If (IO1B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._LEN, GPL1)  // _LEN: Length
                            GP10 = IO1B /* \IO1B */
                            GP11 = IO1B /* \IO1B */
                            GPL1 = IO1L /* \IO1L */
                        }

                        If (IO2B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._MIN, GP20)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._MAX, GP21)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._LEN, GPL2)  // _LEN: Length
                            GP20 = IO2B /* \IO2B */
                            GP21 = IO2B /* \IO2B */
                            GPL2 = IO2L /* \IO2L */
                        }

                        If (IO3B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._MIN, GP30)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._MAX, GP31)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._LEN, GPL3)  // _LEN: Length
                            GP30 = IO3B /* \IO3B */
                            GP31 = IO3B /* \IO3B */
                            GPL3 = IO3L /* \IO3L */
                        }

                        If (IO4B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._MIN, GP40)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._MAX, GP41)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._LEN, GPL4)  // _LEN: Length
                            GP40 = IO4B /* \IO4B */
                            GP41 = IO4B /* \IO4B */
                            GPL4 = IO4L /* \IO4L */
                        }

                        Return (CRS) /* \_SB_.PCI0.SBRG.SIO1.CRS_ */
                    }

                    Name (DCAT, Package (0x15)
                    {
                        0x02, 
                        0x03, 
                        One, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0x06, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF
                    })
                    Mutex (MUT0, 0x00)
                    Method (ENFG, 1, NotSerialized)
                    {
                        Acquire (MUT0, 0x0FFF)
                        INDX = ENTK /* \ENTK */
                        INDX = ENTK /* \ENTK */
                        LDN = Arg0
                    }

                    Method (EXFG, 0, NotSerialized)
                    {
                        INDX = EXTK /* \EXTK */
                        Release (MUT0)
                    }

                    Method (LPTM, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT0 & 0x02)
                        EXFG ()
                        Return (Local0)
                    }

                    Method (UHID, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT1 & 0x10)
                        EXFG ()
                        If (Local0)
                        {
                            Return (0x1005D041)
                        }
                        Else
                        {
                            Return (0x0105D041)
                        }
                    }

                    OperationRegion (IOID, SystemIO, SP1O, 0x02)
                    Field (IOID, ByteAcc, NoLock, Preserve)
                    {
                        INDX,   8, 
                        DATA,   8
                    }

                    IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x07), 
                        LDN,    8, 
                        Offset (0x21), 
                        SCF1,   8, 
                        SCF2,   8, 
                        SCF3,   8, 
                        SCF4,   8, 
                        SCF5,   8, 
                        SCF6,   8, 
                        Offset (0x29), 
                        CKCF,   8, 
                        Offset (0x2D), 
                        CR2D,   8, 
                        Offset (0x30), 
                        ACTR,   8, 
                        Offset (0x60), 
                        IOAH,   8, 
                        IOAL,   8, 
                        IOH2,   8, 
                        IOL2,   8, 
                        Offset (0x70), 
                        INTR,   4, 
                        INTT,   4, 
                        Offset (0x74), 
                        DMCH,   8, 
                        Offset (0xE0), 
                        RGE0,   8, 
                        RGE1,   8, 
                        RGE2,   8, 
                        RGE3,   8, 
                        RGE4,   8, 
                        RGE5,   8, 
                        RGE6,   8, 
                        RGE7,   8, 
                        RGE8,   8, 
                        RGE9,   8, 
                        Offset (0xF0), 
                        OPT0,   8, 
                        OPT1,   8, 
                        OPT2,   8, 
                        OPT3,   8, 
                        OPT4,   8, 
                        OPT5,   8, 
                        OPT6,   8, 
                        OPT7,   8, 
                        OPT8,   8, 
                        OPT9,   8
                    }

                    Method (CGLD, 1, NotSerialized)
                    {
                        Return (DerefOf (DCAT [Arg0]))
                    }

                    Method (DSTA, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = ACTR /* \_SB_.PCI0.SBRG.SIO1.ACTR */
                        EXFG ()
                        If ((Local0 == 0xFF))
                        {
                            Return (Zero)
                        }

                        Local0 &= One
                        If ((Arg0 < 0x10))
                        {
                            IOST |= (Local0 << Arg0)
                        }

                        If (Local0)
                        {
                            Return (0x0F)
                        }
                        ElseIf ((Arg0 < 0x10))
                        {
                            If (((One << Arg0) & IOST))
                            {
                                Return (0x0D)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (ESTA, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = ACTR /* \_SB_.PCI0.SBRG.SIO1.ACTR */
                        EXFG ()
                        If ((Local0 == 0xFF))
                        {
                            Return (Zero)
                        }

                        Local0 &= One
                        If ((Arg0 > 0x0F))
                        {
                            IOES |= (Local0 << (Arg0 & 0x0F))
                        }

                        If (Local0)
                        {
                            Return (0x0F)
                        }
                        ElseIf ((Arg0 > 0x0F))
                        {
                            If (((One << (Arg0 & 0x0F)) & IOES))
                            {
                                Return (0x0D)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (DCNT, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        If (((DMCH < 0x04) && ((Local1 = (DMCH & 0x03)) != Zero)))
                        {
                            RDMA (Arg0, Arg1, Local1++)
                        }

                        ACTR = Arg1
                        Local1 = (IOAH << 0x08)
                        Local1 |= IOAL
                        RRIO (Arg0, Arg1, Local1, 0x08)
                        EXFG ()
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y1E)
                        IRQNoFlags (_Y1C)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y1D)
                            {}
                    })
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1C._INT, IRQM)  // _INT: Interrupts
                    CreateByteField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1D._DMA, DMAM)  // _DMA: Direct Memory Access
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._MIN, IO11)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._MAX, IO12)  // _MAX: Maximum Base Address
                    CreateByteField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._LEN, LEN1)  // _LEN: Length
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y21)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y22)
                        IRQNoFlags (_Y1F)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y20)
                            {}
                    })
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y1F._INT, IRQE)  // _INT: Interrupts
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y20._DMA, DMAE)  // _DMA: Direct Memory Access
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._MIN, IO21)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._MAX, IO22)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._LEN, LEN2)  // _LEN: Length
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._MIN, IO31)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._MAX, IO32)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._LEN, LEN3)  // _LEN: Length
                    Name (CRS3, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y25)
                        IRQ (Level, ActiveLow, Shared, _Y23)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y24)
                            {}
                    })
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y23._INT, IRQT)  // _INT: Interrupts
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y23._HE, IRQS)  // _HE_: High-Edge
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y24._DMA, DMAT)  // _DMA: Direct Memory Access
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._MIN, IO41)  // _MIN: Minimum Base Address
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._MAX, IO42)  // _MAX: Maximum Base Address
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._LEN, LEN4)  // _LEN: Length
                    Method (DCRS, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO11 = (IOAH << 0x08)
                        IO11 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO11 */
                        IO12 = IO11 /* \_SB_.PCI0.SBRG.SIO1.IO11 */
                        LEN1 = 0x08
                        If (INTR)
                        {
                            IRQM = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQM = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAM = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAM = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS1) /* \_SB_.PCI0.SBRG.SIO1.CRS1 */
                    }

                    Method (DCR2, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO21 = (IOAH << 0x08)
                        IO21 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO21 */
                        IO22 = IO21 /* \_SB_.PCI0.SBRG.SIO1.IO21 */
                        LEN2 = 0x08
                        IO31 = (IOH2 << 0x08)
                        IO31 |= IOL2 /* \_SB_.PCI0.SBRG.SIO1.IO31 */
                        IO32 = IO31 /* \_SB_.PCI0.SBRG.SIO1.IO31 */
                        LEN3 = 0x08
                        If (INTR)
                        {
                            IRQE = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQE = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAE = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAE = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS2) /* \_SB_.PCI0.SBRG.SIO1.CRS2 */
                    }

                    Method (DCR3, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO41 = (IOAH << 0x08)
                        IO41 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO41 */
                        IO42 = IO41 /* \_SB_.PCI0.SBRG.SIO1.IO41 */
                        LEN4 = 0x08
                        If (INTR)
                        {
                            IRQT = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQT = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAT = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAT = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS3) /* \_SB_.PCI0.SBRG.SIO1.CRS3 */
                    }

                    Method (DSRS, 2, NotSerialized)
                    {
                        If (((Arg1 == 0x02) & LPTM (Arg1)))
                        {
                            DSR2 (Arg0, Arg1)
                        }
                        Else
                        {
                            CreateWordField (Arg0, 0x09, IRQM)
                            CreateByteField (Arg0, 0x0C, DMAM)
                            CreateWordField (Arg0, 0x02, IO11)
                            ENFG (CGLD (Arg1))
                            IOAL = (IO11 & 0xFF)
                            IOAH = (IO11 >> 0x08)
                            If (IRQM)
                            {
                                FindSetRightBit (IRQM, Local0)
                                INTR = (Local0 - One)
                            }
                            Else
                            {
                                INTR = Zero
                            }

                            If (DMAM)
                            {
                                FindSetRightBit (DMAM, Local0)
                                DMCH = (Local0 - One)
                            }
                            Else
                            {
                                DMCH = 0x04
                            }

                            EXFG ()
                            DCNT (Arg1, One)
                        }
                    }

                    Method (DSR2, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x11, IRQE)
                        CreateByteField (Arg0, 0x14, DMAE)
                        CreateWordField (Arg0, 0x02, IO21)
                        CreateWordField (Arg0, 0x0A, IO31)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO21 & 0xFF)
                        IOAH = (IO21 >> 0x08)
                        IOL2 = (IO31 & 0xFF)
                        IOH2 = (IO31 >> 0x08)
                        If (IRQE)
                        {
                            FindSetRightBit (IRQE, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAE)
                        {
                            FindSetRightBit (DMAE, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                    }

                    Method (DSR3, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x02, IO41)
                        CreateWordField (Arg0, 0x09, IRQT)
                        CreateByteField (Arg0, 0x0B, IRQS)
                        CreateByteField (Arg0, 0x0D, DMAT)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO41 & 0xFF)
                        IOAH = (IO41 >> 0x08)
                        If (IRQT)
                        {
                            FindSetRightBit (IRQT, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAT)
                        {
                            FindSetRightBit (DMAT, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                    }

                    Name (PMFG, Zero)
                    Method (SIOS, 1, NotSerialized)
                    {
                        Debug = "SIOS"
                        If ((0x05 != Arg0))
                        {
                            ENFG (0x0A)
                            OPT6 = Zero
                            OPT7 = Zero
                            If (KBFG)
                            {
                                OPT6 |= 0x10
                            }
                            Else
                            {
                                OPT6 &= 0xEF
                            }

                            If (MSFG)
                            {
                                OPT6 |= 0x20
                            }
                            Else
                            {
                                OPT6 &= 0xDF
                            }

                            OPT3 = 0xFF
                            OPT4 = 0xFF
                            Local0 = (One | OPT2) /* \_SB_.PCI0.SBRG.SIO1.OPT2 */
                            OPT2 = Local0
                            EXFG ()
                        }
                    }

                    Method (SIOW, 1, NotSerialized)
                    {
                        Debug = "SIOW"
                        ENFG (0x0A)
                        OPT3 = 0xFF
                        OPT6 &= 0xCF
                        OPT2 &= 0xFE
                        EXFG ()
                    }

                    Method (SIOH, 0, NotSerialized)
                    {
                        If ((PMFG & 0x08))
                        {
                            Notify (PS2K, 0x02) // Device Wake
                        }

                        If ((PMFG & 0x10))
                        {
                            Notify (PS2M, 0x02) // Device Wake
                        }
                    }
                }

                Device (PS2K)
                {
                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x0060,             // Range Minimum
                                0x0060,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IO (Decode16,
                                0x0064,             // Range Minimum
                                0x0064,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IRQNoFlags ()
                                {1}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        KBFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (KBFG, One)
                    }
                }

                Device (PS2M)
                {
                    Name (_HID, EisaId ("PNP0F03") /* Microsoft PS/2-style Mouse */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x4000))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {12}
                    })
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {12}
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (CRS1) /* \_SB_.PCI0.SBRG.PS2M.CRS1 */
                        }
                        Else
                        {
                            Return (CRS2) /* \_SB_.PCI0.SBRG.PS2M.CRS2 */
                        }
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        MSFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (MSFG, One)
                    }
                }

                Device (UAR1)
                {
                    Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x02)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (^^SIO1.DSTA (Zero))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        ^^SIO1.DCNT (Zero, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (^^SIO1.DCRS (Zero, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        ^^SIO1.DSRS (Arg0, Zero)
                    }

                    Name (_DDN, "COM1")  // _DDN: DOS Device Name
                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (HHMD)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (LDN, 0x0B)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (SDIO)
            {
                Name (_ADR, 0x00140007)  // _ADR: Address
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x08, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR03) /* \_SB_.AR03 */
                    }

                    Return (PD03) /* \_SB_.PD03 */
                }

                Device (PT01)
                {
                    Name (_ADR, One)  // _ADR: Address
                }

                Device (PT02)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Device (PT20)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (D03E)
                        {
                            Name (_ADR, 0xFF)  // _ADR: Address
                        }
                    }

                    Device (PT22)
                    {
                        Name (_ADR, 0x00020000)  // _ADR: Address
                        Device (D040)
                        {
                            Name (_ADR, 0xFF)  // _ADR: Address
                        }
                    }

                    Device (PT23)
                    {
                        Name (_ADR, 0x00030000)  // _ADR: Address
                        Device (D041)
                        {
                            Name (_ADR, 0xFF)  // _ADR: Address
                        }
                    }

                    Device (PT24)
                    {
                        Name (_ADR, 0x00040000)  // _ADR: Address
                        Device (D042)
                        {
                            Name (_ADR, 0xFF)  // _ADR: Address
                        }
                    }

                    Device (PT25)
                    {
                        Name (_ADR, 0x00050000)  // _ADR: Address
                    }

                    Device (PT26)
                    {
                        Name (_ADR, 0x00060000)  // _ADR: Address
                    }

                    Device (PT27)
                    {
                        Name (_ADR, 0x00070000)  // _ADR: Address
                    }

                    Device (PT21)
                    {
                        Name (_ADR, 0x00010000)  // _ADR: Address
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            Return (GPRW (0x08, One))
                        }

                        Device (D03F)
                        {
                            Name (_ADR, 0xFF)  // _ADR: Address
                        }
                    }
                }

                Device (PTXH)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x04))
                    }

                    Device (RHUB)
                    {
                        Method (TPLD, 2, Serialized)
                        {
                            Name (PCKG, Package (0x01)
                            {
                                Buffer (0x14){}
                            })
                            CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
                            REV = One
                            CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
                            VISI = Arg0
                            CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
                            GPOS = Arg1
                            CreateField (DerefOf (PCKG [Zero]), 0x80, 0x20, VHOS)
                            VHOS = 0xFFFFFFFF
                            CreateField (DerefOf (PCKG [Zero]), 0x4A, 0x04, SHAP)
                            SHAP = One
                            CreateField (DerefOf (PCKG [Zero]), 0x20, 0x10, WID)
                            WID = 0x08
                            CreateField (DerefOf (PCKG [Zero]), 0x30, 0x10, HGT)
                            HGT = 0x03
                            Return (PCKG) /* \_SB_.PCI0.GPP2.PTXH.RHUB.TPLD.PCKG */
                        }

                        Name (_ADR, Zero)  // _ADR: Address
                        Device (POT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x09, 
                                Zero, 
                                Zero
                            })
                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (TPLD (One, One))
                            }
                        }

                        Device (POT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x09, 
                                Zero, 
                                Zero
                            })
                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (TPLD (One, One))
                            }
                        }

                        Device (POT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x2,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x2,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x3,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x3,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x4,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x4,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (POT9)
                        {
                            Name (_ADR, 0x09)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x5,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO10)
                        {
                            Name (_ADR, 0x0A)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x6,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO11)
                        {
                            Name (_ADR, 0x0B)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x7,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO12)
                        {
                            Name (_ADR, 0x0C)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x8,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO13)
                        {
                            Name (_ADR, 0x0D)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x9,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO14)
                        {
                            Name (_ADR, 0x0E)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x1,
                                    PLD_Lid                = 0x1,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xA,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO15)
                        {
                            Name (_ADR, 0x0F)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x1,
                                    PLD_Lid                = 0x1,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xB,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO16)
                        {
                            Name (_ADR, 0x10)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x1,
                                    PLD_Lid                = 0x1,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xC,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO17)
                        {
                            Name (_ADR, 0x11)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xD,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO18)
                        {
                            Name (_ADR, 0x12)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xE,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PO19)
                        {
                            Name (_ADR, 0x13)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0xF,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }
                    }
                }
            }
        }
    }

    Scope (_GPE)
    {
        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP4, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP6, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP7, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP8, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP9, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPA, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPB, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPC, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPD, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPE, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPPF, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP18, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2.PT02.PT21, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GP17, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2.PTXH, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Name (_UID, 0xAA)  // _UID: Unique ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S3, Package (0x04)  // _S3_: S3 System State
    {
        0x03, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })
    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        If (Arg0)
        {
            \_SB.TPM.TPTS (Arg0)
            MPTS (Arg0, \_SB.PCI0.GPTS (Arg0), \_SB.PCI0.NPTS (Arg0), SPTS (Arg0))
        }
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        DBG8 = (Arg0 << 0x04)
        SWAK (Arg0)
        DBG8 = (Arg0 << 0x04)
        \_SB.PCI0.NWAK (Arg0)
        \_SB.PCI0.GWAK (Arg0)
        MWAK (Arg0)
        Return (WAKP) /* \WAKP */
    }

    Scope (_SB)
    {
        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x0C), 
            SIRA,   8, 
            SIRB,   8, 
            SIRC,   8, 
            SIRD,   8, 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x17), 
            SDCL,   8, 
            Offset (0x1A), 
            SDIO,   8, 
            Offset (0x30), 
            USB1,   8, 
            Offset (0x34), 
            USB3,   8, 
            Offset (0x41), 
            SATA,   8, 
            Offset (0x62), 
            GIOC,   8, 
            Offset (0x70), 
            I2C0,   8, 
            I2C1,   8, 
            I2C2,   8, 
            I2C3,   8, 
            URT0,   8, 
            URT1,   8, 
            Offset (0x80), 
            AIRA,   8, 
            AIRB,   8, 
            AIRC,   8, 
            AIRD,   8, 
            AIRE,   8, 
            AIRF,   8, 
            AIRG,   8, 
            AIRH,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
            Local1 = PD64 /* \_SB_.PD64 */
            AIRA = 0x10
            AIRB = 0x11
            AIRC = 0x12
            AIRD = 0x13
            AIRE = 0x14
            AIRF = 0x15
            AIRG = 0x16
            AIRH = 0x17
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            HDAD = Arg0
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            USB1 = Arg0
            USB3 = Arg0
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            SATA = Arg0
        }

        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Name (IPRA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRB, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRC, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRD, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRA)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSA) /* \_SB_.PRSA */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTA (Local0)
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRB)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSB) /* \_SB_.PRSB */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTB (Local0)
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRC)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSC) /* \_SB_.PRSC */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTC (Local0)
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRD)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSD) /* \_SB_.PRSD */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTD (Local0)
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRE)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSE) /* \_SB_.PRSE */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (PIRE, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRF)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSF) /* \_SB_.PRSF */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRG)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSG) /* \_SB_.PRSG */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRH)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSH) /* \_SB_.PRSH */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }
    }

    Device (HPET)
    {
        Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((HPEN == One))
            {
                If ((OSVR >= 0x0C))
                {
                    Return (0x0F)
                }

                HPEN = Zero
                Return (One)
            }

            Return (One)
        }

        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
        {
            Name (BUF0, ResourceTemplate ()
            {
                IRQNoFlags ()
                    {0}
                IRQNoFlags ()
                    {8}
                Memory32Fixed (ReadOnly,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    )
            })
            Return (BUF0) /* \HPET._CRS.BUF0 */
        }
    }

    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Scope (_SB.PCI0)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            If ((PICM != Zero))
            {
                DSPI ()
                NAPE ()
            }

            OSTP ()
            OSFL ()
        }
    }

    Name (TSOS, 0x75)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }
    }

    Scope (_SB)
    {
        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
                ,   5, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
                ,   3, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            Offset (0x1F), 
            IM1F,   8, 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, Zero, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Arg1 = IUA0 /* \_SB_.IUA0 */
            }

            If ((Arg0 == One))
            {
                Arg1 = IUA1 /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Arg1 = IUA2 /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Arg1 = IUA3 /* \_SB_.IUA3 */
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg0 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local3 = (One << Arg0)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    PG1A = One
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                    PG1A = Zero
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC9000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC7000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (IER0)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCA000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC8000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (UOL1)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDCE000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCC000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (UOL2)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCF000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCD000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (UOL3)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDC4000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {6}
                Memory32Fixed (ReadWrite,
                    0xFEDC5000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {14}
                Memory32Fixed (ReadWrite,
                    0xFEDC6000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC4E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {15}
                Memory32Fixed (ReadWrite,
                    0xFEDCB000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC5E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = Zero
            IM15 = One
            IM16 = One
            IM20 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            IM4A = One
            IM58 = One
            IM4B = One
            IM57 = One
            IM6D = One
            IM1F = One
            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCICC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If (EMMD)
                {
                    Return (SHID) /* \_SB_.SHID */
                }
                Else
                {
                    Return (AHID) /* \_SB_.AHID */
                }
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If (EMMD)
                {
                    Return (SCID) /* \_SB_.SCID */
                }
                Else
                {
                    Return (ACID) /* \_SB_.ACID */
                }
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    Return (DCRS) /* \_SB_.DCRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, Zero)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }
        }

        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER0)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y26)
                    IRQNoFlags (_Y27)
                        {3}
                })
                CreateByteField (BUF0, \_SB.UAR1._CRS._Y26._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR1._CRS._Y26._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR1._CRS._Y27._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR0, IRQL)
                Return (BUF0) /* \_SB_.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER1)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y28)
                    IRQNoFlags (_Y29)
                        {4}
                })
                CreateByteField (BUF0, \_SB.UAR2._CRS._Y28._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR2._CRS._Y28._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR2._CRS._Y29._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR1, IRQL)
                Return (BUF0) /* \_SB_.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER2)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y2A)
                    IRQNoFlags (_Y2B)
                        {3}
                })
                CreateByteField (BUF0, \_SB.UAR3._CRS._Y2A._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR3._CRS._Y2A._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR3._CRS._Y2B._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR2, IRQL)
                Return (BUF0) /* \_SB_.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER3)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y2C)
                    IRQNoFlags (_Y2D)
                        {4}
                })
                CreateByteField (BUF0, \_SB.UAR4._CRS._Y2C._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR4._CRS._Y2C._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR4._CRS._Y2D._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR3, IRQL)
                Return (BUF0) /* \_SB_.UAR4._CRS.BUF0 */
            }
        }
    }

    Device (_SB.TPM)
    {
        Name (TMRQ, 0xFFFFFFFF)
        Name (TLVL, 0xFFFFFFFF)
        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {
            If (TCMF)
            {
                Return (0x01013469)
            }
            ElseIf ((TTDP == Zero))
            {
                Return (0x310CD041)
            }
            Else
            {
                Return ("MSFT0101")
            }
        }

        Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
        {
            If ((TCMF == Zero))
            {
                If ((TTDP == Zero))
                {
                    Return (0x310CD041)
                }
                Else
                {
                    Return ("MSFT0101")
                }
            }
        }

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)
        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            ACC0,   8, 
            Offset (0x08), 
            INTE,   32, 
            INTV,   8, 
            Offset (0x10), 
            INTS,   32, 
            INTF,   32, 
            TSTS,   32, 
            Offset (0x24), 
            FIFO,   32, 
            Offset (0x30), 
            IDTF,   32, 
            Offset (0x4C), 
            SCMD,   32
        }

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {
            If ((TTDP == Zero))
            {
                Return (Unicode ("TPM 1.2 Device"))
            }
            Else
            {
                Return (Unicode ("TPM 2.0 Device"))
            }
        }

        Name (_UID, One)  // _UID: Unique ID
        Name (CRST, ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0x00000000,         // Address Base
                0x00001000,         // Address Length
                _Y2E)
            Memory32Fixed (ReadOnly,
                0xFED70000,         // Address Base
                0x00001000,         // Address Length
                _Y2F)
        })
        Name (CRSD, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y30)
        })
        Name (CRID, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y31)
        })
        Name (CREI, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                )
            GpioInt (Level, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                "\\_SB.GPIO", 0x00, ResourceConsumer, _Y32,
                )
                {   // Pin list
                    0x0000
                }
        })
        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {
            If ((AMDT == One))
            {
                CreateDWordField (CRST, \_SB.TPM._Y2E._BAS, MTFB)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y2E._LEN, LTFB)  // _LEN: Length
                MTFB = TPMB /* \TPMB */
                LTFB = TPBS /* \TPBS */
                CreateDWordField (CRST, \_SB.TPM._Y2F._BAS, MTFC)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y2F._LEN, LTFC)  // _LEN: Length
                MTFC = TPMC /* \TPMC */
                LTFC = TPCS /* \TPCS */
                Return (CRST) /* \_SB_.TPM_.CRST */
            }
            Else
            {
                If ((DTPT == One))
                {
                    CreateDWordField (CRSD, \_SB.TPM._Y30._BAS, MTFE)  // _BAS: Base Address
                    CreateDWordField (CRSD, \_SB.TPM._Y30._LEN, LTFE)  // _LEN: Length
                    MTFE = 0xFED40000
                    LTFE = 0x5000
                    Return (CRSD) /* \_SB_.TPM_.CRSD */
                }
                ElseIf ((TTPF == One))
                {
                    If ((TMRQ == 0xFFFFFFFF))
                    {
                        CreateDWordField (CRID, \_SB.TPM._Y31._BAS, MTFD)  // _BAS: Base Address
                        CreateDWordField (CRID, \_SB.TPM._Y31._LEN, LTFD)  // _LEN: Length
                        MTFD = 0xFED40000
                        LTFD = 0x5000
                        Return (CRID) /* \_SB_.TPM_.CRID */
                    }
                    Else
                    {
                        CreateWordField (CREI, 0x23, LIRQ)
                        CreateBitField (CREI, \_SB.TPM._Y32._POL, LLVL)  // _POL: Polarity
                        LIRQ = TMRQ /* \_SB_.TPM_.TMRQ */
                        LLVL = TLVL /* \_SB_.TPM_.TLVL */
                        Return (CREI) /* \_SB_.TPM_.CREI */
                    }
                }
                ElseIf ((TTPF == Zero))
                {
                    CreateDWordField (CRST, \_SB.TPM._Y2F._BAS, MTFF)  // _BAS: Base Address
                    MTFF = FTPM /* \FTPM */
                    Return (CRST) /* \_SB_.TPM_.CRST */
                }

                MTFE = Zero
                LTFE = Zero
                Return (CRID) /* \_SB_.TPM_.CRID */
            }

            Return (CRID) /* \_SB_.TPM_.CRID */
        }

        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
        {
            If (((TMRQ != Zero) && (TMRQ != 0xFFFFFFFF)))
            {
                CreateWordField (Arg0, 0x23, IRQ0)
                CreateWordField (CREI, 0x23, LIRQ)
                LIRQ = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                TMRQ = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                CreateBitField (Arg0, 0x98, ITRG)
                CreateBitField (CREI, \_SB.TPM._Y32._MOD, LTRG)  // _MOD: Mode
                LTRG = ITRG /* \_SB_.TPM_._SRS.ITRG */
                CreateBitField (Arg0, 0x99, ILVL)
                CreateBitField (CREI, \_SB.TPM._Y32._POL, LLVL)  // _POL: Polarity
                LLVL = ILVL /* \_SB_.TPM_._SRS.ILVL */
                If ((((IDTF & 0x0F) == Zero) || ((IDTF & 0x0F
                    ) == 0x0F)))
                {
                    If ((IRQ0 < 0x10))
                    {
                        INTV = (IRQ0 & 0x0F)
                    }

                    If ((ITRG == One))
                    {
                        INTE |= 0x10
                    }
                    Else
                    {
                        INTE &= 0xFFFFFFEF
                    }

                    If ((ILVL == Zero))
                    {
                        INTE |= 0x08
                    }
                    Else
                    {
                        INTE &= 0xFFFFFFF7
                    }
                }
            }
        }

        OperationRegion (CRBD, SystemMemory, TPMM, 0x48)
        Field (CRBD, AnyAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            HERR,   32, 
            Offset (0x40), 
            HCMD,   32, 
            HSTS,   32
        }

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((TTDP == Zero))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
            ElseIf ((TTDP == One))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Return (Zero)
        }

        Method (STRT, 3, Serialized)
        {
            OperationRegion (TPMR, SystemMemory, FTPM, 0x1000)
            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }

            Name (TIMR, Zero)
            If ((ToInteger (Arg0) != Zero)){}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    TIMR = Zero
                    If ((AMDT == One))
                    {
                        While (((BEGN == One) && (TIMR < 0x0200)))
                        {
                            If ((BEGN == One))
                            {
                                Sleep (One)
                                TIMR++
                            }
                        }
                    }
                    ElseIf ((((HSTS & 0x02) | (HSTS & One)
                        ) == 0x03))
                    {
                        HCMD = One
                    }
                    Else
                    {
                        FERR = One
                        BEGN = Zero
                    }

                    Return (Zero)
                }

            }

            Return (One)
        }

        Method (CRYF, 3, Serialized)
        {
            If ((ToInteger (Arg0) != One)){}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    Name (TPMV, Package (0x02)
                    {
                        One, 
                        Package (0x02)
                        {
                            One, 
                            0x20
                        }
                    })
                    If ((_STA () == Zero))
                    {
                        Return (Package (0x01)
                        {
                            Zero
                        })
                    }

                    Return (TPMV) /* \_SB_.TPM_.CRYF.TPMV */
                }

            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (_SB.TPM)
    {
        OperationRegion (TSMI, SystemIO, SMIA, 0x02)
        Field (TSMI, WordAcc, NoLock, Preserve)
        {
            SMI,    16
        }

        OperationRegion (ATNV, SystemMemory, PPIM, PPIL)
        Field (ATNV, AnyAcc, NoLock, Preserve)
        {
            RQST,   32, 
            RCNT,   32, 
            ERRO,   32, 
            FLAG,   32, 
            MISC,   32, 
            OPTN,   32, 
            SRSP,   32
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        If ((PPIV == Zero))
                        {
                            Return ("1.2")
                        }
                        Else
                        {
                            Return ("1.3")
                        }
                    }
                    Case (0x02)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        SRSP = Zero
                        FLAG = 0x02
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x03)
                    {
                        Name (PPI1, Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        PPI1 [One] = RQST /* \_SB_.TPM_.RQST */
                        Return (PPI1) /* \_SB_.TPM_._DSM.PPI1 */
                    }
                    Case (0x04)
                    {
                        Return (TRST) /* \TRST */
                    }
                    Case (0x05)
                    {
                        Name (PPI2, Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        SRSP = Zero
                        FLAG = 0x05
                        SMI = OFST /* \OFST */
                        PPI2 [One] = RCNT /* \_SB_.TPM_.RCNT */
                        PPI2 [0x02] = ERRO /* \_SB_.TPM_.ERRO */
                        Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x07
                        OPTN = Zero
                        If ((RQST == 0x17))
                        {
                            ToInteger (DerefOf (Arg3 [One]), OPTN) /* \_SB_.TPM_.OPTN */
                        }

                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x08)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x08
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }
            ElseIf ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x09
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }

            If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
            {
                Return (CRYF (Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4") /* Unknown UUID */))
            {
                Return (STRT (Arg1, Arg2, Arg3))
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Method (TPTS, 1, Serialized)
        {
            Switch (ToInteger (Arg0))
            {
                Case (0x04)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }
                Case (0x05)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }

            }

            Sleep (0x012C)
        }
    }

    Name (XUPC, Package (0x04)
    {
        0xFF, 
        0xFF, 
        Zero, 
        Zero
    })
    Name (XUP1, Package (0x04)
    {
        Zero, 
        0xFF, 
        Zero, 
        Zero
    })
    Name (XPLD, Buffer (0x10)
    {
        /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0008 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
    })
    Name (NPLD, Zero)
    Name (WPLD, Package (0x01)
    {
        Buffer (0x14)
        {
            /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
            /* 0008 */  0x25, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
            /* 0010 */  0x2C, 0x01, 0xBE, 0x00                           // ,...
        }
    })
    Name (DPLD, Package (0x01)
    {
        Buffer (0x10)
        {
            /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0xB0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        }
    })
    Name (BPLD, Package (0x01)
    {
        Buffer (0x14)
        {
            /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x00,  // ....d.d.
            /* 0008 */  0x24, 0x41, 0x80, 0x01, 0x00, 0x00, 0x04, 0x00,  // $A......
            /* 0010 */  0x00, 0x03, 0xAB, 0x02                           // ....
        }
    })
    Name (CPLD, Package (0x01)
    {
        Buffer (0x14)
        {
            /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // ........
            /* 0008 */  0x25, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // %.......
            /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
        }
    })
    Scope (_SB.PCI0.GP17.XHC0)
    {
        Device (RHUB)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Device (PRT1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "UPPER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT2)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x2,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT3)
            {
                Name (_ADR, 0x03)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "UNKNOWN",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x3,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT4)
            {
                Name (_ADR, 0x04)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "CENTER",
                        PLD_Shape              = "UNKNOWN",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x4,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT5)
            {
                Name (_ADR, 0x05)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "UPPER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT6)
            {
                Name (_ADR, 0x06)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x2,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT7)
            {
                Name (_ADR, 0x07)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "UNKNOWN",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x3,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT8)
            {
                Name (_ADR, 0x08)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "LOWER",
                        PLD_HorizontalPosition = "CENTER",
                        PLD_Shape              = "UNKNOWN",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x4,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }
        }
    }

    Scope (_SB)
    {
        Device (WMIO)
        {
            Mutex (WMIX, 0x01)
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "MFBI")  // _UID: Unique ID
            Name (BUF4, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            CreateByteField (BUF4, Zero, BF00)
            CreateByteField (BUF4, One, BF01)
            CreateByteField (BUF4, 0x02, BF02)
            CreateByteField (BUF4, 0x03, BF03)
            Name (_WDG, Buffer (0x14)
            {
                /* 0000 */  0xCE, 0x93, 0x05, 0xA8, 0x77, 0x23, 0xDA, 0x11,  // ....w#..
                /* 0008 */  0xB0, 0x12, 0xB6, 0x22, 0x20, 0x12, 0x07, 0x27,  // ..." ..'
                /* 0010 */  0x4D, 0x49, 0x01, 0x02                           // MI..
            })
            OperationRegion (CMOS, SystemIO, 0x72, 0x02)
            Field (CMOS, ByteAcc, NoLock, Preserve)
            {
                CMIN,   8, 
                CMDA,   8
            }

            IndexField (CMIN, CMDA, ByteAcc, NoLock, Preserve)
            {
                Offset (0xD9), 
                WDFH,   8
            }

            Method (WMMI, 3, NotSerialized)
            {
                If ((Arg1 == 0xFB))
                {
                    BUF4 = Arg2
                    If ((BF00 == Zero))
                    {
                        BUF4 = Zero
                        BF02 = One
                        Return (BUF4) /* \_SB_.WMIO.BUF4 */
                    }

                    If ((BF00 == One))
                    {
                        BUF4 = Zero
                        BF00 = SMIP /* \SMIP */
                        Return (BUF4) /* \_SB_.WMIO.BUF4 */
                    }

                    If ((BF00 == 0x02))
                    {
                        BUF4 = Zero
                        BF00 = FESI /* \FESI */
                        BF01 = FDSI /* \FDSI */
                        BF02 = FSSI /* \FSSI */
                        Return (BUF4) /* \_SB_.WMIO.BUF4 */
                    }

                    If ((BF00 == 0x03))
                    {
                        CMIN = 0xD9
                        BF00 = CMDA /* \_SB_.WMIO.CMDA */
                        If ((BF00 & One))
                        {
                            BF00 = One
                            Return (BUF4) /* \_SB_.WMIO.BUF4 */
                        }
                        Else
                        {
                            BF00 = Zero
                            Return (BUF4) /* \_SB_.WMIO.BUF4 */
                        }
                    }
                }

                Return (0xFFFFFFFF)
            }
        }
    }

    Scope (_SB)
    {
        Device (WMIC)
        {
            Mutex (MWMI, 0x00)
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "WMIC")  // _UID: Unique ID
            Name (WMIO, 0xBCE02718)
            Name (WQBA, Buffer (0x06CF)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xBF, 0x06, 0x00, 0x00, 0x88, 0x2B, 0x00, 0x00,  // .....+..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xD1, 0x94, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0B, 0x10, 0x0A, 0x0B, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x3C, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .P<...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x06, 0x88, 0x14, 0x40, 0x48, 0x22, 0x84,  // 1...@H".
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x68, 0x73, 0x02, 0x32,  // ..."hs.2
                /* 0068 */  0x0D, 0x25, 0xA0, 0xC2, 0x31, 0x84, 0xD4, 0xF2,  // .%..1...
                /* 0070 */  0x1C, 0xA4, 0x1D, 0x49, 0x83, 0x88, 0x92, 0xC0,  // ...I....
                /* 0078 */  0x02, 0x47, 0x80, 0x12, 0x33, 0x02, 0x94, 0x4E,  // .G..3..N
                /* 0080 */  0x64, 0xC1, 0xB7, 0x88, 0x2C, 0xA1, 0x28, 0x9A,  // d...,.(.
                /* 0088 */  0x44, 0x94, 0x04, 0xD1, 0xFB, 0x46, 0xD0, 0x90,  // D....F..
                /* 0090 */  0xCA, 0x15, 0xE0, 0x5D, 0x80, 0xED, 0x11, 0x88,  // ...]....
                /* 0098 */  0xC0, 0xF0, 0x3C, 0xA6, 0x09, 0x10, 0x16, 0x63,  // ..<....c
                /* 00A0 */  0x89, 0x0A, 0xE1, 0x00, 0x06, 0xE3, 0x01, 0x44,  // .......D
                /* 00A8 */  0x72, 0x86, 0x89, 0x02, 0xB6, 0xD7, 0x69, 0xC8,  // r.....i.
                /* 00B0 */  0xE4, 0x18, 0xA9, 0x24, 0x38, 0xD4, 0x08, 0x3D,  // ...$8..=
                /* 00B8 */  0xCA, 0xE6, 0x05, 0xE8, 0x1E, 0xAC, 0x06, 0xE2,  // ........
                /* 00C0 */  0x91, 0x85, 0x64, 0xD2, 0x86, 0x82, 0x1A, 0xB6,  // ..d.....
                /* 00C8 */  0x27, 0x75, 0x4A, 0x9E, 0xA1, 0x25, 0x0F, 0x92,  // 'uJ..%..
                /* 00D0 */  0x10, 0x78, 0x14, 0x0C, 0x8D, 0x13, 0x94, 0x05,  // .x......
                /* 00D8 */  0xA1, 0x1D, 0xD1, 0x61, 0x12, 0xC0, 0x93, 0xF0,  // ...a....
                /* 00E0 */  0x0C, 0x8B, 0x1F, 0xB2, 0xA0, 0x4F, 0xE4, 0xAC,  // .....O..
                /* 00E8 */  0x0F, 0x98, 0x1D, 0x07, 0x7C, 0x04, 0xC0, 0xC1,  // ....|...
                /* 00F0 */  0x1A, 0x28, 0x5C, 0xC0, 0xF3, 0x39, 0x86, 0xC8,  // .(\..9..
                /* 00F8 */  0x71, 0x0F, 0x36, 0xC6, 0x51, 0x44, 0x4E, 0x50,  // q.6.QDNP
                /* 0100 */  0xE1, 0x44, 0xE4, 0x73, 0xD2, 0x12, 0x74, 0x04,  // .D.s..t.
                /* 0108 */  0x20, 0x60, 0xD1, 0x0C, 0xD6, 0x33, 0x38, 0x91,  //  `...38.
                /* 0110 */  0x3D, 0x02, 0x94, 0x0C, 0x08, 0x79, 0x14, 0x60,  // =....y.`
                /* 0118 */  0x55, 0xC0, 0xFF, 0x1F, 0xF7, 0x34, 0x4C, 0xD0,  // U....4L.
                /* 0120 */  0xBD, 0x00, 0x65, 0x02, 0x8C, 0x09, 0x70, 0x06,  // ..e...p.
                /* 0128 */  0x2D, 0x6F, 0x02, 0xC4, 0x41, 0x68, 0x1A, 0x6D,  // -o..Ah.m
                /* 0130 */  0x09, 0xB0, 0x76, 0x5B, 0xD0, 0xFC, 0x62, 0x44,  // ..v[..bD
                /* 0138 */  0x39, 0xCF, 0x48, 0x01, 0xC3, 0x44, 0x69, 0x0E,  // 9.H..Di.
                /* 0140 */  0x51, 0x58, 0x11, 0xA3, 0xC4, 0xA9, 0x19, 0x4C,  // QX.....L
                /* 0148 */  0x10, 0x0F, 0x0C, 0xD1, 0x22, 0x85, 0x65, 0x13,  // ....".e.
                /* 0150 */  0x08, 0xD2, 0xFE, 0x20, 0xC8, 0xA0, 0x71, 0xA3,  // ... ..q.
                /* 0158 */  0xF7, 0x5D, 0xE1, 0xC0, 0x8E, 0xE2, 0xE8, 0x8F,  // .]......
                /* 0160 */  0xE8, 0x28, 0xD9, 0x94, 0x0F, 0xEC, 0xC9, 0x20,  // .(..... 
                /* 0168 */  0xF4, 0xB1, 0x46, 0x8D, 0x71, 0x16, 0x09, 0x1C,  // ..F.q...
                /* 0170 */  0x7F, 0xA9, 0x3A, 0x50, 0x38, 0x12, 0x3C, 0xEA,  // ..:P8.<.
                /* 0178 */  0xAC, 0xE0, 0x73, 0x81, 0x87, 0x76, 0xD0, 0x9E,  // ..s..v..
                /* 0180 */  0xE3, 0x09, 0x04, 0x79, 0x6C, 0xF0, 0x79, 0xE1,  // ...yl.y.
                /* 0188 */  0x81, 0xC0, 0x63, 0x60, 0xB7, 0x09, 0x1F, 0x01,  // ..c`....
                /* 0190 */  0x7C, 0x42, 0xC0, 0xBB, 0x06, 0xD4, 0xD5, 0xE0,  // |B......
                /* 0198 */  0xC1, 0x80, 0x0D, 0x3A, 0x1C, 0x66, 0xBC, 0x1E,  // ...:.f..
                /* 01A0 */  0x7E, 0xB8, 0x13, 0x38, 0xB9, 0x87, 0x0B, 0x7E,  // ~..8...~
                /* 01A8 */  0xD0, 0xF0, 0xE0, 0x70, 0x77, 0x88, 0x93, 0x39,  // ...pw..9
                /* 01B0 */  0xB2, 0x52, 0x05, 0x98, 0x3D, 0x1C, 0xE8, 0x18,  // .R..=...
                /* 01B8 */  0xE1, 0x93, 0x06, 0x3B, 0x03, 0x60, 0xE4, 0x0F,  // ...;.`..
                /* 01C0 */  0x02, 0x35, 0x32, 0x43, 0xFB, 0x44, 0xF1, 0xC2,  // .52C.D..
                /* 01C8 */  0x61, 0xC8, 0xE7, 0x84, 0xC3, 0x62, 0x62, 0x4F,  // a....bbO
                /* 01D0 */  0x1C, 0x74, 0x3C, 0xE0, 0xBF, 0x08, 0x3C, 0x65,  // .t<...<e
                /* 01D8 */  0x78, 0xFA, 0x9E, 0xAF, 0x4F, 0x21, 0xE0, 0xC1,  // x...O!..
                /* 01E0 */  0x38, 0x83, 0x50, 0x0F, 0x0D, 0xAF, 0x0D, 0x9E,  // 8.P.....
                /* 01E8 */  0xDF, 0x3B, 0x03, 0xFE, 0x14, 0xC2, 0xFF, 0xFF,  // .;......
                /* 01F0 */  0xA7, 0x10, 0xF0, 0xE2, 0x1D, 0x00, 0xE6, 0x38,  // .......8
                /* 01F8 */  0xE0, 0x01, 0x70, 0xF0, 0xA7, 0x88, 0xB3, 0xB3,  // ..p.....
                /* 0200 */  0xD2, 0x39, 0x21, 0x4F, 0x2A, 0x60, 0x10, 0xA6,  // .9!O*`..
                /* 0208 */  0x61, 0xEC, 0x2C, 0x28, 0x85, 0x6C, 0x2C, 0xDE,  // a.,(.l,.
                /* 0210 */  0xC3, 0xA7, 0x42, 0x80, 0x74, 0xB4, 0x38, 0x3E,  // ..B.t.8>
                /* 0218 */  0x4F, 0x11, 0x1E, 0xC1, 0xE0, 0xC7, 0x07, 0x9D,  // O.......
                /* 0220 */  0x3C, 0x3C, 0x00, 0x47, 0x26, 0x51, 0xE8, 0x41,  // <<.G&Q.A
                /* 0228 */  0xD1, 0xD3, 0x0A, 0x39, 0x80, 0x50, 0x10, 0x03,  // ...9.P..
                /* 0230 */  0x3A, 0xC3, 0x39, 0x02, 0xAD, 0xE2, 0x1C, 0x41,  // :.9....A
                /* 0238 */  0xE6, 0x70, 0x14, 0xA7, 0x99, 0xA0, 0xE8, 0x2B,  // .p.....+
                /* 0240 */  0x04, 0x9D, 0xB4, 0x2F, 0x07, 0x7C, 0x59, 0x1A,  // .../.|Y.
                /* 0248 */  0x0B, 0x01, 0xB6, 0x9A, 0xCB, 0x09, 0x0A, 0xCC,  // ........
                /* 0250 */  0xF7, 0x0F, 0x4E, 0x50, 0xD7, 0x01, 0x02, 0x64,  // ..NP...d
                /* 0258 */  0xFA, 0x2E, 0x08, 0xA0, 0x00, 0xF2, 0x89, 0xC0,  // ........
                /* 0260 */  0x57, 0x80, 0x97, 0x02, 0x36, 0x86, 0xB7, 0x00,  // W...6...
                /* 0268 */  0xA3, 0x19, 0x9D, 0x87, 0x1F, 0x2A, 0x2A, 0xEE,  // .....**.
                /* 0270 */  0x50, 0x29, 0x88, 0x87, 0xEA, 0x28, 0x43, 0x45,  // P)...(CE
                /* 0278 */  0xCF, 0xC4, 0xC7, 0x09, 0xCF, 0xA8, 0x75, 0x10,  // ......u.
                /* 0280 */  0xCD, 0xD1, 0x04, 0xAF, 0x04, 0x09, 0xFE, 0xFF,  // ........
                /* 0288 */  0x8F, 0x1F, 0x70, 0x6E, 0x02, 0x21, 0x9F, 0x42,  // ..pn.!.B
                /* 0290 */  0x3C, 0x0D, 0xC3, 0x79, 0xB2, 0x1C, 0xCE, 0x93,  // <..y....
                /* 0298 */  0xE5, 0x63, 0xF1, 0xE9, 0x03, 0x7C, 0xA7, 0x09,  // .c...|..
                /* 02A0 */  0xDC, 0x6C, 0xC1, 0x08, 0x8F, 0x89, 0x35, 0x2A,  // .l....5*
                /* 02A8 */  0x7A, 0x00, 0xF2, 0xF0, 0xF8, 0xE5, 0xC0, 0xF3,  // z.......
                /* 02B0 */  0x79, 0x42, 0x38, 0xCA, 0x47, 0x0F, 0x5F, 0x5B,  // yB8.G._[
                /* 02B8 */  0x3C, 0x9B, 0xB7, 0x04, 0xDF, 0x44, 0x3C, 0x44,  // <....D<D
                /* 02C0 */  0x9F, 0x85, 0x60, 0x4D, 0xE4, 0xA4, 0x7D, 0x5B,  // ..`M..}[
                /* 02C8 */  0x38, 0xD9, 0xA0, 0xF1, 0xC3, 0x7A, 0x98, 0x9E,  // 8....z..
                /* 02D0 */  0xD3, 0xB3, 0x10, 0x58, 0x8E, 0x15, 0xEC, 0x66,  // ...X...f
                /* 02D8 */  0xF1, 0x34, 0x84, 0xB9, 0x1C, 0xF9, 0x5C, 0x81,  // .4....\.
                /* 02E0 */  0x15, 0xBB, 0x1A, 0x1D, 0x32, 0x70, 0x61, 0xDE,  // ....2pa.
                /* 02E8 */  0x05, 0xBA, 0x60, 0xB0, 0x43, 0x06, 0x4C, 0xF1,  // ..`.C.L.
                /* 02F0 */  0x90, 0x3A, 0x64, 0x70, 0xD9, 0x14, 0x12, 0x4E,  // .:dp...N
                /* 02F8 */  0xA3, 0xA3, 0x02, 0x97, 0x7A, 0xD6, 0xA0, 0x20,  // ....z.. 
                /* 0300 */  0x1E, 0xA4, 0x0F, 0x19, 0xE0, 0xFF, 0xFF, 0x1F,  // ........
                /* 0308 */  0x32, 0x80, 0x45, 0x88, 0x19, 0xA1, 0x6F, 0x3A,  // 2.E...o:
                /* 0310 */  0xD6, 0x7A, 0x57, 0x22, 0x57, 0x88, 0x07, 0x15,  // .zW"W...
                /* 0318 */  0x0F, 0x09, 0xAC, 0x43, 0xF5, 0x31, 0x04, 0xF0,  // ...C.1..
                /* 0320 */  0x3D, 0x12, 0x1F, 0x43, 0x80, 0xEB, 0xFF, 0xFF,  // =..C....
                /* 0328 */  0x18, 0x02, 0x3C, 0x87, 0xE9, 0x63, 0x08, 0x78,  // ..<..c.x
                /* 0330 */  0x2E, 0x1D, 0xEC, 0x18, 0x02, 0x3B, 0xDC, 0x19,  // .....;..
                /* 0338 */  0x91, 0x86, 0x78, 0x17, 0x28, 0xC2, 0x82, 0x28,  // ..x.(..(
                /* 0340 */  0x8C, 0xCF, 0x88, 0x80, 0xA3, 0xF3, 0x18, 0xFE,  // ........
                /* 0348 */  0x8C, 0x08, 0xF3, 0x38, 0xC6, 0x06, 0x7C, 0xC6,  // ...8..|.
                /* 0350 */  0xC1, 0x70, 0x47, 0x44, 0xD8, 0x97, 0xC2, 0xF7,  // .pGD....
                /* 0358 */  0xC2, 0x47, 0xC4, 0x23, 0x7C, 0x77, 0xB3, 0x36,  // .G.#|w.6
                /* 0360 */  0x04, 0x5D, 0x0D, 0x83, 0xC4, 0x89, 0xF0, 0x66,  // .].....f
                /* 0368 */  0xF8, 0x88, 0x68, 0xB8, 0x77, 0xB8, 0x47, 0x44,  // ..h.w.GD
                /* 0370 */  0x63, 0x04, 0x0C, 0x73, 0x34, 0xFF, 0xFF, 0x28,  // c..s4..(
                /* 0378 */  0x4F, 0x87, 0x41, 0x22, 0xFB, 0xA2, 0xF8, 0x7C,  // O.A"...|
                /* 0380 */  0x18, 0xE1, 0x75, 0xD1, 0x38, 0x0F, 0x85, 0x21,  // ..u.8..!
                /* 0388 */  0x1E, 0x11, 0x01, 0x3E, 0x9E, 0x19, 0xD8, 0x95,  // ...>....
                /* 0390 */  0x01, 0x7B, 0x44, 0x04, 0x06, 0xFF, 0xFF, 0x23,  // .{D....#
                /* 0398 */  0x22, 0xF0, 0x11, 0x74, 0x44, 0xA4, 0x21, 0x8F,  // "..tD.!.
                /* 03A0 */  0x88, 0xA8, 0x61, 0x58, 0xC6, 0x11, 0x11, 0x35,  // ..aX...5
                /* 03A8 */  0x45, 0x38, 0x27, 0x44, 0x80, 0x77, 0xFF, 0xFF,  // E8'D.w..
                /* 03B0 */  0xB3, 0x14, 0xF0, 0x0E, 0x75, 0x96, 0x02, 0x6A,  // ....u..j
                /* 03B8 */  0x90, 0x16, 0x79, 0x42, 0x04, 0xE1, 0x59, 0x08,  // ..yB..Y.
                /* 03C0 */  0x96, 0xD0, 0x03, 0x22, 0xEA, 0x08, 0xE0, 0x28,  // ..."...(
                /* 03C8 */  0x07, 0x44, 0xD4, 0x11, 0x03, 0xCE, 0xF9, 0x10,  // .D......
                /* 03D0 */  0xF0, 0xF5, 0xFF, 0x3F, 0x1F, 0x02, 0x3C, 0x3E,  // ...?..<>
                /* 03D8 */  0x84, 0x80, 0xF7, 0xFF, 0x7F, 0x08, 0x01, 0x87,  // ........
                /* 03E0 */  0x84, 0x43, 0x08, 0xA8, 0xCE, 0x87, 0x98, 0x43,  // .C.....C
                /* 03E8 */  0x08, 0xAC, 0xB0, 0x3E, 0x46, 0xC0, 0x62, 0x3C,  // ...>F.b<
                /* 03F0 */  0x0B, 0x14, 0x63, 0x3D, 0x14, 0xC6, 0xC7, 0x43,  // ..c=...C
                /* 03F8 */  0xC0, 0xD1, 0xE1, 0x0C, 0x77, 0x3C, 0x84, 0x7D,  // ....w<.}
                /* 0400 */  0xBC, 0xE4, 0x43, 0x39, 0xB1, 0x88, 0x11, 0x1E,  // ..C9....
                /* 0408 */  0xC6, 0xA2, 0xC5, 0x7C, 0x06, 0xF0, 0xF9, 0x10,  // ...|....
                /* 0410 */  0xF6, 0xDD, 0xF0, 0x71, 0xF0, 0x05, 0x22, 0xC6,  // ...q..".
                /* 0418 */  0xB3, 0xE1, 0xC3, 0xA1, 0xCF, 0x84, 0xEF, 0x85,  // ........
                /* 0420 */  0xE7, 0x11, 0xE5, 0xB9, 0xF0, 0xF9, 0x90, 0x1D,  // ........
                /* 0428 */  0xE0, 0xCE, 0x21, 0x8A, 0x41, 0x22, 0x1D, 0x43,  // ..!.A".C
                /* 0430 */  0xD4, 0x28, 0xCF, 0x8A, 0x61, 0xC3, 0xBC, 0x0D,  // .(..a...
                /* 0438 */  0x86, 0x0B, 0x11, 0x29, 0x42, 0xE4, 0x88, 0x0F,  // ...)B...
                /* 0440 */  0x89, 0x61, 0x9E, 0x0F, 0xC1, 0xF4, 0xFF, 0x3F,  // .a.....?
                /* 0448 */  0x1F, 0xE2, 0x5F, 0x18, 0x3E, 0x1F, 0x02, 0x1C,  // .._.>...
                /* 0450 */  0x39, 0x74, 0xE0, 0xCE, 0x87, 0x60, 0xB8, 0xAA,  // 9t...`..
                /* 0458 */  0xB3, 0x3B, 0x03, 0x8C, 0x03, 0x22, 0x60, 0xE0,  // .;..."`.
                /* 0460 */  0xFF, 0x7F, 0x40, 0xC4, 0x8B, 0x5B, 0xB7, 0x0E,  // ..@..[..
                /* 0468 */  0x2B, 0x56, 0x7C, 0xDC, 0x42, 0x67, 0x79, 0x01,  // +V|.Bgy.
                /* 0470 */  0x08, 0xFA, 0xE8, 0x0E, 0xC7, 0x03, 0x3E, 0x45,  // ......>E
                /* 0478 */  0x18, 0xEA, 0x8F, 0x5B, 0x28, 0xDD, 0x14, 0x52,  // ...[(..R
                /* 0480 */  0x7E, 0xDC, 0x42, 0x69, 0x3D, 0x6E, 0x51, 0x10,  // ~.Bi=nQ.
                /* 0488 */  0x9F, 0x1C, 0x1C, 0xE3, 0x48, 0x04, 0x65, 0x66,  // ....H.ef
                /* 0490 */  0x4F, 0x44, 0xBE, 0x15, 0xF8, 0x64, 0xE3, 0xFB,  // OD...d..
                /* 0498 */  0x16, 0x30, 0x8D, 0x30, 0x26, 0x34, 0x8C, 0xCF,  // .0.0&4..
                /* 04A0 */  0x03, 0x67, 0x74, 0x9A, 0xAF, 0x5B, 0x80, 0xE5,  // .gt..[..
                /* 04A8 */  0xFF, 0xFF, 0x75, 0x0B, 0x30, 0x18, 0xEE, 0xBA,  // ..u.0...
                /* 04B0 */  0x05, 0xD4, 0x4E, 0x00, 0xBE, 0xC0, 0xF8, 0xBA,  // ..N.....
                /* 04B8 */  0x05, 0xAE, 0x9B, 0x07, 0xE6, 0x82, 0x8F, 0x43,  // .......C
                /* 04C0 */  0x7D, 0xF9, 0xC0, 0x5F, 0x44, 0xE0, 0x9C, 0x4E,  // }.._D..N
                /* 04C8 */  0x1E, 0xA6, 0x0C, 0xF8, 0xEA, 0x02, 0xE7, 0x22,  // ......."
                /* 04D0 */  0x02, 0xAC, 0xFE, 0xFF, 0x17, 0x11, 0x80, 0xFF,  // ........
                /* 04D8 */  0xFF, 0xFF, 0x8B, 0x08, 0xF0, 0x1F, 0xA6, 0x2F,  // ......./
                /* 04E0 */  0x22, 0xE0, 0xBB, 0x79, 0xF0, 0x83, 0x08, 0x6C,  // "..y...l
                /* 04E8 */  0x82, 0xC9, 0x4E, 0xF4, 0xA8, 0x01, 0x5B, 0x01,  // ..N...[.
                /* 04F0 */  0x90, 0xC6, 0x7B, 0x48, 0xF1, 0x5E, 0xF9, 0xD8,  // ..{H.^..
                /* 04F8 */  0xB9, 0x2E, 0xC1, 0xE4, 0xC7, 0x79, 0x54, 0x66,  // .....yTf
                /* 0500 */  0x12, 0xA5, 0x3E, 0x29, 0xA0, 0x72, 0x9E, 0x14,  // ..>).r..
                /* 0508 */  0x28, 0x88, 0x01, 0x7D, 0xF5, 0x05, 0x56, 0xD7,  // (..}..V.
                /* 0510 */  0x79, 0x60, 0xFF, 0xFF, 0xBF, 0xCE, 0x03, 0xC6,  // y`......
                /* 0518 */  0xE3, 0x5C, 0xE7, 0x81, 0x9E, 0xBC, 0x3B, 0x06,  // .\....;.
                /* 0520 */  0x68, 0xAE, 0x14, 0xEC, 0x5F, 0xF1, 0x4C, 0x81,  // h..._.L.
                /* 0528 */  0x21, 0x98, 0xEE, 0x72, 0x81, 0xBA, 0xE0, 0x5A,  // !..r...Z
                /* 0530 */  0xC3, 0xE5, 0x02, 0x71, 0xDA, 0x08, 0x7D, 0x5C,  // ...q..}\
                /* 0538 */  0x6F, 0x17, 0xC0, 0xE8, 0xFF, 0x7F, 0xBB, 0x00,  // o.......
                /* 0540 */  0x78, 0x1A, 0xE8, 0x76, 0x01, 0xB4, 0xFE, 0xFF,  // x..v....
                /* 0548 */  0x07, 0x75, 0x7E, 0xA4, 0xC5, 0xDF, 0x2E, 0xE0,  // .u~.....
                /* 0550 */  0x1F, 0x2A, 0xB0, 0x67, 0x62, 0xBD, 0x9E, 0x7D,  // .*.gb..}
                /* 0558 */  0x46, 0xA7, 0x21, 0x8E, 0xE9, 0x80, 0xD6, 0xAB,  // F.!.....
                /* 0560 */  0x89, 0x4F, 0xCF, 0x9E, 0x6F, 0x44, 0x9F, 0xC7,  // .O..oD..
                /* 0568 */  0xC3, 0x3C, 0x3D, 0x1C, 0xF1, 0xDB, 0x83, 0x8F,  // .<=.....
                /* 0570 */  0xE9, 0xF0, 0xCF, 0xE6, 0x6F, 0xE5, 0x71, 0xDF,  // ....o.q.
                /* 0578 */  0xCF, 0x7D, 0x31, 0x7F, 0x38, 0x7F, 0x3D, 0xF7,  // .}1.8.=.
                /* 0580 */  0xE5, 0xDC, 0x87, 0x74, 0xA3, 0x18, 0xC6, 0x50,  // ...t...P
                /* 0588 */  0x86, 0x08, 0x18, 0x34, 0x56, 0x94, 0x23, 0x89,  // ...4V.#.
                /* 0590 */  0x69, 0x94, 0x10, 0x11, 0x5E, 0xD5, 0x8D, 0x15,  // i...^...
                /* 0598 */  0xD2, 0xD6, 0x8E, 0xE9, 0xA0, 0x8E, 0xBF, 0x54,  // .......T
                /* 05A0 */  0x1D, 0xD3, 0xE1, 0xFC, 0xFF, 0x8F, 0xE9, 0x00,  // ........
                /* 05A8 */  0x1F, 0xCE, 0x0C, 0xB8, 0x63, 0x3A, 0xFC, 0x43,  // ....c:.C
                /* 05B0 */  0x03, 0xBF, 0x33, 0xE0, 0x4F, 0xE9, 0x80, 0x8F,  // ..3.O...
                /* 05B8 */  0xC0, 0x77, 0x27, 0x1A, 0x96, 0x42, 0xF7, 0x28,  // .w'..B.(
                /* 05C0 */  0x3E, 0x2C, 0x0B, 0x02, 0xD2, 0xFF, 0x7F, 0x84,  // >,......
                /* 05C8 */  0xF0, 0x44, 0x40, 0x53, 0x08, 0xC7, 0x3F, 0x0E,  // .D@S..?.
                /* 05D0 */  0x01, 0x7D, 0x02, 0x1F, 0x87, 0x80, 0xF7, 0xE1,  // .}......
                /* 05D8 */  0xC3, 0xF7, 0x68, 0xE0, 0x76, 0x9E, 0x01, 0x0E,  // ..h.v...
                /* 05E0 */  0x0A, 0x6D, 0xFA, 0xD4, 0x68, 0xD4, 0xAA, 0x41,  // .m..h..A
                /* 05E8 */  0x99, 0x1A, 0x65, 0x1A, 0xD4, 0xEA, 0x53, 0xA9,  // ..e...S.
                /* 05F0 */  0x31, 0x63, 0xDA, 0xA0, 0x24, 0xE9, 0x80, 0x40,  // 1c..$..@
                /* 05F8 */  0x45, 0x2C, 0x49, 0x63, 0x72, 0x04, 0x10, 0xAA,  // E,Icr...
                /* 0600 */  0xEB, 0xC5, 0x22, 0x23, 0x20, 0x12, 0x09, 0x22,  // .."# .."
                /* 0608 */  0x20, 0xFF, 0xFF, 0x05, 0x7D, 0xD2, 0x04, 0x64,  //  ...}..d
                /* 0610 */  0x79, 0x20, 0x02, 0x72, 0xFE, 0xC7, 0x91, 0x80,  // y .r....
                /* 0618 */  0x2C, 0x66, 0x55, 0x02, 0x72, 0x06, 0x10, 0x01,  // ,fU.r...
                /* 0620 */  0x39, 0x10, 0x10, 0x15, 0x6F, 0x02, 0x88, 0x45,  // 9...o..E
                /* 0628 */  0x01, 0x11, 0x90, 0x83, 0xAB, 0x18, 0x0A, 0x0B,  // ........
                /* 0630 */  0xFA, 0x1E, 0x11, 0x90, 0x65, 0xDA, 0x00, 0x61,  // ....e..a
                /* 0638 */  0xC9, 0x75, 0x80, 0x32, 0x19, 0x3E, 0x80, 0x58,  // .u.2.>.X
                /* 0640 */  0x64, 0x10, 0x01, 0xF9, 0x4D, 0x60, 0x20, 0xA7,  // d...M` .
                /* 0648 */  0xA3, 0x11, 0x90, 0xA3, 0x52, 0x08, 0xC8, 0x0A,  // ....R...
                /* 0650 */  0x95, 0x00, 0x31, 0xB9, 0x20, 0x02, 0xB2, 0x34,  // ..1. ..4
                /* 0658 */  0x27, 0x40, 0x4C, 0x28, 0x88, 0x80, 0x1C, 0xEA,  // '@L(....
                /* 0660 */  0xB9, 0xA4, 0xA1, 0x38, 0x86, 0x16, 0x20, 0x26,  // ...8.. &
                /* 0668 */  0xC2, 0x0B, 0x08, 0x0B, 0xB7, 0x7A, 0x81, 0x3A,  // .....z.:
                /* 0670 */  0x29, 0x88, 0xEE, 0x83, 0xC4, 0x0C, 0x10, 0xD3,  // ).......
                /* 0678 */  0x0A, 0xA2, 0xC1, 0x92, 0xFF, 0x9D, 0x80, 0xAC,  // ........
                /* 0680 */  0x12, 0x44, 0x40, 0x56, 0xF3, 0x92, 0x10, 0x90,  // .D@V....
                /* 0688 */  0xA5, 0x81, 0x08, 0xC8, 0x79, 0x80, 0x68, 0x38,  // ....y.h8
                /* 0690 */  0x20, 0x1A, 0xC4, 0x0E, 0x10, 0x8B, 0x05, 0x22,  //  ......"
                /* 0698 */  0x20, 0xCB, 0xF6, 0x03, 0xC4, 0x32, 0x80, 0x08,  //  ....2..
                /* 06A0 */  0xC8, 0x7A, 0x0F, 0x20, 0x02, 0xB2, 0x7A, 0x10,  // .z. ..z.
                /* 06A8 */  0x01, 0x59, 0x91, 0xA2, 0x03, 0x00, 0x05, 0x11,  // .Y......
                /* 06B0 */  0x90, 0xA5, 0x38, 0x02, 0x62, 0xC2, 0x40, 0x04,  // ..8.b.@.
                /* 06B8 */  0xE4, 0x00, 0x0F, 0x2D, 0x0D, 0xCF, 0x92, 0x35,  // ...-...5
                /* 06C0 */  0x01, 0xB1, 0xC0, 0x20, 0x34, 0x86, 0x28, 0x50,  // ... 4.(P
                /* 06C8 */  0x16, 0x0A, 0x44, 0x40, 0xFE, 0xFF, 0x03         // ..D@...
            })
            OperationRegion (DEB1, SystemIO, 0x80, 0x04)
            Field (DEB1, DWordAcc, NoLock, Preserve)
            {
                DBGD,   32
            }

            OperationRegion (SMI0, SystemIO, LSMB, One)
            Field (SMI0, ByteAcc, NoLock, Preserve)
            {
                APMC,   8
            }

            OperationRegion (WMIM, SystemMemory, WMIO, WMSZ)
            Field (WMIM, AnyAcc, NoLock, Preserve)
            {
                CMD,    8, 
                ERR,    32, 
                PAR0,   32, 
                PAR1,   32, 
                PAR2,   32, 
                PAR3,   32
            }

            Field (WMIM, AnyAcc, NoLock, Preserve)
            {
                Offset (0x15), 
                DBGM,   800, 
                RTSM,   800
            }

            Name (_WDG, Buffer (0x64)
            {
                /* 0000 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
                /* 0008 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
                /* 0010 */  0x42, 0x41, 0x01, 0x00, 0x7C, 0x78, 0x3E, 0x21,  // BA..|x>!
                /* 0018 */  0xD5, 0x50, 0x2D, 0x47, 0x9E, 0x08, 0xDF, 0x4F,  // .P-G...O
                /* 0020 */  0xB2, 0x05, 0x0D, 0x15, 0x47, 0x49, 0x02, 0x02,  // ....GI..
                /* 0028 */  0x66, 0xEA, 0x34, 0xF8, 0x42, 0xA4, 0xBD, 0x48,  // f.4.B..H
                /* 0030 */  0xBE, 0x8C, 0x18, 0x83, 0x75, 0x57, 0xC8, 0x98,  // ....uW..
                /* 0038 */  0x47, 0x42, 0x01, 0x02, 0x27, 0x24, 0x06, 0x68,  // GB..'$.h
                /* 0040 */  0x32, 0xC4, 0xA2, 0x4B, 0xB3, 0xD8, 0xF6, 0x39,  // 2..K...9
                /* 0048 */  0x49, 0xDD, 0x7A, 0x19, 0x53, 0x50, 0x03, 0x02,  // I.z.SP..
                /* 0050 */  0x38, 0x27, 0xAA, 0x81, 0xBA, 0x49, 0x98, 0x44,  // 8'...I.D
                /* 0058 */  0x82, 0x1B, 0xD3, 0x8B, 0x88, 0xD8, 0x14, 0x95,  // ........
                /* 0060 */  0x4C, 0x44, 0x01, 0x02                           // LD..
            })
            Method (TSTD, 1, NotSerialized)
            {
                Local0 = Zero
                Local1 = 0x00030D40
                While ((Local0 < Local1))
                {
                    DBGD = Arg0
                    Local0++
                }

                Return (Zero)
            }

            Mutex (MSMI, 0x07)
            Method (SMI, 5, NotSerialized)
            {
                Acquire (MSMI, 0xFFFF)
                CMD = Arg0
                PAR0 = Arg1
                PAR1 = Arg2
                PAR2 = Arg3
                PAR3 = Arg4
                APMC = AISV /* \AISV */
                While ((ERR == One))
                {
                    Sleep (0x64)
                    APMC = AISV /* \AISV */
                }

                Local0 = PAR0 /* \_SB_.WMIC.PAR0 */
                Release (MSMI)
                Return (Local0)
            }

            Method (WMII, 2, NotSerialized)
            {
                Return (SMI (0x10, Arg0, Arg1, Zero, Zero))
            }

            Method (WMIP, 2, NotSerialized)
            {
                Return (SMI (0x20, Arg0, Arg1, Zero, Zero))
            }

            Method (WMGI, 3, NotSerialized)
            {
                If ((Acquire (MWMI, 0xFFFF) == Zero))
                {
                    DBGM = Arg2
                    Local0 = WMII (Arg1, Zero)
                    Release (MWMI)
                }

                Return (RTSM) /* \_SB_.WMIC.RTSM */
            }

            Method (WMGB, 3, NotSerialized)
            {
                If ((Acquire (MWMI, 0xFFFF) == Zero))
                {
                    DBGM = Arg2
                    Local0 = WMII (Arg1, Zero)
                    Release (MWMI)
                }

                Return (RTSM) /* \_SB_.WMIC.RTSM */
            }

            Method (WMSP, 3, NotSerialized)
            {
                If ((Acquire (MWMI, 0xFFFF) == Zero))
                {
                    DBGM = Arg2
                    Local0 = WMIP (Arg1, Zero)
                    Release (MWMI)
                }

                Return (RTSM) /* \_SB_.WMIC.RTSM */
            }

            Method (WMLD, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local1 = WMII (0xFF, Zero)
                Release (MWMI)
                Return (RTSM) /* \_SB_.WMIC.RTSM */
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 00000114
[008h 0008   1]                     Revision : 06
[009h 0009   1]                     Checksum : 9C
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]                 FACS Address : BCDB9000
[028h 0040   4]                 DSDT Address : BB6F2000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 01 [Desktop]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 000000B4
[04Ch 0076   4]       PM Timer Block Address : 00000808
[050h 0080   4]           GPE0 Block Address : 00000820
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0400
[066h 0102   2]           Cache Flush Stride : 0010
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0000
               Legacy Devices Supported (V2) : 0
            8042 Present on ports 60/64 (V2) : 0
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 000BC5A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 1
                Remote Power-on capable (V4) : 1
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 1
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 00 [Undefined/Legacy]
[078h 0120   8]                      Address : 00000000000000B2

[080h 0128   1]         Value to cause reset : BE
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000BB6F2000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 02 [Word Access:16]
[098h 0152   8]                      Address : 0000000000000800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 02 [Word Access:16]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 02 [Word Access:16]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 00000000000000B4

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 01 [Byte Access:8]
[0E0h 0224   8]                      Address : 0000000000000820

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 01 [Byte Access:8]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

[10Ch 0268   8]                Hypervisor ID : 0000000000000000

Raw Table Data: Length 276 (0x114)

    0000: 46 41 43 50 14 01 00 00 06 9C 41 4C 41 53 4B 41  // FACP......ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 00 90 DB BC 00 20 6F BB 00 01 09 00  // ......... o.....
    0030: B2 00 00 00 A0 A1 00 00 00 08 00 00 00 00 00 00  // ................
    0040: 04 08 00 00 00 00 00 00 B4 00 00 00 08 08 00 00  // ................
    0050: 20 08 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 65 00 E9 03 00 04 10 00 01 03 0D 00 32 00 00 00  // e...........2...
    0070: A5 C5 0B 00 01 08 00 00 B2 00 00 00 00 00 00 00  // ................
    0080: BE 00 00 00 00 00 00 00 00 00 00 00 00 20 6F BB  // ............. o.
    0090: 00 00 00 00 01 20 00 02 00 08 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 02 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 08 00 00 00 00 00 00 01 00 00 02 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 B4 00 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 08 00 00 00 00 00 00 01 40 00 01  // . ...........@..
    00E0: 20 08 00 00 00 00 00 00 01 00 00 01 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : AF3E2587
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 87 25 3E AF 00 00 00 00  // FACS@....%>.....
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FIDT
----
[000h 0000   4]                    Signature : "FIDT"    
[004h 0004   4]                 Table Length : 0000009C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F7
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013


**** Unknown ACPI table signature [FIDT]


Raw Table Data: Length 156 (0x9C)

    0000: 46 49 44 54 9C 00 00 00 01 F7 41 4C 41 53 4B 41  // FIDT......ALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 41 4D 49 20  // A M I.... ..AMI 
    0020: 13 00 01 00 24 46 49 44 04 78 00 31 41 54 58 48  // ....$FID.x.1ATXH
    0030: 30 31 00 00 B0 D2 A3 0A CD 9B E9 9A 9A DB 36 CD  // 01............6.
    0040: 08 19 80 3B 30 35 00 31 37 00 30 30 00 30 31 00  // ...;05.17.00.01.
    0050: E5 07 09 1E 08 24 0E FF FF 41 4C 41 53 4B 41 41  // .....$...ALASKAA
    0060: 20 4D 20 49 00 00 00 31 00 00 00 FF FF FF FF FF  //  M I...1........
    0070: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0080: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0090: FF FF FF FF FF FF FF FF FF FF FF FF              // ............


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 96
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 01000013


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 00000000BB645000

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 00000000BB6A2000

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 96 41 4C 41 53 4B 41  // FPDTD.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 00 01 00 00 10 01 00 00 00 00 00 50 64 BB  // .............Pd.
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 00 20 6A BB  // ............. j.
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : BD
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00000005

[024h 0036   4]            Hardware Block ID : 10228201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 40
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 37EE
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 BD 41 4C 41 53 4B 41  // HPET8.....ALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 41 4D 49 20  // A M I.... ..AMI 
    0020: 05 00 00 00 01 82 22 10 00 40 00 00 00 00 D0 FE  // ......"..@......
    0030: 00 00 00 00 00 EE 37 00                          // ......7.


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 000000D0
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : D8
[00Ah 0010   6]                       Oem ID : "AMD  "
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050   2]                       Length : 0048
[034h 0052   2]                     DeviceId : 0002
[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FEB80000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]            Feature Reporting : 80048F6E

[048h 0072   1]                Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076   1]                Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081   2]                    Device ID : FF00
[053h 0083   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A4
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                Subtable Type : 04 [Device Entry: End of Range]
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[060h 0096   1]                Subtable Type : 48 [Device Entry: Special Device]
[061h 0097   2]                    Device ID : 0000
[063h 0099   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                Subtable Type : 48 [Device Entry: Special Device]
[069h 0105   2]                    Device ID : 0000
[06Bh 0107   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[06Ch 0108   1]                       Handle : 0D
[06Dh 0109   2]        Source Used Device ID : 00A0
[06Fh 0111   1]                      Variety : 01

[070h 0112   1]                Subtable Type : 48 [Device Entry: Special Device]
[071h 0113   2]                    Device ID : 0000
[073h 0115   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[074h 0116   1]                       Handle : 0E
[075h 0117   2]        Source Used Device ID : 0001
[077h 0119   1]                      Variety : 01

[078h 0120   1]                Subtable Type : 11 [Hardware Definition Block (IVHD)]
[079h 0121   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[07Ah 0122   2]                       Length : 0058
[07Ch 0124   2]                     DeviceId : 0002
[07Eh 0126   2]            Capability Offset : 0040
[080h 0128   8]                 Base Address : 00000000FEB80000
[088h 0136   2]            PCI Segment Group : 0000
[08Ah 0138   2]          Virtualization Info : 0000
[08Ch 0140   4]                   Attributes : 00040200
[090h 0144   8]                    EFR Image : 000F77EF22294ADA
[098h 0152   8]                     Reserved : 0000000000000000

[0A0h 0160   1]                Subtable Type : 03 [Device Entry: Start of Range]
[0A1h 0161   2]                    Device ID : 0008
[0A3h 0163   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164   1]                Subtable Type : 04 [Device Entry: End of Range]
[0A5h 0165   2]                    Device ID : FFFE
[0A7h 0167   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A8h 0168   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A9h 0169   2]                    Device ID : FF00
[0ABh 0171   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0ACh 0172   1]                     Reserved : 00
[0ADh 0173   2]        Source Used Device ID : 00A4
[0AFh 0175   1]                     Reserved : 00

[0B0h 0176   1]                Subtable Type : 04 [Device Entry: End of Range]
[0B1h 0177   2]                    Device ID : FFFF
[0B3h 0179   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B4h 0180   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[0B5h 0181   2]                    Device ID : 0000
[0B7h 0183   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B8h 0184   1]                Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185   2]                    Device ID : 0000
[0BBh 0187   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0BCh 0188   1]                       Handle : 00
[0BDh 0189   2]        Source Used Device ID : 00A0
[0BFh 0191   1]                      Variety : 02

[0C0h 0192   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193   2]                    Device ID : 0000
[0C3h 0195   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0C4h 0196   1]                       Handle : 0D
[0C5h 0197   2]        Source Used Device ID : 00A0
[0C7h 0199   1]                      Variety : 01

[0C8h 0200   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C9h 0201   2]                    Device ID : 0000
[0CBh 0203   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0CCh 0204   1]                       Handle : 0E
[0CDh 0205   2]        Source Used Device ID : 0001
[0CFh 0207   1]                      Variety : 01

Raw Table Data: Length 208 (0xD0)

    0000: 49 56 52 53 D0 00 00 00 02 D8 41 4D 44 20 20 00  // IVRS......AMD  .
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 00 00 00 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 B8 FE 00 00 00 00  // ..H...@.........
    0040: 00 00 00 00 6E 8F 04 80 03 08 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 0D A0 00 01  // H.......H.......
    0070: 48 00 00 00 0E 01 00 01 11 B0 58 00 02 00 40 00  // H.........X...@.
    0080: 00 00 B8 FE 00 00 00 00 00 00 00 00 00 02 04 00  // ................
    0090: DA 4A 29 22 EF 77 0F 00 00 00 00 00 00 00 00 00  // .J)".w..........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A4 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 0D A0 00 01 48 00 00 00 0E 01 00 01  // H.......H.......


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F4
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 7F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 F4 41 4C 41 53 4B 41  // MCFG<.....ALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 4D 53 46 54  // A M I.... ..MSFT
    0020: 13 00 01 00 00 00 00 00 00 00 00 00 00 00 00 F0  // ................
    0030: 00 00 00 00 00 00 00 7F 00 00 00 00              // ............


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "AMDFCH", "FCHZP", 0x00001000)
{


SSDT2
-----
DefinitionBlock ("", "SSDT", 1, "AMD", "AMD AOD", 0x00000001)
{
    Scope (\)
    {
        Device (AOD)
        {
            Name (DBG, Zero)
            Name (GDBG, Zero)
            Name (CDBG, Zero)
            Name (VDBG, Zero)
            Name (RDBG, Zero)
            OperationRegion (PMRG, SystemMemory, 0xFED80300, 0x0100)
            OperationRegion (PSMI, SystemIO, 0xB2, 0x02)
            Field (PSMI, ByteAcc, NoLock, Preserve)
            {
                APMC,   8, 
                APMD,   8
            }

            Method (ASMI, 1, NotSerialized)
            {
                APMC = Arg0
                Sleep (0x0A)
            }

            Name (OBID, Package (0xC1)
            {
                0x40, 
                0x00010001, 
                0x00010002, 
                0x00020001, 
                0x00020002, 
                0x00020003, 
                0x00020004, 
                0x00020005, 
                0x00020006, 
                0x00020007, 
                0x00020008, 
                0x00020009, 
                0x0002000A, 
                0x0002000B, 
                0x0002000C, 
                0x0002000D, 
                0x0002000E, 
                0x0002000F, 
                0x00020010, 
                0x00020011, 
                0x00020012, 
                0x00020013, 
                0x00020014, 
                0x00020015, 
                0x00020016, 
                0x00020017, 
                0x00020018, 
                0x00020019, 
                0x0002001A, 
                0x0002001B, 
                0x0002001C, 
                0x0002001D, 
                0x0002001E, 
                0x0002001F, 
                0x00020020, 
                0x00020021, 
                0x00020022, 
                0x00020023, 
                0x00020024, 
                0x00020025, 
                0x00020026, 
                0x00020027, 
                0x00020028, 
                0x00020029, 
                0x0002002A, 
                0x0002002B, 
                0x0002002C, 
                0x0002002D, 
                0x0002002E, 
                0x0002002F, 
                0x00020030, 
                0x00020031, 
                0x00020032, 
                0x00020033, 
                0x00020034, 
                0x00020035, 
                0x00020036, 
                0x00020037, 
                0x00020038, 
                0x00020039, 
                0x0002003A, 
                0x00030001, 
                0x00030002, 
                0x00040001, 
                0x00040002, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                "Get APCB Config", 
                "Get memory voltages", 
                "Set memory clock frequency", 
                "Set Tcl", 
                "Set Trcdrd", 
                "Set Trcdwr", 
                "Set Tras", 
                "Set Trp", 
                "Set ProcODT", 
                "Set Trcpage", 
                "Set Trc", 
                "Set Trfc", 
                "Set Trfc2", 
                "Set Trfc4", 
                "Set Tfaw", 
                "Set TrrdS", 
                "Set TrrdL", 
                "Set Twr", 
                "Set TwtrS", 
                "Set TwtrL", 
                "Set TCke", 
                "Set Tcwl", 
                "Set Trtp", 
                "Set TrdrdSc", 
                "Set TrdrdScL", 
                "Set TrdrdSd", 
                "Set TrdrdDd", 
                "Set TwrwrSc", 
                "Set TwrwrScL", 
                "Set TwrwrSd", 
                "Set TwrwrDd", 
                "Set Trdwr", 
                "Set Twrrd", 
                "Set GearDownEn", 
                "Set Cmd2t", 
                "Set RttNom", 
                "Set RttWR", 
                "Set RttPark", 
                "Set PowerDownEn", 
                "Set SMT EN", 
                "Software Downcore Config", 
                "Set EDC Throttler Control", 
                "Set AddrCmdSetup", 
                "Set CsOdtSetup", 
                "Set CkeSetup", 
                "Set CadBusClkDrvStren", 
                "Set CadBusAddrCmdDrvStren", 
                "Set CadBusCsOdtCmdDrvStren", 
                "Set CadBusCkeDrvStren", 
                "Set CLDO_VDDP", 
                "Set Interleave Mode", 
                "Set Interleave Size", 
                "Set FCLK OC Mode", 
                "Set SOC VID", 
                "Set FCLK Frequency", 
                "Set CCLK Fmax", 
                "Set GFXCLK Fmax", 
                "Set CLDO_VDDG", 
                "Get ECO Mode", 
                "Set ECO Mode", 
                "Command Buffer Start", 
                "Command Buffer End", 
                "Set VDDIO", 
                "Set VTT"
            })
            Name (OBIE, Package (0xC1)
            {
                0x40, 
                0x00050001, 
                0x00050002, 
                0x00050003, 
                0x00050004, 
                0x00050005, 
                0x0005000A, 
                0x0005000B, 
                0x0005000C, 
                0x0005000D, 
                0x0005000E, 
                0x0005000F, 
                0x00050010, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                "Set PPT Limit", 
                "Set TDC Limit", 
                "Set EDC Limit", 
                "Set Scalar", 
                "Set DRAM Map Inversion", 
                "Set Curve Optimizer", 
                "Set IOD VDDG", 
                "Set Soc TDC Limit", 
                "Set Soc EDC Limit", 
                "Set Dram Latency Enhance", 
                "Get Dram Latency Enhance", 
                "Set GFX Curve Optimizer", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                ""
            })
            Name (OBIT, Package (0xFD)
            {
                0x00020001, 
                0x0320, 
                0x0FA0, 
                0x21, 
                0x00020002, 
                0x08, 
                0x21, 
                One, 
                0x00020003, 
                0x08, 
                0x3F, 
                One, 
                0x00020004, 
                0x08, 
                0x3F, 
                One, 
                0x00020005, 
                0x15, 
                0x3A, 
                One, 
                0x00020006, 
                0x08, 
                0x3F, 
                One, 
                0x00020007, 
                Zero, 
                0x3F, 
                One, 
                0x00020008, 
                Zero, 
                0x03FF, 
                One, 
                0x00020009, 
                0x1D, 
                0x87, 
                One, 
                0x0002000A, 
                0x3C, 
                0x0672, 
                One, 
                0x0002000B, 
                0x3C, 
                0x0672, 
                One, 
                0x0002000C, 
                0x3C, 
                0x0672, 
                One, 
                0x0002000D, 
                0x06, 
                0x36, 
                One, 
                0x0002000E, 
                0x04, 
                0x0C, 
                One, 
                0x0002000F, 
                0x04, 
                0x0C, 
                One, 
                0x00020010, 
                0x0A, 
                0x51, 
                One, 
                0x00020011, 
                0x02, 
                0x0E, 
                One, 
                0x00020012, 
                0x02, 
                0x0E, 
                One, 
                0x00020013, 
                One, 
                0x1F, 
                One, 
                0x00020014, 
                0x09, 
                0x16, 
                One, 
                0x00020015, 
                0x05, 
                0x0E, 
                One, 
                0x00020016, 
                One, 
                0x0F, 
                One, 
                0x00020017, 
                One, 
                0x0F, 
                One, 
                0x00020018, 
                One, 
                0x0F, 
                One, 
                0x00020019, 
                One, 
                0x0F, 
                One, 
                0x0002001A, 
                One, 
                0x0F, 
                One, 
                0x0002001B, 
                One, 
                0x3F, 
                One, 
                0x0002001C, 
                One, 
                0x0F, 
                One, 
                0x0002001D, 
                One, 
                0x0F, 
                One, 
                0x0002001E, 
                One, 
                0x1F, 
                One, 
                0x0002001F, 
                One, 
                0x0F, 
                One, 
                0x00020020, 
                Zero, 
                One, 
                One, 
                0x00020021, 
                Zero, 
                One, 
                One, 
                0x00020022, 
                Zero, 
                0x07, 
                One, 
                0x00020023, 
                Zero, 
                0x04, 
                One, 
                0x00020024, 
                Zero, 
                0x07, 
                One, 
                0x00020025, 
                Zero, 
                One, 
                One, 
                0x00020026, 
                Zero, 
                One, 
                One, 
                0x00020027, 
                Zero, 
                Ones, 
                One, 
                0x00020028, 
                Zero, 
                0x0F, 
                One, 
                0x00020029, 
                Zero, 
                0x3F, 
                One, 
                0x0002002A, 
                Zero, 
                0x3F, 
                One, 
                0x0002002B, 
                Zero, 
                0x3F, 
                One, 
                0x0002002C, 
                Zero, 
                0x1F, 
                One, 
                0x0002002D, 
                Zero, 
                0x1F, 
                One, 
                0x0002002E, 
                Zero, 
                0x1F, 
                One, 
                0x0002002F, 
                Zero, 
                0x1F, 
                One, 
                0x00020030, 
                0x0258, 
                0x05DC, 
                0x05, 
                0x00020031, 
                Zero, 
                Ones, 
                One, 
                0x00020032, 
                Zero, 
                0x07, 
                One, 
                0x00020033, 
                Zero, 
                One, 
                One, 
                0x00020034, 
                Zero, 
                0xFF, 
                One, 
                0x00020035, 
                0x0320, 
                0x0FA0, 
                0x21, 
                0x00020036, 
                0x0640, 
                0x1F40, 
                One, 
                0x00020037, 
                0x04B0, 
                0x09C4, 
                One, 
                0x00020038, 
                0x0258, 
                0x05DC, 
                0x05, 
                0x00030001, 
                0x0438, 
                0x05DC, 
                0x0A, 
                0x00030002, 
                0x021C, 
                0x02EE, 
                0x05, 
                0x00050001, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050002, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050003, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050004, 
                0x64, 
                0x03E8, 
                0x64, 
                0x00050005, 
                Zero, 
                0xFF, 
                One, 
                Zero
            })
            Name (OBIU, Package (0x15)
            {
                0x0005000A, 
                Zero, 
                0x1E, 
                One, 
                0x0005000B, 
                0x0258, 
                0x05DC, 
                One, 
                0x0005000C, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x0005000D, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050010, 
                Zero, 
                0x1E, 
                One, 
                Zero
            })
            Name (OBD1, Package (0xCB)
            {
                0x00020001, 
                0x46, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x00020002, 
                0x1A, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0D, 
                0x0E, 
                0x0F, 
                0x10, 
                0x11, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x00020005, 
                0x26, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x22, 
                0x23, 
                0x24, 
                0x25, 
                0x26, 
                0x27, 
                0x28, 
                0x29, 
                0x2A, 
                0x2B, 
                0x2C, 
                0x2D, 
                0x2E, 
                0x2F, 
                0x30, 
                0x31, 
                0x32, 
                0x33, 
                0x34, 
                0x35, 
                0x36, 
                0x37, 
                0x38, 
                0x39, 
                0x3A, 
                0x00020007, 
                0x12, 
                Zero, 
                One, 
                0x02, 
                0x03, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x38, 
                0x39, 
                0x3A, 
                0x3B, 
                0x3E, 
                0x3F, 
                0x00020014, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0E, 
                0x10, 
                0x12, 
                0x14, 
                0x0002002C, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002D, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002E, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002F, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                Zero
            })
            Name (OBD2, Package (0x52)
            {
                0x00020035, 
                0x46, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x0002003A, 
                0x03, 
                Zero, 
                One, 
                0x02, 
                0x0005000E, 
                0x02, 
                Zero, 
                One, 
                Zero
            })
            Method (BM01, 0, NotSerialized)
            {
            }

            Method (XINI, 0, NotSerialized)
            {
            }

            Method (EM01, 0, NotSerialized)
            {
            }

            Method (BM05, 1, NotSerialized)
            {
            }

            Method (EM05, 1, NotSerialized)
            {
            }

            Method (HM06, 0, NotSerialized)
            {
            }

            Method (HM07, 1, NotSerialized)
            {
            }

            Method (SBSL, 1, NotSerialized)
            {
                Field (PMRG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x2E), 
                    SBSL,   8
                }

                Local0 = (Arg0 | One)
                SBSL = Local0
            }

            Method (SETV, 2, NotSerialized)
            {
            }

            Method (GETV, 1, NotSerialized)
            {
            }

            Method (CPTB, 2, NotSerialized)
            {
                Name (LOID, Zero)
                CreateDWordField (Arg1, Zero, BUF0)
                CreateDWordField (Arg1, 0x04, BUF1)
                CreateDWordField (Arg1, 0x08, BUF2)
                CreateDWordField (Arg1, 0x0C, BUF3)
                Local0 = Zero
                LOID = DerefOf (OBIT [Local0])
                While (LOID)
                {
                    If ((LOID == Arg0))
                    {
                        BUF0 = DerefOf (OBIT [(Local0 + Zero)])
                        BUF1 = DerefOf (OBIT [(Local0 + One)])
                        BUF2 = DerefOf (OBIT [(Local0 + 0x02)])
                        BUF3 = DerefOf (OBIT [(Local0 + 0x03)])
                        Break
                    }

                    Local0 += 0x04
                    LOID = DerefOf (OBIT [Local0])
                }

                If ((LOID == Zero))
                {
                    Local0 = Zero
                    LOID = DerefOf (OBIU [Local0])
                    While (LOID)
                    {
                        If ((LOID == Arg0))
                        {
                            BUF0 = DerefOf (OBIU [(Local0 + Zero)])
                            BUF1 = DerefOf (OBIU [(Local0 + One)])
                            BUF2 = DerefOf (OBIU [(Local0 + 0x02)])
                            BUF3 = DerefOf (OBIU [(Local0 + 0x03)])
                            Break
                        }

                        Local0 += 0x04
                        LOID = DerefOf (OBIU [Local0])
                    }
                }

                If ((LOID == Zero))
                {
                    Return (0xFF)
                }

                Return (Zero)
            }

            Name (GF01, Zero)
            Name (GVBF, Buffer (0x05)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
            })
            CreateDWordField (GVBF, Zero, GVB1)
            CreateByteField (GVBF, 0x04, GVB2)
            Method (AM01, 0, NotSerialized)
            {
                Return (CMDV) /* \AOD_.CMDV */
            }

            Method (AM02, 0, NotSerialized)
            {
                If (!GF01)
                {
                    BM01 ()
                    XINI ()
                    EM01 ()
                    GF01 = One
                }

                Return (Zero)
            }

            Method (AM03, 0, NotSerialized)
            {
                Return (OBID) /* \AOD_.OBID */
            }

            Method (AM04, 1, NotSerialized)
            {
                Name (LODT, Package (0x66)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD1 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD1 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD1 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD1 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD1 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD2 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD2 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD2 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD2 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD2 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Return (LODT) /* \AOD_.AM04.LODT */
            }

            Method (AM05, 1, NotSerialized)
            {
                CreateDWordField (Arg0, Zero, ACMD)
                CreateField (OBUF, Zero, (SizeOf (OBUF) * 0x08), TEMP)
                TEMP = Zero
                CreateWordField (OBUF, Zero, BSCD)
                CreateDWordField (OBUF, 0x02, BSTS)
                CreateWordField (OBUF, 0x06, BSD1)
                CreateDWordField (OBUF, 0x08, BBSN)
                CreateDWordField (OBUF, 0x0C, BBVS)
                CreateDWordField (OBUF, 0x10, BBCB)
                CreateWordField (OBUF, 0x14, BBMC)
                CreateByteField (OBUF, 0x16, BTCL)
                CreateByteField (OBUF, 0x17, BTRR)
                CreateByteField (OBUF, 0x18, BTRW)
                CreateByteField (OBUF, 0x19, BRAS)
                CreateByteField (OBUF, 0x1A, BTRP)
                CreateWordField (OBUF, 0x1B, BVIO)
                CreateWordField (OBUF, 0x1D, BVTT)
                CreateWordField (OBUF, 0x1F, BVPP)
                CreateWordField (OBUF, 0x21, BODT)
                CreateWordField (OBUF, 0x23, BRPG)
                CreateByteField (OBUF, 0x25, BTRC)
                CreateWordField (OBUF, 0x26, BRFC)
                CreateWordField (OBUF, 0x28, BRF2)
                CreateWordField (OBUF, 0x2A, BRF4)
                CreateByteField (OBUF, 0x2C, BFAW)
                CreateByteField (OBUF, 0x2D, BRRS)
                CreateByteField (OBUF, 0x2E, BRRL)
                CreateByteField (OBUF, 0x2F, BTWR)
                CreateByteField (OBUF, 0x30, BWTS)
                CreateByteField (OBUF, 0x31, BWTL)
                CreateByteField (OBUF, 0x32, BCKE)
                CreateByteField (OBUF, 0x33, BCWL)
                CreateByteField (OBUF, 0x34, BRTP)
                CreateByteField (OBUF, 0x35, BRSC)
                CreateByteField (OBUF, 0x36, BRSL)
                CreateByteField (OBUF, 0x37, BRSD)
                CreateByteField (OBUF, 0x38, BRDD)
                CreateByteField (OBUF, 0x39, BWSC)
                CreateByteField (OBUF, 0x3A, BWSL)
                CreateByteField (OBUF, 0x3B, BWSD)
                CreateByteField (OBUF, 0x3C, BWDD)
                CreateByteField (OBUF, 0x3D, BRWR)
                CreateByteField (OBUF, 0x3E, BWRD)
                CreateByteField (OBUF, 0x3F, BRDN)
                CreateByteField (OBUF, 0x40, BM2T)
                CreateByteField (OBUF, 0x41, RBNM)
                CreateByteField (OBUF, 0x42, RBWR)
                CreateByteField (OBUF, 0x43, RBPK)
                CreateByteField (OBUF, 0x44, BPWD)
                CreateByteField (OBUF, 0x45, BOCD)
                CreateDWordField (OBUF, 0x46, BOCV)
                CreateDWordField (OBUF, 0x4A, BOCF)
                CreateByteField (OBUF, 0x4E, BSMT)
                CreateDWordField (OBUF, 0x4F, BTOF)
                CreateByteField (OBUF, 0x53, BEDC)
                CreateWordField (OBUF, 0x54, BCNT)
                CreateByteField (OBUF, 0x56, BACS)
                CreateByteField (OBUF, 0x57, BCOS)
                CreateByteField (OBUF, 0x58, BCES)
                CreateByteField (OBUF, 0x59, BCBC)
                CreateByteField (OBUF, 0x5A, BCBA)
                CreateByteField (OBUF, 0x5B, BCBO)
                CreateByteField (OBUF, 0x5C, BCBE)
                CreateDWordField (OBUF, 0x5D, BCVP)
                CreateByteField (OBUF, 0x5F, BEDO)
                CreateDWordField (OBUF, 0x60, BNLC)
                CreateDWordField (OBUF, 0x64, BNLM)
                CreateDWordField (OBUF, 0x68, BNLS)
                CreateDWordField (OBUF, 0x6C, BPPL)
                CreateDWordField (OBUF, 0x70, BTDL)
                CreateDWordField (OBUF, 0x74, BEDL)
                CreateByteField (OBUF, 0x78, BFOC)
                CreateByteField (OBUF, 0x79, BSVD)
                CreateWordField (OBUF, 0x7A, BFCK)
                CreateByteField (OBUF, 0x7C, BDPC)
                CreateByteField (OBUF, 0x7D, BCPS)
                CreateWordField (OBUF, 0x7E, BFMX)
                CreateWordField (OBUF, 0x80, BGMX)
                CreateWordField (OBUF, 0x82, BVDG)
                CreateDWordField (OBUF, 0x84, BEOG)
                CreateDWordField (OBUF, 0x88, BEOS)
                CreateDWordField (OBUF, 0x8C, BPPT)
                CreateDWordField (OBUF, 0x90, BTDC)
                CreateDWordField (OBUF, 0x94, BEDM)
                CreateDWordField (OBUF, 0x98, BSCA)
                CreateByteField (OBUF, 0x9C, BDMI)
                CreateByteField (OBUF, 0x9D, BGAS)
                CreateByteField (OBUF, 0x9E, BGAG)
                CreateByteField (OBUF, 0x9F, BNPS)
                CreateByteField (OBUF, 0xA0, BNPG)
                CreateDWordField (OBUF, 0xA1, BPCS)
                CreateWordField (OBUF, 0xA5, BIOD)
                CreateWordField (OBUF, 0xA7, BGFV)
                CreateWordField (OBUF, 0xA9, BGFX)
                CreateDWordField (OBUF, 0xAB, BSTD)
                CreateDWordField (OBUF, 0xAF, BSED)
                CreateByteField (OBUF, 0xB3, BSLC)
                CreateByteField (OBUF, 0xB4, BGLC)
                If ((ACMD == 0x00010001))
                {
                    R101 (Arg0)
                }
                ElseIf ((ACMD == 0x00010002))
                {
                    R102 (Arg0)
                }
                ElseIf ((ACMD == 0x00020001))
                {
                    R201 (Arg0)
                }
                ElseIf ((ACMD == 0x00020002))
                {
                    R202 (Arg0)
                }
                ElseIf ((ACMD == 0x00020003))
                {
                    R203 (Arg0)
                }
                ElseIf ((ACMD == 0x00020004))
                {
                    R204 (Arg0)
                }
                ElseIf ((ACMD == 0x00020005))
                {
                    R205 (Arg0)
                }
                ElseIf ((ACMD == 0x00020006))
                {
                    R206 (Arg0)
                }
                ElseIf ((ACMD == 0x00020007))
                {
                    R207 (Arg0)
                }
                ElseIf ((ACMD == 0x00020008))
                {
                    R208 (Arg0)
                }
                ElseIf ((ACMD == 0x00020009))
                {
                    R209 (Arg0)
                }
                ElseIf ((ACMD == 0x0002000A))
                {
                    R20A (Arg0)
                }
                ElseIf ((ACMD == 0x0002000B))
                {
                    R20B (Arg0)
                }
                ElseIf ((ACMD == 0x0002000C))
                {
                    R20C (Arg0)
                }
                ElseIf ((ACMD == 0x0002000D))
                {
                    R20D (Arg0)
                }
                ElseIf ((ACMD == 0x0002000E))
                {
                    R20E (Arg0)
                }
                ElseIf ((ACMD == 0x0002000F))
                {
                    R20F (Arg0)
                }
                ElseIf ((ACMD == 0x00020010))
                {
                    R210 (Arg0)
                }
                ElseIf ((ACMD == 0x00020011))
                {
                    R211 (Arg0)
                }
                ElseIf ((ACMD == 0x00020012))
                {
                    R212 (Arg0)
                }
                ElseIf ((ACMD == 0x00020013))
                {
                    R213 (Arg0)
                }
                ElseIf ((ACMD == 0x00020014))
                {
                    R214 (Arg0)
                }
                ElseIf ((ACMD == 0x00020015))
                {
                    R215 (Arg0)
                }
                ElseIf ((ACMD == 0x00020016))
                {
                    R216 (Arg0)
                }
                ElseIf ((ACMD == 0x00020017))
                {
                    R217 (Arg0)
                }
                ElseIf ((ACMD == 0x00020018))
                {
                    R218 (Arg0)
                }
                ElseIf ((ACMD == 0x00020019))
                {
                    R219 (Arg0)
                }
                ElseIf ((ACMD == 0x0002001A))
                {
                    R21A (Arg0)
                }
                ElseIf ((ACMD == 0x0002001B))
                {
                    R21B (Arg0)
                }
                ElseIf ((ACMD == 0x0002001C))
                {
                    R21C (Arg0)
                }
                ElseIf ((ACMD == 0x0002001D))
                {
                    R21D (Arg0)
                }
                ElseIf ((ACMD == 0x0002001E))
                {
                    R21E (Arg0)
                }
                ElseIf ((ACMD == 0x0002001F))
                {
                    R21F (Arg0)
                }
                ElseIf ((ACMD == 0x00020020))
                {
                    R220 (Arg0)
                }
                ElseIf ((ACMD == 0x00020021))
                {
                    R221 (Arg0)
                }
                ElseIf ((ACMD == 0x00020022))
                {
                    R222 (Arg0)
                }
                ElseIf ((ACMD == 0x00020023))
                {
                    R223 (Arg0)
                }
                ElseIf ((ACMD == 0x00020024))
                {
                    R224 (Arg0)
                }
                ElseIf ((ACMD == 0x00020025))
                {
                    R225 (Arg0)
                }
                ElseIf ((ACMD == 0x00020026))
                {
                    R226 (Arg0)
                }
                ElseIf ((ACMD == 0x00020027))
                {
                    R227 (Arg0)
                }
                ElseIf ((ACMD == 0x00020028))
                {
                    R228 (Arg0)
                }
                ElseIf ((ACMD == 0x00020029))
                {
                    R229 (Arg0)
                }
                ElseIf ((ACMD == 0x0002002A))
                {
                    R22A (Arg0)
                }
                ElseIf ((ACMD == 0x0002002B))
                {
                    R22B (Arg0)
                }
                ElseIf ((ACMD == 0x0002002C))
                {
                    R22C (Arg0)
                }
                ElseIf ((ACMD == 0x0002002D))
                {
                    R22D (Arg0)
                }
                ElseIf ((ACMD == 0x0002002E))
                {
                    R22E (Arg0)
                }
                ElseIf ((ACMD == 0x0002002F))
                {
                    R22F (Arg0)
                }
                ElseIf ((ACMD == 0x00020030))
                {
                    R230 (Arg0)
                }
                ElseIf ((ACMD == 0x00020031))
                {
                    R231 (Arg0)
                }
                ElseIf ((ACMD == 0x00020032))
                {
                    R232 (Arg0)
                }
                ElseIf ((ACMD == 0x00020033))
                {
                    R233 (Arg0)
                }
                ElseIf ((ACMD == 0x00020034))
                {
                    R234 (Arg0)
                }
                ElseIf ((ACMD == 0x00020035))
                {
                    R235 (Arg0)
                }
                ElseIf ((ACMD == 0x00020036))
                {
                    R236 (Arg0)
                }
                ElseIf ((ACMD == 0x00020037))
                {
                    R237 (Arg0)
                }
                ElseIf ((ACMD == 0x00020038))
                {
                    R238 (Arg0)
                }
                ElseIf ((ACMD == 0x00020039))
                {
                    R239 (Arg0)
                }
                ElseIf ((ACMD == 0x0002003A))
                {
                    R23A (Arg0)
                }
                ElseIf ((ACMD == 0x00050001))
                {
                    R23B (Arg0)
                }
                ElseIf ((ACMD == 0x00050002))
                {
                    R23C (Arg0)
                }
                ElseIf ((ACMD == 0x00050003))
                {
                    R23D (Arg0)
                }
                ElseIf ((ACMD == 0x00050004))
                {
                    R23E (Arg0)
                }
                ElseIf ((ACMD == 0x00050005))
                {
                    R23F (Arg0)
                }
                ElseIf ((ACMD == 0x00030001))
                {
                    R301 (Arg0)
                }
                ElseIf ((ACMD == 0x00030002))
                {
                    R302 (Arg0)
                }
                ElseIf ((ACMD == 0x00030003))
                {
                    R303 (Arg0)
                }
                ElseIf ((ACMD == 0x00050006))
                {
                    R304 (Arg0)
                }
                ElseIf ((ACMD == 0x00050007))
                {
                    R305 (Arg0)
                }
                ElseIf ((ACMD == 0x00050008))
                {
                    R306 (Arg0)
                }
                ElseIf ((ACMD == 0x00050009))
                {
                    R307 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000A))
                {
                    R308 (Arg0)
                }
                ElseIf ((ACMD == 0x00050010))
                {
                    R510 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000B))
                {
                    R309 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000C))
                {
                    R30A (Arg0)
                }
                ElseIf ((ACMD == 0x0005000D))
                {
                    R30B (Arg0)
                }
                ElseIf ((ACMD == 0x0005000E))
                {
                    R30C (Arg0)
                }
                ElseIf ((ACMD == 0x0005000F))
                {
                    R30D (Arg0)
                }
                ElseIf ((ACMD == 0x00040001))
                {
                    R401 (Arg0)
                }
                ElseIf ((ACMD == 0x00040002))
                {
                    R402 (Arg0)
                }
                Else
                {
                }

                BSCD = ASCD /* \AOD_.ASCD */
                BSTS = ASTS /* \AOD_.ASTS */
                BSD1 = RSD1 /* \AOD_.RSD1 */
                BBSN = MBSN /* \AOD_.MBSN */
                BBVS = MBVS /* \AOD_.MBVS */
                BBCB = MBCB /* \AOD_.MBCB */
                BBMC = MBMC /* \AOD_.MBMC */
                BTCL = TTCL /* \AOD_.TTCL */
                BTRR = TRCR /* \AOD_.TRCR */
                BTRW = TRCW /* \AOD_.TRCW */
                BRAS = TRAS /* \AOD_.TRAS */
                BTRP = TTRP /* \AOD_.TTRP */
                BVIO = VDIO /* \AOD_.VDIO */
                BVTT = VMTT /* \AOD_.VMTT */
                BVPP = VMPP /* \AOD_.VMPP */
                BODT = PODT /* \AOD_.PODT */
                BRPG = TRPG /* \AOD_.TRPG */
                BTRC = TTRC /* \AOD_.TTRC */
                BRFC = TRFC /* \AOD_.TRFC */
                BRF2 = TRF2 /* \AOD_.TRF2 */
                BRF4 = TRF4 /* \AOD_.TRF4 */
                BFAW = TFAW /* \AOD_.TFAW */
                BRRS = TRRS /* \AOD_.TRRS */
                BRRL = TRRL /* \AOD_.TRRL */
                BTWR = TTWR /* \AOD_.TTWR */
                BWTS = TWTS /* \AOD_.TWTS */
                BWTL = TWTL /* \AOD_.TWTL */
                BCKE = TCKE /* \AOD_.TCKE */
                BCWL = TCWL /* \AOD_.TCWL */
                BRTP = TRTP /* \AOD_.TRTP */
                BRSC = TRSC /* \AOD_.TRSC */
                BRSL = TRSL /* \AOD_.TRSL */
                BRSD = TRSD /* \AOD_.TRSD */
                BRDD = TRDD /* \AOD_.TRDD */
                BWSC = TWSC /* \AOD_.TWSC */
                BWSL = TWSL /* \AOD_.TWSL */
                BWSD = TWSD /* \AOD_.TWSD */
                BWDD = TWDD /* \AOD_.TWDD */
                BRWR = TRWR /* \AOD_.TRWR */
                BWRD = TWRD /* \AOD_.TWRD */
                BRDN = GRDN /* \AOD_.GRDN */
                BM2T = CM2T /* \AOD_.CM2T */
                RBNM = RTNM /* \AOD_.RTNM */
                RBWR = RTWR /* \AOD_.RTWR */
                RBPK = RTPK /* \AOD_.RTPK */
                BPWD = PWDE /* \AOD_.PWDE */
                BOCD = OCDS /* \AOD_.OCDS */
                BOCV = OCVM /* \AOD_.OCVM */
                BOCF = OCFM /* \AOD_.OCFM */
                BSMT = SMTE /* \AOD_.SMTE */
                BTOF = TOFF /* \AOD_.TOFF */
                BEDC = EDCT /* \AOD_.EDCT */
                BCNT = ACNT /* \AOD_.ACNT */
                BACS = ACSP /* \AOD_.ACSP */
                BCOS = COSP /* \AOD_.COSP */
                BCES = CESP /* \AOD_.CESP */
                BCBC = CBCK /* \AOD_.CBCK */
                BCBA = CBAC /* \AOD_.CBAC */
                BCBO = CBCO /* \AOD_.CBCO */
                BCBE = CBCE /* \AOD_.CBCE */
                BCVP = CDVP /* \AOD_.CDVP */
                BEDO = EDCO /* \AOD_.EDCO */
                BNLC = INLC /* \AOD_.INLC */
                BNLM = INLM /* \AOD_.INLM */
                BNLS = INLS /* \AOD_.INLS */
                BPPL = PPTL /* \AOD_.PPTL */
                BTDL = TDCL /* \AOD_.TDCL */
                BEDL = EDCL /* \AOD_.EDCL */
                BFOC = FCOC /* \AOD_.FCOC */
                BSVD = SVID /* \AOD_.SVID */
                BFCK = FCLK /* \AOD_.FCLK */
                BDPC = MDPC /* \AOD_.MDPC */
                BCPS = MCPS /* \AOD_.MCPS */
                BFMX = FMAX /* \AOD_.FMAX */
                BGMX = GMAX /* \AOD_.GMAX */
                BVDG = CVDG /* \AOD_.CVDG */
                BEOG = ECOG /* \AOD_.ECOG */
                BEOS = ECOS /* \AOD_.ECOS */
                BPPT = PPTS /* \AOD_.PPTS */
                BTDC = TDCS /* \AOD_.TDCS */
                BEDM = EDCS /* \AOD_.EDCS */
                BSCA = SCAS /* \AOD_.SCAS */
                BDMI = DMIS /* \AOD_.DMIS */
                BGAS = GAMS /* \AOD_.GAMS */
                BGAG = GAMG /* \AOD_.GAMG */
                BNPS = NPSS /* \AOD_.NPSS */
                BNPG = NPSG /* \AOD_.NPSG */
                BPCS = COPS /* \AOD_.COPS */
                BIOD = IVDG /* \AOD_.IVDG */
                BGFV = OGFV /* \AOD_.OGFV */
                BGFX = OGFX /* \AOD_.OGFX */
                BSTD = OTDC /* \AOD_.OTDC */
                BSED = OEDC /* \AOD_.OEDC */
                BSLC = DMLC /* \AOD_.DMLC */
                BGLC = DMLG /* \AOD_.DMLG */
                Return (OBUF) /* \AOD_.OBUF */
            }

            Method (AM06, 1, NotSerialized)
            {
                Name (INFO, Buffer (0x10)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                CPTB (Arg0, INFO)
                Return (INFO) /* \AOD_.AM06.INFO */
            }

            Method (AM07, 1, NotSerialized)
            {
                Name (BSPD, Buffer (0x0214){})
                If ((Arg0 > 0x0F))
                {
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                If ((Arg0 == Zero))
                {
                    BSPD = DSPD /* \AOD_.DSPD */
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                Local0 = Zero
                Local0 += (Arg0 * 0x0214)
                Local1 = 0x0214
                Local2 = Zero
                While (Local1)
                {
                    BSPD [Local2] = DerefOf (DSPD [Local0])
                    Local1--
                    Local0++
                    Local2++
                }

                Return (BSPD) /* \AOD_.AM07.BSPD */
            }

            Method (AM08, 0, NotSerialized)
            {
                Return (OBIE) /* \AOD_.OBIE */
            }

            Name (CMDV, 0x05)
            Name (OBUF, Buffer (0xC8){})
            OperationRegion (AODT, SystemMemory, 0xBCDEB018, 0x220C)
            Field (AODT, AnyAcc, NoLock, Preserve)
            {
                ASCD,   16, 
                ASTS,   32, 
                RSD1,   16, 
                MBSN,   32, 
                MBVS,   32, 
                MBCB,   32, 
                MBMC,   16, 
                TTCL,   8, 
                TRCR,   8, 
                TRCW,   8, 
                TRAS,   8, 
                TTRP,   8, 
                VDIO,   16, 
                VMTT,   16, 
                VMPP,   16, 
                PODT,   16, 
                TRPG,   16, 
                TTRC,   8, 
                TRFC,   16, 
                TRF2,   16, 
                TRF4,   16, 
                TFAW,   8, 
                TRRS,   8, 
                TRRL,   8, 
                TTWR,   8, 
                TWTS,   8, 
                TWTL,   8, 
                TCKE,   8, 
                TCWL,   8, 
                TRTP,   8, 
                TRSC,   8, 
                TRSL,   8, 
                TRSD,   8, 
                TRDD,   8, 
                TWSC,   8, 
                TWSL,   8, 
                TWSD,   8, 
                TWDD,   8, 
                TRWR,   8, 
                TWRD,   8, 
                GRDN,   8, 
                CM2T,   8, 
                RTNM,   8, 
                RTWR,   8, 
                RTPK,   8, 
                PWDE,   8, 
                OCDS,   8, 
                OCVM,   32, 
                OCFM,   32, 
                SMTE,   8, 
                TOFF,   32, 
                EDCT,   8, 
                ACNT,   16, 
                ACSP,   8, 
                COSP,   8, 
                CESP,   8, 
                CBCK,   8, 
                CBAC,   8, 
                CBCO,   8, 
                CBCE,   8, 
                CDVP,   16, 
                EDCO,   8, 
                INLC,   32, 
                INLM,   32, 
                INLS,   32, 
                PPTL,   32, 
                TDCL,   32, 
                EDCL,   32, 
                FCOC,   8, 
                SVID,   8, 
                FCLK,   16, 
                MDPC,   8, 
                MCPS,   8, 
                FMAX,   16, 
                GMAX,   16, 
                CVDG,   16, 
                ECOG,   32, 
                ECOS,   32, 
                PPTS,   32, 
                TDCS,   32, 
                EDCS,   32, 
                SCAS,   32, 
                DMIS,   8, 
                GAMS,   8, 
                GAMG,   8, 
                NPSS,   8, 
                NPSG,   8, 
                COPS,   32, 
                IVDG,   16, 
                OGFV,   16, 
                OGFX,   16, 
                OTDC,   32, 
                OEDC,   32, 
                DMLC,   8, 
                DMLG,   8, 
                GPSM,   8, 
                MRSD,   80, 
                RSD2,   64, 
                NDPC,   8, 
                NCPS,   8, 
                RSD3,   16, 
                DSPD,   68096
            }

            Method (R101, 1, NotSerialized)
            {
                MBVS = 0x05
                MBCB = 0x80000000
                ASMI (0x9D)
            }

            Method (R102, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x40000000
                MBCB = Local0
                ASMI (0x9E)
            }

            Method (R201, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MCLK)
                MBVS = 0x05
                MBMC = MCLK /* \AOD_.R201.MCLK */
                MBCB = One
                ASMI (0x9D)
            }

            Method (R202, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTCL)
                MBVS = 0x05
                TTCL = MTCL /* \AOD_.R202.MTCL */
                MBCB = 0x02
                ASMI (0x9D)
            }

            Method (R203, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDD)
                MBVS = 0x05
                TRCR = MRDD /* \AOD_.R203.MRDD */
                MBCB = 0x04
                ASMI (0x9D)
            }

            Method (R204, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDW)
                MBVS = 0x05
                TRCW = MRDW /* \AOD_.R204.MRDW */
                MBCB = 0x08
                ASMI (0x9D)
            }

            Method (R205, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRS)
                MBVS = 0x05
                TRAS = MTRS /* \AOD_.R205.MTRS */
                MBCB = 0x20
                ASMI (0x9D)
            }

            Method (R206, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRP)
                MBVS = 0x05
                TTRP = MTRP /* \AOD_.R206.MTRP */
                MBCB = 0x10
                ASMI (0x9D)
            }

            Method (R207, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MPOT)
                MBVS = 0x05
                PODT = MPOT /* \AOD_.R207.MPOT */
                MBCB = 0x3000
                ASMI (0x9D)
            }

            Method (R208, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MRPG)
                MBVS = 0x05
                TRPG = MRPG /* \AOD_.R208.MRPG */
                MBCB = 0x4000
                ASMI (0x9D)
            }

            Method (R209, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTRC = SVAL /* \AOD_.R209.SVAL */
                MBCB = 0x5000
                ASMI (0x9D)
            }

            Method (R20A, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRFC = SVAL /* \AOD_.R20A.SVAL */
                MBCB = 0x6000
                ASMI (0x9D)
            }

            Method (R20B, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF2 = SVAL /* \AOD_.R20B.SVAL */
                MBCB = 0x7000
                ASMI (0x9D)
            }

            Method (R20C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF4 = SVAL /* \AOD_.R20C.SVAL */
                MBCB = 0x8000
                ASMI (0x9D)
            }

            Method (R20D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TFAW = SVAL /* \AOD_.R20D.SVAL */
                MBCB = 0x9000
                ASMI (0x9D)
            }

            Method (R20E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRS = SVAL /* \AOD_.R20E.SVAL */
                MBCB = 0xA000
                ASMI (0x9D)
            }

            Method (R20F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRL = SVAL /* \AOD_.R20F.SVAL */
                MBCB = 0xB000
                ASMI (0x9D)
            }

            Method (R210, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTWR = SVAL /* \AOD_.R210.SVAL */
                MBCB = 0xC000
                ASMI (0x9D)
            }

            Method (R211, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTS = SVAL /* \AOD_.R211.SVAL */
                MBCB = 0xD000
                ASMI (0x9D)
            }

            Method (R212, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTL = SVAL /* \AOD_.R212.SVAL */
                MBCB = 0xE000
                ASMI (0x9D)
            }

            Method (R213, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCKE = SVAL /* \AOD_.R213.SVAL */
                MBCB = 0xF000
                ASMI (0x9D)
            }

            Method (R214, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCWL = SVAL /* \AOD_.R214.SVAL */
                MBCB = 0x00010000
                ASMI (0x9D)
            }

            Method (R215, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRTP = SVAL /* \AOD_.R215.SVAL */
                MBCB = 0x00020000
                ASMI (0x9D)
            }

            Method (R216, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSC = SVAL /* \AOD_.R216.SVAL */
                MBCB = 0x00030000
                ASMI (0x9D)
            }

            Method (R217, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSL = SVAL /* \AOD_.R217.SVAL */
                MBCB = 0x00040000
                ASMI (0x9D)
            }

            Method (R218, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSD = SVAL /* \AOD_.R218.SVAL */
                MBCB = 0x00050000
                ASMI (0x9D)
            }

            Method (R219, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRDD = SVAL /* \AOD_.R219.SVAL */
                MBCB = 0x00060000
                ASMI (0x9D)
            }

            Method (R21A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSC = SVAL /* \AOD_.R21A.SVAL */
                MBCB = 0x00070000
                ASMI (0x9D)
            }

            Method (R21B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSL = SVAL /* \AOD_.R21B.SVAL */
                MBCB = 0x00080000
                ASMI (0x9D)
            }

            Method (R21C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSD = SVAL /* \AOD_.R21C.SVAL */
                MBCB = 0x00090000
                ASMI (0x9D)
            }

            Method (R21D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWDD = SVAL /* \AOD_.R21D.SVAL */
                MBCB = 0x000A0000
                ASMI (0x9D)
            }

            Method (R21E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRWR = SVAL /* \AOD_.R21E.SVAL */
                MBCB = 0x000B0000
                ASMI (0x9D)
            }

            Method (R21F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWRD = SVAL /* \AOD_.R21F.SVAL */
                MBCB = 0x000C0000
                ASMI (0x9D)
            }

            Method (R220, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GRDN = SVAL /* \AOD_.R220.SVAL */
                MBCB = 0x000D0000
                ASMI (0x9D)
            }

            Method (R221, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CM2T = SVAL /* \AOD_.R221.SVAL */
                MBCB = 0x000E0000
                ASMI (0x9D)
            }

            Method (R222, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTNM = SVAL /* \AOD_.R222.SVAL */
                MBCB = 0x000F0000
                ASMI (0x9D)
            }

            Method (R223, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTWR = SVAL /* \AOD_.R223.SVAL */
                MBCB = 0x00100000
                ASMI (0x9D)
            }

            Method (R224, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTPK = SVAL /* \AOD_.R224.SVAL */
                MBCB = 0x00200000
                ASMI (0x9D)
            }

            Method (R225, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PWDE = SVAL /* \AOD_.R225.SVAL */
                MBCB = 0x00300000
                ASMI (0x9D)
            }

            Method (R226, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SMTE = SVAL /* \AOD_.R226.SVAL */
                MBCB = 0x00400000
                ASMI (0x9D)
            }

            Method (R227, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACNT = SVAL /* \AOD_.R227.SVAL */
                MBCB = 0x00500000
                ASMI (0x9D)
            }

            Method (R228, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCT = SVAL /* \AOD_.R228.SVAL */
                MBCB = 0x00600000
                ASMI (0x9D)
            }

            Method (R229, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACSP = SVAL /* \AOD_.R229.SVAL */
                MBCB = 0x00800000
                ASMI (0x9D)
            }

            Method (R22A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COSP = SVAL /* \AOD_.R22A.SVAL */
                MBCB = 0x00900000
                ASMI (0x9D)
            }

            Method (R22B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CESP = SVAL /* \AOD_.R22B.SVAL */
                MBCB = 0x00A00000
                ASMI (0x9D)
            }

            Method (R22C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCK = SVAL /* \AOD_.R22C.SVAL */
                MBCB = 0x00B00000
                ASMI (0x9D)
            }

            Method (R22D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBAC = SVAL /* \AOD_.R22D.SVAL */
                MBCB = 0x00C00000
                ASMI (0x9D)
            }

            Method (R22E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCO = SVAL /* \AOD_.R22E.SVAL */
                MBCB = 0x00D00000
                ASMI (0x9D)
            }

            Method (R22F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCE = SVAL /* \AOD_.R22F.SVAL */
                MBCB = 0x00E00000
                ASMI (0x9D)
            }

            Method (R230, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CDVP = SVAL /* \AOD_.R230.SVAL */
                MBCB = 0x00700000
                ASMI (0x9D)
            }

            Method (R231, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLM = SVAL /* \AOD_.R231.SVAL */
                MBCB = 0x00100001
                ASMI (0x9D)
            }

            Method (R232, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLS = SVAL /* \AOD_.R232.SVAL */
                MBCB = 0x00100002
                ASMI (0x9D)
            }

            Method (R233, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCOC = SVAL /* \AOD_.R233.SVAL */
                MBCB = 0x00100003
                ASMI (0x9D)
            }

            Method (R234, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SVID = SVAL /* \AOD_.R234.SVAL */
                MBCB = 0x00100004
                ASMI (0x9D)
            }

            Method (R235, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCLK = SVAL /* \AOD_.R235.SVAL */
                MBCB = 0x00100005
                ASMI (0x9D)
            }

            Method (R236, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FMAX = SVAL /* \AOD_.R236.SVAL */
                MBCB = 0x00100006
                ASMI (0x9D)
            }

            Method (R237, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GMAX = SVAL /* \AOD_.R237.SVAL */
                MBCB = 0x00100007
                ASMI (0x9D)
            }

            Method (R238, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CVDG = SVAL /* \AOD_.R238.SVAL */
                MBCB = 0x00100008
                ASMI (0x9D)
            }

            Method (R239, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100009
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R23A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ECOS = SVAL /* \AOD_.R23A.SVAL */
                MBCB = 0x0010000A
                ASMI (0x9D)
            }

            Method (R23B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PPTS = SVAL /* \AOD_.R23B.SVAL */
                MBCB = 0x0010000B
                ASMI (0x9D)
            }

            Method (R23C, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TDCS = SVAL /* \AOD_.R23C.SVAL */
                MBCB = 0x0010000C
                ASMI (0x9D)
            }

            Method (R23D, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCS = SVAL /* \AOD_.R23D.SVAL */
                MBCB = 0x0010000D
                ASMI (0x9D)
            }

            Method (R23E, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SCAS = SVAL /* \AOD_.R23E.SVAL */
                MBCB = 0x0010000E
                ASMI (0x9D)
            }

            Method (R23F, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMIS = SVAL /* \AOD_.R23F.SVAL */
                MBCB = 0x0010000F
                ASMI (0x9D)
            }

            Method (R301, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVIO)
                MBVS = 0x05
                VDIO = MVIO /* \AOD_.R301.MVIO */
                MBCB = 0x0100
                ASMI (0x9E)
            }

            Method (R302, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVTT)
                MBVS = 0x05
                VMTT = MVTT /* \AOD_.R302.MVTT */
                MBCB = 0x0200
                ASMI (0x9E)
            }

            Method (R303, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                VMPP = MVPP /* \AOD_.R303.MVPP */
                MBCB = 0x2000
                ASMI (0x9E)
            }

            Method (R304, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GAMS = SVAL /* \AOD_.R304.SVAL */
                MBCB = 0x00100010
                ASMI (0x9D)
            }

            Method (R305, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100020
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R306, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                NPSS = SVAL /* \AOD_.R306.SVAL */
                MBCB = 0x00100030
                ASMI (0x9D)
            }

            Method (R307, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100031
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R308, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COPS = SVAL /* \AOD_.R308.SVAL */
                MBCB = 0x00100032
                ASMI (0x9D)
            }

            Method (R309, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                IVDG = SVAL /* \AOD_.R309.SVAL */
                MBCB = 0x00100033
                ASMI (0x9D)
            }

            Method (R30A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OTDC = SVAL /* \AOD_.R30A.SVAL */
                MBCB = 0x00100034
                ASMI (0x9D)
            }

            Method (R30B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OEDC = SVAL /* \AOD_.R30B.SVAL */
                MBCB = 0x00100035
                ASMI (0x9D)
            }

            Method (R30C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMLC = SVAL /* \AOD_.R30C.SVAL */
                MBCB = 0x00100036
                ASMI (0x9D)
            }

            Method (R30D, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100037
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R401, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x01000000
                ASMI (0x9E)
            }

            Method (R402, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x02000000
                ASMI (0x9E)
            }

            Method (R505, 1, NotSerialized)
            {
                MBVS = 0x05
            }

            Method (R510, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GPSM = SVAL /* \AOD_.R510.SVAL */
                MBCB = 0x00100038
                ASMI (0x9D)
            }

            Name (WQBA, Buffer (0x0A57)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x47, 0x0A, 0x00, 0x00, 0x38, 0x37, 0x00, 0x00,  // G...87..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xDB, 0x9A, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0F, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,  // ..."!...
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,  // ..,...8.
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,  // ..@H..J.
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,  // ........
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,  // ...`P.S.
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,  // ..*.....
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,  // ,.......
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,  // ......(1
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,  // .(......
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,  // P.. J...
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,  // .F.x..$O
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,  // @....`].
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,  // .!P.C@..
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,  // .j..N@..
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,  // N.I..X..
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,  // k.M.I.1.
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0x50, 0x1A, 0x40,  // x\.A.P.@
                /* 00A8 */  0x98, 0xFC, 0x21, 0x2B, 0x06, 0x0C, 0x4A, 0xC2,  // ..!+..J.
                /* 00B0 */  0x58, 0xA8, 0x8B, 0x51, 0xA3, 0x46, 0xCA, 0x06,  // X..Q.F..
                /* 00B8 */  0x64, 0x88, 0xD2, 0x46, 0x8D, 0x1E, 0xD0, 0xF9,  // d..F....
                /* 00C0 */  0x1D, 0xC9, 0xD9, 0x1D, 0xDD, 0x91, 0x24, 0x30,  // ......$0
                /* 00C8 */  0xEA, 0x31, 0x1D, 0x63, 0x61, 0x33, 0x12, 0x6A,  // .1.ca3.j
                /* 00D0 */  0x8C, 0xE6, 0xA0, 0x48, 0xB8, 0x41, 0xA3, 0x25,  // ...H.A.%
                /* 00D8 */  0xC2, 0x6A, 0x5C, 0xB1, 0xCF, 0xCC, 0xC2, 0x87,  // .j\.....
                /* 00E0 */  0x25, 0x8C, 0x23, 0x38, 0xB0, 0x83, 0xB5, 0x68,  // %.#8...h
                /* 00E8 */  0x18, 0xA1, 0x15, 0x04, 0xA7, 0x41, 0x1C, 0x45,  // .....A.E
                /* 00F0 */  0x94, 0x30, 0x0C, 0xCF, 0x98, 0x81, 0x8E, 0x92,  // .0......
                /* 00F8 */  0x21, 0x85, 0x09, 0x7A, 0x02, 0x41, 0x4E, 0x9E,  // !..z.AN.
                /* 0100 */  0x61, 0x19, 0xE2, 0x0C, 0x38, 0x56, 0x8C, 0x50,  // a...8V.P
                /* 0108 */  0x21, 0x31, 0x03, 0x09, 0xFE, 0xFF, 0x3F, 0x81,  // !1....?.
                /* 0110 */  0xAE, 0x31, 0xE4, 0x19, 0x88, 0xDC, 0x03, 0x4E,  // .1.....N
                /* 0118 */  0x20, 0x48, 0xF4, 0x28, 0xC1, 0x8D, 0x6B, 0x54,  //  H.(..kT
                /* 0120 */  0x36, 0xA6, 0xB3, 0xC1, 0x0D, 0xCC, 0x04, 0x71,  // 6......q
                /* 0128 */  0x0E, 0x0F, 0x23, 0x03, 0x42, 0x13, 0x88, 0x1F,  // ..#.B...
                /* 0130 */  0x3B, 0x7C, 0x02, 0xBB, 0x3F, 0x0E, 0x48, 0x21,  // ;|..?.H!
                /* 0138 */  0x82, 0x2E, 0x04, 0x67, 0x5A, 0xA3, 0x80, 0x77,  // ...gZ..w
                /* 0140 */  0xC4, 0xB3, 0x43, 0x5B, 0x10, 0x3A, 0x0B, 0xC4,  // ..C[.:..
                /* 0148 */  0x6A, 0x0C, 0x45, 0x10, 0x11, 0x82, 0x46, 0x31,  // j.E...F1
                /* 0150 */  0x5E, 0x84, 0x50, 0x21, 0xA2, 0x44, 0x3D, 0xE7,  // ^.P!.D=.
                /* 0158 */  0x20, 0xB5, 0x09, 0x50, 0x06, 0x22, 0xB4, 0x60,  //  ..P.".`
                /* 0160 */  0x46, 0x60, 0xF6, 0xCF, 0x00, 0xCC, 0x02, 0xC4,  // F`......
                /* 0168 */  0x1F, 0x81, 0x25, 0x9C, 0x08, 0x64, 0x64, 0x34,  // ..%..dd4
                /* 0170 */  0xF4, 0xB0, 0xE0, 0x93, 0x00, 0x3B, 0x20, 0x78,  // .....; x
                /* 0178 */  0x3E, 0xA7, 0x66, 0x02, 0x07, 0x86, 0x10, 0xAF,  // >.f.....
                /* 0180 */  0x04, 0x88, 0x3A, 0x5A, 0x50, 0x02, 0x4B, 0x39,  // ..:ZP.K9
                /* 0188 */  0x1A, 0x10, 0xDB, 0x03, 0xD3, 0x3D, 0xE0, 0x08,  // .....=..
                /* 0190 */  0xCF, 0xDD, 0x97, 0x83, 0x53, 0xF3, 0x4F, 0xC3,  // ....S.O.
                /* 0198 */  0xD3, 0x7C, 0x48, 0xC0, 0x0C, 0xD1, 0x63, 0x3D,  // .|H...c=
                /* 01A0 */  0x88, 0x80, 0x87, 0xC8, 0x4E, 0x09, 0x06, 0xC4,  // ....N...
                /* 01A8 */  0x7B, 0xBF, 0x16, 0x90, 0x11, 0xBC, 0x24, 0x18,  // {.....$.
                /* 01B0 */  0xD0, 0x93, 0x78, 0x40, 0x00, 0xCB, 0x41, 0xE3,  // ..x@..A.
                /* 01B8 */  0xC0, 0x4F, 0xA8, 0xE2, 0x3B, 0x00, 0x3D, 0x12,  // .O..;.=.
                /* 01C0 */  0xB0, 0x19, 0xC5, 0x37, 0x41, 0x59, 0xC7, 0x07,  // ...7AY..
                /* 01C8 */  0xF4, 0x9C, 0xA3, 0x3D, 0x3B, 0xBC, 0x2C, 0x34,  // ...=;.,4
                /* 01D0 */  0x7B, 0xC5, 0x20, 0x04, 0xAF, 0x01, 0xBE, 0x29,  // {. ....)
                /* 01D8 */  0xF8, 0x34, 0x62, 0x51, 0xAB, 0x93, 0x93, 0x55,  // .4bQ...U
                /* 01E0 */  0x79, 0xC4, 0x14, 0xDC, 0x43, 0xE0, 0x32, 0xE0,  // y...C.2.
                /* 01E8 */  0x34, 0x74, 0x8F, 0x17, 0x1C, 0x0A, 0xC6, 0x4B,  // 4t.....K
                /* 01F0 */  0xFF, 0xFF, 0xE3, 0x05, 0xF7, 0xBC, 0x8E, 0x17,  // ........
                /* 01F8 */  0x2C, 0xC7, 0x84, 0x87, 0x8D, 0xAA, 0x20, 0x34,  // ,..... 4
                /* 0200 */  0x88, 0x03, 0x6E, 0x7E, 0x00, 0xE4, 0x6A, 0xE1,  // ..n~..j.
                /* 0208 */  0x11, 0xB3, 0xB9, 0x9C, 0x15, 0x3B, 0xA2, 0xF0,  // .....;..
                /* 0210 */  0xE1, 0xF1, 0x61, 0x78, 0xC4, 0xEF, 0x0D, 0xC5,  // ..ax....
                /* 0218 */  0x82, 0x48, 0x20, 0x84, 0xCE, 0x0C, 0x47, 0x0E,  // .H ...G.
                /* 0220 */  0x16, 0x67, 0x27, 0x08, 0x11, 0x58, 0xDA, 0xD0,  // .g'..X..
                /* 0228 */  0xD1, 0x43, 0xF6, 0xA8, 0x5E, 0x62, 0x8C, 0xF1,  // .C..^b..
                /* 0230 */  0x44, 0x60, 0xD4, 0x53, 0x3A, 0x7A, 0xF0, 0x01,  // D`.S:z..
                /* 0238 */  0x7A, 0xF4, 0x80, 0xCF, 0xFF, 0xFF, 0xE8, 0x71,  // z......q
                /* 0240 */  0x92, 0xC6, 0x2C, 0x11, 0xA3, 0x47, 0x9F, 0x23,  // ..,..G.#
                /* 0248 */  0x3C, 0x9D, 0xB7, 0x1F, 0x7E, 0x14, 0x49, 0xE0,  // <...~.I.
                /* 0250 */  0xF8, 0x10, 0x1A, 0x3D, 0x78, 0x4E, 0x3F, 0x1E,  // ...=xN?.
                /* 0258 */  0x3D, 0xF8, 0xC7, 0xE8, 0xD1, 0x83, 0x67, 0x0C,  // =.....g.
                /* 0260 */  0xE7, 0x86, 0xBB, 0xDA, 0x78, 0xE4, 0x60, 0x1F,  // ....x.`.
                /* 0268 */  0x2F, 0x5E, 0xDE, 0x71, 0x0B, 0x14, 0x3E, 0x67,  // /^.q..>g
                /* 0270 */  0x4F, 0x06, 0xF0, 0x1E, 0x84, 0x3B, 0x6F, 0x01,  // O....;o.
                /* 0278 */  0x97, 0x11, 0x70, 0xC1, 0x4F, 0x1D, 0x9F, 0xAB,  // ..p.O...
                /* 0280 */  0xA8, 0x44, 0x18, 0xD4, 0xD1, 0x0A, 0x5C, 0xFF,  // .D....\.
                /* 0288 */  0xFF, 0xA3, 0x15, 0xC0, 0x84, 0xFB, 0xC3, 0xAB,  // ........
                /* 0290 */  0xD5, 0xA3, 0x15, 0xD8, 0x43, 0xBE, 0x24, 0xF4,  // ....C.$.
                /* 0298 */  0x23, 0x70, 0x6C, 0x08, 0x39, 0x39, 0x5A, 0xA1,  // #pl.99Z.
                /* 02A0 */  0x4E, 0x46, 0xB8, 0xA0, 0x07, 0x2B, 0xA0, 0x7B,  // NF...+.{
                /* 02A8 */  0xD0, 0xC0, 0x1D, 0x0F, 0xE0, 0xFC, 0xFF, 0x8F,  // ........
                /* 02B0 */  0x07, 0x7C, 0x60, 0xFC, 0xF4, 0x02, 0x3E, 0x11,  // .|`...>.
                /* 02B8 */  0x47, 0x21, 0x9F, 0xCA, 0xA0, 0x9F, 0x20, 0x3D,  // G!.... =
                /* 02C0 */  0x5A, 0xF0, 0x1C, 0xAB, 0x80, 0xC3, 0xA9, 0x0C,  // Z.......
                /* 02C8 */  0x38, 0x0C, 0x19, 0x7C, 0xF2, 0x0E, 0x53, 0xE8,  // 8..|..S.
                /* 02D0 */  0x03, 0x89, 0xA7, 0x50, 0xEB, 0x2D, 0x84, 0xC0,  // ...P.-..
                /* 02D8 */  0x1E, 0x90, 0x8F, 0x12, 0x41, 0x4E, 0x24, 0xC2,  // ....AN$.
                /* 02E0 */  0xB9, 0xF8, 0x38, 0x05, 0x98, 0xF8, 0xFF, 0x8F,  // ..8.....
                /* 02E8 */  0x1A, 0x7F, 0xCB, 0x60, 0xD7, 0x29, 0x30, 0x9C,  // ...`.)0.
                /* 02F0 */  0x82, 0xE0, 0x4D, 0xCA, 0xE3, 0x07, 0xDF, 0xB1,  // ..M.....
                /* 02F8 */  0x07, 0x77, 0x0A, 0x82, 0xE7, 0x71, 0x48, 0x42,  // .w...qHB
                /* 0300 */  0x3E, 0x8F, 0x97, 0x00, 0xDC, 0x45, 0x08, 0x7F,  // >....E..
                /* 0308 */  0x10, 0x02, 0x3E, 0xB2, 0x16, 0x4A, 0x4F, 0x41,  // ..>..JOA
                /* 0310 */  0x16, 0x02, 0x83, 0x3A, 0x08, 0x01, 0x2E, 0xFF,  // ...:....
                /* 0318 */  0xFF, 0x07, 0x21, 0x60, 0xE7, 0xED, 0xB6, 0xA1,  // ..!`....
                /* 0320 */  0x6B, 0x90, 0x6F, 0x03, 0x4F, 0x03, 0xAF, 0x11,  // k.o.O...
                /* 0328 */  0x51, 0x1E, 0x84, 0x7C, 0x13, 0x7A, 0x21, 0x88,  // Q..|.z!.
                /* 0330 */  0x10, 0xE5, 0x78, 0x4F, 0x20, 0xC2, 0xD3, 0x90,  // ..xO ...
                /* 0338 */  0x27, 0x1C, 0x26, 0xDC, 0xC9, 0x46, 0x79, 0x69,  // '.&..Fyi
                /* 0340 */  0x08, 0x63, 0xE8, 0x58, 0x81, 0x22, 0xC7, 0x0F,  // .c.X."..
                /* 0348 */  0xE1, 0x4B, 0x85, 0x0F, 0x42, 0x2C, 0xCA, 0x79,  // .K..B,.y
                /* 0350 */  0x40, 0x3F, 0x02, 0x9F, 0x3F, 0x6C, 0xE4, 0x2C,  // @?..?l.,
                /* 0358 */  0x82, 0x3A, 0x09, 0xF8, 0xD0, 0xE1, 0x41, 0x3D,  // .:....A=
                /* 0360 */  0x21, 0x60, 0x42, 0x9F, 0xEC, 0x40, 0x75, 0x14,  // !`B..@u.
                /* 0368 */  0x02, 0xCE, 0x07, 0x10, 0x78, 0x21, 0x0F, 0xAD,  // ....x!..
                /* 0370 */  0xA0, 0x3B, 0x92, 0x83, 0xE3, 0x50, 0x17, 0x39,  // .;...P.9
                /* 0378 */  0xEE, 0x03, 0x0D, 0xF6, 0xEC, 0xC1, 0xFF, 0xFF,  // ........
                /* 0380 */  0x67, 0x0F, 0xE0, 0x21, 0xED, 0xE0, 0x81, 0x12,  // g..!....
                /* 0388 */  0x73, 0xF6, 0x00, 0x48, 0x73, 0xD9, 0x78, 0xF7,  // s..Hs.x.
                /* 0390 */  0xF0, 0xA5, 0xE7, 0x4C, 0x9F, 0x3D, 0x3C, 0xD7,  // ...L.=<.
                /* 0398 */  0x77, 0x0E, 0x1F, 0xEB, 0x8C, 0x62, 0x88, 0xF7,  // w....b..
                /* 03A0 */  0x0F, 0x1F, 0x0A, 0xA2, 0x44, 0x3C, 0xD7, 0x28,  // ....D<.(
                /* 03A8 */  0x87, 0x1C, 0x25, 0x6E, 0x84, 0x30, 0xCF, 0x77,  // ..%n.0.w
                /* 03B0 */  0xC6, 0x89, 0x11, 0x2A, 0x02, 0x03, 0x7D, 0xF6,  // ...*..}.
                /* 03B8 */  0x60, 0x71, 0xCE, 0x1E, 0x50, 0xB1, 0xCF, 0xE6,  // `q..P...
                /* 03C0 */  0x8D, 0x23, 0xC2, 0x6B, 0xC0, 0x39, 0xFE, 0xFF,  // .#.k.9..
                /* 03C8 */  0xCF, 0xC7, 0x67, 0x0F, 0xC0, 0x9B, 0x94, 0xB7,  // ..g.....
                /* 03D0 */  0x9B, 0xCE, 0x1E, 0xE0, 0x3A, 0xC2, 0xE2, 0xCE,  // ....:...
                /* 03D8 */  0x1E, 0xF0, 0xC6, 0x8D, 0x3D, 0x7D, 0x00, 0x3B,  // ....=}.;
                /* 03E0 */  0x19, 0xAF, 0x01, 0x1F, 0x3D, 0x68, 0xF0, 0x03,  // ....=h..
                /* 03E8 */  0x2A, 0xD0, 0xFE, 0xFF, 0x1F, 0x50, 0x01, 0x97,  // *....P..
                /* 03F0 */  0x87, 0x8F, 0x07, 0x54, 0xB0, 0x4B, 0x7F, 0x0E,  // ...T.K..
                /* 03F8 */  0xE8, 0x53, 0xE0, 0xE0, 0x07, 0x54, 0xF4, 0x70,  // .S...T.p
                /* 0400 */  0x7C, 0x9C, 0xC3, 0x9C, 0x50, 0x01, 0x9B, 0xFF,  // |...P...
                /* 0408 */  0x7F, 0x02, 0x1F, 0x6E, 0xE1, 0x00, 0x87, 0xF4,  // ...n....
                /* 0410 */  0x58, 0xC1, 0x76, 0x3E, 0x05, 0x0E, 0x63, 0x05,  // X.v>..c.
                /* 0418 */  0xCF, 0xC0, 0xF8, 0x58, 0x81, 0xC5, 0xC4, 0x9E,  // ...X....
                /* 0420 */  0x3D, 0x8E, 0x15, 0x6C, 0xA7, 0x52, 0xE0, 0x30,  // =..l.R.0
                /* 0428 */  0x56, 0x30, 0x0D, 0x8C, 0x8D, 0x15, 0x7C, 0x12,  // V0....|.
                /* 0430 */  0xCE, 0xC5, 0xE8, 0x31, 0xFA, 0xDA, 0x72, 0x40,  // ...1..r@
                /* 0438 */  0x9E, 0x47, 0x84, 0xA7, 0x7C, 0xF6, 0xFF, 0x27,  // .G..|..'
                /* 0440 */  0x70, 0xDC, 0xE1, 0x82, 0xEA, 0x5C, 0xE3, 0xE1,  // p....\..
                /* 0448 */  0x82, 0x5F, 0xDE, 0x70, 0x41, 0x33, 0x36, 0x38,  // ._.pA368
                /* 0450 */  0x23, 0x06, 0xDF, 0xD1, 0xC9, 0xE7, 0x58, 0xB0,  // #.....X.
                /* 0458 */  0x5C, 0x22, 0xD8, 0x59, 0x80, 0x4D, 0x07, 0x7F,  // \".Y.M..
                /* 0460 */  0x95, 0xC5, 0x9F, 0x99, 0x80, 0x91, 0xE4, 0xC7,  // ........
                /* 0468 */  0x92, 0x09, 0x14, 0xE0, 0x74, 0x20, 0x51, 0x2F,  // ....t Q/
                /* 0470 */  0x02, 0x0A, 0xE3, 0x43, 0x8D, 0xCF, 0x4C, 0x70,  // ...C..Lp
                /* 0478 */  0x25, 0xC1, 0xA1, 0xCE, 0x69, 0xEC, 0x74, 0x7C,  // %...i.t|
                /* 0480 */  0x72, 0x27, 0xF2, 0x7A, 0xE0, 0xC9, 0x3D, 0x3C,  // r'.z..=<
                /* 0488 */  0xC1, 0x38, 0x26, 0x78, 0x5A, 0x27, 0x65, 0xED,  // .8&xZ'e.
                /* 0490 */  0x47, 0x20, 0xF2, 0xFF, 0xBF, 0x66, 0xB1, 0xB3,  // G ...f..
                /* 0498 */  0x02, 0x47, 0xE3, 0x27, 0x29, 0xB0, 0x5E, 0x18,  // .G.').^.
                /* 04A0 */  0x7C, 0x4C, 0x00, 0xC7, 0xAC, 0x5F, 0xA3, 0x30,  // |L..._.0
                /* 04A8 */  0x58, 0xA1, 0x62, 0x34, 0x7A, 0x0D, 0x22, 0xA0,  // X.b4z.".
                /* 04B0 */  0xC7, 0xD7, 0xD7, 0x30, 0x74, 0x27, 0x30, 0x54,  // ...0t'0T
                /* 04B8 */  0xC4, 0x10, 0x6F, 0x06, 0x76, 0x79, 0x1E, 0x42,  // ..o.vy.B
                /* 04C0 */  0x1E, 0x9A, 0xC0, 0x85, 0xFD, 0xD0, 0x04, 0xF6,  // ........
                /* 04C8 */  0x50, 0x67, 0x32, 0x1A, 0x69, 0x34, 0xA8, 0x73,  // Pg2.i4.s
                /* 04D0 */  0x3A, 0x3F, 0x10, 0x3C, 0x72, 0xF9, 0xD8, 0x61,  // :?.<r..a
                /* 04D8 */  0x90, 0x13, 0x3D, 0xAD, 0xC7, 0x85, 0xA7, 0x01,  // ..=.....
                /* 04E0 */  0x8F, 0x9B, 0x5D, 0x13, 0xFC, 0x41, 0xF0, 0xF1,  // ..]..A..
                /* 04E8 */  0x00, 0x7F, 0x80, 0x08, 0x78, 0xA2, 0x4F, 0x1E,  // ....x.O.
                /* 04F0 */  0xB0, 0x4E, 0x20, 0xF8, 0xA3, 0x06, 0xFC, 0xF1,  // .N .....
                /* 04F8 */  0xF8, 0x18, 0xE0, 0x63, 0x07, 0x97, 0x3F, 0x08,  // ...c..?.
                /* 0500 */  0xD4, 0x51, 0x91, 0x8F, 0xF4, 0xB4, 0xDE, 0x06,  // .Q......
                /* 0508 */  0x7C, 0x48, 0x38, 0x2C, 0x76, 0xE6, 0xF0, 0xC9,  // |H8,v...
                /* 0510 */  0x08, 0xFF, 0xFF, 0x1F, 0x0F, 0x38, 0x8F, 0xED,  // .....8..
                /* 0518 */  0x0F, 0x19, 0xBE, 0x32, 0x78, 0xBE, 0x3E, 0xD1,  // ...2x.>.
                /* 0520 */  0x82, 0xE5, 0xD6, 0xE1, 0x43, 0x43, 0xA8, 0xA7,  // ....CC..
                /* 0528 */  0x0E, 0xCF, 0xE0, 0xFD, 0xC2, 0x27, 0x10, 0x60,  // .....'.`
                /* 0530 */  0x22, 0xCA, 0xCC, 0x10, 0x98, 0xD0, 0x75, 0xCA,  // ".....u.
                /* 0538 */  0xC6, 0x59, 0x93, 0x9E, 0x07, 0x2C, 0xF7, 0x80,  // .Y...,..
                /* 0540 */  0xA0, 0x6B, 0x04, 0xE6, 0x06, 0x11, 0xC4, 0xC3,  // .k......
                /* 0548 */  0x7F, 0xA3, 0xE0, 0x87, 0x46, 0x01, 0xEA, 0x60,  // ....F..`
                /* 0550 */  0x66, 0x08, 0x4B, 0xA3, 0x90, 0x30, 0x08, 0x8D,  // f.K..0..
                /* 0558 */  0xC8, 0x47, 0x0F, 0x02, 0x47, 0x41, 0x3C, 0x7A,  // .G..GA<z
                /* 0560 */  0xC7, 0x3C, 0x3E, 0xA1, 0x87, 0xEA, 0x63, 0x80,  // .<>...c.
                /* 0568 */  0x27, 0x81, 0x0B, 0x75, 0xF0, 0xA1, 0xC7, 0x05,  // '..u....
                /* 0570 */  0x3C, 0xDE, 0x03, 0xB1, 0xCF, 0x01, 0x6C, 0xEC,  // <.....l.
                /* 0578 */  0xB8, 0x93, 0x07, 0xDC, 0x71, 0xE0, 0x4F, 0x9C,  // ....q.O.
                /* 0580 */  0xF8, 0xB3, 0x1A, 0x3F, 0xF5, 0x80, 0xF3, 0xC8,  // ...?....
                /* 0588 */  0x89, 0xFB, 0xFF, 0x1F, 0x0E, 0xE0, 0x01, 0xF9,  // ........
                /* 0590 */  0x3E, 0x60, 0xA5, 0x67, 0x02, 0x3A, 0x87, 0x10,  // >`.g.:..
                /* 0598 */  0x61, 0xA2, 0x19, 0x1E, 0x13, 0xF8, 0xF8, 0x44,  // a......D
                /* 05A0 */  0x4F, 0xA4, 0x1E, 0x17, 0x1F, 0xA5, 0xCF, 0x30,  // O......0
                /* 05A8 */  0x0C, 0xFB, 0x11, 0xC5, 0xC7, 0xC4, 0x03, 0x7C,  // .......|
                /* 05B0 */  0x39, 0x78, 0xE6, 0xC3, 0xC0, 0x7A, 0xDC, 0x1C,  // 9x...z..
                /* 05B8 */  0xD6, 0x68, 0x61, 0x0F, 0xF7, 0x19, 0xC2, 0xF7,  // .ha.....
                /* 05C0 */  0x0F, 0xCF, 0xCC, 0xD7, 0x46, 0x9F, 0x3C, 0xC0,  // ....F.<.
                /* 05C8 */  0x72, 0x94, 0x82, 0x3F, 0x54, 0xDC, 0x59, 0x00,  // r..?T.Y.
                /* 05D0 */  0xEE, 0x81, 0x89, 0xCD, 0xE1, 0x69, 0x00, 0x2F,  // .....i./
                /* 05D8 */  0xF3, 0x10, 0x81, 0x1A, 0x88, 0x45, 0x2E, 0x50,  // .....E.P
                /* 05E0 */  0xC7, 0x15, 0x8F, 0xC4, 0x04, 0x96, 0x77, 0x80,  // ......w.
                /* 05E8 */  0x40, 0x9D, 0x1F, 0x2C, 0xEB, 0x00, 0x81, 0x12,  // @..,....
                /* 05F0 */  0x02, 0x47, 0x41, 0x7C, 0x80, 0xF0, 0x31, 0xDD,  // .GA|..1.
                /* 05F8 */  0x46, 0x0E, 0x10, 0xE8, 0x03, 0x0C, 0x83, 0x78,  // F......x
                /* 0600 */  0xE8, 0x34, 0x81, 0x8F, 0x32, 0x3E, 0x40, 0x00,  // .4..2>@.
                /* 0608 */  0x8F, 0x71, 0xE0, 0x0F, 0x10, 0xF0, 0xFE, 0xFF,  // .q......
                /* 0610 */  0x04, 0x3E, 0x01, 0x03, 0x9F, 0xF3, 0x03, 0x38,  // .>.....8
                /* 0618 */  0x4E, 0xA2, 0x3E, 0x3F, 0x80, 0xEB, 0x04, 0xE0,  // N.>?....
                /* 0620 */  0xF3, 0x03, 0x70, 0x1D, 0xE0, 0xA3, 0x00, 0x58,  // ..p....X
                /* 0628 */  0xCE, 0x64, 0x6C, 0x0E, 0x2F, 0x35, 0x67, 0xFE,  // .dl./5g.
                /* 0630 */  0xCA, 0xE4, 0x13, 0x2F, 0xE6, 0xD4, 0xCB, 0x75,  // .../...u
                /* 0638 */  0x8D, 0x80, 0x44, 0x3C, 0x43, 0xA0, 0x06, 0xE1,  // ..D<C...
                /* 0640 */  0x83, 0xB9, 0x8F, 0x13, 0xCC, 0xE7, 0x21, 0x48,  // ......!H
                /* 0648 */  0xAA, 0x51, 0x04, 0xEF, 0x5B, 0x01, 0x8B, 0x70,  // .Q..[..p
                /* 0650 */  0x8C, 0x40, 0x89, 0xA7, 0x90, 0xF4, 0x63, 0x04,  // .@....c.
                /* 0658 */  0x4A, 0x2C, 0x1C, 0x05, 0xF1, 0xA8, 0x7D, 0x90,  // J,....}.
                /* 0660 */  0xB0, 0x8D, 0xB3, 0x2D, 0xFA, 0x30, 0xCC, 0x8F,  // ...-.0..
                /* 0668 */  0x02, 0xFC, 0x14, 0x01, 0xF7, 0xFF, 0x3F, 0x0B,  // ......?.
                /* 0670 */  0x9F, 0xC2, 0x70, 0x47, 0x0F, 0x70, 0x5C, 0xC4,  // ..pG.p\.
                /* 0678 */  0x0E, 0xED, 0xEC, 0x1E, 0x12, 0xA2, 0xC4, 0x3C,  // .......<
                /* 0680 */  0x83, 0x37, 0x3F, 0x03, 0x86, 0x8D, 0xE6, 0x31,  // .7?....1
                /* 0688 */  0xE2, 0x70, 0xCE, 0xD1, 0x17, 0x35, 0xCF, 0x29,  // .p...5.)
                /* 0690 */  0xD6, 0xE3, 0x1B, 0x3F, 0x52, 0xC0, 0x45, 0xF1,  // ...?R.E.
                /* 0698 */  0x91, 0x02, 0xEE, 0x4C, 0xCE, 0x03, 0xA3, 0x6E,  // ...L...n
                /* 06A0 */  0x2C, 0x82, 0xF7, 0xB5, 0x10, 0x7F, 0xB0, 0x00,  // ,.......
                /* 06A8 */  0x1E, 0xC7, 0x25, 0x1F, 0x2C, 0xC0, 0x05, 0xE9,  // ..%.,...
                /* 06B0 */  0x83, 0x05, 0x70, 0x3D, 0x1F, 0xF8, 0x74, 0x00,  // ..p=..t.
                /* 06B8 */  0xD6, 0x0B, 0x19, 0xBF, 0x1F, 0xB0, 0xFF, 0xFF,  // ........
                /* 06C0 */  0xFD, 0x00, 0x77, 0xC2, 0x80, 0x71, 0x3E, 0xC0,  // ..w..q>.
                /* 06C8 */  0xDC, 0x30, 0x1C, 0x6B, 0xA5, 0x3A, 0x61, 0xE0,  // .0.k.:a.
                /* 06D0 */  0x62, 0x3D, 0x28, 0x34, 0x10, 0x36, 0xBC, 0xE7,  // b=(4.6..
                /* 06D8 */  0x9F, 0x27, 0x43, 0x7E, 0x98, 0x61, 0x51, 0xE0,  // .'C~.aQ.
                /* 06E0 */  0x74, 0xB4, 0xF0, 0xC9, 0xC2, 0x21, 0x28, 0x74,  // t....!(t
                /* 06E8 */  0x10, 0xF3, 0x09, 0x83, 0x8B, 0x39, 0x61, 0x50,  // .....9aP
                /* 06F0 */  0x10, 0x03, 0x3A, 0xE9, 0x39, 0x0C, 0x7D, 0xDA,  // ..:.9.}.
                /* 06F8 */  0xF4, 0xB1, 0x81, 0xDD, 0xEE, 0x7D, 0xBF, 0xF0,  // .....}..
                /* 0700 */  0x5C, 0x3C, 0x67, 0x8E, 0xE7, 0xF3, 0x32, 0x43,  // \<g...2C
                /* 0708 */  0x7D, 0x33, 0x01, 0xCF, 0x95, 0x82, 0x1D, 0xE7,  // }3......
                /* 0710 */  0x31, 0xB7, 0x49, 0x76, 0xE0, 0x64, 0xC7, 0x02,  // 1.Iv.d..
                /* 0718 */  0xA3, 0x1C, 0xEF, 0x6B, 0xA1, 0xD5, 0xDC, 0x15,  // ...k....
                /* 0720 */  0x50, 0x33, 0xC2, 0x10, 0x78, 0xC0, 0x3E, 0x89,  // P3..x.>.
                /* 0728 */  0x81, 0x49, 0xDF, 0x8D, 0x02, 0xE4, 0xE8, 0x5C,  // .I.....\
                /* 0730 */  0xE8, 0xE8, 0x51, 0x07, 0x00, 0x1F, 0xED, 0xF8,  // ..Q.....
                /* 0738 */  0xE8, 0x7D, 0xC4, 0xF6, 0x71, 0x05, 0xEE, 0xE1,  // .}..q...
                /* 0740 */  0xCE, 0x67, 0x28, 0x70, 0xFC, 0xFF, 0xCF, 0x50,  // .g(p...P
                /* 0748 */  0xC0, 0x65, 0x60, 0x9E, 0xE1, 0x13, 0x0A, 0xB8,  // .e`.....
                /* 0750 */  0xEE, 0x0F, 0xFC, 0xA2, 0x8A, 0x99, 0xC8, 0xB3,  // ........
                /* 0758 */  0x30, 0x8C, 0x53, 0x0A, 0xF0, 0x18, 0xBD, 0x4F,  // 0.S....O
                /* 0760 */  0x29, 0xE0, 0x3A, 0x00, 0xF8, 0x94, 0x02, 0x5C,  // ).:....\
                /* 0768 */  0xE7, 0xF8, 0x50, 0x00, 0x96, 0x33, 0x4A, 0x14,  // ..P..3J.
                /* 0770 */  0xDF, 0x7F, 0x3D, 0x11, 0x1B, 0x1F, 0x3E, 0xBD,  // ..=...>.
                /* 0778 */  0xA0, 0x78, 0x2C, 0xCF, 0xE6, 0xEC, 0x4C, 0xA9,  // .x,...L.
                /* 0780 */  0xB3, 0x09, 0x3A, 0xDA, 0xEB, 0x41, 0x83, 0x7E,  // ..:..A.~
                /* 0788 */  0x50, 0xF1, 0xEC, 0xC3, 0x1F, 0x5F, 0x84, 0xE7,  // P...._..
                /* 0790 */  0x53, 0x03, 0xFF, 0xFF, 0x13, 0x38, 0xCE, 0xD9,  // S....8..
                /* 0798 */  0x04, 0x15, 0x84, 0x42, 0xC7, 0x4E, 0x1F, 0x27,  // ...B.N.'
                /* 07A0 */  0xB8, 0xA4, 0xE3, 0x04, 0x05, 0x31, 0xA0, 0xF3,  // .....1..
                /* 07A8 */  0x1E, 0xF1, 0x3C, 0x0C, 0x7A, 0x9C, 0xE0, 0xA7,  // ..<.z...
                /* 07B0 */  0x3E, 0xDF, 0x12, 0x8E, 0xE3, 0x09, 0x24, 0xC1,  // >.....$.
                /* 07B8 */  0x7C, 0x27, 0x01, 0x7A, 0x39, 0x81, 0x77, 0x5E,  // |'.z9.w^
                /* 07C0 */  0x07, 0xCF, 0x28, 0xBC, 0x93, 0xB3, 0x60, 0x08,  // ..(...`.
                /* 07C8 */  0x6F, 0xD6, 0xEC, 0x38, 0x81, 0xBF, 0x1C, 0x3C,  // o..8...<
                /* 07D0 */  0x2B, 0x3C, 0xA8, 0xF3, 0xEB, 0x09, 0xCC, 0x7B,  // +<.....{
                /* 07D8 */  0x1E, 0xB8, 0x8E, 0x27, 0xC0, 0x42, 0xE6, 0x01,  // ...'.B..
                /* 07E0 */  0x00, 0x75, 0x6C, 0xF4, 0xC1, 0x91, 0x1F, 0x00,  // .ul.....
                /* 07E8 */  0x1C, 0xFA, 0x78, 0x82, 0x9E, 0x89, 0x8F, 0x45,  // ..x....E
                /* 07F0 */  0x4F, 0x25, 0xBE, 0x00, 0xF0, 0xB3, 0x9B, 0xCE,  // O%......
                /* 07F8 */  0x27, 0xA0, 0x38, 0x67, 0x82, 0x67, 0x1C, 0xEC,  // '.8g.g..
                /* 0800 */  0x0A, 0x80, 0x3F, 0x03, 0x60, 0xFE, 0xFF, 0x27,  // ..?.`..'
                /* 0808 */  0x14, 0x38, 0x47, 0x32, 0xF0, 0x4D, 0xC4, 0xA7,  // .8G2.M..
                /* 0810 */  0x8A, 0x03, 0xC1, 0x9E, 0x64, 0x81, 0x37, 0x2C,  // ....d.7,
                /* 0818 */  0x3F, 0xC9, 0x02, 0x3E, 0x6E, 0x23, 0xD8, 0x59,  // ?..>n#.Y
                /* 0820 */  0x3C, 0x93, 0x30, 0x82, 0x91, 0x8F, 0x26, 0xA8,  // <.0...&.
                /* 0828 */  0x23, 0xB2, 0x83, 0x9E, 0xC2, 0x10, 0xE3, 0x7C,  // #......|
                /* 0830 */  0xAC, 0x30, 0x46, 0xE4, 0xE2, 0x47, 0xAD, 0xC9,  // .0F..G..
                /* 0838 */  0xF8, 0x6C, 0xE6, 0xCB, 0x3A, 0x3B, 0xFC, 0xE0,  // .l..:;..
                /* 0840 */  0x08, 0x06, 0x3A, 0xA0, 0xA0, 0x8E, 0x63, 0x3E,  // ..:...c>
                /* 0848 */  0x8B, 0x81, 0xEB, 0xFF, 0x7F, 0x16, 0x03, 0x78,  // .......x
                /* 0850 */  0x70, 0x76, 0xF7, 0xE8, 0xF9, 0xB1, 0x9D, 0x83,  // pv......
                /* 0858 */  0x78, 0xF4, 0x0E, 0x7F, 0x16, 0x83, 0x1E, 0xF6,  // x.......
                /* 0860 */  0x2C, 0x06, 0xB4, 0x05, 0x9F, 0xC5, 0x40, 0x79,  // ,.....@y
                /* 0868 */  0x8B, 0xC0, 0xFF, 0xFF, 0x6F, 0x11, 0xB8, 0x33,  // ....o..3
                /* 0870 */  0x28, 0xF0, 0x5A, 0x9B, 0x4F, 0x28, 0xE0, 0xBA,  // (.Z.O(..
                /* 0878 */  0x33, 0xF8, 0x84, 0x02, 0x5C, 0x8F, 0x00, 0xB8,  // 3...\...
                /* 0880 */  0x33, 0x28, 0x38, 0x4E, 0x00, 0xCC, 0xD7, 0x0D,  // 3(8N....
                /* 0888 */  0x80, 0x82, 0x3C, 0x02, 0xE0, 0xAF, 0xF0, 0x3E,  // ..<....>
                /* 0890 */  0x98, 0xE0, 0xE2, 0x9D, 0x54, 0x50, 0x1C, 0x8E,  // ....TP..
                /* 0898 */  0x77, 0x52, 0x41, 0x4C, 0x25, 0xF2, 0x5B, 0x8B,  // wRAL%.[.
                /* 08A0 */  0x27, 0x10, 0xFE, 0xE0, 0xE2, 0xBC, 0x9F, 0xF1,  // '.......
                /* 08A8 */  0x53, 0x19, 0x0C, 0x51, 0x07, 0x0B, 0x94, 0x8C,  // S..Q....
                /* 08B0 */  0x83, 0x05, 0x05, 0x31, 0xA0, 0x33, 0x9E, 0x52,  // ...1.3.R
                /* 08B8 */  0xD0, 0xA7, 0x32, 0x7E, 0x19, 0xF1, 0xC0, 0x12,  // ..2~....
                /* 08C0 */  0xCC, 0x74, 0x4D, 0x81, 0xFA, 0xFF, 0x47, 0xF6,  // .tM...G.
                /* 08C8 */  0x05, 0x04, 0x37, 0x60, 0xB8, 0x60, 0x0F, 0x12,  // ..7`.`..
                /* 08D0 */  0x46, 0x78, 0x4D, 0xF6, 0x3C, 0x30, 0x47, 0x14,  // FxM.<0G.
                /* 08D8 */  0xC0, 0x86, 0xE4, 0xA1, 0xA3, 0x44, 0x0E, 0x9D,  // .....D..
                /* 08E0 */  0x82, 0x78, 0xE8, 0xA6, 0xF1, 0x11, 0x05, 0x37,  // .x.....7
                /* 08E8 */  0x56, 0x76, 0x21, 0x80, 0x15, 0xF5, 0x94, 0x02,  // Vv!.....
                /* 08F0 */  0x0A, 0x91, 0xC3, 0x07, 0xCD, 0x38, 0x8E, 0xEE,  // .....8..
                /* 08F8 */  0xA9, 0xC7, 0xF3, 0xE0, 0x77, 0x62, 0x1F, 0xF3,  // ....wb..
                /* 0900 */  0xE0, 0x9E, 0x54, 0x70, 0xA7, 0x46, 0xDC, 0x49,  // ..Tp.F.I
                /* 0908 */  0x05, 0x0C, 0x73, 0xC4, 0x9E, 0xCA, 0xC0, 0xF1,  // ..s.....
                /* 0910 */  0xFF, 0x3F, 0x82, 0x02, 0x47, 0x0F, 0x47, 0x50,  // .?..G.GP
                /* 0918 */  0x40, 0xCB, 0x21, 0x85, 0x1F, 0x33, 0x30, 0x57,  // @.!..30W
                /* 0920 */  0x03, 0x7E, 0x04, 0xC5, 0xC4, 0x7C, 0x3E, 0xE8,  // .~...|>.
                /* 0928 */  0x7C, 0xC2, 0x8F, 0x06, 0x0E, 0xF4, 0x2A, 0x10,  // |.....*.
                /* 0930 */  0x38, 0x3B, 0xEB, 0xE3, 0x2E, 0x07, 0x3E, 0x61,  // 8;....>a
                /* 0938 */  0x98, 0x60, 0x84, 0xD3, 0x04, 0x85, 0xB0, 0x78,  // .`.....x
                /* 0940 */  0x0A, 0x49, 0x3F, 0x54, 0xA0, 0xC4, 0xC2, 0x51,  // .I?T...Q
                /* 0948 */  0x10, 0x1F, 0x2A, 0x2C, 0xE4, 0x50, 0x81, 0x3E,  // ..*,.P.>
                /* 0950 */  0x46, 0xE1, 0x83, 0x9F, 0x28, 0x40, 0x71, 0x01,  // F...(@q.
                /* 0958 */  0x78, 0x64, 0x07, 0xEF, 0x7D, 0x9D, 0xFD, 0xFF,  // xd..}...
                /* 0960 */  0xEF, 0xEB, 0x98, 0x41, 0xE2, 0x2E, 0x2A, 0x1E,  // ...A..*.
                /* 0968 */  0xB2, 0x0F, 0xEC, 0x98, 0x79, 0xFA, 0x68, 0x01,  // ....y.h.
                /* 0970 */  0x8F, 0xC0, 0xA7, 0x47, 0xF0, 0xC1, 0xFB, 0x30,  // ...G...0
                /* 0978 */  0x05, 0xBC, 0xCE, 0x7A, 0x3E, 0x58, 0x80, 0x0B,  // ...z>X..
                /* 0980 */  0xDC, 0x07, 0x0B, 0xE0, 0x7A, 0xFB, 0xF1, 0xE9,  // ....z...
                /* 0988 */  0x00, 0xAC, 0xA3, 0x3D, 0xE6, 0xF3, 0x8D, 0xF3,  // ...=....
                /* 0990 */  0x7E, 0x00, 0xE3, 0xA6, 0xF2, 0x10, 0xE9, 0x7B,  // ~......{
                /* 0998 */  0x80, 0xF1, 0xD9, 0xF9, 0x00, 0x7B, 0x25, 0xF2,  // .....{%.
                /* 09A0 */  0xF1, 0x59, 0x36, 0x7D, 0x6A, 0x34, 0x6A, 0xD5,  // .Y6}j4j.
                /* 09A8 */  0xA0, 0x4C, 0x8D, 0x32, 0x0D, 0x6A, 0xF5, 0xA9,  // .L.2.j..
                /* 09B0 */  0xD4, 0x98, 0x31, 0x4F, 0x50, 0xFA, 0xFF, 0x47,  // ..1OP..G
                /* 09B8 */  0x58, 0xB8, 0x46, 0xEE, 0x50, 0x4F, 0x09, 0x81,  // X.F.PO..
                /* 09C0 */  0x38, 0xEE, 0xF2, 0x35, 0x7A, 0xF2, 0x3A, 0x11,  // 8..5z.:.
                /* 09C8 */  0x88, 0x85, 0xA8, 0x00, 0x61, 0x62, 0x16, 0x29,  // ....ab.)
                /* 09D0 */  0x10, 0x4B, 0x5D, 0xA4, 0x40, 0x1C, 0xC5, 0x07,  // .K].@...
                /* 09D8 */  0x08, 0x0B, 0xA8, 0x04, 0x84, 0x45, 0xB5, 0x02,  // .....E..
                /* 09E0 */  0x44, 0xB5, 0x80, 0xB0, 0x58, 0x5E, 0x40, 0x58,  // D...X^@X
                /* 09E8 */  0xB0, 0x85, 0x0A, 0xC4, 0x61, 0xDC, 0x80, 0x30,  // ....a..0
                /* 09F0 */  0x29, 0x2F, 0x08, 0x0D, 0x86, 0xD8, 0x39, 0x42,  // )/....9B
                /* 09F8 */  0xEB, 0xAC, 0x6B, 0x10, 0x01, 0x39, 0xB4, 0x1F,  // ..k..9..
                /* 0A00 */  0x20, 0x26, 0x61, 0xFD, 0x02, 0xB2, 0x70, 0x45,  //  &a...pE
                /* 0A08 */  0x40, 0x2C, 0x06, 0x88, 0x80, 0xAC, 0xC3, 0x12,  // @,......
                /* 0A10 */  0x10, 0x13, 0x05, 0x22, 0x20, 0x4B, 0xD3, 0x04,  // ..." K..
                /* 0A18 */  0xC4, 0x84, 0x82, 0x08, 0xC8, 0x21, 0x45, 0x01,  // .....!E.
                /* 0A20 */  0xB1, 0xC4, 0x20, 0x02, 0x72, 0x78, 0x53, 0x40,  // .. .rxS@
                /* 0A28 */  0x4C, 0x8A, 0x2A, 0x20, 0xA6, 0xFE, 0xA1, 0x20,  // L.* ... 
                /* 0A30 */  0x20, 0x47, 0x01, 0x11, 0x90, 0x03, 0xD9, 0x02,  //  G......
                /* 0A38 */  0x62, 0xF1, 0x40, 0x04, 0x64, 0x85, 0xEF, 0x51,  // b.@.d..Q
                /* 0A40 */  0x01, 0x59, 0x2E, 0x88, 0x80, 0x1C, 0xC1, 0x18,  // .Y......
                /* 0A48 */  0x10, 0x0B, 0x04, 0x22, 0x20, 0xCB, 0x92, 0x06,  // ..." ...
                /* 0A50 */  0xC4, 0x44, 0x82, 0x08, 0xC8, 0xFF, 0x7F         // .D.....
            })
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "AOD")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x6A, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,  // j.......
                /* 0008 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,  // ....)...
                /* 0010 */  0x41, 0x41, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AA..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   // ..).BA..
            })
            Method (WMAA, 3, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((((Arg1 != One) || (Arg1 != 0x02)) || 
                        (Arg1 != 0x06)))
                    {
                        CreateDWordField (Arg2, Zero, WIID)
                    }

                    If ((Arg1 == One))
                    {
                        Return (AM01 ())
                    }
                    ElseIf ((Arg1 == 0x02))
                    {
                        Return (AM02 ())
                    }
                    ElseIf ((Arg1 == 0x03))
                    {
                        Return (AM03 ())
                    }
                    ElseIf ((Arg1 == 0x04))
                    {
                        Return (AM04 (WIID))
                    }
                    ElseIf ((Arg1 == 0x05))
                    {
                        Return (AM05 (Arg2))
                    }
                    ElseIf ((Arg1 == 0x06))
                    {
                        Return (AM06 (WIID))
                    }
                    ElseIf ((Arg1 == 0x07))
                    {
                        Return (AM07 (WIID))
                    }
                    ElseIf ((Arg1 == 0x08))
                    {
                        Return (AM08 ())
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "AMD", "AmdTable", 0x00001000)
{
    Name (PTOS, Zero)
    If (CondRefOf (\_OSI))
    {
        If (\_OSI ("Windows 2015"))
        {
            PTOS = 0x70
        }
    }

    Scope (\_SB)
    {
        Device (PTIO)
        {
            Name (_HID, "AMDIF030")  // _HID: Hardware ID
            Name (_CID, "AMDIF030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFEC30000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.PTIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PTOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "AmdTable", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C003, DeviceObj)
    External (_PR_.C004, DeviceObj)
    External (_PR_.C005, DeviceObj)
    External (_PR_.C006, DeviceObj)
    External (_PR_.C007, DeviceObj)
    External (_PR_.C008, DeviceObj)
    External (_PR_.C009, DeviceObj)
    External (_PR_.C00A, DeviceObj)
    External (_PR_.C00B, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C002.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C003.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C004)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C004.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C005)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C005.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C006)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C006.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C007)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C007.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C008)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C008.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C009)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C009.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C00A)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C00A.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C00B)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000FD2, 
                0x00001298, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x000009E9, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000060E, 
                0x000004D5, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C00B.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "ALASKA", "CPUSSDT", 0x01072009)
{
    Scope (\_PR)
    {
        Processor (C000, 0x00, 0x00000810, 0x06){}
        Processor (C001, 0x01, 0x00000810, 0x06){}
        Processor (C002, 0x02, 0x00000810, 0x06){}
        Processor (C003, 0x03, 0x00000810, 0x06){}
        Processor (C004, 0x04, 0x00000810, 0x06){}
        Processor (C005, 0x05, 0x00000810, 0x06){}
        Processor (C006, 0x06, 0x00000810, 0x06){}
        Processor (C007, 0x07, 0x00000810, 0x06){}
        Processor (C008, 0x08, 0x00000810, 0x06){}
        Processor (C009, 0x09, 0x00000810, 0x06){}
        Processor (C00A, 0x0A, 0x00000810, 0x06){}
        Processor (C00B, 0x0B, 0x00000810, 0x06){}
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "AmdTable", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF0000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x07, 0x01,  // ........
            /* 0040 */  0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04,  // ........
            /* 0050 */  0x07, 0xFF, 0xFF, 0x02, 0x00, 0x01, 0x03, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0060 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0088 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 00B0 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10,  // ........
            /* 00C8 */  0x1F, 0x00, 0x03, 0x08, 0x00, 0x03, 0x01, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 00D8 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0100 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0128 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0150 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A005)
                CreateWordField (Arg1, 0x02, A006)
                CreateDWordField (Arg1, 0x04, A007)
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A008)
                A008 = A005 /* \_SB_.ALIB.A005 */
                CreateWordField (Local0, 0x02, A009)
                A009 = A006 /* \_SB_.ALIB.A006 */
                CreateDWordField (Local0, 0x04, A010)
                A010 = A007 /* \_SB_.ALIB.A007 */
                A010 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A010 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A011 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A014 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A015 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A016 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A017 (Arg1)
            }

            Return (0x00)
        }

        Method (A014, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x10))
            {
                Local1 = A065 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local1 = A066 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A008)
            CreateByteField (Local7, 0x02, A019)
            CreateByteField (Local7, 0x03, A067)
            A008 = 0x04
            A019 = 0x00
            A067 = Local1
            Return (Local7)
        }

        Method (A065, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A060 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A060 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A060 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A060 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A060 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A060 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A060 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A060 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A060 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A060 (Arg1))
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A060 (Arg1))
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A060 (Arg1))
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A060 (Arg1))
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A060 (Arg1))
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A060 (Arg1))
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A060 (Arg1))
            }
        }

        Method (A066, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A061 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A061 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A061 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A061 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A061 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A061 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A061 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A061 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A061 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A061 (Arg1))
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A061 (Arg1))
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A061 (Arg1))
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A061 (Arg1))
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A061 (Arg1))
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A061 (Arg1))
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A061 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A011, 1, NotSerialized)
        {
            If ((AD00 == Arg0))
            {
                Return (0x00)
            }

            AD00 = Arg0
            A003 ()
        }

        Method (A015, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A016, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A018, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A008)
            A008 = 0x03
            CreateByteField (Local7, 0x02, A019)
            A019 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A019 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A019 = 0x01
                Return (Local7)
            }

            A020 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A021 ()
            A019 = 0x02
            Return (Local7)
        }

        Method (A022, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A021 ()
        }

        Method (A023, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A024, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A025, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x10))
                {
                    A026 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A021 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A027, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A020, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x10))
            {
                If ((A028 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A029 (Local0)
                        A030 (Local0, Local1)
                    }
                    Else
                    {
                        A030 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A031, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x10))
            {
                Local1 = A032 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A033, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x10))
            {
                Local1 = A034 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A021, 0, NotSerialized)
        {
            A033 ()
            A031 ()
            If ((AP02 != AP01))
            {
                A004 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x10))
            {
                Local1 = A032 (Local0)
                Local2 = A035 (Local0)
                If ((Local1 != Local2))
                {
                    A036 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A036 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A036, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A037 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A037 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A037 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A037 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A037 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A037 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A037 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A037 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A037 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A037 (Arg1))
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A037 (Arg1))
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A037 (Arg1))
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A037 (Arg1))
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A037 (Arg1))
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A037 (Arg1))
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A037 (Arg1))
            }
        }

        Method (A035, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A038 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A038 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A038 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A038 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A038 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A038 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A038 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A038 ())
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A038 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A038 ())
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A038 ())
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A038 ())
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A038 ())
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A038 ())
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A038 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A038 ())
            }
        }

        Method (A032, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A039 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A039 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A039 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A039 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A039 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A039 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A039 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A039 ())
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A039 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A039 ())
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A039 ())
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A039 ())
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A039 ())
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A039 ())
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A039 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A039 ())
            }
        }

        Method (A034, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A040 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A040 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A040 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A040 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A040 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A040 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A040 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A040 ())
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A040 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A040 ())
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A040 ())
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A040 ())
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A040 ())
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A040 ())
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A040 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A040 ())
            }
        }

        Method (A029, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A041 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A041 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A041 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A041 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A041 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A041 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A041 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A041 ())
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A041 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A041 ())
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A041 ())
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A041 ())
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A041 ())
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A041 ())
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A041 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A041 ())
            }
        }

        Method (A030, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A042 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A042 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A042 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A042 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A042 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A042 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A042 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A042 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A042 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A042 (Arg1))
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A042 (Arg1))
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A042 (Arg1))
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A042 (Arg1))
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A042 (Arg1))
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A042 (Arg1))
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A042 (Arg1))
            }
        }

        Method (A028, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A043 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A043 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A043 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A043 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A043 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A043 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A043 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A043 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A043 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A043 (Arg1))
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A043 (Arg1))
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A043 (Arg1))
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A043 (Arg1))
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A043 (Arg1))
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A043 (Arg1))
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A043 (Arg1))
            }
        }

        Method (A026, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A044 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A044 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A044 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A044 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A044 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A044 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A044 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A044 ())
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR1.ABR8.A044 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR1.ABR9.A044 ())
            }

            If ((Arg0 == 0x0A))
            {
                Return (\_SB.AWR1.ABRA.A044 ())
            }

            If ((Arg0 == 0x0B))
            {
                Return (\_SB.AWR1.ABRB.A044 ())
            }

            If ((Arg0 == 0x0C))
            {
                Return (\_SB.AWR1.ABRC.A044 ())
            }

            If ((Arg0 == 0x0D))
            {
                Return (\_SB.AWR1.ABRD.A044 ())
            }

            If ((Arg0 == 0x0E))
            {
                Return (\_SB.AWR1.ABRE.A044 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (\_SB.AWR1.ABRF.A044 ())
            }
        }

        OperationRegion (A093, SystemMemory, AGRB, 0x1000)
        Field (A093, ByteAcc, NoLock, Preserve)
        {
            Offset (0xB8), 
            A094,   32
        }

        BankField (A093, A094, 0x03B10528, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A082,   32
        }

        BankField (A093, A094, 0x03B10564, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A075,   32
        }

        BankField (A093, A094, 0x03B10598, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A076,   32
        }

        BankField (A093, A094, 0x03B1059C, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A077,   32
        }

        BankField (A093, A094, 0x03B105A0, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A078,   32
        }

        BankField (A093, A094, 0x03B105A4, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A079,   32
        }

        BankField (A093, A094, 0x03B105A8, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A080,   32
        }

        BankField (A093, A094, 0x03B105AC, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A081,   32
        }

        Method (A068, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A069)
            CreateDWordField (Arg1, 0x04, A070)
            CreateDWordField (Arg1, 0x08, A071)
            CreateDWordField (Arg1, 0x0C, A072)
            CreateDWordField (Arg1, 0x10, A073)
            CreateDWordField (Arg1, 0x14, A074)
            A075 = 0x00
            While ((A075 != 0x00)){}
            A076 = A069 /* \_SB_.A068.A069 */
            A077 = A070 /* \_SB_.A068.A070 */
            A078 = A071 /* \_SB_.A068.A071 */
            A079 = A072 /* \_SB_.A068.A072 */
            A080 = A073 /* \_SB_.A068.A073 */
            A081 = A074 /* \_SB_.A068.A074 */
            A082 = Arg0
            While ((A075 == 0x00)){}
        }

        Method (A083, 5, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Local7 = Buffer (0x18){}
                CreateDWordField (Local7, 0x00, A084)
                CreateDWordField (Local7, 0x04, A085)
                CreateDWordField (Local7, 0x08, A086)
                CreateDWordField (Local7, 0x0C, A087)
                CreateDWordField (Local7, 0x10, A088)
                CreateDWordField (Local7, 0x14, A089)
                A084 = Arg0
                A085 = Arg1
                A086 = Arg2
                A087 = Arg3
                A068 (0x0F, Local7)
            }
        }

        Method (A090, 1, NotSerialized)
        {
            If ((Arg0 == 0x00)){}
            Else
            {
            }

            Return (Local0)
        }

        Method (A091, 1, NotSerialized)
        {
            If ((Arg0 == 0x00)){}
        }

        Method (A017, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A092)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A084)
            CreateDWordField (Local7, 0x04, A085)
            CreateDWordField (Local7, 0x08, A086)
            CreateDWordField (Local7, 0x0C, A087)
            CreateDWordField (Local7, 0x10, A088)
            CreateDWordField (Local7, 0x14, A089)
            Local0 = 0x02
            While ((Local0 < A092))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A084 = 0x00
                A085 = 0x00
                A086 = 0x00
                A087 = 0x00
                A088 = 0x00
                A089 = 0x00
                If ((Local1 == 0x04))
                {
                    A084 = Local2
                    A068 (0x31, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A084 = Local2
                    A068 (0x43, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A084 = Local2
                    A068 (0x44, Local7)
                }

                If ((Local1 == 0x10))
                {
                    A084 = Local2
                    A068 (0x46, Local7)
                }

                If ((Local1 == 0x11))
                {
                    A084 = Local2
                    A068 (0x48, Local7)
                }
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR0.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR0.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR1.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR1.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR2.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR2.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR3.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR3.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR4.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR4.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR5)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x85)  // _UID: Unique ID
                Name (AB12, 0x84)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR5.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR5.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR5.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR5.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR5.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR6)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x86)  // _UID: Unique ID
                Name (AB12, 0x98)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR6.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR6.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR6.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR6.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR6.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR7)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x87)  // _UID: Unique ID
                Name (AB12, 0xAC)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR7.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR7.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR7.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR7.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR7.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR7.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR7.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR7.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR7.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR0.ABR7.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR0.ABR7.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Device (AWR1)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x91)  // _UID: Unique ID
            Device (ABR8)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x88)  // _UID: Unique ID
                Name (AB12, 0xC0)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABR8.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABR8.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABR8.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABR8.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABR8.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABR8.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABR8.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABR8.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABR8.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABR8.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABR8.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR9)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x89)  // _UID: Unique ID
                Name (AB12, 0xD4)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABR9.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABR9.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABR9.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABR9.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABR9.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABR9.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABR9.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABR9.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABR9.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABR9.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABR9.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRA)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8A)  // _UID: Unique ID
                Name (AB12, 0xE8)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRA.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRA.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRA.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRA.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRA.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRA.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRA.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRA.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRA.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRA.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRA.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRB)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8B)  // _UID: Unique ID
                Name (AB12, 0xFC)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRB.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRB.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRB.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRB.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRB.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRB.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRB.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRB.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRB.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRB.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRB.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRC)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8C)  // _UID: Unique ID
                Name (AB12, 0x0110)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRC.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRC.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRC.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRC.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRC.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRC.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRC.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRC.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRC.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRC.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRC.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRD)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8D)  // _UID: Unique ID
                Name (AB12, 0x0124)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRD.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRD.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRD.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRD.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRD.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRD.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRD.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRD.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRD.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRD.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRD.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRE)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8E)  // _UID: Unique ID
                Name (AB12, 0x0138)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRE.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRE.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRE.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRE.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRE.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRE.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRE.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRE.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRE.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRE.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRE.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABRF)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x8F)  // _UID: Unique ID
                Name (AB12, 0x014C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A053, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A053, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A050,   8, 
                    A051,   8, 
                    Offset (0x68), 
                    A054,   2, 
                        ,   2, 
                    A055,   1, 
                    A056,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A057,   1, 
                    Offset (0x88), 
                    A058,   4, 
                        ,   1, 
                    A059,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A045, 0, NotSerialized)
                {
                    Local0 = A027 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR1.ABRF.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR1.ABRF.AB0E */
                    }
                }

                Method (A040, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A046, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR1.ABRF.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A039, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR1.ABRF.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR1.ABRF.AB0E */
                    }

                    Local0 = A046 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR1.ABRF.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A045 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A038, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR1.ABRF.AB02 */
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR1.ABRF.AB00 */
                }

                Method (A037, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A047 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A048 (0x00)
                    Name (A049, 0x00)
                    A048 (0x01)
                }

                Method (A042, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A043, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A050) && (Local0 <= A051)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A052, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A044, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A047, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A064, 2, NotSerialized)
                {
                    If ((A062 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A062 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A062 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A048, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A062 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A062 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A064 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A062 (Local0, (Local1 + 0x10))
                                A063 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A063 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A063, 3, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A062, 2, Serialized)
                {
                    Local0 = (AGRB + (A050 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR1.ABRF.A062.ADRR */
                }

                Method (A060, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A052 (Arg0))
                }

                Method (A061, 1, NotSerialized)
                {
                    Name (A049, 0x00)
                    A049 = A054 /* \_SB_.AWR1.ABRF.A054 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        Local0 = 0x01
                    }
                    Else
                    {
                        A048 (0x00)
                        Local0 = A062 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A063 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A062 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A063 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A055 = 0x01
                        Local0 = 0x05
                    }

                    A054 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01)){}
                        If ((Local0 == 0x05))
                        {
                            A062 (0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A054 = A049 /* \_SB_.AWR1.ABRF.A061.A049 */
                    If ((A049 != 0x00))
                    {
                        A048 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)){}
        }

        Method (AWAK, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)){}
        }

        Method (A003, 0, NotSerialized)
        {
        }

        Method (A004, 2, NotSerialized)
        {
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "AMD", "MYRTLE", 0x00000001)
{
    External (_SB_.I2CA, DeviceObj)
    External (_SB_.I2CB, DeviceObj)
    External (_SB_.I2CC, DeviceObj)
    External (_SB_.I2CD, DeviceObj)

    Name (MWTT, 0xFF)
    Scope (\_SB.I2CA)
    {
        Device (WT1A)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0001A")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFA")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x007F, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.WT1A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT1A)
        {
            Name (_HID, "STK0001A")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB_.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.MT1A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT2A)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0002A")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFA")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.WT2A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT2A)
        {
            Name (_HID, "STK0002A")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB_.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.MT2A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT3A)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0003A")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFA")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.WT3A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT3A)
        {
            Name (_HID, "STK0003A")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB_.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.MT3A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT4A)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0004A")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFA")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.WT4A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT4A)
        {
            Name (_HID, "STK0004A")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0014, ControllerInitiated, 0x000222E0,
                        AddressingMode7Bit, "\\_SB_.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.MT4A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT5A)
        {
            Name (_HID, "STK0005A")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00053020,
                        AddressingMode7Bit, "\\_SB_.I2CA",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CA.MT5A._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (\_SB.I2CB)
    {
        Device (WT1B)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0001B")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFB")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x007F, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.WT1B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT1B)
        {
            Name (_HID, "STK0001B")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB_.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.MT1B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT2B)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0002B")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFB")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.WT2B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT2B)
        {
            Name (_HID, "STK0002B")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB_.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.MT2B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT3B)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0003B")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFB")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.WT3B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT3B)
        {
            Name (_HID, "STK0003B")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB_.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.MT3B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT4B)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0004B")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFB")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.WT4B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT4B)
        {
            Name (_HID, "STK0004B")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0014, ControllerInitiated, 0x000222E0,
                        AddressingMode7Bit, "\\_SB_.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.MT4B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT5B)
        {
            Name (_HID, "STK0005B")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00053020,
                        AddressingMode7Bit, "\\_SB_.I2CB",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CB.MT5B._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (\_SB.I2CC)
    {
        Device (WT1C)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0001C")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFC")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x007F, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.WT1C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT1C)
        {
            Name (_HID, "STK0001C")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB_.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.MT1C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT2C)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0002C")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFC")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.WT2C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT2C)
        {
            Name (_HID, "STK0002C")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB_.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.MT2C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT3C)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0003C")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFC")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.WT3C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT3C)
        {
            Name (_HID, "STK0003C")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB_.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.MT3C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT4C)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0004C")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFC")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.WT4C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT4C)
        {
            Name (_HID, "STK0004C")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0014, ControllerInitiated, 0x000222E0,
                        AddressingMode7Bit, "\\_SB_.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.MT4C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT5C)
        {
            Name (_HID, "STK0005C")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00053020,
                        AddressingMode7Bit, "\\_SB_.I2CC",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CC.MT5C._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (\_SB.I2CD)
    {
        Device (WT1D)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0001D")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFD")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x007F, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.WT1D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT1D)
        {
            Name (_HID, "STK0001D")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB_.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.MT1D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT2D)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0002D")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFD")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0011, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.WT2D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT2D)
        {
            Name (_HID, "STK0002D")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB_.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.MT2D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT3D)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0003D")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFD")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0012, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.WT3D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT3D)
        {
            Name (_HID, "STK0003D")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB_.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.MT3D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (WT4D)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "STK0004D")  // _HID: Hardware ID
            Name (_CID, "SPBTestKMDFD")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0013, ControllerInitiated, 0x000F4240,
                        AddressingMode7Bit, "\\_SB.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.WT4D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT4D)
        {
            Name (_HID, "STK0004D")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0014, ControllerInitiated, 0x000222E0,
                        AddressingMode7Bit, "\\_SB_.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.MT4D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (MT5D)
        {
            Name (_HID, "STK0005D")  // _HID: Hardware ID
            Name (_CID, "WITTTest")  // _CID: Compatible ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00053020,
                        AddressingMode7Bit, "\\_SB_.I2CD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (RBUF) /* \_SB_.I2CD.MT5D._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((MWTT == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 1, "AMD", "MYRTLE", 0x00000001)
{
    /*
     * iASL Warning: There were 21 external control methods found during
     * disassembly, but only 0 were resolved (21 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_GPE.SP00, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP01, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP02, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP03, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP04, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP05, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP06, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP07, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.IPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.IWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M263, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M264, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M284, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.GPXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.GPXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0xBCDF1018, 0x000100D8)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   32, 
        M327,   16, 
        M328,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32, 
        M290,   32, 
        M331,   32, 
        M414,   16, 
        M444,   72
    }

    Method (M000, 1, Serialized)
    {
        Name (M285, Buffer (0x04)
        {
             0x01, 0x03, 0x80, 0x00                           // ....
        })
        CreateByteField (M285, Zero, M286)
        CreateByteField (M285, One, M287)
        CreateWordField (M285, 0x02, M288)
        Name (M450, Buffer (0x05)
        {
             0x00, 0x96, 0x05, 0x00, 0x00                     // .....
        })
        CreateDWordField (M450, Zero, M452)
        CreateByteField (M450, 0x04, M451)
        Local0 = (Arg0 + 0xB0000000)
        If ((ToInteger (M286) == One))
        {
            Local1 = ToInteger (M288)
            If ((ToInteger (M287) == 0x03))
            {
                OperationRegion (VARM, SystemIO, Local1, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                VARR = Local0
            }
            ElseIf ((ToInteger (M287) == 0x02))
            {
                OperationRegion (VARN, SystemIO, Local1, 0x02)
                Field (VARN, WordAcc, NoLock, Preserve)
                {
                    VARS,   16
                }

                VARS = (Local0 & 0xFFFF)
            }
            ElseIf ((ToInteger (M287) == One))
            {
                OperationRegion (VARO, SystemIO, Local1, One)
                Field (VARO, ByteAcc, NoLock, Preserve)
                {
                    VART,   8
                }

                VART = (Local0 & 0xFF)
            }
        }

        If ((ToInteger (M451) == One))
        {
            Local2 = ToInteger (M452)
            M250 (Zero, Zero, Zero, Local2, Local0)
        }
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Mutex (M421, 0x00)
    Method (M422, 4, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 == Zero))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xE0
        Acquire (M421, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M422.VAR1 */
        Local2 = VAR2 /* \M422.VAR2 */
        VAR1 = Local1
        Release (M421)
        Return (Local2)
    }

    Method (M423, 5, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 != Zero))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xE0
            Acquire (M421, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M423.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M421)
        }
    }

    Mutex (M253, 0x00)
    Method (M249, 4, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 == Ones))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 5, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 != Ones))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 4, Serialized)
    {
        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (Arg3)
        {
            M429 (Arg0, Arg1, Arg2, 0x88, Zero, 0x04, Arg3)
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, One)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M430 (Arg0, Arg1, Arg2)
            If ((Local3 & 0x0800))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M430, 3, Serialized)
    {
        Local0 = M017 (Arg0, Arg1, Arg2, 0x68, 0x10, 0x10)
        Return (Local0)
    }

    Method (M412, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, Zero)
        Local3 >>= Local2
        Local3 &= One
        Return (Local3)
    }

    Method (M413, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, One)
        Local3 &= (Ones ^ (One << Local2))
        Local3 |= (Arg1 << Local2)
        M410 (Local0, Local1, One, Local3)
    }

    Method (M440, 1, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, Zero)
        Local0 = M011 (0xFEC30000, 0x04, Arg0, One)
        Return (Local0)
    }

    Method (M441, 2, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, One)
        M012 (0xFEC30000, 0x08, Arg0, One, Arg1)
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                            One)
                    }
                    Else
                    {
                        Local2 = M011 ((M084 + 0x1202), (Local1 * 0x04), Zero, 
                            One)
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 >>= 0x10
                    Local2 &= One
                }
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 >>= 0x10
            Local2 &= One
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                (Local1 + 0x08) = M038 /* External reference */
                Local2
            }
            Else
            {
                Local2 = 0xFF
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            Local2 = M440 (Local1)
        }
        ElseIf ((Local0 == 0x06))
        {
            Local2 = M412 (Local1)
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                    Else
                    {
                        M012 ((M084 + 0x1202), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 &= 0xCF3FFFFF
                    Local2 |= 0x00800000
                    Local2 |= (Arg1 << 0x16)
                    M250 (Local3, Local4, Local5, Local6, Local2)
                }
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, One, Zero)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 &= 0xCF3FFFFF
            Local2 |= 0x00800000
            Local2 |= (Arg1 << 0x16)
            M423 (Local3, Local4, Local5, Local6, Local2)
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                M039 ((Local1 + 0x08), Arg1)
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            M441 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x06))
        {
            M413 (Local1, Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32A, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x1D, 0x1E,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M330, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32B, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x0B, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x1D, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // ........
        /* 0010 */  0x17, 0x20, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // . T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 < 0x02))
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
        ElseIf (((M085 > 0x02) && (M085 < 0x08)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x09) || (M085 == 0x0A)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0B) || (M085 == 0x0C)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32A [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0D) || (M085 == 0x0E)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x0F))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32B [Arg0]) * 
                0x04), Zero, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M428, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0xFF
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x08 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M011 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M429, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M012 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, One)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, One)
                If (((Local3 == One) && (Local4 == One)))
                {
                    Local0 = One
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local3 != Zero))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)){}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = Zero
                    Local2 = One
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        Local7 = M013 ((Local0 + Local1), 0x08, Zero, 0x20)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == Zero))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        If (((Local7 >> 0x10) > Zero))
                                        {
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                            }
                                            Else
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                            }

                                            Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                            }
                                            Else
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                            }
                                        }
                                        ElseIf ((Local2 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                ), 0x02, Zero)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Zero)
                                        }
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            One) * 0x04), 0x04, Zero)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == One))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            If (((Local7 >> 0x10) > Zero))
                                            {
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                }
                                                Else
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                }

                                                Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                                Local6 |= (0x03 << (Local2 << One))
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                }
                                                Else
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                }
                                            }
                                            ElseIf ((Local2 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                    ), 0x02, 0x03)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                            }
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                One) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (Zero, M013 ((Local0 + Local1), 0x05, Zero, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, Zero, 0x08), 0x19, Zero, 0x08)
                                        If ((M265 (Local6, Zero, Zero) == One))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                If (((Local7 >> 0x10) > Zero))
                                                {
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                    }
                                                    Else
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                    }

                                                    Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                                    Local6 |= (Local3 << (Local2 << One))
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                    }
                                                    Else
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                    }
                                                }
                                                ElseIf ((Local2 >= 0x04))
                                                {
                                                    M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                        ), 0x02, Local3)
                                                }
                                                Else
                                                {
                                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Local3)
                                                }
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    One) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        One) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                                Local7 = M009 (Local5)
                                Local4 = 0x03F2
                                While (((Local4 > Zero) && (Local7 != Local6)))
                                {
                                    Local4 = (Local4 - One)
                                    Stall (0x63)
                                    Local7 = M009 (Local5)
                                }
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            If ((M009 (Local5) == Local6))
                            {
                                Local7 = One
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                If ((Arg3 != One))
                {
                    M120 = Zero
                    \_SB.ALIB (0x06)
                    M115
                }
            }
            Else
            {
                If ((Arg3 != One))
                {
                    M120 = One
                    \_SB.ALIB (0x06)
                    M115
                }

                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 3, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = Zero
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M011 ((Local0 + Local1), One, Zero, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, Zero, 0x08)
                    Local5 = M011 ((Local0 + Local1), 0x03, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local4 == Arg2))
                        {
                            Return (Local5)
                        }
                    }

                    Local1 += 0x04
                }
            }
        }

        Return (Ones)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = One
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M04A, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
        }

        Return (Local0)
    }

    Method (M04B, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local2 = M011 (Arg0, (Arg1 + 0x02), Zero, 0x08)
            Local3 = M011 (Arg0, (Arg1 + 0x03), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
            Local0 |= (Local2 << 0x10)
            Local0 |= (Local3 << 0x18)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        If ((Local2 > Zero))
        {
            Sleep (Local2)
        }

        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (ToInteger (Local0))
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x05)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x0B))
        {
            If ((M085 >= 0x0D))
            {
                Return (M017 (Zero, 0x08, (Arg0 + One), 0x19, Zero, 0x08))
            }
            ElseIf ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, Arg0, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, 0x02, 0x19, Zero, 0x08))
            }
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M401, 2, NotSerialized)
    {
        Local0 = (Arg0 & 0x1F)
        Local0 = ((Local0 << 0x03) | (Arg1 & 0x07))
        Local1 = Zero
        If (((M085 >= 0x09) && (M085 <= 0x0A)))
        {
            Local2 = 0x07
            Local3 = 0x14301000
        }
        ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
        {
            Local2 = 0x10
            Local3 = 0x14601000
        }
        ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
        {
            Local2 = 0x0A
            Local3 = 0x14301000
        }
        ElseIf ((M085 == 0x0F))
        {
            Local2 = 0x0B
            Local3 = 0x14301000
        }
        Else
        {
            Local2 = 0x10
            Local3 = 0x14301000
        }

        Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
            ))
        While (((Local1 < Local2) && (Local4 != Local0)))
        {
            Local1++
            Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
                ))
        }

        If ((Local1 <= Local2))
        {
            Return (Local1)
        }
        Else
        {
            Return (0xFF)
        }
    }

    Method (M402, 2, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x09) && (M085 <= 0x0A)))
            {
                Local6 = (0x11140294 + (Local4 << 0x0C))
                Local7 = 0x11180188
            }
            ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
            {
                If ((Local4 >= 0x08))
                {
                    Local6 = (0x11840294 + ((Local4 - 0x08) << 0x0C))
                    Local7 = 0x11880188
                }
                Else
                {
                    Local6 = (0x11440294 + (Local4 << 0x0C))
                    Local7 = 0x11480188
                }
            }
            ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
            {
                If ((Local4 >= 0x03))
                {
                    Local6 = (0x11240294 + ((Local4 - 0x03) << 0x0C))
                    Local7 = 0x11280188
                }
                Else
                {
                    Local6 = (0x11140294 + (Local4 << 0x0C))
                    Local7 = 0x11180188
                }
            }
            ElseIf ((M085 == 0x0F))
            {
                If ((Local4 >= 0x05))
                {
                    Local6 = (0x11240294 + ((Local4 - 0x05) << 0x0C))
                    Local7 = 0x11280188
                }
                Else
                {
                    Local6 = (0x11140294 + (Local4 << 0x0C))
                    Local7 = 0x11180188
                }
            }
            ElseIf ((Local4 >= 0x08))
            {
                Local6 = (0x11240294 + ((Local4 - 0x08) << 0x0C))
                Local7 = 0x11280188
            }
            Else
            {
                Local6 = (0x11140294 + (Local4 << 0x0C))
                Local7 = 0x11180188
            }

            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                Local0 = M249 (Zero, Zero, Zero, Local7)
                Local0 &= 0xFFFFDFFF
                M250 (Zero, Zero, Zero, Local7, (Local0 | 0x2000))
            }

            Local1 = (M019 (Zero, Zero, Zero, 0x84) & 0xFF00FCFF)
            Local2 = ((Arg0 << 0x13) | (Arg1 << 0x10))
            Local1 |= Local2
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0300))
            If ((M085 >= 0x0C))
            {
                Local3 = M019 (Zero, Zero, Zero, 0x84)
                Local5 = 0x4EEA
                While (((Local5 > Zero) && ((Local3 & 0x0400) != 0x0400)))
                {
                    Local5 = (Local5 - One)
                    Stall (0x63)
                    Local3 = M019 (Zero, Zero, Zero, 0x84)
                }
            }

            Local3 = M249 (Zero, Zero, Zero, Local6)
            Local5 = 0x4EEA
            While (((Local5 > Zero) && ((Local3 & 0x3F) != 0x1F)))
            {
                Local5 = (Local5 - One)
                Stall (0x63)
                Local3 = M249 (Zero, Zero, Zero, Local6)
            }

            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                M250 (Zero, Zero, Zero, Local7, Local0)
            }
        }
    }

    Method (M403, 3, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x09) && (M085 <= 0x0A)))
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }
            ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
            {
                If ((Local4 >= 0x08))
                {
                    Local2 = (0x11840280 + ((Local4 - 0x08) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11440280 + (Local4 << 0x0C))
                }
            }
            ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
            {
                If ((Local4 >= 0x03))
                {
                    Local2 = (0x11240280 + ((Local4 - 0x03) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11140280 + (Local4 << 0x0C))
                }
            }
            ElseIf ((M085 == 0x0F))
            {
                If ((Local4 >= 0x05))
                {
                    Local2 = (0x11240280 + ((Local4 - 0x05) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11140280 + (Local4 << 0x0C))
                }
            }
            ElseIf ((Local4 >= 0x08))
            {
                Local2 = (0x11240280 + ((Local4 - 0x08) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }

            Local0 = M249 (Zero, Zero, Zero, Local2)
            Local0 &= 0xFFBFFFFF
            Local1 = Arg2
            Local0 |= (Local1 << 0x16)
            M250 (Zero, Zero, Zero, Local2, Local0)
        }
    }

    Name (M404, Buffer (0x07)
    {
         0x00, 0x02, 0x06, 0x08, 0x04, 0x0A, 0x0C         // .......
    })
    Method (M405, 5, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 <<= (Local1 * 0x02)
                Local0 &= 0x03
            }
            ElseIf ((Local1 >= 0x04))
            {
                Local0 = M011 ((M084 + 0x0E00), One, ((Local1 - 0x04
                    ) * 0x02), 0x02)
            }
            Else
            {
                Local0 = M011 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 
                    0x02)
            }
        }
        Else
        {
            Local0 = M011 ((M084 + 0x0E00), (Arg4 / 0x02), (
                (Arg4 & One) * 0x04), 0x04)
        }

        Return (Local0)
    }

    Method (M406, 6, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 &= (Ones ^ (0x03 << (Local1 << One)))
                Local0 |= (Arg5 << (Local1 << One))
                If ((Arg3 == 0x02))
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D02300, Local0)
                }
                Else
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D01E00, Local0)
                }
            }
            ElseIf ((Local1 >= 0x04))
            {
                M012 ((M084 + 0x0E00), One, ((Local1 - 0x04) * 0x02
                    ), 0x02, Arg5)
            }
            Else
            {
                M012 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 0x02, Arg5)
            }
        }
        Else
        {
            M012 ((M084 + 0x0E00), (Arg4 / 0x02), ((Arg4 & 
                One) * 0x04), 0x04, Arg5)
        }
    }

    Mutex (M408, 0x00)
    Method (M409, 3, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M409.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M409.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M409.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = ((Arg1 << One) | One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M409.SMB2 */
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M409.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = SMB5 /* \M409.SMB5 */
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (M410, 4, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M410.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M410.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M410.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = (Arg1 << One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M410.SMB2 */
            SMB5 = Arg3
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M410.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = Zero
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TPTS))
                {
                    \_SB.PCXX.GPXX.SAXX.TPTS (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TPTS))
                {
                    \_SB.PCI0.PTBR.PTST.TPTS (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TPTS))
            {
                \_SB.PCXX.SAXX.TPTS (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M263))
            {
                \_SB.M263 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IPTS))
                {
                    \_SB.IPTS (Arg0)
                }
            }
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TWAK))
                {
                    \_SB.PCXX.GPXX.SAXX.TWAK (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TWAK))
                {
                    \_SB.PCI0.PTBR.PTST.TWAK (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TWAK))
            {
                \_SB.PCXX.SAXX.TWAK (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M264))
            {
                \_SB.M264 (Arg0)
            }
        }

        If ((M280 != Zero))
        {
            If (CondRefOf (\_SB.M284))
            {
                \_SB.M284 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IWAK))
                {
                    \_SB.IWAK (Arg0)
                }
            }
        }
    }

    Scope (\_SB.GPIO)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            If ((\_GPE.M420 != 0xFF))
            {
                Local0 = (\_GPE.M415 & One)
                Local1 = (\_GPE.M416 & 0x07)
                Local1 += \_GPE.M411
                \_GPE.M419 = M409 (Local0, Local1, Zero)
            }
        }
    }

    Scope (\_GPE)
    {
        Name (M411, 0x20)
        Name (M415, One)
        Name (M416, 0x04)
        Name (M417, 0x40)
        Name (M418, 0x40)
        Name (M419, 0xFF)
        Name (M420, 0xEE)
        Method (_L00, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Local0 = (\_GPE.M415 & One)
            Local1 = (\_GPE.M416 & 0x07)
            Local1 += \_GPE.M411
            Local2 = \_GPE.M419
            Local3 = M409 (Local0, Local1, Zero)
            \_GPE.M419 = Local3
            Local3 ^= Local2
            Local3 |= \_GPE.M418
            Local3 &= \_GPE.M417
            If (((Local3 & One) == One))
            {
                If (CondRefOf (\_GPE.SP00))
                {
                    \_GPE.SP00 ()
                }
            }

            If (((Local3 & 0x02) == 0x02))
            {
                If (CondRefOf (\_GPE.SP01))
                {
                    \_GPE.SP01 ()
                }
            }

            If (((Local3 & 0x04) == 0x04))
            {
                If (CondRefOf (\_GPE.SP02))
                {
                    \_GPE.SP02 ()
                }
            }

            If (((Local3 & 0x08) == 0x08))
            {
                If (CondRefOf (\_GPE.SP03))
                {
                    \_GPE.SP03 ()
                }
            }

            If (((Local3 & 0x10) == 0x10))
            {
                If (CondRefOf (\_GPE.SP04))
                {
                    \_GPE.SP04 ()
                }
            }

            If (((Local3 & 0x20) == 0x20))
            {
                If (CondRefOf (\_GPE.SP05))
                {
                    \_GPE.SP05 ()
                }
            }

            If (((Local3 & 0x40) == 0x40))
            {
                If (CondRefOf (\_GPE.SP06))
                {
                    \_GPE.SP06 ()
                }
            }

            If (((Local3 & 0x80) == 0x80))
            {
                If (CondRefOf (\_GPE.SP07))
                {
                    \_GPE.SP07 ()
                }
            }
        }

        Method (XL0B, 0, NotSerialized)
        {
            Name (M448, Package (0x02)
            {
                One, 
                One
            })
            Local0 = M04A (M128, 0x91)
            If (((Local0 & 0xC0) == 0xC0))
            {
                Local3 = Buffer (0x08){}
                CreateWordField (Local3, Zero, M254)
                CreateByteField (Local3, 0x02, M255)
                CreateDWordField (Local3, 0x03, M256)
                M256 = Zero
                M254 = 0x07
                M255 = 0x30
                If ((M085 == 0x0E))
                {
                    If (CondRefOf (\_SB.ALIB))
                    {
                        Local3 = \_SB.ALIB (0x0C)
                        Local4
                    }
                }
                ElseIf (CondRefOf (\_SB.ALIB))
                {
                    Local3 = \_SB.ALIB (0x0C)
                    M448
                }

                If (CondRefOf (\_SB.APAD))
                {
                    If ((M085 == 0x0E))
                    {
                        \_SB.APAD.M446 [One] = Local4
                        Notify (\_SB.APAD, 0x80) // Status Change
                    }
                    Else
                    {
                        Local1 = Zero
                        Local2 = Zero
                        Local1 = M448 [Zero]
                        Local2 = M448 [One]
                        \_SB.APAD.M446 [One] = Local2
                        If ((Local1 == 0x02))
                        {
                            Notify (\_SB.APAD, 0x85) // Device-Specific
                        }
                        ElseIf ((Local1 == One))
                        {
                            Notify (\_SB.APAD, 0x84) // Reserved
                        }
                        Else
                        {
                            Notify (\_SB.APAD, 0x80) // Status Change
                        }
                    }
                }
            }
        }
    }

    Scope (\_SB)
    {
        Device (APAD)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Name (M446, Package (0x02)
            {
                One, 
                Zero
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (\_OSI ("Processor Aggregator Device"))
                {
                    Local0 = M04A (M128, 0x91)
                    If (((Local0 & 0x80) == 0x80))
                    {
                        Return (0x0F)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Local0 = M04A (M128, 0x91)
                If (((Local0 & 0xC0) == 0xC0))
                {
                    Local3 = Buffer (0x08){}
                    CreateWordField (Local3, Zero, M254)
                    CreateByteField (Local3, 0x02, M255)
                    CreateDWordField (Local3, 0x03, M256)
                    M256 = (Local0 >> 0x08)
                    M254 = 0x07
                    M255 = 0x31
                    If (CondRefOf (\_SB.ALIB))
                    {
                        \_SB.ALIB (0x0C)
                        Local3
                    }
                }
            }

            Method (_PUR, 0, NotSerialized)  // _PUR: Processor Utilization Request
            {
                Return (M446) /* \_SB_.APAD.M446 */
            }
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004   4]                 Table Length : 0000004C
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : 42
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   2]               Platform Class : 0000
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]              Control Address : 00000000FD110510
[030h 0048   4]                 Start Method : 02 [ACPI Start Method]

[034h 0052  12]            Method Parameters : 00 00 00 00 00 00 00 00 00 00 00 00
[040h 0064   4]           Minimum Log Length : 00010000
[044h 0068   8]                  Log Address : 00000000BCDDB000

Raw Table Data: Length 76 (0x4C)

    0000: 54 50 4D 32 4C 00 00 00 04 42 41 4C 41 53 4B 41  // TPM2L....BALASKA
    0010: 41 20 4D 20 49 20 00 00 01 00 00 00 41 4D 49 20  // A M I ......AMI 
    0020: 00 00 00 00 00 00 00 00 10 05 11 FD 00 00 00 00  // ................
    0030: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 00 00 01 00 00 B0 DD BC 00 00 00 00              // ............


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000E884
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 55
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD"
[020h 0032   4]        Asl Compiler Revision : 31504F47


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 59524 (0xE884)

    0000: 56 46 43 54 84 E8 00 00 01 55 41 4C 41 53 4B 41  // VFCT.....UALASKA
    0010: 41 20 4D 20 49 20 00 00 01 00 00 00 41 4D 44 00  // A M I ......AMD.
    0020: 47 4F 50 31 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // GOP12..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 26 00 00 00  // ............&...
    0050: 00 00 00 00 00 00 00 00 02 10 DF 67 00 00 00 00  // ...........g....
    0060: 01 00 00 00 00 E8 00 00 55 AA 74 E9 A9 02 00 00  // ........U.t.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 4C 02 00 00 00 00 49 42 4D 2B 82 92 00 00 00 00  // L.....IBM+......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 A1 02 00 00 00 00 00 00  // 20..............
    00B0: 26 02 00 00 00 00 00 00 30 37 2F 32 37 2F 31 37  // &.......07/27/17
    00C0: 20 32 31 3A 33 35 00 00 38 00 00 00 E9 B4 03 00  //  21:35..8.......
    00D0: E9 C3 03 00 00 00 F4 00 00 13 00 00 00 D0 01 00  // ................
    00E0: 26 68 20 E1 02 80 7E 00 A2 18 45 02 12 00 00 00  // &h ...~...E.....
    00F0: 00 00 00 3C 40 0E 02 07 3C 01 1A 00 04 00 00 00  // ...<@...<.......
    0100: EE A0 FF 06 00 08 30 40 0E 01 00 00 00 00 00 00  // ......0@........
    0110: 14 03 00 00 00 00 00 00 BE 7E 11 00 B9 07 1A D6  // .........~......
    0120: 50 2C 00 00 00 00 00 00 00 00 00 00 14 40 41 43  // P,...........@AC
    0130: 00 00 00 00 10 00 00 00 42 00 00 00 F0 7D C6 07  // ........B....}..
    0140: 20 00 20 00 12 00 0E 00 00 00 00 00 00 00 00 00  //  . .............
    0150: 00 00 00 00 00 00 00 00 00 00 00 00 31 31 33 2D  // ............113-
    0160: 56 33 34 31 31 31 2D 46 31 00 45 4C 4C 45 53 4D  // V34111-F1.ELLESM
    0170: 45 52 45 00 50 43 49 5F 45 58 50 52 45 53 53 00  // ERE.PCI_EXPRESS.
    0180: 47 44 44 52 35 00 0D 0A 31 31 33 2D 4D 53 49 54  // GDDR5...113-MSIT
    0190: 56 33 34 31 4D 48 2E 31 35 34 20 20 20 20 20 20  // V341MH.154      
    01A0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    01B0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    01C0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    01D0: 20 20 20 20 0D 0A 00 0D 0A 20 0D 0A 00 28 43 29  //     ..... ...(C)
    01E0: 20 31 39 38 38 2D 32 30 31 30 2C 20 41 64 76 61  //  1988-2010, Adva
    01F0: 6E 63 65 64 20 4D 69 63 72 6F 20 44 65 76 69 63  // nced Micro Devic
    0200: 65 73 2C 20 49 6E 63 2E 00 41 54 4F 4D 42 49 4F  // es, Inc..ATOMBIO
    0210: 53 42 4B 2D 41 4D 44 20 56 45 52 30 31 35 2E 30  // SBK-AMD VER015.0
    0220: 35 30 2E 30 30 30 2E 30 30 31 2E 30 30 30 30 30  // 50.000.001.00000
    0230: 30 00 30 36 73 2E 72 30 31 20 20 20 20 20 00 31  // 0.06s.r01     .1
    0240: 34 34 30 35 38 39 20 00 33 39 32 32 38 38 20 20  // 440589 .392288  
    0250: 00 20 20 20 20 20 20 20 20 00 4D 53 49 5F 45 4C  // .        .MSI_EL
    0260: 4C 45 53 4D 45 52 45 5F 44 30 30 39 30 38 5F 58  // LESMERE_D00908_X
    0270: 54 5F 47 44 35 5F 38 47 42 5F 53 41 4D 53 55 4E  // T_GD5_8GB_SAMSUN
    0280: 47 5C 63 6F 6E 66 69 67 2E 68 00 00 00 90 24 00  // G\config.h....$.
    0290: 01 01 41 54 4F 4D 00 C0 CD 03 CA 01 71 02 1E 01  // ..ATOM......q...
    02A0: F2 03 00 00 00 00 62 14 13 34 4C 02 5A 97 00 98  // ......b..4L.Z...
    02B0: A0 00 00 00 50 43 49 52 02 10 DF 67 00 00 18 00  // ....PCIR...g....
    02C0: 00 00 00 03 74 00 32 0F 00 00 00 00 41 4D 44 20  // ....t.2.....AMD 
    02D0: 41 54 4F 4D 42 49 4F 53 00 CC 31 D6 E3 00 00 00  // ATOMBIOS..1.....
    02E0: 00 00 00 00 00 95 CA 70 7B 11 A9 92 9A 52 48 2F  // .......p{....RH/
    02F0: 27 4E F5 4A AD 01 00 00 00 00 00 00 00 00 00 00  // 'N.J............
    0300: 00 00 00 00 00 00 00 00 00 56 1E 0E 1F E8 40 2A  // .........V....@*
    0310: 81 4D 50 00 20 1F 5E 1E 06 66 50 66 51 66 52 66  // .MP. .^..fPfQfRf
    0320: 53 66 55 66 56 66 57 0E 1F A3 3A 02 8C 0E 2E 02  // SfUfVfW...:.....
    0330: B2 20 E8 F8 2D 0B C0 75 14 A2 02 00 66 5F 66 5E  // . ..-..u....f_f^
    0340: 66 5D 66 5B 66 5A 66 59 66 58 07 1F CB E8 0E 2F  // f]f[fZfYfX...../
    0350: E8 D9 2C 32 D2 89 16 3C 02 A1 3A 02 66 C1 C0 10  // ..,2...<..:.f...
    0360: A1 2E 02 E8 0B 04 E8 1E 04 E8 E6 03 E8 54 05 E8  // .............T..
    0370: 4B 03 E8 DB 29 F7 45 50 00 20 75 13 E8 B1 29 0B  // K...).EP. u...).
    0380: C0 74 0C E8 49 00 E8 F9 57 E8 DB 03 E8 40 58 E8  // .t..I...W....@X.
    0390: B9 00 B4 80 E8 CA 2C 8A C7 66 C1 E0 10 8A E3 B0  // ......,..f......
    03A0: 14 66 50 BB 08 00 E8 15 28 A8 01 66 58 74 02 B0  // .fP.....(..fXt..
    03B0: 20 66 A3 82 92 E8 68 03 E8 D6 03 E8 C5 2E 66 5F  //  f....h.......f_
    03C0: 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F CB 2E  // f^f]f[fZfYfX....
    03D0: 8B 1E 2E 02 83 3E DF 03 00 75 04 89 1E DD 03 1E  // .....>...u......
    03E0: 2E 8E 1E D5 03 9C FA 66 C7 06 08 01 65 F0 00 F0  // .......f....e...
    03F0: C7 06 40 00 F2 03 89 1E 42 00 C7 06 B4 01 F2 03  // ..@.....B.......
    0400: 89 1E B6 01 C7 06 7C 00 A0 60 89 1E 7E 00 C7 06  // ......|..`..~...
    0410: 0C 01 B3 64 89 1E 0E 01 C7 06 A8 04 E0 5A 89 1E  // ...d.........Z..
    0420: AA 04 2E 8E 1E DD 03 8B C3 A3 E2 5A A3 F2 5A A3  // ...........Z..Z.
    0430: 04 5B 9D 1F C3 50 4D 49 44 F2 03 08 48 00 00 00  // .[...PMID...H...
    0440: A0 00 B0 00 B8 00 C0 00 00 00 00 BB 00 00 E8 6D  // ...............m
    0450: 27 66 C1 E8 10 A3 52 02 C3 00 E8 01 2E E8 48 02  // 'f....R.......H.
    0460: 75 1B 2E 3A 26 48 02 75 05 E8 47 00 EB 11 80 FC  // u..:&H.u..G.....
    0470: 4F 75 05 E8 F0 42 EB 07 E8 3D 4A EB 02 B4 01 E8  // Ou...B...=J.....
    0480: 01 2E CF E8 D8 2D E8 1F 02 75 05 E8 25 00 EB 02  // .....-...u..%...
    0490: B4 01 E8 EE 2D CB E8 C5 2D E8 0C 02 75 0F 80 FC  // ....-...-...u...
    04A0: 4F 75 05 E8 C0 42 EB 07 E8 0D 4A EB 02 B4 01 E8  // Ou...B....J.....
    04B0: D1 2D CB 1E 06 66 50 66 51 66 52 66 53 66 55 66  // .-...fPfQfRfSfUf
    04C0: 56 66 57 0E 1F 3C 04 75 23 BB 0B 00 E8 EF 26 8D  // VfW..<.u#.....&.
    04D0: 36 1B 01 8A 3C 80 EF 30 B3 02 8B EC 89 5E 0C 89  // 6...<..0.....^..
    04E0: 46 04 66 C1 E8 10 89 46 00 E9 9A 01 3C 05 75 18  // F.f....F....<.u.
    04F0: E8 77 02 E8 36 2B 8B EC 89 56 10 89 46 00 66 C1  // .w..6+...V..F.f.
    0500: E8 10 89 46 04 E9 7E 01 3C 06 75 39 E8 69 02 66  // ...F..~.<.u9.i.f
    0510: D1 E0 8B EC 89 46 14 BB 02 00 E8 A1 26 88 46 18  // .....F......&.F.
    0520: E8 59 02 66 0B C0 0F 84 54 01 66 89 46 0C BB 06  // .Y.f....T.f.F...
    0530: 00 E8 8A 26 33 C0 66 89 46 00 2E 8B 16 52 02 89  // ...&3.f.F....R..
    0540: 56 10 E9 41 01 3C 0B 75 24 0A DB 75 11 B9 80 00  // V..A.<.u$..u....
    0550: BB 02 00 8B EC 89 5E 0C 89 4E 14 E9 28 01 8A C7  // ......^..N..(...
    0560: E8 3B 01 E8 D8 0E 0F 84 14 01 E9 19 01 3C 17 75  // .;...........<.u
    0570: 21 E8 6A 06 74 06 E8 5E 0D E8 A9 18 E8 8B 07 E8  // !.j.t..^........
    0580: AF 0E 33 C9 66 C1 E8 10 0A E8 8B EC 89 4E 14 E9  // ..3.f........N..
    0590: F4 00 3C 18 75 6A 0A FF 75 18 E8 9B 05 8B EC 89  // ..<.uj..u.......
    05A0: 46 0C 66 C1 E8 10 89 46 14 E8 3C 08 89 4E 10 E9  // F.f....F..<..N..
    05B0: D4 00 80 FF 0F 74 0E 23 C9 0F 84 C1 00 E8 C5 05  // .....t.#........
    05C0: E8 1B 06 75 2D BB 00 1C E8 53 2C 66 0B C0 0F 84  // ...u-....S,f....
    05D0: AC 00 E8 35 07 0B C9 0F 84 A3 00 BE 00 1C E8 C6  // ...5............
    05E0: 01 0F 84 99 00 BE 00 1C B0 40 E8 23 02 E8 48 05  // .........@.#..H.
    05F0: EB 06 E8 3E 06 E8 2D 06 8B EC 89 46 0C E9 86 00  // ...>..-....F....
    0600: 3C 19 75 05 E8 00 06 EB 7D 3C 82 75 2C 80 FB 01  // <.u.....}<.u,...
    0610: 75 0D 8B EC BE 70 06 89 76 00 8C 4E 10 EB 67 80  // u....p..v..N..g.
    0620: FB 05 75 15 0A FF 75 0A E8 86 03 8B EC 89 46 14  // ..u...u.......F.
    0630: EB 54 E8 45 03 74 3F EB 4D 3C 8E 75 12 80 FF 01  // .T.E.t?.M<.u....
    0640: 74 08 80 FF 02 75 2F 80 C1 02 E8 CA 03 EB 37 3C  // t....u/.......7<
    0650: 8F 75 23 80 FF 05 75 05 E8 1C 06 EB 29 80 FF 07  // .u#...u.....)...
    0660: 75 0A E8 20 06 8B EC 88 5E 0C EB 1A 80 FF 85 75  // u.. ....^......u
    0670: 05 E8 03 06 EB 10 8B EC C6 46 19 02 EB 0F 8B EC  // .........F......
    0680: C6 46 19 01 EB 07 32 E4 8B EC 88 66 19 66 5F 66  // .F....2....f.f_f
    0690: 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3 51 8A  // ^f]f[fZfYfX...Q.
    06A0: C8 B8 01 00 D3 E0 59 C3 50 32 C0 53 BB 15 00 E8  // ......Y.P2.S....
    06B0: 0C 25 5B 3C FF 74 04 24 03 0A C0 58 C3 E8 E9 2B  // .%[<.t.$...X...+
    06C0: E8 A8 06 F7 C1 02 00 74 0E 06 0E 07 8D 3E 70 06  // .......t.....>p.
    06D0: B8 02 00 E8 C1 05 07 C3 00 00 00 00 07 00 08 08  // ................
    06E0: 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06F0: 00 00 00 00 00 00 00 00 0C 01 C3 00 50 51 B0 B6  // ............PQ..
    0700: E6 43 B0 33 E6 42 B0 05 E6 42 E4 61 8A E0 0C 03  // .C.3.B...B.a....
    0710: E6 61 8A C4 B9 C8 00 E8 9A 27 E6 61 59 58 C3 00  // .a.......'.aYX..
    0720: 1E 56 0E 1F 80 3E 02 00 80 76 05 C6 06 02 00 80  // .V...>...v......
    0730: 8A 0E 02 00 C1 E1 09 FC C6 06 21 00 00 33 F6 32  // ..........!..3.2
    0740: E4 AC 02 E0 E2 FB F6 D4 FE C4 88 26 21 00 5E 1F  // ...........&!.^.
    0750: C3 00 E8 78 26 75 03 E8 22 28 E8 BB 26 E8 85 26  // ...x&u.."(..&..&
    0760: E8 DF 25 E8 71 0B C3 B0 01 C3 BB 01 00 E8 3A 24  // ..%.q.........:$
    0770: C3 BB 01 00 E8 3D 24 C3 E8 C7 27 C3 53 BB 04 00  // .....=$...'.S...
    0780: E8 3B 24 33 C0 5B C3 E8 90 27 BB 0A 00 E8 24 24  // .;$3.[...'....$$
    0790: C3 BB 0A 00 E8 13 24 66 8B C8 E8 7D 27 BB 0A 00  // ......$f...}'...
    07A0: 66 2B C1 E8 0E 24 C3 E8 29 00 0B C9 74 22 E8 66  // f+...$..)...t".f
    07B0: 06 E8 FD 15 66 51 66 8B C8 BB 07 00 E8 EB 23 66  // ....fQf.......#f
    07C0: 25 00 FE 00 00 66 0B C1 E8 E9 23 66 59 0C 01 C3  // %....f....#fY...
    07D0: 32 C0 C3 E8 9D 03 0B C9 75 0A 33 D2 E8 51 25 8B  // 2.......u.3..Q%.
    07E0: C8 E8 A1 03 0B D1 E8 FF 05 23 CA 66 C1 E6 10 33  // .........#.f...3
    07F0: F6 E8 8A 0A 74 15 E8 97 0B 85 C1 74 F4 51 E8 A2  // ....t......t.Q..
    0800: 11 59 75 ED E8 89 0B 33 C8 EB E6 66 C1 EE 10 C3  // .Yu....3...f....
    0810: A8 10 75 5A E8 AC 15 66 C1 E6 10 33 F6 E8 5E 0A  // ..uZ...f...3..^.
    0820: 74 24 E8 2E 0A 74 0B E8 AB 0B 24 03 3C 03 75 ED  // t$...t....$.<.u.
    0830: EB 0A E8 A0 0B A8 01 74 E4 E8 15 07 E8 A5 16 B5  // .......t........
    0840: 00 E8 98 0B EB D7 E8 7C 01 32 C9 33 F6 E8 72 0A  // .......|.2.3..r.
    0850: E8 1B 16 E8 FB 25 FE C1 38 C1 72 F1 66 C1 EE 10  // .....%..8.r.f...
    0860: E8 59 15 A8 20 75 57 A8 40 75 03 E8 38 1C E8 40  // .Y.. uW.@u..8..@
    0870: 15 0A C0 75 19 32 C9 33 F6 E8 46 0A 0B F6 74 05  // ...u.2.3..F...t.
    0880: B5 01 E8 D8 1C E8 C9 25 FE C1 38 C1 72 EB 33 F6  // .......%..8.r.3.
    0890: E8 E0 09 74 26 E8 1D 0B E8 91 22 75 14 E8 E5 03  // ...t&....."u....
    08A0: 0A DB 74 0D E8 AA 06 E8 3A 16 B5 00 E8 2D 0B EB  // ..t.....:....-..
    08B0: DF E8 12 16 B5 01 E8 23 0B EB D5 E8 14 01 C3 E8  // .......#........
    08C0: 6E 24 C3 E8 5F 15 33 C9 33 D2 E8 B8 02 66 33 D2  // n$.._.3.3....f3.
    08D0: 66 33 C0 E8 3E 0B E8 58 00 B1 FF E8 9C 00 33 F6  // f3..>..X......3.
    08E0: E8 9B 09 74 10 E8 CD 0A E8 3D 22 74 03 E8 71 16  // ...t.....="t..q.
    08F0: E8 9E 16 EB EB B3 01 E8 6A 02 32 C9 E8 08 03 E8  // ........j.2.....
    0900: D4 24 E8 2B 24 0B C0 C3 E8 CC 09 E8 17 15 66 33  // .$.+$.........f3
    0910: C0 66 BA 00 F0 00 F0 E8 2D 02 51 B1 01 E8 D8 02  // .f......-.Q.....
    0920: 59 33 F6 E8 58 09 74 05 E8 36 16 EB F6 E8 86 1B  // Y3..X.t..6......
    0930: C3 B8 02 00 E8 29 09 74 40 B1 07 E8 29 20 E8 31  // .....).t@...) .1
    0940: 0B A8 04 75 12 E8 A2 26 83 3D 00 75 0A E8 E0 23  // ...u...&.=.u...#
    0950: 83 E0 FD E8 E3 23 C3 66 BA FF FF FB FF 66 B8 00  // .....#.f.....f..
    0960: 00 04 00 E8 AE 0A E8 D1 0C E8 11 26 8A C8 BB 04  // ...........&....
    0970: 00 E8 36 22 8A E1 E8 3B 22 C3 E8 4D 22 74 31 38  // ..6"...;"..M"t18
    0980: E1 76 04 8A CC EB 06 38 C1 73 02 8A C8 BB 02 00  // .v.....8.s......
    0990: E8 17 22 8A E1 E8 1C 22 BB 02 00 E8 0C 22 66 C1  // .."...."....."f.
    09A0: E8 18 A8 20 75 08 B1 04 E8 BC 1F 0C 01 C3 0C 01  // ... u...........
    09B0: C3 51 E8 15 22 74 0C 8A CC BB 02 00 E8 EB 21 8A  // .Q.."t........!.
    09C0: C4 8A E1 59 C3 33 F6 E8 A9 08 74 05 E8 81 14 EB  // ...Y.3....t.....
    09D0: F6 C3 33 F6 E8 9C 08 74 05 E8 83 14 EB F6 C3 E8  // ..3....t........
    09E0: 4B 25 75 1B 80 F9 01 75 17 33 F6 E8 85 08 74 0C  // K%u....u.3....t.
    09F0: 51 E8 D2 14 B5 01 E8 E3 09 59 EB EF E8 D3 FF C3  // Q........Y......
    0A00: E8 C2 FF 33 F6 E8 6B 08 74 0C 51 E8 53 15 B5 00  // ...3..k.t.Q.S...
    0A10: E8 C9 09 59 EB EF C3 B8 02 00 E8 43 08 74 03 E8  // ...Y.......C.t..
    0A20: 45 1F C3 E8 0F 1B 8B C8 66 C1 E8 10 8B D0 C3 8A  // E.......f.......
    0A30: C3 24 80 E8 8D 13 32 C9 B5 10 E8 B1 1A E8 11 24  // .$....2........$
    0A40: FE C1 38 C1 72 F2 C3 E8 06 13 3B C1 7C 3A 8B C1  // ..8.r.....;.|:..
    0A50: E8 46 13 E8 D7 1C 8B C8 51 E8 76 13 E8 3A 13 59  // .F......Q.v..:.Y
    0A60: E8 CA 1C 3B C8 72 02 8B C1 8D 5C 04 E8 27 27 32  // ...;.r....\..''2
    0A70: C9 B5 0F E8 78 1A E8 D8 23 FE C1 38 C1 72 F2 8D  // ....x...#..8.r..
    0A80: 5C 04 E8 99 27 0B C0 C3 33 C0 C3 52 E8 9C 00 8A  // \...'...3..R....
    0A90: C2 8B D1 66 C1 E2 10 8A D0 32 C0 B9 00 02 E8 6B  // ...f.....2.....k
    0AA0: 1C 66 C1 EA 10 8B CA 5A E8 80 00 E8 70 27 66 C1  // .f.....Z....p'f.
    0AB0: E8 02 0A F6 75 04 66 C1 E8 02 67 26 88 07 66 C1  // ....u.f...g&..f.
    0AC0: E8 0A 67 26 88 47 01 66 C1 E8 0A 67 26 88 47 02  // ..g&.G.f...g&.G.
    0AD0: 66 83 C7 04 83 C3 04 E2 D2 C3 51 E8 4D 00 53 67  // f.........Q.M.Sg
    0AE0: 26 8A 47 02 66 C1 E0 0A 67 26 8A 47 01 66 C1 E0  // &.G.f...g&.G.f..
    0AF0: 0A 67 26 8A 07 66 C1 E0 02 0A F6 75 04 66 C1 E0  // .g&..f.....u.f..
    0B00: 02 E8 7A 26 66 83 C7 04 83 C3 04 E2 D2 5B 59 8A  // ..z&f........[Y.
    0B10: C2 8B D1 66 C1 E2 10 8A D0 B9 00 03 53 E8 EC 1B  // ...f........S...
    0B20: 5B E8 2D 23 FE C1 38 C1 72 F2 C3 BB 00 18 33 C0  // [.-#..8.r.....3.
    0B30: 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00 E8 6B 20 66  // ........S....k f
    0B40: 25 FF 0F FF 0F 5B C3 53 66 50 66 51 66 8B C8 BB  // %....[.SfPfQf...
    0B50: 03 00 E8 55 20 66 23 C2 66 0B C1 E8 56 20 66 59  // ...U f#.f...V fY
    0B60: 66 58 5B C3 B8 2C 06 F6 C3 01 75 03 B8 0C 06 E8  // fX[..,....u.....
    0B70: 37 00 C3 BB 05 00 E8 31 20 25 FF 0F 8B C8 66 C1  // 7......1 %....f.
    0B80: E0 10 8B D0 C3 E8 A8 21 23 C8 81 E2 15 01 23 D1  // .......!#.....#.
    0B90: 66 C1 E2 10 8B D1 BB 05 00 E8 0E 20 66 25 00 F0  // f.......... f%..
    0BA0: EA FE 66 0B C2 E8 0C 20 C3 66 50 53 51 66 52 66  // ..f.... .fPSQfRf
    0BB0: 33 D2 33 DB 8A DC 8A E8 8A C8 80 E1 1F 66 BA 01  // 3.3..........f..
    0BC0: 00 00 00 66 D3 E2 E8 E1 1F 66 0B C2 F6 C5 20 75  // ...f.....f.... u
    0BD0: 03 66 33 C2 E8 DD 1F 66 5A 59 5B 66 58 C3 66 50  // .f3....fZY[fX.fP
    0BE0: 53 BB 06 00 E8 C3 1F A8 10 75 09 BB F0 16 E8 2D  // S........u.....-
    0BF0: 26 3D 5A A5 5B 66 58 C3 B8 04 06 80 F1 01 C0 E1  // &=Z.[fX.........
    0C00: 05 0A C1 E8 A3 FF C3 53 66 50 BB F8 16 E8 0E 26  // .......SfP.....&
    0C10: 8A C1 E8 69 25 66 58 5B C3 53 BB F8 16 E8 FE 25  // ...i%fX[.S.....%
    0C20: 83 E0 01 5B C3 BB 06 00 E8 7F 1F 66 C1 E8 10 25  // ...[.......f...%
    0C30: FF 0F C3 BB 06 00 E8 71 1F 66 25 FF FF 00 F0 66  // .......q.f%....f
    0C40: C1 E2 10 66 0B C2 E8 6B 1F C3 53 66 50 BB 07 00  // ...f...k..SfP...
    0C50: E8 57 1F F6 C4 01 66 58 B0 06 74 02 B0 08 5B C3  // .W....fX..t...[.
    0C60: 53 BB 07 00 E8 43 1F 80 E4 FE 80 FD 06 74 03 80  // S....C.......t..
    0C70: CC 01 E8 3F 1F 5B C3 53 B8 06 06 C0 E3 05 0A C3  // ...?.[.S........
    0C80: E8 26 FF 5B C3 66 50 BB 06 00 E8 1D 1F 24 40 C0  // .&.[.fP......$@.
    0C90: E8 06 8A D8 66 58 C3 57 66 50 66 33 C0 B9 08 00  // ....fX.WfPf3....
    0CA0: FC F3 66 AB 66 58 5F E8 3E 01 0B C0 75 09 E8 E3  // ..f.fX_.>...u...
    0CB0: 05 74 3C 85 C1 74 F7 E8 A6 05 8D 9C 6A 01 E8 5D  // .t<..t......j..]
    0CC0: 25 26 89 05 8D 9C 6E 01 E8 53 25 26 89 45 02 8D  // %&....n..S%&.E..
    0CD0: 9C B5 02 E8 48 25 02 C0 04 04 26 88 45 06 26 88  // ....H%....&.E.&.
    0CE0: 45 07 26 88 45 08 B0 07 26 88 45 04 0A C0 C3 32  // E.&.E...&.E....2
    0CF0: C0 C3 C3 66 50 53 51 52 56 57 E8 E1 FE 74 03 E8  // ...fPSQRVW...t..
    0D00: D5 05 5F 5E 5A 59 5B 66 58 C3 33 C9 E8 1E 22 75  // .._^ZY[fX.3..."u
    0D10: 48 66 BA FF FF 0C FF 66 33 C0 E8 F7 06 33 F6 E8  // Hf.....f3....3..
    0D20: 5C 05 74 18 E8 69 06 A9 C8 0E 74 F3 E8 43 07 A8  // \.t..i....t..C..
    0D30: 04 75 04 A8 18 74 E8 E8 7B 00 EB E3 E8 2C 00 75  // .u...t..{....,.u
    0D40: 03 E8 A4 00 33 F6 E8 35 05 74 0E E8 42 06 85 C1  // ....3..5.t..B...
    0D50: 74 F4 51 E8 F9 07 59 EB ED C3 8D 5D 28 66 C1 E3  // t.Q...Y....](f..
    0D60: 10 8D 5C 28 B9 49 00 E8 0E 21 C3 66 50 53 52 56  // ..\(.I...!.fPSRV
    0D70: 33 C9 33 D2 8D 36 44 0D E8 B6 06 A8 03 74 03 83  // 3.3..6D......t..
    0D80: CA 01 66 C1 E8 10 8A 0C 80 F9 FF 74 15 66 A9 01  // ..f........t.f..
    0D90: 00 00 00 74 07 BB 01 00 D3 E3 0B D3 66 D1 E8 46  // ...t........f..F
    0DA0: EB E4 8B CA 0B C9 5E 5A 5B 66 58 C3 03 07 01 05  // ......^Z[fX.....
    0DB0: 06 09 0A 0B FF 66 50 53 51 E8 D4 05 0F BC D8 81  // .....fPSQ.......
    0DC0: C3 74 0D 8A 0F 66 B8 01 00 00 00 66 D3 E0 66 BA  // .t...f.....f..f.
    0DD0: FF FF FF FF E8 3D 06 59 5B 66 58 C3 01 12 0B 10  // .....=.Y[fX.....
    0DE0: 09 13 14 11 0C 15 16 17 50 53 52 E8 7D FF 75 13  // ........PSR.}.u.
    0DF0: B9 01 00 E8 3A 1F 23 C8 75 19 33 C0 E8 95 04 8B  // ....:.#.u.3.....
    0E00: C8 EB 10 83 F9 02 74 0B E8 7A FE 80 FB 01 75 03  // ......t..z....u.
    0E10: 83 E1 FD 5A 5B 58 C3 56 83 EC 04 8B EC 66 33 C0  // ...Z[X.V.....f3.
    0E20: 66 89 46 00 66 BA 00 F0 00 F0 E8 1A FD 66 C1 E6  // f.F.f........f..
    0E30: 10 E8 60 04 0B C0 74 1E 85 C1 74 F5 55 E8 56 00  // ..`...t...t.U.V.
    0E40: 5D 74 04 33 C8 EB EA E8 BB 05 66 3B 56 00 76 E1  // ]t.3......f;V.v.
    0E50: 66 89 56 00 EB DB E8 DF FC 74 07 66 8B 46 00 E8  // f.V......t.f.F..
    0E60: 05 00 83 C4 04 5E C3 33 F6 66 50 E8 05 04 66 58  // .....^.3.fP...fX
    0E70: 8D 9C D8 02 E8 07 23 66 8B D0 E8 BB FC E8 DF 18  // ......#f........
    0E80: 8D 9C 1C 03 E8 97 23 38 D0 74 0A 8A C2 E8 EE 22  // ......#8.t....."
    0E90: B0 02 E8 5F 05 C3 50 51 E8 C5 03 32 C0 E8 54 05  // ..._..PQ...2..T.
    0EA0: E8 3A 03 E8 AB 00 8D 9C 40 03 E8 71 23 38 E8 74  // .:......@..q#8.t
    0EB0: 0A 8A C5 E8 C8 22 B0 02 E8 39 05 E8 BD 00 E8 D8  // ....."...9......
    0EC0: 00 75 73 E8 9E 00 8D 9C 4C 01 E8 51 23 8B C8 8B  // .us.....L..Q#...
    0ED0: D3 8D 9C 00 03 E8 46 23 3B C1 74 05 B0 02 E8 13  // ......F#;.t.....
    0EE0: 05 E8 65 0A 8D 9C 00 03 E8 51 18 8D 9C D8 02 E8  // ..e......Q......
    0EF0: 8C 22 66 C1 CE 10 8B FE 66 C1 CE 10 E8 C9 00 E8  // ."f.....f.......
    0F00: FF 00 E8 94 04 8A E9 8D 9C DC 02 32 C9 E8 B2 22  // ...........2..."
    0F10: E8 7D 04 66 25 FF 0F 00 00 E8 F9 03 80 F9 01 75  // .}.f%..........u
    0F20: 04 66 C1 E0 10 59 58 66 BA FF FF FF FF 66 33 D0  // .f...YXf.....f3.
    0F30: E8 14 FC 33 D2 C3 E8 05 00 0C 01 59 58 C3 53 66  // ...3.......YX.Sf
    0F40: 50 8D 9C D4 02 E8 D6 22 8A C4 E8 31 22 66 58 5B  // P......"...1"fX[
    0F50: C3 53 66 50 8D 9C D4 02 E8 C3 22 8A E0 E8 1E 22  // .SfP......"...."
    0F60: 66 58 5B C3 E8 CE 03 E8 91 03 8A DD E8 6D 19 8D  // fX[..........m..
    0F70: 9C 3C 03 8A E9 32 C9 E8 48 22 C3 83 EC 08 8B EC  // .<...2..H"......
    0F80: E8 B2 03 E8 75 03 E8 01 19 8A 6E 00 8D 9C 4C 03  // ....u.....n...L.
    0F90: 32 C9 E8 2D 22 83 C4 08 C3 33 C9 56 E8 23 03 0B  // 2..-"....3.V.#..
    0FA0: F6 5E 74 0C FE C1 E8 A8 1E 38 C1 75 EE 0C 01 C3  // .^t......8.u....
    0FB0: 8D 9C D4 02 E8 67 22 38 C8 74 0A 8A C1 E8 BE 21  // .....g"8.t.....!
    0FC0: B0 02 E8 2F 04 32 C0 C3 E8 0A 00 8D 9C D0 02 32  // .../.2.........2
    0FD0: C9 E8 EE 21 C3 8D 1D E8 44 22 66 8B D0 8D 9C 02  // ...!....D"f.....
    0FE0: 03 E8 3A 22 51 8B C8 8D 9C 06 03 E8 30 22 66 C1  // ..:"Q.......0"f.
    0FF0: E0 10 8B C1 59 66 3B C2 75 04 B5 00 EB 02 B5 02  // ....Yf;.u.......
    1000: C3 E8 6D 03 8D 9C 40 03 B1 03 E8 B5 21 E8 B2 06  // ..m...@.....!...
    1010: 8D 9C 40 03 B1 02 E8 A9 21 E8 DF 02 80 FD 00 75  // ..@.....!......u
    1020: 1D E8 94 00 66 81 FA F0 D2 00 00 75 06 66 BA 78  // ....f......u.f.x
    1030: 69 00 00 E8 B6 00 E8 EF 00 E8 AB 03 EB 38 E8 81  // i............8..
    1040: 03 E8 A3 03 66 52 E8 F7 02 0B D2 74 07 E8 84 18  // ....fR.....t....
    1050: 66 5A EB 22 E8 5E 03 E8 02 1B 66 5A 51 E8 9B 02  // fZ.".^....fZQ...
    1060: 80 FD 02 59 75 10 B5 04 66 81 FA 74 40 00 00 76  // ...Yu...f..t@..v
    1070: 05 B5 08 66 D1 EA 8D 9C 54 03 66 8B C2 E8 FE 20  // ...f....T.f.... 
    1080: 8D 9C 40 03 E8 97 21 8A E5 E8 F2 20 E8 1E 01 8D  // ..@...!.... ....
    1090: 9C 48 03 32 C9 E8 2A 21 E8 9A 02 E8 5D 02 E8 36  // .H.2..*!....]..6
    10A0: 18 8D 9C 58 03 32 C9 E8 18 21 E8 88 02 E8 4B 02  // ...X.2...!....K.
    10B0: 8D 9C 60 03 E8 EE 17 C3 53 8D 9C 29 01 E8 5E 21  // ..`.....S..)..^!
    10C0: 66 33 D2 0A C0 75 05 BA 48 3F 5B C3 8A D0 66 B8  // f3...u..H?[...f.
    10D0: 8C 0A 00 00 66 F7 E2 66 8B F8 E8 58 02 B3 00 E8  // ....f..f...X....
    10E0: 41 17 66 3B D7 76 03 66 8B D7 5B C3 B7 01 53 8D  // A.f;.v.f..[...S.
    10F0: 9C 42 03 E8 28 21 8A C8 5B 66 52 E8 83 00 E8 C1  // .B..(!..[fR.....
    1100: 02 66 3B D1 66 5A 76 09 D0 E7 E8 07 00 38 EF 72  // .f;.fZv......8.r
    1110: DD 8A EF C3 53 8D 9C 2A 01 E8 02 21 24 0F 8A E8  // ....S..*...!$...
    1120: 0A ED 75 02 B5 01 5B C3 51 83 EC 08 8B EC 66 C7  // ..u...[.Q.....f.
    1130: 46 00 48 3F 78 69 66 C7 46 04 F0 D2 00 00 E8 FF  // F.H?xif.F.......
    1140: 01 0B D2 74 03 E8 9D 17 8A FD 53 8D 9C 42 03 E8  // ...t......S..B..
    1150: CC 20 8A C8 5B E8 60 FF 66 33 C0 8B 46 00 66 3B  // . ..[.`.f3..F.f;
    1160: C2 73 19 66 8B D0 E8 18 00 E8 56 02 66 3B D1 72  // .s.f......V.f;.r
    1170: 05 83 C5 02 EB D4 66 33 D2 8B 56 00 83 C4 08 59  // ......f3..V....Y
    1180: C3 66 52 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33  // .fRR2.........f3
    1190: C9 8B C8 5A 51 66 33 C0 8B C2 8A CF 66 F7 E1 66  // ...ZQf3.....f..f
    11A0: C1 E0 03 59 66 F7 F1 66 8B C8 66 5A C3 E8 90 01  // ...Yf..f..fZ....
    11B0: 0B D2 74 0B E8 16 00 0A ED 75 11 E8 BA 16 C3 B5  // ..t......u......
    11C0: 00 E8 F1 01 E8 61 19 75 03 E8 01 00 C3 B5 00 8D  // .....a.u........
    11D0: 9C 31 01 E8 48 20 A8 01 74 02 B5 01 C3 53 E8 5F  // .1..H ..t....S._
    11E0: 01 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8 2F 20 8A  // .f....M....../ .
    11F0: E8 E8 61 16 8A EB 5B C3 57 53 53 E8 DF FF E8 34  // ..a...[.WSS....4
    1200: 01 5B E8 A4 16 74 49 80 FD 00 75 24 53 E8 A8 FE  // .[...tI...u$S...
    1210: E8 AF 04 8A CD E8 FC FE 8A FD E8 64 FF 5B E8 FD  // ...........d.[..
    1220: 1F 66 25 FF FF 00 00 66 3B C8 73 21 32 DB EB 20  // .f%....f;.s!2.. 
    1230: 80 FD 02 75 18 53 E8 7C 01 E8 FD 18 5B 74 0E 8D  // ...u.S.|....[t..
    1240: 1D E8 DA 1F 3D 74 40 76 04 32 DB EB 03 80 CB 01  // ....=t@v.2......
    1250: 5B 5F C3 53 E8 39 01 8B D8 E8 DC F8 85 C3 5B C3  // [_.S.9........[.
    1260: 53 8B F0 E8 CA 1A 23 F0 74 07 8B C6 E8 6B 19 8B  // S.....#.t....k..
    1270: F3 5B C3 E8 08 00 74 05 E8 D8 FF 74 F6 C3 33 C0  // .[....t....t..3.
    1280: 0B F6 74 03 E8 09 01 33 F6 E8 08 00 74 03 E8 CF  // ..t....3....t...
    1290: FF 0B F6 C3 57 53 E8 E2 1A 0B C0 74 09 8B 1D 83  // ....WS.....t....
    12A0: C7 02 3B C3 75 F7 8B 1D 83 FB FF 74 0E 83 C7 02  // ..;.u......t....
    12B0: E8 7D 1A 85 D8 74 EF 8B C3 EB 02 33 C0 0B C0 5B  // .}...t.....3...[
    12C0: 5F C3 51 33 F6 8A E9 E8 A9 FF 74 07 E8 46 00 38  // _.Q3......t..F.8
    12D0: E9 75 F4 0B F6 59 C3 33 C0 E8 B8 FF 74 13 E8 7F  // .u...Y.3....t...
    12E0: FF 8B DE B9 FB 00 E8 7A 1B 83 C6 08 E8 C4 19 EB  // .......z........
    12F0: E8 BB F0 16 B8 5A A5 E8 9C 1E C3 53 66 50 8D 9C  // .....Z.....SfP..
    1300: 40 03 E8 19 1F 8A E8 66 58 5B C3 8D 9C 64 03 E8  // @......fX[...d..
    1310: 0C 1F 0B C0 C3 53 66 50 8D 9C D4 02 E8 FF 1E 8A  // .....SfP........
    1320: C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8 EF 1E 8A  // .fX[.SfP........
    1330: C8 66 58 5B C3 53 8D 5C 14 E8 E2 1E 8B D0 5B C3  // .fX[.S.\......[.
    1340: 53 66 50 8D 5C 16 E8 D5 1E 8B D0 66 58 5B C3 53  // SfP.\......fX[.S
    1350: 66 50 8D 9C 50 03 E8 C5 1E 66 8B D0 66 58 5B C3  // fP..P....f..fX[.
    1360: 53 66 50 8D 9C 54 03 E8 B4 1E 66 8B D0 66 58 5B  // SfP..T....f..fX[
    1370: C3 53 66 50 8D 5C 10 E8 A4 1E 8B C8 66 58 5B C3  // .SfP.\......fX[.
    1380: 66 50 53 8D 9C 41 03 E8 94 1E 5B 8A D8 66 58 C3  // fPS..A....[..fX.
    1390: 53 8D 5C 08 E8 87 1E 5B C3 53 50 8D 9C 4C 03 E8  // S.\....[.SP..L..
    13A0: 7C 1E 8A C8 58 5B C3 53 50 8D 9C 4D 03 E8 6E 1E  // |...X[.SP..M..n.
    13B0: 8A C8 58 5B C3 53 50 8D 5C 0C E8 61 1E 8B D0 58  // ..X[.SP.\..a...X
    13C0: 5B C3 53 66 50 8D 9C 00 03 E8 52 1E 66 33 D2 8B  // [.SfP.....R.f3..
    13D0: D0 66 58 5B C3 8D 5C 04 E8 43 1E C3 51 8D 5C 04  // .fX[..\..C..Q.\.
    13E0: 32 C9 E8 DD 1D 59 C3 8D 9C 50 03 E8 30 1E 8B C2  // 2....Y...P..0...
    13F0: E8 8B 1D C3 53 51 8A E8 E8 DA FF 24 FD 0A E8 E8  // ....SQ.....$....
    1400: DA FF 59 5B C3 66 50 8D 9C D8 02 E8 10 1E 66 8B  // ..Y[.fP.......f.
    1410: D0 66 58 C3 53 66 50 66 51 66 8B C8 BB 00 00 E8  // .fX.SfPfQf......
    1420: 88 17 66 23 C2 66 0B C1 E8 89 17 66 59 66 58 5B  // ..f#.f.....fYfX[
    1430: C3 BB 00 00 E8 73 17 66 25 03 03 FF 00 C3 57 0B  // .....s.f%.....W.
    1440: C0 75 10 33 F6 E8 36 FE 74 26 E8 25 00 A8 04 74  // .u.3..6.t&.%...t
    1450: F4 EB 13 8B C8 E8 D8 18 23 C1 74 14 E8 01 FE E8  // ........#.t.....
    1460: 10 00 A8 04 74 0A 5F 8D 5C 28 E8 2D 05 0B F6 C3  // ....t._.\(.-....
    1470: 5F C3 E8 FC FE 0A C9 74 72 E8 39 FF E8 B6 16 74  // _......tr.9....t
    1480: 30 0A ED 74 10 8A CD B5 02 E8 A2 19 B1 02 8D 9C  // 0..t............
    1490: 48 01 E8 2D 1D E8 34 02 A8 04 74 15 8D 5C 28 E8  // H..-..4...t..\(.
    14A0: 56 00 74 0D E8 0E FF E8 82 16 74 3F 80 FD 02 74  // V.t.......t?...t
    14B0: 3A 8D 5C 28 E8 38 00 E8 22 0B 33 C9 50 8D 9C 28  // :.\(.8..".3.P..(
    14C0: 01 E8 5A 1D 66 0B C0 74 03 B9 00 08 58 0A C0 75  // ..Z.f..t....X..u
    14D0: 13 8D 5C 28 E8 3F 00 75 0B 80 CD 02 E8 19 00 74  // ..\(.?.u.......t
    14E0: 03 80 CD 04 8D 9C 48 01 E8 D7 1C E8 DE 01 C3 51  // ......H........Q
    14F0: B9 49 00 E8 6D 19 59 C3 51 E8 1A 00 75 14 E8 9C  // .I..m.Y.Q...u...
    1500: 01 3C 01 75 0D B9 20 00 E8 27 00 75 05 80 C9 01  // .<.u.. ..'.u....
    1510: EB 02 33 C9 59 C3 53 E8 04 1D 66 3D 00 FF FF FF  // ..3.Y.S...f=....
    1520: 75 0E 83 C3 04 E8 F6 1C 66 3D FF FF FF 00 75 00  // u.......f=....u.
    1530: 5B C3 50 52 32 D2 E8 E5 1C 02 D0 02 D4 66 C1 E8  // [.PR2........f..
    1540: 10 02 D0 02 D4 83 C3 04 E2 EC 0A D2 5A 58 C3 8D  // ............ZX..
    1550: 9C 4C 01 E8 1F 01 E8 73 01 B5 13 A8 08 75 0C E8  // .L.....s.....u..
    1560: 53 FE 8A EA 80 FD 13 75 02 B5 03 8D 9C B8 02 66  // S......u.......f
    1570: 33 C0 8A C5 E8 07 1C E8 16 FE A9 11 00 74 37 B5  // 3............t7.
    1580: 01 E8 22 01 E8 45 01 A8 04 75 17 55 BD 00 00 B8  // .."..E...u.U....
    1590: 61 40 E8 F0 02 B8 45 40 E8 EA 02 5D B5 02 E8 8A  // a@....E@...]....
    15A0: 00 C3 E8 2F 01 B5 02 8D 5C 28 E8 DD 00 75 02 B5  // .../....\(...u..
    15B0: 01 E8 77 00 EB 67 A9 C8 0E 74 3E E8 0E 01 A8 08  // ..w..g...t>.....
    15C0: 74 08 8D 5C 28 E8 B4 00 74 B5 B5 02 E8 D7 00 E8  // t..\(...t.......
    15D0: FA 00 A8 04 74 0B 8D 5C 28 E8 F8 00 E8 F8 02 EB  // ....t..\(.......
    15E0: 0A 8D 9C 68 01 B8 3C 6A E8 60 05 E8 D4 00 80 FD  // ...h..<j.`......
    15F0: 00 75 37 B5 02 E8 C0 00 C3 A9 22 00 74 2C B5 04  // .u7.......".t,..
    1600: E8 A3 00 8D 9C 68 01 56 E8 DF 19 8B F7 E8 58 03  // .....h.V......X.
    1610: 5E E8 87 19 E8 A1 00 8D 5C 28 E8 AD 19 8D 9C 68  // ^.......\(.....h
    1620: 01 E8 4F 03 66 8B D1 E8 C2 07 C3 8D 9C B4 02 B1  // ..O.f...........
    1630: 02 E8 8E 1B B5 02 E8 7F 00 C3 8D 9C 4C 01 E8 34  // ............L..4
    1640: 00 E8 88 00 A8 04 74 23 8D 5C 28 E8 86 00 E8 99  // ......t#.\(.....
    1650: 19 8D 9C 68 01 06 0E 07 B9 07 00 E8 3F 18 07 E8  // ...h........?...
    1660: 60 00 E8 50 FD 8D 5C 28 E8 8A 19 8D 5C 28 E8 39  // `..P..\(....\(.9
    1670: 19 E8 DB FE C3 B9 61 00 E8 E8 17 C3 53 81 C3 05  // ......a.....S...
    1680: 01 E8 9A 1B 24 06 3C 02 5B C3 E8 10 00 3D 01 04  // ....$.<.[....=..
    1690: 75 0A 53 83 C3 18 E8 85 1B 5B A8 01 C3 53 83 C3  // u.S......[...S..
    16A0: 12 E8 7A 1B 5B C3 8D 9C B4 02 32 C9 E8 13 1B C3  // ..z.[.....2.....
    16B0: 8D 9C B4 02 E8 67 1B C3 8D 9C B4 02 B1 01 E8 01  // .....g..........
    16C0: 1B C3 8D 9C B4 02 B1 01 E8 0F 1B C3 8D 9C 48 01  // ..............H.
    16D0: E8 4B 1B C3 55 57 51 B9 08 00 BD 00 00 BB 08 00  // .K..UWQ.........
    16E0: 2B D9 D1 E3 8D 58 4E E8 34 1B E8 98 01 E2 EE 8D  // +....XN.4.......
    16F0: 5C 4B E8 29 1B B9 04 00 8B D0 BF F9 16 85 55 06  // \K.)..........U.
    1700: 74 17 66 8B 05 8D 9A F4 01 E8 72 1A 8B 45 04 8D  // t.f.......r..E..
    1710: 9A F8 01 E8 80 1A 83 C5 08 83 C7 08 E2 DF 8D 7C  // ...............|
    1720: 5E B9 04 00 33 ED 8B DF E8 F3 1A 0B C0 74 09 E8  // ^...3........t..
    1730: 12 01 E8 4C 00 83 C5 1C 83 C7 12 E2 E9 32 ED E8  // ...L.........2..
    1740: 76 FF 8D 5C 28 E8 55 FF 3D 01 04 75 10 83 C3 14  // v..\(.U.=..u....
    1750: E8 CB 1A 24 70 C0 E8 04 8A E8 E8 5B FF 59 5F 5D  // ...$p......[.Y_]
    1760: C3 20 03 58 02 3C 00 01 00 00 04 00 03 3C 00 00  // . .X.<.......<..
    1770: 08 00 05 00 04 4B 00 00 01 80 02 E0 01 3C 00 20  // .....K.......<. 
    1780: 00 51 8D 1D E8 97 1A 8D 9A 68 01 E8 08 1A 8D 5D  // .Q.......h.....]
    1790: 02 E8 8A 1A 8D 9A 6A 01 E8 89 00 8D 5D 05 E8 7D  // ......j.....]..}
    17A0: 1A 8D 9A 6E 01 E8 7C 00 8D 5D 08 E8 70 1A 8B C8  // ...n..|..]..p...
    17B0: 8A DC 66 C1 C8 10 8A D0 80 E2 0F 8A F0 C0 EE 04  // ..f.............
    17C0: 8A EC C0 E5 06 8A FC C0 E7 04 80 E7 03 80 E4 0F  // ................
    17D0: C0 E4 04 0A D4 80 E2 3F 80 E4 C0 C0 EC 02 0A F4  // .......?........
    17E0: 8B C3 8D 9A 74 01 E8 AD 19 8D 9A 72 01 8B C1 E8  // ....t......r....
    17F0: A4 19 8D 9A 76 01 33 C0 8A C6 E8 99 19 8D 9A 78  // ....v.3........x
    1800: 01 33 C0 8A C2 E8 8E 19 8D 5D 0C E8 10 1A 8D 9A  // .3.......]......
    1810: 7A 01 E8 0F 00 8D 5D 0F E8 03 1A 8D 9A 7E 01 E8  // z.....]......~..
    1820: 74 19 59 C3 8B C8 8A D4 66 C1 C8 10 8A F0 80 E6  // t.Y.....f.......
    1830: 0F 8A E8 C0 ED 04 8B C1 E8 5B 19 83 C3 02 8B C2  // .........[......
    1840: E8 53 19 C3 8D 5D 11 E8 D4 19 8A E0 BA 06 02 C0  // .S...]..........
    1850: E8 07 74 03 80 CA 80 8A C4 C0 E8 03 24 03 3C 02  // ..t.........$.<.
    1860: 75 03 80 CA 40 3C 03 75 12 8A C4 D0 E8 A8 01 74  // u...@<.u.......t
    1870: 03 80 E2 FD A8 02 74 03 80 E2 FB 8B C2 8D 9A 80  // ......t.........
    1880: 01 E8 12 19 C3 3C 01 74 3D 8B D0 0F B6 C6 24 3F  // .....<.t=.....$?
    1890: 04 3C 8D 9A F8 01 E8 FD 18 0F B6 C2 83 C0 1F C1  // .<..............
    18A0: E0 03 8D 9A F4 01 E8 ED 18 0F B6 DE C1 EB 06 C1  // ................
    18B0: E3 02 2E F7 A7 61 18 2E F7 B7 5F 18 8D 9A F6 01  // .....a...._.....
    18C0: E8 D3 18 83 C5 08 C3 01 00 01 00 04 00 03 00 05  // ................
    18D0: 00 04 00 10 00 09 00 57 8D 9C 68 01 8B FB 8B DF  // .......W..h.....
    18E0: E8 90 00 0B C9 74 44 8D 5D 18 E8 31 19 A8 80 74  // .....tD.]..1...t
    18F0: 0D 8B DF 56 8D 36 C5 18 E8 6D 00 5E EB 28 66 8B  // ...V.6...m.^.(f.
    1900: D1 E8 E8 04 8D 9C A6 00 E8 13 19 3C 01 75 17 66  // ...........<.u.f
    1910: 81 F9 80 07 38 04 74 09 66 81 F9 00 05 D0 02 75  // ....8.t.f......u
    1920: 05 B5 03 E8 80 FD 83 C7 1C EB B3 5F C3 8C 0A D0  // ..........._....
    1930: 02 8A 00 E0 01 2D 00 10 00 3E 00 09 00 06 00 00  // .....-...>......
    1940: 00 00 00 00 00 06 00 00 00 50 53 51 B9 07 00 53  // .........PSQ...S
    1950: 8B DA E8 C9 18 83 F8 00 5B 74 09 66 C1 E3 10 8B  // ........[t.f....
    1960: DA E8 14 15 59 5B 58 C3 51 53 B9 07 00 E8 21 15  // ....Y[X.QS....!.
    1970: 5B 59 C3 66 50 53 83 C3 06 E8 A2 18 5B 8B C8 66  // [Y.fPS......[..f
    1980: C1 E1 10 53 83 C3 02 E8 94 18 8B C8 5B 66 58 C3  // ...S........[fX.
    1990: 8D 9C 48 01 32 C9 E8 29 18 C3 57 B9 20 00 E8 FC  // ..H.2..)..W. ...
    19A0: 14 5F C3 E8 0A FD 3C 01 75 57 8D 9C B6 02 E8 6D  // ._....<.uW.....m
    19B0: 18 A8 02 74 71 66 C1 CE 10 E8 F5 03 66 C1 CE 10  // ...tqf......f...
    19C0: 0A C0 75 0E 8D 9C 4C 01 B8 3C 6A E8 7D 01 0C 01  // ..u...L..<j.}...
    19D0: EB 7A 8D 9C 68 01 B0 00 E8 36 01 75 07 B0 00 E8  // .z..h....6.u....
    19E0: DF 00 74 68 8D 9C 68 01 B0 01 E8 24 01 75 52 B0  // ..th..h....$.uR.
    19F0: 01 E8 B0 00 75 56 B0 00 E8 A9 00 EB 4F 0B F6 EB  // ....uV......O...
    1A00: 4B 3C 04 74 21 3C 03 74 1D 66 C1 CE 10 E8 A1 03  // K<.t!<.t.f......
    1A10: 66 C1 CE 10 0A C0 74 07 B0 01 E8 A4 00 75 2D B0  // f.....t......u-.
    1A20: 00 E8 9D 00 75 26 8D BC 68 01 8D 1D E8 EF 17 0B  // ....u&..h.......
    1A30: C0 74 19 8B DF B0 00 E8 D7 00 75 05 83 C7 1C EB  // .t........u.....
    1A40: E9 8B D3 8D 9C 4C 01 E8 FF FE 0B F6 C3 57 53 51  // .....L.......WSQ
    1A50: E8 46 13 3B 55 02 75 18 66 C1 CA 10 8B DA 66 C1  // .F.;U.u.f.....f.
    1A60: CA 10 3B 5D 06 75 09 0A C0 74 0E 3A 45 1B 74 09  // ..;].u...t.:E.t.
    1A70: 83 C7 1C E2 DE 33 D2 EB 02 8B D7 0B D2 59 5B 5F  // .....3.......Y[_
    1A80: C3 51 66 52 E8 12 13 3A 65 1A 75 09 0A C0 74 0E  // .QfR...:e.u...t.
    1A90: 3A 45 1B 74 09 83 C7 1C E2 ED 33 FF EB 00 0B FF  // :E.t......3.....
    1AA0: 66 5A 59 C3 51 E8 F1 12 56 8D 9C 4C 01 8B F7 E8  // fZY.Q...V..L....
    1AB0: B6 FE 5E E8 5B 00 75 07 83 C7 1C E2 EB 33 FF 59  // ..^.[.u......3.Y
    1AC0: C3 8D BC F4 01 8A C8 8D 1D E8 52 17 0B C0 74 40  // ..........R...t@
    1AD0: 66 50 E8 DB FB 3C 01 66 58 74 05 3D 40 06 73 2B  // fP...<.fXt.=@.s+
    1AE0: 66 8B D0 8D 5D 04 E8 35 17 E8 61 FF 74 1D 8D 9C  // f...]..5..a.t...
    1AF0: 4C 01 56 8B F2 E8 70 FE 5E 53 8D 9C 62 01 33 C0  // L.V...p.^S..b.3.
    1B00: E8 93 16 5B 8A C1 E8 08 00 75 05 83 C7 08 EB B7  // ...[.....u......
    1B10: C3 66 51 50 53 66 C1 CE 10 8B DE 66 C1 CE 10 E8  // .fQPSf.....f....
    1B20: FC 16 5B 66 8B D0 E8 4A FE 58 3C 01 75 0A 66 3B  // ..[f...J.X<.u.f;
    1B30: CA 75 13 E8 C2 F6 75 10 3B CA 72 0A 66 3B CA 72  // .u....u.;.r.f;.r
    1B40: 05 E8 B4 F6 75 02 32 C0 66 59 C3 56 57 E8 31 FF  // ....u.2.fY.VW.1.
    1B50: 8B F7 E8 13 FE 5F 5E C3 66 50 53 66 51 52 57 56  // ....._^.fPSfQRWV
    1B60: 51 8B DE B9 08 00 E8 FA 12 59 8D 5C 08 8B C1 66  // Q........Y.\...f
    1B70: C1 E0 10 8A C2 E8 06 16 F6 C2 03 75 24 8B C1 24  // ...........u$..$
    1B80: 7F BF 3B 1C 80 3D FF 0F 84 0F 01 3A 05 75 0D 66  // ..;..=.....:.u.f
    1B90: 8B 45 01 66 B9 00 05 02 00 E9 96 00 83 C7 05 EB  // .E.f............
    1BA0: E3 F6 C2 01 74 25 8B C1 E8 61 01 0F 84 EB 00 33  // ....t%...a.....3
    1BB0: C9 8A CC 8A D0 0A C0 75 12 8D 5C 08 66 25 FF FF  // .......u..\.f%..
    1BC0: 00 00 66 C1 E0 08 E8 B5 15 EB B2 8A E1 8A CA 80  // ..f.............
    1BD0: E1 0C C0 E9 02 80 E2 F0 C0 EA 04 8A EA 80 FC 70  // ...............p
    1BE0: 72 2A 80 FC 75 73 25 80 EC 70 8A C4 32 E4 50 E8  // r*..us%..p..2.P.
    1BF0: 23 02 8B D8 58 38 D8 72 05 33 C0 E9 9C 00 E8 1B  // #...X8.r.3......
    1C00: 02 E8 1A 16 0B C0 0F 84 90 00 EB 1B 32 C0 E8 70  // ............2..p
    1C10: FE 0F 84 85 00 8D 5C 16 8B 05 E8 79 15 8B 45 06  // ......\....y..E.
    1C20: 66 C1 E0 10 8B 45 02 50 E8 02 0B 66 C1 E1 10 8B  // f....E.P...f....
    1C30: C8 58 8D 1C E8 47 15 66 50 8D 5C 04 66 8B C1 E8  // .X...G.fP.\.f...
    1C40: 3C 15 66 58 66 C1 E8 10 66 81 E1 FF FF 00 00 66  // <.fXf...f......f
    1C50: F7 E1 66 50 8D 5C 06 E8 C4 15 8B C8 66 58 66 D3  // ..fP.\......fXf.
    1C60: E0 66 C1 E8 10 40 8D 5C 14 E8 2A 15 BF 8C 1C 83  // .f...@.\..*.....
    1C70: F9 01 74 11 BF 94 1C 81 F9 01 01 74 08 BF 9C 1C  // ..t........t....
    1C80: 83 F9 02 75 15 8D 5C 0C 66 8B 05 E8 F0 14 8D 5C  // ...u..\.f......\
    1C90: 10 66 8B 45 04 E8 E6 14 0B DB 5E 5F 5A 66 59 5B  // .f.E......^_ZfY[
    1CA0: 66 58 C3 00 40 01 90 01 01 40 01 90 01 02 80 02  // fX..@....@......
    1CB0: 90 01 03 80 02 90 01 04 40 01 90 01 05 40 01 90  // ........@....@..
    1CC0: 01 06 80 02 90 01 07 D0 02 5E 01 0D 40 01 90 01  // .........^..@...
    1CD0: 0E 80 02 90 01 0F 80 02 5E 01 10 80 02 5E 01 11  // ........^....^..
    1CE0: 80 02 E0 01 12 80 02 E0 01 13 80 02 90 01 62 80  // ..............b.
    1CF0: 02 E0 01 FF 05 0A 05 05 05 00 00 00 05 0B 06 05  // ................
    1D00: 05 00 00 00 08 10 08 08 08 00 00 00 56 E8 79 12  // ............V.y.
    1D10: 80 E4 01 3B 04 74 09 83 C6 04 E2 F7 33 C0 EB 05  // ...;.t......3...
    1D20: 8B 44 02 0B C0 5E C3 57 53 50 E8 5C 12 83 E9 0F  // .D...^.WSP.\....
    1D30: E8 E2 00 83 F8 05 76 03 B8 05 00 03 C8 D1 E0 03  // ......v.........
    1D40: C8 FB A5 83 C6 02 E2 FA B8 FF FF AB 58 5B 5F C3  // ............X[_.
    1D50: 66 53 51 66 52 E8 41 00 E8 77 00 66 C1 E8 10 66  // fSQfR.A..w.f...f
    1D60: 0F B7 D8 66 B8 00 00 00 03 66 D3 E8 66 33 D2 66  // ...f.....f..f3.f
    1D70: F7 F3 E8 B8 09 66 5A 59 66 5B C3 53 66 50 BB 07  // .....fZYf[.SfP..
    1D80: 00 E8 26 0E 0A C0 66 58 5B C3 53 66 50 BB 07 00  // ..&...fX[.SfP...
    1D90: E8 17 0E A8 01 66 58 5B C3 53 66 50 8D 5C 06 E8  // .....fX[.SfP.\..
    1DA0: 7C 14 8A C8 66 58 5B C3 51 B9 08 00 E8 C9 10 59  // |...fX[.Q......Y
    1DB0: C3 53 8D 5C 08 E8 66 14 24 03 5B C3 8D 5C 09 E8  // .S.\..f.$.[..\..
    1DC0: 5C 14 C3 51 53 B1 01 8A E8 8D 5C 08 E8 F3 13 5B  // \..QS.....\....[
    1DD0: 59 C3 53 8D 1C E8 46 14 5B C3 53 8D 5C 04 E8 3D  // Y.S...F.[.S.\..=
    1DE0: 14 5B C3 53 8D 5C 16 E8 34 14 5B C3 53 66 52 33  // .[.S.\..4.[.SfR3
    1DF0: C0 E8 59 FC 66 5A 75 1B E8 34 00 74 16 E8 15 00  // ..Y.fZu..4.t....
    1E00: 40 83 F8 05 73 0D E8 75 13 48 E8 0F 00 66 8B C2  // @...s..u.H...f..
    1E10: E8 6B 13 5B C3 BB 00 1E E8 03 14 C3 BB 08 1E C1  // .k.[............
    1E20: E0 03 03 D8 C3 BB 00 1E B9 32 00 E8 35 10 C3 51  // .........2..5..Q
    1E30: E8 E2 FF 0B C0 74 12 8B C8 BB 08 1E E8 DF 13 66  // .....t.........f
    1E40: 3B C2 74 07 83 C3 08 E2 F3 0B DB 59 C3 C3 C3 00  // ;.t........Y....
    1E50: BB 20 DF E8 69 35 E8 BC F4 B5 01 E8 2B 07 C3 BB  // . ..i5......+...
    1E60: 00 DF E8 5A 35 E8 AD F4 B5 00 E8 1C 07 C3 80 F9  // ...Z5...........
    1E70: 00 75 0A E8 E1 0F 8A C8 B5 02 E8 E5 08 0B F6 74  // .u.............t
    1E80: 29 E8 91 F4 B5 01 E8 14 07 56 33 F6 B5 00 E8 5D  // )........V3....]
    1E90: 06 5E B5 01 E8 02 F5 E8 C8 08 E8 85 09 E8 75 F4  // .^............u.
    1EA0: 8D 9C 00 03 E8 FD 06 E8 46 07 66 C1 CE 10 B5 01  // ........F.f.....
    1EB0: E8 3B 06 E8 06 FF A8 40 75 07 32 C0 B5 01 E8 4B  // .;.....@u.2....K
    1EC0: 08 66 C1 CE 10 C3 E8 4C F4 B5 01 E8 96 06 B5 00  // .f.....L........
    1ED0: E8 CA 06 E8 2D 07 B1 0F E8 16 0A B1 10 E8 11 0A  // ....-...........
    1EE0: E8 2B 00 C3 E8 7A 00 E8 3B F4 B5 00 E8 75 06 B5  // .+...z..;....u..
    1EF0: 00 E8 A9 06 E8 B0 F4 E8 5D 0F 38 C1 74 0F 80 F9  // ........].8.t...
    1F00: 08 72 05 80 F9 0B 76 05 B5 03 E8 55 08 C3 53 66  // .r....v....U..Sf
    1F10: 50 BB 02 00 E8 93 0C 66 A9 00 00 01 00 66 58 5B  // P......f.....fX[
    1F20: 75 3E E8 1B F4 0B D2 74 0C E8 A9 F4 3C 01 74 05  // u>.....t....<.t.
    1F30: B1 0F E8 FA 09 B1 0C E8 75 00 B1 01 E8 28 0A E8  // ........u....(..
    1F40: B9 F3 80 FD 00 75 0D E8 E6 01 B1 0D E8 A2 09 B1  // .....u..........
    1F50: 03 E8 5B 00 E8 E9 F3 0B D2 74 05 B1 01 E8 CF 09  // ..[......t......
    1F60: C3 E8 DC F3 0B D2 74 05 B1 00 E8 C2 09 B1 02 E8  // ......t.........
    1F70: 3D 00 E8 60 F4 A8 01 74 0D E8 7F F3 80 FD 00 75  // =..`...t.......u
    1F80: 05 B0 02 E8 12 04 B1 00 E8 DC 09 B1 0D E8 1F 00  // ................
    1F90: C3 B1 07 E8 D1 09 E8 A7 F3 0B D2 75 0C E8 15 F4  // ...........u....
    1FA0: E8 85 0B 75 09 E8 6D 0A C3 B1 07 E8 81 09 C3 E8  // ...u..m.........
    1FB0: 03 F4 E8 73 0B 75 24 51 E8 AC 09 59 80 F9 0C 75  // ...s.u$Q...Y...u
    1FC0: 1A 33 D2 56 83 C6 08 E8 9C 0B 5E 0A C0 75 0C B9  // .3.V......^..u..
    1FD0: 0A 00 E8 DF 0E 42 83 FA 1E 75 E8 C3 56 83 C6 08  // .....B...u..V...
    1FE0: E8 24 0B 5E E8 59 F3 0B D2 74 03 E8 99 08 80 FD  // .$.^.Y...t......
    1FF0: 01 0F 84 D1 00 80 FD 02 0F 85 F2 00 B1 0C E8 AE  // ................
    2000: FF 56 83 C6 08 E8 5E 0B 5E 0A C0 0F 84 DF 00 E8  // .V....^.^.......
    2010: DF 00 0A DB 0F 85 D6 00 8D 9C 35 01 E8 FF 11 A8  // ..........5.....
    2020: 01 74 03 E8 7F 03 E8 17 F3 0B D2 74 05 B1 14 E8  // .t.........t....
    2030: FD 08 66 33 C9 E8 39 F3 66 BA 50 01 40 50 66 C1  // ..f3..9.f.P.@Pf.
    2040: C9 10 8A C1 66 C1 C9 10 E8 15 0A 0F 85 9F 00 66  // ....f..........f
    2050: BA 50 01 50 4F 52 E8 E7 F2 80 FA 22 5A 74 0D 8D  // .P.POR....."Zt..
    2060: 9C 2D 01 E8 B8 11 24 06 3C 02 75 02 B6 02 8D 5C  // .-....$.<.u....\
    2070: 28 66 C1 C9 10 03 D9 66 C1 C9 10 E8 E2 09 75 6E  // (f.....f......un
    2080: 8A DF 32 FF 66 C1 C9 10 03 CB 66 C1 C9 10 66 BA  // ..2.f.....f...f.
    2090: 50 01 10 30 33 DB E8 C7 09 75 53 66 C1 C9 10 8B  // P..03....uSf....
    20A0: C1 66 C1 C9 10 0B C0 74 45 83 F8 10 75 0F 8D 5C  // .f.....tE...u..\
    20B0: 28 E8 6A 11 66 0B C0 0F 85 7D FF EB 31 3D 80 00  // (.j.f....}..1=..
    20C0: 0F 82 74 FF EB 25 E8 A8 F2 8A E9 B1 A0 BA 00 80  // ..t..%..........
    20D0: BF 32 00 8D 5C 28 E8 5C 09 80 FF 01 74 0D B1 A2  // .2..\(.\....t...
    20E0: 8D 5C 28 E8 4F 09 80 FF 01 75 03 B0 00 C3 B0 01  // .\(.O....u......
    20F0: C3 E8 2B 00 74 0C B0 01 E8 9D 02 75 21 E8 1F 00  // ..+.t......u!...
    2100: 75 1C 66 BA 0C 00 90 43 8D 9C 30 01 E8 51 09 66  // u.f....C..0..Q.f
    2110: BA 20 00 90 41 8D 9C 34 01 E8 44 09 33 DB C3 E8  // . ..A..4..D.3...
    2120: 4F F2 66 BA 00 00 90 47 8D 9C 28 01 E8 31 09 C3  // O.f....G..(..1..
    2130: E8 A2 F2 3C 01 75 0E E8 ED 02 80 FD 01 75 06 B5  // ...<.u.......u..
    2140: 02 E8 12 03 C3 8D 9C AC 03 B9 10 00 E8 14 0D B0  // ................
    2150: 01 E8 44 02 74 08 B5 04 E8 11 03 E9 19 01 B1 08  // ..D.t...........
    2160: E8 8E 07 E8 66 02 B1 09 E8 86 07 E8 AC 01 8D 9C  // ....f...........
    2170: B8 03 66 33 C0 E8 06 10 E8 47 01 B9 90 01 E8 28  // ..f3.....G.....(
    2180: 0D B0 01 E8 F7 01 B5 02 E8 D5 02 E8 5B 01 E8 E7  // ............[...
    2190: 02 E8 C7 01 B5 03 E8 C7 02 33 C9 E8 E7 00 F6 C5  // .........3......
    21A0: 01 75 2E B5 02 E8 B8 02 E8 07 01 F6 C5 04 74 08  // .u............t.
    21B0: B5 01 E8 B7 02 E9 BF 00 8A FD 80 E7 03 E8 CF 00  // ................
    21C0: 80 E3 03 38 FB 75 07 E8 33 01 0F 84 A9 00 E8 54  // ...8.u..3......T
    21D0: 01 FE C1 E8 AA F1 38 D9 75 C1 8D 9C AC 03 E8 3D  // ......8.u......=
    21E0: 10 3C 03 74 05 E8 DA 00 EB A1 8D 9C B0 03 66 33  // .<.t..........f3
    21F0: C0 E8 8A 0F 8D 9C 2A 01 E8 23 10 A8 40 74 0C B1  // ......*..#..@t..
    2200: 13 E8 ED 06 B0 03 E8 74 01 EB 0A B1 0A E8 E1 06  // .......t........
    2210: B0 02 E8 68 01 B5 04 E8 46 02 E8 CC 00 E8 58 02  // ...h....F.....X.
    2220: E8 38 01 B5 05 E8 38 02 33 C9 E8 58 00 80 FD 07  // .8....8.3..X....
    2230: 75 05 E8 73 00 75 27 51 B5 04 E8 23 02 59 F6 C5  // u..s.u'Q...#.Y..
    2240: 01 75 07 B5 03 E8 24 02 EB 2D E8 65 00 8A D5 E8  // .u....$..-.e....
    2250: D3 00 E8 5D 00 38 EA 75 05 E8 A1 00 74 19 FE C1  // ...].8.u....t...
    2260: E8 1D F1 38 D9 75 C3 8D 9C AC 03 E8 B0 0F 3C 04  // ...8.u........<.
    2270: 75 05 E8 4D 00 EB A3 B0 00 E8 01 01 B1 0B E8 70  // u..M...........p
    2280: 06 E8 A3 01 C3 8D 9C C0 03 E8 0F 00 8A E8 C3 53  // ...............S
    2290: 8D 9C C4 03 E8 04 00 5B 8A D8 C3 51 E8 7F 0F C0  // .......[...Q....
    22A0: E1 02 D3 E8 24 0F 59 C3 8D 9C C2 03 E8 6F 0F A8  // ....$.Y......o..
    22B0: 01 C3 8D 9C B8 03 E8 21 0F C3 8D 9C B8 03 E8 01  // .......!........
    22C0: 0F C3 33 C9 33 D2 E8 E9 FF 38 D5 76 02 8A D5 FE  // ..3.3....8.v....
    22D0: C1 E8 AC F0 38 D9 72 EE 33 C9 8A EA 8D 9C 5C 03  // ....8.r.3.....\.
    22E0: E8 DF 0E B1 0B E8 7F 06 C3 E8 85 F0 8D 9C B8 03  // ................
    22F0: E8 2B 0F 66 BA 03 01 80 83 E8 64 07 C3 51 53 8D  // .+.f......d..QS.
    2300: 9C B0 03 E8 D4 0E FE C5 E8 B7 0E 80 FD 06 72 07  // ..............r.
    2310: B5 02 E8 57 01 33 C9 5B 59 C3 66 33 C0 8D 9C B0  // ...W.3.[Y.f3....
    2320: 03 E8 5A 0E C3 32 ED E8 65 FF 80 E3 0C C0 EB 02  // ..Z..2..e.......
    2330: B7 03 2A FB C0 E3 03 8A EB 80 FB 18 72 03 80 CD  // ..*.........r...
    2340: 20 E8 4B FF 80 E3 03 38 FB 72 02 8A DF 80 FB 03  //  .K....8.r......
    2350: 75 03 80 CD 04 0A EB E8 60 FF C3 E8 13 F0 8D 9C  // u.......`.......
    2360: C0 03 66 BA 02 02 90 45 E8 F5 06 C3 E8 02 F0 66  // ..f....E.......f
    2370: BA 00 01 90 42 8D 9C B4 03 E8 E4 06 C3 E8 F1 EF  // ....B...........
    2380: 66 BA 02 01 80 50 E8 D7 06 C3 E8 D3 EF 8B C2 66  // f....P.........f
    2390: 33 D2 B9 8C 0A F7 F1 C3 E8 D6 EF 66 BA 00 06 80  // 3..........f....
    23A0: 50 E8 BC 06 C3 E8 C9 EF 66 BA 11 01 80 50 B0 04  // P.......f....P..
    23B0: E8 AD 06 C3 E8 BA EF 66 BA 00 06 90 40 8D 9C C8  // .......f....@...
    23C0: 03 E8 9C 06 8D 9C C8 03 E8 53 0E C3 E8 BB FF E8  // .........S......
    23D0: AE EF 8A E3 80 CC 80 50 E8 96 EF 58 66 BA 00 01  // .......P...Xf...
    23E0: 80 61 E8 7B 06 33 C9 E8 21 EF 0B C0 74 02 B5 10  // .a.{.3..!...t...
    23F0: 8D 9C BC 03 E8 CB 0D 8A C5 E8 75 EF 66 BA 07 01  // ..........u.f...
    2400: 80 50 E8 5B 06 E8 AD EF E8 21 07 75 19 8D 9C 48  // .P.[.....!.u...H
    2410: 03 E8 0A 0E 0A C0 74 0E E8 56 EF 66 BA 0A 01 80  // ......t..V.f....
    2420: 50 B0 01 E8 3A 06 C3 E8 42 FF E8 2E FF E8 84 FF  // P...:...B.......
    2430: 3C 01 75 1C E8 71 FE 74 17 33 C9 E8 47 FE 80 FD  // <.u..q.t.3..G...
    2440: 07 75 0D FE C1 E8 38 EF 38 D9 75 EF B5 01 EB 02  // .u....8.8.u.....
    2450: B5 00 E8 01 00 C3 8D 9C AC 03 B1 02 E8 63 0D C3  // .............c..
    2460: 51 8D 9C AC 03 32 C9 E8 58 0D 59 C3 51 8D 9C AC  // Q....2..X.Y.Q...
    2470: 03 B1 01 E8 4C 0D 59 C3 8D 9C 32 01 E8 9F 0D 0A  // ....L.Y...2.....
    2480: C0 75 15 B9 64 00 8D 9C AC 03 E8 91 0D 3C 02 74  // .u..d........<.t
    2490: 03 B9 90 01 E8 12 0A C3 32 E4 B1 04 33 D2 F6 E1  // ........2...3...
    24A0: 8B C8 E8 0F 0A C3 51 8D 5C 14 E8 71 0D 66 C1 E0  // ......Q.\..q.f..
    24B0: 10 E8 98 01 59 C3 33 C9 E8 96 09 38 C1 73 05 B5  // ....Y.3....8.s..
    24C0: 00 E8 A7 00 B5 00 E8 9B 00 FE C1 E8 86 09 38 C1  // ..............8.
    24D0: 72 E6 B1 14 8A E9 E8 7E 09 38 C1 74 05 B5 03 E8  // r......~.8.t....
    24E0: 80 02 FE C1 E8 67 09 04 14 38 C1 76 E7 C3 83 EC  // .....g...8.v....
    24F0: 0C 8B EC 0B F6 74 29 E8 D8 F8 66 C1 C8 10 80 FD  // .....t)...f.....
    2500: 10 75 06 8D 5C 18 E8 15 0D 66 89 46 00 8D 5C 04  // .u..\....f.F..\.
    2510: E8 0B 0D 66 89 46 04 8D 5C 08 E8 01 0D 88 46 0A  // ...f.F..\.....F.
    2520: 89 4E 08 8C D0 66 C1 E0 10 8B C4 BB 2B 00 E8 7B  // .N...f......+..{
    2530: 08 83 C4 0C C3 33 DB 83 EC 08 8B EC 89 5E 00 8C  // .....3.......^..
    2540: D0 66 C1 E0 10 8B C4 BB 01 00 E8 5F 08 8B EC 8B  // .f........._....
    2550: 4E 00 8B 56 02 66 8B 46 04 83 C4 08 C3 BB 25 00  // N..V.f.F......%.
    2560: E8 0F 00 C3 BB 23 00 E8 08 00 C3 BB 0D 00 E8 01  // .....#..........
    2570: 00 C3 83 EC 04 8B EC 89 4E 00 8C D0 66 C1 E0 10  // ........N...f...
    2580: 8B C4 E8 27 08 83 C4 04 C3 BB 22 00 E8 E3 FF 80  // ...'......".....
    2590: FD 01 74 08 B5 01 BB 06 00 E8 D6 FF C3 BB 2C 00  // ..t...........,.
    25A0: E8 CF FF C3 E8 77 0C 66 A9 00 00 FF FF 74 40 83  // .....w.f.....t@.
    25B0: EC 18 8B EC 55 51 B9 04 00 83 C3 02 E8 5F 0C 66  // ....UQ......._.f
    25C0: 89 46 00 83 C5 04 83 C3 04 E2 F1 83 C3 04 E8 4D  // .F.............M
    25D0: 0C 66 C1 C8 10 66 89 46 00 59 5D 88 4E 14 8C D0  // .f...f.F.Y].N...
    25E0: 66 C1 E0 10 8B C4 BB 31 00 E8 C0 07 83 C4 18 C3  // f......1........
    25F0: E8 22 ED 8D 9C D0 02 E8 24 0C 8A E8 BB 21 00 E8  // ."......$....!..
    2600: 70 FF C3 8D 9C 3C 03 E8 14 0C 8A F8 E8 EC EC 8A  // p....<..........
    2610: DD 53 8D 9C 42 03 E8 05 0C 8A E8 5B E8 F6 EC E8  // .S..B......[....
    2620: 93 ED E8 07 05 75 02 B3 01 83 EC 04 8B EC 88 4E  // .....u.........N
    2630: 00 88 7E 01 88 5E 02 88 6E 03 8C D0 66 C1 E0 10  // ..~..^..n...f...
    2640: 8B C4 BB 2A 00 E8 64 07 83 C4 04 C3 83 EC 10 8B  // ...*..d.........
    2650: EC 66 8B C8 66 33 C0 66 89 46 04 BB 00 17 E8 1D  // .f..f3.f.F......
    2660: 0B 66 B8 00 80 20 50 66 89 46 0C 66 33 C0 66 89  // .f... Pf.F.f3.f.
    2670: 46 08 56 E8 11 07 66 8B 44 04 66 50 66 C1 E8 16  // F.V...f.D.fPf...
    2680: 88 46 08 66 58 66 C1 E0 0A 66 05 00 17 00 00 66  // .F.fXf...f.....f
    2690: 89 46 00 5E 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8  // .F.^..f......5..
    26A0: 0A 07 8B EC 66 B8 00 80 00 00 66 2B C8 66 89 46  // ....f.....f+.f.F
    26B0: 04 66 05 00 00 20 40 66 89 46 0C 66 33 C0 66 89  // .f... @f.F.f3.f.
    26C0: 46 08 66 89 46 00 8C D0 66 C1 E0 10 8B C4 BB 35  // F.f.F...f......5
    26D0: 00 E8 D8 06 8B EC 66 8B 46 0C 66 25 FF FF 1F 00  // ......f.F.f%....
    26E0: 66 01 46 04 66 3B C8 76 1F 66 2B C8 66 8B 46 04  // f.F.f;.v.f+.f.F.
    26F0: 66 3D 00 FF 01 00 76 06 66 B8 00 FF 01 00 66 3B  // f=....v.f.....f;
    2700: C8 73 AE 66 8B C1 EB A9 83 C4 10 C3 83 EC 08 8B  // .s.f............
    2710: EC 89 4E 00 66 89 56 02 89 5E 06 8C D0 66 C1 E0  // ..N.f.V..^...f..
    2720: 10 8B C4 BB 2D 00 E8 83 06 83 C4 08 C3 3D C0 7F  // ....-........=..
    2730: 76 04 B8 C0 7F C3 83 C0 3F 24 C0 C3 51 E8 DE 0A  // v.......?$..Q...
    2740: 66 33 D2 B9 0A 00 F7 F1 8B C8 E8 D1 0A 03 C1 66  // f3.............f
    2750: 25 FF FF 00 00 59 3D 10 27 73 03 B8 10 27 C3 32  // %....Y=.'s...'.2
    2760: D2 C3 80 FD 02 75 19 E8 9B EC 66 BB 00 08 00 00  // .....u....f.....
    2770: E8 8E 00 66 33 D2 66 BB 01 08 00 00 E8 82 00 C3  // ...f3.f.........
    2780: 80 FD 03 75 10 66 33 C0 8A C1 66 33 D2 66 BB FF  // ...u.f3...f3.f..
    2790: 00 00 00 EB 36 51 33 D2 E8 60 EB 8A D5 66 C1 E2  // ....6Q3..`...f..
    27A0: 10 E8 91 EB 8A F2 8A D1 66 8B C2 66 0D 00 00 00  // ........f..f....
    27B0: 80 E8 CC EB 80 FB 04 76 06 66 0D 00 00 00 08 E8  // .......v.f......
    27C0: 00 EC E8 50 EB 66 33 DB 8A D9 59 83 EC 14 8B EC  // ...P.f3...Y.....
    27D0: 66 89 46 04 66 89 5E 08 66 8B C2 66 33 D2 66 BB  // f.F.f.^.f..f3.f.
    27E0: 64 00 00 00 66 F7 E3 66 89 46 00 BB 0C 00 8C D0  // d...f..f.F......
    27F0: 66 C1 E0 10 8B C4 E8 B3 05 8B EC B3 01 83 C4 14  // f...............
    2800: C3 83 EC 10 8B EC 66 89 56 00 66 89 5E 04 BB 2E  // ......f.V.f.^...
    2810: 00 8C D0 66 C1 E0 10 8B C4 E8 90 05 B3 01 83 C4  // ...f............
    2820: 10 C3 C3 53 51 66 50 B9 A0 8C 80 FB 00 75 1C B9  // ...SQfP......u..
    2830: 90 7E E8 0E 05 83 E3 03 80 FB 03 75 0E E8 E4 05  // .~.........u....
    2840: 66 3D 50 C3 00 00 72 03 B9 F0 D2 66 33 D2 8B D1  // f=P...r....f3...
    2850: 66 58 59 5B C3 66 52 B3 00 66 F7 C2 00 00 FF FF  // fXY[.fR..f......
    2860: 75 13 80 FD 13 74 0E 80 FD 14 74 09 B3 01 80 FD  // u....t....t.....
    2870: 0E 74 02 B3 02 66 5A C3 B5 11 80 FA 23 74 07 80  // .t...fZ.....#t..
    2880: FA 22 74 02 B5 00 C3 B5 02 C3 B1 01 80 FD 00 75  // ."t............u
    2890: 06 C7 46 00 0B 01 C3 50 33 C0 E8 79 01 04 14 89  // ..F....P3..y....
    28A0: 46 00 58 C3 C3 C3 0C 01 C3 E8 72 09 66 C1 E8 10  // F.X.......r.f...
    28B0: 0B C0 74 1A 53 83 C3 06 E8 63 09 5B 3D E0 01 72  // ..t.S....c.[=..r
    28C0: 0D 53 83 C3 18 E8 56 09 5B A9 10 00 74 03 32 C0  // .S....V.[...t.2.
    28D0: C3 0C 01 C3 B5 0C C3 32 ED B5 02 C3 57 E8 01 01  // .......2....W...
    28E0: 8B 4D 06 5F C3 80 FA 22 75 05 C7 46 00 78 69 C3  // .M._..."u..F.xi.
    28F0: C3 E8 04 01 80 FD FF 74 35 83 EC 0C 8B EC 88 4E  // .......t5......N
    2900: 01 88 6E 00 80 F9 0F 75 05 E8 24 00 EB 0F 80 F9  // ..n....u..$.....
    2910: 10 75 0A 8D 9C 48 03 E8 04 09 88 46 02 8C D0 66  // .u...H.....F...f
    2920: C1 E0 10 8B C4 BB 04 00 E8 81 04 83 C4 0C C3 C3  // ................
    2930: 66 53 E8 2B EA 66 8B C2 66 33 D2 66 BB 8C 0A 00  // fS.+.f..f3.f....
    2940: 00 66 F7 F3 66 5B 8A E8 88 6E 09 8D 9C 40 03 E8  // .f..f[...n...@..
    2950: CC 08 88 46 02 88 66 03 66 C1 E8 10 88 46 08 E8  // ...F..f.f....F..
    2960: ED E9 66 89 56 04 C3 80 F9 04 74 03 E8 C6 E9 83  // ..f.V.....t.....
    2970: EC 10 8B EC 80 F9 04 75 0A 88 4E 01 32 C0 88 46  // .......u..N.2..F
    2980: 00 EB 4C E8 90 00 88 46 00 88 4E 01 E8 26 EA 88  // ..L....F..N..&..
    2990: 56 0A 80 F9 01 74 11 80 F9 0B 75 33 8D 9C 5C 03  // V....t....u3..\.
    29A0: E8 7B 08 88 46 02 EB 27 E8 C6 E9 88 6E 08 E8 9E  // .{..F..'....n...
    29B0: E9 66 89 56 04 E8 C8 E9 88 5E 03 E8 3D E9 88 6E  // .f.V.....^..=..n
    29C0: 02 51 E8 33 00 8A CD B0 01 D2 E0 59 88 46 09 8C  // .Q.3.......Y.F..
    29D0: D0 66 C1 E0 10 8B C4 BB 4C 00 E8 CF 03 83 C4 10  // .f......L.......
    29E0: C3 E8 AC 03 03 7D 04 83 3D FF 74 0B 3B 15 74 05  // .....}..=.t.;.t.
    29F0: 83 C7 0A EB F2 0B FF C3 8D 9C 3C 03 E8 1F 08 32  // ..........<....2
    2A00: ED 3C 03 74 0C 3C 09 72 09 3C 0E 77 05 2C 08 8A  // .<.t.<.r.<.w.,..
    2A10: E8 C3 B5 FF C3 C3 52 32 C0 80 EE 21 80 FA 1E 74  // ......R2...!...t
    2A20: 10 B0 02 80 FA 20 74 09 B0 04 80 FA 21 74 02 B0  // ..... t.....!t..
    2A30: 06 02 C6 5A C3 83 EC 08 8B EC 89 7E 00 89 5E 02  // ...Z.......~..^.
    2A40: 89 56 04 89 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36  // .V..N...f......6
    2A50: 00 E8 58 03 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3  // ..X....^..~.....
    2A60: 56 33 F6 66 F7 C2 00 00 80 00 75 0A 50 33 C0 8A  // V3.f......u.P3..
    2A70: C6 8B F0 32 F6 58 53 BB 04 3E E8 01 07 66 8B C2  // ...2.XS..>...f..
    2A80: BB 00 3E E8 F8 06 5B 66 F7 C2 00 00 10 00 75 02  // ..>...[f......u.
    2A90: 33 DB 8B D3 66 C1 E2 10 BA 00 3E 83 EC 08 8B EC  // 3...f.....>.....
    2AA0: 66 89 56 00 88 4E 04 8A C5 FE C8 88 46 07 C6 46  // f.V..N......F..F
    2AB0: 05 00 C6 46 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E  // ...F....f......N
    2AC0: 00 E8 E8 02 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A  // .......^..~.....
    2AD0: DB 74 32 51 B9 90 01 80 FB 20 74 05 80 FB 80 75  // .t2Q..... t....u
    2AE0: 13 B9 0A 00 8B C6 0A C0 74 0A B9 90 01 3C 01 74  // ........t....<.t
    2AF0: 03 B9 E8 03 E8 B2 03 59 8B C6 FE C4 8B F0 80 FC  // .......Y........
    2B00: 06 76 98 0A DB 5E C3 8D 5C 04 E8 11 07 8B D0 B5  // .v...^..\.......
    2B10: 02 E8 14 00 74 11 B5 01 80 FA 13 75 0A E8 61 00  // ....t......u..a.
    2B20: 80 FA 13 75 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74  // ...u...........t
    2B30: 03 80 FA 0E C3 80 FA 05 C3 80 FA 02 74 03 80 FA  // ............t...
    2B40: 04 C3 80 FA 01 74 03 80 FA 02 C3 80 FA 02 75 03  // .....t........u.
    2B50: B2 01 C3 80 FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8  // ......u.........
    2B60: FF 74 02 B5 04 C3 8D 5C 09 E8 B2 06 8A C8 0A C9  // .t.....\........
    2B70: 75 03 32 C0 C3 B5 02 E8 B4 02 8A C5 24 02 D0 E8  // u.2.........$...
    2B80: C3 8D 5C 08 E8 97 06 8A D0 B6 01 83 EC 08 8B EC  // ..\.............
    2B90: 89 56 02 8C D0 66 C1 E0 10 8B C4 BB 4F 00 E8 0B  // .V...f......O...
    2BA0: 02 8B EC 8A 56 04 83 C4 08 C3 53 81 C3 C9 05 E8  // ....V.....S.....
    2BB0: 3A 06 5B C3 53 81 C3 C9 05 E8 8B 05 5B C3 66 53  // :.[.S.......[.fS
    2BC0: 81 C3 00 10 E8 25 06 66 5B C3 57 E8 82 01 8A 45  // .....%.f[.W....E
    2BD0: 2D B4 FF F7 45 50 20 00 5F C3 50 56 0F BC D8 8D  // -...EP ._.PV....
    2BE0: 36 81 2B E8 63 03 5E 58 C3 00 20 00 24 00 00 00  // 6.+.c.^X.. .$...
    2BF0: 28 00 2C 00 30 00 34 00 38 00 00 00 3C 00 40 00  // (.,.0.4.8...<.@.
    2C00: 44 53 56 51 8B F7 B3 00 E8 30 00 0B F6 74 16 49  // DSVQ.....0...t.I
    2C10: 0B C9 75 04 33 FF EB 0D 8B DF 03 7D 02 3B F3 74  // ..u.3......}.;.t
    2C20: 04 E2 F5 33 FF 0B FF 59 5E 5B C3 0E 00 00 00 0A  // ...3...Y^[......
    2C30: 00 06 00 08 00 0C 00 0E 00 10 00 56 8D 36 C3 2B  // ...........V.6.+
    2C40: E8 06 03 E8 13 01 03 DE 8B 3F 0B FF 74 0B 03 FE  // .........?..t...
    2C50: 33 C9 8A 0D 83 C7 04 0B FF 5E C3 51 56 53 C1 EB  // 3........^.QVS..
    2C60: 0C E8 D7 FF 5B 75 04 33 FF EB 0B 3B 1D 74 07 83  // ....[u.3...;.t..
    2C70: C7 08 E2 F7 33 FF 0B FF 5E 59 C3 57 E8 DC FF 75  // ....3...^Y.W...u
    2C80: 04 33 DB 5F C3 E8 02 00 5F C3 52 51 8B 5D 04 0B  // .3._...._.RQ.]..
    2C90: DB 74 1B 56 E8 C2 00 03 DE 5E 33 C9 8A 4F 01 80  // .t.V.....^3..O..
    2CA0: 3F FF 74 08 3A 07 74 06 03 D9 EB F0 33 DB 0B DB  // ?.t.:.t.....3...
    2CB0: 59 5A C3 50 8D 1C E8 C5 04 8B D8 E8 72 00 23 C3  // YZ.P........r.#.
    2CC0: 74 6C 33 FF E8 3A FF 0B FF 74 63 39 05 75 F5 66  // tl3..:...tc9.u.f
    2CD0: 33 C0 8B 45 08 8B 4D 02 83 F9 0A 74 18 8B 4D 0A  // 3..E..M....t..M.
    2CE0: 8B D1 81 E2 00 70 80 FE 20 75 0A 66 C1 C8 10 8B  // .....p.. u.f....
    2CF0: C1 66 C1 C8 10 8D 5C 0C E8 83 04 66 33 C0 8B 45  // .f....\....f3..E
    2D00: 04 8D 5C 04 E8 77 04 33 C9 8B D8 50 B0 01 E8 6A  // ..\..w.3...P...j
    2D10: FF 58 74 0F 8A 4F 02 8B D8 B0 02 E8 5D FF 74 03  // .Xt..O......].t.
    2D20: 8A 6F 02 8D 5C 08 66 33 C0 8B C1 E8 50 04 58 C3  // .o..\.f3....P.X.
    2D30: 56 E8 25 00 8B 44 04 5E C3 56 E8 1C 00 89 44 04  // V.%..D.^.V....D.
    2D40: 5E C3 C3 8B DA B0 14 E8 31 FF 74 03 8B 5F 02 C3  // ^.......1.t.._..
    2D50: BF 46 02 8B 3D 8B 7D 0C C3 BE 46 02 8B 34 8B 74  // .F..=.}...F..4.t
    2D60: 30 C3 1E 0E 1F BF 46 02 8B 3D 8B 7D 0E 83 C7 04  // 0.....F..=.}....
    2D70: 1F C3 BE 46 02 8B 34 8B 74 10 C3 BF 46 02 8B 3D  // ...F..4.t...F..=
    2D80: 8B 7D 26 83 C7 04 C3 BE 46 02 8B 34 8B 74 1A C3  // .}&.....F..4.t..
    2D90: BF 46 02 8B 3D 8B 7D 3A C3 BF 46 02 8B 3D 8B 7D  // .F..=.}:..F..=.}
    2DA0: 0A 83 C7 04 B9 08 00 C3 E8 01 00 CB 83 EC 06 8B  // ................
    2DB0: EC 89 46 00 66 33 C0 C6 46 04 00 89 46 02 06 52  // ..F.f3..F...F..R
    2DC0: 8A D3 8B C5 E8 7F 16 5A 07 83 C4 06 C3 E8 80 FF  // .......Z........
    2DD0: F7 45 50 01 00 C3 E8 77 FF 83 4D 50 01 C3 E8 6F  // .EP....w..MP...o
    2DE0: FF 88 45 58 C3 66 53 83 EC 28 8B EC 66 89 5E 00  // ..EX.fS..(..f.^.
    2DF0: 66 89 4E 04 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8  // f.N...f.........
    2E00: AA FF 83 C4 28 66 5B E8 48 01 BB 04 00 E8 9A FD  // ....(f[.H.......
    2E10: 66 C1 E8 10 E8 C7 FF C3 E8 35 FF 66 8B 5D 08 66  // f........5.f.].f
    2E20: 8B 4D 0C C3 57 E8 28 FF 66 8B 45 28 5F C3 83 EC  // .M..W.(.f.E(_...
    2E30: 04 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38  // ....N...f......8
    2E40: 00 E8 68 FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 06  // ..h....n........
    2E50: C3 B0 02 C3 B0 06 C3 B0 08 C3 E8 F3 FE 8B 45 56  // ..............EV
    2E60: 0B C0 C3 53 66 50 66 33 C0 E8 12 03 83 C3 04 E2  // ...SfPf3........
    2E70: F8 66 58 5B C3 32 C0 C3 FC E8 A2 03 66 C1 CB 10  // .fX[.2......f...
    2E80: E8 FB 02 66 C1 CB 10 66 81 C3 04 00 04 00 E2 E9  // ...f...f........
    2E90: C3 FC 66 AD E8 E7 02 83 C3 04 E2 F6 C3 FC E8 7D  // ..f............}
    2EA0: 03 66 AB 83 C3 04 E2 F6 C3 66 50 B8 19 00 E8 10  // .f.......fP.....
    2EB0: 00 66 58 C3 66 50 B8 D4 30 D1 E1 E8 03 00 66 58  // .fX.fP..0.....fX
    2EC0: C3 52 F7 E1 8B CA E8 63 01 66 53 8B D9 66 C1 E3  // .R.....c.fS..f..
    2ED0: 10 8B D8 66 B8 04 B1 03 00 B2 00 66 EF B2 04 66  // ...f.......f...f
    2EE0: 33 C0 66 EF 66 B8 08 B1 03 00 B2 00 66 EF B2 04  // 3.f.f.......f...
    2EF0: 66 ED 33 C9 66 03 D8 73 0A 66 ED 66 A9 00 00 00  // f.3.f..s.f.f....
    2F00: 80 75 F6 66 ED 66 3B C3 73 0C 66 C1 E8 10 3B C1  // .u.f.f;.s.f...;.
    2F10: 72 04 8B C8 EB ED 66 5B 5A C3 BB 42 EC E8 CC 02  // r.....f[Z..B....
    2F20: 66 33 D2 66 BB 19 00 00 00 66 F7 F3 C3 66 50 53  // f3.f.....f...fPS
    2F30: BB 07 00 E8 74 FC 25 00 02 35 00 02 0B C0 5B 66  // ....t.%..5....[f
    2F40: 58 C3 BB 0A 15 E8 A4 02 C3 32 FF D1 E3 03 F3 8B  // X........2......
    2F50: 1C C3 E8 ED FF 66 C1 E0 0A 66 83 E8 20 E8 27 FE  // .....f...f.. .'.
    2F60: 66 89 44 04 C7 44 08 20 00 C3 56 1E 0E 1F E8 16  // f.D..D. ..V.....
    2F70: FE 66 8B 44 04 66 C1 E0 0A 1F 5E C3 C3 56 E8 F1  // .f.D.f....^..V..
    2F80: FD 8B 4C 22 8A 44 29 5E C3 BE 46 02 8B 34 8B 74  // ..L".D)^..F..4.t
    2F90: 1E 83 C6 04 B9 29 00 C3 33 FF C3 56 E8 D3 FD 8A  // .....)..3..V....
    2FA0: 6C 28 80 E5 70 C0 ED 04 5E C3 56 E8 C4 FD 53 81  // l(..p...^.V...S.
    2FB0: C3 09 01 E8 68 02 8A E8 5B 53 81 C3 00 01 E8 5D  // ....h...[S.....]
    2FC0: 02 5B 8A C5 66 89 44 3C 5E C3 56 E8 A4 FD 66 8B  // .[..f.D<^.V...f.
    2FD0: 44 3C 53 81 C3 00 01 E8 A4 01 5B 53 81 C3 08 01  // D<S.......[S....
    2FE0: B1 01 8A E8 E8 DB 01 5B 5E C3 56 E8 84 FD 8B FE  // .......[^.V.....
    2FF0: 83 C7 04 5E C3 56 E8 79 FD 8A 44 28 80 FD 00 74  // ...^.V.y..D(...t
    3000: 0E 24 8F C0 E5 04 0A C5 80 FD 20 75 02 0C 02 24  // .$........ u...$
    3010: FE 81 7C 04 34 21 76 02 0C 01 88 44 28 E8 08 FB  // ..|.4!v....D(...
    3020: 75 04 80 4C 30 01 5E C3 32 C0 C3 00 66 50 8C C8  // u..L0.^.2...fP..
    3030: 3D 00 C0 75 10 BA C3 03 EC 8A F0 0A F6 74 06 B2  // =..u.........t..
    3040: 4C 66 ED EB 17 53 2E 8B 1E 3A 02 B2 20 E8 DD 00  // Lf...S...:.. ...
    3050: A8 01 75 05 B2 14 E8 D4 00 8A F4 5B 32 D2 66 58  // ..u........[2.fX
    3060: C3 2E 8B 1E 3A 02 C3 0B C9 75 1A 4B 74 16 43 3B  // ....:....u.Kt.C;
    3070: DA 77 09 8B C8 8B C2 2B D2 F7 F3 91 F7 F3 8B DA  // .w.....+........
    3080: 8B D1 2B C9 C3 3B CA 72 1A 75 10 3B D8 77 0C 2B  // ..+..;.r.u.;.w.+
    3090: C3 8B D8 2B C9 2B D2 B8 01 00 C3 2B C9 2B DB 93  // ...+.+.....+.+..
    30A0: 87 CA C3 55 56 2B F6 8B EE 03 DB 13 C9 72 11 45  // ...UV+.......r.E
    30B0: 3B CA 72 F5 77 04 3B D8 76 EF F8 13 F6 4D 78 20  // ;.r.w.;.v....Mx 
    30C0: D1 D9 D1 DB 2B C3 1B D1 F5 72 F0 03 F6 4D 78 0C  // ....+....r...Mx.
    30D0: D1 E9 D1 DB 03 C3 13 D1 73 F1 EB DF 03 C3 13 D1  // ........s.......
    30E0: 8B D8 8B CA 8B C6 33 D2 5E 5D C3 93 50 92 0B C0  // ......3.^]..P...
    30F0: 74 02 F7 E2 91 0B C0 74 04 F7 E3 03 C8 58 F7 E3  // t......t.....X..
    3100: 03 D1 C3 52 66 50 B4 80 8A C7 66 C1 E0 10 8A E3  // ...RfP....f.....
    3110: 8A C2 24 FC BA F8 0C 66 EF 66 58 5A C3 52 BA FC  // ..$....f.fXZ.R..
    3120: 0C 66 ED 5A C3 52 BA FC 0C 66 EF 5A C3 E8 31 FF  // .f.Z.R...f.Z..1.
    3130: 9C FA E8 CE FF E8 E5 FF 9D C3 E8 24 FF 9C FA E8  // ...........$....
    3140: C1 FF E8 E0 FF 9D C3 52 66 53 66 50 E8 06 00 66  // .......RfSfP...f
    3150: 58 66 5B 5A C3 66 C1 E3 10 66 C1 EB 0E E8 CC FE  // Xf[Z.f...f......
    3160: E8 71 01 C3 66 50 66 C1 E3 10 66 C1 EB 10 E8 F9  // .q..fPf...f.....
    3170: FD 66 03 D8 66 81 CB 00 00 00 80 66 58 C3 52 66  // .f..f......fX.Rf
    3180: 53 E8 04 00 66 5B 5A C3 66 50 E8 9F FE E8 D4 FF  // S...f[Z.fP......
    3190: E8 41 01 66 58 C3 52 51 66 53 66 50 8A CB 80 E3  // .A.fX.RQfSfP....
    31A0: FC 80 E1 03 C0 E1 03 E8 82 FE E8 B7 FF E8 0B 01  // ................
    31B0: 66 D3 C8 58 50 66 D3 C0 E8 19 01 66 58 66 5B 59  // f..XPf.....fXf[Y
    31C0: 5A C3 66 50 51 C0 E1 03 E8 53 00 66 D3 C8 8A C5  // Z.fPQ....S.f....
    31D0: 66 D3 C0 E8 A8 FF 59 66 58 C3 66 50 51 C0 E1 03  // f.....YfX.fPQ...
    31E0: E8 3B 00 66 D3 C8 59 8A E8 66 58 C3 E8 5F 00 C3  // .;.f..Y..fX.._..
    31F0: E8 39 FE 66 C1 E3 10 66 C1 EB 0E E8 BD 00 C3 E8  // .9.f...f........
    3200: 2A FE 66 C1 E3 02 E8 B2 00 C3 52 66 53 E8 04 00  // *.f.......RfS...
    3210: 66 5B 5A C3 E8 15 FE E8 4A FF E8 9E 00 C3 51 66  // f[Z.....J.....Qf
    3220: 52 8A EB 8A CB 80 E1 03 C0 E1 03 80 E3 FC E8 D9  // R...............
    3230: FF 80 F9 00 74 14 66 8B D0 83 C3 04 E8 CB FF 83  // ....t.f.........
    3240: EB 04 66 92 66 0F AD D0 8A DD 66 5A 59 C3 52 66  // ..f.f.....fZY.Rf
    3250: 53 E8 9C FF 66 5B 5A C3 52 E8 A3 FF 5A C3 66 50  // S...f[Z.R...Z.fP
    3260: 55 52 66 50 8B EC 8B 56 0C 89 56 08 E8 BD FD 2E  // URfP...V..V.....
    3270: A1 91 02 B2 18 EF B2 00 66 ED 66 89 46 0A 66 58  // ........f.f.F.fX
    3280: 5A 5D C3 66 50 55 52 8B EC E8 A0 FD B2 00 66 8B  // Z].fPUR.......f.
    3290: 46 0A 66 EF 8B 56 08 89 56 0C 66 8B 46 04 66 89  // F.f..V..V.f.F.f.
    32A0: 46 08 5A 5D 66 58 66 58 C3 66 50 52 E8 7D FD B2  // F.Z]fXfX.fPR.}..
    32B0: 18 66 ED 2E A3 91 02 5A 66 58 C3 66 81 FB FF 00  // .f.....ZfX.f....
    32C0: 00 00 77 04 8A D3 EB 09 66 8B C3 B2 00 66 EF B2  // ..w.....f....f..
    32D0: 04 66 ED C3 66 81 FB FF 00 00 00 77 04 8A D3 EB  // .f..f......w....
    32E0: 0A 66 93 B2 00 66 EF 66 93 B2 04 66 EF C3 C3 C3  // .f...f.f...f....
    32F0: C3 C3 C3 C3 C3 C3 C3 C3 55 8B EC 53 51 8B F0 26  // ........U..SQ..&
    3300: 8B 5C 14 26 8B 4C 16 E8 28 00 8D 66 FC 59 5B 5D  // .\.&.L..(..f.Y[]
    3310: C3 53 51 8B F0 26 8B 5C 24 33 C9 E8 14 00 59 5B  // .SQ..&.\$3....Y[
    3320: C3 55 8B EC 53 51 8B F0 26 8B 5C 08 26 8B 4C 0A  // .U..SQ..&.\.&.L.
    3330: EB D5 52 56 57 C8 06 00 00 8B F0 89 4E FE 8C D0  // ..RVW.......N...
    3340: 8E C0 26 8B 7C 26 8A 45 01 32 E4 B9 20 00 2B C8  // ..&.|&.E.2.. .+.
    3350: B8 FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 03  // ..............M.
    3360: 32 ED 8B FA E3 06 D1 E0 D1 D7 E2 FA F7 D0 F7 D7  // 2...............
    3370: 26 21 44 1C 26 21 7C 1E 8C D0 8E C0 26 8B 7C 26  // &!D.&!|.....&.|&
    3380: 8A 4D 01 32 ED B8 20 00 2B C1 8B C8 66 C7 46 FA  // .M.2.. .+...f.F.
    3390: FF FF FF FF E3 08 D1 6E FC D1 5E FA E2 F8 8A 4D  // .......n..^....M
    33A0: 02 32 ED 8B C3 8B 56 FE E3 06 D1 EA D1 D8 E2 FA  // .2....V.........
    33B0: 23 46 FA 23 56 FC 8A 4D 03 32 ED E3 06 D1 E0 D1  // #F.#V..M.2......
    33C0: D2 E2 FA 26 09 44 1C 26 09 54 1E C9 5F 5E 5A C3  // ...&.D.&.T.._^Z.
    33D0: 55 8B EC 53 51 52 57 50 8B D8 26 8B 7F 26 8A 45  // U..SQRWP..&..&.E
    33E0: 01 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1  // .2.. .+.........
    33F0: EA D1 D8 E2 FA 8A 4D 02 88 4E F6 C6 46 F7 00 8B  // ......M..N..F...
    3400: FA 8B 4E F6 E3 06 D1 E0 D1 D7 E2 FA 26 09 47 1C  // ..N.........&.G.
    3410: 26 09 7F 1E 8D 66 F8 5F 5A E9 F1 FE 53 51 52 57  // &....f._Z...SQRW
    3420: 8B D8 8C D0 8E C0 26 8B 77 26 8A 4C 01 32 ED B8  // ......&.w&.L.2..
    3430: 20 00 2B C1 8B C8 BE FF FF 8B D6 E3 06 D1 EA D1  //  .+.............
    3440: DE E2 FA 26 8B 7F 26 8A 4D 02 32 ED 8B C6 E3 06  // ...&..&.M.2.....
    3450: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 1C 26 21  // ..........&!G.&!
    3460: 57 1E 5F E9 CC 05 53 56 8B D8 8C D2 8E C2 26 8B  // W._...SV......&.
    3470: 77 26 80 3C 00 74 73 80 3C 01 75 58 8A 44 01 32  // w&.<.ts.<.uX.D.2
    3480: E4 26 83 7F 1E 00 75 4C 26 3B 47 1C 75 46 8A 04  // .&....uL&;G.uF..
    3490: 6B F0 03 8A 84 42 95 26 01 47 26 8C D0 8E C0 26  // k....B.&.G&....&
    34A0: 8B 77 26 80 3C 09 74 17 8A 04 32 E4 6B F0 03 8B  // .w&.<.t...2.k...
    34B0: C3 FF 94 40 95 26 8B 77 26 8A 04 32 E4 EB D1 8B  // ...@.&.w&..2....
    34C0: 44 01 26 29 47 26 26 FF 47 26 26 8B 47 1C 26 8B  // D.&)G&&.G&&.G.&.
    34D0: 77 1E EB 1A 26 8B 77 26 8A 04 32 E4 6B F0 03 8A  // w...&.w&..2.k...
    34E0: 84 42 95 26 01 47 26 E9 80 FF 33 C0 33 F6 8B D6  // .B.&.G&...3.3...
    34F0: 5E 5B C3 53 51 52 56 8B D8 8D 77 35 26 8B 54 02  // ^[.SQRV...w5&.T.
    3500: 26 89 57 14 26 C7 47 16 00 00 8B F0 26 8B 47 20  // &.W.&.G.....&.G 
    3510: 33 D2 26 01 47 14 26 11 54 16 8C D1 8E C1 26 F6  // 3.&.G.&.T.....&.
    3520: 47 2F 06 0F 85 0A 05 26 80 7F 34 00 75 22 26 8B  // G/.....&..4.u"&.
    3530: 77 16 26 0B 77 14 75 10 26 D1 67 08 26 D1 57 0A  // w.&.w.u.&.g.&.W.
    3540: 26 D1 67 08 26 D1 57 0A 8B C3 E8 79 11 E9 E1 04  // &.g.&.W....y....
    3550: 26 8A 47 34 32 E4 05 80 00 99 26 89 47 1C 26 89  // &.G42.....&.G.&.
    3560: 57 1E 8B C3 E8 FF FE E9 C7 04 53 56 8B D8 8D 77  // W.........SV...w
    3570: 35 26 8A 44 02 32 E4 C1 E0 02 26 8B 37 26 8B 34  // 5&.D.2....&.7&.4
    3580: 03 F0 26 8B 47 08 26 8B 5F 0A 26 89 04 26 89 5C  // ..&.G.&._.&..&.\
    3590: 02 5E 5B C3 53 52 56 8B D8 8C D0 8D 77 35 8E C0  // .^[.SRV.....w5..
    35A0: 26 8A 54 02 80 FA 40 73 21 26 8B 77 02 32 F6 C1  // &.T...@s!&.w.2..
    35B0: E2 02 26 8B 74 04 03 F2 26 8B 57 08 26 8B 47 0A  // ..&.t...&.W.&.G.
    35C0: 26 89 14 26 89 44 02 E9 7F 00 80 FA 41 75 12 26  // &..&.D......Au.&
    35D0: 8B 47 08 26 8B 57 0A 26 89 47 10 26 89 57 12 EB  // .G.&.W.&.G.&.W..
    35E0: 68 80 FA 40 75 12 26 8B 47 08 26 8B 57 0A 26 89  // h..@u.&.G.&.W.&.
    35F0: 47 0C 26 89 57 0E EB 51 80 FA 42 75 0A 26 8B 47  // G.&.W..Q..Bu.&.G
    3600: 08 26 89 47 22 EB 42 80 FA 43 75 0A 26 8A 47 08  // .&.G".B..Cu.&.G.
    3610: 26 88 47 33 EB 33 80 FA 46 75 12 26 8B 57 08 26  // &.G3.3..Fu.&.W.&
    3620: 8B 47 0A 26 89 57 18 26 89 47 1A EB 1C 80 FA 47  // .G.&.W.&.G.....G
    3630: 75 0A 26 8B 47 08 26 89 47 24 EB 0D 80 FA 48 75  // u.&.G.&.G$....Hu
    3640: 08 26 8B 47 08 26 89 47 20 5E 5A 5B C3 53 56 8B  // .&.G.&.G ^Z[.SV.
    3650: D8 8D 77 35 26 8A 44 02 32 E4 26 89 47 14 26 C7  // ..w5&.D.2.&.G.&.
    3660: 47 16 00 00 5E 5B C3 53 56 8B D8 26 8B 77 02 26  // G...^[.SV..&.w.&
    3670: 8B 74 02 8A 04 32 E4 26 89 47 14 26 C7 47 16 00  // .t...2.&.G.&.G..
    3680: 00 26 8B 5F 02 26 FF 47 02 5E 5B C3 53 56 8B D8  // .&._.&.G.^[.SV..
    3690: 26 8B 77 02 26 8B 74 02 8B 34 26 89 77 14 26 C7  // &.w.&.t..4&.w.&.
    36A0: 47 16 00 00 26 8B 5F 02 26 83 47 02 02 5E 5B C3  // G...&._.&.G..^[.
    36B0: 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B 04 8B 74  // SV..&.w.&.t....t
    36C0: 02 26 89 47 14 26 89 77 16 26 8B 5F 02 26 83 47  // .&.G.&.w.&._.&.G
    36D0: 02 04 5E 5B C3 53 52 56 8B D8 E8 70 FF 8B F3 26  // ..^[.SRV...p...&
    36E0: 8B 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8 26  // .G.&.W.........&
    36F0: 01 47 14 26 11 54 16 8B C3 E8 2B 10 E9 4A FF 53  // .G.&.T....+..J.S
    3700: 8B D8 26 8B 5F 02 26 FF 47 02 5B C3 53 8B D8 26  // ..&._.&.G.[.S..&
    3710: 8B 5F 02 26 83 47 02 02 5B C3 53 56 8B D8 E8 6B  // ._.&.G..[.SV...k
    3720: FF 8B F3 26 8B 57 20 33 C0 26 01 57 14 26 11 44  // ...&.W 3.&.W.&.D
    3730: 16 8C D2 8E C2 26 8B 47 2E 32 C0 80 E4 06 3D 00  // .....&.G.2....=.
    3740: 02 75 07 32 E4 33 D2 5E 5B C3 26 8B 47 2E 32 C0  // .u.2.3.^[.&.G.2.
    3750: 80 E4 06 3D 00 04 74 EB 26 80 7F 34 00 75 08 8B  // ...=..t.&..4.u..
    3760: C3 E8 2F 0F 5E 5B C3 26 8A 47 34 32 E4 26 89 47  // ../.^[.&.G42.&.G
    3770: 1C 26 C7 47 1E 00 00 8B C3 E8 EA FC 5E 5B C3 53  // .&.G........^[.S
    3780: 8B D8 E8 E2 FE 26 8B 47 14 C1 E0 02 26 8B 1F 26  // .....&.G....&..&
    3790: 8B 1F 03 D8 26 8B 07 26 8B 57 02 5B C3 A3 37 98  // ....&..&.W.[..7.
    37A0: 37 AE 37 FD 37 B4 37 CC 37 E6 37 F1 37 F7 37 53  // 7.7.7.7.7.7.7.7S
    37B0: 51 56 8B D8 E8 B0 FE 8C D2 8E C2 26 83 7F 16 00  // QV.........&....
    37C0: 75 22 26 83 7F 14 40 73 1B 26 8B 77 02 26 8B 5F  // u"&...@s.&.w.&._
    37D0: 14 C1 E3 02 26 8B 44 04 03 D8 26 8B 07 26 8B 57  // ....&.D...&..&.W
    37E0: 02 E9 7B 05 26 8B 77 14 26 8B 47 16 83 C6 C0 83  // ..{.&.w.&.G.....
    37F0: D0 FF 75 71 83 FE 08 77 6C 03 F6 2E FF A4 35 37  // ..uq...wl.....57
    3800: 26 8B 47 10 26 8B 57 12 E9 54 05 26 8B 47 0C 26  // &.G.&.W..T.&.G.&
    3810: 8B 57 0E E9 49 05 26 8B 47 22 EB 4B 26 8A 4F 33  // .W..I.&.G".K&.O3
    3820: 32 ED BB 01 00 33 D2 E3 06 D1 E3 D1 D2 E2 FA 8B  // 2....3..........
    3830: C3 E9 2B 05 26 8A 4F 33 32 ED B8 01 00 33 D2 E3  // ..+.&.O32....3..
    3840: 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 E9 11 05 26 8B  // ..............&.
    3850: 47 18 26 8B 57 1A E9 06 05 26 8B 47 24 EB 08 26  // G.&.W....&.G$..&
    3860: 8B 47 20 EB 02 33 C0 33 D2 E9 F3 04 53 56 8B D8  // .G ..3.3....SV..
    3870: E8 F4 FD 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1  // .....&.G.&.W....
    3880: D8 D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3 E8  // .....&.G.&.T....
    3890: 16 0E 5E 5B C3 33 C0 33 D2 C3 53 56 8B D8 E8 EB  // ..^[.3.3..SV....
    38A0: FD 26 8B 77 14 26 03 77 22 8B 04 8B 54 02 5E 5B  // .&.w.&.w"...T.^[
    38B0: C3 53 8B D8 26 C6 47 2B 04 E8 AB FD 26 8B 47 14  // .S..&.G+....&.G.
    38C0: 26 8B 57 16 5B C3 53 8B D8 26 C6 47 2B 01 E8 BB  // &.W.[.S..&.G+...
    38D0: FD EB E9 53 8B D8 26 C6 47 2B 00 E8 D2 FD EB DC  // ...S..&.G+......
    38E0: 53 8B D8 83 C3 35 26 8A 5F 01 C0 EB 03 80 E3 07  // S....5&._.......
    38F0: 32 FF 03 DB FF 97 D0 94 5B C3 53 52 56 8B D8 26  // 2.......[.SRV..&
    3900: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EC 94 26  // .G,2...........&
    3910: 89 47 08 26 89 57 0A 26 8A 47 2D 32 E4 8B F0 03  // .G.&.W.&.G-2....
    3920: F0 8B C3 FF 94 04 95 26 89 47 04 26 89 57 06 E9  // .......&.G.&.W..
    3930: 17 FD 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1 8A  // ..SQV..&.O+2....
    3940: 8C 34 95 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26  // .4...&.o.&._...&
    3950: 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 14 95 8B B4  // .O+2............
    3960: 16 95 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32 ED  // ..&!O.&!w.&.O*2.
    3970: 8B F1 8A 8C 3C 95 E3 0A 26 D1 67 04 26 D1 57 06  // ....<...&.g.&.W.
    3980: E2 F6 26 8B 4F 08 26 8B 77 0A 26 89 4F 14 26 89  // ..&.O.&.w.&.O.&.
    3990: 77 16 E9 CA 03 53 51 52 56 57 8B D8 8C D0 8E C0  // w....SQRVW......
    39A0: 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B  // &.G+2......&.G*.
    39B0: F8 8A 8D 3C 95 32 ED 8B 84 14 95 8B 94 16 95 E3  // ...<.2..........
    39C0: 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 14 26  // ...........&!G.&
    39D0: 21 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C 3C 95 32  // !W.&.G*2.....<.2
    39E0: ED E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 47  // ...&.o.&._...&.G
    39F0: 2B 8B F0 C1 E6 02 8B 84 14 95 8B 94 16 95 26 21  // +.............&!
    3A00: 47 08 26 21 57 0A 26 8A 47 2A 32 E4 8B F0 8A 8C  // G.&!W.&.G*2.....
    3A10: 3C 95 32 ED E3 0A 26 D1 67 08 26 D1 57 0A E2 F6  // <.2...&.g.&.W...
    3A20: 26 8B 47 14 26 8B 57 16 26 09 47 08 26 09 57 0A  // &.G.&.W.&.G.&.W.
    3A30: 5F 5E 5A 59 5B C3 53 51 56 8B D8 26 8A 4F 2B 32  // _^ZY[.SQV..&.O+2
    3A40: ED 8B F1 8A 8C 34 95 E3 0A 26 D1 6F 06 26 D1 5F  // .....4...&.o.&._
    3A50: 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C  // ...&.O+2........
    3A60: 14 95 8B B4 16 95 26 21 4F 04 26 21 77 06 26 8A  // ......&!O.&!w.&.
    3A70: 4F 2A 32 ED 8B F1 8A 8C 3C 95 E3 0A 26 D1 6F 0A  // O*2.....<...&.o.
    3A80: 26 D1 5F 08 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6  // &._...&.O+2.....
    3A90: 02 8B 8C 14 95 8B B4 16 95 26 21 4F 08 26 21 77  // .........&!O.&!w
    3AA0: 0A E9 BB 02 51 52 57 8B D8 8C D0 8E C0 26 80 7F  // ....QRW......&..
    3AB0: 2B 00 74 1A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // +.t.&.G,2.......
    3AC0: FF 94 EC 94 26 89 47 08 26 89 57 0A EB 10 26 8A  // ....&.G.&.W...&.
    3AD0: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 F8 94 26 8A  // G,2...........&.
    3AE0: 47 2D 32 E4 8B F0 03 F0 8B C3 FF 94 04 95 26 89  // G-2...........&.
    3AF0: 47 04 26 89 57 06 8C D2 8E C2 26 80 7F 2B 00 74  // G.&.W.....&..+.t
    3B00: 4A 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A  // J&.G+2......&.G*
    3B10: 8B F8 8A 8D 3C 95 32 ED 8B 84 14 95 8B 94 16 95  // ....<.2.........
    3B20: E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08  // ............&!G.
    3B30: 26 21 57 0A 8B C3 E8 F9 FD 26 8B 47 04 26 8B 57  // &!W......&.G.&.W
    3B40: 06 26 09 47 08 26 09 57 0A EB 10 26 8B 57 04 26  // .&.G.&.W...&.W.&
    3B50: 8B 47 06 26 89 57 08 26 89 47 0A 26 8A 47 2C 32  // .G.&.W.&.G.&.G,2
    3B60: E4 8B F0 03 F0 8B C3 FF 94 E0 94 5F 5A 59 C3 53  // ..........._ZY.S
    3B70: 51 52 56 57 8B D8 26 8A 47 2A 32 E4 8B F0 8A 8C  // QRVW..&.G*2.....
    3B80: 3C 95 32 ED E3 0A 26 D1 67 04 26 D1 57 06 E2 F6  // <.2...&.g.&.W...
    3B90: 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26  // ....&.G+2......&
    3BA0: 8A 47 2A 8B F8 8A 8D 3C 95 32 ED 8B 84 14 95 8B  // .G*....<.2......
    3BB0: 94 16 95 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26  // ...............&
    3BC0: 09 47 04 26 09 57 06 26 8B 47 04 26 8B 57 06 26  // .G.&.W.&.G.&.W.&
    3BD0: 21 47 08 26 21 57 0A E9 56 FE 55 8B EC 51 52 50  // !G.&!W..V.U..QRP
    3BE0: 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // ..&.G,2.........
    3BF0: EC 94 26 89 47 08 26 89 57 0A 26 8A 47 2B 88 46  // ..&.G.&.W.&.G+.F
    3C00: FA 8B C3 E8 DA FC 26 89 47 04 26 89 57 06 26 8A  // ......&.G.&.W.&.
    3C10: 4F 2D 32 ED 8B F1 03 F1 8B C3 FF 94 04 95 26 89  // O-2...........&.
    3C20: 47 14 26 89 57 16 8B C3 E8 44 FF 8A 46 FA 32 E4  // G.&.W....D..F.2.
    3C30: 8B F0 8A 8C 34 95 E3 0A 26 D1 6F 16 26 D1 5F 14  // ....4...&.o.&._.
    3C40: E2 F6 26 8A 57 2B 32 F6 8B F2 C1 E6 02 8B 84 14  // ..&.W+2.........
    3C50: 95 8B 94 16 95 26 21 47 14 26 21 57 16 26 8A 47  // .....&!G.&!W.&.G
    3C60: 2A 32 E4 8B F0 8A 8C 3C 95 32 ED E3 0A 26 D1 67  // *2.....<.2...&.g
    3C70: 14 26 D1 57 16 E2 F6 26 8B 47 14 26 8B 57 16 26  // .&.W...&.G.&.W.&
    3C80: 09 47 08 26 09 57 0A 26 8A 47 2C 32 E4 8B F0 03  // .G.&.W.&.G,2....
    3C90: F0 8B C3 FF 94 E0 94 8D 66 FC 5A 59 5D C3 51 8B  // ........f.ZY].Q.
    3CA0: D8 E8 56 FC 26 8A 4F 2B 32 ED 8B F1 8A 8C 34 95  // ..V.&.O+2.....4.
    3CB0: E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 8B C3 E8 AE  // ..&.o.&._.......
    3CC0: FE 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 E0  // .&.O,2..........
    3CD0: 94 59 C3 8B D8 E8 22 FC 8B C3 E8 55 FC 26 8B 47  // .Y...."....U.&.G
    3CE0: 04 26 8B 77 06 26 09 47 08 26 09 77 0A 26 8A 47  // .&.w.&.G.&.w.&.G
    3CF0: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 E0 94 C3 53 56  // ,2............SV
    3D00: 8B D8 E8 F5 FB 8B C3 E8 28 FC 26 8B 47 04 26 8B  // ........(.&.G.&.
    3D10: 77 06 26 31 47 08 26 31 77 0A 26 8A 47 2C 32 E4  // w.&1G.&1w.&.G,2.
    3D20: 8B F0 03 F0 8B C3 FF 94 E0 94 5E 5B C3 53 51 56  // ..........^[.SQV
    3D30: 8B D8 E8 C5 FB 8B C3 E8 F8 FB 26 8B 4F 04 E3 0A  // ..........&.O...
    3D40: 26 D1 67 08 26 D1 57 0A E2 F6 8B C3 E8 46 FC 26  // &.g.&.W......F.&
    3D50: 8A 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 E0 94 5E  // .O,2...........^
    3D60: 59 5B C3 53 51 56 8B D8 E8 8F FB 8B C3 E8 C2 FB  // Y[.SQV..........
    3D70: 26 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6  // &.O...&.o.&._...
    3D80: EB C8 52 8B D8 E8 72 FB 8B C3 E8 A5 FB 8B F3 26  // ..R...r........&
    3D90: 8B 47 04 26 8B 57 06 26 01 47 08 26 11 54 0A 8B  // .G.&.W.&.G.&.T..
    3DA0: C3 E8 F1 FB 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // ....&.G,2.......
    3DB0: FF 94 E0 94 5A C3 52 8B D8 E8 3E FB 8B C3 E8 71  // ....Z.R...>....q
    3DC0: FB 8B F3 26 8B 47 04 26 8B 57 06 26 29 47 08 26  // ...&.G.&.W.&)G.&
    3DD0: 19 54 0A EB CA 51 52 8B F0 E8 1E FB 8B C6 E8 55  // .T...QR........U
    3DE0: FC 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C  // .&.D.&.T.&.\.&.L
    3DF0: 06 E8 F7 F2 26 89 44 0C 26 89 54 0E 5A 59 C3 52  // ....&.D.&.T.ZY.R
    3E00: 8B D0 E8 F5 FA 8B C2 E8 2C FC 8B C2 E8 5C 08 5A  // ........,....\.Z
    3E10: C3 51 52 57 8B F0 E8 E1 FA 8B C6 E8 18 FC 26 8B  // .QRW..........&.
    3E20: 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 36  // D.&.T.&.\.&.L..6
    3E30: F2 26 89 44 0C 26 89 54 0E 8C D7 8E C7 26 8B 44  // .&.D.&.T.....&.D
    3E40: 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 17 F2  // .&.T.&.\.&.L....
    3E50: 26 89 5C 10 26 89 4C 12 E9 10 FD 52 8B D0 E8 99  // &.\.&.L....R....
    3E60: FA 8B C2 E8 D0 FB 8B C2 E8 D3 07 5A C3 51 52 8B  // ...........Z.QR.
    3E70: D8 E8 86 FA 8B C3 E8 BD FB 8C D1 8E C1 26 8B 47  // .............&.G
    3E80: 08 26 8B 57 0A 26 3B 57 06 75 0E 26 3B 47 04 75  // .&.W.&;W.u.&;G.u
    3E90: 08 26 C6 47 30 01 5A 59 C3 8B D0 26 8B 47 0A 26  // .&.G0.ZY...&.G.&
    3EA0: 3B 47 06 72 08 75 0A 26 3B 57 04 73 04 33 C0 EB  // ;G.r.u.&;W.s.3..
    3EB0: 03 B8 02 00 26 88 47 30 5A 59 C3 51 52 57 8B D8  // ....&.G0ZY.QRW..
    3EC0: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EC 94  // &.G,2...........
    3ED0: 26 89 47 08 26 89 57 0A 8C D0 8E C0 26 8A 47 2B  // &.G.&.W.....&.G+
    3EE0: 32 E4 8B F0 C1 E6 02 8B F8 8A 8D 34 95 32 ED 8B  // 2..........4.2..
    3EF0: 84 14 95 8B 94 16 95 E3 06 D1 E0 D1 D2 E2 FA F7  // ................
    3F00: D0 F7 D2 26 21 47 08 26 21 57 0A E9 4D FC 55 8B  // ...&!G.&!W..M.U.
    3F10: EC 51 52 57 83 EC 06 8B D8 26 8A 47 2B 32 E4 8B  // .QRW.....&.G+2..
    3F20: F0 C1 E6 02 8B F8 8A 8D 34 95 32 ED 8B 84 14 95  // ........4.2.....
    3F30: 89 46 F4 8B 84 16 95 89 46 F6 E3 08 D1 66 F4 D1  // .F......F....f..
    3F40: 56 F6 E2 F8 8B 7E F4 8B 46 F6 89 46 F8 26 8A 47  // V....~..F..F.&.G
    3F50: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 EC 94 26 89 47  // ,2...........&.G
    3F60: 08 26 89 57 0A 8B C3 E8 47 F9 26 89 47 04 26 89  // .&.W....G.&.G.&.
    3F70: 57 06 8B C7 F7 D0 8B 56 F6 F7 D2 26 23 47 08 26  // W......V...&#G.&
    3F80: 23 57 0A 26 89 47 14 26 89 57 16 26 21 7F 08 8B  // #W.&.G.&.W.&!...
    3F90: 46 F6 26 21 47 0A 8C D1 8D 77 35 8E C1 26 80 3C  // F.&!G....w5..&.<
    3FA0: 19 73 12 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57  // .s.&.O...&.g.&.W
    3FB0: 0A E2 F6 EB 10 26 8B 4F 04 E3 0A 26 D1 6F 0A 26  // .....&.O...&.o.&
    3FC0: D1 5F 08 E2 F6 26 21 7F 08 8B 46 F8 26 21 47 0A  // ._...&!...F.&!G.
    3FD0: 26 8B 57 14 26 8B 47 16 26 09 57 08 26 09 47 0A  // &.W.&.G.&.W.&.G.
    3FE0: 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 E0 94  // &.G,2...........
    3FF0: 8D 66 FA 5F E9 A3 FC 52 8B D8 E8 FD F8 8B C3 E8  // .f._...R........
    4000: 34 FA 26 8B 47 08 26 8B 57 0A 26 85 57 06 75 06  // 4.&.G.&.W.&.W.u.
    4010: 26 85 47 04 74 05 B8 03 00 EB 03 B8 01 00 26 88  // &.G.t.........&.
    4020: 47 30 5A C3 53 51 52 56 8B D8 26 8A 4F 2D 32 ED  // G0Z.SQRV..&.O-2.
    4030: 8B F1 03 F1 FF 94 04 95 26 89 47 04 26 89 57 06  // ........&.G.&.W.
    4040: 26 8A 47 2B 32 E4 8B F0 8A 8C 34 95 E3 0A 26 D1  // &.G+2.....4...&.
    4050: 6F 06 26 D1 5F 04 E2 F6 26 8A 47 2B 8B F0 C1 E6  // o.&._...&.G+....
    4060: 02 8B 84 14 95 8B 94 16 95 26 21 47 04 26 21 57  // .........&!G.&!W
    4070: 06 E9 BD F9 52 8B D8 E8 AA FF 26 8B 47 04 26 8B  // ....R.....&.G.&.
    4080: 57 06 26 89 47 18 26 89 57 1A 5A C3 51 52 8B D8  // W.&.G.&.W.Z.QR..
    4090: E8 91 FF 8C D0 8E C0 26 8B 77 02 26 8B 74 02 81  // .......&.w.&.t..
    40A0: 3C 5A 5A 74 5B 26 8B 77 02 26 8B 74 02 80 3C 63  // <ZZt[&.w.&.t..<c
    40B0: 75 E1 26 8B 77 02 26 FF 44 02 8B C3 E8 21 F8 26  // u.&.w.&.D....!.&
    40C0: 89 47 08 26 89 57 0A 8B C3 E8 FA F7 26 89 47 14  // .G.&.W......&.G.
    40D0: 26 89 57 16 8C D1 8E C1 26 8B 57 04 26 8B 47 06  // &.W.....&.W.&.G.
    40E0: 26 3B 47 0A 75 AD 26 3B 57 08 75 A7 26 8B 77 02  // &;G.u.&;W.u.&.w.
    40F0: 26 8B 04 26 03 47 14 8B DE 26 89 47 02 5A 59 C3  // &..&.G...&.G.ZY.
    4100: 26 8B 5F 02 26 83 47 02 02 5A 59 C3 52 57 8B D8  // &._.&.G..ZY.RW..
    4110: 8C D0 8E C0 26 8B 77 02 26 8B 74 02 8A 54 01 84  // ....&.w.&.t..T..
    4120: D2 75 08 26 C7 47 22 00 00 EB 2F 80 FA FF 75 14  // .u.&.G".../...u.
    4130: 26 8B 77 02 26 8B 3F 26 8B 34 26 2B 75 02 26 89  // &.w.&.?&.4&+u.&.
    4140: 77 22 EB 16 26 8B 07 E8 E3 02 8B F0 8A C2 32 E4  // w"..&.........2.
    4150: 03 C0 03 F0 8B 04 26 89 47 22 26 8B 5F 02 26 83  // ......&.G"&._.&.
    4160: 47 02 02 5F 5A C3 8B D8 26 80 67 2F F9 26 8B 77  // G.._Z...&.g/.&.w
    4170: 02 26 8B 74 02 8A 44 01 26 88 47 34 26 8B 5F 02  // .&.t..D.&.G4&._.
    4180: 26 83 47 02 03 C3 8B D8 26 8B 77 02 26 8B 74 02  // &.G.....&.w.&.t.
    4190: 8B 74 01 26 89 77 20 EB E3 53 8B D8 26 8A 47 2C  // .t.&.w ..S..&.G,
    41A0: 32 E4 24 03 26 80 67 2F F9 C1 E0 09 26 09 47 2E  // 2.$.&.g/....&.G.
    41B0: E9 4F F5 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01  // .O...&.w.&.t..D.
    41C0: 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 40  // 2.&.G.&.G......@
    41D0: 04 26 8B 5F 02 26 83 47 02 02 C3 8B D8 26 8B 77  // .&._.&.G.....&.w
    41E0: 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7  // .&.t..D.2.&.G.&.
    41F0: 47 06 00 00 8B C3 E8 08 04 EB D6 53 56 8B D8 26  // G..........SV..&
    4200: 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04  // .w.&.t..D.2.&.G.
    4210: 26 C7 47 06 00 00 8B C3 E8 06 04 E9 86 F4 53 56  // &.G...........SV
    4220: 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26  // ..&.w.&.t..D.2.&
    4230: 89 47 04 26 C7 47 06 00 00 8B C3 E8 F0 03 E9 63  // .G.&.G.........c
    4240: F4 53 56 8B D8 26 8B 77 02 8B DE 26 8B 5F 02 8B  // .SV..&.w...&._..
    4250: 5F 01 83 C3 03 26 01 5C 02 5E 5B C3 51 52 8B D8  // _....&.\.^[.QR..
    4260: 26 8B 77 02 26 83 44 02 02 26 8B 07 E8 A0 01 8B  // &.w.&.D..&......
    4270: C8 26 8B 77 28 8A 44 01 32 E4 03 C0 8B F1 03 F0  // .&.w(.D.2.......
    4280: 83 3C 00 74 4F 26 8B 77 28 8A 54 01 32 F6 8B C3  // .<.tO&.w(.T.2...
    4290: E8 B0 01 26 88 47 31 26 8B 77 02 26 8B 34 8B 44  // ...&.G1&.w.&.4.D
    42A0: 04 C1 E8 08 32 E4 24 7F C1 E8 02 32 E4 24 1F 26  // ....2.$....2.$.&
    42B0: 80 67 2F 07 C1 E0 0B 26 09 47 2E 26 8B 37 26 8B  // .g/....&.G.&.7&.
    42C0: 47 2E C1 E8 0B C1 E0 02 26 01 04 26 C6 47 32 01  // G.......&..&.G2.
    42D0: 26 89 4F 28 5A 59 C3 53 8B D8 26 C6 47 32 82 5B  // &.O(ZY.S..&.G2.[
    42E0: C3 57 8B D8 8C D6 8E C6 26 80 7F 2C 05 74 0A 26  // .W......&..,.t.&
    42F0: 8A 47 2C 26 3A 47 30 75 1E 26 8B 77 02 26 8B 74  // .G,&:G0u.&.w.&.t
    4300: 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B 5F  // .&...&.=.t...&._
    4310: 02 26 89 77 02 5F C3 26 8B 5F 02 26 83 47 02 03  // .&.w._.&._.&.G..
    4320: 5F C3 53 56 57 8B D8 8C D6 8E C6 26 80 7F 30 01  // _.SVW......&..0.
    4330: 74 0A 26 8A 47 30 26 3A 47 2C 75 20 26 8B 77 02  // t.&.G0&:G,u &.w.
    4340: 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7  // &.t.&...&.=.t...
    4350: 26 8B 5F 02 26 89 77 02 5F 5E 5B C3 26 8B 5F 02  // &._.&.w._^[.&._.
    4360: 26 83 47 02 03 EB F1 53 56 57 8B D8 8C D0 8E C0  // &.G....SVW......
    4370: 26 80 7F 30 01 74 E5 EB C3 55 8B EC 53 51 52 57  // &..0.t...U..SQRW
    4380: 8B D8 26 8B 77 02 26 8B 74 02 8A 04 26 C6 47 3D  // ..&.w.&.t...&.G=
    4390: 00 8C D1 8E C1 26 80 7F 3D 08 73 20 26 8B 77 02  // .....&..=.s &.w.
    43A0: 26 8A 57 3D 32 F6 26 8B 7C 02 03 FA 8B F3 03 F2  // &.W=2.&.|.......
    43B0: 8A 15 26 88 54 35 26 FE 47 3D EB D5 26 8B 7F 02  // ..&.T5&.G=..&...
    43C0: 8A D0 32 F6 8B F2 C1 E6 02 8A 94 61 95 26 01 55  // ..2........a.&.U
    43D0: 02 26 8B 7F 28 8A 55 01 80 E2 07 26 88 57 2D 26  // .&..(.U....&.W-&
    43E0: 8B 7F 28 8A 55 01 C0 EA 03 80 E2 07 26 88 57 2B  // ..(.U.......&.W+
    43F0: 26 8B 7F 28 8A 55 01 C0 EA 06 26 88 57 2A 8A 94  // &..(.U....&.W*..
    4400: 60 95 26 88 57 2C 8D 66 F8 5F 5A 59 5B 5D C3 53  // `.&.W,.f._ZY[].S
    4410: 56 8B D8 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8  // V..&.w....tH....
    4420: 8B 74 1E 8B C6 03 C3 83 C0 04 5E 5B C3 53 56 8B  // .t........^[.SV.
    4430: D8 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74  // .&.w....tH.....t
    4440: 20 EB E0 8A C2 C3 16 07 55 8B EC 53 51 56 57 83  //  .......U..SQVW.
    4450: EC 40 8B F8 89 46 B8 E8 D3 FF 8B D8 89 46 E0 26  // .@...F.......F.&
    4460: 8B 45 02 8B 5F 2E 03 D8 89 5E DE 83 46 DE 04 8B  // .E.._....^..F...
    4470: C7 E8 9B FF 89 46 E0 32 F6 8D 46 B8 E8 C4 FF 8A  // .....F.2..F.....
    4480: D0 32 F6 03 D2 8B 5E E0 03 DA 83 3F 00 0F 84 65  // .2....^....?...e
    4490: 01 88 46 E9 80 66 E7 F9 C6 46 EC 00 C7 46 D8 00  // ..F..f...F...F..
    44A0: 00 66 C7 46 D0 00 00 00 00 C7 46 F6 00 00 C6 46  // .f.F......F....F
    44B0: EA 01 EB 06 3C 01 0F 85 8C 00 8A 56 E9 8A C2 32  // ....<......V...2
    44C0: E4 03 C0 8B 5E E0 03 D8 83 3F 00 74 75 26 8B 45  // ....^....?.tu&.E
    44D0: 02 8B 1F 03 D8 8B 47 04 32 E4 8B C8 83 C1 09 32  // ......G.2......2
    44E0: ED 80 E1 FE 83 F9 00 74 07 D1 E9 33 C0 50 E2 FD  // .......t...3.P..
    44F0: 8B C4 8B D8 89 46 BA 85 C0 74 41 83 C0 08 26 89  // .....F...tA...&.
    4500: 47 04 8A C2 32 E4 03 C0 8B 5E E0 03 D8 26 8B 45  // G...2....^...&.E
    4510: 02 03 07 8B 5E BA 26 89 07 8B 5E BA 26 8B 07 83  // ....^.&...^.&...
    4520: C0 06 26 89 47 02 8B 5E BA 8B 76 F6 26 89 77 06  // ..&.G..^..v.&.w.
    4530: 8B 5E BA 89 5E F6 C6 46 EA 00 EB 0A C6 46 EA 87  // .^..^..F.....F..
    4540: EB 04 C6 46 EA 83 8A 46 EA 32 E4 83 F8 10 0F 8F  // ...F...F.2......
    4550: 99 00 88 66 EA 8A 46 EA 32 E4 85 C0 0F 8F 83 00  // ...f..F.2.......
    4560: 8C D0 8B 5E BA 8E C0 26 8B 5F 02 89 5E E0 8B 5E  // ...^...&._..^..^
    4570: BA 26 8B 5F 02 80 3F 5B 75 4A C6 46 EA 10 8B 5E  // .&._..?[uJ.F...^
    4580: BA 26 8B 5F 06 89 5E F6 8B 5E BA 26 8B 1F 8B 47  // .&._..^..^.&...G
    4590: 04 32 E4 8B C8 83 C1 09 32 ED 80 E1 FE 03 E1 8B  // .2......2.......
    45A0: 5E F6 89 5E BA 85 DB 74 AC 26 8B 1F 8B 47 04 C1  // ^..^...t.&...G..
    45B0: E8 08 32 E4 24 7F C1 E8 02 C1 E0 02 8B 5E B8 26  // ..2.$........^.&
    45C0: 29 07 EB 91 8D 46 B8 E8 AF FD 8A D0 8D 46 B8 E8  // )....F.......F..
    45D0: 2E 00 8A DA 32 FF C1 E3 02 8D 46 B8 FF 97 5E 95  // ....2.....F...^.
    45E0: E9 72 FF 83 7E F6 00 0F 85 C9 FE 80 7E EA 10 74  // .r..~.......~..t
    45F0: 05 8A 46 EA EB 02 32 C0 8D 66 F8 5F 5E E9 0B FE  // ..F...2..f._^...
    4600: C3 53 51 8B D8 26 8A 4F 04 32 ED E8 9B E8 59 5B  // .SQ..&.O.2....Y[
    4610: C3 53 51 8B D8 26 8A 4F 04 32 ED E8 96 E8 59 5B  // .SQ..&.O.2....Y[
    4620: C3 53 8B D8 26 8A 47 04 32 E4 E6 80 5B C3 53 51  // .S..&.G.2...[.SQ
    4630: 8B D8 26 8A 4F 04 32 ED E8 13 D8 59 5B C3 53 8B  // ..&.O.2....Y[.S.
    4640: D8 66 50 66 52 66 51 66 26 8B 47 08 66 26 8B 57  // .fPfRfQf&.G.f&.W
    4650: 10 66 26 8B 4F 04 66 F7 F1 66 26 89 47 0C 66 26  // .f&.O.f..f&.G.f&
    4660: 89 57 10 66 59 66 5A 66 58 5B C3 53 8B D8 66 50  // .W.fYfZfX[.S..fP
    4670: 66 52 66 51 66 26 8B 47 08 66 26 8B 4F 04 66 F7  // fRfQf&.G.f&.O.f.
    4680: E1 66 26 89 47 0C 66 26 89 57 10 66 59 66 5A 66  // .f&.G.f&.W.fYfZf
    4690: 58 5B C3 53 57 8B D8 26 8B 5F 14 E8 52 EB 8B D0  // X[.SW..&._..R...
    46A0: 66 C1 E8 10 92 5F 5B C3 53 57 8B D8 26 8B 47 14  // f...._[.SW..&.G.
    46B0: 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3  // &.W.....f.......
    46C0: 02 E8 50 EB EB D8 53 52 57 8B D8 26 8B 47 08 26  // ..P...SRW..&.G.&
    46D0: 8B 57 0A 92 66 C1 E0 10 8B C2 26 8B 5F 14 E8 74  // .W..f.....&._..t
    46E0: EA 5F 5A 5B C3 53 52 8B D8 26 8B 47 1C 26 8B 57  // ._Z[.SR..&.G.&.W
    46F0: 1E 92 66 C1 E0 10 8B C2 26 8B 5F 26 8B 5F 01 E8  // ..f.....&._&._..
    4700: 53 EA 5A 5B C3 53 52 56 8B F0 26 8B 5C 26 8B 5F  // S.Z[.SRV..&.\&._
    4710: 01 E8 DC EA 8B D0 66 C1 E8 10 92 26 89 44 1C 26  // ......f....&.D.&
    4720: 89 54 1E 5E 5A 5B C3 53 51 52 57 8B D8 26 8B 47  // .T.^Z[.SQRW..&.G
    4730: 08 26 8B 57 0A 92 66 C1 E0 10 8B C2 8B C8 26 8B  // .&.W..f.......&.
    4740: 47 14 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA  // G.&.W.....f.....
    4750: C1 E3 02 8B C1 E8 30 EA 5F 5A 59 5B C3 8B D0 66  // ......0._ZY[...f
    4760: C1 E8 10 92 C3 00 1E 06 66 50 66 51 66 52 66 53  // ........fPfQfRfS
    4770: 66 55 66 56 66 57 0E 1F 0A C0 75 06 E8 37 01 E9  // fUfVfW....u..7..
    4780: D8 00 3C 01 75 06 E8 67 01 E9 CE 00 3C 02 75 06  // ..<.u..g....<.u.
    4790: E8 9B 02 E9 C4 00 3C 03 75 0B E8 CF 03 8B EC 89  // ......<.u.......
    47A0: 5E 0C E9 B5 00 3C 04 75 0B E8 DE 03 8B EC 89 5E  // ^....<.u.......^
    47B0: 0C E9 A6 00 3C 05 75 0B E8 09 05 8B EC 89 56 10  // ....<.u.......V.
    47C0: E9 97 00 3C 06 75 11 E8 86 04 8B EC 89 5E 0C 89  // ...<.u.......^..
    47D0: 4E 14 89 56 10 E9 82 00 3C 07 75 10 E8 78 05 8B  // N..V....<.u..x..
    47E0: EC 88 7E 0D 89 4E 14 89 56 10 EB 6E 3C 08 75 0A  // ..~..N..V..n<.u.
    47F0: E8 BB 04 8B EC 88 7E 0D EB 60 3C 09 75 05 E8 B4  // ......~..`<.u...
    4800: 05 EB 57 3C 0A 75 10 E8 FC 05 8B EC 89 4E 14 89  // ..W<.u.......N..
    4810: 7E 00 8C 46 1C EB 43 3C 0B 75 0B E8 F6 05 8B EC  // ~..F..C<.u......
    4820: 66 89 4E 14 EB 34 3C 10 75 0A E8 EB 05 8B EC 89  // f.N..4<.u.......
    4830: 5E 0C EB 26 3C 11 75 0D E8 1F 06 8B EC 89 5E 0C  // ^..&<.u.......^.
    4840: 89 4E 14 EB 15 3C 15 75 0F E8 4A 06 8B EC 89 5E  // .N...<.u..J....^
    4850: 0C EB 07 B8 4F 01 EB 02 32 C0 8B EC 89 46 18 66  // ....O...2....F.f
    4860: 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3  // _f^f]f[fZfYfX...
    4870: 50 1E 2E 8E 1E DD 03 8C D8 A3 E2 5A A3 F2 5A A3  // P..........Z..Z.
    4880: 04 5B 2E 8E 1E D5 03 A3 AA 04 1F 58 CB 00 30 31  // .[.........X..01
    4890: 2E 30 30 00 56 45 53 41 00 03 64 02 00 00 01 00  // .00.VESA..d.....
    48A0: 00 00 00 00 00 00 00 03 32 0F 75 01 00 00 02 01  // ........2.u.....
    48B0: 00 00 26 48 00 00 B9 3F 00 8B DF 83 C7 04 FC 66  // ..&H...?.......f
    48C0: 33 C0 F3 66 AB 8B FB BE 2C 48 B9 22 00 F3 A4 06  // 3..f....,H."....
    48D0: 1F 8C 4F 08 8C 47 10 8C 4F 18 8C 4F 1C 8C 4F 20  // ..O..G..O..O..O 
    48E0: 83 C7 22 89 7F 0E 0E 1F E8 3C D4 B0 4F 32 E4 C3  // .."......<..O2..
    48F0: 56 51 57 B9 10 00 66 33 C0 F3 66 AB 5F 59 8C DB  // VQW...f3..f._Y..
    4900: 06 1F C7 05 BB 00 C6 45 02 07 C7 45 04 40 00 C7  // .......E...E.@..
    4910: 45 06 40 00 C6 45 1B 04 C6 45 18 01 C6 45 1A 01  // E.@..E...E...E..
    4920: C6 45 1E 01 66 C7 45 3E 00 84 D7 17 8E DB E8 4B  // .E..f.E>.......K
    4930: BE 66 0B C0 0F 84 EE 00 06 1F 66 89 45 28 8C C8  // .f........f.E(..
    4940: 66 C1 E0 10 B8 B9 4C 66 89 45 0C 81 F9 FF 81 0F  // f.....Lf.E......
    4950: 84 CF 00 80 E5 03 B2 01 53 8E DB BE 80 1C E8 F7  // ........S.......
    4960: D1 5B 06 1F 0F 84 BE 00 53 E8 66 D4 66 89 45 12  // .[......S.f.f.E.
    4970: C7 45 16 08 10 8D 5C 0C E8 A3 E8 66 89 45 1F 66  // .E....\....f.E.f
    4980: 89 45 36 8D 5C 10 E8 95 E8 66 89 45 23 66 89 45  // .E6.\....f.E#f.E
    4990: 3A 8D 5C 08 E8 87 E8 0A C0 75 04 5B E9 87 00 E8  // :.\......u.[....
    49A0: 30 D4 66 C1 E8 10 3D 58 02 74 0D 3D 5E 01 74 08  // 0.f...=X.t.=^.t.
    49B0: 77 0A C6 45 17 08 EB 04 C6 45 17 0E E8 DA D3 80  // w..E.....E......
    49C0: F9 00 74 04 C6 45 1B 06 2E A1 D7 03 89 45 08 8D  // ..t..E.......E..
    49D0: 5C 04 E8 49 E8 66 8B C8 66 C1 E9 10 D3 E0 89 45  // \..I.f..f......E
    49E0: 10 89 45 32 B0 08 D2 E0 88 45 19 8D 5C 14 E8 2D  // ..E2.....E..\..-
    49F0: E8 5B 3D 00 03 77 2F 53 8B D8 B8 00 03 33 D2 F7  // .[=..w/S.....3..
    4A00: F3 5B FE C8 88 45 1D 88 45 35 88 45 34 8E DB 57  // .[...E..E5.E4..W
    4A10: 53 BE 80 1C E8 BC BD 5B 5F 0B C9 75 05 06 1F 83  // S......[_..u....
    4A20: 25 FE 32 E4 EB 02 B4 03 B0 4F 8E DB 5E C3 81 FB  // %.2......O..^...
    4A30: FF 81 74 6A 0A FF 75 04 8B C3 EB 21 F6 C7 08 75  // ..tj..u....!...u
    4A40: 63 8B CB B2 01 BE 20 1C E8 0D D1 74 57 E8 61 D3  // c..... ....tW.a.
    4A50: 0A C0 75 0E 66 C1 E8 10 80 E7 80 0A C7 E8 91 04  // ..u.f...........
    4A60: EB 3C E8 79 C1 74 05 E8 9E BE EB 00 E8 9B C2 BE  // .<.y.t..........
    4A70: 20 1C E8 32 BD 74 2D E8 A5 00 E8 2C 00 66 BB 20  //  ..2.t-....,.f. 
    4A80: 1C 00 1C E8 22 D3 BE 00 1C E8 25 D3 66 C1 E8 10  // ....".....%.f...
    4A90: 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 72 BD B0 4F  // ..2....t..@.r..O
    4AA0: 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0 8E C0 BE  // 2....O...V.3....
    4AB0: 20 1C E8 1D D3 8B C8 66 C1 E8 10 8B D0 C1 E9 03  //  ......f........
    4AC0: 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16 84 04 26  // &..J......&....&
    4AD0: C6 06 51 04 00 26 C6 06 50 04 00 26 C6 06 49 04  // ..Q..&..P..&..I.
    4AE0: 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04 10 26 C7  // b&..L...&.....&.
    4AF0: 06 0C 01 B3 64 8C C8 26 A3 0E 01 07 5E C3 01 0F  // ....d..&....^...
    4B00: 00 0A 00 00 00 00 00 40 05 0F FF 00 01 02 03 04  // .......@........
    4B10: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 FC  // ................
    4B20: BA C4 03 B8 00 01 EF B9 04 00 B4 01 BE 96 4A AC  // ..............J.
    4B30: 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03 EF B9 09 00  // ................
    4B40: BA CE 03 32 E4 BE 9A 4A 8A C4 EE AC 42 EE 4A FE  // ...2...J....B.J.
    4B50: C4 E2 F5 BA DA 03 EC B9 14 00 BA C0 03 32 E4 BE  // .............2..
    4B60: A3 4A 8A C4 EE AC EE FE C4 E2 F7 C3 BE 00 1C E8  // .J..............
    4B70: 3F D2 66 C1 E8 10 8B D8 E8 0F D2 75 05 E8 FB D1  // ?.f........u....
    4B80: 75 04 B8 4F 00 C3 B8 4F 03 C3 83 E1 0F 0F 84 BB  // u..O...O........
    4B90: 00 0A D2 75 0C B8 00 1C E8 1D 03 83 C3 11 E9 A6  // ...u............
    4BA0: 00 80 FA 01 75 33 8B FB BB C9 05 B9 08 00 FC E8  // ....u3..........
    4BB0: 3A E6 66 AB 43 E2 F8 66 C1 E7 10 66 C1 EF 10 B9  // :.f.C..f...f....
    4BC0: 00 01 BA 00 01 0E 1F E8 C1 BE 06 1F B8 01 1C B9  // ................
    4BD0: 07 00 8B DF E8 E1 02 EB 6E 80 FA 02 75 6E 8B F3  // ........n...un..
    4BE0: 06 1F FC BB C9 05 B9 08 00 66 AD E8 59 E5 43 E2  // .........f..Y.C.
    4BF0: F8 06 56 0E 1F BB D0 05 E8 F1 E5 8A D0 80 E2 03  // ..V.............
    4C00: 66 C1 E8 10 8B C8 BE 00 1C E8 4C CF BB CE 05 E8  // f.........L.....
    4C10: DA E5 8B C8 66 C1 E8 10 8B D0 B0 18 B7 01 E8 92  // ....f...........
    4C20: B8 5B 07 53 81 C3 00 04 B8 02 1C B9 07 00 E8 87  // .[.S............
    4C30: 02 5E 8B FE 66 C1 E7 10 66 C1 EF 10 B9 00 01 BA  // .^..f...f.......
    4C40: 00 01 0E 1F E8 93 BE B0 4F 32 E4 C3 32 C0 C3 00  // ........O2..2...
    4C50: E8 37 D1 74 53 BE 00 1C 80 FB 00 74 18 80 FB 01  // .7.tS......t....
    4C60: 75 05 E8 75 D1 EB 1D 80 FB 02 75 10 8B C1 E8 28  // u..u......u....(
    4C70: D1 D3 E8 8B C8 E8 CF BD 74 2E EB 08 80 FB 03 75  // ........t......u
    4C80: 24 E8 CC D0 E8 12 D1 8B D8 D3 E3 50 33 C0 BA 00  // $..........P3...
    4C90: 03 3B DA 77 05 BA FF FF EB 04 F7 F3 8B D0 58 8B  // .;.w..........X.
    4CA0: C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03 C3 00 0A DB  // ..O..2...O......
    4CB0: 75 07 8A EF E8 A9 BF EB 05 E8 8E BF 8A F8 B0 4F  // u..............O
    4CC0: 32 E4 C3 00 E8 C3 D0 74 2C BE 00 1C E8 E2 D0 66  // 2......t,......f
    4CD0: C1 E8 10 F6 C4 40 75 1D 0A FF 75 05 E8 1E 00 EB  // .....@u...u.....
    4CE0: 0F 80 FF 01 75 14 BB 13 00 E8 00 E5 D1 E8 8B D0  // ....u...........
    4CF0: B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0 C3 52 53 66  // .O2...O...2..RSf
    4D00: 50 81 E2 FF 02 D1 E2 8B C2 40 66 C1 E0 10 8B C2  // P........@f.....
    4D10: BB 13 00 E8 31 E4 BB 12 00 E8 2B E4 66 58 5B 5A  // ....1.....+.fX[Z
    4D20: C3 9C 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // ....fPfQfRfSfUfV
    4D30: 66 57 0E 1F E8 27 E5 E8 8A FF E8 46 E5 8B EC 89  // fW...'.....F....
    4D40: 56 10 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66  // V..F.f_f^f]f[fZf
    4D50: 59 66 58 07 1F 9D CB E8 30 D0 74 54 F6 C3 7F 75  // YfX.....0.tT...u
    4D60: 38 53 BE 00 1C E8 72 D0 F7 E2 66 C1 E2 10 8B D0  // 8S....r...f.....
    4D70: 66 81 E1 FF FF 00 00 66 03 D1 E8 1C D0 80 E2 FC  // f......f........
    4D80: 66 D3 E2 66 81 E2 FF FF FF 02 8D 5C 18 66 8B C2  // f..f.......\.f..
    4D90: E8 EB E3 5B E8 98 BC EB 0F 80 FB 82 74 C3 80 FB  // ...[........t...
    4DA0: 01 75 0A E8 7D BC 32 FF B0 4F 32 E4 C3 32 C0 C3  // .u..}.2..O2..2..
    4DB0: B0 4F B4 03 C3 E8 D2 CF 74 47 80 FF 20 74 08 66  // .O......tG.. t.f
    4DC0: C1 E7 10 66 C1 EF 10 81 F9 00 01 77 31 0A DB 74  // ...f.......w1..t
    4DD0: 05 80 FB 80 75 10 32 F6 E8 6F BE 3C 06 74 02 B6  // ....u.2..o.<.t..
    4DE0: 01 E8 F6 BC EB 13 80 FB 01 75 13 32 F6 E8 5A BE  // .........u.2..Z.
    4DF0: 3C 06 74 02 B6 01 E8 92 BC B0 4F 32 E4 C3 32 C0  // <.t.......O2..2.
    4E00: C3 B0 4F B4 03 C3 0E 07 BF 7A 92 2E 8B 0E 78 92  // ..O......z....x.
    4E10: B8 4F 00 C3 32 C0 C3 00 0A DB 75 06 B7 04 B3 10  // .O..2.....u.....
    4E20: EB 2F 80 FB 01 75 1D 53 32 C9 0A FF 74 02 B1 01  // ./...u.S2...t...
    4E30: E8 D4 BD B1 01 0A FF 74 02 B1 00 E8 B5 BE E8 9E  // .......t........
    4E40: BB 5B EB 0D 80 FB 02 75 0D E8 CD BD 8A F8 C0 E7  // .[.....u........
    4E50: 02 B0 4F 32 E4 C3 B8 4F 03 C3 80 FB 01 75 09 33  // ..O2...O.....u.3
    4E60: C0 E8 33 BE 74 2B EB 24 80 FB 07 75 24 0A FF 75  // ..3.t+.$...u$..u
    4E70: 0E B0 82 E8 3D B6 0A C9 74 12 B9 03 03 EB 0D 0B  // ....=...t.......
    4E80: C9 B1 00 74 02 B1 03 B0 82 E8 27 B6 B0 4F 32 E4  // ...t......'..O2.
    4E90: C3 B0 4F B4 03 C3 80 E3 01 0A DB 75 05 BB 02 01  // ..O........u....
    4EA0: EB 0C 33 C0 53 E8 4B BE E8 93 C5 5B 74 05 B0 4F  // ..3.S.K....[t..O
    4EB0: 32 E4 C3 B0 4F B4 03 C3 80 FC 1D 72 03 CD 42 C3  // 2...O......r..B.
    4EC0: 1E 06 66 50 66 51 66 52 66 53 66 55 66 56 66 57  // ..fPfQfRfSfUfVfW
    4ED0: 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E FF 94 9A 4E  // ..P.......X....N
    4EE0: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    4EF0: C3 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E FF 94 9A  // ...P.......X....
    4F00: 4E C3 D4 4E 1E 89 37 89 54 89 C9 4F 57 80 89 80  // N..N..7.T..OW...
    4F10: FC 80 7F 81 0D 83 11 83 1A 86 EB 86 6E 87 D5 87  // ............n...
    4F20: 70 89 95 89 3E 8C E2 51 85 90 88 4E 88 4E 88 4E  // p...>..Q...N.N.N
    4F30: 88 4E 88 4E 88 4E 55 91 95 75 E9 76 2E 8E 1E D5  // .N.N.NU..u.v....
    4F40: 03 80 26 87 04 F3 50 8A E0 80 E4 7F E8 C6 01 3B  // ..&...P........;
    4F50: D3 75 02 58 C3 BA CC 03 EC B2 B4 B1 30 26 F6 47  // .u.X........0&.G
    4F60: 09 01 74 0C B2 D4 B1 20 A8 01 75 49 B5 09 EB 06  // ..t.... ..uI....
    4F70: A8 01 74 41 B5 0B 53 E8 67 42 0A FF 5B 75 0B 80  // ..tA..S.gB..[u..
    4F80: 26 88 04 F0 08 2E 88 04 EB 2B 58 80 0E 87 04 08  // &........+X.....
    4F90: 80 26 10 04 CF 08 0E 10 04 89 16 63 04 C7 06 85  // .&.........c....
    4FA0: 04 08 00 C6 06 84 04 18 C7 06 0C 01 A0 5C 8C 0E  // .............\..
    4FB0: 0E 01 CD 42 C3 80 26 10 04 CF 08 0E 10 04 58 53  // ...B..&.......XS
    4FC0: 50 0E 1F 33 C9 8A C8 B2 08 BE 40 1C E8 89 CB E8  // P..3......@.....
    4FD0: 0C BC 74 05 E8 31 B9 EB 00 E8 2E BD BE 40 1C E8  // ..t..1.......@..
    4FE0: C5 B7 58 5B 0F 84 6C FF 2E 8E 1E D5 03 0E 07 E8  // ..X[..l.........
    4FF0: 4B 2A 0E 1F 53 66 BB 40 1C 00 1C E8 AA CD BE 00  // K*..Sf.@........
    5000: 1C B0 20 E8 0A B8 5B 2E 8E 1E D5 03 0E 07 E8 54  // .. ...[........T
    5010: 2F E8 24 00 E8 23 3E E8 D1 01 E8 8E 01 E8 A9 3F  // /.$..#>........?
    5020: 0E 1F BE 00 1C B0 10 E8 E6 B7 E8 2F 2F E8 27 2F  // ...........//.'/
    5030: C3 8B EC C6 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD  // ....F..../......
    5040: 00 E8 52 00 E8 94 0B C3 53 83 C3 0A 8B 16 63 04  // ..R.....S.....c.
    5050: B9 19 00 B8 11 30 EF 32 C0 26 8A 27 EF 43 FE C0  // .....0.2.&.'.C..
    5060: E2 F7 5B 80 C2 06 32 C0 EE C3 53 BA C4 03 83 C3  // ..[...2...S.....
    5070: 05 B9 04 00 B0 01 26 8A 27 3C 01 75 03 80 CC 20  // ......&.'<.u... 
    5080: EF 43 FE C0 E2 F0 5B 26 8A 47 09 BA C2 03 EE B2  // .C....[&.G......
    5090: C4 B8 00 03 EF C3 8B F3 83 C6 23 BA DA 03 26 F6  // ..........#...&.
    50A0: 47 09 01 75 02 B2 BA F6 06 89 04 08 74 1D 83 C6  // G..u........t...
    50B0: 10 EC B9 04 00 B4 10 B2 C0 80 FC 11 74 07 8A C4  // ............t...
    50C0: EE 26 8A 04 EE 46 FE C4 E2 EF C3 53 EC 8B DE B9  // .&...F.....S....
    50D0: 14 00 32 E4 B2 C0 8A C4 EE FE C4 26 8A 07 EE 43  // ..2........&...C
    50E0: E2 F4 8A C4 EE 32 C0 EE 1E 06 E8 81 2E 0B ED 74  // .....2.........t
    50F0: 09 1F 1E B9 10 00 F3 A4 46 A4 07 1F 5B C3 53 83  // ........F...[.S.
    5100: C3 37 B9 09 00 32 C0 BA CE 03 26 8A 27 EF 43 FE  // .7...2....&.'.C.
    5110: C0 E2 F7 5B C3 BB A0 53 0E 07 8B D3 0A E4 7D 01  // ...[...S......}.
    5120: C3 E8 01 00 C3 33 F6 80 FC 03 7F 3C 4A F6 06 89  // .....3.....<J...
    5130: 04 10 75 20 A0 88 04 24 0F 3C 02 7E 24 3C 08 74  // ..u ...$.<.~$<.t
    5140: 20 3C 06 74 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81  //  <.t.<.t..@.....
    5150: C3 C0 04 C3 B0 40 D0 EC F6 E4 03 D8 81 C3 C0 05  // .....@..........
    5160: C3 B0 40 F6 E4 03 D8 C3 80 FC 07 75 11 F6 06 89  // ..@........u....
    5170: 04 10 75 05 81 C3 C0 01 C3 81 C3 40 06 C3 BF 22  // ..u........@..."
    5180: 51 BE 43 51 33 C9 E8 4E 00 C3 04 00 01 05 40 01  // Q.CQ3..N......@.
    5190: 06 80 01 0D 40 03 0E 80 03 0F 40 04 10 80 04 11  // ....@.....@.....
    51A0: 80 06 12 C0 06 13 00 07 62 00 02 53 8A 1E 49 04  // ........b..S..I.
    51B0: 80 FB 07 7F 10 32 FF D1 E3 2E 8B 87 5F 51 A2 65  // .....2......_Q.e
    51C0: 04 88 26 66 04 5B C3 2C 30 28 30 2D 30 29 30 2A  // ..&f.[.,0(0-0)0*
    51D0: 30 2E 30 1E 3F 29 30 2E 38 25 75 07 2E 03 5D 01  // 0.0.?)0.8%u...].
    51E0: 33 F6 C3 83 C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E  // 3.....;.u.......
    51F0: D5 03 F6 06 87 04 80 75 49 83 3E 4C 04 00 74 42  // .......uI.>L..tB
    5200: A0 49 04 B9 00 20 2E 8B 3E DB 03 26 F6 47 33 01  // .I... ..>..&.G3.
    5210: 75 0E 26 F6 47 09 01 75 1B 2E 8B 3E D9 03 EB 14  // u.&.G..u...>....
    5220: 3C 06 7E 0B 2E 8B 3E D7 03 26 8A 67 37 B5 40 66  // <.~...>..&.g7.@f
    5230: 33 C0 EB 06 66 B8 20 07 20 07 8E C7 66 33 FF F3  // 3...f. . ...f3..
    5240: 66 AB 80 26 87 04 7F 07 1F C3 2E 8E 1E D5 03 80  // f..&............
    5250: FB 10 75 03 E9 7A 01 80 FB 20 75 03 E9 9B 01 80  // ..u..z... u.....
    5260: FB 32 75 1F BA CC 03 0A C0 75 09 EC 0C 02 B2 C2  // .2u......u......
    5270: EE E9 F3 00 FE C8 0F 85 F3 00 EC 24 FD B2 C2 EE  // ...........$....
    5280: E9 E4 00 80 FB 35 75 28 3C 80 75 08 80 0E 89 04  // .....5u(<.u.....
    5290: 40 E9 D3 00 F6 06 89 04 40 0F 84 D0 00 0A C0 0F  // @.......@.......
    52A0: 84 CA 00 FE C8 75 06 E8 D8 08 E9 BA 00 E9 BD 00  // .....u..........
    52B0: 80 FB 30 74 03 E9 96 00 50 E8 25 3F 8A EF BA CC  // ..0t....P.%?....
    52C0: 03 EC 8A C8 58 0A C0 75 30 B7 08 F6 C1 01 75 12  // ....X..u0.....u.
    52D0: 0A ED 75 0B A0 10 04 24 30 3C 30 75 10 B7 02 E9  // ..u....$0<0u....
    52E0: 8B 00 A0 10 04 24 30 3C 30 75 02 B7 02 80 26 89  // .....$0<0u....&.
    52F0: 04 6F 80 0E 89 04 80 EB 36 3C 01 75 41 80 26 89  // .o......6<.uA.&.
    5300: 04 6F B7 09 F6 C1 01 75 15 B7 0B A0 10 04 24 30  // .o.....u......$0
    5310: 3C 30 74 1B B7 09 0A ED 74 15 B7 05 EB 11 A0 10  // <0t.....t.......
    5320: 04 24 30 3C 30 75 08 B7 0B 0A ED 74 02 B7 03 8A  // .$0<0u.....t....
    5330: 1E 88 04 80 E3 F0 0A DF 88 1E 88 04 EB 29 3C 02  // .............)<.
    5340: 75 2B 80 26 89 04 6F 80 0E 89 04 10 EB B4 80 FB  // u+.&..o.........
    5350: 31 75 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89 04 08  // 1u...t.<.u......
    5360: EB 05 80 26 89 04 F7 8B EC C6 46 1A 12 C3 80 FB  // ...&......F.....
    5370: 33 75 16 3C 00 74 0B 3C 01 75 EC 80 26 89 04 FD  // 3u.<.t.<.u..&...
    5380: EB E5 80 0E 89 04 02 EB DE 80 FB 34 75 17 3C 00  // ...........4u.<.
    5390: 75 07 80 26 87 04 FE EB CE 3C 01 75 07 80 0E 87  // u..&.....<.u....
    53A0: 04 01 EB C3 C3 80 FB 36 75 26 BB 20 FF 3C 01 74  // .......6u&. .<.t
    53B0: 09 BB 00 DF 3C 00 74 02 EB AD E8 02 00 EB A8 9C  // ....<.t.........
    53C0: FA BA C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE 9D C3  // .......B."......
    53D0: C3 B3 03 B7 00 BA CC 03 EC A8 01 75 02 B7 01 A0  // ...........u....
    53E0: 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B EC 89  // ........%.......
    53F0: 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA C7 06 14 00  // ^..N..F.........
    5400: 82 7A 8C 0E 16 00 9D C3 28 18 08 00 08 09 03 00  // .z......(.......
    5410: 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00  // .c-'(.+.........
    5420: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    5430: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    5440: 00 00 00 00 10 0E 00 FF 28 18 08 00 08 09 03 00  // ........(.......
    5450: 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00  // .c-'(.+.........
    5460: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    5470: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    5480: 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00  // ........P.......
    5490: 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00  // .c_OP.U.........
    54A0: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    54B0: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    54C0: 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00  // ........P.......
    54D0: 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00  // .c_OP.U.........
    54E0: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    54F0: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    5500: 00 00 00 00 10 0E 00 FF 28 18 08 00 40 09 03 00  // ........(...@...
    5510: 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00  // .c-'(.+.........
    5520: 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02  // ................
    5530: 04 06 07 10 11 12 13 14 15 16 17 01 00 03 00 00  // ................
    5540: 00 00 00 00 30 0F 00 FF 28 18 08 00 40 09 03 00  // ....0...(...@...
    5550: 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00  // .c-'(.+.........
    5560: 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02  // ................
    5570: 04 06 07 10 11 12 13 14 15 16 17 01 00 03 00 00  // ................
    5580: 00 00 00 00 30 0F 00 FF 50 18 08 00 40 01 01 00  // ....0...P...@...
    5590: 06 63 5F 4F 50 82 54 80 BF 1F 00 C1 00 00 00 00  // .c_OP.T.........
    55A0: 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17 17 17  // .....(..........
    55B0: 17 17 17 17 17 17 17 17 17 17 17 01 00 01 00 00  // ................
    55C0: 00 00 00 00 00 0D 00 FF 50 18 0E 00 10 00 03 00  // ........P.......
    55D0: 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    55E0: 00 00 83 85 5D 28 0D 63 BA A3 FF 00 08 08 08 08  // ....](.c........
    55F0: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    5600: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    5610: 0A E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    5620: 00 00 EA 8C DF 50 00 E7 04 E3 FF 00 01 02 03 04  // .....P..........
    5630: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 10  // ................
    5640: 00 00 00 00 40 05 0F FF 00 05 11 1C 08 0B 14 28  // ....@..........(
    5650: 0E 18 2D 32 20 24 38 3F 00 05 08 0B 0E 11 14 18  // ..-2 $8?........
    5660: 1C 20 24 28 2D 32 38 3F 07 0C 10 15 1A 18 16 15  // . $(-28?........
    5670: 13 1C 25 2F 38 33 2E 2A 25 27 29 2A 2C 23 19 10  // ..%/83.*%')*,#..
    5680: 23 25 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39 37 34  // #%'*,+*))-27;974
    5690: 32 33 34 35 35 31 2C 27 2F 30 32 33 34 34 33 33  // 234551,'/0234433
    56A0: 32 35 38 3A 3D 3C 3A 39 38 38 39 39 3A 37 34 31  // 258:=<:98899:741
    56B0: 03 05 07 09 0B 0B 0A 09 08 0D 11 15 19 17 15 13  // ................
    56C0: 11 11 12 13 14 0F 0B 07 10 10 12 13 14 13 13 13  // ................
    56D0: 12 14 16 18 1A 19 18 17 16 17 17 17 18 15 14 11  // ................
    56E0: 15 15 16 17 17 17 17 17 16 18 19 1A 1B 1B 1A 19  // ................
    56F0: 19 19 19 19 1A 18 17 16 02 03 04 05 07 06 06 05  // ................
    5700: 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09 06 04  // ................
    5710: 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F 0E 0D  // ................
    5720: 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D 0D 0D  // ................
    5730: 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E 0D 0C  // ................
    5740: 00 00 00 00 00 00 00 00 28 18 08 00 20 09 0F 00  // ........(... ...
    5750: 06 63 2D 27 28 90 2B 80 BF 1F 00 C0 00 00 00 00  // .c-'(.+.........
    5760: 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02 03 04  // ................
    5770: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    5780: 00 00 00 00 00 05 0F FF 50 18 08 00 40 01 0F 00  // ........P...@...
    5790: 06 63 5F 4F 50 82 54 80 BF 1F 00 C0 00 00 00 00  // .c_OP.T.........
    57A0: 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02 03 04  // .....(..........
    57B0: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    57C0: 00 00 00 00 00 05 0F FF 00 05 11 1C 08 0B 25 28  // ..............%(
    57D0: 02 07 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E 32 36  // ... ..(,..%*..26
    57E0: 0F 13 27 2C 1B 20 34 39 06 0B 1F 24 13 18 2C 30  // ..',. 49...$..,0
    57F0: 09 0D 21 26 15 1A 2E 33 13 17 2B 30 1F 24 38 3D  // ..!&...3..+0.$8=
    5800: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    5810: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    5820: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    5830: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    5840: 0E 18 2D 32 20 24 38 3F 50 18 0E 00 80 01 0F 00  // ..-2 $8?P.......
    5850: 06 A2 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    5860: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 08 00 00 18  // ....](.c........
    5870: 18 00 00 00 08 00 00 00 18 00 00 0B 00 05 00 00  // ................
    5880: 00 00 00 00 00 05 05 FF 50 18 0E 00 80 01 0F 00  // ........P.......
    5890: 06 A3 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    58A0: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 01 02 03 04  // ....](.c........
    58B0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    58C0: 00 00 00 00 00 05 0F FF 28 18 0E 00 08 09 03 00  // ........(.......
    58D0: 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00  // ..-'(.+....M....
    58E0: 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04  // ....]..c........
    58F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    5900: 00 00 00 00 10 0E 00 FF 28 18 0E 00 08 09 03 00  // ........(.......
    5910: 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00  // ..-'(.+....M....
    5920: 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04  // ....]..c........
    5930: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    5940: 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00  // ........P.......
    5950: 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    5960: 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04  // ....](.c........
    5970: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    5980: 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00  // ........P.......
    5990: 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    59A0: 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04  // ....](.c........
    59B0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    59C0: 00 00 00 00 10 0E 00 FF 28 18 10 00 08 08 03 00  // ........(.......
    59D0: 02 67 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E 00 00  // .g-'(.+....O....
    59E0: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    59F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    5A00: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    5A10: 02 67 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .g_OP.U....O....
    5A20: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    5A30: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    5A40: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    5A50: 02 66 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .f_OP.U....O....
    5A60: 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08 08 08  // .....(..........
    5A70: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    5A80: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    5A90: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    5AA0: 00 00 EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F 3F 3F  // .....(......????
    5AB0: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F 00 00  // ???????????.....
    5AC0: 00 00 00 00 00 05 01 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    5AD0: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    5AE0: 00 00 EA 8C DF 28 00 E7 04 E3 FF 00 01 02 03 04  // .....(..........
    5AF0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    5B00: 00 00 00 00 00 05 0F FF 28 18 08 00 20 01 0F 00  // ........(... ...
    5B10: 0E 63 5F 4F 50 82 54 80 BF 1F 00 41 00 00 00 00  // .c_OP.T....A....
    5B20: 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02 03 04  // .....(@.........
    5B30: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F 00 00  // ...........A....
    5B40: 00 00 00 00 40 05 0F FF A0 53 00 C0 00 00 00 00  // ....@....S......
    5B50: 00 00 00 00 00 00 00 00 00 5B 00 C0 00 00 00 00  // .........[......
    5B60: 00 00 00 00 00 00 00 00 1A 00 53 92 00 C0 00 00  // ..........S.....
    5B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5B80: 00 00 1E E8 10 00 2E 8E 1E D5 03 E8 B3 36 E8 8A  // .............6..
    5B90: 36 E8 68 1A 1F C3 2E 8E 1E D5 03 C7 06 87 04 60  // 6.h............`
    5BA0: F9 C6 06 8A 04 0B A0 89 04 0C 11 24 17 A2 89 04  // ...........$....
    5BB0: B4 01 E8 65 1E A0 89 04 80 26 10 04 CF 80 0E 10  // ...e.....&......
    5BC0: 04 20 C7 06 63 04 D4 03 B8 03 00 E8 23 F3 C3 1E  // . ..c.......#...
    5BD0: 2E 8E 1E D5 03 0E 07 EB 00 1F C3 F6 06 89 04 08  // ................
    5BE0: 74 01 C3 53 BA C8 03 EC B0 FF B2 C6 EE B2 C8 80  // t..S............
    5BF0: 3E 63 04 B4 75 2F BE 54 5C B9 40 00 33 DB 9C FA  // >c..u/.T\.@.3...
    5C00: 8A C3 EE 8B FB C1 EF 03 83 E7 03 03 FE 2E 8A 05  // ................
    5C10: 42 EE 2E 8A 45 04 EE 2E 8A 45 08 EE FE C3 4A E2  // B...E....E....J.
    5C20: DF 9D E9 85 00 26 8A 47 2B F6 06 89 04 06 74 31  // .....&.G+.....t1
    5C30: B9 F8 00 BF E0 55 3C 08 74 11 B9 40 00 BF 60 57  // .....U<.t..@..`W
    5C40: 3C 38 74 07 3C 3F 74 03 BF A0 57 33 DB 9C FA 8A  // <8t.<?t...W3....
    5C50: C3 EE 2E 8A 01 42 EE EE EE FE C3 4A E2 F1 9D EB  // .....B.....J....
    5C60: 49 3C 08 74 25 3C 38 74 2E 3C 3F 74 2A B9 08 00  // I<.t%<8t.<?t*...
    5C70: 33 DB 51 E8 EC D0 B9 08 00 F7 C3 10 00 74 03 83  // 3.Q..........t..
    5C80: C7 18 E8 67 00 59 E2 EA EB 20 E8 D5 D0 B9 10 00  // ...g.Y... ......
    5C90: 33 DB E8 57 00 EB 13 B9 40 00 33 DB 51 E8 28 00  // 3..W....@.3.Q.(.
    5CA0: 8A C3 E8 7A 2F FE C3 59 E2 F2 5B C3 00 2A 00 2A  // ...z/..Y..[..*.*
    5CB0: 00 2A 00 2A 15 3F 15 3F 15 3F 15 3F 00 2A 00 3F  // .*.*.?.?.?.?.*.?
    5CC0: 00 2A 00 3F 00 2A 00 3F 8B FB C1 EF 02 83 E7 0F  // .*.?.*.?........
    5CD0: 2E 8A B5 44 5C 8B FB D1 EF 83 E7 0F 2E 8A AD 44  // ...D\..........D
    5CE0: 5C 8B FB 83 E7 0F 2E 8A 8D 44 5C C3 9C 8A C3 FA  // \........D\.....
    5CF0: EE 2E 8A 05 42 EE 47 2E 8A 05 EE 47 2E 8A 05 EE  // ....B.G....G....
    5D00: 47 FE C3 4A E2 E7 9D C3 00 00 00 00 00 00 00 00  // G..J............
    5D10: 7E 81 A5 81 BD 99 81 7E 7C FE D6 BA C6 FE 7C 00  // ~......~|.....|.
    5D20: C6 EE FE FE 7C 38 10 00 10 38 7C FE 7C 38 10 00  // ....|8...8|.|8..
    5D30: 10 38 10 EE EE 10 38 00 38 7C FE FE 6C 10 38 00  // .8....8.8|..l.8.
    5D40: 00 18 3C 7E 3C 18 00 00 FF E7 C3 81 C3 E7 FF FF  // ..<~<...........
    5D50: 00 18 3C 66 66 3C 18 00 FF E7 C3 99 99 C3 E7 FF  // ..<ff<..........
    5D60: 1E 0E 1E 36 78 CC CC 78 7E C3 C3 7E 18 7E 18 18  // ...6x..x~..~.~..
    5D70: 1E 1A 1E 18 18 70 F0 60 3E 3E 36 36 F6 66 1E 0C  // .....p.`>>66.f..
    5D80: DB 3C 66 E7 66 3C DB 00 80 C0 F0 F8 F0 C0 80 00  // .<f.f<..........
    5D90: 02 06 1E 3E 1E 06 02 00 18 3C 7E 18 7E 3C 18 00  // ...>.....<~.~<..
    5DA0: 66 66 66 66 66 00 66 00 7F DB 7B 3B 1B 1B 1B 00  // fffff.f...{;....
    5DB0: 3C 66 38 6C 6C 38 CC 78 00 00 00 00 FE FE FE 00  // <f8ll8.x........
    5DC0: 18 3C 7E 18 7E 3C 18 7E 18 3C 7E 18 18 18 18 00  // .<~.~<.~.<~.....
    5DD0: 18 18 18 18 7E 3C 18 00 00 18 1C FE 1C 18 00 00  // ....~<..........
    5DE0: 00 30 70 FE 70 30 00 00 00 00 C0 C0 C0 FE 00 00  // .0p.p0..........
    5DF0: 00 24 66 FF 66 24 00 00 00 10 38 7C 7C FE 00 00  // .$f.f$....8||...
    5E00: 00 FE 7C 7C 38 10 00 00 00 00 00 00 00 00 00 00  // ..||8...........
    5E10: 18 3C 3C 18 18 00 18 00 6C 6C 6C 00 00 00 00 00  // .<<.....lll.....
    5E20: 6C 6C FE 6C FE 6C 6C 00 18 7E C0 7C 06 FC 18 00  // ll.l.ll..~.|....
    5E30: 00 C6 0C 18 30 60 C6 00 38 6C 38 76 CC CC 76 00  // ....0`..8l8v..v.
    5E40: 18 18 30 00 00 00 00 00 18 30 60 60 60 30 18 00  // ..0......0```0..
    5E50: 60 30 18 18 18 30 60 00 00 EE 7C FE 7C EE 00 00  // `0...0`...|.|...
    5E60: 00 18 18 7E 18 18 00 00 00 00 00 00 18 18 30 00  // ...~..........0.
    5E70: 00 00 00 FE 00 00 00 00 00 00 00 00 00 38 38 00  // .............88.
    5E80: 06 0C 18 30 60 C0 80 00 7C C6 CE DE F6 E6 7C 00  // ...0`...|.....|.
    5E90: 18 78 18 18 18 18 7E 00 7C C6 0C 18 30 66 FE 00  // .x....~.|...0f..
    5EA0: 7C C6 06 3C 06 C6 7C 00 0C 1C 3C 6C FE 0C 0C 00  // |..<..|...<l....
    5EB0: FE C0 FC 06 06 C6 7C 00 7C C6 C0 FC C6 C6 7C 00  // ......|.|.....|.
    5EC0: FE C6 06 0C 18 18 18 00 7C C6 C6 7C C6 C6 7C 00  // ........|..|..|.
    5ED0: 7C C6 C6 7E 06 C6 7C 00 00 1C 1C 00 00 1C 1C 00  // |..~..|.........
    5EE0: 00 18 18 00 00 18 18 30 0C 18 30 60 30 18 0C 00  // .......0..0`0...
    5EF0: 00 00 FE 00 00 FE 00 00 60 30 18 0C 18 30 60 00  // ........`0...0`.
    5F00: 7C C6 06 0C 18 00 18 00 7C C6 C6 DE DC C0 7E 00  // |.......|.....~.
    5F10: 38 6C C6 C6 FE C6 C6 00 FC 66 66 7C 66 66 FC 00  // 8l.......ff|ff..
    5F20: 3C 66 C0 C0 C0 66 3C 00 F8 6C 66 66 66 6C F8 00  // <f...f<..lfffl..
    5F30: FE C2 C0 F8 C0 C2 FE 00 FE 62 60 7C 60 60 F0 00  // .........b`|``..
    5F40: 7C C6 C0 C0 DE C6 7C 00 C6 C6 C6 FE C6 C6 C6 00  // |.....|.........
    5F50: 3C 18 18 18 18 18 3C 00 3C 18 18 18 D8 D8 70 00  // <.....<.<.....p.
    5F60: C6 CC D8 F0 D8 CC C6 00 F0 60 60 60 60 62 FE 00  // .........````b..
    5F70: C6 EE FE D6 D6 C6 C6 00 C6 E6 E6 F6 DE CE C6 00  // ................
    5F80: 7C C6 C6 C6 C6 C6 7C 00 FC 66 66 7C 60 60 F0 00  // |.....|..ff|``..
    5F90: 7C C6 C6 C6 C6 D6 7C 06 FC C6 C6 FC D8 CC C6 00  // |.....|.........
    5FA0: 7C C6 C0 7C 06 C6 7C 00 7E 5A 18 18 18 18 3C 00  // |..|..|.~Z....<.
    5FB0: C6 C6 C6 C6 C6 C6 7C 00 C6 C6 C6 C6 6C 38 10 00  // ......|.....l8..
    5FC0: C6 C6 D6 D6 FE EE C6 00 C6 6C 38 38 38 6C C6 00  // .........l888l..
    5FD0: 66 66 66 3C 18 18 3C 00 FE 86 0C 18 30 62 FE 00  // fff<..<.....0b..
    5FE0: 7C 60 60 60 60 60 7C 00 C0 60 30 18 0C 06 02 00  // |`````|..`0.....
    5FF0: 7C 0C 0C 0C 0C 0C 7C 00 10 38 6C C6 00 00 00 00  // |.....|..8l.....
    6000: 00 00 00 00 00 00 00 FF 30 30 18 00 00 00 00 00  // ........00......
    6010: 00 00 78 0C 7C CC 7E 00 E0 60 7C 66 66 66 FC 00  // ..x.|.~..`|fff..
    6020: 00 00 7C C6 C0 C6 7C 00 1C 0C 7C CC CC CC 7E 00  // ..|...|...|...~.
    6030: 00 00 7C C6 FE C0 7C 00 1C 36 30 FC 30 30 78 00  // ..|...|..60.00x.
    6040: 00 00 76 CE C6 7E 06 7C E0 60 7C 66 66 66 E6 00  // ..v..~.|.`|fff..
    6050: 18 00 38 18 18 18 3C 00 0C 00 1C 0C 0C 0C CC 78  // ..8...<........x
    6060: E0 60 66 6C 78 6C E6 00 18 18 18 18 18 18 1C 00  // .`flxl..........
    6070: 00 00 6C FE D6 D6 C6 00 00 00 DC 66 66 66 66 00  // ..l........ffff.
    6080: 00 00 7C C6 C6 C6 7C 00 00 00 DC 66 66 7C 60 F0  // ..|...|....ff|`.
    6090: 00 00 76 CC CC 7C 0C 1E 00 00 DC 66 60 60 F0 00  // ..v..|.....f``..
    60A0: 00 00 7C C0 7C 06 7C 00 30 30 FC 30 30 36 1C 00  // ..|.|.|.00.006..
    60B0: 00 00 CC CC CC CC 76 00 00 00 C6 C6 6C 38 10 00  // ......v.....l8..
    60C0: 00 00 C6 C6 D6 FE 6C 00 00 00 C6 6C 38 6C C6 00  // ......l....l8l..
    60D0: 00 00 C6 C6 CE 76 06 7C 00 00 FC 98 30 64 FC 00  // .....v.|....0d..
    60E0: 0E 18 18 70 18 18 0E 00 18 18 18 00 18 18 18 00  // ...p............
    60F0: 70 18 18 0E 18 18 70 00 76 DC 00 00 00 00 00 00  // p.....p.v.......
    6100: 00 10 38 38 6C 6C FE 00 3C 66 C0 66 3C 18 CC 78  // ..88ll..<f.f<..x
    6110: 00 C6 00 C6 C6 CE 76 00 0E 00 7C C6 FE C0 7C 00  // ......v...|...|.
    6120: 7C C6 78 0C 7C CC 7E 00 C6 00 78 0C 7C CC 7E 00  // |.x.|.~...x.|.~.
    6130: E0 00 78 0C 7C CC 7E 00 38 38 78 0C 7C CC 7E 00  // ..x.|.~.88x.|.~.
    6140: 00 00 7C C0 7C 18 6C 38 7C C6 7C C6 FE C0 7C 00  // ..|.|.l8|.|...|.
    6150: C6 00 7C C6 FE C0 7C 00 E0 00 7C C6 FE C0 7C 00  // ..|...|...|...|.
    6160: 66 00 38 18 18 18 3C 00 7C C6 38 18 18 18 3C 00  // f.8...<.|.8...<.
    6170: 00 00 38 18 18 18 3C 00 C6 38 6C C6 FE C6 C6 00  // ..8...<..8l.....
    6180: 38 38 00 7C C6 FE C6 00 0E 00 FE C0 F8 C0 FE 00  // 88.|............
    6190: 00 00 6C 9A 7E D8 6E 00 7E D8 D8 FE D8 D8 DE 00  // ..l.~.n.~.......
    61A0: 7C C6 00 7C C6 C6 7C 00 00 C6 00 7C C6 C6 7C 00  // |..|..|....|..|.
    61B0: 00 E0 00 7C C6 C6 7C 00 7C C6 00 C6 C6 CE 76 00  // ...|..|.|.....v.
    61C0: 00 E0 00 C6 C6 CE 76 00 18 00 3C 18 18 18 3C 00  // ......v...<...<.
    61D0: C6 38 6C C6 C6 6C 38 00 C6 00 C6 C6 C6 C6 7C 00  // .8l..l8.......|.
    61E0: 00 18 7E D8 D8 7E 18 00 38 6C 60 F0 66 F6 6C 00  // ..~..~..8l`.f.l.
    61F0: C3 66 3C 7E 18 3C 18 00 3E 63 38 0E 63 3E 00 1C  // .f<~.<..>c8.c>..
    6200: 00 3E 61 3C 86 7C 00 1C 0E 00 78 0C 7C CC 7E 00  // .>a<.|....x.|.~.
    6210: 1C 00 38 18 18 18 3C 00 00 0E 00 7C C6 C6 7C 00  // ..8...<....|..|.
    6220: 00 0E 00 CC CC DC 76 00 00 FC 00 BC 66 66 E6 00  // ......v.....ff..
    6230: FE 00 C6 E6 F6 CE C6 00 3E 00 3E 60 67 63 3D 00  // ........>.>`gc=.
    6240: 3E 00 76 CE C6 7E 06 7C 18 00 18 30 60 66 3C 00  // >.v..~.|...0`f<.
    6250: 00 00 00 7C 60 60 00 00 00 00 00 7C 0C 0C 00 00  // ...|``.....|....
    6260: C0 CC D8 30 7C 36 0C 3E C0 CC D8 30 6C 3C 7E 0C  // ...0|6.>...0l<~.
    6270: 18 00 18 18 3C 3C 18 00 00 36 6C D8 6C 36 00 00  // ....<<...6l.l6..
    6280: 00 D8 6C 36 6C D8 00 00 22 88 22 88 22 88 22 88  // ..l6l...".".".".
    6290: 55 AA 55 AA 55 AA 55 AA DD 77 DD 77 DD 77 DD 77  // U.U.U.U..w.w.w.w
    62A0: 18 18 18 18 18 18 18 18 18 18 18 18 F8 18 18 18  // ................
    62B0: 18 18 F8 18 F8 18 18 18 36 36 36 36 F6 36 36 36  // ........6666.666
    62C0: 00 00 00 00 FE 36 36 36 00 00 F8 18 F8 18 18 18  // .....666........
    62D0: 36 36 F6 06 F6 36 36 36 36 36 36 36 36 36 36 36  // 66...66666666666
    62E0: 00 00 FE 06 F6 36 36 36 36 36 F6 06 FE 00 00 00  // .....66666......
    62F0: 36 36 36 36 FE 00 00 00 18 18 F8 18 F8 00 00 00  // 6666............
    6300: 00 00 00 00 F8 18 18 18 18 18 18 18 1F 00 00 00  // ................
    6310: 18 18 18 18 FF 00 00 00 00 00 00 00 FF 18 18 18  // ................
    6320: 18 18 18 18 1F 18 18 18 00 00 00 00 FF 00 00 00  // ................
    6330: 18 18 18 18 FF 18 18 18 18 18 1F 18 1F 18 18 18  // ................
    6340: 36 36 36 36 37 36 36 36 36 36 37 30 3F 00 00 00  // 666676666670?...
    6350: 00 00 3F 30 37 36 36 36 36 36 F7 00 FF 00 00 00  // ..?0766666......
    6360: 00 00 FF 00 F7 36 36 36 36 36 37 30 37 36 36 36  // .....66666707666
    6370: 00 00 FF 00 FF 00 00 00 36 36 F7 00 F7 36 36 36  // ........66...666
    6380: 18 18 FF 00 FF 00 00 00 36 36 36 36 FF 00 00 00  // ........6666....
    6390: 00 00 FF 00 FF 18 18 18 00 00 00 00 FF 36 36 36  // .............666
    63A0: 36 36 36 36 3F 00 00 00 18 18 1F 18 1F 00 00 00  // 6666?...........
    63B0: 00 00 1F 18 1F 18 18 18 00 00 00 00 3F 36 36 36  // ............?666
    63C0: 36 36 36 36 FF 36 36 36 18 18 FF 18 FF 18 18 18  // 6666.666........
    63D0: 18 18 18 18 F8 00 00 00 00 00 00 00 1F 18 18 18  // ................
    63E0: FF FF FF FF FF FF FF FF 00 00 00 00 FF FF FF FF  // ................
    63F0: F0 F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    6400: FF FF FF FF 00 00 00 00 00 00 66 DC D8 DC 66 00  // ..........f...f.
    6410: 00 78 CC F8 CC C6 CC 00 00 FE 62 60 60 60 E0 00  // .x........b```..
    6420: 00 FE 6C 6C 6C 6C 6C 00 FE C6 60 30 60 C6 FE 00  // ..lllll...`0`...
    6430: 00 7E D8 CC CC D8 70 00 00 66 66 66 66 7C C0 00  // .~....p..ffff|..
    6440: 00 76 DC 18 18 18 38 00 FE 38 6C C6 6C 38 FE 00  // .v....8..8l.l8..
    6450: 38 6C C6 FE C6 6C 38 00 38 6C C6 C6 6C 6C EE 00  // 8l...l8.8l..ll..
    6460: 3E 60 38 66 C6 CC 78 00 00 00 7E DB DB 7E 00 00  // >`8f..x...~..~..
    6470: 06 7C DE F6 E6 7C C0 00 38 60 C0 F8 C0 60 38 00  // .|...|..8`...`8.
    6480: 7C C6 C6 C6 C6 C6 C6 00 00 FE 00 FE 00 FE 00 00  // |...............
    6490: 18 18 7E 18 18 00 7E 00 30 18 0C 18 30 00 7E 00  // ..~...~.0...0.~.
    64A0: 0C 18 30 18 0C 00 7E 00 0C 1E 18 18 18 18 18 18  // ..0...~.........
    64B0: 18 18 18 18 18 78 30 00 00 00 18 00 7E 00 18 00  // .....x0.....~...
    64C0: 00 76 DC 00 76 DC 00 00 7C C6 C6 7C 00 00 00 00  // .v..v...|..|....
    64D0: 00 00 00 18 18 00 00 00 00 00 00 00 18 00 00 00  // ................
    64E0: 1F 18 18 18 F8 38 18 00 D8 6C 6C 6C 00 00 00 00  // .....8...lll....
    64F0: 70 D8 30 F8 00 00 00 00 00 00 7C 7C 7C 7C 00 00  // p.0.......||||..
    6500: 00 00 00 00 00 00 00 00 1D 00 00 00 00 24 66 FF  // .............$f.
    6510: 66 24 00 00 00 00 00 00 00 10 00 00 00 00 00 00  // f$..............
    6520: 00 00 00 00 00 00 00 00 00 00 00 00 00 7E 81 A5  // .............~..
    6530: 81 81 BD 99 81 81 7E 00 00 00 00 00 00 7C FE FE  // ......~......|..
    6540: D6 FE FE BA C6 FE 7C 00 00 00 00 00 00 00 6C EE  // ......|.......l.
    6550: FE FE FE FE 7C 38 10 00 00 00 00 00 00 00 10 38  // ....|8.........8
    6560: 7C FE 7C 38 10 00 00 00 00 00 00 00 00 00 10 38  // |.|8...........8
    6570: 38 10 6C EE 6C 10 38 00 00 00 00 00 00 10 38 7C  // 8.l.l.8.......8|
    6580: 7C FE FE FE 6C 10 38 00 00 00 00 00 00 00 00 00  // |...l.8.........
    6590: 18 3C 3C 3C 18 00 00 00 00 00 00 FF FF FF FF FF  // .<<<............
    65A0: E7 C3 C3 C3 E7 FF FF FF FF FF FF 00 00 00 00 18  // ................
    65B0: 3C 66 66 66 3C 18 00 00 00 00 00 FF FF FF FF E7  // <fff<...........
    65C0: C3 99 99 99 C3 E7 FF FF FF FF FF 00 00 1E 0E 1E  // ................
    65D0: 36 78 CC CC CC CC 78 00 00 00 00 00 00 3C 66 66  // 6x....x......<ff
    65E0: 66 3C 18 7E 18 18 18 00 00 00 00 00 00 1E 1A 1E  // f<.~............
    65F0: 18 18 18 18 78 F8 70 00 00 00 00 00 00 3E 36 3E  // ....x.p......>6>
    6600: 36 36 76 F6 66 0E 1E 0C 00 00 00 00 00 18 DB 7E  // 66v.f..........~
    6610: 3C 66 66 3C 7E DB 18 00 00 00 00 00 00 00 80 E0  // <ff<~...........
    6620: F0 FC FE FC F0 E0 80 00 00 00 00 00 00 00 02 0E  // ................
    6630: 3E 7E FE 7E 3E 0E 02 00 00 00 00 00 00 18 3C 7E  // >~.~>.........<~
    6640: 18 18 18 18 7E 3C 18 00 00 00 00 00 00 66 66 66  // ....~<.......fff
    6650: 66 66 66 66 00 66 66 00 00 00 00 00 00 7F DB DB  // ffff.ff.........
    6660: DB DB 7B 1B 1B 1B 1B 00 00 00 00 00 00 7C C6 C6  // ..{..........|..
    6670: 60 7C F6 DE 7C 0C C6 C6 7C 00 00 00 00 00 00 00  // `|..|...|.......
    6680: 00 00 00 FE FE FE FE 00 00 00 00 00 00 18 3C 7E  // ..............<~
    6690: 18 18 18 7E 3C 18 7E 00 00 00 00 00 00 18 3C 7E  // ...~<.~.......<~
    66A0: 18 18 18 18 18 18 18 00 00 00 00 00 00 18 18 18  // ................
    66B0: 18 18 18 18 7E 3C 18 00 00 00 00 00 00 00 00 00  // ....~<..........
    66C0: 0C 0E FF 0E 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    66D0: 30 70 FE 70 30 00 00 00 00 00 00 00 00 00 00 00  // 0p.p0...........
    66E0: 00 C0 C0 C0 FE 00 00 00 00 00 00 00 00 00 00 00  // ................
    66F0: 24 66 FF 66 24 00 00 00 00 00 00 00 00 00 10 38  // $f.f$..........8
    6700: 38 38 7C 7C FE FE 00 00 00 00 00 00 00 00 FE FE  // 88||............
    6710: 7C 7C 7C 38 38 10 00 00 00 00 00 00 00 00 00 00  // |||88...........
    6720: 00 00 00 00 00 00 00 00 00 00 00 00 00 18 3C 3C  // ..............<<
    6730: 3C 3C 18 18 00 18 18 00 00 00 00 00 36 36 36 36  // <<..........6666
    6740: 14 00 00 00 00 00 00 00 00 00 00 00 00 6C 6C 6C  // .............lll
    6750: FE 6C 6C FE 6C 6C 6C 00 00 00 00 00 00 18 18 7C  // .ll.lll........|
    6760: C6 C0 78 3C 06 C6 7C 18 18 00 00 00 00 00 00 00  // ..x<..|.........
    6770: 62 66 0C 18 30 66 C6 00 00 00 00 00 00 38 6C 38  // bf..0f.......8l8
    6780: 30 76 7E CC CC CC 76 00 00 00 00 00 0C 0C 0C 18  // 0v~...v.........
    6790: 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 18 30  // ...............0
    67A0: 30 30 30 30 30 18 0C 00 00 00 00 00 00 30 18 0C  // 00000........0..
    67B0: 0C 0C 0C 0C 0C 18 30 00 00 00 00 00 00 00 00 00  // ......0.........
    67C0: 6C 38 FE 38 6C 00 00 00 00 00 00 00 00 00 00 00  // l8.8l...........
    67D0: 18 18 7E 18 18 00 00 00 00 00 00 00 00 00 00 00  // ..~.............
    67E0: 00 00 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00  // ................
    67F0: 00 00 FE 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6800: 00 00 00 00 00 18 18 00 00 00 00 00 00 00 00 02  // ................
    6810: 06 0C 18 30 60 C0 80 00 00 00 00 00 00 7C C6 C6  // ...0`........|..
    6820: CE DE F6 E6 C6 C6 7C 00 00 00 00 00 00 18 78 18  // ......|.......x.
    6830: 18 18 18 18 18 18 7E 00 00 00 00 00 00 7C C6 C6  // ......~......|..
    6840: 06 0C 18 30 60 C6 FE 00 00 00 00 00 00 7C C6 06  // ...0`........|..
    6850: 06 3C 06 06 06 C6 7C 00 00 00 00 00 00 0C 1C 3C  // .<....|........<
    6860: 6C CC CC FE 0C 0C 1E 00 00 00 00 00 00 FE C0 C0  // l...............
    6870: C0 FC 06 06 06 C6 7C 00 00 00 00 00 00 7C C6 C0  // ......|......|..
    6880: C0 FC C6 C6 C6 C6 7C 00 00 00 00 00 00 FE C6 06  // ......|.........
    6890: 0C 18 30 30 30 30 30 00 00 00 00 00 00 7C C6 C6  // ..00000......|..
    68A0: C6 7C C6 C6 C6 C6 7C 00 00 00 00 00 00 7C C6 C6  // .|....|......|..
    68B0: C6 C6 7E 06 06 C6 7C 00 00 00 00 00 00 00 00 00  // ..~...|.........
    68C0: 0C 0C 00 00 0C 0C 00 00 00 00 00 00 00 00 00 00  // ................
    68D0: 0C 0C 00 00 0C 0C 0C 18 00 00 00 00 00 00 0C 18  // ................
    68E0: 30 60 C0 60 30 18 0C 00 00 00 00 00 00 00 00 00  // 0`.`0...........
    68F0: 00 FE 00 FE 00 00 00 00 00 00 00 00 00 00 60 30  // ..............`0
    6900: 18 0C 06 0C 18 30 60 00 00 00 00 00 00 7C C6 C6  // .....0`......|..
    6910: 0C 18 18 18 00 18 18 00 00 00 00 00 00 7C C6 C6  // .............|..
    6920: C6 DE DE DE DC C0 7E 00 00 00 00 00 00 38 6C C6  // ......~......8l.
    6930: C6 C6 FE C6 C6 C6 C6 00 00 00 00 00 00 FC 66 66  // ..............ff
    6940: 66 7C 66 66 66 66 FC 00 00 00 00 00 00 3C 66 C2  // f|ffff.......<f.
    6950: C0 C0 C0 C0 C2 66 3C 00 00 00 00 00 00 F8 6C 66  // .....f<.......lf
    6960: 66 66 66 66 66 6C F8 00 00 00 00 00 00 FE 66 60  // fffffl........f`
    6970: 64 7C 64 60 60 66 FE 00 00 00 00 00 00 FE 66 60  // d|d``f........f`
    6980: 64 7C 64 60 60 60 F0 00 00 00 00 00 00 7C C6 C6  // d|d```.......|..
    6990: C0 C0 C0 CE C6 C6 7C 00 00 00 00 00 00 C6 C6 C6  // ......|.........
    69A0: C6 FE C6 C6 C6 C6 C6 00 00 00 00 00 00 3C 18 18  // .............<..
    69B0: 18 18 18 18 18 18 3C 00 00 00 00 00 00 3C 18 18  // ......<......<..
    69C0: 18 18 18 18 D8 D8 70 00 00 00 00 00 00 C6 C6 CC  // ......p.........
    69D0: D8 F0 F0 D8 CC C6 C6 00 00 00 00 00 00 F0 60 60  // ..............``
    69E0: 60 60 60 60 62 66 FE 00 00 00 00 00 00 C6 C6 EE  // ````bf..........
    69F0: EE FE D6 D6 D6 C6 C6 00 00 00 00 00 00 C6 C6 E6  // ................
    6A00: E6 F6 DE CE CE C6 C6 00 00 00 00 00 00 7C C6 C6  // .............|..
    6A10: C6 C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 FC 66 66  // ......|.......ff
    6A20: 66 66 7C 60 60 60 F0 00 00 00 00 00 00 7C C6 C6  // ff|```.......|..
    6A30: C6 C6 C6 C6 D6 D6 7C 06 00 00 00 00 00 FC 66 66  // ......|.......ff
    6A40: 66 7C 78 6C 66 66 E6 00 00 00 00 00 00 7C C6 C0  // f|xlff.......|..
    6A50: C0 70 1C 06 06 C6 7C 00 00 00 00 00 00 7E 5A 18  // .p....|......~Z.
    6A60: 18 18 18 18 18 18 3C 00 00 00 00 00 00 C6 C6 C6  // ......<.........
    6A70: C6 C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 C6 C6  // ......|.........
    6A80: C6 C6 C6 C6 6C 38 10 00 00 00 00 00 00 C6 C6 C6  // ....l8..........
    6A90: D6 D6 D6 FE EE C6 C6 00 00 00 00 00 00 C6 C6 C6  // ................
    6AA0: 6C 38 38 6C C6 C6 C6 00 00 00 00 00 00 66 66 66  // l88l.........fff
    6AB0: 66 66 3C 18 18 18 3C 00 00 00 00 00 00 FE C6 86  // ff<...<.........
    6AC0: 0C 18 30 60 C2 C6 FE 00 00 00 00 00 00 7C 60 60  // ..0`.........|``
    6AD0: 60 60 60 60 60 60 7C 00 00 00 00 00 00 00 00 80  // ``````|.........
    6AE0: C0 60 30 18 0C 06 02 00 00 00 00 00 00 7C 0C 0C  // .`0..........|..
    6AF0: 0C 0C 0C 0C 0C 0C 7C 00 00 00 00 00 10 38 6C C6  // ......|......8l.
    6B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6B10: 00 00 00 00 00 00 00 00 FF 00 00 00 18 18 18 0C  // ................
    6B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6B30: 78 0C 7C CC CC DC 76 00 00 00 00 00 00 E0 60 60  // x.|...v.......``
    6B40: 7C 66 66 66 66 66 FC 00 00 00 00 00 00 00 00 00  // |fffff..........
    6B50: 7C C6 C0 C0 C0 C6 7C 00 00 00 00 00 00 1C 0C 0C  // |.....|.........
    6B60: 7C CC CC CC CC CC 7E 00 00 00 00 00 00 00 00 00  // |.....~.........
    6B70: 7C C6 C6 FE C0 C6 7C 00 00 00 00 00 00 1C 36 30  // |.....|.......60
    6B80: 30 FC 30 30 30 30 78 00 00 00 00 00 00 00 00 00  // 0.0000x.........
    6B90: 76 CE C6 C6 CE 76 06 C6 7C 00 00 00 00 E0 60 60  // v....v..|.....``
    6BA0: 7C 66 66 66 66 66 E6 00 00 00 00 00 00 18 18 00  // |fffff..........
    6BB0: 38 18 18 18 18 18 3C 00 00 00 00 00 00 0C 0C 00  // 8.....<.........
    6BC0: 1C 0C 0C 0C 0C 0C CC CC 78 00 00 00 00 E0 60 60  // ........x.....``
    6BD0: 66 66 6C 78 6C 66 E6 00 00 00 00 00 00 18 18 18  // fflxlf..........
    6BE0: 18 18 18 18 18 18 1C 00 00 00 00 00 00 00 00 00  // ................
    6BF0: 6C FE D6 D6 C6 C6 C6 00 00 00 00 00 00 00 00 00  // l...............
    6C00: DC 66 66 66 66 66 66 00 00 00 00 00 00 00 00 00  // .ffffff.........
    6C10: 7C C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 00 00 00  // |.....|.........
    6C20: DC 66 66 66 66 7C 60 60 F0 00 00 00 00 00 00 00  // .ffff|``........
    6C30: 76 CC CC CC CC 7C 0C 0C 1E 00 00 00 00 00 00 00  // v....|..........
    6C40: DC 66 60 60 60 60 F0 00 00 00 00 00 00 00 00 00  // .f````..........
    6C50: 7C C6 C0 7C 06 C6 7C 00 00 00 00 00 00 30 30 30  // |..|..|......000
    6C60: FC 30 30 30 30 36 1C 00 00 00 00 00 00 00 00 00  // .00006..........
    6C70: CC CC CC CC CC CC 76 00 00 00 00 00 00 00 00 00  // ......v.........
    6C80: C6 C6 C6 C6 6C 38 10 00 00 00 00 00 00 00 00 00  // ....l8..........
    6C90: C6 C6 D6 D6 D6 FE 6C 00 00 00 00 00 00 00 00 00  // ......l.........
    6CA0: C6 C6 6C 38 6C C6 C6 00 00 00 00 00 00 00 00 00  // ..l8l...........
    6CB0: C6 C6 C6 C6 CE 76 06 C6 7C 00 00 00 00 00 00 00  // .....v..|.......
    6CC0: FE 86 0C 18 30 62 FE 00 00 00 00 00 00 0E 18 18  // ....0b..........
    6CD0: 18 70 18 18 18 18 0E 00 00 00 00 00 00 18 18 18  // .p..............
    6CE0: 18 00 18 18 18 18 18 00 00 00 00 00 00 70 18 18  // .............p..
    6CF0: 18 0E 18 18 18 18 70 00 00 00 00 00 00 76 DC 00  // ......p......v..
    6D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6D10: 10 38 38 6C 6C FE 00 00 00 00 00 00 00 3C 66 C0  // .88ll........<f.
    6D20: C0 C0 C6 66 3C 18 0C CC 38 00 00 00 00 C6 00 00  // ...f<...8.......
    6D30: C6 C6 C6 C6 C6 CE 76 00 00 00 00 00 0C 18 30 00  // ......v.......0.
    6D40: 7C C6 C6 FE C0 C6 7C 00 00 00 00 00 30 78 CC 00  // |.....|.....0x..
    6D50: 78 0C 7C CC CC DC 76 00 00 00 00 00 00 CC 00 00  // x.|...v.........
    6D60: 78 0C 7C CC CC DC 76 00 00 00 00 00 60 30 18 00  // x.|...v.....`0..
    6D70: 78 0C 7C CC CC DC 76 00 00 00 00 00 38 6C 38 00  // x.|...v.....8l8.
    6D80: 78 0C 7C CC CC DC 76 00 00 00 00 00 00 00 00 7C  // x.|...v........|
    6D90: C6 C0 C0 C6 7C 18 0C 6C 38 00 00 00 30 78 CC 00  // ....|..l8...0x..
    6DA0: 7C C6 C6 FE C0 C6 7C 00 00 00 00 00 00 CC 00 00  // |.....|.........
    6DB0: 7C C6 C6 FE C0 C6 7C 00 00 00 00 00 30 18 0C 00  // |.....|.....0...
    6DC0: 7C C6 C6 FE C0 C6 7C 00 00 00 00 00 00 66 00 00  // |.....|......f..
    6DD0: 38 18 18 18 18 18 3C 00 00 00 00 00 18 3C 66 00  // 8.....<......<f.
    6DE0: 38 18 18 18 18 18 3C 00 00 00 00 00 00 00 00 00  // 8.....<.........
    6DF0: 38 18 18 18 18 18 3C 00 00 00 00 00 C6 00 38 6C  // 8.....<.......8l
    6E00: C6 C6 C6 FE C6 C6 C6 00 00 00 00 38 6C 38 00 38  // ...........8l8.8
    6E10: 6C C6 C6 FE C6 C6 C6 00 00 00 00 0C 18 30 00 FE  // l............0..
    6E20: 60 60 7C 60 60 60 FE 00 00 00 00 00 00 00 00 66  // ``|```.........f
    6E30: DB 1B 7F D8 D8 DF 76 00 00 00 00 00 00 7E D8 D8  // ......v......~..
    6E40: D8 D8 FE D8 D8 D8 DE 00 00 00 00 00 30 78 CC 00  // ............0x..
    6E50: 7C C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 00 00  // |.....|.........
    6E60: 7C C6 C6 C6 C6 C6 7C 00 00 00 00 00 30 18 0C 00  // |.....|.....0...
    6E70: 7C C6 C6 C6 C6 C6 7C 00 00 00 00 00 30 78 CC 00  // |.....|.....0x..
    6E80: C6 C6 C6 C6 C6 CE 76 00 00 00 00 00 60 30 18 00  // ......v.....`0..
    6E90: C6 C6 C6 C6 C6 CE 76 00 00 00 00 00 18 00 3C 18  // ......v.......<.
    6EA0: 18 18 18 18 18 18 3C 00 00 00 00 00 C6 00 7C C6  // ......<.......|.
    6EB0: C6 C6 C6 C6 C6 C6 7C 00 00 00 00 00 C6 00 C6 C6  // ......|.........
    6EC0: C6 C6 C6 C6 C6 C6 7C 00 00 00 00 00 00 18 18 7C  // ......|........|
    6ED0: C6 C0 C0 C6 7C 18 18 00 00 00 00 00 38 6C 60 60  // ....|.......8l``
    6EE0: F0 60 60 60 66 F6 6C 00 00 00 00 00 66 66 66 66  // .```f.l.....ffff
    6EF0: 3C 18 7E 18 3C 18 18 00 00 00 00 00 00 3E 63 63  // <.~.<........>cc
    6F00: 30 1C 06 63 63 3E 00 1C 00 00 00 00 00 00 00 00  // 0..cc>..........
    6F10: 3E 63 38 0E 63 3E 00 1C 00 00 00 00 0C 18 30 00  // >c8.c>........0.
    6F20: 78 0C 7C CC CC DC 76 00 00 00 00 00 0C 18 30 00  // x.|...v.......0.
    6F30: 38 18 18 18 18 18 3C 00 00 00 00 00 0C 18 30 00  // 8.....<.......0.
    6F40: 7C C6 C6 C6 C6 C6 7C 00 00 00 00 00 18 30 60 00  // |.....|......0`.
    6F50: CC CC CC CC CC DC 76 00 00 00 00 00 00 76 DC 00  // ......v......v..
    6F60: BC 66 66 66 66 66 E6 00 00 00 00 00 76 DC 00 C6  // .fffff......v...
    6F70: C6 E6 F6 DE CE C6 C6 00 00 00 00 00 21 1E 00 1E  // ............!...
    6F80: 33 60 60 67 63 33 1D 00 00 00 00 00 42 3C 00 3B  // 3``gc3......B<.;
    6F90: 66 66 66 3E 06 66 3C 00 00 00 00 00 00 30 30 00  // fff>.f<......00.
    6FA0: 30 30 30 60 C6 C6 7C 00 00 00 00 00 00 00 00 00  // 000`..|.........
    6FB0: 00 00 7E 60 60 60 00 00 00 00 00 00 00 00 00 00  // ..~```..........
    6FC0: 00 00 7E 06 06 06 00 00 00 00 00 00 60 60 62 66  // ..~.........``bf
    6FD0: 6C 18 30 60 DC 36 0C 18 3E 00 00 00 60 60 62 66  // l.0`.6..>...``bf
    6FE0: 6C 18 36 6E DE 36 7E 06 06 00 00 00 00 18 18 00  // l.6n.6~.........
    6FF0: 18 18 3C 3C 3C 3C 18 00 00 00 00 00 00 00 00 00  // ..<<<<..........
    7000: 36 6C D8 6C 36 00 00 00 00 00 00 00 00 00 00 00  // 6l.l6...........
    7010: D8 6C 36 6C D8 00 00 00 00 00 00 11 44 11 44 11  // .l6l........D.D.
    7020: 44 11 44 11 44 11 44 11 44 11 44 AA 55 AA 55 AA  // D.D.D.D.D.D.U.U.
    7030: 55 AA 55 AA 55 AA 55 AA 55 AA 55 DD 77 DD 77 DD  // U.U.U.U.U.U.w.w.
    7040: 77 DD 77 DD 77 DD 77 DD 77 DD 77 18 18 18 18 18  // w.w.w.w.w.w.....
    7050: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7060: 18 18 F8 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7070: F8 18 F8 18 18 18 18 18 18 18 18 36 36 36 36 36  // ...........66666
    7080: 36 36 F6 36 36 36 36 36 36 36 36 00 00 00 00 00  // 66.66666666.....
    7090: 00 00 FE 36 36 36 36 36 36 36 36 00 00 00 00 00  // ...66666666.....
    70A0: F8 18 F8 18 18 18 18 18 18 18 18 36 36 36 36 36  // ...........66666
    70B0: F6 06 F6 36 36 36 36 36 36 36 36 36 36 36 36 36  // ...6666666666666
    70C0: 36 36 36 36 36 36 36 36 36 36 36 00 00 00 00 00  // 66666666666.....
    70D0: FE 06 F6 36 36 36 36 36 36 36 36 36 36 36 36 36  // ...6666666666666
    70E0: F6 06 FE 00 00 00 00 00 00 00 00 36 36 36 36 36  // ...........66666
    70F0: 36 36 FE 00 00 00 00 00 00 00 00 18 18 18 18 18  // 66..............
    7100: F8 18 F8 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7110: 00 00 F8 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7120: 18 18 1F 00 00 00 00 00 00 00 00 18 18 18 18 18  // ................
    7130: 18 18 FF 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7140: 00 00 FF 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7150: 18 18 1F 18 18 18 18 18 18 18 18 00 00 00 00 00  // ................
    7160: 00 00 FF 00 00 00 00 00 00 00 00 18 18 18 18 18  // ................
    7170: 18 18 FF 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7180: 1F 18 1F 18 18 18 18 18 18 18 18 36 36 36 36 36  // ...........66666
    7190: 36 36 37 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6676666666666666
    71A0: 37 30 3F 00 00 00 00 00 00 00 00 00 00 00 00 00  // 70?.............
    71B0: 3F 30 37 36 36 36 36 36 36 36 36 36 36 36 36 36  // ?076666666666666
    71C0: F7 00 FF 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    71D0: FF 00 F7 36 36 36 36 36 36 36 36 36 36 36 36 36  // ...6666666666666
    71E0: 37 30 37 36 36 36 36 36 36 36 36 00 00 00 00 00  // 70766666666.....
    71F0: FF 00 FF 00 00 00 00 00 00 00 00 36 36 36 36 36  // ...........66666
    7200: F7 00 F7 36 36 36 36 36 36 36 36 18 18 18 18 18  // ...66666666.....
    7210: FF 00 FF 00 00 00 00 00 00 00 00 36 36 36 36 36  // ...........66666
    7220: 36 36 FF 00 00 00 00 00 00 00 00 00 00 00 00 00  // 66..............
    7230: FF 00 FF 18 18 18 18 18 18 18 18 00 00 00 00 00  // ................
    7240: 00 00 FF 36 36 36 36 36 36 36 36 36 36 36 36 36  // ...6666666666666
    7250: 36 36 3F 00 00 00 00 00 00 00 00 18 18 18 18 18  // 66?.............
    7260: 1F 18 1F 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7270: 1F 18 1F 18 18 18 18 18 18 18 18 00 00 00 00 00  // ................
    7280: 00 00 3F 36 36 36 36 36 36 36 36 36 36 36 36 36  // ..?6666666666666
    7290: 36 36 FF 36 36 36 36 36 36 36 36 18 18 18 18 18  // 66.66666666.....
    72A0: FF 18 FF 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    72B0: 18 18 F8 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    72C0: 00 00 1F 18 18 18 18 18 18 18 18 FF FF FF FF FF  // ................
    72D0: FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00  // ................
    72E0: 00 00 00 FF FF FF FF FF FF FF FF F0 F0 F0 F0 F0  // ................
    72F0: F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F  // ................
    7300: 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF FF  // ................
    7310: FF FF FF 00 00 00 00 00 00 00 00 00 00 00 00 76  // ...............v
    7320: DC D8 D8 D8 D8 DC 76 00 00 00 00 00 00 78 CC CC  // ......v......x..
    7330: D8 FC C6 C6 C6 C6 CC 00 00 00 00 00 00 FE 66 62  // ..............fb
    7340: 60 60 60 60 60 60 60 00 00 00 00 00 00 00 00 00  // ```````.........
    7350: FE 6C 6C 6C 6C 6C 6C 00 00 00 00 00 00 FE C6 62  // .llllll........b
    7360: 30 18 18 30 62 C6 FE 00 00 00 00 00 00 00 00 00  // 0..0b...........
    7370: 7E D8 CC CC CC D8 70 00 00 00 00 00 00 00 00 66  // ~.....p........f
    7380: 66 66 66 66 7C 60 C0 80 00 00 00 00 00 00 00 00  // ffff|`..........
    7390: 76 DC 18 18 18 18 18 00 00 00 00 00 00 FE 38 38  // v.............88
    73A0: 6C C6 C6 6C 38 38 FE 00 00 00 00 00 00 00 38 6C  // l..l88........8l
    73B0: C6 C6 FE C6 C6 6C 38 00 00 00 00 00 00 38 6C C6  // .....l8......8l.
    73C0: C6 C6 C6 6C 6C 6C EE 00 00 00 00 00 00 3E 60 60  // ...lll.......>``
    73D0: 3C 66 C6 C6 C6 CC 78 00 00 00 00 00 00 00 00 00  // <f....x.........
    73E0: 7E DB DB DB 7E 00 00 00 00 00 00 00 00 02 06 7C  // ~...~..........|
    73F0: CE DE F6 F6 7C 60 C0 00 00 00 00 00 00 00 1C 30  // ....|`.........0
    7400: 60 60 7C 60 60 30 1C 00 00 00 00 00 00 7C C6 C6  // ``|``0.......|..
    7410: C6 C6 C6 C6 C6 C6 C6 00 00 00 00 00 00 00 00 FE  // ................
    7420: 00 00 FE 00 00 FE 00 00 00 00 00 00 00 00 00 18  // ................
    7430: 18 7E 18 18 00 00 7E 00 00 00 00 00 00 30 18 0C  // .~....~......0..
    7440: 06 0C 18 30 00 00 7E 00 00 00 00 00 00 0C 18 30  // ...0..~........0
    7450: 60 30 18 0C 00 00 7E 00 00 00 00 00 00 00 00 0C  // `0....~.........
    7460: 1E 1A 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7470: 18 18 18 18 18 58 78 30 00 00 00 00 00 00 00 18  // .....Xx0........
    7480: 18 00 7E 00 18 18 00 00 00 00 00 00 00 00 00 00  // ..~.............
    7490: 00 76 DC 00 76 DC 00 00 00 00 00 00 00 78 CC CC  // .v..v........x..
    74A0: 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // x...............
    74B0: 00 00 18 18 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    74C0: 00 00 00 18 00 00 00 00 00 00 00 00 00 1F 18 18  // ................
    74D0: 18 18 18 D8 D8 78 38 18 00 00 00 00 00 D8 6C 6C  // .....x8.......ll
    74E0: 6C 6C 6C 00 00 00 00 00 00 00 00 00 00 70 D8 18  // lll..........p..
    74F0: 30 60 F8 00 00 00 00 00 00 00 00 00 00 00 00 00  // 0`..............
    7500: 7E 7E 7E 7E 7E 7E 00 00 00 00 00 00 00 00 00 00  // ~~~~~~..........
    7510: 00 00 00 00 00 00 00 00 00 00 00 1D 00 00 00 00  // ................
    7520: 00 24 66 FF 66 24 00 00 00 00 00 00 2F 00 00 00  // .$f.f$....../...
    7530: 01 03 06 0C 18 30 60 C0 80 00 00 00 00 30 00 00  // .....0`......0..
    7540: 7E C3 C3 C3 DB DB C3 C3 C3 7E 00 00 00 00 4D 00  // ~........~....M.
    7550: 00 C3 C3 E7 FF FF DB DB C3 C3 C3 00 00 00 00 54  // ...............T
    7560: 00 00 FF 99 18 18 18 18 18 18 18 3C 00 00 00 00  // ...........<....
    7570: 56 00 00 C3 C3 C3 C3 C3 C3 C3 66 3C 18 00 00 00  // V.........f<....
    7580: 00 57 00 00 C3 C3 C3 C3 DB DB DB DB FF 66 00 00  // .W...........f..
    7590: 00 00 58 00 00 C3 C3 C3 66 3C 3C 66 C3 C3 C3 00  // ..X.....f<<f....
    75A0: 00 00 00 59 00 00 C3 C3 C3 C3 66 3C 18 18 18 3C  // ...Y......f<...<
    75B0: 00 00 00 00 5C 00 00 00 80 C0 60 30 18 0C 06 03  // ....\.....`0....
    75C0: 01 00 00 00 00 6D 00 00 00 00 00 66 FF DB DB DB  // .....m.....f....
    75D0: C3 C3 00 00 00 00 76 00 00 00 00 00 C3 C3 C3 C3  // ......v.........
    75E0: 66 3C 18 00 00 00 00 77 00 00 00 00 00 C3 C3 DB  // f<.....w........
    75F0: DB DB FF 66 00 00 00 00 00 00 B3 64 C3 0B DB 74  // ...f.......d...t
    7600: 03 E9 46 01 57 32 C0 B9 40 00 F3 AA 5F BB 43 92  // ..F.W2..@..._.C.
    7610: 26 89 1D 26 8C 4D 02 2E 8E 1E D5 03 57 BE 49 04  // &..&.M......W.I.
    7620: B9 1E 00 83 C7 04 FC 8A 04 26 88 05 46 47 E2 F7  // .........&..FG..
    7630: 5F A0 84 04 FE C0 26 88 45 22 A1 85 04 26 89 45  // _.....&.E"...&.E
    7640: 23 57 E8 9C 1B 5F 26 88 5D 25 26 88 7D 26 8A 1E  // #W..._&.]%&.}&..
    7650: 49 04 E8 FC 05 74 05 80 FB 13 7F 1D 32 FF D1 E3  // I....t......2...
    7660: 2E 8A 87 1B 92 32 E4 0A C0 74 01 40 26 89 45 27  // .....2...t.@&.E'
    7670: 2E 8A 87 1C 92 26 88 45 29 A1 85 04 8A 16 84 04  // .....&.E).......
    7680: FE C2 F6 E2 B2 00 3D C8 00 7E 15 B2 01 3D 5E 01  // ......=..~...=^.
    7690: 7E 0E B2 02 3D 90 01 7E 07 B2 03 3D E0 01 7E 00  // ~...=..~...=..~.
    76A0: 26 88 55 2A 8A 26 87 04 8A C4 24 01 C0 E0 04 80  // &.U*.&....$.....
    76B0: E4 02 D0 E4 0A E0 80 F4 10 A0 89 04 24 0A 0A E0  // ............$...
    76C0: E8 94 08 B2 C0 B0 30 EE 42 EC 24 08 C0 E0 02 0A  // ......0.B.$.....
    76D0: C4 0C 01 26 88 45 2D B0 03 26 88 45 31 E8 77 08  // ...&.E-..&.E1.w.
    76E0: 1E 06 32 D2 C4 1E A8 04 8C C1 8C CE 3B CE 74 34  // ..2.........;.t4
    76F0: 26 C5 77 04 8C D9 0B F1 74 03 80 CA 10 26 C5 77  // &.w.....t....&.w
    7700: 0C 8C D9 0B F1 74 03 80 CA 08 26 C5 77 08 8C D9  // .....t....&.w...
    7710: 0B F1 74 03 80 CA 04 26 C5 77 10 8C D9 0B F1 74  // ..t....&.w.....t
    7720: 03 80 CA 01 07 1F 26 88 55 32 B0 03 BA C4 03 E8  // ......&.U2......
    7730: E4 04 8A E0 C0 EC 02 8A D4 8A F2 D0 EE 81 E2 04  // ................
    7740: 04 25 03 03 0B C2 26 89 45 2B 8B EC C6 46 1A 1B  // .%....&.E+...F..
    7750: C3 0A C0 74 0F FE C8 74 36 FE C8 74 56 8B EC C6  // ...t...t6..tV...
    7760: 46 1A 00 C3 B8 20 00 F6 C1 01 74 03 83 C0 60 F6  // F.... ....t...`.
    7770: C1 02 74 03 83 C0 3A F6 C1 04 74 03 05 03 03 83  // ..t...:...t.....
    7780: C0 3F C1 E8 06 8B EC 89 46 0E C6 46 1A 1C C3 8B  // .?......F..F....
    7790: FB 83 C7 20 F6 C1 01 74 03 E8 85 00 F6 C1 02 74  // ... ...t.......t
    77A0: 03 E8 EF 00 F6 C1 04 74 03 E8 F8 01 8B EC C6 46  // .......t.......F
    77B0: 1A 1C C3 F6 C1 01 74 06 E8 D9 14 E8 25 01 F6 C1  // ......t.....%...
    77C0: 02 74 03 E8 85 01 F6 C1 04 74 03 E8 12 02 EB DC  // .t.......t......
    77D0: 8A C4 EE 42 EC AA FE C4 4A E2 F5 C3 E8 6B 04 BD  // ...B....J....k..
    77E0: C0 03 B9 15 00 32 E4 EC 87 EA 8A C4 EE 42 EC AA  // .....2.......B..
    77F0: FE C4 4A 87 EA E2 F0 EC 87 EA B0 20 EE C3 26 8A  // ..J........ ..&.
    7800: 05 88 04 47 46 E2 F7 C3 26 8A 25 EF 47 FE C0 E2  // ...GF...&.%.G...
    7810: F7 C3 B2 C0 8A C4 EE 26 8A 05 47 FE C4 EE E2 F4  // .......&..G.....
    7820: C3 9C FA 51 57 8B C7 2B C3 26 89 07 8B F7 E8 0A  // ...QW..+.&......
    7830: 04 EC 26 88 44 01 26 89 54 41 B2 CE EC 26 88 44  // ..&.D.&.TA...&.D
    7840: 02 B2 CC EC 26 88 44 09 B2 CA EC 26 88 44 04 B2  // ....&.D....&.D..
    7850: C4 EC 26 88 04 83 C7 05 B9 04 00 B4 01 E8 70 FF  // ..&...........p.
    7860: 26 8A 04 EE 8B FE 83 C7 0A 26 8B 54 41 32 E4 B9  // &........&.TA2..
    7870: 19 00 E8 5B FF 26 8A 44 01 EE E8 5F FF B2 CE 32  // ...[.&.D..._...2
    7880: E4 B9 09 00 E8 49 FF 26 8A 44 02 EE 5F 59 83 C7  // .....I.&.D.._Y..
    7890: 60 9D C3 9C FA 8B C7 2B C3 26 89 47 02 51 57 2E  // `......+.&.G.QW.
    78A0: 8E 1E D5 03 A0 10 04 24 30 AA BE 49 04 B9 1E 00  // .......$0..I....
    78B0: F3 A4 BE 84 04 B1 07 F3 A4 BE A8 04 B1 04 F3 A4  // ................
    78C0: BE 14 00 B1 04 F3 A4 BE 74 00 B1 04 F3 A4 BE 7C  // ........t......|
    78D0: 00 B1 04 F3 A4 BE 0C 01 B1 04 F3 A4 5F 59 83 C7  // ............_Y..
    78E0: 3A 9D C3 9C FA 26 8B 3F 03 FB 8B F7 51 8B FE 83  // :....&.?....Q...
    78F0: C7 05 BA C4 03 B8 00 01 EF B0 01 B9 04 00 E8 07  // ................
    7900: FF 47 B2 C2 26 8A 44 09 EE B2 C4 B8 00 03 EF 26  // .G..&.D........&
    7910: 8A 04 EE 26 8B 54 41 B8 11 00 EF B1 19 32 C0 E8  // ...&.TA......2..
    7920: E6 FE 26 8A 44 01 EE 80 C2 06 26 8A 44 04 EE EC  // ..&.D.....&.D...
    7930: B1 15 32 E4 E8 DB FE B0 20 EE B1 09 32 C0 B2 CE  // ..2..... ...2...
    7940: E8 C5 FE 26 8A 44 02 EE 59 9D C3 9C FA 26 8B 7F  // ...&.D..Y....&..
    7950: 02 03 FB 06 51 2E 8E 1E D5 03 26 8A 05 80 26 10  // ....Q.....&...&.
    7960: 04 CF 08 06 10 04 47 BE 49 04 B9 1E 00 E8 8E FE  // ......G.I.......
    7970: BE 84 04 B1 07 E8 86 FE BE A8 04 B1 04 E8 7E FE  // ..............~.
    7980: BE 14 00 B1 04 E8 76 FE BE 74 00 B1 04 E8 6E FE  // ......v..t....n.
    7990: BE 7C 00 B1 04 E8 66 FE BE 0C 01 B1 04 E8 5E FE  // .|....f.......^.
    79A0: 59 07 9D C3 9C FA 8B C7 2B C3 26 89 47 04 E8 A6  // Y.......+.&.G...
    79B0: 05 B2 C0 B0 34 EE 42 EC 26 88 05 BA C8 03 EC 26  // ....4.B.&......&
    79C0: 88 45 01 50 4A 4A EC 26 88 45 02 83 C7 03 B9 00  // .E.PJJ.&.E......
    79D0: 03 42 32 C0 EE 42 42 EC AA E2 FC 58 4A EE 9D C3  // .B2..BB....XJ...
    79E0: 9C FA 26 8B 77 04 03 F3 E8 6C 05 B2 C0 B0 34 EE  // ..&.w....l....4.
    79F0: 26 8A 04 EE BA C6 03 26 8A 44 02 EE 56 42 42 83  // &......&.D..VBB.
    7A00: C6 03 32 C0 EE 42 B9 00 03 26 8A 04 EE 46 E2 F9  // ..2..B...&...F..
    7A10: 5E FE CA 26 8A 44 01 EE 9D C3 BA CC 03 EC 24 FE  // ^..&.D........$.
    7A20: 0A C4 B2 C2 EE C3 E8 6B 12 B2 C0 86 C4 EE EB 00  // .......k........
    7A30: EB 00 86 C4 EE EB 00 EB 00 B0 20 EE C3 50 8A E0  // .......... ..P..
    7A40: 80 E4 80 80 26 87 04 7F 08 26 87 04 24 7F 8A E0  // ....&....&..$...
    7A50: 3C 07 7E 1E 26 F6 47 33 01 75 17 3C 23 74 13 3C  // <.~.&.G3.u.<#t.<
    7A60: 32 74 0F 3C 33 74 0B B4 03 26 F6 47 09 01 75 02  // 2t.<3t...&.G..u.
    7A70: B4 07 88 26 49 04 BA B4 03 80 0E 87 04 02 26 F6  // ...&I.........&.
    7A80: 47 09 01 74 07 B2 D4 80 26 87 04 FD 89 16 63 04  // G..t....&.....c.
    7A90: C7 06 4E 04 00 00 C6 06 62 04 00 B9 08 00 BF 50  // ..N.....b......P
    7AA0: 04 FC 06 1E 07 33 C0 F3 AB 07 26 8A 07 32 E4 A3  // .....3....&..2..
    7AB0: 4A 04 26 8A 47 01 A2 84 04 26 8A 47 02 A3 85 04  // J.&.G....&.G....
    7AC0: 26 8B 47 03 A3 4C 04 26 8B 47 14 86 C4 A3 60 04  // &.G..L.&.G....`.
    7AD0: 58 C3 52 32 E4 33 D2 B0 0D CD 17 F6 C4 29 75 08  // X.R2.3.......)u.
    7AE0: 32 E4 33 D2 B0 0A CD 17 5A C3 06 1E 60 2E 8E 1E  // 2.3.....Z...`...
    7AF0: D5 03 2E 83 0E DF 03 00 75 6E 80 3E 00 05 01 74  // ........un.>...t
    7B00: 67 C6 06 00 05 01 8A 1E 62 04 32 FF D1 E3 8B FB  // g.......b.2.....
    7B10: 8B 85 50 04 8A 3E 62 04 50 32 F6 8A 0E 84 04 32  // ..P..>b.P2.....2
    7B20: ED 41 51 8B 0E 4A 04 32 D2 E8 A6 FF F6 C4 29 75  // .AQ..J.2......)u
    7B30: 3D 51 52 89 95 50 04 B4 08 E8 7C D3 0A C0 75 02  // =QR..P....|...u.
    7B40: B0 20 33 D2 32 E4 CD 17 F6 C4 29 75 1F 5A FE C2  // . 3.2.....)u.Z..
    7B50: 59 E2 DE FE C6 59 E2 CA E8 77 FF 32 C0 A2 00 05  // Y....Y...w.2....
    7B60: 58 89 85 50 04 E8 AF 03 61 1F 07 CF 5A 59 59 B0  // X..P....a...ZYY.
    7B70: FF EB EA 52 2A F5 38 C6 7D 02 32 C0 2E 8E 06 D7  // ...R*.8.}.2.....
    7B80: 03 5A C3 A0 85 04 F6 E3 8A F7 8B D8 8B CA BA C4  // .Z..............
    7B90: 03 B8 02 0F EF B4 02 E8 6D 00 8B D1 32 ED 8A E6  // ........m...2...
    7BA0: 8A C6 F3 AA 03 FD 8A CA 4B 75 F7 32 E4 E8 57 00  // ........Ku.2..W.
    7BB0: C3 53 8A 1E 62 04 0B C0 75 04 0A DB 74 03 E8 35  // .S..b...u...t..5
    7BC0: 03 5B 8B F8 2B D1 81 C2 01 01 8A C3 32 E4 C3 8A  // .[..+.......2...
    7BD0: C6 32 F6 2B EA 0A DB 74 2A 2A C3 F6 26 85 04 8B  // .2.+...t**..&...
    7BE0: C8 52 B4 01 E8 20 00 B2 C4 B8 02 0F EF 5A 1E 06  // .R... .......Z..
    7BF0: 1F 8B C1 8B CA F3 A4 03 F5 03 FD 48 75 F5 1F E8  // ...........Hu...
    7C00: 81 FF C3 8A D8 EB F8 BA CE 03 B0 05 EE 42 EC 24  // .............B.$
    7C10: FC 0A C4 EE 4A C3 9C FA EE 42 EB 00 EC 4A 9D C3  // ....J....B...J..
    7C20: 1E 2E 8E 1E D5 03 8B 16 63 04 80 C2 06 1F C3 1E  // ........c.......
    7C30: 2E 8E 1E D5 03 8B 16 63 04 1F C3 50 BA CC 03 EC  // .......c...P....
    7C40: B2 D4 A8 01 75 02 B2 B4 58 C3 E8 EE FF 80 C2 06  // ....u...X.......
    7C50: C3 1E 2E 8E 1E D5 03 80 3E 49 04 03 74 13 80 3E  // ........>I..t..>
    7C60: 49 04 02 74 0C 80 3E 49 04 01 74 05 80 3E 49 04  // I..t..>I..t..>I.
    7C70: 00 1F C3 50 2E 8E 06 D9 03 A0 10 04 24 30 3C 30  // ...P........$0<0
    7C80: 74 05 2E 8E 06 DB 03 58 0B C0 74 03 E8 E1 01 03  // t......X..t.....
    7C90: 06 4E 04 81 C2 01 01 2B D1 32 ED 8B 2E 4A 04 8B  // .N.....+.2...J..
    7CA0: F8 8B F0 8B C5 F6 E3 D1 E0 D1 E5 0A DB 75 02 8A  // .............u..
    7CB0: DE 38 F3 7E 02 8A DE C3 FC 8A D8 8B C1 E8 B3 FF  // .8.~............
    7CC0: 03 F0 3A 16 4A 04 74 06 06 1F E8 1B 00 C3 06 1F  // ..:.J.t.........
    7CD0: E8 40 00 C3 FC 8A D8 8A C1 8A E6 E8 95 FF F7 DD  // .@..............
    7CE0: 2B F0 06 1F E8 01 00 C3 53 8A CE 2A CB 32 ED 32  // +.......S..*.2.2
    7CF0: F6 2B EA 2B EA E3 0E 8A E1 8B CA F3 A5 03 F5 03  // .+.+............
    7D00: FD FE CC 75 F4 58 B0 20 8A CA F3 AB 03 FD FE CB  // ...u.X. ........
    7D10: 75 F6 C3 53 8A C6 2A C3 74 06 F6 E2 8B C8 F3 A5  // u..S..*.t.......
    7D20: 58 8B C8 F6 E2 91 B0 20 F3 AB C3 8B D8 E8 2E 00  // X...... ........
    7D30: 2E 8E 1E DB 03 8A C3 22 DF D3 E3 A8 80 74 03 30  // .......".....t.0
    7D40: 1C C3 F6 D7 8A 34 22 F7 0A DE 88 1C C3 8A FC E8  // .....4".........
    7D50: 0C 00 2E 8E 1E DB 03 8A 04 D2 E8 22 C7 C3 B0 28  // ..........."...(
    7D60: F6 E2 F6 C2 01 74 03 05 D8 1F 8B F1 C1 EE 02 80  // .....t..........
    7D70: FF 05 7F 0C 03 F0 F6 D1 80 E1 03 D0 E1 B7 03 C3  // ................
    7D80: D1 EE 03 F0 F6 D1 80 E1 07 B7 01 C3 FC 8A D8 2E  // ................
    7D90: 8E 06 DB 03 8B C1 E8 86 00 75 02 8A DE 03 F0 E8  // .........u......
    7DA0: 24 00 C3 FC 8A D8 2E 8E 06 DB 03 8A C1 8A E6 E8  // $...............
    7DB0: 6D 00 75 02 8A DE F7 DD 81 C6 F0 00 81 C7 F0 00  // m.u.............
    7DC0: 2B F0 E8 01 00 C3 8A CE 2A CB E3 2C 51 8A CA 56  // +.......*..,Q..V
    7DD0: 57 D1 E9 F3 A5 13 C9 F3 A4 8A CA 2B F1 2B F9 81  // W..........+.+..
    7DE0: C6 00 20 81 C7 00 20 D1 E9 F3 A5 13 C9 F3 A4 5F  // .. ... ........_
    7DF0: 5E 03 F5 03 FD 59 E2 D4 8A C7 8A E7 8A CA 57 D1  // ^....Y........W.
    7E00: E9 F3 AB 13 C9 F3 AA 8A CA 2B F9 81 C7 00 20 D1  // .........+.... .
    7E10: E9 F3 AB 13 C9 F3 AA 5F 03 FD FE CB 75 DE C3 E8  // ......._....u...
    7E20: B0 00 81 C2 01 01 2B D1 38 F3 76 02 32 DB 51 B1  // ......+.8.v.2.Q.
    7E30: 02 D2 E6 D2 E3 59 32 ED BD 50 00 80 3E 49 04 06  // .....Y2..P..>I..
    7E40: 74 04 D0 E2 D1 E0 06 1F 8B F8 8B F0 B0 50 F6 E3  // t............P..
    7E50: 0A DB C3 52 53 8A DF 32 FF D1 E3 8B 87 50 04 E8  // ...RS..2.....P..
    7E60: 0E 00 50 D1 EB A1 4C 04 F7 E3 5B 03 C3 5B 5A C3  // ..P...L...[..[Z.
    7E70: 52 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 5A C3  // R...J...2.....Z.
    7E80: 8B E8 83 E5 0F 2E 8A A6 30 7E 8B E8 C1 ED 04 83  // ........0~......
    7E90: E5 0F 2E 8A 86 30 7E C3 00 03 0C 0F 30 33 3C 3F  // .....0~.....03<?
    7EA0: C0 C3 CC CF F0 F3 FC FF 26 8B 04 86 E0 BA 00 80  // ........&.......
    7EB0: F6 C4 C0 74 02 0A D6 D0 EE C1 E0 02 75 F2 88 56  // ...t........u..V
    7EC0: 00 45 C3 8B 16 63 04 8A C5 86 E0 EF 8A E1 FE C0  // .E...c..........
    7ED0: EF C3 52 8B D0 8A C4 F6 26 4A 04 C1 E0 02 32 F6  // ..R.....&J....2.
    7EE0: 03 C2 5A C3 53 8A DF 32 FF D1 E3 8B 87 50 04 D1  // ..Z.S..2.....P..
    7EF0: EB E8 02 00 5B C3 52 8B D0 32 F6 52 8A C4 F6 26  // ....[.R..2.R...&
    7F00: 85 04 F7 26 4A 04 5A 03 C2 0A DB 74 08 03 06 4C  // ...&J.Z....t...L
    7F10: 04 FE CB 75 F8 5A C3 52 8B D0 A0 4A 04 F6 E4 32  // ...u.Z.R...J...2
    7F20: F6 03 C2 D1 E0 03 06 4E 04 D1 F8 8B C8 B4 0E E8  // .......N........
    7F30: 91 FF 5A C3 8B C2 F7 26 4A 04 8B F9 C1 EF 03 03  // ..Z....&J.......
    7F40: F8 0A FF 74 0A 8A C7 32 E4 F7 26 4C 04 03 F8 80  // ...t...2..&L....
    7F50: E1 07 B4 80 D2 EC C3 E8 F0 FC EC C3 E8 F8 FF B2  // ................
    7F60: C0 B0 20 EE C3 E8 EF FF B2 C0 32 C0 EE C3 C4 3E  // .. .......2....>
    7F70: A8 04 26 C4 7D 04 8C C5 0B EF C3 53 B0 0E E8 95  // ..&.}......S....
    7F80: FC 8A E0 B0 0F E8 8E FC 8B D8 B8 0E AA EF B8 0F  // ................
    7F90: 55 EF B0 0E E8 7F FC 3C AA 74 0D B0 0F E8 76 FC  // U......<.t....v.
    7FA0: 3C 55 74 04 32 C0 5B C3 B0 0E 8A E7 EF FE C0 8A  // <Ut.2.[.........
    7FB0: E3 EF B0 01 0A C0 5B C3 8A EE 8A 36 85 04 06 1F  // ......[....6....
    7FC0: 0A DB 74 25 8A C5 2A C3 F6 E6 8B C8 52 32 F6 C1  // ..t%..*.....R2..
    7FD0: E2 02 8B C2 D1 E2 2B D5 51 8B C8 F3 A5 2B FA 2B  // ......+.Q....+.+
    7FE0: F2 59 E2 F4 5A E8 05 00 C3 8A DD EB F8 8A C6 F6  // .Y..Z...........
    7FF0: E3 8B C8 8A C7 8A E0 32 F6 C1 E2 02 8B DA D1 E2  // .......2........
    8000: 8B F1 2B D5 8B CB F3 AB 2B FA 4E 75 F7 C3 2E 8E  // ..+.....+.Nu....
    8010: 1E D5 03 89 0E 60 04 8A C5 24 60 A8 20 74 06 B9  // .....`...$`. t..
    8020: 00 1E E9 94 00 F6 06 87 04 01 0F 85 8B 00 80 3E  // ...............>
    8030: 49 04 07 74 06 E8 19 FC 74 01 C3 F6 06 87 04 08  // I..t....t.......
    8040: 74 03 CD 42 C3 8A 36 85 04 8A D6 FE CA 38 CD 7E  // t..B..6......8.~
    8050: 1F 0A C9 74 64 8A E9 8A CE FE C9 EB 5C 38 D1 74  // ...td.......\8.t
    8060: 58 8A CE 80 FD 03 7C 04 8A E9 D0 ED FE C9 EB 49  // X.....|........I
    8070: 80 F9 03 7E 44 8A E1 2A E5 0A E4 75 0A 38 CA 74  // ...~D..*...u.8.t
    8080: 38 FE CA 38 CA 74 32 8A C5 0A C1 38 F0 7E 0A 80  // 8..8.t2....8.~..
    8090: FC 02 7E 12 80 FD 02 7F C8 80 FC 03 7D BF 8A D6  // ..~.........}...
    80A0: FE CA 38 D1 74 13 8A CE FE C9 FE C9 8A E9 2A EC  // ..8.t.........*.
    80B0: 80 FE 08 7F 04 FE C1 FE C5 B4 0A E8 05 FE C3 2E  // ................
    80C0: 8E 1E D5 03 A2 62 04 32 E4 8B F0 F7 26 4C 04 A3  // .....b.2....&L..
    80D0: 4E 04 8B C8 E8 7A FB 74 07 80 3E 49 04 07 77 02  // N....z.t..>I..w.
    80E0: D1 F9 B4 0C E8 DC FD D1 E6 8B 84 50 04 E8 27 FE  // ...........P..'.
    80F0: C3 2E 8E 1E D5 03 8A 26 49 04 E8 7E 9C 74 07 C7  // .......&I..~.t..
    8100: 06 50 04 00 00 C3 E8 48 FB 74 0B 80 FC 07 74 06  // .P.....H.t....t.
    8110: 77 08 E8 77 FC C3 E8 9F FB C3 80 FC 13 7C 03 74  // w..w.........|.t
    8120: 1F C3 E8 4E FA 8A D8 8B C1 E8 85 FA 8B 2E 4A 04  // ...N..........J.
    8130: 52 F6 26 85 04 F7 E5 8B F7 03 F0 5A E8 90 FA C3  // R.&........Z....
    8140: E8 30 FA 8A D8 8B C1 E8 67 FA C1 E7 03 52 8B 2E  // .0......g....R..
    8150: 4A 04 C1 E5 03 F7 26 85 04 F7 E5 8B F7 03 F0 5A  // J.....&........Z
    8160: E8 55 FE C3 2E 8E 1E D5 03 8A 26 49 04 E8 E1 FA  // .U........&I....
    8170: 74 0C 80 FC 07 74 07 77 40 80 FC 03 7F 04 E8 53  // t....t.w@......S
    8180: FB C3 E8 1E FC C3 E8 EA F9 8A D8 8A C1 8A E6 FE  // ................
    8190: C4 E8 1D FA 2B 3E 4A 04 C1 E7 03 52 F7 26 85 04  // ....+>J....R.&..
    81A0: F7 26 4A 04 C1 E0 03 8B F7 2B F0 5A 8B 2E 4A 04  // .&J......+.Z..J.
    81B0: C1 E5 03 F7 DD E8 00 FE C3 80 FC 13 7C 03 74 C6  // ............|.t.
    81C0: C3 E8 AF F9 8A D8 8A C1 8A E6 FE C4 E8 E2 F9 52  // ...............R
    81D0: 8B 2E 4A 04 F7 26 85 04 F7 E5 2B FD 8B F7 2B F0  // ..J..&....+...+.
    81E0: 5A F7 DD E8 E9 F9 C3 2E 8E 1E D5 03 2E 8E 06 DB  // Z...............
    81F0: 03 E8 5D FA 74 11 80 3E 49 04 07 7C 18 2E 8E 06  // ..].t..>I..|....
    8200: D9 03 74 03 E9 B1 00 E8 49 FC 8B D8 26 8B 07 8B  // ..t.....I...&...
    8210: EC 89 46 1A C3 A1 50 04 E8 B7 FC 8B F0 BB 08 00  // ..F...P.........
    8220: 2B E3 8B EC 80 3E 49 04 06 75 1F B9 04 00 26 8A  // +....>I..u....&.
    8230: 04 88 46 00 45 26 8A 84 00 20 88 46 00 45 83 C6  // ..F.E&... .F.E..
    8240: 50 E2 EB B8 00 02 B2 80 EB 17 D1 E6 B9 04 00 E8  // P...............
    8250: 56 FC 81 C6 00 20 E8 4F FC 81 EE B0 1F E2 F0 EB  // V.... .O........
    8260: E2 2B EB C4 3E 0C 01 32 F6 80 FB 0E 75 09 26 83  // .+..>..2....u.&.
    8270: 7D FE 10 75 02 B6 80 16 1F 8B F5 8B CB F6 C6 80  // }..u............
    8280: 74 01 47 56 57 F3 A6 5F 5E 74 23 FE C0 03 FB F6  // t.GVW.._^t#.....
    8290: C6 80 74 01 47 FE CA 75 E2 FE CC 74 0F 2E 8E 1E  // ..t.G..u...t....
    82A0: D5 03 C4 3E 7C 00 B0 80 B2 80 EB CB 32 C0 8B E5  // ...>|.......2...
    82B0: 03 E3 8B EC 89 46 1A C3 80 3E 49 04 13 7C 05 75  // .....F...>I..|.u
    82C0: 02 EB 5A C3 2E 8E 06 D7 03 E8 18 FC 8B F0 8B 1E  // ..Z.............
    82D0: 85 04 2B E3 8B EC B8 05 08 B9 05 00 BA CE 03 80  // ..+.............
    82E0: 3E 49 04 0F 72 1A F6 06 87 04 60 75 13 B4 0A F7  // >I..r.....`u....
    82F0: C6 01 00 75 02 B4 05 B0 07 EF B8 05 18 B9 05 01  // ...u............
    8300: EF 51 8B CB 26 8A 04 F6 D0 88 46 00 45 03 36 4A  // .Q..&.....F.E.6J
    8310: 04 E2 F1 58 EF B8 00 01 32 D2 E9 44 FF 2E 8E 06  // ...X....2..D....
    8320: D7 03 A1 50 04 8B D0 32 F6 52 8A C4 32 E4 F7 26  // ...P...2.R..2..&
    8330: 4A 04 F7 26 85 04 5A 03 C2 8B F0 8B 1E 85 04 2B  // J..&..Z........+
    8340: E3 8B EC 53 8B 3E 4A 04 4F C1 E7 03 C1 E6 03 B9  // ...S.>J.O.......
    8350: 08 00 32 E4 26 8A 04 D0 E4 0A C0 74 03 80 CC 01  // ..2.&......t....
    8360: 46 E2 F1 88 66 00 45 03 F7 4B 75 E3 5B B8 00 01  // F...f.E..Ku.[...
    8370: 32 D2 E9 EC FE 33 ED EB 03 BD 01 00 2E 8E 1E D5  // 2....3..........
    8380: 03 2E 8E 06 DB 03 8A 26 49 04 E8 C4 F8 74 0F 2E  // .......&I....t..
    8390: 8E 06 D9 03 80 FC 07 74 05 7C 3D E9 0B 02 8A E3  // .......t.|=.....
    83A0: 8B F0 8A DF 32 FF D1 E3 8B 87 50 04 8B D0 A0 4A  // ....2.....P....J
    83B0: 04 F6 E4 32 F6 03 C2 8B F8 D1 E7 0A DB 74 0B D0  // ...2.........t..
    83C0: EB A1 4C 04 03 F8 FE CB 75 FA 8B C6 0B ED 75 03  // ..L.....u.....u.
    83D0: F3 AB C3 AA 47 E2 FC C3 50 2E 8E 06 DB 03 A1 50  // ....G...P......P
    83E0: 04 E8 EE FA 8B F8 A0 50 04 8A 26 4A 04 8B E8 58  // .......P..&J...X
    83F0: A8 80 74 08 24 7F C5 36 7C 00 EB 04 C5 36 0C 01  // ..t.$..6|....6..
    8400: 8A FC 32 E4 C1 E0 03 03 F0 80 FF 06 74 69 D1 E7  // ..2.........ti..
    8410: 8A F3 B0 55 80 E3 03 F6 E3 8A D8 8A F8 8B C5 50  // ...U...........P
    8420: B2 04 F6 C6 80 75 27 AC E8 55 FA 23 C3 AB AC E8  // .....u'..U.#....
    8430: 4E FA 23 C3 26 89 85 FE 1F 83 C7 4E FE CA 75 E7  // N.#.&......N..u.
    8440: 83 EE 08 81 EF 3E 01 58 E8 72 00 E2 D2 C3 AC E8  // .....>.X.r......
    8450: 2E FA 23 C3 26 31 05 AC E8 25 FA 23 C3 26 31 85  // ..#.&1...%.#.&1.
    8460: 00 20 83 C7 50 FE CA 75 E5 83 EE 08 81 EF 3E 01  // . ..P..u......>.
    8470: 58 E8 49 00 E2 A9 C3 8B C5 50 B2 04 F6 C3 80 74  // X.I......P.....t
    8480: 1F AC 26 30 05 AC 26 30 85 00 20 83 C7 50 FE CA  // ..&0..&0.. ..P..
    8490: 7F EF 83 EE 08 81 EF 3F 01 58 E8 20 00 E2 DA C3  // .......?.X. ....
    84A0: AC AA AC 26 88 85 FF 1F 83 C7 4F FE CA 7F F1 83  // ...&......O.....
    84B0: EE 08 81 EF 3F 01 58 E8 03 00 E2 BD C3 FE C0 38  // ....?.X........8
    84C0: E0 72 06 32 C0 81 C7 F0 00 C3 8A 16 85 04 F6 E2  // .r.2............
    84D0: 8B F0 32 F6 8B EA 66 0F B6 06 51 04 F6 E2 66 0F  // ..2...f...Q...f.
    84E0: B7 16 4A 04 83 FA 64 75 03 BA 68 00 83 FA 5A 75  // ..J...du..h...Zu
    84F0: 03 BA 60 00 81 FA AF 00 75 03 BA B0 00 52 F7 E2  // ..`.....u....R..
    8500: 66 0F B7 F8 66 0F B6 06 50 04 66 03 F8 66 C1 CF  // f...f...P.f..f..
    8510: 10 03 FA 66 C1 C7 03 81 CF 00 FF 66 C1 C7 10 5A  // ...f.......f...Z
    8520: 8A E2 4A C1 E2 03 A0 50 04 50 C5 06 0C 01 03 F0  // ..J....P.P......
    8530: 2E 8E 06 D7 03 58 57 51 50 9C FC 8B CD E8 3B 00  // .....XWQP.....;.
    8540: B5 08 AC 8A E0 8A C7 D0 E4 73 02 8A C3 26 88 05  // .........s...&..
    8550: 66 47 FE CD 75 EF 66 03 FA E2 E2 9D 58 59 5F 83  // fG..u.f.....XY_.
    8560: C7 08 FE C0 38 E0 72 0E 51 32 C0 8B CD 49 03 FA  // ....8.r.Q2...I..
    8570: 83 C7 08 E2 F9 59 2B F5 E2 BC C3 06 52 33 C0 8E  // .....Y+.....R3..
    8580: C0 66 C1 C7 10 8B C7 66 C1 C7 10 E8 ED 97 74 16  // .f.....f......t.
    8590: 38 E0 74 12 0F B6 D0 E8 63 C7 8A E0 66 C1 C7 10  // 8.t.....c...f...
    85A0: 8B F8 66 C1 C7 10 5A 07 C3 80 FC 13 7C 0B 0F 84  // ..f...Z.....|...
    85B0: 18 FF 80 FC 62 0F 84 11 FF E8 01 00 C3 80 FC 11  // ....b...........
    85C0: 75 06 80 E3 80 80 CB 0F 50 53 8A DF 32 FF D1 E3  // u.......PS..2...
    85D0: 8B 97 50 04 5B 2E 8E 06 D7 03 E8 07 F9 8B F8 8B  // ..P.[...........
    85E0: 2E 85 04 58 32 F6 52 8B 36 4A 04 56 8A 26 85 04  // ...X2.R.6J.V.&..
    85F0: C5 36 0C 01 80 FC 0E 75 09 83 7C FE 10 75 03 B4  // .6.....u..|..u..
    8600: 10 46 F6 E4 03 F0 B6 03 F6 C3 80 75 6D B2 C4 B8  // .F.........um...
    8610: 02 0F EF 5A 58 50 52 4A 8A E0 57 51 51 57 8B CD  // ...ZXPRJ..WQQW..
    8620: 32 C0 AA 03 FA E2 FB 5F 47 FE C4 38 D4 76 0A 32  // 2......_G..8.v.2
    8630: E4 8B CD 49 03 FA 47 E2 FB 59 E2 E0 59 5F BA C4  // ...I..G..Y..Y_..
    8640: 03 B0 02 8A E3 EF 5B 4B 5A 51 57 8B CD AC 26 8A  // ......[KZQW...&.
    8650: 25 AA 03 FB E2 F7 5F 47 2B F5 42 3B D3 76 0A 33  // %....._G+.B;.v.3
    8660: D2 8B CD 49 03 FB 47 E2 FB 59 E2 DD BA CE 03 B8  // ...I..G..Y......
    8670: 03 00 EF B2 C4 B8 02 0F EF C3 B2 CE B8 03 18 EF  // ................
    8680: EB BC 2E 8E 1E D5 03 80 3E 63 04 B4 74 0B BA CC  // ........>c..t...
    8690: 03 EC A8 01 75 04 CD 42 C3 C3 E8 D1 F8 0A FF 75  // ....u..B.......u
    86A0: 1C 8A E3 80 E4 1F 80 26 66 04 E0 08 26 66 04 E8  // .......&f...&f..
    86B0: 2D 00 8A 1E 66 04 80 E3 20 B1 05 D2 EB E8 91 F5  // -...f... .......
    86C0: 74 19 A0 66 04 24 DF 80 E3 01 74 02 0C 20 A2 66  // t..f.$....t.. .f
    86D0: 04 24 10 0C 02 0A D8 E8 53 00 C3 E8 7E F8 C3 53  // .$......S...~..S
    86E0: 50 80 E3 0F 8A FB D0 E3 81 E3 10 07 0A DF E8 60  // P..............`
    86F0: F5 74 0E B4 00 8A C3 E8 2C F3 0B ED 74 03 26 88  // .t......,...t.&.
    8700: 1D 8A C3 E8 0B 00 0B ED 74 04 26 88 5D 10 58 5B  // ........t.&.].X[
    8710: C3 8A E0 1E 2E 8E 1E D5 03 80 3E 49 04 33 1F 7F  // ..........>I.3..
    8720: 08 8A C4 B4 11 E8 FE F2 C3 E8 30 F8 C3 9C FA E8  // ..........0.....
    8730: 62 05 B2 C0 B9 03 00 B4 01 8A C4 EE 8A C3 EE 0B  // b...............
    8740: ED 74 04 47 26 88 1D FE C4 80 C3 02 E2 EB B0 20  // .t.G&.......... 
    8750: EE 9D C3 2E 8E 1E D5 03 8A 26 49 04 E8 F2 F4 74  // .........&I....t
    8760: 0A 80 FC 07 77 06 74 03 E8 C0 F5 C3 80 FC 13 7C  // ....w.t........|
    8770: 03 74 4C C3 8A D8 E8 BB F7 BA CE 03 B0 08 EF 2E  // .tL.............
    8780: 8E 1E D7 03 F6 C3 80 75 1C B2 C4 B8 02 FF EF 8A  // .......u........
    8790: 25 C6 05 00 8A E3 EF 8A 25 B4 FF 88 25 EF B2 CE  // %.......%...%...
    87A0: B8 08 FF EF C3 B8 03 18 EF B2 C4 B0 02 8A E3 EF  // ................
    87B0: 8A 25 B4 FF 88 25 EF B2 CE B8 03 00 EF EB E1 50  // .%...%.........P
    87C0: 2E 8E 06 D7 03 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B  // ......J.........
    87D0: F8 58 26 88 05 C3 2E 8E 1E D5 03 8A 26 49 04 E8  // .X&.........&I..
    87E0: 6F F4 74 0F 80 FC 07 77 0B 74 08 E8 5F F5 8B EC  // o.t....w.t.._...
    87F0: 89 46 1A C3 80 FC 13 7C 03 74 29 C3 E8 35 F7 8A  // .F.....|.t)..5..
    8800: CC 2E 8E 1E D7 03 BA CE 03 32 FF B8 04 03 EF D0  // .........2......
    8810: E7 8A 1D 22 D9 74 03 80 CF 01 FE CC 7D F0 8B EC  // ...".t......}...
    8820: 88 7E 1A C3 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8  // .~...J..........
    8830: 2E 8E 1E D7 03 8A 05 8B EC 88 46 1A C3 2E 8E 1E  // ..........F.....
    8840: D5 03 8A 3E 62 04 8A CF D0 E1 32 ED BE 50 04 03  // ...>b.....2..P..
    8850: F1 8B 14 8A 0E 49 04 3C 0D 76 4A 2E 8E 06 DB 03  // .....I.<.vJ.....
    8860: E8 EE F3 75 33 8A 1E 4A 04 8A F8 8A C6 F6 E3 8A  // ...u3..J........
    8870: CA 03 C8 D1 E1 03 0E 4E 04 8B F9 8A C7 AA D1 E9  // .......N........
    8880: 41 FE C2 38 DA 73 59 89 14 8B 16 63 04 B0 0E 8A  // A..8.sY....c....
    8890: E5 EF 8A E1 FE C0 EF C3 2E 8E 06 D9 03 80 F9 07  // ................
    88A0: 74 C3 E9 83 00 75 04 32 D2 EB 0F 3C 0A 75 1D 3A  // t....u.2...<.u.:
    88B0: 36 84 04 75 03 E9 93 00 FE C6 89 14 E8 92 F3 75  // 6..u...........u
    88C0: 05 80 F9 07 7F 05 8B C2 E8 4C F6 C3 3C 07 75 04  // .........L..<.u.
    88D0: E8 29 7E C3 3C 08 75 83 0A D2 74 DE FE CA EB DA  // .)~.<.u...t.....
    88E0: 32 FF 32 D2 2B CB 3A 36 84 04 74 06 FE C6 03 CB  // 2.2.+.:6..t.....
    88F0: EB 95 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE  // ......c.........
    8900: C0 EF 2B FB 2B FB 26 8A 65 02 50 8B 3E 4E 04 8B  // ..+.+.&.e.P.>N..
    8910: F3 D1 E6 03 F7 A0 84 04 F6 E3 8B C8 06 1F F3 A5  // ................
    8920: 8B CB 58 B0 20 F3 AB C3 B9 01 00 B4 0A E8 88 C5  // ..X. ...........
    8930: FE C2 3A 16 4A 04 74 03 89 14 C3 32 FF 32 D2 89  // ..:.J.t....2.2..
    8940: 14 3A 36 84 04 74 2E FE C6 EB ED 89 14 2E 8E 06  // .:6..t..........
    8950: DB 03 E8 FC F2 74 0E 2E 8E 06 D9 03 80 F9 07 74  // .....t.........t
    8960: 04 32 FF EB 10 8B C2 E8 AD F5 8B F9 D1 E7 4F 8B  // .2............O.
    8970: 1E 4A 04 EB 91 33 C9 8A 36 84 04 8A 16 4A 04 FE  // .J...3..6....J..
    8980: CA B0 01 E9 70 F7 2E 8E 1E D5 03 F6 06 87 04 08  // ....p...........
    8990: 74 03 CD 42 C3 E8 76 F6 8B EC C6 46 1B 00 C3 2E  // t..B..v....F....
    89A0: 8E 1E D5 03 8A DF 32 FF D1 E3 89 97 50 04 D0 EB  // ......2.....P...
    89B0: 38 1E 62 04 75 05 8B C2 E8 5C F5 C3 2E 8E 1E D5  // 8.b.u....\......
    89C0: 03 8A DF 32 FF D1 E3 8B 97 50 04 8B 0E 60 04 8B  // ...2.....P...`..
    89D0: EC 89 4E 16 89 56 12 C3 2E 8E 1E D5 03 A0 87 04  // ..N..V..........
    89E0: 24 80 0A 06 49 04 8A 26 4A 04 8A 3E 62 04 8B EC  // $...I..&J..>b...
    89F0: 89 46 1A 89 5E 0E 89 4E 16 89 56 12 C3 2E 8E 1E  // .F..^..N..V.....
    8A00: D5 03 3C 04 7F 1B 50 52 BA CC 03 EC A8 01 5A 58  // ..<...PR......ZX
    8A10: 74 08 80 3E 63 04 D4 74 08 C3 80 3E 63 04 B4 75  // t..>c..t...>c..u
    8A20: F8 3C 1C 73 F4 32 E4 8B E8 D1 E5 2E FF A6 C8 89  // .<.s.2..........
    8A30: 00 8A 20 8A 32 8A 67 8A B1 89 B1 89 B1 89 8C 8A  // .. .2.g.........
    8A40: A4 8A A8 8A B1 89 B1 89 B1 89 B1 89 B1 89 B1 89  // ................
    8A50: D6 8A B1 89 DA 8A F5 8A B1 89 34 8B B1 89 42 8B  // ..........4...B.
    8A60: 5D 8B 64 8B 70 8B 94 8B 80 3E 49 04 13 74 15 E8  // ].d.p....>I..t..
    8A70: FC F4 8B C3 86 E0 E8 AD EF 0B ED 74 07 8A C7 32  // ...........t...2
    8A80: FF 26 88 01 E8 D0 F4 C3 E8 E3 F4 8A C7 E8 81 FC  // .&..............
    8A90: 0B ED 74 F0 26 88 7D 11 EB EA 80 3E 49 04 13 74  // ..t.&.}....>I..t
    8AA0: E3 06 E8 C9 F4 1F 0B ED 74 07 8B F2 B9 11 00 F3  // ........t.......
    8AB0: A4 8B F2 E8 DE 01 32 E4 B9 10 00 B2 C0 9C FA 8A  // ......2.........
    8AC0: C4 EE AC EE 9D FE C4 E2 F4 AC E8 44 FC EB B5 80  // ...........D....
    8AD0: FB 01 77 B0 E8 80 F4 B2 C0 B0 30 E8 38 F1 24 F7  // ..w.......0.8.$.
    8AE0: 80 26 65 04 DF 80 FB 00 74 07 0C 08 80 0E 65 04  // .&e.....t.....e.
    8AF0: 20 EE EB 90 E8 9D 01 8A C3 B2 C0 E8 18 F1 8B C8  //  ...............
    8B00: EE B0 20 EE 8B EC 88 4E 0F E9 78 FF B3 11 EB E4  // .. ....N..x.....
    8B10: 8B FA E8 42 F4 B9 10 00 32 E4 B2 C0 8A C4 9C FA  // ...B....2.......
    8B20: EE 42 EC 26 88 05 FE C4 4A EE 9D 47 E2 EE 9C FA  // .B.&....J..G....
    8B30: B0 11 EE 42 EC 9D 26 88 05 E8 20 F4 EB 5A E8 CE  // ...B..&... ..Z..
    8B40: 00 C3 8B FA 51 8B C3 26 8A 35 26 8A 6D 01 26 8A  // ....Q..&.5&.m.&.
    8B50: 4D 02 E8 CA 00 83 C7 03 43 59 E2 E8 C3 0A DB 75  // M.......CY.....u
    8B60: 1A E8 F3 F3 B2 C0 B0 30 E8 AB F0 24 7F F6 C7 01  // .......0...$....
    8B70: 74 02 0C 80 B4 30 E8 AD EE EB 1D FE CB 75 1C E8  // t....0.......u..
    8B80: D5 F3 B2 C0 B0 30 E8 8D F0 EE A8 80 75 03 C0 E7  // .....0......u...
    8B90: 02 B4 34 8A C7 E8 8E EE E8 BC F3 C3 8A C3 E8 D1  // ..4.............
    8BA0: 00 8B EC 89 4E 16 88 76 13 C3 8B FA 51 8B C3 E8  // ....N..v....Q...
    8BB0: C3 00 26 88 35 26 88 6D 01 26 88 4D 02 83 C7 03  // ..&.5&.m.&.M....
    8BC0: 43 59 E2 E8 C3 BA C6 03 8A C3 EE C3 BA C6 03 EC  // CY..............
    8BD0: 32 E4 8B EC 89 46 0E C3 E8 7C F3 B2 C0 B0 34 E8  // 2....F...|....4.
    8BE0: 34 F0 8A F8 EE B0 30 E8 2C F0 B3 01 A8 80 75 05  // 4.....0.,.....u.
    8BF0: B3 00 C0 EF 02 8B EC 89 5E 0E EB 9C 51 8B C3 E8  // ........^...Q...
    8C00: 73 00 E8 2A 00 8A C3 E8 52 00 43 59 E2 EE C3 F6  // s..*....R.CY....
    8C10: 06 89 04 02 74 03 E8 16 00 8A C3 E8 39 00 C3 F6  // ....t.......9...
    8C20: 06 89 04 02 74 03 E8 06 00 8A C3 E8 2E 00 C3 50  // ....t..........P
    8C30: B0 1E F6 E6 50 B0 3B F6 E5 50 B0 0B F6 E1 59 03  // ....P.;..P....Y.
    8C40: C1 59 03 C1 B1 64 F6 F1 80 FC 32 7C 02 FE C0 8A  // .Y...d....2|....
    8C50: F0 8A E8 8A C8 58 C3 52 E8 39 00 5A 53 8B DA BA  // .....X.R.9.ZS...
    8C60: C8 03 9C FA EE 42 8A C7 EE 8A C5 EE 8A C1 EE 9D  // .....B..........
    8C70: 5B C3 E8 1F 00 53 9C FA BA C7 03 EE 42 42 EC 8A  // [....S......BB..
    8C80: F8 EB 00 EB 00 EC 8A E8 EB 00 EB 00 EC 8A C8 8A  // ................
    8C90: F7 9D 5B C3 50 51 E8 BE F2 B9 FF 7F EC A8 08 75  // ..[.PQ.........u
    8CA0: 02 E2 F9 59 58 C3 2E 8E 1E D5 03 8B F8 24 0F 81  // ...YX........$..
    8CB0: E7 F0 00 C1 EF 03 83 FF 06 7F 18 2E FF A5 58 8C  // ..............X.
    8CC0: 60 8C 75 8C 13 8D 6F 8D 3C 03 74 08 3C 04 7F 03  // `.u...o.<.t.<...
    8CD0: E8 CF 01 C3 BA C4 03 B0 03 8A E3 EF C3 3C 04 77  // .............<.w
    8CE0: F2 50 53 50 52 8B 16 63 04 B0 07 E8 28 EF 8A E0  // .PSPR..c....(...
    8CF0: D0 EC 80 E4 01 A8 40 74 03 80 CC 02 B0 12 E8 15  // ......@t........
    8D00: EF 40 A3 85 04 B0 09 E8 0C EF A8 80 74 04 D1 2E  // .@..........t...
    8D10: 85 04 A1 85 04 8B D0 3D F4 01 73 1B BA E0 01 3D  // .......=..s....=
    8D20: C2 01 73 13 BA 90 01 3D 7C 01 73 0B BA 5E 01 3D  // ..s....=|.s..^.=
    8D30: 4A 01 73 03 BA C8 00 89 16 85 04 5A 58 C6 06 84  // J.s........ZX...
    8D40: 04 FF E8 5D 01 5B 58 8A DF 32 FF 0A C0 74 0E B3  // ...].[X..2...t..
    8D50: 0E 3C 01 74 08 B3 08 3C 02 74 02 B3 10 8A CB 8A  // .<.t...<.t......
    8D60: E9 81 E9 01 02 80 F9 08 7E 04 81 E9 01 01 87 1E  // ........~.......
    8D70: 85 04 53 E8 98 F2 5B E8 85 02 C3 0A C0 74 11 FE  // ..S...[......t..
    8D80: C8 74 1A FE C8 74 38 FE C8 74 3C FE C8 74 40 C3  // .t...t8..t<..t@.
    8D90: 89 2E 7C 00 8C 06 7E 00 C3 8C C8 8E C0 FE CA 0A  // ..|...~.........
    8DA0: DB 74 07 32 FF 2E 8A 97 53 8D 89 0E 85 04 88 16  // .t.2....S.......
    8DB0: 84 04 89 2E 0C 01 8C 06 0E 01 C3 00 0D 18 2A E8  // ..............*.
    8DC0: 09 03 B9 0E 00 EB D6 BD A0 5C B9 08 00 EB CA BD  // .........\......
    8DD0: B3 64 B9 10 00 EB C2 0A C0 75 BD 8B 0E 85 04 8A  // .d.......u......
    8DE0: 16 84 04 80 FF 07 77 35 80 FF 01 77 10 0A FF 75  // ......w5...w...u
    8DF0: 06 C4 2E 7C 00 EB 26 C4 2E 0C 01 EB 20 80 FF 02  // ...|..&..... ...
    8E00: 75 0B 8C CD 8E C5 2E 8B 2E 92 75 EB 10 0E 07 8A  // u.........u.....
    8E10: DF 32 FF 80 EB 02 D1 E3 2E 8B AF C6 8D 8B C5 8B  // .2..............
    8E20: EC 89 4E 16 89 56 12 89 46 0A 8C 46 1E C3 B3 64  // ..N..V..F..F...d
    8E30: A0 5C A0 60 A0 64 B3 64 B3 74 53 06 8A 26 49 04  // .\.`.d.d.tS..&I.
    8E40: E8 D2 C2 26 8A 47 02 26 8A 67 33 F6 C4 01 74 22  // ...&.G.&.g3...t"
    8E50: BD B3 64 3C 10 7D 0E E8 71 02 8C 06 0E 01 3C 0E  // ..d<.}..q.....<.
    8E60: 7D 07 BD A0 5C 8C 0E 0E 01 89 2E 0C 01 E8 10 01  // }...\...........
    8E70: EB 2D B4 84 3C 10 7D 13 B4 81 3C 0E 74 0D 7F 15  // .-..<.}...<.t...
    8E80: B4 02 3C 08 74 05 80 CC 80 EB 0A 26 F6 47 05 01  // ..<.t......&.G..
    8E90: 74 03 80 E4 7F 86 C4 32 DB E8 06 00 E8 C9 01 07  // t......2........
    8EA0: 5B C3 8B F8 8B F2 BA CE 03 EC B8 05 00 EF B8 06  // [...............
    8EB0: 04 EF B2 C4 EC B8 02 04 EF B8 04 07 EF 8B D6 8B  // ................
    8EC0: C7 50 24 7F 0A C0 74 22 0E 07 33 D2 B9 00 01 3C  // .P$...t"..3....<
    8ED0: 04 75 07 B7 10 BD B3 64 EB 10 FE C8 75 07 B7 0E  // .u.....d....u...
    8EE0: E8 E8 01 EB 05 B7 08 BD A0 5C E8 2D 00 58 A8 80  // .........\.-.X..
    8EF0: 74 00 BA C4 03 B8 02 03 EF B8 04 02 EF B2 CC EC  // t...............
    8F00: A8 01 B8 06 0E 75 02 B4 0A B2 CE 50 EC 58 EF B0  // .....u.....P.X..
    8F10: 04 EE 32 C0 EE B8 05 10 EF C3 FC 0B C9 75 01 C3  // ..2..........u..
    8F20: 80 FF 0E 75 0A 26 83 7E FE 10 75 03 80 CD 80 1E  // ...u.&.~..u.....
    8F30: 06 1F 2E 8E 06 D7 03 8B FA C1 E7 05 B0 40 53 80  // .............@S.
    8F40: E3 03 F6 E3 5B F6 C3 04 74 02 04 20 86 E0 8B D0  // ....[...t.. ....
    8F50: 03 FA 8B F5 E3 28 32 C0 86 FB 32 FF 51 F6 C5 80  // .....(2...2.Q...
    8F60: 74 01 46 8B CB F3 A4 83 FB 20 74 07 B9 20 00 2B  // t.F...... t.. .+
    8F70: CB F3 AA 59 F6 C5 80 74 01 46 FE C9 75 DE 1F C3  // ...Y...t.F..u...
    8F80: 8A 26 49 04 50 06 57 C4 3E A8 04 26 C4 7D 0C 8C  // .&I.P.W.>..&.}..
    8F90: C5 0B EF 74 30 8B EF 83 C7 07 26 8A 05 3C FF 74  // ...t0.....&..<.t
    8FA0: 24 38 E0 74 03 47 EB F2 8B FD 26 8A 05 FE C8 A2  // $8.t.G....&.....
    8FB0: 84 04 26 8B 45 01 A3 85 04 26 C4 7D 03 89 3E 0C  // ..&.E....&.}..>.
    8FC0: 01 8C 06 0E 01 5F 07 58 C3 26 F6 47 33 01 74 01  // ....._.X.&.G3.t.
    8FD0: C3 C4 1E A8 04 26 C4 5F 08 8C C0 0B C3 74 1F BF  // .....&._.....t..
    8FE0: 0B 00 26 8A 01 3C FF 74 15 47 38 06 49 04 75 F2  // ..&..<.t.G8.I.u.
    8FF0: 26 8A 07 32 E4 87 06 85 04 8B D8 E8 01 00 C3 8B  // &..2............
    9000: 16 63 04 8A 26 85 04 FE CC 80 E4 1F 9C FA 80 FA  // .c..&...........
    9010: D4 74 0B B0 14 EE 42 EC 24 E0 0A C4 EE 4A B0 09  // .t....B.$....J..
    9020: EE 42 EC 24 E0 0A C4 EE 9D 8A C8 8B C3 8A 16 85  // .B.$............
    9030: 04 F6 F2 80 3E 84 04 FF 75 07 A2 84 04 FE 0E 84  // ....>...u.......
    9040: 04 F6 E2 F6 C1 80 74 02 D1 E0 48 8A E0 B0 12 8B  // ......t...H.....
    9050: 16 63 04 EF A0 4A 04 8A 26 84 04 FE C4 F6 E4 D1  // .c...J..&.......
    9060: E0 05 00 01 A3 4C 04 C3 8A 26 49 04 50 06 57 C4  // .....L...&I.P.W.
    9070: 3E A8 04 26 C4 7D 08 8C C5 0B EF 74 4A 8B EF 83  // >..&.}.....tJ...
    9080: C7 0B 26 8A 05 3C FF 74 3E 38 E0 74 03 47 EB F2  // ..&..<.t>8.t.G..
    9090: 8B FD 26 8A 3D 26 8A 5D 01 26 8B 4D 02 26 8B 55  // ..&.=&.].&.M.&.U
    90A0: 04 26 8A 45 0A 3C FF 74 02 FE C8 50 A0 84 04 FE  // .&.E.<.t...P....
    90B0: C0 F6 26 85 04 A3 85 04 58 A2 84 04 26 C4 7D 06  // ..&.....X...&.}.
    90C0: 8B EF 32 C0 E8 DB FD 5F 07 58 C3 50 53 51 52 2E  // ..2...._.X.PSQR.
    90D0: A1 DF 03 0B C0 74 09 2E 8B 2E 92 75 0E 07 EB 08  // .....t.....u....
    90E0: B8 30 11 B7 02 E8 D0 BD 5A 59 5B 58 C3 3C 04 7C  // .0......ZY[X.<.|
    90F0: 01 C3 E3 FD 53 2E 8E 1E D5 03 86 FB 32 FF D1 E3  // ....S.......2...
    9100: 8B FB 81 C7 50 04 8B 35 5B 89 15 56 8B F0 51 53  // ....P..5[..V..QS
    9110: 26 8A 46 00 45 3C 0D 7F 1F 75 04 32 D2 EB 40 3C  // &.F.E<...u.2..@<
    9120: 0A 74 32 3C 07 75 05 E8 D2 75 EB 62 3C 08 75 08  // .t2<.u...u.b<.u.
    9130: 0A D2 74 5A FE CA EB 27 F7 C6 02 00 74 05 26 8A  // ..tZ...'....t.&.
    9140: 5E 00 45 B9 01 00 B4 09 E8 6D BD FE C2 3A 16 4A  // ^.E......m...:.J
    9150: 04 72 0C 32 D2 89 15 3A 36 84 04 73 06 FE C6 89  // .r.2...:6..s....
    9160: 15 EB 2B 50 E8 EA EA 75 08 B8 00 08 E8 49 BD EB  // ..+P...u.....I..
    9170: 09 80 3E 49 04 07 74 F1 32 E4 86 3E 62 04 53 8A  // ..>I..t.2..>b.S.
    9180: FC 55 E8 25 00 5D 5B 86 3E 62 04 58 8B 15 5B 59  // .U.%.][.>b.X..[Y
    9190: E2 15 5A F7 C6 01 00 75 02 89 15 8B 05 3A 3E 62  // ..Z....u.....:>b
    91A0: 04 75 03 E8 71 ED C3 E9 64 FF 33 C9 8A 36 84 04  // .u..q...d.3..6..
    91B0: 8A 16 4A 04 FE CA B8 01 06 E8 FC BC C3 2E 8E 1E  // ..J.............
    91C0: D5 03 0A C0 75 0D E8 18 00 8B EC 89 5E 0E C6 46  // ....u.......^..F
    91D0: 1A 1A C3 3C 01 75 09 E8 41 00 8B EC C6 46 1A 1A  // ...<.u..A....F..
    91E0: C3 A0 8A 04 BF 53 92 2E 3A 05 72 04 BB FF FF C3  // .....S..:.r.....
    91F0: 32 E4 D1 E0 03 F8 2E 8B 5D 04 0A DB 74 05 0A FF  // 2.......]...t...
    9200: 75 04 C3 86 FB C3 A0 10 04 24 30 3C 30 74 06 F6  // u........$0<0t..
    9210: C3 01 75 EF C3 F6 C3 01 74 E9 C3 BF 53 92 2E 8A  // ..u.....t...S...
    9220: 0D 32 C0 83 C7 04 2E 3B 1D 74 12 86 FB 2E 3B 1D  // .2.....;.t....;.
    9230: 74 0B 83 C7 02 FE C0 38 C8 7E EB B0 FF A2 8A 04  // t......8.~......
    9240: C3 BB 08 00 F6 06 89 04 02 74 0E BB 07 00 BA CC  // .........t......
    9250: 03 EC A8 01 74 18 BB 08 00 BA B4 03 E8 1C ED 74  // ....t..........t
    9260: 21 B7 01 E8 C9 E9 80 FA D4 74 17 86 FB C3 BA D4  // !........t......
    9270: 03 E8 07 ED 74 0C B7 02 E8 B4 E9 80 FA B4 74 02  // ....t.........t.
    9280: 86 FB C3 0F 08 0F 08 0F 08 0F 08 03 01 03 01 01  // ................
    9290: 01 00 08 01 01 01 01 01 01 01 01 0F 01 0F 08 0F  // ................
    92A0: 04 00 02 0F 02 01 01 0F 01 FF 01 FF E0 0F 00 00  // ................
    92B0: 00 00 07 02 08 FF 0E 00 00 3F 00 10 01 08 00 00  // .........?......
    92C0: 00 00 01 00 02 02 01 00 04 04 01 00 05 02 05 00  // ................
    92D0: 06 01 06 05 06 00 08 01 08 00 07 02 07 06 07 00  // ................
    92E0: 55 02 34 00 90 00 D2 00 00 00 00 00 00 00 5F 57  // U.4..........._W
    92F0: C3 90 50 66 52 E8 F4 FF FF FF 81 EF 10 00 00 00  // ..PfR...........
    9300: 2E 8B 07 66 BA F8 0C EF 66 BA FC 0C ED 32 C0 66  // ...f....f....2.f
    9310: 8B F8 66 5A 58 C3 66 B8 4F 03 66 52 66 56 53 57  // ..fZX.f.O.fRfVSW
    9320: 50 0A FF 75 44 E8 C8 FF FF FF 66 33 F6 66 BB D0  // P..uD.....f3.f..
    9330: 05 E8 00 01 00 00 C1 E8 10 F6 C4 40 75 2B 66 81  // ...........@u+f.
    9340: E2 FF 02 66 D1 E2 66 8B C2 66 40 C1 E0 10 66 8B  // ...f..f..f@...f.
    9350: C2 66 BB 13 00 E8 E8 00 00 00 66 BB 12 00 E8 DF  // .f........f.....
    9360: 00 00 00 66 58 32 E4 66 50 58 5F 5B 66 5E 66 5A  // ...fX2.fPX_[f^fZ
    9370: C3 90 66 B8 4F 03 52 51 53 57 66 56 50 8A FB 80  // ..f.O.RQSWfVP...
    9380: E3 7F 0A DB 75 26 E8 67 FF FF FF C1 E2 10 66 8B  // ....u&.g......f.
    9390: D1 C1 E2 02 66 BE 00 00 E8 C7 00 00 00 66 BE 00  // ....f........f..
    93A0: 02 E8 BE 00 00 00 66 58 32 E4 66 50 58 66 5E 5F  // ......fX2.fPXf^_
    93B0: 5B 59 5A C3 66 B8 4F 03 66 51 57 56 53 52 50 8A  // [YZ.f.O.fQWVSRP.
    93C0: FB 80 E3 7F 0A DB 75 39 8A DA 57 5A E8 21 FF FF  // ......u9..WZ.!..
    93D0: FF 66 33 F6 66 53 66 BB D0 05 E8 57 00 00 00 80  // .f3.fSf....W....
    93E0: E4 01 66 5B 80 E7 FE 0A FC 66 BE 00 00 E8 DE 00  // ..f[.....f......
    93F0: 00 00 66 BE 00 02 E8 D5 00 00 00 66 58 32 E4 66  // ..f........fX2.f
    9400: 50 58 5A 5B 5E 5F 66 59 C3 90 53 50 51 F6 C7 80  // PXZ[^_fY..SPQ...
    9410: 74 20 66 BB 9C 1B E8 1B 00 00 00 A8 01 74 13 66  // t f..........t.f
    9420: B9 FF FF 66 BB A3 1B E8 0A 00 00 00 A8 01 75 02  // ...f..........u.
    9430: E2 F1 59 58 5B C3 66 52 E8 11 00 00 00 ED 66 5A  // ..YX[.fR......fZ
    9440: C3 90 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B  // ..fR......fZ..f.
    9450: D7 50 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83  // .P3.f..f......f.
    9460: C2 04 58 C3 52 E8 A0 FF FF FF 81 E2 FF FF FF 02  // ..X.R...........
    9470: 66 BB 04 1A E8 BD FF FF FF 25 00 00 00 FD 03 C2  // f........%......
    9480: 66 25 00 F0 E8 B9 FF FF FF 66 BB 05 1A E8 B0 FF  // f%.......f......
    9490: FF FF 66 81 E2 FF 0F 66 BB 01 1A E8 96 FF FF FF  // ..f....f........
    94A0: 24 03 8A C8 66 D3 EA 66 BB 06 1A E8 86 FF FF FF  // $...f..f........
    94B0: 66 03 C2 66 BB 0D 1A E8 86 FF FF FF 66 8B C2 24  // f..f........f..$
    94C0: FC C1 E0 10 66 BB 5C 1B E8 75 FF FF FF 5A C3 90  // ....f.\..u...Z..
    94D0: 52 66 53 66 51 E8 30 FF FF FF 33 C0 8A C3 66 53  // RfSfQ.0...3...fS
    94E0: 66 BB 79 1A E8 59 FF FF FF 66 5B 66 49 66 81 E1  // f.y..Y...f[fIf..
    94F0: FF 00 66 41 32 C0 66 53 66 BB 78 1A E8 41 FF FF  // ..fA2.fSf.x..A..
    9500: FF 66 5B 26 8A 42 02 C1 E0 0A 26 8A 42 01 C1 E0  // .f[&.B....&.B...
    9510: 0A 26 8A 02 C1 E0 02 F6 C7 01 75 03 C1 E0 02 66  // .&........u....f
    9520: 53 66 BB 7C 1A E8 18 FF FF FF 66 5B 83 C2 04 E2  // Sf.|......f[....
    9530: D2 66 59 66 5B 5A C3 00 6B 38 5E 38 5E 38 5E 38  // .fYf[Z..k8^8^8^8
    9540: 49 38 49 38 49 38 49 38 8B 34 02 35 2C 35 6D 36  // I8I8I8I8.4.5,5m6
    9550: 6C 36 6C 36 B2 36 17 37 47 37 04 38 2D 38 2D 38  // l6l6.6.7G7.8-8-8
    9560: A4 36 97 36 97 36 97 36 97 36 97 36 B2 36 17 37  // .6.6.6.6.6.6.6.7
    9570: 47 37 04 38 32 38 78 38 2D 38 2D 38 FF FF FF FF  // G7.828x8-8-8....
    9580: FF FF 00 00 FF FF 00 00 FF FF 00 00 FF 00 00 00  // ................
    9590: FF 00 00 00 FF 00 00 00 FF 00 00 00 00 00 08 10  // ................
    95A0: 00 08 10 18 00 08 10 18 8F 32 01 8F 32 02 9D 46  // .........2..2..F
    95B0: 03 7D 46 03 B4 33 03 68 33 03 90 32 04 A9 32 04  // .}F..3.h3..2..2.
    95C0: B9 32 04 8F 32 03 00 00 00 00 3C 3A 00 02 3C 3A  // .2..2.....<:..<:
    95D0: 01 02 3C 3A 02 02 3C 3A 03 02 3C 3A 04 02 3C 3A  // ..<:..<:..<:..<:
    95E0: 05 02 36 3C 00 02 36 3C 01 02 36 3C 02 02 36 3C  // ..6<..6<..6<..6<
    95F0: 03 02 36 3C 04 02 36 3C 05 02 6B 3C 00 02 6B 3C  // ..6<..6<..k<..k<
    9600: 01 02 6B 3C 02 02 6B 3C 03 02 6B 3C 04 02 6B 3C  // ..k<..k<..k<..k<
    9610: 05 02 A6 3E 00 02 A6 3E 01 02 A6 3E 02 02 A6 3E  // ...>...>...>...>
    9620: 03 02 A6 3E 04 02 A6 3E 05 02 A6 3E 00 02 A6 3E  // ...>...>...>...>
    9630: 01 02 A6 3E 02 02 A6 3E 03 02 A6 3E 04 02 A6 3E  // ...>...>...>...>
    9640: 05 02 6D 3D 00 02 6D 3D 01 02 6D 3D 02 02 6D 3D  // ..m=..m=..m=..m=
    9650: 03 02 6D 3D 04 02 6D 3D 05 02 A9 3D 00 02 A9 3D  // ..m=..m=...=...=
    9660: 01 02 A9 3D 02 02 A9 3D 03 02 A9 3D 04 02 A9 3D  // ...=...=...=...=
    9670: 05 02 1A 3D 00 02 1A 3D 01 02 1A 3D 02 02 1A 3D  // ...=...=...=...=
    9680: 03 02 1A 3D 04 02 1A 3D 05 02 4E 3D 00 02 4E 3D  // ...=...=..N=..N=
    9690: 01 02 4E 3D 02 02 4E 3D 03 02 4E 3D 04 02 4E 3D  // ..N=..N=..N=..N=
    96A0: 05 02 FE 40 00 00 31 41 01 00 31 41 02 00 1E 41  // ...@..1A..1A...A
    96B0: 00 00 0C 40 00 02 05 3E 00 02 05 3E 01 02 05 3E  // ...@...>...>...>
    96C0: 02 02 05 3E 03 02 05 3E 04 02 05 3E 05 02 24 40  // ...>...>...>..$@
    96D0: 00 02 79 42 05 00 79 42 01 00 79 42 00 00 79 42  // ..yB..yB..yB..yB
    96E0: 02 00 BA 42 00 00 BA 42 02 00 FF 42 00 00 8F 3F  // ...B...B...B...?
    96F0: 00 02 8F 3F 01 02 8F 3F 02 02 8F 3F 03 02 8F 3F  // ...?...?...?...?
    9700: 04 02 8F 3F 05 02 4B 41 00 00 73 41 00 00 F4 41  // ...?..KA..sA...A
    9710: 00 00 6F 42 00 00 53 3E 00 02 53 3E 01 02 53 3E  // ..oB..S>..S>..S>
    9720: 02 02 53 3E 03 02 53 3E 04 02 53 3E 05 02 6E 42  // ..S>..S>..S>..nB
    9730: 00 01 6E 42 00 01 72 3B 00 02 72 3B 01 02 72 3B  // ..nB..r;..r;..r;
    9740: 02 02 72 3B 03 02 72 3B 04 02 72 3B 05 02 93 41  // ..r;..r;..r;...A
    9750: 00 00 6F 42 00 00 6F 42 00 00 6F 42 00 00 A4 40  // ..oB..oB..oB...@
    9760: 00 00 96 3C 00 02 96 3C 01 02 96 3C 02 02 96 3C  // ...<...<...<...<
    9770: 03 02 96 3C 04 02 96 3C 05 02 C5 3C 00 02 C5 3C  // ...<...<...<...<
    9780: 01 02 C5 3C 02 02 C5 3C 03 02 C5 3C 04 02 C5 3C  // ...<...<...<...<
    9790: 05 02 FB 3C 00 02 FB 3C 01 02 FB 3C 02 02 FB 3C  // ...<...<...<...<
    97A0: 03 02 FB 3C 04 02 FB 3C 05 02 B6 41 00 00 D9 41  // ...<...<...A...A
    97B0: 00 00 97 3D 01 02 97 3D 02 02 F3 3D 01 02 F3 3D  // ...=...=...=...=
    97C0: 02 02 A6 00 01 01 B6 AA 44 AB 9C AB 2A CA 6E D4  // ........D...*.n.
    97D0: 54 AC 00 00 34 CA 00 00 68 AD 68 AE 14 B0 36 B1  // T...4...h.h...6.
    97E0: 02 B6 8A B7 92 B7 E4 D1 16 D2 D0 BC E2 BD 04 BE  // ................
    97F0: 00 00 00 00 00 00 00 00 00 00 00 00 92 BE 00 00  // ................
    9800: 00 00 26 DE BC DE 00 00 52 C1 CA C1 3E C2 00 00  // ..&.....R...>...
    9810: 7C C2 A8 C2 00 00 CA C2 E4 C2 64 C3 2A C4 DA C5  // |.........d.*...
    9820: 24 C6 60 E4 02 C7 40 C7 18 C8 00 00 4E E1 6C C9  // $.`...@.....N.l.
    9830: 92 E3 4E CA 68 E0 80 CC E0 CC EA CC F4 CC 30 CD  // ..N.h.........0.
    9840: E0 CE D6 D6 E8 CE 58 D0 58 D1 00 00 26 D2 00 00  // ......X.X...&...
    9850: 20 E3 00 00 1C B8 7E BC 00 00 00 00 00 00 00 D7  //  .....~.........
    9860: 46 D8 7E DB CA DD EA D3 4A 00 01 01 00 00 00 00  // F.~.....J.......
    9870: 00 00 4A 98 2E 99 9A 99 CE 99 00 00 28 AA 00 00  // ..J.........(...
    9880: 1C 9A F8 9A 04 9B 24 9B CC 9B E4 9B 00 00 10 AA  // ......$.........
    9890: 00 00 18 9F 00 00 00 00 1E 9F 50 A3 7C A0 00 00  // ..........P.|...
    98A0: 84 A9 AC A9 CE A3 00 00 00 00 36 A8 42 A9 00 00  // ..........6.B...
    98B0: 60 AA E4 00 01 02 4E 0C 80 02 C0 00 90 01 2D 00  // `.....N.......-.
    98C0: 20 00 40 00 01 00 03 00 00 00 00 00 00 00 02 00  //  .@.............
    98D0: E6 55 D6 09 80 02 A0 00 E0 01 2D 00 10 00 60 00  // .U........-...`.
    98E0: 0A 00 02 00 00 00 00 00 08 08 06 00 12 3C A0 0F  // .............<..
    98F0: 20 03 00 01 58 02 1C 00 28 00 80 00 01 00 04 00  //  ...X...(.......
    9900: 00 00 00 00 00 00 00 00 6A 3C 64 19 00 04 40 01  // ........j<d...@.
    9910: 00 03 26 00 18 00 88 00 03 00 06 00 00 00 00 00  // ..&.............
    9920: 00 00 06 00 55 3C 30 2A 00 05 08 02 C0 03 28 00  // ....U<0*......(.
    9930: 60 00 70 00 01 00 03 00 00 00 00 00 00 00 00 00  // `.p.............
    9940: E9 3C 30 2A 00 05 98 01 00 04 2A 00 30 00 70 00  // .<0*......*.0.p.
    9950: 01 00 03 00 00 00 00 00 00 00 00 00 EA 3C 8F 2F  // .............<./
    9960: 78 05 D0 01 1A 04 27 00 58 00 90 00 03 00 04 00  // x.....'.X.......
    9970: 00 00 00 00 00 00 02 00 EB 3C 48 3F 40 06 30 02  // .........<H?@.0.
    9980: B0 04 32 00 40 00 C0 00 01 00 03 00 00 00 00 00  // ..2.@...........
    9990: 00 00 00 00 EC 3C 6C 00 02 02 01 00 32 0F 30 75  // .....<l.....2.0u
    99A0: 00 00 30 75 00 00 00 00 00 00 40 7E 05 00 00 00  // ..0u......@~....
    99B0: 00 00 00 00 00 00 C0 27 09 00 00 00 00 00 92 F4  // .......'........
    99C0: 00 00 00 00 84 03 9A 0B 70 17 00 00 00 00 28 88  // ........p.....(.
    99D0: 04 00 00 00 00 00 00 00 00 00 00 00 00 00 40 9C  // ..............@.
    99E0: C4 09 10 27 52 03 1F 40 10 27 10 27 10 27 00 00  // ...'R..@.'.'.'..
    99F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A00: 00 00 34 00 02 01 00 00 00 00 00 2A 00 2A 00 00  // ..4........*.*..
    9A10: 2A 2A 2A 00 00 2A 00 2A 2A 15 00 2A 2A 2A 15 15  // ***..*.**..***..
    9A20: 15 15 15 3F 15 3F 15 15 3F 3F 3F 15 15 3F 15 3F  // ...?.?..???..?.?
    9A30: 3F 3F 15 3F 3F 3F 4E 00 01 03 00 00 00 00 00 00  // ??.???N.........
    9A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A50: 00 00 06 00 00 00 00 00 20 00 00 00 00 00 1D 3C  // ........ ......<
    9A60: 01 00 00 00 00 00 00 48 C8 00 07 5A 5A 07 7D 00  // .......H...ZZ.}.
    9A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A80: 00 00 00 00 DC 00 01 01 68 48 6A 48 6B 48 69 48  // ........hHjHkHiH
    9A90: 68 48 6A 48 6B 48 69 48 90 00 00 00 00 08 08 08  // hHjHkHiH........
    9AA0: 08 00 00 6C 48 6E 48 6F 48 6D 48 6C 48 6E 48 6F  // ...lHnHoHmHlHnHo
    9AB0: 48 6D 48 91 00 00 00 00 08 08 08 08 00 00 70 48  // HmH...........pH
    9AC0: 72 48 73 48 71 48 70 48 72 48 73 48 71 48 92 00  // rHsHqHpHrHsHqH..
    9AD0: 00 00 00 08 08 08 08 00 00 74 48 76 48 77 48 75  // .........tHvHwHu
    9AE0: 48 74 48 76 48 77 48 75 48 93 00 00 00 00 08 08  // HtHvHwHuH.......
    9AF0: 08 08 00 00 78 48 7A 48 7B 48 79 48 78 48 7A 48  // ....xHzH{HyHxHzH
    9B00: 7B 48 79 48 94 00 00 00 00 08 08 08 08 00 00 7C  // {HyH...........|
    9B10: 48 7E 48 7F 48 7D 48 7C 48 7E 48 7F 48 7D 48 95  // H~H.H}H|H~H.H}H.
    9B20: 00 00 00 00 08 08 08 08 00 00 98 48 9A 48 9B 48  // ...........H.H.H
    9B30: 99 48 98 48 9A 48 9B 48 99 48 96 00 00 00 00 01  // .H.H.H.H.H......
    9B40: 01 01 01 00 00 80 48 82 48 83 48 81 48 80 48 82  // ......H.H.H.H.H.
    9B50: 48 83 48 81 48 97 00 00 00 00 08 08 08 08 00 00  // H.H.H...........
    9B60: 0C 00 01 05 E0 FF 7F 00 20 00 20 00 20 00 01 01  // ........ . . ...
    9B70: 8D 48 00 01 8D 48 08 02 8D 48 10 03 8D 48 18 04  // .H...H...H...H..
    9B80: 8D 48 1A 05 8D 48 1C 06 83 01 05 3D A8 00 01 01  // .H...H.....=....
    9B90: 00 01 02 E6 01 01 02 12 03 01 02 6A 05 01 02 55  // ...........j...U
    9BA0: 07 01 02 EA 10 01 06 12 11 01 16 12 13 01 06 6A  // ...............j
    9BB0: 14 01 16 6A 16 01 06 55 17 01 16 55 19 01 06 EA  // ...j...U...U....
    9BC0: 1A 01 16 EA 63 01 02 E9 65 01 16 E9 66 01 0A E9  // ....c...e...f...
    9BD0: 21 01 0A 12 22 01 0A 6A 23 01 0A 55 24 01 0A EA  // !..."..j#..U$...
    9BE0: 43 01 02 EB 45 01 16 EB 46 01 0A EB 73 01 02 EC  // C...E...F...s...
    9BF0: 75 01 16 EC 76 01 0A EC D1 01 02 70 D2 01 16 70  // u...v......p...p
    9C00: D4 01 0A 70 D7 01 02 71 D8 01 16 71 D9 01 0A 71  // ...p...q...q...q
    9C10: E1 01 02 72 E2 01 16 72 E4 01 0A 72 E7 01 02 73  // ...r...r...r...s
    9C20: E8 01 16 73 E9 01 0A 73 F3 01 02 74 F5 01 16 74  // ...s...s...t...t
    9C30: F6 01 0A 74 18 00 02 03 01 08 04 08 09 01 02 08  // ...t............
    9C40: 00 00 00 00 00 00 00 00 00 00 00 00 34 03 07 01  // ............4...
    9C50: 00 4D 00 4D 06 00 00 7F 24 00 00 19 00 00 00 00  // .M.M....$.......
    9C60: 80 02 01 40 0D 03 00 E8 6E 03 00 32 00 32 00 4D  // ...@....n..2.2.M
    9C70: 00 94 02 8B 02 00 00 B5 01 3B 01 77 00 F9 00 D1  // .........;.w....
    9C80: 01 F9 02 00 00 C4 02 00 00 13 03 2D 03 00 00 00  // ...........-....
    9C90: 00 00 00 00 00 00 00 00 00 01 02 00 00 00 00 00  // ................
    9CA0: 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 07  // ................
    9CB0: 00 01 00 00 00 00 00 05 00 00 00 00 00 00 00 00  // ................
    9CC0: 00 00 00 00 10 20 03 00 00 00 00 00 00 02 FF 00  // ..... ..........
    9CD0: 00 00 00 00 00 03 FF 00 00 00 00 00 00 04 FF 00  // ................
    9CE0: 00 00 00 00 00 05 FF 00 00 00 00 00 00 06 FF 00  // ................
    9CF0: 00 00 00 00 00 07 FF 00 00 00 00 00 00 08 FF 00  // ................
    9D00: 00 00 00 00 00 52 03 00 00 00 00 00 00 84 03 00  // .....R..........
    9D10: 00 00 00 00 00 B6 03 00 00 00 00 00 00 E8 03 00  // ................
    9D20: 00 00 00 00 00 1A 04 00 00 00 00 00 00 4C 04 00  // .............L..
    9D30: 00 00 00 00 00 7E 04 00 00 00 00 00 00 CF 03 00  // .....~..........
    9D40: 00 00 00 00 00 00 08 84 03 00 00 00 00 00 00 02  // ................
    9D50: FF 00 00 00 00 00 00 03 FF 00 00 00 00 00 00 04  // ................
    9D60: FF 00 00 00 00 00 00 05 FF 00 00 00 00 00 00 06  // ................
    9D70: FF 00 00 00 00 00 00 07 FF 00 00 00 00 00 00 08  // ................
    9D80: FF 00 00 00 00 00 00 01 08 00 00 00 30 75 00 00  // ............0u..
    9D90: 00 00 00 80 00 00 00 00 01 E6 FF 80 ED 00 00 00  // ................
    9DA0: 00 00 00 00 00 00 00 02 E6 FF 78 63 01 00 00 00  // ..........xc....
    9DB0: 00 00 88 13 00 00 03 E6 FF B4 A4 01 00 00 00 00  // ................
    9DC0: 00 00 00 00 00 04 E6 FF 44 BF 01 00 00 00 00 00  // ........D.......
    9DD0: 00 00 00 00 05 E6 FF 3C D1 01 00 00 00 00 00 00  // .......<........
    9DE0: 00 00 00 06 E6 FF D0 E2 01 00 00 00 00 00 00 00  // ................
    9DF0: 00 00 07 00 00 FC FC 01 00 00 00 00 00 00 00 00  // ................
    9E00: 00 00 02 00 52 03 00 00 E8 03 30 75 00 00 00 00  // ....R.....0u....
    9E10: 0F B6 03 00 00 E8 03 40 0D 03 00 00 00 00 08 00  // .......@........
    9E20: 00 00 90 E2 00 00 F8 24 01 00 18 F6 00 00 00 00  // .......$........
    9E30: 00 00 A8 DE 00 00 08 B4 FF 18 F6 00 00 80 38 01  // ..............8.
    9E40: 00 88 0D 01 00 00 00 00 00 00 FA 00 00 09 9B FF  // ................
    9E50: A0 09 01 00 08 4C 01 00 F8 24 01 00 00 00 00 00  // .....L...$......
    9E60: 70 11 01 00 0A 82 FF 28 1D 01 00 A8 5B 01 00 68  // p......(....[..h
    9E70: 3C 01 00 00 00 00 00 E0 28 01 00 0B 69 FF C8 2C  // <.......(...i..,
    9E80: 01 00 60 67 01 00 F0 4F 01 00 00 00 00 00 68 3C  // ..`g...O......h<
    9E90: 01 00 0C 37 FF 80 38 01 00 18 73 01 00 78 63 01  // ...7..8...s..xc.
    9EA0: 00 00 00 00 00 08 4C 01 00 0D 05 FF 38 44 01 00  // ......L.....8D..
    9EB0: D0 7E 01 00 00 77 01 00 00 00 00 00 C0 57 01 00  // .~...w.......W..
    9EC0: 0E 00 00 F0 4F 01 00 A0 86 01 00 A0 86 01 00 00  // ....O...........
    9ED0: 00 00 00 78 63 01 00 01 17 00 00 02 00 1D 00 00  // ...xc...........
    9EE0: 09 03 A0 0F 64 19 34 21 D0 07 A0 0F 70 17 94 2A  // ....d.4!....p..*
    9EF0: 01 64 00 E4 12 60 09 78 63 01 00 49 12 64 00 64  // .d...`.xc..I.d.d
    9F00: 00 64 00 64 00 64 00 64 00 64 00 01 3B 3C 00 00  // .d.d.d.d.d..;<..
    9F10: 04 6E 00 00 00 7C 00 6E 00 6E 00 00 00 00 00 96  // .n...|.n.n......
    9F20: 00 5A 00 00 00 00 00 5E 00 02 00 69 00 50 00 50  // .Z.....^...i.P.P
    9F30: 00 73 00 73 00 5F 00 00 00 90 10 96 00 90 00 00  // .s.s._..........
    9F40: 06 00 00 00 00 01 06 00 00 01 01 00 01 01 01 00  // ................
    9F50: 02 01 01 00 02 01 01 00 02 01 01 00 02 01 01 01  // ................
    9F60: 03 00 10 00 00 00 00 00 00 00 10 00 00 00 00 00  // ................
    9F70: 00 02 10 00 00 00 00 00 00 00 01 00 00 00 00 00  // ................
    9F80: 05 00 01 01 96 00 5E 01 01 03 88 0E 48 00 00 00  // ......^.....H...
    9F90: FB 00 00 00 12 00 00 00 05 01 00 00 08 00 0A 00  // ................
    9FA0: 13 31 00 11 21 21 80 00 0A 00 13 32 00 11 21 22  // .1..!!.....2..!"
    9FB0: 00 02 0A 00 0C 31 00 11 20 21 00 04 0A 00 0C 32  // .....1.. !.....2
    9FC0: 00 11 20 22 00 08 0A 00 04 31 00 11 1E 21 05 00  // .. ".....1...!..
    9FD0: 00 00 13 31 74 00 7A 00 00 00 13 32 8F 00 95 00  // ...1t.z....2....
    9FE0: 00 00 0C 31 AA 00 B0 00 00 00 0C 32 C5 00 CB 00  // ...1.......2....
    9FF0: 00 00 04 31 E0 00 E6 00 00 00 01 21 21 00 00 00  // ...1.......!!...
    A000: 04 0C 01 00 10 02 00 00 08 00 00 00 01 04 90 00  // ................
    A010: 02 04 06 00 FF 01 21 22 00 00 00 04 0C 01 00 20  // ......!"....... 
    A020: 02 00 00 80 00 00 00 01 04 92 00 02 04 04 00 FF  // ................
    A030: 01 20 21 00 00 00 04 0C 01 00 30 02 00 00 00 02  // . !.......0.....
    A040: 00 00 01 04 91 00 02 04 01 00 FF 01 20 22 00 00  // ............ "..
    A050: 00 04 0C 01 00 40 02 00 00 00 04 00 00 01 04 93  // .....@..........
    A060: 00 02 04 05 00 FF 01 1E 21 00 00 00 04 0C 01 00  // ........!.......
    A070: 50 02 00 00 00 08 00 00 01 04 95 00 02 04 03 00  // P...............
    A080: FF 05 00 00 00 21 21 27 01 2D 01 00 00 21 22 32  // .....!!'.-...!"2
    A090: 01 38 01 00 00 20 21 3D 01 43 01 00 00 20 22 48  // .8... !=.C... "H
    A0A0: 01 4E 01 00 00 1E 21 53 01 59 01 00 00 01 00 11  // .N....!S.Y......
    A0B0: 01 13 31 14 04 0F 00 FF 01 00 11 01 13 32 14 04  // ..1..........2..
    A0C0: 0F 00 FF 01 00 11 01 0C 31 14 04 0F 00 FF 01 00  // ........1.......
    A0D0: 11 01 0C 32 14 04 0F 00 FF 01 00 11 01 04 31 14  // ...2..........1.
    A0E0: 04 0F 00 FF D4 02 02 01 30 DC B4 00 00 80 03 00  // ........0.......
    A0F0: 2C 1F 00 00 14 00 00 00 DC 0C 14 00 00 00 D5 0C  // ,...............
    A100: 33 03 00 00 D4 0C 00 02 0C 00 00 0B 29 00 20 0F  // 3...........). .
    A110: D3 0B E0 1F 12 00 ED 09 10 A8 08 00 92 09 00 04  // ................
    A120: 0C 00 94 09 00 04 0C 00 93 09 00 04 0C 00 6D 09  // ..............m.
    A130: 1F 10 14 01 2E 08 00 04 0C 00 30 08 80 0C 0C 00  // ..........0.....
    A140: 2F 08 00 04 0C 00 4F 09 B4 00 01 00 1E 09 00 04  // /.....O.........
    A150: 0C 00 F3 09 1B 90 00 00 E9 09 5A 8A FF 00 EA 09  // ..........Z.....
    A160: 7A AE FF 08 EE 09 10 0C 00 00 EF 09 10 0C 00 00  // z...............
    A170: E5 09 FC FD FC FC E6 09 FD F8 FC FC E7 09 FC FC  // ................
    A180: F3 FC E8 09 FC FC FC F5 F0 09 08 6F C3 00 F1 09  // ...........o....
    A190: 05 29 C3 00 DA 09 11 40 04 00 D6 09 03 F8 6F 00  // .).....@......o.
    A1A0: F2 09 10 10 87 01 F4 09 45 4F 70 08 F5 09 16 3A  // ........EOp....:
    A1B0: 02 03 DB 09 03 03 00 00 E1 09 00 00 00 00 E2 09  // ................
    A1C0: 04 00 00 00 74 09 C9 00 00 00 76 09 00 30 00 00  // ....t.....v..0..
    A1D0: 7F 09 49 9A 24 00 80 09 51 12 25 02 3B 08 1C 3C  // ..I.$...Q.%.;..<
    A1E0: 00 70 56 08 3F 40 00 00 57 08 10 10 00 00 5A 08  // .pV.?@..W.....Z.
    A1F0: 97 09 00 00 E7 0D 99 00 C1 50 E8 0D 99 01 C1 50  // .........P.....P
    A200: E9 0D 89 00 C1 50 EA 0D 19 03 C1 50 51 08 99 00  // .....P.....PQ...
    A210: C1 50 52 08 99 00 C1 50 53 08 99 00 C1 50 54 08  // .PR....PS....PT.
    A220: 99 00 C1 50 5C 08 91 09 00 00 83 08 91 01 00 00  // ...P\...........
    A230: 59 08 91 51 00 00 5B 08 91 29 00 00 5D 08 91 09  // Y..Q..[..)..]...
    A240: 00 00 58 08 91 09 00 00 64 08 13 00 00 00 84 08  // ..X.....d.......
    A250: 95 09 00 00 3D 08 49 92 24 00 80 08 91 09 00 00  // ....=.I.$.......
    A260: 35 08 1E 00 F9 00 41 08 12 68 8F F8 42 08 13 6A  // 5.....A..h..B..j
    A270: 91 F6 77 08 91 13 00 00 70 08 11 0B 00 00 EB 0D  // ..w.....p.......
    A280: 3D 90 80 40 EC 0D 35 50 54 40 ED 0D 3D 50 1C 40  // =..@..5PT@..=P.@
    A290: EE 0D 35 B0 6A 40 66 08 45 90 80 40 67 08 55 50  // ..5.j@f.E..@g.UP
    A2A0: 80 40 68 08 3D 50 4C 40 69 08 3D 70 80 40 6D 08  // .@h.=PL@i.=p.@m.
    A2B0: 91 09 01 00 71 08 15 24 00 00 88 08 91 11 00 00  // ....q..$........
    A2C0: 78 08 91 12 00 00 6B 08 A1 09 00 00 72 08 91 09  // x.....k.....r...
    A2D0: 00 00 6C 08 01 09 00 00 74 08 95 51 00 00 4D 08  // ..l.....t..Q..M.
    A2E0: 11 09 00 00 4E 08 11 2A 00 00 73 08 13 0F 00 00  // ....N..*..s.....
    A2F0: 75 08 91 09 00 00 7D 08 91 09 00 00 89 08 91 01  // u.....}.........
    A300: 00 00 3E 08 49 92 CC 00 7F 08 91 11 00 00 7E 08  // ..>.I.........~.
    A310: 91 21 03 00 6F 08 91 29 00 00 3C 08 07 00 00 80  // .!..o..)..<.....
    A320: 81 09 91 0C 00 00 82 09 95 09 00 00 85 09 11 01  // ................
    A330: 00 00 83 09 91 09 00 00 84 09 11 8C 00 00 86 09  // ................
    A340: 91 09 00 00 87 09 11 09 00 00 88 09 91 89 00 00  // ................
    A350: 7B 09 91 49 00 00 7C 09 A1 09 00 00 70 05 00 04  // {..I..|.....p...
    A360: 0C 00 8E 0C 00 00 00 00 83 08 91 01 00 00 84 08  // ................
    A370: 95 09 00 00 85 08 97 09 00 00 88 08 91 11 00 00  // ................
    A380: 89 08 91 01 00 00 8A 08 93 09 00 00 50 08 91 09  // ............P...
    A390: 02 00 3F 08 28 28 72 72 40 08 50 50 28 28 43 08  // ..?.((rr@.PP((C.
    A3A0: 80 80 00 00 CD 09 10 00 00 00 C0 09 40 0F 50 00  // ............@.P.
    A3B0: 60 08 E1 09 02 00 00 00 7D 00 01 01 01 02 04 20  // `.......}...... 
    A3C0: 00 06 20 00 00 03 91 0A 02 92 0A 09 10 00 01 82  // .. .............
    A3D0: 04 20 00 06 20 00 00 03 91 0A 08 20 00 00 03 92  // . .. ...... ....
    A3E0: 0A 09 26 00 01 03 02 0E 00 06 10 00 00 03 0E 00  // ..&.............
    A3F0: 02 0F 00 09 38 00 01 83 02 0E 00 06 10 00 00 03  // ....8...........
    A400: 0E 00 08 20 00 00 03 0F 00 09 4E 00 01 05 02 82  // ... ......N.....
    A410: 00 06 10 00 00 03 82 00 02 83 00 09 60 00 01 85  // ............`...
    A420: 02 82 00 06 10 00 00 03 82 00 08 20 00 00 03 83  // ........... ....
    A430: 00 09 76 00 00 00 68 04 02 02 52 00 61 00 03 03  // ..v...h...R.a...
    A440: B9 03 31 03 00 00 01 01 08 04 32 10 54 76 3E 00  // ..1.......2.Tv>.
    A450: A2 60 FF 00 00 50 03 05 63 0A 04 00 00 00 00 20  // .`...P..c...... 
    A460: 00 0B 00 40 00 61 21 02 02 00 00 00 00 00 43 65  // ...@.a!.......Ce
    A470: 07 00 00 00 00 00 4B 34 47 38 30 33 32 35 46 42  // ......K4G80325FB
    A480: 5F 57 43 4B 32 43 4B 00 03 00 04 00 FF FF 00 FF  // _WCK2CK.........
    A490: FF FF 00 00 00 00 00 2A 00 34 00 2F 0A 04 30 0A  // .......*.4./..0.
    A4A0: 00 D5 0A 04 2C 0A 04 28 0A 04 29 0A 04 2A 0A 04  // ....,..(..)..*..
    A4B0: 2B 0A 04 81 0A 04 8B 0A 04 5F 0A 04 DD 09 84 DE  // +........_......
    A4C0: 09 84 FF FF 00 A8 61 00 00 33 30 00 00 00 00 00  // ......a..30.....
    A4D0: 00 22 CC 1C 00 62 8C 11 0B 10 57 0A 08 0E C3 B0  // ."...b....W.....
    A4E0: 01 00 20 41 00 22 01 14 20 9A 88 00 A0 00 00 00  // .. A.".. .......
    A4F0: 00 04 03 08 09 1B 0D 0F 0E 40 9C 00 00 33 30 00  // .........@...30.
    A500: 00 00 00 00 00 22 CC 1C 00 63 94 12 11 20 57 0A  // ....."...c... W.
    A510: 09 11 44 B1 02 00 20 42 00 2A 02 14 20 AA 88 00  // ..D... B.*.. ...
    A520: A0 00 00 00 00 06 04 0C 0E 2B 10 12 0F 60 EA 00  // .........+...`..
    A530: 00 33 30 00 00 00 00 00 00 22 CC 1C 00 A5 20 24  // .30......".... $
    A540: 1A 40 57 0B 0B 97 05 12 04 00 22 64 00 3A 05 14  // .@W......."d.:..
    A550: 20 CA 88 00 A0 00 00 00 00 09 06 12 15 41 15 18  //  ............A..
    A560: 10 90 5F 01 00 33 30 00 00 00 00 00 00 22 CC 1C  // .._..30......"..
    A570: 00 E7 B4 36 27 80 57 0B 0F 9F 07 23 06 00 24 85  // ...6'.W....#..$.
    A580: 00 5A 09 14 20 DA 88 00 A0 00 00 00 00 0E 08 1A  // .Z.. ...........
    A590: 20 62 1D 20 12 A0 86 01 00 33 30 00 00 00 00 00  //  b. .....30.....
    A5A0: 00 22 CC 1C 00 08 39 37 2B 90 57 0B 10 21 48 D3  // ."....97+.W..!H.
    A5B0: 06 00 44 86 00 62 0A 14 20 6A 89 00 A0 00 00 00  // ..D..b.. j......
    A5C0: 00 0F 09 1D 23 6D 1F 22 13 74 B7 01 00 33 30 00  // ....#m.".t...30.
    A5D0: 00 00 00 00 00 22 CC 1C 00 29 41 48 31 A0 57 0C  // ....."...)AH1.W.
    A5E0: 11 25 C9 B3 07 00 46 A6 00 6A 0C 14 20 6A 89 00  // .%....F..j.. j..
    A5F0: A0 00 00 00 00 11 0A 21 28 7B 22 26 14 48 E8 01  // .......!({"&.H..
    A600: 00 33 30 00 00 00 00 00 00 22 CC 1C 00 4A 49 49  // .30......"...JII
    A610: 37 B0 57 0C 12 29 4A 94 08 00 46 A7 00 72 0E 14  // 7.W..)J...F..r..
    A620: 20 7A 89 00 A0 00 00 00 00 13 0B 25 2D 89 25 2A  //  z.........%-.%*
    A630: 14 1C 19 02 00 33 30 00 00 00 00 00 00 22 CC 1C  // .....30......"..
    A640: 00 8C 51 5A 3D C0 57 0D 13 2D CB 74 09 00 48 C7  // ..QZ=.W..-.t..H.
    A650: 00 7A 00 14 20 7A 89 00 A0 02 00 00 00 15 0D 29  // .z.. z.........)
    A660: 31 97 28 2E 15 F0 49 02 00 55 50 00 00 00 00 00  // 1.(...I..UP.....
    A670: 00 22 CC 1C 00 AD 59 5B 41 C0 57 0E 15 B0 0B 45  // ."....Y[A.W....E
    A680: 0A 00 68 C7 00 03 01 14 20 FA 89 00 A0 03 00 00  // ..h..... .......
    A690: 00 17 0E 2B 34 A4 2A 31 16 C4 7A 02 00 55 50 00  // ...+4.*1..z..UP.
    A6A0: 00 00 00 00 00 22 CC 1C 00 CE 61 6C 47 D0 57 0F  // ....."....alG.W.
    A6B0: 16 B4 8C 25 0B 00 6A E7 00 0B 03 14 20 FA 89 00  // ...%..j..... ...
    A6C0: A0 03 00 00 00 19 0F 2F 39 B2 2D 35 17 98 AB 02  // ......./9.-5....
    A6D0: 00 77 70 00 00 00 00 00 00 22 CC 1C 00 10 6A 6D  // .wp......"....jm
    A6E0: 4D D0 57 10 17 B9 0D 06 0C 00 6A E7 00 14 05 14  // M.W.......j.....
    A6F0: 20 FA 89 00 A0 03 00 00 00 1B 11 33 3D C0 30 3A  //  ..........3=.0:
    A700: 17 40 0D 03 00 77 70 00 00 00 00 00 00 22 CC 1C  // .@...wp......"..
    A710: 00 31 F6 7E 57 F0 57 11 19 3F CF B6 0D 00 6C 07  // .1.~W.W..?....l.
    A720: 01 24 08 14 20 FA 89 00 A0 03 00 00 00 1E 12 3A  // .$.. ..........:
    A730: 46 DB 35 40 19 00 00 00 00 06 00 08 00 0E 00 44  // F.5@...........D
    A740: FF FF 00 FF FF FF 00 1F 00 00 00 FF FF FF 01 1F  // ................
    A750: 00 00 00 FF FF FF 02 1F 00 00 00 FF FF FF 03 1F  // ................
    A760: 00 00 00 00 00 00 00 E1 B4 88 D6 9B 00 A5 3F 21  // ..............?!
    A770: 00 FD 02 D1 00 81 F6 D2 00 88 D6 9B 00 66 3F 05  // .............f?.
    A780: 00 F4 9B 41 00 A6 B0 E6 00 4E 1E 6F 06 D1 00 42  // ...A.....N.o...B
    A790: D6 D3 00 AC 3F 05 00 81 56 9F 00 E6 BB 40 00 16  // ....?...V....@..
    A7A0: B1 F4 00 88 D6 9B 00 E5 3D 28 00 E1 B1 11 E6 B3  // ........=(......
    A7B0: 00 F4 3B 05 00 6F 06 CA 00 42 D6 D3 00 BC AB 21  // ..;..o...B.....!
    A7C0: 00 88 76 97 00 E6 BB 08 00 A6 B0 F4 00 4B 1E 4F  // ..v..........K.O
    A7D0: 07 D1 00 C2 D2 D3 00 88 F6 D2 00 F4 3B 05 00 66  // ............;..f
    A7E0: 3F 21 00 A6 90 BD 00 81 76 B3 00 F4 3B 05 00 4B  // ?!......v...;..K
    A7F0: 00 5C 00 80 0A 04 8C 0A 04 95 0A 04 96 0A 04 99  // .\..............
    A800: 0A 04 82 0A 04 74 0A 04 75 0A 04 00 00 44 01 00  // .....t..u....D..
    A810: 44 02 00 44 03 00 44 04 00 44 05 00 44 09 00 44  // D..D..D..D..D..D
    A820: 0A 00 44 0B 00 44 0C 00 44 0D 00 44 0F 00 44 4E  // ..D..D..D..D..DN
    A830: 0A 04 54 0A 00 97 0A 04 98 0A 00 FF FF 00 FF FF  // ..T.............
    A840: FF 00 72 21 60 50 D8 CD 00 E0 5A 4E 6F A0 0D F9  // ..r!`P....ZNo...
    A850: 8C 30 00 E0 03 70 13 46 03 61 00 00 00 00 66 66  // .0...p.F.a....ff
    A860: 00 00 FF FF 04 04 04 00 04 02 20 3C 00 00 00 03  // .......... <....
    A870: 00 63 04 06 00 00 23 00 00 00 00 00 00 00 19 00  // .c....#.........
    A880: 02 00 85 08 00 00 00 00 1E 01 30 00 00 00 00 00  // ..........0.....
    A890: 86 53 AA AA AA 00 F5 08 03 00 00 00 00 00 0C 01  // .S..............
    A8A0: 03 06 FC CA 01 00 80 38 01 00 38 00 06 0A 6A 24  // .......8..8...j$
    A8B0: 09 00 80 1A 06 00 E8 03 00 00 0C 01 18 08 20 03  // .............. .
    A8C0: 00 00 B0 04 00 00 38 C1 01 00 38 C1 01 00 00 00  // ......8...8.....
    A8D0: 00 00 00 00 00 00 00 00 00 00 34 C4 01 00 43 01  // ..........4...C.
    A8E0: 00 00 00 00 00 00 00 00 00 00 C0 FF 08 0F 08 31  // ...............1
    A8F0: AC 10 00 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    A900: 00 00 4B 00 00 00 00 00 00 00 2B 00 00 00 00 00  // ..K.......+.....
    A910: 00 00 10 00 00 00 00 00 00 00 9B 02 00 00 03 00  // ................
    A920: 00 00 B8 01 00 00 76 02 00 00 2A 03 00 00 84 03  // ......v...*.....
    A930: 00 00 FC 03 00 00 56 04 00 00 BA 04 00 00 14 05  // ......V.........
    A940: 00 00 00 35 0C 00 00 35 0C 00 98 E0 0E 00 90 05  // ...5...5........
    A950: 10 00 38 67 10 00 E0 C8 10 00 88 2A 11 00 30 8C  // ..8g.......*..0.
    A960: 11 00 A7 00 00 00 A2 04 00 00 BE 01 00 00 1B 00  // ................
    A970: 00 00 00 00 0C 05 FE FF B5 9C 05 00 CE FF FF FF  // ................
    A980: 00 00 00 00 F3 0D 03 00 80 60 FE FF FD F8 FF FF  // .........`......
    A990: 0A 03 CD FF FF FF 00 00 00 00 8A 00 F1 FF FF FF  // ................
    A9A0: 5C 12 00 01 00 01 00 01 00 00 42 00 03 01 01 03  // \.........B.....
    A9B0: 0E 00 08 96 10 00 00 00 00 00 FF 00 01 07 0C 00  // ................
    A9C0: 06 00 00 00 00 00 00 00 04 00 24 00 00 04 00 00  // ..........$.....
    A9D0: 02 80 10 00 00 00 10 00 52 03 02 00 00 00 84 03  // ........R.......
    A9E0: 02 00 10 00 B6 03 00 80 10 00 E8 03 28 00 03 01  // ............(...
    A9F0: FF FF FF 00 4B 00 B8 0B 01 00 00 00 FF FF FF 00  // ....K...........
    AA00: 32 00 4E 0C 02 00 00 00 FF FF FF 00 7C 01 45 0C  // 2.N.........|.E.
    AA10: 07 12 00 00 64 00 02 03 14 00 00 00 40 2D 00 00  // ....d.......@-..
    AA20: 70 06 02 06 00 00 00 00 1E 21 52 00 4C 00 03 FF  // p........!R.L...
    AA30: FF 00 1E 22 55 00 4C 00 09 FF FF 00 20 21 58 00  // ..."U.L..... !X.
    AA40: 4C 00 0A FF FF 00 20 22 5B 00 4C 00 0B FF FF 00  // L..... "[.L.....
    AA50: 21 21 5E 00 4C 00 0C FF FF 00 21 22 61 00 4C 00  // !!^.L.....!"a.L.
    AA60: 0D FF FF 00 FF FF 14 04 FF 15 04 FF 16 04 FF 17  // ................
    AA70: 04 FF 18 04 FF 19 04 FF 18 00 02 01 02 00 08 00  // ................
    AA80: 80 00 00 02 00 04 00 08 40 00 01 00 10 00 FF FF  // ........@.......
    AA90: 38 00 02 01 04 4A 00 00 7C 92 00 00 01 04 1E 00  // 8....J..|.......
    AAA0: 3C 00 00 00 F8 24 01 00 01 03 1E 00 3C 00 1E 00  // <....$......<...
    AAB0: F0 49 02 00 01 02 1E 00 3C 00 1E 00 E0 93 04 00  // .I......<.......
    AAC0: 01 01 1E 00 00 00 1E 00 55 00 01 01 01 10 02 00  // ........U.......
    AAD0: 7D 02 10 00 11 02 00 01 00 21 00 01 00 82 92 04  // }........!......
    AAE0: 00 45 00 02 00 50 00 14 00 70 00 84 00 5C 02 02  // .E...P...p...\..
    AAF0: 00 61 02 01 00 3A 02 02 00 3C 02 02 00 3E 02 02  // .a...:...<...>..
    AB00: 00 40 02 02 00 71 02 40 00 7E 99 02 00 86 99 01  // .@...q.@.~......
    AB10: 00 FC 9A 08 00 58 E7 A8 00 00 00 00 00 00 8E 00  // .....X..........
    AB20: 01 02 00 08 02 01 02 00 52 47 52 02 02 65 02 07  // ........RGR..e..
    AB30: 52 0D 55 00 02 52 0D 52 23 2C 25 02 01 3D 25 02  // R.U..R.R#,%..=%.
    AB40: 06 45 17 00 51 02 52 3D 52 39 02 0D 02 01 03 52  // .E..Q.R=R9.....R
    AB50: 43 66 04 02 8C 02 2E 00 02 0D 02 01 00 52 43 02  // Cf...........RC.
    AB60: 05 02 04 00 52 03 52 43 02 F9 02 01 52 05 02 01  // ....R.RC....R...
    AB70: 02 00 0E E5 02 08 52 0A 02 05 02 02 00 00 00 52  // ......R........R
    AB80: 43 02 05 02 04 00 52 03 52 43 02 05 02 30 75 00  // C.....R.RC...0u.
    AB90: 40 52 0B 02 05 02 04 00 52 03 52 43 02 01 02 01  // @R......R.RC....
    ABA0: 0E E5 02 08 52 0B 0D 65 D0 05 02 5B 57 00 01 02  // ....R..e...[W...
    ABB0: 00 00 37 00 00 52 14 02 08 00 0D 1A 32 08 00 0B  // ..7..R......2...
    ABC0: 1A 02 88 00 0E 1A 32 88 00 0C 1A 03 00 46 04 1A  // ......2......F..
    ABD0: 09 05 46 FF FF FF 02 56 00 40 03 20 40 01 1A 09  // ..F....V.@. @...
    ABE0: 25 40 03 75 02 46 40 03 18 40 5C 1B 2D 02 46 40  // %@.u.F@..@\.-.F@
    ABF0: 27 00 46 06 1A 2D 08 40 5C 1B 02 0A 01 41 02 8A  // '.F..-.@\....A..
    AC00: 01 40 5B 00 B7 00 01 01 04 00 37 00 00 01 05 0E  // .@[.......7.....
    AC10: 00 02 00 40 01 37 03 00 5C 05 02 00 FC 7F FF FF  // ...@.7..\.......
    AC20: 02 00 00 00 5C 05 10 00 FF FF 9D FF 00 09 41 00  // ....\.........A.
    AC30: 5C 05 21 00 7F FF FF FF 80 00 00 00 5C 05 40 00  // \.!.........\.@.
    AC40: BE 3F FF FF 40 40 01 00 37 00 00 01 05 0E 00 70  // .?..@@..7......p
    AC50: 00 01 10 37 03 00 01 05 70 00 00 40 00 01 5C 05  // ...7....p..@..\.
    AC60: A0 00 0F FF FE DF 10 00 01 60 5C 05 A2 00 7F F3  // .........`\.....
    AC70: 97 FF 86 04 88 5A 5C 05 A4 00 1B F0 FF FF 20 0D  // .....Z\....... .
    AC80: 40 04 5C 05 B1 00 FF 2D FF FF 80 50 18 96 37 00  // @.\....-...P..7.
    AC90: 00 54 00 06 00 01 25 C5 14 02 01 05 C2 14 7F 00  // .T....%.........
    ACA0: 00 00 01 05 E8 15 70 3D 29 0A 01 05 E9 15 9C A4  // ......p=).......
    ACB0: 0D 20 01 05 EA 15 20 95 87 00 5B 00 13 01 01 01  // . .... ...[.....
    ACC0: 04 00 37 00 00 03 01 00 00 54 20 24 15 01 25 00  // ..7......T $..%.
    ACD0: 08 0F 01 25 28 08 0F 5C 25 2B 08 F8 01 55 00 00  // ...%(..\%+...U..
    ACE0: 52 34 52 3E 03 24 40 0C 00 15 25 40 04 5C 62 01  // R4R>.$@...%@.\b.
    ACF0: 08 0F 40 01 04 D7 09 24 00 01 04 02 08 00 00 01  // ..@....$........
    AD00: 04 1C 08 20 00 66 18 2D 0C 42 10 00 56 00 40 03  // ... .f.-.B..V.@.
    AD10: 0C 40 00 00 3E 0D 40 00 00 44 73 00 01 02 00 00  // .@..>.@..Ds.....
    AD20: 40 01 04 01 00 02 00 2D 0D 42 06 00 43 53 00 0D  // @......-.B..CS..
    AD30: 25 68 15 03 54 00 34 FE 01 05 35 FE 03 0A 03 0A  // %h..T.4...5.....
    AD40: 01 05 35 FE 04 0A 04 0A 01 00 03 0A 69 15 01 00  // ..5.........i...
    AD50: 04 0A 69 15 5C 25 D5 09 FB 01 0D 05 D5 09 00 08  // ..i.\%..........
    AD60: 00 40 54 00 34 FE 01 05 35 FE 03 0A 0C 00 01 05  // .@T.4...5.......
    AD70: 35 FE 04 0A 0C 00 52 0F 66 1C 2D 0C 42 0A 00 55  // 5.....R.f.-.B..U
    AD80: 00 00 52 12 66 1C 2D 0C 42 0C 00 02 0D 00 01 00  // ..R.f.-.B.......
    AD90: 52 1F 52 1E 02 05 00 30 75 00 00 52 10 4C E5 00  // R.R....0u..R.L..
    ADA0: 20 44 ED 00 0D 25 80 0A 18 02 25 00 FF 52 40 4A  //  D...%....%..R@J
    ADB0: 65 80 0A 0F 49 0E 01 52 03 03 20 00 80 0A 09 25  // e...I..R.. ....%
    ADC0: 00 FC 52 1E 5C 22 80 0A 03 00 52 07 52 48 5B 00  // ..R.\"....R.RH[.
    ADD0: FF 00 02 01 00 04 37 00 00 66 0C 03 0C 41 00 00  // ......7..f...A..
    ADE0: 2D 0A 41 42 2D 0D 42 04 00 3D 24 00 03 00 44 30  // -.AB-.B..=$...D0
    ADF0: 00 2D 0D 42 04 00 3E 0A 42 41 44 FB 00 43 19 00  // .-.B..>.BAD..C..
    AE00: 56 00 43 03 A4 41 02 00 03 F2 41 41 03 0C 41 00  // V.C..A....AA..A.
    AE10: 00 3E 0D 41 00 00 44 FB 00 3E 0D 41 61 48 49 6B  // .>.A..D..>.AaHIk
    AE20: 00 3E E5 41 10 46 5F 00 1B 3D 41 01 43 6B 00 09  // .>.A.F_..=A.Ck..
    AE30: E5 41 03 15 3D 41 02 2D E5 41 0C 03 3A 43 41 54  // .A..=A.-.A..:CAT
    AE40: 00 00 00 33 0D 41 01 00 01 0A 00 00 41 0D 02 01  // ...3.A......A...
    AE50: 00 44 2D 0D 41 02 00 01 0A 00 00 41 03 32 43 41  // .D-.A......A.2CA
    AE60: 4B E5 00 01 49 D7 00 07 02 01 00 45 2D 0D 41 01  // K...I......E-.A.
    AE70: 00 01 0A 00 00 41 4A 02 01 00 44 44 B9 00 03 29  // .....AJ...DD...)
    AE80: 43 00 0E A2 00 44 43 C1 00 03 29 43 00 08 A2 00  // C....DC...)C....
    AE90: 45 33 0D 41 03 00 01 0A 00 00 41 03 3A 43 41 07  // E3.A......A.:CA.
    AEA0: 02 01 00 45 43 FA 00 0D 02 01 00 44 33 0D 41 01  // ...EC......D3.A.
    AEB0: 00 01 0A 00 00 41 3D A5 00 01 44 F5 00 07 02 01  // .....A=...D.....
    AEC0: 00 45 43 FA 00 0D 02 01 00 44 5B 55 20 00 5B 00  // .EC......D[U .[.
    AED0: AC 01 01 02 14 00 37 00 00 4B E5 00 08 44 23 00  // ......7..K...D#.
    AEE0: 01 05 82 00 70 03 00 80 3C 05 83 00 00 00 02 00  // ....p...<.......
    AEF0: 46 68 01 03 01 04 00 02 E5 00 01 52 3C 01 05 82  // Fh.........R<...
    AF00: 00 40 01 50 C0 0D 25 83 00 08 66 FF 2D 0D 42 6C  // .@.P..%...f.-.Bl
    AF10: 01 01 05 82 00 40 03 50 C0 4A 25 83 00 01 44 56  // .....@.P.J%...DV
    AF20: 00 2D 0D 42 20 00 03 04 00 08 00 03 04 01 0C 00  // .-.B ...........
    AF30: 03 04 02 10 00 03 04 03 14 00 01 04 82 00 04 00  // ................
    AF40: 4A 05 83 00 80 00 00 00 44 97 00 2D 05 00 10 00  // J.......D..-....
    AF50: 00 00 2D 05 01 10 00 00 00 2D 05 02 10 00 00 00  // ..-......-......
    AF60: 2D 05 03 10 00 00 00 4A 25 83 00 02 44 B8 00 01  // -......J%...D...
    AF70: 04 82 00 1C 00 0D 25 83 00 10 01 04 82 00 04 00  // ......%.........
    AF80: 4A 25 83 00 01 44 AA 00 01 04 82 00 18 00 01 21  // J%...D.........!
    AF90: 83 00 02 01 02 82 00 00 01 01 83 00 01 56 00 40  // .............V.@
    AFA0: 03 29 40 02 15 25 40 06 01 04 82 00 00 00 5C 8A  // .)@..%@.......\.
    AFB0: 83 00 3F 00 40 01 02 82 00 01 01 99 83 00 04 01  // ..?.@...........
    AFC0: 02 82 00 03 01 99 83 00 05 01 04 82 00 1C 00 0D  // ................
    AFD0: A5 83 00 10 01 02 82 00 01 0D E5 83 00 04 01 02  // ................
    AFE0: 82 00 02 01 01 83 00 03 01 02 82 00 01 01 09 83  // ................
    AFF0: 00 05 0D E5 83 00 02 01 04 82 00 1C 00 0D 25 83  // ..............%.
    B000: 00 01 01 04 82 00 04 00 4A 25 83 00 02 44 32 01  // ........J%...D2.
    B010: 01 05 82 00 40 01 50 C0 07 25 83 00 F7 02 02 00  // ....@.P..%......
    B020: 04 4C E5 04 08 49 68 01 52 2F 02 01 01 00 02 02  // .L...Ih.R/......
    B030: 00 04 02 E5 00 02 52 3F 5B 7A 40 00 68 02 50 C0  // ......R?[z@.h.P.
    B040: 78 02 50 C0 8C 02 50 C0 90 02 50 C0 94 02 50 C0  // x.P...P...P...P.
    B050: 98 02 50 C0 AC 02 50 C0 B0 02 50 C0 E4 02 50 C0  // ..P...P...P...P.
    B060: F4 02 50 C0 08 03 50 C0 0C 03 50 C0 10 03 50 C0  // ..P...P...P...P.
    B070: 14 03 50 C0 28 03 50 C0 2C 03 50 C0 22 01 02 01  // ..P.(.P.,.P."...
    B080: 0C 04 37 00 00 5C 25 2B 08 F8 01 54 20 24 15 07  // ..7..\%+...T $..
    B090: 25 EB 09 FE 4B E5 00 40 44 A1 00 01 05 91 0A 0D  // %...K..@D.......
    B0A0: 00 00 00 03 B0 01 92 0A 52 3B 03 01 00 00 56 38  // ........R;....V8
    B0B0: 00 3E 01 00 01 45 62 00 3E 01 00 02 45 53 00 01  // .>...Eb.>...ES..
    B0C0: 05 91 0A 0D 00 00 00 07 A5 92 0A F7 43 A1 00 01  // ............C...
    B0D0: 05 91 0A 0D 00 00 00 54 38 92 0A 43 A1 00 03 00  // .......T8..C....
    B0E0: 02 96 0A 03 F8 01 99 0A 01 05 91 0A 00 00 00 00  // ................
    B0F0: 03 08 01 92 0A 01 05 91 0A 0D 00 00 00 5C 8D 92  // .............\..
    B100: 0A 00 00 80 00 07 E5 99 0A BF 07 65 96 0A F0 01  // ...........e....
    B110: 05 91 0A 00 00 00 00 01 0D 92 0A 77 77 02 01 01  // ...........ww...
    B120: 00 52 10 02 01 01 00 02 E5 01 01 52 3F 52 30 02  // .R.........R?R0.
    B130: E5 01 02 02 01 02 00 52 3F 07 25 F3 09 FC 55 00  // .......R?.%...U.
    B140: 01 4A 25 80 0A 08 49 D1 00 02 25 01 07 52 40 4B  // .J%...I...%..R@K
    B150: E5 00 40 44 12 01 01 05 91 0A 0D 00 00 00 4C A5  // ..@D..........L.
    B160: 01 80 49 ED 00 54 38 92 0A 01 B2 92 0A 01 52 3B  // ..I..T8.......R;
    B170: 3E 01 00 01 46 12 01 01 FA 99 0A 01 01 6A 96 0A  // >...F........j..
    B180: 02 01 05 91 0A 00 00 00 00 01 0A 92 0A 01 0D 25  // ...............%
    B190: EB 09 01 07 25 2B 08 F8 0D 25 24 15 03 5B CB 04  // ....%+...%$..[..
    B1A0: 01 07 08 08 37 00 00 3D 25 01 FF 44 95 04 3D 25  // ....7..=%..D..=%
    B1B0: 01 19 46 91 04 3D 25 01 02 47 91 04 3D 25 01 14  // ..F..=%..G..=%..
    B1C0: 45 95 04 3D 05 00 00 00 00 00 44 43 02 4B E5 01  // E..=......DC.K..
    B1D0: 02 49 61 00 02 A9 02 02 55 28 02 0E E5 01 80 3D  // .Ia.....U(.....=
    B1E0: 05 00 40 4B 4C 00 45 61 00 0D A5 C2 9D 40 03 21  // ..@KL.Ea.....@.!
    B1F0: 41 01 33 25 41 14 03 22 43 41 0D E2 C1 48 44 66  // A.3%A.."CA...HDf
    B200: FF 2D 0D 42 AB 04 03 39 40 01 09 0D 40 30 00 1B  // .-.B...9@...@0..
    B210: 0D 40 02 2D 0A 42 40 56 00 00 56 00 01 02 05 03  // .@.-.B@V..V.....
    B220: 40 01 00 00 02 65 01 01 20 05 00 0A 00 00 00 03  // @....e.. .......
    B230: 02 46 40 3D 05 00 80 8D 5B 00 47 A6 00 0E E5 01  // .F@=....[.G.....
    B240: 08 55 28 01 4B E5 01 08 44 B1 00 1B 05 46 01 3E  // .U(.K...D....F.>
    B250: 05 46 A0 2F C5 01 48 C6 00 2C 65 01 01 15 05 46  // .F./..H..,e....F
    B260: 01 43 B1 00 14 2D 01 05 03 05 01 00 00 01 00 4B  // .C...-.........K
    B270: E5 01 02 49 33 01 4B E5 01 80 49 DF 00 27 04 46  // ...I3.K...I..'.F
    B280: 00 00 3E 05 41 00 00 00 00 44 45 01 03 04 40 00  // ..>.A....DE...@.
    B290: 00 03 02 00 41 27 02 40 41 03 02 40 00 3E 05 41  // ....A'.@A..@.>.A
    B2A0: 00 00 00 00 49 F3 00 7C 05 00 00 00 01 00 7E 04  // ....I..|......~.
    B2B0: 40 00 00 7C 04 40 00 00 7E 02 40 00 03 02 01 40  // @..|.@..~.@....@
    B2C0: 3E 05 01 33 F3 00 00 48 33 01 03 05 01 00 00 01  // >..3...H3.......
    B2D0: 00 27 04 46 00 00 7C 02 01 41 7E 04 40 00 00 03  // .'.F..|..A~.@...
    B2E0: 0A 00 40 27 04 46 00 00 03 8A 00 40 56 18 01 43  // ..@'.F.....@V..C
    B2F0: AF 01 7C 02 40 00 7E 05 40 A0 86 01 00 03 01 41  // ..|.@.~.@......A
    B300: 03 09 05 41 03 00 00 00 6F 02 40 41 7C 05 40 45  // ...A....o.@A|.@E
    B310: 0C 00 00 7E 05 40 40 4B 4C 00 3E 05 40 00 00 00  // ...~.@@KL.>.@...
    B320: 00 49 8A 01 03 25 40 01 7C 05 40 40 4B 4C 00 7E  // .I...%@.|.@@KL.~
    B330: 05 40 45 0C 00 00 03 01 41 03 09 05 41 03 00 00  // .@E.....A...A...
    B340: 00 75 02 40 41 1B 05 40 01 2D 02 00 40 66 FF 2D  // .u.@A..@.-..@f.-
    B350: 0D 42 9F 04 56 00 40 03 21 40 01 33 25 40 14 15  // .B..V.@.!@.3%@..
    B360: 25 40 01 2D 0A 42 40 03 0C 48 00 00 4A 65 E2 48  // %@.-.B@..H..Je.H
    B370: 10 44 FE 02 03 39 41 01 09 0D 41 30 00 1B 0D 41  // .D...9A...A0...A
    B380: 04 3C 22 5E 49 41 49 22 02 3C 21 23 49 03 49 22  // .<"^IAI".<!#I.I"
    B390: 02 3C 29 25 49 03 49 22 02 03 20 41 5F 49 09 25  // .<)%I.I".. A_I.%
    B3A0: 41 E0 3E 29 41 01 49 22 02 4B E5 01 40 49 F6 02  // A.>)A.I".K..@I..
    B3B0: 3C 02 20 49 00 49 22 02 3C 0A 22 49 01 44 26 02  // <. I.I".<."I.D&.
    B3C0: 0E E5 01 01 3A 00 00 4B E5 01 01 44 69 04 4B E5  // ....:..K...Di.K.
    B3D0: 01 02 49 43 02 3D 25 02 05 46 43 02 55 28 02 52  // ..IC.=%..FC.U(.R
    B3E0: 23 56 00 40 03 21 40 01 33 25 40 14 03 0A 48 40  // #V.@.!@.3%@...H@
    B3F0: 07 25 60 01 FE 66 FF 2D 0D 42 9F 04 56 00 40 03  // .%`..f.-.B..V.@.
    B400: 21 40 01 33 25 40 14 15 25 40 01 2D 0A 42 40 03  // !@.3%@..%@.-.B@.
    B410: 0C 48 00 00 07 65 23 49 FE 54 00 21 49 54 00 22  // .H...e#I.T.!IT."
    B420: 49 07 65 E2 48 EF 4A 65 E2 48 20 49 88 02 07 65  // I.e.H.Je.H I...e
    B430: F2 48 EF 4A 65 F2 48 20 49 95 02 3D 05 00 00 00  // .H.Je.H I..=....
    B440: 00 00 49 FE 02 4A A5 C1 48 80 44 D2 02 56 00 41  // ..I..J..H.D..V.A
    B450: 5C 25 E0 48 F8 06 51 02 4A 65 E0 48 01 44 BA 02  // \%.H..Q.Je.H.D..
    B460: 2D A5 41 01 2D 0D 48 10 00 3E A5 41 04 45 B2 02  // -.A.-.H..>.A.E..
    B470: 56 08 48 03 21 41 01 33 25 41 14 03 22 43 41 07  // V.H.!A.3%A.."CA.
    B480: E2 C1 48 45 4A E5 C1 48 3F 49 91 04 07 A5 C2 9D  // ..HEJ..H?I......
    B490: BF 43 91 04 01 02 20 49 00 43 17 04 01 05 DA 48  // .C.... I.C.....H
    B4A0: 80 88 01 00 3D A5 01 00 49 1F 03 3D 05 00 E0 3B  // ....=...I..=...;
    B4B0: 66 00 45 1F 03 07 25 DB 48 FE 43 3F 03 0D 25 DB  // f.E...%.H.C?..%.
    B4C0: 48 01 3D A5 01 02 49 3F 03 4B E5 01 08 44 3F 03  // H.=...I?.K...D?.
    B4D0: 01 05 7A 49 80 88 01 00 0D 25 7B 49 01 0D 25 5F  // ..zI.....%{I..%_
    B4E0: 49 01 03 39 40 01 09 0D 40 30 00 1B 0D 40 04 01  // I..9@...@0...@..
    B4F0: 22 5E 49 40 0D 65 5F 49 80 3E 25 40 02 44 66 03  // "^I@.e_I.>%@.Df.
    B500: 03 65 40 04 5C 6A 5F 49 FB 40 66 FF 56 00 40 2D  // .e@.\j_I.@f.V.@-
    B510: 0D 42 BB 04 03 21 40 03 09 0D 40 03 00 15 0D 40  // .B...!@...@....@
    B520: 02 2D 0A 42 40 01 0C 24 49 00 00 01 E4 26 49 02  // .-.B@..$I....&I.
    B530: 00 0D 25 26 49 02 01 21 23 49 03 01 A5 23 49 E8  // ..%&I..!#I...#I.
    B540: 01 02 20 49 00 54 00 21 49 01 02 22 49 01 4B E5  // .. I.T.!I.."I.K.
    B550: 01 08 44 BF 03 07 65 5F 49 FE 43 C4 03 0D 65 5F  // ..D...e_I.C...e_
    B560: 49 01 5C 29 5F 49 1F 01 01 8D 2B 49 20 03 01 29  // I.\)_I....+I ..)
    B570: 25 49 03 07 65 5F 49 7F 5C 65 E2 48 E3 04 4A 65  // %I..e_I.\e.H..Je
    B580: E2 48 20 49 E0 03 0D 65 E2 48 10 4A 65 E2 48 20  // .H I...e.H.Je.H 
    B590: 44 ED 03 4B E5 01 02 49 17 04 5C 65 F2 48 E3 04  // D..K...I..\e.H..
    B5A0: 4A 65 F2 48 20 49 02 04 0D 65 F2 48 10 4A 65 F2  // Je.H I...e.H.Je.
    B5B0: 48 20 44 0F 04 3D A5 01 02 44 25 04 3D A5 01 03  // H D..=...D%.=...
    B5C0: 49 2C 04 4B E5 01 80 49 3A 04 03 01 00 02 02 B1  // I,.K...I:.......
    B5D0: 02 01 52 41 02 02 02 00 0D 65 5F 49 40 4A 65 5F  // ..RA.....e_I@Je_
    B5E0: 49 20 44 3F 04 07 65 5F 49 BF 56 00 40 03 21 40  // I D?..e_I.V.@.!@
    B5F0: 01 33 25 40 14 03 0A 48 40 0D 25 60 01 01 51 01  // .3%@...H@.%`..Q.
    B600: 4B E5 01 02 49 91 04 3A 00 00 3D 25 02 05 46 91  // K...I..:..=%..F.
    B610: 04 02 25 03 02 02 E1 03 02 02 61 03 01 02 B9 03  // ..%.......a.....
    B620: 01 08 A5 03 04 0E B1 03 02 02 01 02 00 52 2E 3A  // .............R.:
    B630: 00 00 5B 02 25 01 0B 43 69 04 7A 2C 00 00 00 A0  // ..[.%..Ci.z,....
    B640: 00 40 51 E0 51 80 52 20 53 40 42 0F 00 40 42 0F  // .@Q.Q.R S@B..@B.
    B650: 00 40 42 0F 00 40 42 0F 00 A1 83 64 00 24 83 32  // .@B..@B....d.$.2
    B660: 00 A3 76 19 00 A3 76 0C 00 00 87 01 02 01 00 00  // ..v...v.........
    B670: 37 00 00 3D 65 00 07 44 BC 00 56 00 40 20 25 00  // 7..=e..D..V.@ %.
    B680: 03 03 0A 48 40 3D 65 00 01 44 BB 00 56 08 48 03  // ...H@=e..D..V.H.
    B690: 21 48 00 01 0D FA 02 02 00 52 14 01 05 8D 1A 00  // !H.......R......
    B6A0: 00 40 00 01 25 BE 1B 02 01 A5 CC 1A C0 01 0D 91  // .@..%...........
    B6B0: 1A 45 01 5C 05 DA 1A F0 FF FF FF 02 00 00 00 07  // .E.\............
    B6C0: 25 03 1B FB 0D 25 7D 1A 01 01 05 34 1B 01 00 00  // %....%}....4....
    B6D0: 00 5C 05 36 1B EE FE 00 00 11 01 FF 7F 01 25 3A  // .\.6..........%:
    B6E0: 1B 11 5C 05 32 1B F8 F8 F8 FF 00 00 00 00 01 0D  // ..\.2...........
    B6F0: 33 1B FF 7F 01 05 B3 1B 07 40 00 00 0D A5 B6 1B  // 3........@......
    B700: 01 01 05 31 1B 00 08 00 04 01 0D 86 1B 04 00 01  // ...1............
    B710: 0D E7 1B 01 00 5C 05 00 1B FF FF FD FF 00 00 02  // .....\..........
    B720: 00 3A 00 00 5B 5B 5C 05 F6 02 FF 00 FE 9F 04 FC  // .:..[[\.........
    B730: 00 20 01 05 F9 02 10 27 02 00 01 05 14 03 00 08  // . .....'........
    B740: 00 20 01 05 0C 03 00 90 00 10 01 25 09 01 01 01  // . .........%....
    B750: 05 3B 01 64 02 12 00 01 05 30 01 A0 86 11 00 01  // .;.d.....0......
    B760: E5 09 17 64 01 05 22 17 00 00 9B 02 01 05 06 17  // ...d..".........
    B770: 21 84 20 00 01 8D E5 17 64 00 01 25 E4 17 01 01  // !. .....d..%....
    B780: 05 31 01 3C 00 01 08 5C 65 D4 00 FC 02 01 0D FC  // .1.<...\e.......
    B790: 00 00 01 01 05 2F 48 00 00 00 00 01 05 04 48 00  // ...../H.......H.
    B7A0: 00 00 00 01 05 3A 48 0F 00 00 00 0D E5 CB 05 10  // .....:H.........
    B7B0: 01 05 F8 16 00 00 00 30 01 25 32 01 00 55 00 00  // .......0.%2..U..
    B7C0: 52 4E 02 25 00 07 52 33 02 05 00 00 07 00 00 52  // RN.%..R3.......R
    B7D0: 4D 2C 25 00 01 3D 25 00 06 45 65 01 66 16 03 0C  // M,%..=%..Ee.f...
    B7E0: 41 04 00 4C 0D 41 02 00 44 B7 00 0D A5 C9 05 04  // A..L.A..D.......
    B7F0: 5B 00 07 00 01 01 00 00 5B 00 8A 00 01 01 00 00  // [.......[.......
    B800: 37 00 00 01 05 03 2B 54 10 76 32 56 00 41 03 50  // 7.....+T.v2V.A.P
    B810: 41 9F 03 56 00 40 66 FF 2D 0D 42 4A 00 4C 65 41  // A..V.@f.-.BJ.LeA
    B820: 10 44 46 00 09 65 41 07 03 2A 40 41 15 0D 40 03  // .DF..eA..*@A..@.
    B830: 2D 0A 42 40 01 04 02 08 00 00 01 04 03 2B 04 00  // -.B@.........+..
    B840: 5B 7A 40 00 23 10 54 76 45 10 76 32 32 10 54 76  // [z@.#.TvE.v22.Tv
    B850: 54 10 76 32 03 21 54 76 05 41 76 32 13 20 54 76  // T.v2.!Tv.Av2. Tv
    B860: 15 40 76 32 32 10 45 76 54 10 67 32 32 10 54 76  // .@v22.EvT.g22.Tv
    B870: 54 10 76 32 32 10 65 47 54 10 27 63 32 10 75 46  // T.v22.eGT.'c2.uF
    B880: 54 10 37 62 61 04 01 01 08 00 37 00 00 01 05 82  // T.7ba.....7.....
    B890: 00 00 00 20 C0 07 A5 83 00 FC 01 05 82 00 2C 01  // ... ..........,.
    B8A0: 50 C0 37 05 00 01 0D 2C 01 06 02 01 05 A4 01 09  // P.7....,........
    B8B0: 00 40 00 01 05 A0 01 03 00 00 00 01 0D B0 01 02  // .@..............
    B8C0: 04 01 E5 98 01 00 4A 25 00 00 01 49 E6 00 5C 25  // ......J%...I..\%
    B8D0: 0C 00 80 64 5C 25 10 00 80 64 5C 25 14 00 80 64  // ...d\%...d\%...d
    B8E0: 5C 25 18 00 80 64 5C 25 1C 00 80 64 5C 25 24 00  // \%...d\%...d\%$.
    B8F0: 80 18 5C 25 28 00 80 64 0D 25 2C 00 01 0D 25 20  // ..\%(..d.%,...% 
    B900: 00 01 0D 25 00 00 01 01 05 D8 01 B8 29 E8 00 01  // ...%........)...
    B910: 05 DC 01 B8 29 E8 00 01 05 E0 01 B8 29 E8 00 01  // ....).......)...
    B920: 05 E4 01 B8 29 E8 00 01 E5 14 02 64 01 05 74 01  // ....)......d..t.
    B930: 00 00 24 00 37 00 00 01 05 82 00 14 00 00 C0 0D  // ..$.7...........
    B940: 65 83 00 01 51 FA 01 05 82 00 00 00 00 C0 0D 25  // e...Q..........%
    B950: 83 00 01 01 05 82 00 70 01 50 C0 37 05 00 54 00  // .......p.P.7..T.
    B960: 18 01 01 05 A8 01 20 40 00 00 01 E5 60 02 64 01  // ...... @....`.d.
    B970: E5 DC 02 64 01 25 44 03 00 37 00 00 07 A5 97 01  // ...d.%D..7......
    B980: F7 54 00 92 01 01 05 82 00 78 03 20 C0 01 0D 83  // .T.......x. ....
    B990: 00 19 00 01 05 82 00 00 00 60 C0 5C 05 83 00 FD  // .........`.\....
    B9A0: FF FF FF 02 00 00 00 01 05 82 00 10 00 00 C0 01  // ................
    B9B0: 05 83 00 02 00 80 2A 01 05 82 00 70 03 00 80 3C  // ......*....p...<
    B9C0: 05 83 00 00 00 02 00 46 35 04 01 05 82 00 60 03  // .......F5.....`.
    B9D0: 20 C0 37 05 00 5C 05 60 03 10 01 18 F0 20 A4 62  //  .7..\.`..... .b
    B9E0: 00 5C 05 64 03 FF FF 00 FC 00 00 01 01 5C 05 6C  // .\.d.........\.l
    B9F0: 03 10 01 08 F0 20 A4 62 00 5C 05 70 03 FF FF 00  // ..... .b.\.p....
    BA00: FC 00 00 01 01 5C 05 50 03 87 00 7C 00 19 52 9D  // .....\.P...|..R.
    BA10: 7F 5C 05 54 03 07 0C 80 FF 38 20 01 00 5C 05 E4  // .\.T.....8 ..\..
    BA20: 01 BF FF FF DF BF FF 01 20 5C 05 84 00 FF FD FF  // ........ \......
    BA30: FF FF 7D A0 00 37 00 00 01 05 82 00 04 00 30 C0  // ..}..7........0.
    BA40: 37 05 00 01 05 04 00 02 00 91 06 01 05 0C 00 60  // 7..............`
    BA50: 6A 00 08 01 05 10 00 01 00 00 00 37 00 00 02 05  // j..........7....
    BA60: 00 44 00 03 05 52 45 03 01 00 00 02 05 00 44 00  // .D...RE.......D.
    BA70: 18 0C 52 45 01 05 82 00 04 00 30 C0 37 05 00 3E  // ..RE......0.7..>
    BA80: 0D 00 0A 00 44 39 02 3D 0D 00 38 02 44 26 02 3D  // ....D9.=..8.D&.=
    BA90: 0D 00 45 01 44 26 02 01 05 1C 00 4D 00 00 AA 01  // ..E.D&.....M....
    BAA0: 05 20 00 DA A7 8C 31 43 49 02 01 05 1C 00 4D 00  // . ....1CI.....M.
    BAB0: C0 AC 01 05 20 00 EC A7 78 31 43 49 02 01 05 1C  // .... ...x1CI....
    BAC0: 00 4D 00 C0 AC 01 05 20 00 EC A7 78 31 01 05 24  // .M..... ...x1..$
    BAD0: 00 00 21 00 00 01 05 28 00 FF FF FF FF 01 05 64  // ..!....(.......d
    BAE0: 00 96 43 81 01 01 05 68 00 87 25 09 40 01 05 6C  // ..C....h..%.@..l
    BAF0: 00 35 14 BF 02 01 05 70 00 01 80 00 00 01 05 2C  // .5.....p.......,
    BB00: 00 00 21 00 00 01 05 30 00 FF FF FF FF 37 05 00  // ..!....0.....7..
    BB10: 03 F8 00 80 00 09 E5 00 0C 4C E5 00 04 44 AF 02  // .........L...D..
    BB20: 4C E5 00 08 49 BD 02 69 E5 00 04 03 0D 00 00 02  // L...I..i........
    BB30: 43 B6 02 69 E5 00 08 56 08 00 5C 8A 10 00 0F F0  // C..i...V..\.....
    BB40: 00 4C E5 00 04 44 D2 02 0D 65 24 00 04 54 00 28  // .L...D...e$..T.(
    BB50: 00 0D 25 24 00 01 4C E5 00 08 44 E7 02 0D 65 2C  // ..%$..L...D...e,
    BB60: 00 04 54 00 30 00 0D 25 2C 00 01 37 00 00 02 05  // ..T.0..%,..7....
    BB70: 00 44 00 03 05 52 45 03 01 00 00 02 05 00 44 00  // .D...RE.......D.
    BB80: 18 0C 52 45 01 05 82 00 04 00 30 C0 37 05 00 3E  // ..RE......0.7..>
    BB90: 0D 00 0A 00 44 91 03 3D 0D 00 38 02 44 91 03 3D  // ....D..=..8.D..=
    BBA0: 0D 00 45 01 44 91 03 03 F8 00 80 00 09 E5 00 0C  // ..E.D...........
    BBB0: 4C E5 00 04 44 44 03 4C E5 00 08 49 91 03 02 05  // L...DD.L...I....
    BBC0: 00 14 01 0B 06 43 4B 03 02 05 00 14 01 05 06 52  // .....CK........R
    BBD0: 45 08 05 00 3F 00 00 00 01 05 82 00 04 00 30 C0  // E...?.........0.
    BBE0: 37 05 00 56 00 41 03 21 41 00 09 25 41 1F 4B 25  // 7..V.A.!A..%A.K%
    BBF0: 00 20 44 88 03 03 A5 41 20 33 8A 41 41 56 08 41  // . D....A 3.AAV.A
    BC00: 15 1D 41 03 31 02 20 00 41 43 91 03 15 05 41 13  // ..A.1. .AC....A.
    BC10: 2B 02 20 00 41 37 00 00 03 05 00 24 00 30 C0 03  // +. .A7.....$.0..
    BC20: 05 01 44 00 30 C0 01 05 82 00 80 00 30 C0 03 38  // ..D.0.......0..8
    BC30: 40 83 00 4C 25 40 04 49 11 04 01 02 82 00 00 4A  // @..L%@.I.......J
    BC40: 25 83 00 01 49 11 04 0D 65 83 00 04 66 FF 2D 0D  // %...I...e...f.-.
    BC50: 42 39 04 56 00 41 01 02 82 00 01 4A 25 83 00 01  // B9.V.A.....J%...
    BC60: 49 D2 03 01 02 82 00 01 01 04 83 00 00 00 2D 0D  // I.............-.
    BC70: 42 04 00 2D 25 41 04 3E 25 41 28 45 D2 03 01 02  // B..-%A.>%A(E....
    BC80: 82 00 01 4A 25 83 00 01 49 FA 03 01 02 82 00 00  // ...J%...I.......
    BC90: 07 65 83 00 FB 2D 05 00 08 00 00 00 2D 05 01 08  // .e...-......-...
    BCA0: 00 00 00 1B 05 40 01 3E 05 00 2C 00 30 C0 44 AF  // .....@.>..,.0.D.
    BCB0: 03 01 05 BD 00 00 6C 00 00 5B 7A 28 00 25 00 00  // ......l..[z(.%..
    BCC0: 00 49 20 20 00 4D 60 46 00 6D 40 20 00 71 80 40  // .I  .M`F.m@ .q.@
    BCD0: 00 75 00 00 00 79 00 00 00 7D 00 68 00 01 40 0F  // .u...y...}.h..@.
    BCE0: 00 0A 00 00 00 00 52 00 01 01 00 00 37 00 00 52  // ......R.....7..R
    BCF0: 3E 03 0C 41 14 00 01 0A 0A 15 41 33 0D 41 01 00  // >..A......A3.A..
    BD00: 1B 0D 41 04 15 05 41 10 2D 05 41 00 F4 00 F4 01  // ..A...A.-.A.....
    BD10: 02 09 08 41 33 8D 41 00 F4 1B 1D 41 07 01 1A 06  // ...A3.A....A....
    BD20: 00 41 01 05 01 0B 00 00 00 F4 01 25 C9 00 F4 01  // .A.........%....
    BD30: 05 C4 00 00 00 00 00 5B 11 01 01 01 00 04 37 00  // .......[......7.
    BD40: 00 03 F9 46 00 08 E5 00 7F 03 0A 41 42 2D 0D 41  // ...F.......AB-.A
    BD50: 04 00 03 8C 41 02 00 2D 0C 42 00 00 2D 0D 42 04  // ....A..-.B..-.B.
    BD60: 00 56 30 46 03 04 40 00 00 3E 05 40 00 00 00 00  // .V0F..@..>.@....
    BD70: 44 49 00 3D FA 00 40 44 50 00 3E A5 46 01 49 5B  // DI.=..@DP.>.F.I[
    BD80: 00 33 1A 42 41 43 62 00 03 A5 46 01 3D 02 00 40  // .3.BACb...F.=..@
    BD90: 47 62 00 2D 1A 42 41 43 2C 00 4C E5 46 80 44 6A  // Gb.-.BAC,.L.F.Dj
    BDA0: 00 5B 03 8A 41 42 56 00 40 03 0A 42 41 03 8C 40  // .[..ABV.@..BA..@
    BDB0: 00 00 3E 8D 40 FF FF 44 10 01 03 24 42 02 00 03  // ..>.@..D...$B...
    BDC0: 22 46 42 09 25 42 3F 3E 25 42 05 49 A6 00 03 1A  // "FB.%B?>%B.I....
    BDD0: 40 40 03 0D 42 04 00 2D 1A 42 41 43 E1 00 3E 25  // @@..B..-.BAC..>%
    BDE0: 42 06 49 CD 00 33 0D 41 03 00 56 08 42 2D 0D 40  // B.I..3.A..V.B-.@
    BDF0: 01 00 3E 1A 40 40 47 9F 00 2D 1A 42 41 2D 0D 41  // ..>.@@G..-.BA-.A
    BE00: 03 00 43 04 01 03 1A 40 40 09 0D 42 1F 00 2D 1A  // ..C....@@..B..-.
    BE10: 42 41 4C 25 46 80 49 04 01 56 18 40 4C 25 46 40  // BAL%F.I..V.@L%F@
    BE20: 49 F9 00 01 02 00 00 40 01 04 01 00 00 00 43 04  // I......@......C.
    BE30: 01 01 02 91 0A 40 01 04 92 0A 00 00 2D 0D 41 03  // .....@......-.A.
    BE40: 00 03 8A 41 42 43 71 00 5B 00 21 00 02 01 00 04  // ...ABCq.[.!.....
    BE50: 37 00 00 01 01 A4 00 01 01 01 94 00 00 3C 25 95  // 7............<%.
    BE60: 00 01 49 13 00 02 00 01 A4 00 5B 00 8E 00 01 02  // ..I.......[.....
    BE70: 00 04 66 FF 56 08 47 2D 0D 42 5C 00 03 21 47 00  // ..f.V.G-.B\..!G.
    BE80: 09 25 47 F0 42 22 47 63 00 43 00 63 80 36 00 63  // .%G.B"Gc.C.c.6.c
    BE90: 60 3E 00 63 20 2E 00 5A 5A 5B 2D 0D 42 26 00 43  // `>.c ..ZZ[-.B&.C
    BEA0: 43 00 2D 0D 42 0C 00 43 43 00 2D 0D 42 18 00 03  // C.-.B..CC.-.B...
    BEB0: 21 47 00 09 25 47 07 2D 0A 42 47 2D 0A 42 47 03  // !G..%G.-.BG-.BG.
    BEC0: 0C 48 00 00 5B 7A 32 00 00 00 00 02 00 04 00 26  // .H..[z2........&
    BED0: 00 28 00 2A 00 00 02 00 2C 00 2D 00 2E 00 2F 00  // .(.*....,.-.../.
    BEE0: 00 00 00 01 00 02 00 03 00 04 00 05 00 0A 00 00  // ................
    BEF0: A0 00 40 51 E0 51 80 52 20 53 BF 02 02 02 1C 04  // ..@Q.Q.R S......
    BF00: 20 05 01 64 00 00 00 03 02 02 40 66 1F 02 04 01  //  ..d......@f....
    BF10: 0C 00 52 45 08 05 01 FF 03 00 00 3D 0D 01 00 00  // ..RE.......=....
    BF20: 49 2F 00 02 04 00 28 00 5B 02 04 01 1C 00 52 45  // I/....(.[.....RE
    BF30: 08 05 01 FF 00 00 00 20 05 01 A0 86 01 00 7C 04  // ....... ......|.
    BF40: 40 20 00 7E 05 40 FF 00 00 00 03 02 01 40 03 04  // @ .~.@.......@..
    BF50: 40 24 00 21 05 40 A0 86 01 00 2D 02 01 40 02 E5  // @$.!.@....-..@..
    BF60: 00 01 56 00 03 02 0D 03 02 00 56 00 04 7C 04 02  // ..V.......V..|..
    BF70: 3C 00 7E 05 40 10 27 00 00 02 02 01 40 02 04 02  // <.~.@.'.....@...
    BF80: 4C 00 02 A4 03 56 00 02 E4 03 5A 00 52 37 03 01  // L....V....Z.R7..
    BF90: 05 01 03 71 03 03 03 04 40 64 00 21 05 40 A0 86  // ...q....@d.!.@..
    BFA0: 01 00 02 02 01 40 55 18 03 02 04 02 50 00 02 E4  // .....@U.....P...
    BFB0: 03 5B 00 52 37 7C 04 02 40 00 7E 05 40 10 27 00  // .[.R7|..@.~.@.'.
    BFC0: 00 02 02 02 40 02 E4 03 57 00 52 37 02 E5 03 01  // ....@...W.R7....
    BFD0: 02 02 02 01 52 37 03 01 06 01 03 B1 03 03 7C 05  // ....R7........|.
    BFE0: 06 A0 86 01 00 7E 02 40 05 03 02 03 40 03 02 05  // .....~.@....@...
    BFF0: 40 43 FA 00 3D E5 00 00 44 66 02 3E 04 03 04 00  // @C..=...Df.>....
    C000: 47 21 01 03 02 03 05 3E 04 03 04 00 47 21 01 03  // G!.....>....G!..
    C010: 04 03 04 00 2D 05 03 71 02 00 00 03 04 40 7C 00  // ....-..q.....@|.
    C020: 3E 05 40 00 00 00 00 44 D9 01 33 04 03 7C 00 7C  // >.@....D..3..|.|
    C030: 02 03 03 7E 05 40 A0 86 01 00 03 02 46 40 02 04  // ...~.@......F@..
    C040: 01 50 00 03 04 40 64 00 21 05 40 A0 86 01 00 02  // .P...@d.!.@.....
    C050: 02 02 40 02 05 03 02 00 00 00 02 A4 03 5B 00 52  // ..@..........[.R
    C060: 37 7C 04 03 4C 00 7E 05 40 A0 86 01 00 02 02 02  // 7|..L.~.@.......
    C070: 40 02 E4 03 5A 00 52 37 02 02 02 01 02 E5 03 01  // @...Z.R7........
    C080: 52 37 03 01 04 01 02 04 01 40 00 02 A4 03 57 00  // R7.......@....W.
    C090: 7C 04 03 3C 00 7E 05 40 A0 86 01 00 02 02 02 40  // |..<.~.@.......@
    C0A0: 02 E4 03 56 00 52 37 7C 05 04 10 27 00 00 7E 01  // ...V.R7|...'..~.
    C0B0: 40 01 03 02 04 40 03 02 05 02 3E 02 05 04 45 CE  // @....@....>...E.
    C0C0: 01 33 02 05 04 43 E0 01 33 02 04 05 03 02 05 04  // .3...C..3.......
    C0D0: 43 E0 01 03 02 04 02 56 00 05 7C 04 02 74 00 7E  // C......V..|..t.~
    C0E0: 05 40 10 27 00 00 03 02 04 40 7C 02 40 40 02 02  // .@.'.....@|.@@..
    C0F0: 01 40 02 02 02 41 7C 04 02 78 00 7E 05 40 10 27  // .@...A|..x.~.@.'
    C100: 00 00 7C 02 40 40 02 25 03 01 52 37 7C 02 05 05  // ..|.@@.%..R7|...
    C110: 52 37 02 25 03 03 52 37 03 04 40 68 00 21 05 40  // R7.%..R7..@h.!.@
    C120: 0A 00 00 00 2C 02 01 40 7C 04 02 6C 00 7E 05 40  // ....,..@|..l.~.@
    C130: 10 27 00 00 2C 02 01 40 7C 04 02 70 00 7E 05 40  // .'..,..@|..p.~.@
    C140: 10 27 00 00 2C 02 01 40 26 05 01 64 00 00 00 21  // .'..,..@&..d...!
    C150: 05 40 64 00 00 00 2D 02 02 40 55 38 00 43 68 00  // .@d...-..@U8.Ch.
    C160: 2D 05 05 70 02 00 00 27 05 05 71 02 00 00 21 05  // -..p...'..q...!.
    C170: 40 71 02 00 00 3E 04 40 04 00 47 89 02 02 04 00  // @q...>.@..G.....
    C180: 2C 00 5B 56 00 00 03 31 00 00 33 25 00 01 02 02  // ,.[V...1..3%....
    C190: 00 40 03 04 46 08 00 03 04 40 80 00 15 25 00 02  // .@..F....@...%..
    C1A0: 2D 0A 42 00 21 04 40 84 00 2D 02 46 40 3D 02 00  // -.B.!.@..-.F@=..
    C1B0: 46 48 BE 02 02 02 00 46 5B 00 78 00 01 01 00 00  // FH.....F[.x.....
    C1C0: 37 00 00 52 14 0D A5 51 1B 01 54 20 54 1B 07 25  // 7..R...Q..T T..%
    C1D0: 44 1B FE 54 20 45 1B 42 29 00 63 00 31 00 63 01  // D..T E.B).c.1.c.
    C1E0: 39 00 63 02 4D 00 5A 5A 43 70 00 01 25 45 1B 02  // 9.c.M.ZZCp..%E..
    C1F0: 43 3E 00 01 25 45 1B 01 54 20 42 1B 54 00 43 1B  // C>..%E..T B.T.C.
    C200: 54 00 47 1B 43 70 00 01 0D 43 1B 01 01 01 05 47  // T.G.Cp...C.....G
    C210: 1B 01 00 01 00 0D 65 48 1B 01 0D 65 4B 1B 01 01  // ......eH...eK...
    C220: 0D 53 1B 10 10 01 25 42 1B 01 54 30 51 1B 3A 00  // .S....%B..T0Q.:.
    C230: 00 5B 74 00 01 01 00 00 37 00 00 4A A5 CB 05 01  // .[t.....7..J....
    C240: 44 15 00 02 65 00 01 0E 25 00 80 52 14 03 00 46  // D...e...%..R...F
    C250: CC 00 08 25 00 0F 52 14 54 30 9D 1B 3C 69 9D 1B  // ...%..R.T0..<i..
    C260: 00 44 65 00 01 69 9D 1B 00 3D 65 00 00 44 65 00  // .De..i...=e..De.
    C270: 4A A5 9C 1B 01 44 65 00 4C 25 46 01 44 69 00 4A  // J....De.L%F.Di.J
    C280: 25 A3 1B 01 49 4D 00 4A 25 A3 1B 01 44 55 00 4A  // %...IM.J%...DU.J
    C290: 25 A3 1B 01 49 5D 00 3A 00 00 5B 4A 25 9D 1B 01  // %...I].:..[J%...
    C2A0: 44 69 00 43 65 00 3E 00 01 01 00 00 37 00 00 52  // Di.Ce.>.....7..R
    C2B0: 14 3D 65 00 01 44 30 00 0D 65 9C 1B 03 07 25 9C  // .=e..D0..e....%.
    C2C0: 1B FE 4A A5 9C 1B 01 49 1C 00 07 E5 00 1B 7F 54  // ..J....I.......T
    C2D0: 20 A9 1B 43 3A 00 0D E5 00 1B 80 0D 25 9C 1B 01  //  ..C:.......%...
    C2E0: 3A 00 00 5B 2C 00 02 01 00 00 37 00 00 3C 21 FC  // :..[,.....7..<!.
    C2F0: 00 00 49 19 00 0D A5 C0 00 01 43 26 00 3C 61 FC  // ..I.......C&.<a.
    C300: 00 00 49 26 00 0D A5 C0 00 02 0D A5 C1 00 01 5B  // ..I&...........[
    C310: 22 00 01 01 04 04 03 39 00 00 55 38 00 20 02 00  // "......9..U8. ..
    C320: 00 03 04 41 00 00 56 38 41 27 02 40 41 02 E2 00  // ...A..V8A'.@A...
    C330: 40 5B 19 00 01 01 00 08 37 00 00 52 14 01 01 5E  // @[......7..R...^
    C340: 1B 00 01 01 5F 1B 01 3A 00 00 5B 00 80 00 02 01  // ...._..:..[.....
    C350: 00 00 56 00 40 03 39 40 00 55 38 00 66 FF 2D 0D  // ..V.@.9@.U8.f.-.
    C360: 42 50 00 3E 0C 40 02 00 47 27 00 2D 0D 42 08 00  // BP.>.@..G'.-.B..
    C370: 43 17 00 33 0C 40 04 00 21 0C 40 06 00 2D 0C 40  // C..3.@..!.@..-.@
    C380: 00 00 56 18 40 03 02 46 40 7B 05 00 40 42 0F 00  // ..V.@..F@{..@B..
    C390: 7E 02 40 46 02 02 00 40 5B 7A 30 00 64 00 00 00  // ~.@F...@[z0.d...
    C3A0: 00 00 00 00 FF FF 07 00 01 00 00 00 C8 00 3F 00  // ..............?.
    C3B0: 08 00 19 00 40 06 5F 00 40 00 32 00 80 0C 7E 00  // ....@._.@.2...~.
    C3C0: 60 00 64 00 00 32 7F 00 7F 00 64 00 C6 00 01 03  // `.d..2....d.....
    C3D0: 04 00 37 00 00 56 00 46 56 00 00 03 21 00 00 55  // ..7..V.FV...!..U
    C3E0: 20 00 3D 65 00 03 44 2C 00 3D 65 00 0D 46 BB 00  //  .=e..D,.=e..F..
    C3F0: 02 29 00 00 32 25 00 08 0E 25 00 60 52 14 5C 22  // .)..2%...%.`R.\"
    C400: 00 4A F8 00 02 22 00 00 52 14 03 08 41 C0 1A 09  // .J..."..R...A...
    C410: 0D 41 03 00 66 FF 2D 0D 42 C2 00 2D 0A 42 41 03  // .A..f.-.B..-.BA.
    C420: 24 00 00 00 3D E2 00 00 48 A7 00 3E 25 00 04 44  // $...=...H..>%..D
    C430: 76 00 03 22 46 00 33 25 46 01 15 25 46 04 0F 25  // v.."F.3%F..%F..%
    C440: 46 01 33 39 00 00 3E 25 00 01 44 93 00 3E 25 00  // F.39..>%..D..>%.
    C450: 02 44 8C 00 03 25 46 21 03 65 00 2F 43 97 00 03  // .D...%F!.e./C...
    C460: 65 00 13 03 79 46 00 33 65 46 01 15 2D 46 03 0F  // e...yF.3eF..-F..
    C470: 65 46 01 52 14 01 02 F2 1B 46 01 52 EE 1B 00 54  // eF.R.....F.R...T
    C480: 00 F9 1B 54 00 ED 1B 3A 00 00 5B 7A 04 00 03 02  // ...T...:..[z....
    C490: 01 04 AF 01 01 04 00 08 37 00 00 3D 65 02 01 49  // ........7..=e..I
    C4A0: 44 01 4B A5 02 03 49 5D 00 02 05 00 00 03 00 05  // D.K...I]........
    C4B0: 02 05 01 00 05 02 00 3C 21 FC 00 02 49 57 00 01  // .......<!...IW..
    C4C0: 8D C0 00 00 02 51 02 01 05 C6 00 00 00 10 00 01  // .....Q..........
    C4D0: 05 C8 00 00 00 50 00 01 0D C3 00 02 00 54 20 CA  // .....P.......T .
    C4E0: 00 01 05 C2 00 00 01 00 00 56 20 40 43 83 00 0E  // .........V @C...
    C4F0: 25 02 80 52 14 54 00 CC 00 56 08 48 08 25 02 07  // %..R.T...V.H.%..
    C500: 0D 25 CA 00 01 01 25 C2 00 01 54 00 C6 00 54 00  // .%....%...T...T.
    C510: C8 00 56 20 40 3D A5 01 00 49 8F 00 0D 25 C2 00  // ..V @=...I...%..
    C520: 10 07 65 D0 05 FE 3D A5 01 01 47 A0 00 0D 65 D0  // ..e...=...G...e.
    C530: 05 01 03 A0 40 C9 00 03 00 46 C4 00 03 02 41 46  // ....@....F....AF
    C540: 2D 00 46 C6 00 2D 00 41 C8 00 52 14 01 32 07 1A  // -.F..-.A..R..2..
    C550: 40 01 32 08 1A 40 01 02 04 1A 46 01 02 05 1A 41  // @.2..@....F....A
    C560: 54 30 C1 1A 54 00 5C 1B 01 01 5D 1B 00 54 08 09  // T0..T.\...]..T..
    C570: 1A 54 08 0A 1A 54 08 0B 1A 54 08 0C 1A 01 09 0E  // .T...T...T......
    C580: 1A 00 01 19 0D 1A 00 5C 19 01 1A FC F8 01 5C A5  // .......\......\.
    C590: 01 1A 0F 10 01 09 06 1A 01 01 25 00 1A 01 0D 25  // ..........%....%
    C5A0: B3 1B 04 5C 62 B3 1B FE 40 54 20 35 1A 54 20 3C  // ...\b...@T 5.T <
    C5B0: 1A 54 00 CA 1B 54 00 C8 1B 54 00 CC 1B 4B A5 02  // .T...T...T...K..
    C5C0: 03 49 40 01 0E 25 02 80 52 14 01 05 CC 00 01 00  // .I@..%..R.......
    C5D0: 00 00 3A 00 00 5B 52 14 3D 65 02 00 49 61 01 54  // ..:..[R.=e..Ia.T
    C5E0: 20 00 1A 3A 00 00 3C 21 FC 00 02 49 60 01 54 08  //  ..:..<!...I`.T.
    C5F0: C1 00 5B 3D 65 02 10 44 6E 01 01 09 06 1A 01 5B  // ..[=e..Dn......[
    C600: 03 00 40 04 1A 09 05 40 00 00 00 FD 2D 01 40 00  // ..@....@....-.@.
    C610: 09 0D 40 00 F0 01 02 04 1A 40 08 0D 00 FF 0F 56  // ..@......@.....V
    C620: 00 41 03 31 41 01 74 0A 00 41 2C 09 01 00 08 25  // .A.1A.t..A,....%
    C630: 00 FC 14 05 00 10 01 01 5C 1B 00 01 09 0D 1A 01  // ........\.......
    C640: 5B 00 49 00 01 01 00 00 37 00 00 52 14 07 65 B6  // [.I.....7..R..e.
    C650: 1B FE 3D 65 00 01 44 37 00 54 30 6E 1A 54 30 11  // ..=e..D7.T0n.T0.
    C660: 1A 54 20 B5 1B 54 20 BD 1B 54 30 BD 1B 4A 25 B6  // .T ..T ..T0..J%.
    C670: 1B 01 49 2B 00 3A 00 00 5B 0D 25 BD 1B 01 54 00  // ..I+.:..[.%...T.
    C680: 9E 1B 07 25 C0 1A F4 3A 00 00 5B 00 DE 00 01 03  // ...%...:..[.....
    C690: 00 00 37 00 00 52 14 0D 25 03 1B 04 54 20 78 1A  // ..7..R..%...T x.
    C6A0: 54 00 80 1A 3D 65 00 01 49 9F 00 4A 25 01 1A 03  // T...=e..I..J%...
    C6B0: 44 5E 00 0D 25 7E 1A 07 01 25 7F 1A 01 51 01 4A  // D^..%~...%...Q.J
    C6C0: 25 7F 1A 02 44 31 00 54 20 7F 1A 54 08 81 1A 54  // %...D1.T ..T...T
    C6D0: 08 82 1A 54 08 83 1A 01 0D 84 1A FF FF 01 0D 85  // ...T............
    C6E0: 1A FF FF 01 0D 86 1A FF FF 5B 54 00 79 1A 66 05  // .........[T.y.f.
    C6F0: 2D 0D 42 04 00 56 00 41 03 24 40 00 00 15 05 40  // -.B..V.A.$@....@
    C700: 0A 03 24 40 01 00 15 05 40 0A 03 24 40 02 00 15  // ..$@....@..$@...
    C710: 05 40 04 01 02 7C 1A 40 2D 0D 42 03 00 2D 0D 41  // .@...|.@-.B..-.A
    C720: 01 00 3E 0D 41 00 01 45 6C 00 5B 01 31 79 1A 00  // ..>.A..El.[.1y..
    C730: 56 00 41 03 19 41 01 3B 02 41 3D 65 00 02 49 C1  // V.A..A.;.A=e..I.
    C740: 00 03 00 40 7C 1A 04 02 00 40 43 CA 00 03 03 40  // ...@|....@C....@
    C750: 00 01 02 7C 1A 40 2D 05 46 04 00 00 00 2D 8D 41  // ...|.@-.F....-.A
    C760: 01 00 3E 89 41 01 45 AE 00 5B 3D 00 01 01 00 04  // ..>.A.E..[=.....
    C770: 37 00 00 56 00 40 03 38 40 9A 0A 21 05 40 E2 04  // 7..V.@.8@..!.@..
    C780: 00 00 02 02 00 40 03 00 40 99 0A 1B 05 40 14 09  // .....@..@....@..
    C790: 0D 40 07 00 21 05 40 09 3D 00 00 27 05 40 64 00  // .@..!.@.=..'.@d.
    C7A0: 00 00 2C 02 00 40 5B 00 D8 00 01 01 0C 00 37 00  // ..,..@[.......7.
    C7B0: 00 01 05 82 00 2C 00 50 C0 4A 25 83 00 01 49 3B  // .....,.P.J%...I;
    C7C0: 00 02 05 00 40 7E 05 00 01 05 82 00 B4 00 50 C0  // ....@~........P.
    C7D0: 02 E8 00 83 00 52 29 26 05 00 10 27 00 00 02 02  // .....R)&...'....
    C7E0: 00 40 5B 03 05 00 AC 02 50 C0 03 05 01 8C 02 50  // .@[.....P......P
    C7F0: C0 03 05 02 78 02 50 C0 01 05 82 00 40 03 50 C0  // ....x.P.....@.P.
    C800: 4A 25 83 00 01 44 75 00 03 05 00 28 03 50 C0 03  // J%...Du....(.P..
    C810: 05 01 08 03 50 C0 03 05 02 F4 02 50 C0 01 02 82  // ....P......P....
    C820: 00 02 4A 05 83 00 80 00 00 00 44 8C 00 2D 05 01  // ..J.......D..-..
    C830: 10 00 00 00 01 02 82 00 01 56 00 40 03 18 40 83  // .........V.@..@.
    C840: 00 21 05 40 10 27 00 00 03 02 46 40 56 00 40 03  // .!.@.'....F@V.@.
    C850: 08 40 83 00 21 05 40 10 27 00 00 27 05 40 00 00  // .@..!.@.'..'.@..
    C860: 01 00 2D 02 46 40 01 02 82 00 00 56 00 40 03 20  // ..-.F@.....V.@. 
    C870: 40 83 00 09 25 40 0F 75 02 46 40 02 02 00 46 5B  // @...%@.u.F@...F[
    C880: 53 01 02 03 00 18 37 00 00 66 FF 2D 0D 42 47 01  // S.....7..f.-.BG.
    C890: 55 28 05 2D 09 42 05 2D 09 42 05 03 0C 48 00 00  // U(.-.B.-.B...H..
    C8A0: 03 09 41 03 2D 19 41 03 3E 0D 41 03 00 46 3F 00  // ..A.-.A.>.A..F?.
    C8B0: 5C 05 B3 1B FB 0F F0 FF 00 30 00 00 43 4B 00 5C  // \........0..CK.\
    C8C0: 05 B3 1B FF 0F F0 FF 04 40 00 00 03 09 41 00 2D  // ........@....A.-
    C8D0: 19 41 00 33 0D 41 01 00 01 0A 80 1B 41 54 08 82  // .A.3.A......AT..
    C8E0: 1B 01 99 82 1B 02 03 19 41 00 33 09 41 02 56 18  // ........A.3.A.V.
    C8F0: 41 03 B1 41 04 33 1A 41 41 01 8A 81 1B 41 03 19  // A..A.3.AA....A..
    C900: 41 00 33 09 41 02 2D 1A 41 41 2D 09 41 00 4B 25  // A.3.A.-.AA-.A.K%
    C910: 04 10 44 99 00 2D 09 41 00 01 0A 81 1B 41 03 21  // ..D..-.A.....A.!
    C920: 41 04 09 25 41 02 1B 25 41 01 01 22 83 1B 41 54  // A..%A..%A.."..AT
    C930: 00 5E 1B 01 31 5E 1B 04 01 B1 5E 1B 04 03 09 41  // .^..1^....^....A
    C940: 01 2D 19 41 01 33 0D 41 01 00 01 0A 87 1B 41 54  // .-.A.3.A......AT
    C950: 08 8E 1B 01 99 8E 1B 03 03 19 41 01 33 09 41 03  // ..........A.3.A.
    C960: 56 18 41 03 B9 41 04 33 1A 41 41 01 8A 8D 1B 41  // V.A..A.3.AA....A
    C970: 03 19 41 01 33 09 41 03 2D 1A 41 41 2D 09 41 01  // ..A.3.A.-.AA-.A.
    C980: 4B 25 04 20 44 0B 01 2D 09 41 01 01 0A 8D 1B 41  // K%. D..-.A.....A
    C990: 03 21 41 04 09 25 41 04 1B 25 41 02 01 22 8F 1B  // .!A..%A..%A.."..
    C9A0: 41 54 00 5F 1B 01 39 5F 1B 04 01 B9 5F 1B 04 03  // AT._..9_...._...
    C9B0: 21 41 04 09 25 41 80 1B 25 41 07 01 22 9E 1B 41  // !A..%A..%A.."..A
    C9C0: 3A 00 00 5B 7A 0C 00 00 00 00 02 00 04 00 26 00  // :..[z.........&.
    C9D0: 28 00 2A 00 BE 00 01 01 00 04 37 00 00 03 A1 40  // (.*.......7....@
    C9E0: 00 3D A5 00 00 49 49 00 66 04 03 24 40 58 00 3E  // .=...II.f..$@X.>
    C9F0: 25 40 FF 49 AE 00 55 00 01 02 25 01 28 52 09 02  // %@.I..U...%.(R..
    CA00: 0D 01 29 01 52 09 02 0D 01 2A 02 52 09 02 0D 01  // ..).R....*.R....
    CA10: 2B 03 52 09 03 B1 40 01 01 B1 0A 15 01 66 1C 03  // +.R...@......f..
    CA20: 64 40 10 00 56 20 40 2D 0D 42 14 00 54 30 CD 05  // d@..V @-.B..T0..
    CA30: 3E A4 40 0A 00 49 93 00 3D A5 00 00 44 AE 00 03  // >.@..I..=...D...
    CA40: 24 41 1C 00 03 71 41 00 09 0D 41 0F 0F 3E 62 41  // $A...qA...A..>bA
    CA50: 41 49 93 00 01 A2 CD 05 40 01 64 80 0A 1C 00 3D  // AI......@.d....=
    CA60: A4 00 1C 00 44 AE 00 2D 0C 42 04 00 2D 25 40 01  // ....D..-.B..-%@.
    CA70: 3E 62 40 40 49 5C 00 01 F1 0A 15 00 0D A5 0A 15  // >b@@I\..........
    CA80: 80 5B 01 A2 CD 05 40 01 64 80 0A 1C 00 54 18 0A  // .[....@.d....T..
    CA90: 15 5B 0A 00 01 01 08 00 37 00 00 5B 1A 00 01 01  // .[......7..[....
    CAA0: 00 04 37 00 00 01 05 E5 09 FC FD FC FC 01 05 E6  // ..7.............
    CAB0: 09 FD F8 FC FC 5B 31 02 01 01 00 08 37 00 00 0D  // .....[1.....7...
    CAC0: 25 F4 16 08 07 25 62 18 FE 56 00 41 03 39 41 01  // %....%b..V.A.9A.
    CAD0: 09 25 41 0F 03 0A 40 42 66 FF 2D 0D 42 11 02 15  // .%A...@Bf.-.B...
    CAE0: 25 41 02 2D 0A 42 41 03 0C 41 00 00 01 02 00 00  // %A.-.BA..A......
    CAF0: 41 07 A5 01 00 FE 54 08 01 00 01 0C FB 16 02 00  // A.....T.........
    CB00: 03 0A 42 40 03 05 40 50 C3 00 00 56 00 41 03 21  // ..B@..@P...V.A.!
    CB10: 41 00 27 02 40 41 01 8A F7 16 40 01 25 F7 16 02  // A.'.@A....@.%...
    CB20: 0D 25 F5 16 02 01 A9 F9 16 01 4B 25 01 01 49 7F  // .%........K%..I.
    CB30: 00 54 30 F9 16 01 0D F9 16 00 31 2B A5 F9 16 01  // .T0.......1+....
    CB40: 4B 25 01 02 44 96 00 2B A5 F9 16 01 56 00 41 03  // K%..D..+....V.A.
    CB50: 71 41 01 0F E5 41 80 01 02 FA 16 41 03 69 41 00  // qA...A.....A.iA.
    CB60: 2D A5 41 01 01 02 FA 16 41 4B 25 01 02 44 C6 00  // -.A.....AK%..D..
    CB70: 56 28 41 2D A5 41 01 01 02 FA 16 41 4B 25 01 01  // V(A-.A.....AK%..
    CB80: 44 E7 00 03 71 41 00 2D A5 41 01 01 02 FA 16 41  // D...qA.-.A.....A
    CB90: 03 79 41 00 2D A5 41 01 01 02 FA 16 41 0D 25 F4  // .yA.-.A.....A.%.
    CBA0: 16 01 03 A5 41 01 43 BA 01 03 29 40 01 03 65 40  // ....A.C...)@..e@
    CBB0: 01 03 99 40 00 56 00 41 03 71 41 01 0F 65 41 01  // ...@.V.A.qA..eA.
    CBC0: 0F E5 41 80 01 02 FA 16 41 01 A5 F9 16 04 3D 65  // ..A.....A.....=e
    CBD0: 01 04 47 28 01 01 0D F9 16 01 13 43 57 01 01 A2  // ..G(.......CW...
    CBE0: F9 16 40 01 0D F9 16 01 31 43 57 01 07 65 F9 16  // ..@.....1CW..e..
    CBF0: EF 01 A5 F9 16 03 3E 25 40 04 46 57 01 01 A2 F9  // ......>%@.FW....
    CC00: 16 40 31 A5 F9 16 01 5C 65 F9 16 FD 20 0D 25 F4  // .@1....\e... .%.
    CC10: 16 01 03 A5 41 00 43 BA 01 03 05 41 01 00 00 80  // ....A.C....A....
    CC20: 03 AA 41 40 01 02 FA 16 41 3D 65 01 01 49 82 01  // ..A@....A=e..I..
    CC30: 02 A8 00 FA 16 43 F9 01 56 00 41 03 1A 41 40 3B  // .....C..V.A..A@;
    CC40: 02 41 03 28 41 FA 16 03 68 41 FA 16 03 A8 41 FA  // .A.(A...hA....A.
    CC50: 16 03 E8 41 FA 16 04 02 00 41 56 28 40 2D 8D 40  // ...A.....AV(@-.@
    CC60: 04 00 3E 25 40 04 47 F9 01 33 25 40 04 43 36 01  // ..>%@.G..3%@.C6.
    CC70: 02 65 00 02 03 0D 41 64 00 33 0D 41 01 00 3E 0D  // .e....Ad.3.A..>.
    CC80: 41 00 00 44 F9 01 51 64 4A 25 F6 16 10 44 C3 01  // A..D..QdJ%...D..
    CC90: 4A 65 F6 16 06 49 F9 01 02 65 00 01 0D 25 F5 16  // Je...I...e...%..
    CCA0: 02 3E A5 41 00 44 63 01 4B 25 01 01 44 F3 00 0D  // .>.A.Dc.K%..D...
    CCB0: 25 F5 16 02 01 25 F4 16 02 51 01 54 00 F4 16 54  // %....%...Q.T...T
    CCC0: 00 FB 16 5B 7A 20 00 68 48 01 00 6C 48 03 02 70  // ...[z .hH..lH..p
    CCD0: 48 05 04 74 48 42 41 78 48 49 48 7C 48 4B 4A 98  // H..tHBAxHIH|HKJ.
    CCE0: 48 29 28 80 48 4D 4C 00 5F 00 02 02 00 04 37 00  // H)(.HML._.....7.
    CCF0: 00 3D 65 00 01 44 54 00 55 30 00 3D 25 00 06 46  // .=e..DT.U0.=%..F
    CD00: 50 00 32 25 00 01 20 25 00 08 56 08 48 03 22 48  // P.2%.. %..V.H."H
    CD10: 40 0D A5 99 18 01 02 A0 00 98 18 08 A5 00 03 4A  // @..............J
    CD20: 25 98 18 02 44 4A 00 5C 0D 99 18 FF FE 01 00 43  // %...DJ.\.......C
    CD30: 50 00 0D 0D 99 18 01 01 3A 00 00 5B 0D 65 CF 05  // P.......:..[.e..
    CD40: 08 0D 25 80 01 01 5B 00 0A 00 01 02 00 00 5B 7A  // ..%...[.......[z
    CD50: 00 00 0A 00 01 01 00 04 55 00 00 5B 3C 00 01 01  // ........U..[<...
    CD60: 00 00 55 00 00 55 00 01 01 05 91 0A 03 00 00 00  // ..U..U..........
    CD70: 02 38 00 92 0A 02 21 01 00 08 25 00 0F 08 25 01  // .8....!...%...%.
    CD80: F0 20 05 00 20 4E 00 00 02 02 00 40 20 05 01 E2  // . .. N.....@ ...
    CD90: 04 00 00 02 02 01 40 5B AF 01 01 06 04 18 03 05  // ......@[........
    CDA0: 46 00 51 25 02 3D E5 00 01 49 F3 00 55 38 00 66  // F.Q%.=...I..U8.f
    CDB0: 08 03 24 41 04 00 2D 0D 42 08 00 55 00 02 3D 04  // ..$A..-.B..U..=.
    CDC0: 00 00 00 47 42 00 2C A5 02 01 2D 0D 42 0C 00 3D  // ...GB.,...-.B..=
    CDD0: A2 02 41 45 26 00 55 00 01 5B 02 24 02 05 00 02  // ..AE&.U..[.$....
    CDE0: 64 02 04 00 03 01 46 00 56 00 40 03 21 40 02 6F  // d.....F.V.@.!@.o
    CDF0: 02 46 40 7C 05 46 00 40 00 00 7E 05 40 C4 09 00  // .F@|.F.@..~.@...
    CE00: 00 02 02 01 40 02 E5 02 01 7B 05 01 32 00 00 00  // ....@....{..2...
    CE10: 7E 05 40 10 27 00 00 7C 05 40 4E 0C 00 00 7E 05  // ~.@.'..|.@N...~.
    CE20: 40 40 4B 4C 00 02 0A 05 40 21 05 40 40 4B 4C 00  // @@KL....@!.@@KL.
    CE30: 27 05 40 4E 0C 00 00 02 01 03 01 32 02 03 40 21  // '.@N.......2..@!
    CE40: 05 46 D0 07 00 00 27 05 40 10 27 00 00 03 02 00  // .F....'.@.'.....
    CE50: 46 33 02 00 40 27 05 00 10 27 00 00 3E 0C 40 06  // F3..@'...'..>.@.
    CE60: 00 48 D1 00 03 0C 40 06 00 55 00 04 02 8A 04 40  // .H....@..U.....@
    CE70: 03 01 40 01 33 01 40 04 21 05 40 32 00 00 00 27  // ..@.3.@.!.@2...'
    CE80: 05 40 50 C3 00 00 02 8A 05 40 5B 55 38 00 03 05  // .@P......@[U8...
    CE90: 40 00 32 00 00 3D 05 00 00 00 00 00 44 3C 01 03  // @.2..=......D<..
    CEA0: 02 40 46 2D 01 40 00 33 05 40 01 00 00 00 27 01  // .@F-.@.3.@....'.
    CEB0: 40 00 3E 05 40 9C 18 00 00 47 2B 01 03 05 40 00  // @.>.@....G+...@.
    CEC0: 32 00 00 3E 05 40 C8 00 00 00 46 3C 01 03 05 40  // 2..>.@....F<...@
    CED0: C8 00 00 00 66 FF 2D 0D 42 8F 01 3E 0C 40 02 00  // ....f.-.B..>.@..
    CEE0: 47 53 01 2D 0D 42 08 00 43 43 01 33 0C 40 00 00  // GS.-.B..CC.3.@..
    CEF0: 2D 0C 40 06 00 33 0D 40 01 00 27 0C 40 06 00 2D  // -.@..3.@..'.@..-
    CF00: 0C 40 04 00 02 E2 00 40 33 0C 40 04 00 21 0C 40  // .@.....@3.@..!.@
    CF10: 06 00 2D 0C 40 00 00 27 02 46 40 02 0A 00 40 02  // ..-.@..'.F@...@.
    CF20: B2 00 40 5B 7A 20 00 C8 00 40 06 08 00 19 00 40  // ..@[z ...@.....@
    CF30: 06 80 0C 40 00 32 00 80 0C 38 18 60 00 64 00 00  // ...@.2...8.`.d..
    CF40: 32 00 32 7F 00 64 00 00 07 00 02 01 00 00 5B 00  // 2.2..d........[.
    CF50: 70 01 02 01 08 04 37 00 00 66 1C 2D 0C 42 06 00  // p.....7..f.-.B..
    CF60: 3D E5 00 02 44 4B 00 3D E5 00 03 44 F7 00 03 38  // =...DK.=...D...8
    CF70: 00 2F 0A 09 25 00 20 02 01 01 00 02 F0 01 CD 05  // ./..%. .........
    CF80: 52 12 01 08 AB 0A 81 0A 01 18 83 0A 81 0A 5C E2  // R.............\.
    CF90: 2F 0A DF 00 5C E2 30 0A DF 00 5B 02 F0 01 CD 05  // /...\.0...[.....
    CFA0: 0E E5 01 80 52 12 02 01 01 00 02 E4 01 2C 00 52  // ....R........,.R
    CFB0: 26 01 39 DD 09 01 02 EC 01 2C 00 52 26 01 79 DD  // &.9......,.R&.y.
    CFC0: 09 01 02 F4 01 2C 00 52 26 01 B9 DD 09 01 02 FC  // .....,.R&.......
    CFD0: 01 2C 00 52 26 01 F9 DD 09 01 02 E4 01 30 00 52  // .,.R&........0.R
    CFE0: 26 01 39 DE 09 01 02 EC 01 30 00 52 26 01 79 DE  // &.9......0.R&.y.
    CFF0: 09 01 02 F4 01 30 00 52 26 01 B9 DE 09 01 02 FC  // .....0.R&.......
    D000: 01 30 00 52 26 01 F9 DE 09 01 31 05 DE 09 01 01  // .0.R&.....1.....
    D010: 01 00 02 E5 01 08 52 26 3D E5 01 04 46 D3 00 02  // ......R&=...F...
    D020: E5 01 04 3D E5 01 08 46 E1 00 32 E5 01 04 43 F0  // ...=...F..2...C.
    D030: 00 1A 3D 01 01 3D E5 01 12 45 F0 00 02 E5 01 12  // ..=..=...E......
    D040: 5C 39 02 0A E0 01 5B 52 3B 03 05 00 10 00 00 00  // \9....[R;.......
    D050: 03 05 01 2D 00 00 00 55 38 00 3D 01 00 01 45 30  // ...-...U8.=...E0
    D060: 01 03 0D 00 18 00 03 05 01 2E 00 00 00 3D 01 00  // .............=..
    D070: 02 45 30 01 03 0D 00 20 00 03 05 01 2F 00 00 00  // .E0.... ..../...
    D080: 02 01 01 00 02 F0 01 CD 05 0E E5 01 80 52 12 56  // .............R.V
    D090: 00 41 01 02 91 0A 01 01 04 92 0A 0C 00 01 02 91  // .A..............
    D0A0: 0A 00 01 04 92 0A 10 00 2D 05 00 01 00 00 00 2D  // ........-......-
    D0B0: 25 41 01 2D 0D 42 04 00 3E 25 41 07 45 4D 01 5B  // %A.-.B..>%A.EM.[
    D0C0: 00 01 01 02 04 04 37 00 00 3D 25 00 FF 49 EC 00  // ......7..=%..I..
    D0D0: 02 20 00 80 0A 4A 25 80 0A 08 49 26 00 08 25 00  // . ...J%...I&..%.
    D0E0: 10 07 25 80 0A EF 01 05 32 0A 08 00 00 00 01 05  // ..%.....2.......
    D0F0: 32 0A 10 00 00 00 01 05 82 00 10 00 60 C0 01 05  // 2...........`...
    D100: 83 00 00 80 03 00 01 05 82 00 14 00 60 C0 03 00  // ............`...
    D110: 40 83 00 66 18 3E 04 40 04 00 49 EB 00 03 00 40  // @..f.>.@..I....@
    D120: 83 00 03 00 00 83 00 03 00 41 83 00 3E 05 40 00  // .........A..>.@.
    D130: 00 00 00 44 EB 00 01 00 91 0A 83 00 01 00 92 0A  // ...D............
    D140: 83 00 33 0D 40 01 00 3E 0D 40 00 00 49 76 00 01  // ..3.@..>.@..Iv..
    D150: 05 64 C0 0C 02 00 00 54 00 65 C0 01 05 66 C0 CC  // .d.....T.e...f..
    D160: 28 00 00 54 00 67 C0 15 05 00 02 2D 05 00 00 00  // (..T.g.....-....
    D170: 00 7C 01 02 E8 C0 00 51 32 4A E5 A0 21 80 49 B9  // .|.....Q2J..!.I.
    D180: 00 01 05 32 0A 08 00 00 00 01 05 32 0A 04 00 00  // ...2.......2....
    D190: 00 01 05 32 0A 01 00 00 00 51 32 50 02 4A 25 80  // ...2.....Q2P.J%.
    D1A0: 0A 80 44 DD 00 5C 21 80 0A EF 00 5B 01 65 E7 0A  // ..D..\!....[.e..
    D1B0: FF 01 21 E7 0A 00 02 05 01 04 00 00 00 52 1F 5B  // ..!..........R.[
    D1C0: 8C 00 01 04 00 00 03 05 40 7C 01 00 00 3D A5 00  // ........@|...=..
    D1D0: 00 44 15 00 5B 03 00 46 20 49 7C 02 40 46 7E 05  // .D..[..F I|.@F~.
    D1E0: 40 A0 86 01 00 03 00 41 23 49 09 05 41 03 00 00  // @......A#I..A...
    D1F0: 00 6F 02 40 41 7C 05 40 45 0C 00 00 7E 05 40 40  // .o.@A|.@E...~.@@
    D200: 4B 4C 00 3E 05 40 00 00 00 00 49 51 00 03 25 40  // KL.>.@....IQ..%@
    D210: 01 01 8A 22 49 40 7C 05 40 40 4B 4C 00 7E 05 40  // ..."I@|.@@KL.~.@
    D220: 45 0C 00 00 03 00 41 23 49 09 05 41 03 00 00 00  // E.....A#I..A....
    D230: 75 02 40 41 03 00 46 20 49 33 02 46 40 01 02 21  // u.@A..F I3.F@..!
    D240: 49 46 51 01 0D 65 23 49 01 51 01 5B 31 00 01 03  // IFQ..e#I.Q.[1...
    D250: 04 00 37 00 00 55 38 00 26 05 00 E2 04 00 00 01  // ..7..U8.&.......
    D260: E2 9A 0A 40 21 05 41 64 00 00 00 27 05 40 09 3D  // ...@!.Ad...'.@.=
    D270: 00 00 15 25 40 04 5C A2 99 0A 8F 40 5B 00 10 00  // ...%@.\....@[...
    D280: 01 03 00 08 37 00 00 55 18 00 55 08 01 5B C3 01  // ....7..U..U..[..
    D290: 01 04 00 04 37 00 00 3D 65 00 08 49 23 00 02 05  // ....7..=e..I#...
    D2A0: 01 38 00 06 0A 52 45 08 0D 01 FF 03 02 89 00 01  // .8...RE.........
    D2B0: 5B 3D 65 00 03 44 70 01 02 01 01 00 02 65 01 07  // [=e..Dp......e..
    D2C0: 52 50 3D 05 02 00 00 00 00 44 0B 01 37 00 00 01  // RP=......D..7...
    D2D0: 05 82 00 7C 02 20 C0 01 05 82 00 94 02 20 C0 4A  // ...|. ....... .J
    D2E0: A5 83 00 06 49 49 00 01 05 82 00 7C 02 20 C0 0D  // ....II.....|. ..
    D2F0: 65 83 00 04 01 05 82 00 7C 02 20 C0 03 00 46 83  // e.......|. ...F.
    D300: 00 37 00 00 01 05 82 00 80 02 20 C0 5E 65 46 FC  // .7........ .^eF.
    D310: 01 3D 25 00 01 44 96 00 09 65 46 FC 01 05 82 00  // .=%..D...eF.....
    D320: 84 02 20 C0 3C 0C 83 00 04 00 44 C6 00 07 0D 83  // .. .<.....D.....
    D330: 00 9F FF 51 3C 03 0C 41 04 00 4C 25 41 20 49 BE  // ...Q<..A..L%A I.
    D340: 00 0F 25 41 20 01 0A 83 00 41 51 3C 01 0C 83 00  // ..%A ....AQ<....
    D350: 04 00 51 3C 56 00 40 03 19 40 00 21 05 40 64 00  // ..Q<V.@..@.!.@d.
    D360: 00 00 03 05 41 78 5D 02 00 33 02 41 40 27 05 41  // ....Ax]..3.A@'.A
    D370: 71 02 00 00 03 22 46 40 01 05 82 00 7C 02 20 C0  // q...."F@....|. .
    D380: 01 02 83 00 46 01 05 82 00 94 02 20 C0 4A A5 83  // ....F...... .J..
    D390: 00 02 49 F7 00 37 00 00 5B 02 01 01 00 52 50 3D  // ..I..7..[....RP=
    D3A0: 05 02 00 00 00 00 44 6C 01 4B E5 02 40 44 2F 01  // ......Dl.K..@D/.
    D3B0: 01 05 82 00 F8 01 60 C0 0D 25 83 00 1F 4B 25 02  // ......`..%...K%.
    D3C0: 80 44 3B 01 0D A5 90 48 01 03 05 41 FF FF FF FF  // .D;....H...A....
    D3D0: 69 01 41 02 01 05 82 00 E4 01 60 C0 09 00 41 83  // i.A.......`...A.
    D3E0: 00 0F 01 41 01 01 02 83 00 41 01 05 82 00 F4 01  // ...A.....A......
    D3F0: 60 C0 0D 01 83 00 02 51 32 5B 55 00 00 5B 02 01  // `......Q2[U..[..
    D400: 01 00 52 50 3D 05 02 00 00 00 00 44 6C 01 02 E4  // ..RP=......Dl...
    D410: 00 05 00 02 A4 00 06 00 02 0D 02 01 01 03 24 41  // ..............$A
    D420: 08 00 4C 25 41 01 44 9F 01 02 65 02 02 02 25 01  // ..L%A.D...e...%.
    D430: 32 02 64 01 0C 00 02 8C 01 0E 00 3D 65 01 FF 44  // 2.d........=e..D
    D440: C2 01 02 99 02 00 52 36 2D 0D 42 04 00 43 A3 01  // ......R6-.B..C..
    D450: 5B 00 83 00 01 03 04 00 37 00 00 3D 65 00 09 44  // [.......7..=e..D
    D460: 80 00 03 0A 00 42 66 20 03 0C 41 00 00 2D 0A 41  // .....Bf ..A..-.A
    D470: 42 2D 0D 42 04 00 3E 0A 42 41 44 7C 00 3D 0C 00  // B-.B..>.BAD|.=..
    D480: 00 00 44 3B 00 2D 0C 42 02 00 43 24 00 02 0A 01  // ..D;.-.B..C$....
    D490: 42 3D 65 00 03 44 7B 00 3D 65 00 07 44 7B 00 03  // B=e..D{.=e..D{..
    D4A0: E4 41 05 00 02 04 01 08 00 3E E5 41 00 44 7C 00  // .A.......>.A.D|.
    D4B0: 3D 8C 00 10 00 47 72 00 2D 0D 42 06 00 33 E5 41  // =....Gr.-.B..3.A
    D4C0: 01 43 57 00 02 04 00 0C 00 03 0A 42 00 5B 55 00  // .CW........B.[U.
    D4D0: 01 5B 52 1B 5B 00 67 02 01 05 00 00 37 00 00 03  // .[R.[.g.....7...
    D4E0: 20 46 CF 05 0E 25 00 60 52 14 08 25 00 0F 42 29  //  F...%.`R..%..B)
    D4F0: 00 63 0F 58 00 63 11 4E 01 63 12 CC 01 63 01 24  // .c.X.c.N.c...c.$
    D500: 02 63 00 4D 02 63 08 18 01 63 09 F9 00 63 0A 00  // .c.M.c...c...c..
    D510: 01 63 13 08 01 63 14 10 01 63 0B 20 01 63 0C 14  // .c...c...c. .c..
    D520: 02 63 0D 28 01 63 10 41 01 5A 5A 43 F5 00 3D A5  // .c.(.c.A.ZZC..=.
    D530: 00 02 44 E3 00 54 00 72 4A 3D A5 00 00 44 71 00  // ..D..T.rJ=...Dq.
    D540: 3D A5 00 05 49 EB 00 54 08 A1 4A 3D 25 02 00 49  // =...I..T..J=%..I
    D550: 80 00 02 25 02 02 32 25 02 01 01 E1 A1 4A 02 4A  // ...%..2%.....J.J
    D560: 25 A4 4A 01 49 C6 00 7B 05 01 00 80 00 00 7E 05  // %.J.I..{......~.
    D570: 40 8C 0A 00 00 56 00 46 03 29 46 02 27 02 40 46  // @....V.F.)F.'.@F
    D580: 07 65 A8 4A FE 01 05 A9 4A 00 80 00 00 01 02 AA  // .e.J....J.......
    D590: 4A 40 0D E5 AB 4A 10 0D 65 00 4A 04 02 20 00 00  // J@...J..e.J.. ..
    D5A0: 4A 08 25 00 07 0E 25 00 00 52 14 14 3D 00 04 5C  // J.%...%..R..=..\
    D5B0: B9 9C 1B 8F 00 3A 00 00 5B 01 05 72 4A 01 00 00  // .....:..[..rJ...
    D5C0: 00 07 E5 00 4A 2F 0D 65 00 4A 04 3A 00 00 5B 54  // ....J/.e.J.:..[T
    D5D0: 20 B0 4A 43 F5 00 01 25 B0 4A 01 43 F5 00 01 25  //  .JC...%.J.C...%
    D5E0: B0 4A 02 43 F5 00 01 25 B0 4A 03 43 F5 00 07 25  // .J.C...%.J.C...%
    D5F0: A0 4A EF 43 F5 00 0D 25 A0 4A 10 43 F5 00 0D 65  // .J.C...%.J.C...e
    D600: A8 4A 01 51 0A 07 25 A5 4A FE 51 0A 01 0D A4 4A  // .J.Q..%.J.Q....J
    D610: 01 02 51 C8 43 F5 00 0D 25 B6 4A 10 01 31 A7 4A  // ..Q.C...%.J..1.J
    D620: 00 43 F5 00 01 0D 03 4A 1F 00 01 69 47 4A 02 4C  // .C.....J...iGJ.L
    D630: 25 46 10 49 77 01 3D A5 00 03 49 77 01 4A 25 0D  // %F.Iw.=...Iw.J%.
    D640: 4A 10 49 77 01 01 A5 47 4A 02 43 7C 01 01 B1 47  // J.Iw...GJ.C|...G
    D650: 4A 00 3D 25 02 00 44 91 01 32 25 02 01 14 25 02  // J.=%..D..2%...%.
    D660: 04 5C E1 47 4A 8F 02 3D E5 00 04 47 A0 01 0D 25  // .\.GJ..=...G...%
    D670: 47 4A 01 43 A5 01 07 25 47 4A FE 3D A5 00 05 44  // GJ.C...%GJ.=...D
    D680: B3 01 3D A5 00 00 49 C4 01 02 A5 00 00 03 39 40  // ..=...I.......9@
    D690: 00 33 25 40 01 01 22 A3 4A 40 02 E0 02 48 4A 43  // .3%@..".J@...HJC
    D6A0: F5 00 02 E0 02 48 4A 4B E5 02 01 44 F5 00 02 B0  // .....HJK...D....
    D6B0: 00 47 4A 02 E5 00 04 4A 25 47 4A 01 44 ED 01 02  // .GJ....J%GJ.D...
    D6C0: E5 00 08 3D A5 00 02 44 FB 01 3D A5 00 03 49 04  // ...=...D..=...I.
    D6D0: 02 54 00 48 4A 50 02 43 F5 00 02 A5 00 00 03 31  // .T.HJP.C.......1
    D6E0: 43 00 4A 62 47 4A 44 44 F5 00 54 08 A4 4A 51 C8  // C.JbGJDD..T..JQ.
    D6F0: 0D 25 A5 4A 01 51 32 43 F5 00 0D 25 48 4A 01 3D  // .%.J.Q2C...%HJ.=
    D700: A5 00 00 44 39 02 01 0D 79 4A 0F 01 43 F5 00 03  // ...D9...yJ..C...
    D710: 39 43 00 03 02 40 44 33 25 40 01 01 0A 79 4A 40  // 9C...@D3%@...yJ@
    D720: 43 F5 00 54 00 79 4A 07 25 48 4A FE 07 0D 47 4A  // C..T.yJ.%HJ...GJ
    D730: FE 80 54 20 A0 4A 54 20 B0 4A 43 F5 00 00 29 00  // ..T .JT .JC...).
    D740: 01 01 00 00 37 00 00 66 1C 2D 0D 42 14 00 03 30  // ....7..f.-.B...0
    D750: 40 CD 05 3E 25 40 00 44 28 00 33 25 40 01 2D 0C  // @..>%@.D(.3%@.-.
    D760: 42 04 00 43 15 00 5B 00 46 01 01 06 00 00 37 00  // B..C..[.F.....7.
    D770: 00 42 29 00 63 07 24 01 63 01 25 00 63 00 C0 00  // .B).c.$.c.%.c...
    D780: 63 0B 27 01 63 04 2C 01 5A 5A 43 3F 01 02 65 00  // c.'.c.,.ZZC?..e.
    D790: 11 52 04 4B E5 02 01 49 20 01 02 65 00 0A 55 08  // .R.K...I ..e..U.
    D7A0: 02 52 4D 3D E5 00 04 47 50 00 68 25 00 01 02 25  // .RM=...GP.h%...%
    D7B0: 02 01 52 4D 68 25 00 01 3D A5 00 00 49 82 00 20  // ..RMh%..=...I.. 
    D7C0: 05 01 64 00 00 00 02 05 01 14 1E 00 02 2C 21 01  // ..d..........,!.
    D7D0: 00 02 01 02 00 02 02 00 40 52 0C 26 05 00 64 00  // ........@R.&..d.
    D7E0: 00 00 02 02 01 40 02 01 00 02 02 65 00 01 55 08  // .....@.....e..U.
    D7F0: 02 52 4D 3D E5 00 04 47 A0 00 68 25 00 01 02 25  // .RM=...G..h%...%
    D800: 02 01 52 4D 68 25 00 01 51 05 02 65 00 01 52 04  // ..RMh%..Q..e..R.
    D810: 51 0A 02 65 00 09 52 4D 3D E5 00 04 47 20 01 68  // Q..e..RM=...G .h
    D820: 25 00 01 52 4D 43 20 01 02 65 00 12 52 04 4B E5  // %..RMC ..e..R.K.
    D830: 02 01 44 20 01 02 65 00 08 52 4D 3D E5 00 04 47  // ..D ..e..RM=...G
    D840: E4 00 68 25 00 01 52 4D 68 25 00 01 02 65 00 00  // ..h%..RMh%...e..
    D850: 52 04 02 65 00 00 52 4D 3D E5 00 04 47 01 01 68  // R..e..RM=...G..h
    D860: 25 00 01 52 4D 68 25 00 01 3D A5 00 00 49 20 01  // %..RMh%..=...I .
    D870: 02 01 02 00 02 05 01 14 00 00 00 2C 21 01 00 55  // ...........,!..U
    D880: 00 00 52 0C 02 01 00 02 3A 00 00 5B 43 20 01 52  // ..R.....:..[C .R
    D890: 4D 43 20 01 66 06 02 29 00 00 02 68 00 CB 05 02  // MC .f..)...h....
    D8A0: 8C 00 32 00 52 33 5B 02 29 00 00 52 33 5B 38 03  // ..2.R3[.)..R3[8.
    D8B0: 02 01 00 00 37 00 00 0E 25 00 20 52 14 08 25 00  // ....7...%. R..%.
    D8C0: 0F 42 29 00 63 07 35 00 63 0A 3D 00 63 01 21 01  // .B).c.5.c.=.c.!.
    D8D0: 63 00 7B 01 63 09 BB 01 63 08 E9 01 63 0B 01 02  // c.{.c...c...c...
    D8E0: 5A 5A 5B 0D 65 C4 48 08 43 AD 02 03 0A 46 48 66  // ZZ[.e.H.C....FHf
    D8F0: FF 2D 0D 42 1A 03 56 00 40 20 25 00 05 2D 0A 42  // .-.B..V.@ %..-.B
    D900: 40 20 25 00 02 03 0A 48 40 01 04 06 48 00 00 01  // @ %....H@...H...
    D910: 64 05 48 04 00 07 E5 05 48 FC 07 A5 05 48 8F 03  // d.H.....H....H..
    D920: 0A 48 46 56 00 41 3D E5 00 04 47 96 00 03 05 41  // .HFV.A=...G....A
    D930: 00 80 01 01 4B 25 02 01 44 96 00 09 4D 41 7F FF  // ....K%..D...MA..
    D940: 03 E5 41 02 5C FA D3 48 FC 41 5C 52 C5 48 7F FE  // ..A.\..H.A\R.H..
    D950: 41 3D A5 00 00 49 CC 00 07 A5 C1 48 7F 66 FF 2D  // A=...I.....H.f.-
    D960: 0D 42 DE 02 2D 0D 42 06 00 56 00 41 3D A5 02 14  // .B..-.B..V.A=...
    D970: 49 49 02 03 25 41 20 43 49 02 0D A5 C1 48 80 66  // II..%A CI....H.f
    D980: FF 2D 0D 42 B6 02 03 04 40 00 00 3E 05 40 00 00  // .-.B....@..>.@..
    D990: 00 00 44 AD 02 03 21 43 00 03 E2 41 44 4C E4 41  // ..D...!C...ADL.A
    D9A0: 05 00 44 07 01 3D A4 00 04 00 49 07 01 3D 04 01  // ..D..=....I..=..
    D9B0: 00 00 47 0F 01 2D 0D 42 0C 00 43 D8 00 03 04 40  // ..G..-.B..C....@
    D9C0: 06 00 03 24 41 0A 00 03 64 41 0B 00 43 52 02 07  // ...$A...dA..CR..
    D9D0: 65 C4 48 F7 03 0A 46 48 56 00 41 3D E5 00 04 47  // e.H...FHV.A=...G
    D9E0: 3C 01 07 25 E2 48 F9 43 42 01 5C 25 E2 48 F9 02  // <..%.H.CB.\%.H..
    D9F0: 4A 65 E0 48 01 44 42 01 07 25 E0 48 F8 4A 65 E0  // Je.H.DB..%.H.Je.
    DA00: 48 01 44 4F 01 2D E5 41 01 2D 0D 48 10 00 3E E5  // H.DO.-.A.-.H..>.
    DA10: 41 04 45 2D 01 03 0A 48 46 0D 25 D1 48 02 4A 25  // A.E-...HF.%.H.J%
    DA20: D1 48 04 44 70 01 43 AD 02 07 25 D1 48 FD 4A 25  // .H.Dp.C...%.H.J%
    DA30: D1 48 04 49 80 01 0D 65 C4 48 08 56 00 41 4A 65  // .H.I...e.H.V.AJe
    DA40: E0 48 01 44 90 01 5C 25 E0 48 F8 04 51 02 4A 65  // .H.D..\%.H..Q.Je
    DA50: E0 48 01 44 A0 01 2D A5 41 01 2D 0D 48 10 00 3E  // .H.D..-.A.-.H..>
    DA60: A5 41 04 45 90 01 43 AD 02 03 0A 46 48 56 08 48  // .A.E..C....FHV.H
    DA70: 20 25 00 02 03 22 48 40 0D 25 05 48 01 0D E5 06  //  %..."H@.%.H....
    DA80: 48 10 03 0A 48 46 0D A5 D3 48 01 51 14 0D 25 D3  // H...HF...H.Q..%.
    DA90: 48 01 51 14 43 AD 02 07 A5 D3 48 FE 56 00 40 20  // H.Q.C.....H.V.@ 
    DAA0: 25 00 02 03 0A 48 40 07 E5 06 48 EF 43 AD 02 08  // %....H@...H.C...
    DAB0: A5 00 1B 66 FF 2D 0D 42 DE 02 03 21 43 00 03 A2  // ...f.-.B...!C...
    DAC0: 40 44 03 0C 40 02 00 4C A4 40 00 00 49 29 02 2D  // @D..@..L.@..I).-
    DAD0: 0C 42 04 00 43 14 02 2D 0D 42 06 00 3D A4 00 00  // .B..C..-.B..=...
    DAE0: 00 44 49 02 03 24 41 00 00 3E 25 41 FF 44 49 02  // .DI..$A..>%A.DI.
    DAF0: 2D 0A 42 40 43 2E 02 03 04 40 01 00 03 65 41 08  // -.B@C....@...eA.
    DB00: 01 0A C3 48 40 01 05 DA 48 88 88 01 00 01 F2 DB  // ...H@...H.......
    DB10: 48 40 01 BA E2 48 40 01 BA F2 48 40 01 BA 02 49  // H@...H@...H@...I
    DB20: 40 01 BA 12 49 40 01 25 E1 48 20 01 25 F1 48 20  // @...I@.%.H .%.H 
    DB30: 01 25 01 49 20 01 25 11 49 20 01 2A E1 48 41 01  // .%.I .%.I .*.HA.
    DB40: 2A F1 48 41 01 2A 01 49 41 01 2A 11 49 41 3D 65  // *.HA.*.IA.*.IA=e
    DB50: 00 0B 44 AD 02 5C A2 C8 48 DF 41 3A 00 00 5B 7A  // ..D..\..H.A:..[z
    DB60: 84 00 0C 00 FF FF FF 00 02 3F 00 00 00 5F 00 08  // .........?..._..
    DB70: 40 9C 00 00 03 3F 00 00 00 5F 00 08 FF FF FF 00  // @....?..._......
    DB80: 03 3F 00 00 2A 57 20 10 00 00 00 00 3F 00 05 00  // .?..*W .....?...
    DB90: 39 00 00 4B 00 00 80 01 3A 00 00 80 02 1B 00 00  // 9..K....:.......
    DBA0: 80 03 00 00 00 80 08 34 25 00 80 09 1C 25 00 80  // .......4%....%..
    DBB0: 0A 00 1B 00 9F 10 14 3F 00 80 11 01 38 00 9F 18  // .......?....8...
    DBC0: 00 4A 00 9F FF 00 00 FF 03 02 01 00 01 03 02 01  // .J..............
    DBD0: 00 01 03 02 01 00 01 03 02 01 00 01 03 02 01 00  // ................
    DBE0: 01 03 02 01 00 01 4C 02 01 02 00 08 37 00 00 3D  // ......L.....7..=
    DBF0: 0D 00 00 00 44 CE 01 56 00 41 03 21 41 01 09 25  // ....D..V.A.!A..%
    DC00: 41 0F 15 0D 41 02 03 0A 40 42 66 FF 2D 0D 42 34  // A...A...@Bf.-.B4
    DC10: 02 2D 0A 42 41 03 0C 48 02 00 0D A5 68 48 01 54  // .-.BA..H....hH.T
    DC20: 08 68 48 03 0C 48 00 00 03 F9 41 01 15 3D 41 04  // .hH..H....A..=A.
    DC30: 5C BA 00 5C 8F 41 03 0A 42 40 4A 25 00 5C 01 49  // \..\.A..B@J%.\.I
    DC40: 81 00 0D 0D 00 5C 01 01 0D 25 00 5C 10 4A 25 00  // .....\...%.\.J%.
    DC50: 5C 20 44 67 00 07 25 00 5C EF 4A 25 00 5C 20 49  // \ Dg..%.\.J%.\ I
    DC60: 74 00 0D 25 03 5C 40 56 00 41 03 09 41 00 3B 02  // t..%.\@V.A..A.;.
    DC70: 41 03 3B 41 00 1B 25 41 04 01 A2 01 5C 41 03 69  // A.;A..%A....\A.i
    DC80: 41 01 15 2D 41 04 01 2A 01 5C 41 56 00 40 0F E5  // A..-A..*.\AV.@..
    DC90: 40 80 03 73 40 00 01 02 06 5C 40 56 00 40 03 6B  // @..s@....\@V.@.k
    DCA0: 40 00 01 02 06 5C 40 03 63 40 00 01 02 06 5C 40  // @....\@.c@....\@
    DCB0: 03 7B 40 00 09 65 40 0F 01 02 06 5C 40 3E 25 41  // .{@..e@....\@>%A
    DCC0: 04 47 10 01 33 25 41 04 2D 05 46 04 00 00 00 03  // .G..3%A.-.F.....
    DCD0: 63 40 00 01 02 06 5C 40 03 6B 40 00 01 02 06 5C  // c@....\@.k@....\
    DCE0: 40 03 73 40 00 01 02 06 5C 40 03 7B 40 00 01 02  // @.s@....\@.{@...
    DCF0: 06 5C 40 43 D7 00 0D 25 03 5C 02 0D 25 01 5C 01  // .\@C...%.\..%.\.
    DD00: 03 29 40 01 21 25 40 0A 2D 25 40 32 4A 25 04 5C  // .)@.!%@.-%@2J%.\
    DD10: 01 49 42 01 51 0A 33 25 40 01 3E 25 40 00 49 26  // .IB.Q.3%@.>%@.I&
    DD20: 01 02 65 01 01 43 CA 01 4A 05 04 5C F0 8F FF 00  // ..e..C..J..\....
    DD30: 44 54 01 02 65 01 02 43 CA 01 01 05 06 5C 01 00  // DT..e..C.....\..
    DD40: 00 80 03 00 40 06 5C 02 6A 01 40 02 B8 01 04 5C  // ....@.\.j.@....\
    DD50: 08 A5 01 1F 3D A5 01 00 46 7C 01 02 65 01 03 43  // ....=...F|..e..C
    DD60: CA 01 32 A5 01 01 3D 8D 00 00 00 44 CA 01 3D A5  // ..2...=....D..=.
    DD70: 01 00 44 CA 01 03 31 41 01 03 19 40 00 56 18 40  // ..D...1A...@.V.@
    DD80: 3B 02 40 03 28 40 06 5C 03 68 40 06 5C 03 A8 40  // ;.@.(@.\.h@.\..@
    DD90: 06 5C 03 E8 40 06 5C 04 02 00 40 3E 25 41 04 47  // .\..@.\...@>%A.G
    DDA0: CA 01 33 25 41 04 2D 05 46 04 00 00 00 43 9D 01  // ..3%A.-.F....C..
    DDB0: 3A 00 00 5B 66 FF 2D 0D 42 34 02 03 0C 48 00 00  // :..[f.-.B4...H..
    DDC0: 01 8D 08 5C 32 00 01 05 09 5C 00 1C 02 00 01 05  // ...\2....\......
    DDD0: 0A 5C 10 11 3D 12 2D 0D 42 04 00 2C 25 00 01 3D  // .\..=.-.B..,%..=
    DDE0: 25 00 06 49 D5 01 56 08 48 03 25 41 10 0D 65 97  // %..I..V.H.%A..e.
    DDF0: 48 40 07 65 97 48 BF 33 25 41 01 3E 25 41 00 49  // H@.e.H.3%A.>%A.I
    DE00: 07 02 0D 25 3B 48 01 54 30 3B 48 0D 25 3C 48 01  // ...%;H.T0;H.%<H.
    DE10: 54 30 3C 48 51 32 5B 7A 18 00 00 00 00 00 1C 00  // T0<HQ2[z........
    DE20: 04 00 38 00 08 00 54 00 0C 00 70 00 10 00 8C 00  // ..8...T...p.....
    DE30: 14 00 5C 00 01 02 00 04 02 25 01 04 03 31 41 00  // ..\......%...1A.
    DE40: 09 0D 41 0F 00 15 0D 41 01 66 FF 2D 0D 42 50 00  // ..A....A.f.-.BP.
    DE50: 2D 0A 42 41 03 0C 48 00 00 07 A5 68 48 FE 01 0D  // -.BA..H....hH...
    DE60: 68 48 11 11 50 02 4A 0D 6B 48 01 00 49 41 00 02  // hH..P.J.kH..IA..
    DE70: 25 01 13 54 08 68 48 54 00 6A 48 3A 00 00 5B 7A  // %..T.hHT.jH:..[z
    DE80: 0C 00 00 00 04 00 08 00 0C 00 10 00 14 00 96 00  // ................
    DE90: 01 01 04 00 37 00 00 52 3E 55 00 00 02 E4 00 16  // ....7..R>U......
    DEA0: 00 66 1C 2D 0C 42 04 00 52 12 52 3E 01 0C D8 09  // .f.-.B..R.R>....
    DEB0: 06 00 01 64 80 0A 1C 00 02 05 00 08 00 00 00 02  // ...d............
    DEC0: 0C 01 08 00 52 1F 03 08 41 80 0A 09 0D 41 03 00  // ....R...A....A..
    DED0: 66 FF 2D 0D 42 92 00 2D 0A 42 41 03 24 41 00 00  // f.-.B..-.BA.$A..
    DEE0: 01 05 82 00 0C 00 20 C0 5C 0A 83 00 00 FC 41 02  // ...... .\.....A.
    DEF0: 05 00 30 75 00 03 52 3F 02 05 00 A0 86 01 03 52  // ..0u..R?.......R
    DF00: 3F 02 05 00 48 E8 01 03 52 3F 02 05 00 30 75 00  // ?...H...R?...0u.
    DF10: 03 52 3F 02 05 00 40 0D 03 03 52 3F 5B 7A 04 00  // .R?...@...R?[z..
    DF20: 18 10 08 04 AC 01 01 01 08 00 37 00 00 03 88 00  // ..........7.....
    DF30: 28 08 03 09 00 00 03 2A 41 00 03 22 43 41 01 22  // (......*A.."CA."
    DF40: 28 08 44 5C 62 28 08 F8 41 42 22 00 63 01 39 00  // (.D\b(..AB".c.9.
    DF50: 63 08 7E 00 63 04 07 01 5A 5A 43 A6 01 01 24 93  // c.~.c...ZZC...$.
    DF60: 0A 00 00 01 24 94 0A 01 00 01 04 A3 0A 02 00 01  // ....$...........
    DF70: 04 A4 0A 06 00 01 04 A5 0A 0A 00 01 04 A6 0A 0E  // ................
    DF80: 00 01 04 A7 0A 12 00 01 04 A8 0A 16 00 01 04 A9  // ................
    DF90: 0A 1A 00 01 04 AA 0A 1E 00 2D 0D 42 22 00 43 9B  // .........-.B".C.
    DFA0: 01 5B 21 65 00 02 03 22 43 40 03 0A 41 44 56 08  // .[!e..."C@..ADV.
    DFB0: 40 37 02 00 4C 09 41 01 49 A3 00 54 20 00 00 54  // @7..L.A.I..T ..T
    DFC0: 30 00 00 0F 25 40 01 15 0D 41 01 4C 09 41 01 49  // 0...%@...A.L.A.I
    DFD0: BA 00 0F 25 40 02 54 28 00 00 54 38 00 00 37 00  // ...%@.T(..T8..7.
    DFE0: 00 3E 25 40 03 49 D5 00 03 2A 41 00 2D 25 41 04  // .>%@.I...*A.-%A.
    DFF0: 03 22 43 41 07 0A 52 0D 45 52 3E 03 24 40 16 00  // ."CA..R.ER>.$@..
    E000: 21 25 40 04 55 00 00 02 EA 00 00 2C E2 00 40 66  // !%@.U......,..@f
    E010: 1C 03 0C 40 08 00 3E 0D 40 00 00 44 01 01 2D 0C  // ...@..>.@..D..-.
    E020: 42 08 00 52 12 37 00 00 43 9B 01 01 05 91 0A 00  // B..R.7..C.......
    E030: 00 00 00 3C 0D 92 0A 00 00 44 9B 01 3C 25 E7 0A  // ...<.....D..<%..
    E040: 07 49 39 01 01 05 91 0A 0E 00 00 00 03 00 01 92  // .I9.............
    E050: 0A 5C 05 92 0A 00 FF 00 FF 0F 00 FF 00 01 05 32  // .\.............2
    E060: 0A 05 00 00 00 51 0A 01 05 32 0A 01 00 00 00 03  // .....Q...2......
    E070: 00 41 E7 0A 3E 62 41 41 49 4B 01 51 0A 3E 25 41  // .A..>bAAIK.Q.>%A
    E080: 00 44 74 01 3E 25 41 07 49 9B 01 01 05 91 0A 0E  // .Dt.>%A.I.......
    E090: 00 00 00 01 02 92 0A 01 01 05 91 0A 03 00 00 00  // ................
    E0A0: 03 38 41 92 0A 15 25 41 04 3C E2 9A 0A 41 45 9B  // .8A...%A.<...AE.
    E0B0: 01 4A E5 99 0A 04 44 9B 01 5C 25 F3 09 FE 22 2D  // .J....D..\%..."-
    E0C0: 65 00 01 3E 65 00 04 45 12 00 01 1A 28 08 00 5B  // e..>e..E....(..[
    E0D0: E5 00 02 02 14 00 3D 25 02 01 44 1C 00 3D 25 02  // ......=%..D..=%.
    E0E0: 02 44 3E 00 3D 25 02 03 44 63 00 5B 2C 02 01 41  // .D>.=%..Dc.[,..A
    E0F0: 03 05 00 FF FF FF FF 33 02 00 40 3E 01 00 00 48  // .......3..@>...H
    E100: 39 00 2C 05 01 01 00 00 00 2C 02 00 40 5B 3D B9  // 9.,......,..@[=.
    E110: 02 02 44 5E 00 3D 01 00 01 45 51 00 32 01 00 01  // ..D^.=...EQ.2...
    E120: 5B 32 01 01 00 02 01 00 01 02 B9 02 02 5B 2C 01  // [2...........[,.
    E130: 00 01 5B 3D 05 00 00 00 00 00 49 77 00 3D 05 01  // ..[=......Iw.=..
    E140: 00 00 00 00 44 E0 00 56 00 43 03 0D 40 1F 00 03  // ....D..V.C..@...
    E150: 01 00 00 3D 05 01 00 00 00 00 44 95 00 03 01 00  // ...=......D.....
    E160: 01 03 65 40 20 03 22 43 40 4C 02 00 44 49 A7 00  // ..e@ ."C@L..DI..
    E170: 33 25 40 01 43 95 00 2D 2A 40 40 1B 25 40 01 03  // 3%@.C..-*@@.%@..
    E180: 22 43 40 03 02 00 44 03 01 41 01 7D 02 00 00 27  // "C@...D..A.}...'
    E190: 05 40 02 00 00 00 2D 02 41 00 1B 05 41 01 2D 02  // .@....-.A...A.-.
    E1A0: 41 40 3E 02 00 41 44 E0 00 03 02 00 41 43 B7 00  // A@>..AD.....AC..
    E1B0: 02 02 00 00 5B 00 D1 01 02 01 04 04 37 00 00 42  // ....[.......7..B
    E1C0: 21 00 63 07 29 00 63 03 66 00 63 02 D5 00 63 04  // !.c.).c.f.c...c.
    E1D0: FA 00 63 0C 85 01 63 0D A8 01 5A 5A 43 D0 01 01  // ..c...c...ZZC...
    E1E0: 0D 1D 48 9F 0F 01 05 1E 48 00 00 00 00 01 05 1F  // ..H.....H.......
    E1F0: 48 7D 00 00 00 66 06 01 4C 1F 48 39 00 03 24 46  // H}...f..L.H9..$F
    E200: 42 00 3E 25 46 00 44 58 00 01 25 1F 48 00 4A 25  // B.>%F.DX..%.H.J%
    E210: 1B 48 10 49 D0 01 0D E5 1B 48 02 5B 4A A5 CB 05  // .H.I.....H.[J...
    E220: 01 49 D0 01 4A 25 1B 48 01 44 D0 01 4A 25 1C 48  // .I..J%.H.D..J%.H
    E230: 10 44 76 00 4A E5 1B 48 02 49 91 00 4A 25 1C 48  // .Dv.J..H.I..J%.H
    E240: 08 49 D0 01 43 C5 00 4A E5 1B 48 01 49 D0 01 4A  // .I..C..J..H.I..J
    E250: 25 1B 48 10 44 C5 00 0D A5 1B 48 03 0D 65 1B 48  // %.H.D.....H..e.H
    E260: 03 01 0D 1D 48 00 00 5C 25 1B 48 EF 01 4A 25 1C  // ....H..\%.H..J%.
    E270: 48 10 44 B7 00 01 0D 1D 48 9F 0F 07 E5 1B 48 FC  // H.D.....H.....H.
    E280: 0D E5 1F 48 01 0D 25 1B 48 11 5B 66 06 03 24 46  // ...H..%.H.[f..$F
    E290: 42 00 3E 25 46 00 49 D0 01 4A 25 1B 48 01 44 D0  // B.>%F.I..J%.H.D.
    E2A0: 01 4A 25 1C 48 10 44 EB 00 5C E5 1B 48 FE 02 5B  // .J%.H.D..\..H..[
    E2B0: 4A 65 D0 05 02 44 07 01 0D 25 23 48 01 3D 8D 00  // Je...D...%#H.=..
    E2C0: 00 00 44 84 01 03 05 46 80 F0 FA 02 56 00 41 03  // ..D....F....V.A.
    E2D0: 19 41 00 21 05 41 FF 0F 00 00 27 02 46 40 3E 05  // .A.!.A....'.F@>.
    E2E0: 41 00 00 00 00 44 37 01 2D 0D 40 01 00 01 8A 1D  // A....D7.-.@.....
    E2F0: 48 40 56 00 41 03 19 41 00 21 02 40 41 27 02 46  // H@V.A..A.!.@A'.F
    E300: 40 01 A5 22 48 0C 01 0A 22 48 40 15 05 40 04 56  // @.."H..."H@..@.V
    E310: 00 41 03 29 41 00 2D 0D 41 01 00 21 02 40 41 1B  // .A.)A.-.A..!.@A.
    E320: 05 40 08 01 0A 20 48 40 0D E5 20 48 C0 07 25 23  // .@... H@.. H..%#
    E330: 48 FE 4A 65 23 48 01 49 7C 01 5B 4A 25 1B 48 01  // H.Je#H.I|.[J%.H.
    E340: 44 9D 01 4A 25 1B 48 10 49 D0 01 4A 25 1C 48 10  // D..J%.H.I..J%.H.
    E350: 44 95 01 07 E5 1F 48 FE 0D 25 1B 48 11 5B 4A 25  // D.....H..%.H.[J%
    E360: 1B 48 01 44 D0 01 4A 25 1B 48 10 44 D0 01 4A 25  // .H.D..J%.H.D..J%
    E370: 1C 48 10 44 B8 01 07 A5 1B 48 FC 07 65 1B 48 FC  // .H.D.....H..e.H.
    E380: 5C 25 1B 48 EF 01 5B 00 71 00 03 01 08 00 37 00  // \%.H..[.q.....7.
    E390: 00 56 00 01 3D E5 00 20 48 1B 00 03 39 43 00 03  // .V..=.. H...9C..
    E3A0: 02 01 44 03 05 00 00 00 10 C0 2D 09 00 00 01 02  // ..D.......-.....
    E3B0: 82 00 00 03 00 40 83 00 56 00 41 03 31 41 00 75  // .....@..V.A.1A.u
    E3C0: 02 40 41 03 25 41 20 33 31 41 00 3D E2 00 41 47  // .@A.%A 31A.=..AG
    E3D0: 61 00 2D 0D 00 04 00 01 02 82 00 00 02 00 00 83  // a.-.............
    E3E0: 00 6E 02 00 41 0F 01 40 00 02 02 00 40 33 05 01  // .n..A..@....@3..
    E3F0: 01 00 00 00 08 02 00 01 5B 00 CE 00 03 01 00 10  // ........[.......
    E400: 37 00 00 56 00 40 4A 25 00 EC 01 44 30 00 4A 25  // 7..V.@J%...D0.J%
    E410: 05 EC 1E 49 30 00 03 25 40 01 01 05 05 EC 03 00  // ...I0..%@.......
    E420: 00 00 4A 65 05 EC 0F 49 28 00 3D 65 02 00 49 3C  // ..Je...I(.=e..I<
    E430: 00 2C 28 02 09 08 3D E5 02 00 49 48 00 2C A8 02  // .,(...=...IH.,..
    E440: 09 08 3D 65 02 02 49 6B 00 01 05 82 00 10 00 60  // ..=e..Ik.......`
    E450: C0 01 01 83 00 00 01 05 82 00 14 00 60 C0 02 05  // ............`...
    E460: 00 0C 02 00 00 3D E5 02 03 49 81 00 01 01 82 00  // .....=...I......
    E470: 01 02 05 01 0C 02 00 00 43 81 00 54 00 63 C0 01  // ........C..T.c..
    E480: 01 64 C0 00 01 21 65 C0 02 01 01 66 C0 01 01 31  // .d...!e....f...1
    E490: 67 C0 02 01 01 E8 C0 03 3D 65 02 01 44 AE 00 3D  // g.......=e..D..=
    E4A0: E5 02 01 44 AE 00 51 02 4A E5 A0 21 80 49 AE 00  // ...D..Q.J..!.I..
    E4B0: 3E 25 40 01 49 CD 00 01 05 05 EC 01 00 00 00 4A  // >%@.I..........J
    E4C0: 65 05 EC 0F 49 C5 00 5B F9 02 02 01 00 00 37 00  // e...I..[......7.
    E4D0: 00 3D 25 01 01 44 7B 00 3D 25 01 02 44 68 01 3D  // .=%..D{.=%..Dh.=
    E4E0: 25 01 00 49 CA 02 3D 05 00 00 00 00 00 49 39 00  // %..I..=......I9.
    E4F0: 3A 00 00 0D 25 68 18 01 4A 65 68 18 01 44 30 00  // :...%h..Jeh..D0.
    E500: 5B 54 20 68 18 52 3C 03 00 40 24 01 3E 39 40 00  // [T h.R<..@$.>9@.
    E510: 44 77 00 4A A5 24 01 08 44 4B 00 03 39 40 00 3E  // Dw.J.$..DK..9@.>
    E520: E5 40 00 49 62 00 03 E5 40 20 01 02 24 01 40 4A  // .@.Ib...@ ..$.@J
    E530: A5 24 01 08 44 67 00 4A A5 24 01 10 44 6F 00 55  // .$..Dg.J.$..Do.U
    E540: 38 00 5B 3D 65 01 02 44 D7 00 02 05 00 60 EA 00  // 8.[=e..D.....`..
    E550: 00 52 3C 3C F9 24 01 00 44 C1 00 07 25 15 01 FE  // .R<<.$..D...%...
    E560: 4A A5 24 01 10 44 98 00 03 00 40 24 01 03 F9 40  // J.$..D....@$...@
    E570: 00 3E 25 40 00 49 B4 00 03 25 40 68 01 02 24 01  // .>%@.I...%@h..$.
    E580: 40 4A A5 24 01 10 44 B9 00 5D 05 00 00 00 00 FF  // @J.$..D..]......
    E590: 40 7E 05 00 52 29 07 0D 18 01 F8 FE 43 3A 01 02  // @~..R)......C:..
    E5A0: 05 00 00 46 C3 23 07 25 15 01 FE 4A A5 01 17 03  // ...F.#.%...J....
    E5B0: 44 3A 01 56 08 40 03 31 40 01 15 0D 40 0E 0F 0D  // D:.V.@.1@...@...
    E5C0: 40 0F 04 01 0A 18 17 40 5C B1 19 17 FC 01 51 05  // @......@\.....Q.
    E5D0: 07 A5 01 17 FC 01 25 05 17 40 01 05 02 17 00 00  // ......%..@......
    E5E0: 3C 00 01 65 1C 17 01 54 08 04 17 01 A5 05 17 E8  // <..e...T........
    E5F0: 0D A5 19 17 10 4A 65 24 17 02 44 2D 01 0D 65 19  // .....Je$..D-..e.
    E600: 17 03 01 01 42 01 00 01 01 46 01 00 01 01 4A 01  // ....B....F....J.
    E610: 00 01 01 4E 01 00 01 01 52 01 00 01 01 56 01 00  // ...N....R....V..
    E620: 3D 65 01 02 49 67 01 5C 0D 18 01 F8 FF 01 01 5B  // =e..Ig.\.......[
    E630: 56 00 41 03 31 41 01 09 25 41 03 15 25 41 02 66  // V.A.1A..%A..%A.f
    E640: FF 2D 0D 42 D1 02 2D 0A 42 41 26 05 00 0A 00 00  // .-.B..-.BA&.....
    E650: 00 03 04 41 00 00 27 02 41 40 3E 05 40 00 00 01  // ...A..'.A@>.@...
    E660: 00 45 A1 01 03 0D 40 FF FF 66 FF 2D 0D 42 E1 02  // .E....@..f.-.B..
    E670: 56 00 41 03 39 41 01 15 25 41 02 2D 0A 42 41 03  // V.A.9A..%A.-.BA.
    E680: 0C 48 00 00 01 0A 30 1B 40 3A 00 00 3D 65 01 0B  // .H....0.@:..=e..
    E690: 49 2C 02 20 05 00 64 00 00 00 03 0C 48 02 00 03  // I,. ..d.....H...
    E6A0: 00 41 40 01 0F 25 41 10 09 0D 41 DF F7 4B A5 01  // .A@..%A...A..K..
    E6B0: 04 44 F0 01 0F 65 41 08 03 0C 48 00 00 4A 05 9C  // .D...eA...H..J..
    E6C0: 1B 01 00 00 00 44 15 02 03 0C 48 02 00 3C 02 41  // .....D....H..<.A
    E6D0: 01 40 49 15 02 3C 02 40 01 41 44 CA 02 03 0C 48  // .@I..<.@.AD....H
    E6E0: 02 00 07 25 40 01 EF 01 02 41 01 40 01 0A 40 01  // ...%@....A.@..@.
    E6F0: 41 43 CA 02 56 00 40 03 8D 40 0C 00 3D 65 01 18  // AC..V.@..@..=e..
    E700: 44 4F 02 03 8D 40 3E 00 3D 65 01 19 44 4F 02 03  // DO...@>.=e..DO..
    E710: A9 40 01 33 A5 40 14 03 31 40 01 09 25 40 03 15  // .@.3.@..1@..%@..
    E720: 25 40 04 0F 0D 40 01 01 4B A5 01 04 44 6C 02 0F  // %@...@..K...Dl..
    E730: 0D 40 00 02 56 00 41 03 29 41 01 33 25 41 14 03  // .@..V.A.)A.3%A..
    E740: 0C 48 00 00 4A 05 9C 1B 01 00 00 00 44 A8 02 03  // .H..J.......D...
    E750: 0C 48 02 00 4A 25 40 01 10 49 A8 02 3C 22 43 01  // .H..J%@..I..<"C.
    E760: 41 49 A8 02 03 1A 48 40 3C 0A 00 01 40 44 CA 02  // AI....H@<...@D..
    E770: 03 1A 48 40 07 25 00 01 FE 03 0C 48 02 00 01 22  // ..H@.%.....H..."
    E780: 43 01 41 07 0D 40 01 EF F7 03 1A 48 40 01 0A 00  // C.A..@.....H@...
    E790: 01 40 3A 00 00 5B 7A 28 00 00 CA 9A 3B 80 7C 81  // .@:..[z(....;.|.
    E7A0: 4A 00 2F 68 59 00 94 35 77 00 00 00 00 00 02 04  // J./hY..5w.......
    E7B0: 00 00 04 08 00 00 26 0C 00 00 28 10 00 00 2A 14  // ......&...(...*.
    E7C0: 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E7D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E7E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E7F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E800: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E810: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E820: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E830: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E840: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E850: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E860: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    E870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E880: 00 00 00 00                                      // ....


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 65
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 65 41 4C 41 53 4B 41  // WSMT(....eALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 07 00 00 00                          // ........


