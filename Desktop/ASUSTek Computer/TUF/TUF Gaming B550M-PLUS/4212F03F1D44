
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20210604
Copyright (c) 2000 - 2021 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00001D33  0x02  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 02)  MCFG  0x0000003C  0x01  "ALASKA"  "A M I   "  0x01072009  "MSFT"   0x00010013
 03)  APIC  0x0000015E  0x04  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 04)  CRAT  0x00000850  0x01  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 05)  PCCT  0x0000006E  0x02  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 06)  SSDT  0x00003B8E  0x02  "AMD   "  "AMD AOD "  0x00000001  "INTL"   0x20120913
 07)  TPM2  0x0000004C  0x04  "ALASKA"  "A M I   "  0x00000001  "AMI "   0x00000000
 08)  VFCT  0x0000E084  0x01  "ALASKA"  "A M I   "  0x00000001  "AMD "   0x31504F47
 09)  SSDT  0x0000007D  0x02  "AMD   "  "ArticDIS"  0x00000001  "INTL"   0x20120913
 10)  CDIT  0x00000029  0x01  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 11)  IVRS  0x000000D0  0x02  "AMD   "  "AmdTable"  0x00000001  "AMD "   0x00000001
 12)  DSDT  0x0000B980  0x02  "ALASKA"  "A M I   "  0x01072009  "INTL"   0x20120913
 13)  SSDT  0x0000052C  0x02  "AMD   "  "ArticNOI"  0x00000001  "INTL"   0x20120913
 14)  WSMT  0x00000028  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 15)  SSDT  0x000002C2  0x02  "AMD   "  "ArticDGP"  0x00000001  "INTL"   0x20120913
 16)  SSDT  0x000000BF  0x01  "AMD   "  "AmdTable"  0x00001000  "INTL"   0x20120913
 17)  SSDT  0x00000139  0x02  "ALASKA"  "CPUSSDT "  0x01072009  "AMI "   0x01072009
 18)  FACP  0x00000114  0x06  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 19)  FPDT  0x00000044  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x01000013
 20)  WPBT  0x0000003C  0x01  "ALASKA"  "A M I   "  0x00000001  "ASUS"   0x00000001
 21)  SSDT  0x0000092A  0x02  "AMD   "  "AmdTable"  0x00000002  "MSFT"   0x04000000
 22)  SSDT  0x00003E6E  0x02  "AMD   "  "ArticN  "  0x00000001  "INTL"   0x20120913
 23)  HPET  0x00000038  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00000005
 24)  SSDT  0x000010C9  0x02  "AMD   "  "ArticTPX"  0x00000001  "INTL"   0x20120913
 25)  FIDT  0x0000009C  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013
 26)  FACS  0x00000040  0x02
 27)  BGRT  0x00000038  0x01  "ALASKA"  "A M I   "  0x01072009  "AMI "   0x00010013

Found 27 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 0000015E
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : 42
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 02
[037h 0055   1]                Local Apic ID : 02
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 04
[03Fh 0063   1]                Local Apic ID : 08
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 06
[047h 0071   1]                Local Apic ID : 0A
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 01
[04Fh 0079   1]                Local Apic ID : 01
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 03
[057h 0087   1]                Local Apic ID : 03
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 05
[05Fh 0095   1]                Local Apic ID : 09
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 07
[067h 0103   1]                Local Apic ID : 0B
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 08
[06Fh 0111   1]                Local Apic ID : 00
[070h 0112   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 09
[077h 0119   1]                Local Apic ID : 00
[078h 0120   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0A
[07Fh 0127   1]                Local Apic ID : 00
[080h 0128   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0B
[087h 0135   1]                Local Apic ID : 00
[088h 0136   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0C
[08Fh 0143   1]                Local Apic ID : 00
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0D
[097h 0151   1]                Local Apic ID : 00
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 00
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 0F
[0A7h 0167   1]                Local Apic ID : 00
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 00 [Processor Local APIC]
[0ADh 0173   1]                       Length : 08
[0AEh 0174   1]                 Processor ID : 10
[0AFh 0175   1]                Local Apic ID : 00
[0B0h 0176   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0B4h 0180   1]                Subtable Type : 00 [Processor Local APIC]
[0B5h 0181   1]                       Length : 08
[0B6h 0182   1]                 Processor ID : 11
[0B7h 0183   1]                Local Apic ID : 00
[0B8h 0184   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0BCh 0188   1]                Subtable Type : 00 [Processor Local APIC]
[0BDh 0189   1]                       Length : 08
[0BEh 0190   1]                 Processor ID : 12
[0BFh 0191   1]                Local Apic ID : 00
[0C0h 0192   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0C4h 0196   1]                Subtable Type : 00 [Processor Local APIC]
[0C5h 0197   1]                       Length : 08
[0C6h 0198   1]                 Processor ID : 13
[0C7h 0199   1]                Local Apic ID : 00
[0C8h 0200   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0CCh 0204   1]                Subtable Type : 00 [Processor Local APIC]
[0CDh 0205   1]                       Length : 08
[0CEh 0206   1]                 Processor ID : 14
[0CFh 0207   1]                Local Apic ID : 00
[0D0h 0208   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0D4h 0212   1]                Subtable Type : 00 [Processor Local APIC]
[0D5h 0213   1]                       Length : 08
[0D6h 0214   1]                 Processor ID : 15
[0D7h 0215   1]                Local Apic ID : 00
[0D8h 0216   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0DCh 0220   1]                Subtable Type : 00 [Processor Local APIC]
[0DDh 0221   1]                       Length : 08
[0DEh 0222   1]                 Processor ID : 16
[0DFh 0223   1]                Local Apic ID : 00
[0E0h 0224   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0E4h 0228   1]                Subtable Type : 00 [Processor Local APIC]
[0E5h 0229   1]                       Length : 08
[0E6h 0230   1]                 Processor ID : 17
[0E7h 0231   1]                Local Apic ID : 00
[0E8h 0232   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ECh 0236   1]                Subtable Type : 00 [Processor Local APIC]
[0EDh 0237   1]                       Length : 08
[0EEh 0238   1]                 Processor ID : 18
[0EFh 0239   1]                Local Apic ID : 00
[0F0h 0240   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0F4h 0244   1]                Subtable Type : 00 [Processor Local APIC]
[0F5h 0245   1]                       Length : 08
[0F6h 0246   1]                 Processor ID : 19
[0F7h 0247   1]                Local Apic ID : 00
[0F8h 0248   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0FCh 0252   1]                Subtable Type : 00 [Processor Local APIC]
[0FDh 0253   1]                       Length : 08
[0FEh 0254   1]                 Processor ID : 1A
[0FFh 0255   1]                Local Apic ID : 00
[100h 0256   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[104h 0260   1]                Subtable Type : 00 [Processor Local APIC]
[105h 0261   1]                       Length : 08
[106h 0262   1]                 Processor ID : 1B
[107h 0263   1]                Local Apic ID : 00
[108h 0264   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[10Ch 0268   1]                Subtable Type : 00 [Processor Local APIC]
[10Dh 0269   1]                       Length : 08
[10Eh 0270   1]                 Processor ID : 1C
[10Fh 0271   1]                Local Apic ID : 00
[110h 0272   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[114h 0276   1]                Subtable Type : 00 [Processor Local APIC]
[115h 0277   1]                       Length : 08
[116h 0278   1]                 Processor ID : 1D
[117h 0279   1]                Local Apic ID : 00
[118h 0280   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[11Ch 0284   1]                Subtable Type : 00 [Processor Local APIC]
[11Dh 0285   1]                       Length : 08
[11Eh 0286   1]                 Processor ID : 1E
[11Fh 0287   1]                Local Apic ID : 00
[120h 0288   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[124h 0292   1]                Subtable Type : 00 [Processor Local APIC]
[125h 0293   1]                       Length : 08
[126h 0294   1]                 Processor ID : 1F
[127h 0295   1]                Local Apic ID : 00
[128h 0296   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[12Ch 0300   1]                Subtable Type : 04 [Local APIC NMI]
[12Dh 0301   1]                       Length : 06
[12Eh 0302   1]                 Processor ID : FF
[12Fh 0303   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[131h 0305   1]         Interrupt Input LINT : 01

[132h 0306   1]                Subtable Type : 01 [I/O APIC]
[133h 0307   1]                       Length : 0C
[134h 0308   1]                  I/O Apic ID : 09
[135h 0309   1]                     Reserved : 00
[136h 0310   4]                      Address : FEC00000
[13Ah 0314   4]                    Interrupt : 00000000

[13Eh 0318   1]                Subtable Type : 01 [I/O APIC]
[13Fh 0319   1]                       Length : 0C
[140h 0320   1]                  I/O Apic ID : 0A
[141h 0321   1]                     Reserved : 00
[142h 0322   4]                      Address : FEC01000
[146h 0326   4]                    Interrupt : 00000018

[14Ah 0330   1]                Subtable Type : 02 [Interrupt Source Override]
[14Bh 0331   1]                       Length : 0A
[14Ch 0332   1]                          Bus : 00
[14Dh 0333   1]                       Source : 00
[14Eh 0334   4]                    Interrupt : 00000002
[152h 0338   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[154h 0340   1]                Subtable Type : 02 [Interrupt Source Override]
[155h 0341   1]                       Length : 0A
[156h 0342   1]                          Bus : 00
[157h 0343   1]                       Source : 09
[158h 0344   4]                    Interrupt : 00000009
[15Ch 0348   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

Raw Table Data: Length 350 (0x15E)

    0000: 41 50 49 43 5E 01 00 00 04 42 41 4C 41 53 4B 41  // APIC^....BALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 02 02 01 00 00 00 00 08 04 08  // ................
    0040: 01 00 00 00 00 08 06 0A 01 00 00 00 00 08 01 01  // ................
    0050: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 05 09  // ................
    0060: 01 00 00 00 00 08 07 0B 01 00 00 00 00 08 08 00  // ................
    0070: 00 00 00 00 00 08 09 00 00 00 00 00 00 08 0A 00  // ................
    0080: 00 00 00 00 00 08 0B 00 00 00 00 00 00 08 0C 00  // ................
    0090: 00 00 00 00 00 08 0D 00 00 00 00 00 00 08 0E 00  // ................
    00A0: 00 00 00 00 00 08 0F 00 00 00 00 00 00 08 10 00  // ................
    00B0: 00 00 00 00 00 08 11 00 00 00 00 00 00 08 12 00  // ................
    00C0: 00 00 00 00 00 08 13 00 00 00 00 00 00 08 14 00  // ................
    00D0: 00 00 00 00 00 08 15 00 00 00 00 00 00 08 16 00  // ................
    00E0: 00 00 00 00 00 08 17 00 00 00 00 00 00 08 18 00  // ................
    00F0: 00 00 00 00 00 08 19 00 00 00 00 00 00 08 1A 00  // ................
    0100: 00 00 00 00 00 08 1B 00 00 00 00 00 00 08 1C 00  // ................
    0110: 00 00 00 00 00 08 1D 00 00 00 00 00 00 08 1E 00  // ................
    0120: 00 00 00 00 00 08 1F 00 00 00 00 00 04 06 FF 05  // ................
    0130: 00 01 01 0C 09 00 00 00 C0 FE 00 00 00 00 01 0C  // ................
    0140: 0A 00 00 10 C0 FE 18 00 00 00 02 0A 00 00 02 00  // ................
    0150: 00 00 00 00 02 0A 00 09 09 00 00 00 0F 00        // ..............


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 02
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 00
                                   Displayed : 0
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000C6D1C018
[030h 0048   4]                Image OffsetX : 00000240
[034h 0052   4]                Image OffsetY : 000000C4

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 02 41 4C 41 53 4B 41  // BGRT8.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 01 00 00 00 18 C0 D1 C6 00 00 00 00  // ................
    0030: 40 02 00 00 C4 00 00 00                          // @.......


CDIT
----
[000h 0000   4]                    Signature : "CDIT"    
[004h 0004   4]                 Table Length : 00000029
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E7
[00Ah 0010   6]                       Oem ID : "AMD"
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 E7 41 4D 44 00 00 00  // CDIT).....AMD...
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 00000850
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 6E
[00Ah 0010   6]                       Oem ID : "AMD"
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 2128 (0x850)

    0000: 43 52 41 54 50 08 00 00 01 6E 41 4D 44 00 00 00  // CRATP....nAMD...
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 22 00 00 00 01 00 00 00 00 00 00 00  // ...."...........
    0030: 00 28 00 00 05 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 08 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 0C 00  // .(..............
    0090: 00 00 00 00 00 00 F4 CF 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    00B0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 30  // ...............0
    00C0: 07 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    00D0: 02 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0100: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0110: 02 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0140: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0150: 02 40 00 00 0F 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0180: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0190: 02 40 00 00 0F 00 00 00 00 00 00 00 0F 00 00 00  // .@..............
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00  // ............. ..
    01C0: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    01D0: 02 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0200: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0210: 02 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0240: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0250: 02 40 00 00 0F 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0280: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0290: 02 40 00 00 0B 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02B0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    02C0: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    02D0: 02 40 00 00 0D 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0300: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0310: 02 40 00 00 0F 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0340: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0350: 02 40 00 00 0F 00 00 00 08 00 00 00 F0 00 00 00  // .@..............
    0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00  // ............. ..
    0380: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0390: 02 40 00 00 0B 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    03C0: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    03D0: 02 40 00 00 0D 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0400: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0410: 02 40 00 00 0F 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0440: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0450: 03 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0480: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0490: 03 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    04C0: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    04D0: 03 40 00 00 AB 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0500: 04 08 00 00 08 08 00 00 00 40 00 00 00 00 00 00  // .........@......
    0510: 03 40 00 00 AD 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0530: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0540: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0550: 03 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0570: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0580: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0590: 03 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    05C0: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    05D0: 03 40 00 00 AB 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0600: 04 08 00 00 08 08 00 00 00 40 00 00 00 00 00 00  // .........@......
    0610: 03 40 00 00 AD 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0630: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0640: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0650: 03 40 00 00 0B 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    0660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0670: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0680: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0690: 03 40 00 00 0D 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    06A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    06C0: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    06D0: 03 40 00 00 AB 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    06E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0700: 04 08 00 00 08 08 00 00 00 40 00 00 00 00 00 00  // .........@......
    0710: 03 40 00 00 AD 00 00 00 08 00 00 00 30 00 00 00  // .@..........0...
    0720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0730: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0740: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0750: 03 40 00 00 0B 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0770: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0780: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    0790: 03 40 00 00 0D 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    07A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    07C0: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    07D0: 03 40 00 00 AB 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    07E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07F0: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0800: 04 08 00 00 08 08 00 00 00 40 00 00 00 00 00 00  // .........@......
    0810: 03 40 00 00 AD 00 00 00 0A 00 00 00 C0 00 00 00  // .@..............
    0820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0830: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0840: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................


DSDT
----
DefinitionBlock ("", "DSDT", 2, "ALASKA", "A M I ", 0x01072009)
{
    /*
     * iASL Warning: There were 4 external control methods found during
     * disassembly, but only 0 were resolved (4 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (MPTS, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (MWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments

    Name (ENTK, 0x87)
    Name (EXTK, 0xAA)
    Name (SP1O, 0x2E)
    Name (IOHW, 0x0290)
    Name (IOHB, 0x0290)
    Name (IOHL, 0x10)
    Name (PEBL, 0x08000000)
    Name (ACPM, One)
    Name (CPVD, One)
    Name (SMBB, 0x0B20)
    Name (SMBL, 0x20)
    Name (SMB0, 0x0B00)
    Name (SMBM, 0x10)
    Name (PMBS, 0x0800)
    Name (PMLN, 0xA0)
    Name (SMIO, 0xB2)
    Name (GPBS, Zero)
    Name (GPLN, Zero)
    Name (APCB, 0xFEC00000)
    Name (APCL, 0x1000)
    Name (HPTB, 0xFED00000)
    Name (WDTB, Zero)
    Name (WDTL, Zero)
    Name (GIOB, 0xFED81500)
    Name (IOMB, 0xFED80D00)
    Name (SSMB, 0xFED80200)
    Name (SPMR, 0xFED80300)
    Name (CAFS, 0xBB)
    Name (UTDB, Zero)
    Name (NBTS, 0x5000)
    Name (ASSB, Zero)
    Name (AOTB, Zero)
    Name (AAXB, Zero)
    Name (PEHP, One)
    Name (SHPC, Zero)
    Name (PEPM, One)
    Name (PEER, One)
    Name (PECS, One)
    Name (ITKE, Zero)
    Name (PEBS, 0xF0000000)
    Name (PELN, 0x08000000)
    Name (SRIO, Zero)
    Name (CSMI, 0x61)
    Name (DSSP, Zero)
    Name (FHPP, One)
    Name (SMIA, 0xB2)
    Name (SMIB, 0xB3)
    Name (OFST, 0x35)
    Name (TRST, 0x02)
    Name (TCMF, Zero)
    Name (TMF1, Zero)
    Name (TMF2, Zero)
    Name (TMF3, Zero)
    Name (TTPF, Zero)
    Name (DTPT, Zero)
    Name (TTDP, One)
    Name (TPMB, 0xCA993000)
    Name (TPBS, 0x4000)
    Name (TPMC, 0xCA997000)
    Name (TPCS, 0x4000)
    Name (TPMM, 0xFD210510)
    Name (FTPM, 0xFD210510)
    Name (PPIM, 0xCAF0A718)
    Name (PPIL, 0x1C)
    Name (AMDT, One)
    Name (TPMF, One)
    Name (PPIV, One)
    Name (AMWV, 0x09)
    Name (SMIM, 0x80000009)
    Name (HIDK, "MSFT0001")
    Name (HIDM, "MSFT0003")
    Name (CIDK, 0x0303D041)
    Name (CIDM, 0x030FD041)
    Name (ATIS, 0xB0)
    Name (MBEC, Zero)
    Name (THPN, Zero)
    Name (ALST, Zero)
    Name (NBTP, 0xFEC30000)
    Name (CNSB, Zero)
    Name (CNPG, Zero)
    Name (SMIP, 0xB2)
    Name (IO1B, Zero)
    Name (IO1L, Zero)
    Name (IO2B, 0x0290)
    Name (IO2L, 0x10)
    Name (IO3B, 0x0200)
    Name (IO3L, 0x20)
    Name (IO4B, Zero)
    Name (IO4L, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        If (Arg0)
        {
            \_SB.DSPI ()
            \_SB.PCI0.NAPE ()
        }

        PXXX (Arg0)
    }

    Name (PICM, Zero)
    Method (PXXX, 1, NotSerialized)
    {
        If (Arg0)
        {
            DBG8 = 0xAA
        }
        Else
        {
            DBG8 = 0xAC
        }

        PICM = Arg0
    }

    Name (OSVR, Ones)
    Method (OSFL, 0, NotSerialized)
    {
        If ((OSVR != Ones))
        {
            Return (OSVR) /* \OSVR */
        }

        If ((PICM == Zero))
        {
            DBG8 = 0xAC
        }

        OSVR = 0x03
        If (CondRefOf (\_OSI, Local0))
        {
            If (_OSI ("Windows 2001"))
            {
                OSVR = 0x04
            }

            If (_OSI ("Windows 2001.1"))
            {
                OSVR = 0x05
            }

            If (_OSI ("FreeBSD"))
            {
                OSVR = 0x06
            }

            If (_OSI ("HP-UX"))
            {
                OSVR = 0x07
            }

            If (_OSI ("OpenVMS"))
            {
                OSVR = 0x08
            }

            If (_OSI ("Windows 2001 SP1"))
            {
                OSVR = 0x09
            }

            If (_OSI ("Windows 2001 SP2"))
            {
                OSVR = 0x0A
            }

            If (_OSI ("Windows 2001 SP3"))
            {
                OSVR = 0x0B
            }

            If (_OSI ("Windows 2006"))
            {
                OSVR = 0x0C
            }

            If (_OSI ("Windows 2006 SP1"))
            {
                OSVR = 0x0D
            }

            If (_OSI ("Windows 2009"))
            {
                OSVR = 0x0E
            }

            If (_OSI ("Windows 2012"))
            {
                OSVR = 0x0F
            }

            If (_OSI ("Windows 2013"))
            {
                OSVR = 0x10
            }
        }
        Else
        {
            If (MCTH (_OS, "Microsoft Windows NT"))
            {
                OSVR = Zero
            }

            If (MCTH (_OS, "Microsoft Windows"))
            {
                OSVR = One
            }

            If (MCTH (_OS, "Microsoft WindowsME: Millennium Edition"))
            {
                OSVR = 0x02
            }

            If (MCTH (_OS, "Linux"))
            {
                OSVR = 0x03
            }

            If (MCTH (_OS, "FreeBSD"))
            {
                OSVR = 0x06
            }

            If (MCTH (_OS, "HP-UX"))
            {
                OSVR = 0x07
            }

            If (MCTH (_OS, "OpenVMS"))
            {
                OSVR = 0x08
            }
        }

        Return (OSVR) /* \OSVR */
    }

    Method (MCTH, 2, NotSerialized)
    {
        If ((SizeOf (Arg0) < SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = (SizeOf (Arg0) + One)
        Name (BUF0, Buffer (Local0) {})
        Name (BUF1, Buffer (Local0) {})
        BUF0 = Arg0
        BUF1 = Arg1
        While (Local0)
        {
            Local0--
            If ((DerefOf (BUF0 [Local0]) != DerefOf (BUF1 [Local0]
                )))
            {
                Return (Zero)
            }
        }

        Return (One)
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        Local0 = (SS1 << One)
        Local0 |= (SS2 << 0x02)
        Local0 |= (SS3 << 0x03)
        Local0 |= (SS4 << 0x04)
        If (((One << Arg1) & Local0))
        {
            PRWP [One] = Arg1
        }
        Else
        {
            Local0 >>= One
            If (((OSFL () == One) || (OSFL () == 0x02)))
            {
                FindSetLeftBit (Local0, PRWP [One])
            }
            Else
            {
                FindSetRightBit (Local0, PRWP [One])
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Name (WAKP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (UPWP, 1, NotSerialized)
    {
        If (DerefOf (WAKP [Zero]))
        {
            WAKP [One] = Zero
        }
        Else
        {
            WAKP [One] = Arg0
        }
    }

    OperationRegion (DEB0, SystemIO, 0x80, One)
    Field (DEB0, ByteAcc, NoLock, Preserve)
    {
        DBG8,   8
    }

    OperationRegion (DEB1, SystemIO, 0x90, 0x02)
    Field (DEB1, WordAcc, NoLock, Preserve)
    {
        DBG9,   16
    }

    Name (SS1, Zero)
    Name (SS2, Zero)
    Name (SS3, One)
    Name (SS4, One)
    Name (IOST, 0x0001)
    Name (TOPM, 0x00000000)
    Name (ROMS, 0xFFE00000)
    Name (VGAF, One)
    OperationRegion (DEB2, SystemIO, 0x80, 0x02)
    Field (DEB2, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    Name (OSTY, Ones)
    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (PSMI, SystemIO, SMIO, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemMemory, 0xFED80300, 0x0100)
    Field (PMRG, AnyAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0x78), 
            ,   20, 
        SI3V,   1, 
        Offset (0x80), 
        SI3R,   1, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x296), 
            ,   7, 
        TMSE,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2, 
        Offset (0x3BB), 
            ,   6, 
        PWDE,   1, 
        Offset (0x3E4), 
        BLNK,   2
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   6, 
        PEWS,   1, 
        WSTA,   1, 
        Offset (0x03), 
            ,   6, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, PMBS, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Method (SPTS, 1, NotSerialized)
    {
        P80H = Arg0
        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
        If ((Arg0 == 0x03))
        {
            SLPS = One
        }

        If ((Arg0 == 0x04))
        {
            SLPS = One
            RSTU = One
        }

        If ((Arg0 == 0x05))
        {
            PWDE = One
        }
    }

    Method (SWAK, 1, NotSerialized)
    {
        BLNK = 0x03
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PEWD = Zero
        If (PICM)
        {
            \_SB.DSPI ()
        }

        If (TMSE)
        {
            TMSE = Zero
        }

        If ((Arg0 == 0x03))
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        If ((Arg0 == 0x04))
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Scope (_GPE)
    {
    }

    Scope (\)
    {
        Device (AWW0)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "AWW")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x13, 0x12, 0x02, 0xC3, 0xBC, 0xD0, 0xA2, 0x41,  // .......A
                /* 0008 */  0xBA, 0x17, 0x81, 0x6C, 0xD5, 0xED, 0x77, 0x44,  // ...l..wD
                /* 0010 */  0x42, 0x43, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // BC..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x4D, 0x4F, 0x01, 0x00   // ..).MO..
            })
            Method (WMBC, 3, NotSerialized)
            {
                Local0 = \_SB.CTRL
                Return (Local0)
            }

            Name (WQMO, Buffer (0x0241)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x31, 0x02, 0x00, 0x00, 0x9C, 0x04, 0x00, 0x00,  // 1.......
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x28, 0x5A, 0x82, 0x00, 0x01, 0x06, 0x18, 0x42,  // (Z.....B
                /* 0020 */  0x20, 0xA4, 0x02, 0x89, 0xC0, 0xA1, 0x21, 0x14,  //  .....!.
                /* 0028 */  0x45, 0x01, 0x0C, 0x86, 0xCB, 0x72, 0x20, 0xE4,  // E....r .
                /* 0030 */  0x82, 0x89, 0x09, 0x10, 0x01, 0x21, 0xAF, 0x02,  // .....!..
                /* 0038 */  0x6C, 0x0A, 0x30, 0x09, 0xA2, 0xFE, 0xFD, 0x21,  // l.0....!
                /* 0040 */  0x4A, 0x82, 0x43, 0x09, 0x81, 0x90, 0x44, 0x01,  // J.C...D.
                /* 0048 */  0xE6, 0x05, 0xE8, 0x16, 0x60, 0x58, 0x80, 0x6D,  // ....`X.m
                /* 0050 */  0x01, 0xA6, 0x05, 0x38, 0x86, 0xA4, 0xD2, 0xC0,  // ...8....
                /* 0058 */  0x29, 0x81, 0xA5, 0x40, 0x48, 0xA8, 0x00, 0xE5,  // )..@H...
                /* 0060 */  0x02, 0x7C, 0x0B, 0xD0, 0x8E, 0x28, 0xC9, 0x02,  // .|...(..
                /* 0068 */  0x2C, 0xC3, 0x88, 0xC0, 0xA3, 0x88, 0x6C, 0x34,  // ,.....l4
                /* 0070 */  0x4E, 0x50, 0x36, 0x34, 0x4A, 0x06, 0x84, 0x3C,  // NP64J..<
                /* 0078 */  0x0B, 0xB0, 0x0E, 0x4C, 0x08, 0xEC, 0x5E, 0x80,  // ...L..^.
                /* 0080 */  0x43, 0x01, 0xCE, 0x04, 0x08, 0x13, 0xA0, 0x4C,  // C......L
                /* 0088 */  0x80, 0x31, 0x08, 0x02, 0xD3, 0xD6, 0x70, 0x04,  // .1....p.
                /* 0090 */  0x54, 0x21, 0x98, 0x50, 0xCE, 0x25, 0x52, 0x83,  // T!.P.%R.
                /* 0098 */  0x60, 0x42, 0x09, 0x14, 0x24, 0x4C, 0x6F, 0x28,  // `B..$Lo(
                /* 00A0 */  0x12, 0x07, 0x22, 0x6D, 0x78, 0xC2, 0x6C, 0x4D,  // .."mx.lM
                /* 00A8 */  0x80, 0x45, 0x0C, 0x41, 0x45, 0x08, 0x1A, 0xA1,  // .E.AE...
                /* 00B0 */  0xFD, 0x41, 0x90, 0x58, 0x0B, 0xD6, 0x50, 0x1D,  // .A.X..P.
                /* 00B8 */  0x69, 0x34, 0xA8, 0xE1, 0x25, 0x38, 0x5C, 0x0F,  // i4..%8\.
                /* 00C0 */  0xF5, 0x1C, 0x3B, 0x17, 0x20, 0x7D, 0x92, 0x02,  // ..;. }..
                /* 00C8 */  0x39, 0xC8, 0x73, 0xAB, 0x73, 0x9C, 0x04, 0x24,  // 9.s.s..$
                /* 00D0 */  0x81, 0xB1, 0x12, 0x74, 0x30, 0x70, 0x28, 0xAE,  // ...t0p(.
                /* 00D8 */  0x01, 0x35, 0xE3, 0xE3, 0x65, 0x82, 0xE0, 0x50,  // .5..e..P
                /* 00E0 */  0x43, 0xF4, 0x40, 0xC3, 0x9D, 0xC0, 0x21, 0x32,  // C.@...!2
                /* 00E8 */  0x40, 0xCF, 0xEE, 0x68, 0x30, 0x07, 0x00, 0x8F,  // @..h0...
                /* 00F0 */  0xEC, 0x64, 0xDE, 0x03, 0x4A, 0x15, 0x60, 0x76,  // .d..J.`v
                /* 00F8 */  0xCC, 0x9A, 0x5A, 0x82, 0xE3, 0x31, 0xF4, 0xE9,  // ..Z..1..
                /* 0100 */  0x9E, 0xCF, 0x09, 0x27, 0xB0, 0xFC, 0x41, 0xA0,  // ...'..A.
                /* 0108 */  0x46, 0x66, 0x68, 0xCF, 0xF4, 0xB4, 0x62, 0x86,  // Ffh...b.
                /* 0110 */  0x3C, 0xFC, 0xC3, 0x62, 0x62, 0x21, 0xF4, 0x41,  // <..bb!.A
                /* 0118 */  0xF0, 0x78, 0xE0, 0xFD, 0xFF, 0xC7, 0x03, 0x1E,  // .x......
                /* 0120 */  0xC5, 0x67, 0x02, 0x21, 0xBC, 0x12, 0xC4, 0xF6,  // .g.!....
                /* 0128 */  0x80, 0x12, 0x94, 0x07, 0x8C, 0x1E, 0x90, 0xFD,  // ........
                /* 0130 */  0x0A, 0x40, 0x08, 0x5E, 0xE6, 0x88, 0xE4, 0x14,  // .@.^....
                /* 0138 */  0x41, 0x63, 0xF2, 0xE4, 0x5E, 0x0D, 0x42, 0x3C,  // Ac..^.B<
                /* 0140 */  0x24, 0x14, 0x3E, 0x00, 0xCD, 0xEA, 0x31, 0x81,  // $.>...1.
                /* 0148 */  0x11, 0x14, 0x09, 0x8F, 0x12, 0x03, 0x8F, 0x3A,  // .......:
                /* 0150 */  0x04, 0x44, 0x3E, 0x9A, 0x73, 0x09, 0x7F, 0x34,  // .D>.s..4
                /* 0158 */  0x51, 0x4E, 0xE1, 0x70, 0x7C, 0x62, 0x30, 0x42,  // QN.p|b0B
                /* 0160 */  0xF8, 0x72, 0x0F, 0x0E, 0x44, 0xF3, 0x7C, 0x34,  // .r..D.|4
                /* 0168 */  0x89, 0x33, 0x7A, 0x17, 0xF0, 0xD9, 0x80, 0x1D,  // .3z.....
                /* 0170 */  0x2E, 0x1C, 0x89, 0x42, 0x36, 0x16, 0xEA, 0xA1,  // ...B6...
                /* 0178 */  0x52, 0x61, 0x40, 0x9A, 0x78, 0xDC, 0x98, 0x47,  // Ra@.x..G
                /* 0180 */  0xD1, 0xFB, 0x78, 0x28, 0xCA, 0xEB, 0x01, 0x83,  // ..x(....
                /* 0188 */  0x38, 0x29, 0x8F, 0x4E, 0xF0, 0x14, 0xC2, 0x12,  // 8).N....
                /* 0190 */  0x48, 0xE8, 0x90, 0x3C, 0x02, 0x47, 0x06, 0xA3,  // H..<.G..
                /* 0198 */  0x20, 0x1E, 0xBF, 0xE3, 0x40, 0xC8, 0xC9, 0x51,  //  ...@..Q
                /* 01A0 */  0x00, 0x35, 0x3A, 0xDF, 0x04, 0x3C, 0xAE, 0x53,  // .5:..<.S
                /* 01A8 */  0x3A, 0x8C, 0x03, 0x39, 0x8B, 0x28, 0xAF, 0x0C,  // :..9.(..
                /* 01B0 */  0x26, 0x30, 0xCE, 0x23, 0x03, 0xAC, 0x11, 0x1E,  // &0.#....
                /* 01B8 */  0xCE, 0xD9, 0x79, 0x22, 0x86, 0x33, 0xA4, 0xE1,  // ..y".3..
                /* 01C0 */  0xF8, 0x55, 0xE0, 0x8D, 0x22, 0x01, 0x3F, 0x12,  // .U..".?.
                /* 01C8 */  0xC0, 0xBF, 0x6E, 0xF8, 0x40, 0x70, 0x0A, 0x8F,  // ..n.@p..
                /* 01D0 */  0x1A, 0x6F, 0x19, 0x09, 0x2C, 0xF0, 0x48, 0x00,  // .o..,.H.
                /* 01D8 */  0x0A, 0x20, 0x5F, 0x02, 0xAC, 0xF4, 0x20, 0x40,  // . _... @
                /* 01E0 */  0xE7, 0x10, 0x22, 0x4C, 0x34, 0x13, 0xFC, 0xFF,  // .."L4...
                /* 01E8 */  0xC3, 0x73, 0xC1, 0x63, 0xA5, 0xB2, 0xC6, 0x85,  // .s.c....
                /* 01F0 */  0x1A, 0xAA, 0x4F, 0x07, 0x0C, 0xFB, 0x1D, 0xC0,  // ..O.....
                /* 01F8 */  0xA2, 0x67, 0xA8, 0x1B, 0xC1, 0x41, 0xBD, 0x3D,  // .g...A.=
                /* 0200 */  0x58, 0xA2, 0x53, 0xA9, 0x4E, 0x61, 0x3D, 0x52,  // X.S.Na=R
                /* 0208 */  0x0E, 0x6B, 0xB4, 0xB0, 0x07, 0xFC, 0xE4, 0xE0,  // .k......
                /* 0210 */  0x5B, 0x87, 0x67, 0x66, 0x8C, 0xB0, 0x1E, 0xAD,  // [.gf....
                /* 0218 */  0x15, 0xDA, 0xF4, 0xA9, 0xD1, 0xA8, 0x55, 0x83,  // ......U.
                /* 0220 */  0x32, 0x35, 0xCA, 0x34, 0xA8, 0xD5, 0xA7, 0x52,  // 25.4...R
                /* 0228 */  0x63, 0xC6, 0x4E, 0x22, 0x8E, 0xF1, 0x12, 0xD0,  // c.N"....
                /* 0230 */  0x58, 0x2C, 0x62, 0x39, 0x02, 0xB1, 0x74, 0x0A,  // X,b9..t.
                /* 0238 */  0x19, 0x01, 0x51, 0x10, 0x10, 0x01, 0xF9, 0xFF,  // ..Q.....
                /* 0240 */  0x0F                                             // .
            })
        }
    }

    Scope (_SB)
    {
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {4,5,7,10,11,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Name (PD13, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR13, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x21
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x23
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x20
            }
        })
        Name (PD14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKE, 
                Zero
            }
        })
        Name (AR14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x24
            }
        })
        Name (PD30, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR30, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x28
            }
        })
        Name (PD31, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKE, 
                Zero
            }
        })
        Name (AR31, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2F
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2C
            }
        })
        Name (PD00, Package (0x14)
        {
            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x03, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                LNKB, 
                Zero
            }
        })
        Name (AR00, Package (0x14)
        {
            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x23
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                One, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                0x02, 
                Zero, 
                0x23
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                One, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x02, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                0x03, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                Zero, 
                0x21
            }
        })
        Name (PG26, Package (0x00) {})
        Name (AG26, Package (0x00) {})
        Name (PG27, Package (0x00) {})
        Name (AG27, Package (0x00) {})
        Name (PD01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x18
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x19
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1B
            }
        })
        Name (PD03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x21
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x23
            }
        })
        Name (PD04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x27
            }
        })
        Name (PD05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2B
            }
        })
        Name (PD06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2F
            }
        })
        Name (PD07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x30
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x31
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x32
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x33
            }
        })
        Name (PD08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x35
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x37
            }
        })
        Name (PD09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x37
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x35
            }
        })
        Name (PD0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x32
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x33
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x30
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x31
            }
        })
        Name (PD0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2F
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2D
            }
        })
        Name (PD0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x29
            }
        })
        Name (PD0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x27
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x25
            }
        })
        Name (PD0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x23
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x21
            }
        })
        Name (PD0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1F
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1D
            }
        })
        Name (PD10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x18
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x19
            }
        })
        Name (PD11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x19
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1B
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x18
            }
        })
        Name (PD02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x1C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x1D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1F
            }
        })
        Name (PG46, Package (0x00) {})
        Name (AG46, Package (0x00) {})
        Name (PG47, Package (0x00) {})
        Name (AG47, Package (0x00) {})
        Name (PG48, Package (0x00) {})
        Name (AG48, Package (0x00) {})
    }

    Scope (_SB)
    {
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00) /* \_SB_.AR00 */
                }

                Return (PD00) /* \_SB_.PD00 */
            }

            Device (AMDN)
            {
                Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                Name (_UID, 0xC8)  // _UID: Unique ID
                Name (_STA, 0x0F)  // _STA: Status
                Name (NPTR, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y00)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (NPTR, \_SB.PCI0.AMDN._Y00._LEN, PL)  // _LEN: Length
                    CreateDWordField (NPTR, \_SB.PCI0.AMDN._Y00._BAS, PB)  // _BAS: Base Address
                    PB = PEBS /* \PEBS */
                    PL = PEBL /* \PEBL */
                    Return (NPTR) /* \_SB_.PCI0.AMDN.NPTR */
                }
            }

            Method (NPTS, 1, NotSerialized)
            {
                APTS (Arg0)
            }

            Method (NWAK, 1, NotSerialized)
            {
                AWAK (Arg0)
            }

            Name (CPRB, One)
            Name (LVGA, 0x01)
            Name (STAV, 0x0F)
            Name (BRB, 0x0000)
            Name (BRL, 0x0100)
            Name (IOB, 0x1000)
            Name (IOL, 0xF000)
            Name (MBB, 0xD0000000)
            Name (MBL, 0x30000000)
            Name (MAB, 0x0000000000000000)
            Name (MAL, 0x0000000000000000)
            Name (MAM, 0x0000000000000000)
            Name (CRS1, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x007F,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0080,             // Length
                    ,, _Y01)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x03AF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x03B0,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03E0,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0918,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y03, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0x0FFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0300,             // Length
                    ,, _Y02, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x02000000,         // Range Minimum
                    0xFFDFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFDE00000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x02000000,         // Range Minimum
                    0xFFDFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFDE00000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
            })
            Name (CRS2, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0080,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0080,             // Length
                    ,, _Y08)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y0A, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y09, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x80000000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x80000000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (STAV) /* \_SB_.PCI0.STAV */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (CPRB)
                {
                    CreateWordField (CRS1, \_SB.PCI0._Y01._MIN, MIN0)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y01._MAX, MAX0)  // _MAX: Maximum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y01._LEN, LEN0)  // _LEN: Length
                    MIN0 = BRB /* \_SB_.PCI0.BRB_ */
                    LEN0 = BRL /* \_SB_.PCI0.BRL_ */
                    Local0 = LEN0 /* \_SB_.PCI0._CRS.LEN0 */
                    MAX0 = (MIN0 + Local0--)
                    CreateWordField (CRS1, \_SB.PCI0._Y02._MIN, MIN1)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y02._MAX, MAX1)  // _MAX: Maximum Base Address
                    CreateWordField (CRS1, \_SB.PCI0._Y02._LEN, LEN1)  // _LEN: Length
                    If ((IOB == 0x1000))
                    {
                        Local0 = IOL /* \_SB_.PCI0.IOL_ */
                        MAX1 = (IOB + Local0--)
                        Local0 = (MAX1 - MIN1) /* \_SB_.PCI0._CRS.MIN1 */
                        LEN1 = (Local0 + One)
                    }
                    Else
                    {
                        MIN1 = IOB /* \_SB_.PCI0.IOB_ */
                        LEN1 = IOL /* \_SB_.PCI0.IOL_ */
                        Local0 = LEN1 /* \_SB_.PCI0._CRS.LEN1 */
                        MAX1 = (MIN1 + Local0--)
                    }

                    If (((LVGA == One) || (LVGA == 0x55)))
                    {
                        If (VGAF)
                        {
                            CreateWordField (CRS1, \_SB.PCI0._Y03._MIN, IMN1)  // _MIN: Minimum Base Address
                            CreateWordField (CRS1, \_SB.PCI0._Y03._MAX, IMX1)  // _MAX: Maximum Base Address
                            CreateWordField (CRS1, \_SB.PCI0._Y03._LEN, ILN1)  // _LEN: Length
                            IMN1 = 0x03B0
                            IMX1 = 0x03DF
                            ILN1 = 0x30
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._MIN, VMN1)  // _MIN: Minimum Base Address
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._MAX, VMX1)  // _MAX: Maximum Base Address
                            CreateDWordField (CRS1, \_SB.PCI0._Y04._LEN, VLN1)  // _LEN: Length
                            VMN1 = 0x000A0000
                            VMX1 = 0x000BFFFF
                            VLN1 = 0x00020000
                            VGAF = Zero
                        }
                    }

                    CreateDWordField (CRS1, \_SB.PCI0._Y05._MIN, MIN3)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y05._MAX, MAX3)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y05._LEN, LEN3)  // _LEN: Length
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._MIN, MIN7)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._MAX, MAX7)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS1, \_SB.PCI0._Y06._LEN, LEN7)  // _LEN: Length
                    Local0 = (MBB + MBL) /* \_SB_.PCI0.MBL_ */
                    If ((Local0 < NBTP))
                    {
                        MIN3 = MBB /* \_SB_.PCI0.MBB_ */
                        LEN3 = MBL /* \_SB_.PCI0.MBL_ */
                        Local0 = LEN3 /* \_SB_.PCI0._CRS.LEN3 */
                        MAX3 = (MIN3 + Local0--)
                        MIN7 = Zero
                        MAX7 = Zero
                        LEN7 = Zero
                    }
                    Else
                    {
                        MIN3 = MBB /* \_SB_.PCI0.MBB_ */
                        LEN3 = (NBTP - MBB)
                        Local0 = LEN3 /* \_SB_.PCI0._CRS.LEN3 */
                        MAX3 = (MIN3 + Local0--)
                        MIN7 = 0xFEE00000
                        Local0 = (0xFEE00000 - NBTP)
                        LEN7 = (MBL - Local0)
                        LEN7 = (LEN7 - LEN3)
                        Local0 = LEN7 /* \_SB_.PCI0._CRS.LEN7 */
                        MAX7 = (MIN7 + Local0--)
                    }

                    If (MAL)
                    {
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._MIN, MN8)  // _MIN: Minimum Base Address
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._MAX, MX8)  // _MAX: Maximum Base Address
                        CreateQWordField (CRS1, \_SB.PCI0._Y07._LEN, LN8)  // _LEN: Length
                        MN8 = MAB /* \_SB_.PCI0.MAB_ */
                        LN8 = MAL /* \_SB_.PCI0.MAL_ */
                        MX8 = MAM /* \_SB_.PCI0.MAM_ */
                    }

                    Return (CRS1) /* \_SB_.PCI0.CRS1 */
                }
                Else
                {
                    CreateWordField (CRS2, \_SB.PCI0._Y08._MIN, MIN2)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y08._MAX, MAX2)  // _MAX: Maximum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y08._LEN, LEN2)  // _LEN: Length
                    MIN2 = BRB /* \_SB_.PCI0.BRB_ */
                    LEN2 = BRL /* \_SB_.PCI0.BRL_ */
                    Local1 = LEN2 /* \_SB_.PCI0._CRS.LEN2 */
                    MAX2 = (MIN2 + Local1--)
                    CreateWordField (CRS2, \_SB.PCI0._Y09._MIN, MIN4)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y09._MAX, MAX4)  // _MAX: Maximum Base Address
                    CreateWordField (CRS2, \_SB.PCI0._Y09._LEN, LEN4)  // _LEN: Length
                    MIN4 = IOB /* \_SB_.PCI0.IOB_ */
                    LEN4 = IOL /* \_SB_.PCI0.IOL_ */
                    Local1 = LEN4 /* \_SB_.PCI0._CRS.LEN4 */
                    MAX4 = (MIN4 + Local1--)
                    If (LVGA)
                    {
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._MIN, IMN2)  // _MIN: Minimum Base Address
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._MAX, IMX2)  // _MAX: Maximum Base Address
                        CreateWordField (CRS2, \_SB.PCI0._Y0A._LEN, ILN2)  // _LEN: Length
                        IMN2 = 0x03B0
                        IMX2 = 0x03DF
                        ILN2 = 0x30
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._MIN, VMN2)  // _MIN: Minimum Base Address
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._MAX, VMX2)  // _MAX: Maximum Base Address
                        CreateDWordField (CRS2, \_SB.PCI0._Y0B._LEN, VLN2)  // _LEN: Length
                        VMN2 = 0x000A0000
                        VMX2 = 0x000BFFFF
                        VLN2 = 0x00020000
                    }

                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._MIN, MIN5)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._MAX, MAX5)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0C._LEN, LEN5)  // _LEN: Length
                    MIN5 = MBB /* \_SB_.PCI0.MBB_ */
                    LEN5 = (NBTP - MBB)
                    Local1 = LEN5 /* \_SB_.PCI0._CRS.LEN5 */
                    MAX5 = (MIN5 + Local1--)
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._MIN, MIN6)  // _MIN: Minimum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._MAX, MAX6)  // _MAX: Maximum Base Address
                    CreateDWordField (CRS2, \_SB.PCI0._Y0D._LEN, LEN6)  // _LEN: Length
                    MIN6 = (NBTP + NBTS) /* \NBTS */
                    LEN6 = (MBL - NBTS)
                    LEN6 = (LEN6 - LEN5)
                    Local0 = LEN6 /* \_SB_.PCI0._CRS.LEN6 */
                    MAX6 = (MIN6 + Local0--)
                    If (MAL)
                    {
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._MIN, MN9)  // _MIN: Minimum Base Address
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._MAX, MX9)  // _MAX: Maximum Base Address
                        CreateQWordField (CRS2, \_SB.PCI0._Y0E._LEN, LN9)  // _LEN: Length
                        MN9 = MAB /* \_SB_.PCI0.MAB_ */
                        LN9 = MAL /* \_SB_.PCI0.MAL_ */
                        MX9 = MAM /* \_SB_.PCI0.MAM_ */
                    }

                    Return (CRS2) /* \_SB_.PCI0.CRS2 */
                }
            }

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Name (SUPP, Zero)
                Name (CTRL, Zero)
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    If (!PEHP)
                    {
                        CTRL &= 0x1E
                    }

                    If (!SHPC)
                    {
                        CTRL &= 0x1D
                    }

                    If (!PEPM)
                    {
                        CTRL &= 0x1B
                    }

                    If (!PEER)
                    {
                        CTRL &= 0x15
                    }

                    If (!PECS)
                    {
                        CTRL &= 0x0F
                    }

                    If ((!SRIO && !CNSB))
                    {
                        CTRL &= 0x1A
                    }

                    If ((SHPC == One))
                    {
                        CTRL |= 0x1D
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0._OSC.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            OperationRegion (NAPC, PCI_Config, 0xB8, 0x08)
            Field (NAPC, DWordAcc, NoLock, Preserve)
            {
                NAPX,   32, 
                NAPD,   32
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                NAPX = 0x14600000
                Local0 = NAPD /* \_SB_.PCI0.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                Release (NAPM)
            }

            Method (GPTS, 1, NotSerialized)
            {
            }

            Method (GWAK, 1, NotSerialized)
            {
                If (PICM)
                {
                    NAPE ()
                }
            }

            Device (IOMA)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x15)  // _UID: Unique ID
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadOnly,
                        0xFEB80000,         // Address Base
                        0x00080000,         // Address Length
                        )
                })
            }

            Device (D002)
            {
                Name (_ADR, Zero)  // _ADR: Address
            }

            Device (GP12)
            {
                Name (_ADR, 0x00070001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x19, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR13) /* \_SB_.AR13 */
                    }

                    Return (PD13) /* \_SB_.PD13 */
                }

                Device (D012)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (GP13)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x19, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR14) /* \_SB_.AR14 */
                    }

                    Return (PD14) /* \_SB_.PD14 */
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                }

                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                }

                Device (APSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (PSPB, 0xFD200000)
                    Name (_STA, 0x0F)  // _STA: Status
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y0F)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.GP13.APSP._Y0F._BAS, PBAS)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.GP13.APSP._Y0F._LEN, PLEN)  // _LEN: Length
                        PBAS = PSPB /* \_SB_.PCI0.GP13.APSP.PSPB */
                        PLEN = 0x00100000
                        Return (CRS) /* \_SB_.PCI0.GP13.APSP.CRS_ */
                    }
                }
            }

            Device (GP30)
            {
                Name (_ADR, 0x00080002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x19, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR30) /* \_SB_.AR30 */
                    }

                    Return (PD30) /* \_SB_.PD30 */
                }

                Device (SATA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (GP31)
            {
                Name (_ADR, 0x00080003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x19, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR31) /* \_SB_.AR31 */
                    }

                    Return (PD31) /* \_SB_.PD31 */
                }

                Device (SAT1)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (D019)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
            }

            Device (SBRG)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (DMAD)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        DMA (Compatibility, BusMaster, Transfer8, )
                            {4}
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0087,             // Range Minimum
                            0x0087,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0089,             // Range Minimum
                            0x0089,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x008F,             // Range Minimum
                            0x008F,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x00,               // Alignment
                            0x20,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x00,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                }

                Device (RTC0)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.SBRG.RTC0.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.SBRG.RTC0.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                OperationRegion (SMI0, SystemIO, SMIO, One)
                Field (SMI0, ByteAcc, NoLock, Preserve)
                {
                    SMIC,   8
                }

                Scope (\_SB)
                {
                    Scope (PCI0)
                    {
                        Device (S900)
                        {
                            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                            Name (_UID, 0x0700)  // _UID: Unique ID
                            Name (_STA, 0x0F)  // _STA: Status
                            Name (CRS, ResourceTemplate ()
                            {
                                IO (Decode16,
                                    0x0010,             // Range Minimum
                                    0x0010,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0022,             // Range Minimum
                                    0x0022,             // Range Maximum
                                    0x00,               // Alignment
                                    0x1E,               // Length
                                    )
                                IO (Decode16,
                                    0x0063,             // Range Minimum
                                    0x0063,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0065,             // Range Minimum
                                    0x0065,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0067,             // Range Minimum
                                    0x0067,             // Range Maximum
                                    0x00,               // Alignment
                                    0x09,               // Length
                                    )
                                IO (Decode16,
                                    0x0072,             // Range Minimum
                                    0x0072,             // Range Maximum
                                    0x00,               // Alignment
                                    0x0E,               // Length
                                    )
                                IO (Decode16,
                                    0x0080,             // Range Minimum
                                    0x0080,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0084,             // Range Minimum
                                    0x0084,             // Range Maximum
                                    0x00,               // Alignment
                                    0x03,               // Length
                                    )
                                IO (Decode16,
                                    0x0088,             // Range Minimum
                                    0x0088,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x008C,             // Range Minimum
                                    0x008C,             // Range Maximum
                                    0x00,               // Alignment
                                    0x03,               // Length
                                    )
                                IO (Decode16,
                                    0x0090,             // Range Minimum
                                    0x0090,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x00A2,             // Range Minimum
                                    0x00A2,             // Range Maximum
                                    0x00,               // Alignment
                                    0x1E,               // Length
                                    )
                                IO (Decode16,
                                    0x00B1,             // Range Minimum
                                    0x00B1,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x00E0,             // Range Minimum
                                    0x00E0,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x04D0,             // Range Minimum
                                    0x04D0,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x040B,             // Range Minimum
                                    0x040B,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x04D6,             // Range Minimum
                                    0x04D6,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C00,             // Range Minimum
                                    0x0C00,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x0C14,             // Range Minimum
                                    0x0C14,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C50,             // Range Minimum
                                    0x0C50,             // Range Maximum
                                    0x00,               // Alignment
                                    0x02,               // Length
                                    )
                                IO (Decode16,
                                    0x0C52,             // Range Minimum
                                    0x0C52,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C6C,             // Range Minimum
                                    0x0C6C,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0C6F,             // Range Minimum
                                    0x0C6F,             // Range Maximum
                                    0x00,               // Alignment
                                    0x01,               // Length
                                    )
                                IO (Decode16,
                                    0x0CD8,             // Range Minimum
                                    0x0CD8,             // Range Maximum
                                    0x00,               // Alignment
                                    0x08,               // Length
                                    )
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y10)
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y12)
                                IO (Decode16,
                                    0x0000,             // Range Minimum
                                    0x0000,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    _Y11)
                                IO (Decode16,
                                    0x0900,             // Range Minimum
                                    0x0900,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0910,             // Range Minimum
                                    0x0910,             // Range Maximum
                                    0x00,               // Alignment
                                    0x10,               // Length
                                    )
                                IO (Decode16,
                                    0x0060,             // Range Minimum
                                    0x0060,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    )
                                IO (Decode16,
                                    0x0064,             // Range Minimum
                                    0x0064,             // Range Maximum
                                    0x00,               // Alignment
                                    0x00,               // Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y13)
                                Memory32Fixed (ReadWrite,
                                    0xFEC01000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFEDC0000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFEE00000,         // Address Base
                                    0x00001000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0xFED80000,         // Address Base
                                    0x00010000,         // Address Length
                                    )
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y14)
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y15)
                                Memory32Fixed (ReadWrite,
                                    0x00000000,         // Address Base
                                    0x00000000,         // Address Length
                                    _Y16)
                            })
                            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                            {
                                CreateWordField (CRS, \_SB.PCI0.S900._Y10._MIN, PBB)  // _MIN: Minimum Base Address
                                CreateWordField (CRS, \_SB.PCI0.S900._Y10._MAX, PBH)  // _MAX: Maximum Base Address
                                CreateByteField (CRS, \_SB.PCI0.S900._Y10._LEN, PML)  // _LEN: Length
                                PBB = PMBS /* \PMBS */
                                PBH = PMBS /* \PMBS */
                                PML = PMLN /* \PMLN */
                                If (SMBB)
                                {
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y11._MIN, SMB1)  // _MIN: Minimum Base Address
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y11._MAX, SMH1)  // _MAX: Maximum Base Address
                                    CreateByteField (CRS, \_SB.PCI0.S900._Y11._LEN, SML1)  // _LEN: Length
                                    SMB1 = SMBB /* \SMBB */
                                    SMH1 = SMBB /* \SMBB */
                                    SML1 = SMBL /* \SMBL */
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y12._MIN, SMBZ)  // _MIN: Minimum Base Address
                                    CreateWordField (CRS, \_SB.PCI0.S900._Y12._MAX, SMH0)  // _MAX: Maximum Base Address
                                    CreateByteField (CRS, \_SB.PCI0.S900._Y12._LEN, SML0)  // _LEN: Length
                                    SMBZ = SMB0 /* \SMB0 */
                                    SMH0 = SMB0 /* \SMB0 */
                                    SML0 = SMBM /* \SMBM */
                                }

                                If (APCB)
                                {
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y13._BAS, APB)  // _BAS: Base Address
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y13._LEN, APL)  // _LEN: Length
                                    APB = APCB /* \APCB */
                                    APL = APCL /* \APCL */
                                }

                                CreateDWordField (CRS, \_SB.PCI0.S900._Y14._BAS, SPIB)  // _BAS: Base Address
                                CreateDWordField (CRS, \_SB.PCI0.S900._Y14._LEN, SPIL)  // _LEN: Length
                                SPIB = 0xFEC10000
                                SPIL = 0x1000
                                If (WDTB)
                                {
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y15._BAS, WDTB)  // _BAS: Base Address
                                    CreateDWordField (CRS, \_SB.PCI0.S900._Y15._LEN, WDTL)  // _LEN: Length
                                    WDTB = \WDTB
                                    WDTL = \WDTL
                                }

                                CreateDWordField (CRS, \_SB.PCI0.S900._Y16._BAS, ROMB)  // _BAS: Base Address
                                CreateDWordField (CRS, \_SB.PCI0.S900._Y16._LEN, ROML)  // _LEN: Length
                                ROMB = 0xFF000000
                                ROML = 0x01000000
                                Return (CRS) /* \_SB_.PCI0.S900.CRS_ */
                            }
                        }
                    }
                }

                Scope (\_SB)
                {
                    Scope (PCI0)
                    {
                        Scope (SBRG)
                        {
                            Method (RRIO, 4, NotSerialized)
                            {
                                Debug = "RRIO"
                            }

                            Method (RDMA, 3, NotSerialized)
                            {
                                Debug = "rDMA"
                            }
                        }
                    }
                }

                Device (SIO1)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y17)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y18)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y19)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1A)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1B)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (((SP1O < 0x03F0) && (SP1O > 0xF0)))
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._MIN, GPI0)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._MAX, GPI1)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y17._LEN, GPIL)  // _LEN: Length
                            GPI0 = SP1O /* \SP1O */
                            GPI1 = SP1O /* \SP1O */
                            GPIL = 0x02
                        }

                        If (IO1B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y18._LEN, GPL1)  // _LEN: Length
                            GP10 = IO1B /* \IO1B */
                            GP11 = IO1B /* \IO1B */
                            GPL1 = IO1L /* \IO1L */
                        }

                        If (IO2B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._MIN, GP20)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._MAX, GP21)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y19._LEN, GPL2)  // _LEN: Length
                            GP20 = IO2B /* \IO2B */
                            GP21 = IO2B /* \IO2B */
                            GPL2 = IO2L /* \IO2L */
                        }

                        If (IO3B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._MIN, GP30)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._MAX, GP31)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y1A._LEN, GPL3)  // _LEN: Length
                            GP30 = IO3B /* \IO3B */
                            GP31 = IO3B /* \IO3B */
                            GPL3 = IO3L /* \IO3L */
                        }

                        If (IO4B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._MIN, GP40)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._MAX, GP41)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO1._Y1B._LEN, GPL4)  // _LEN: Length
                            GP40 = IO4B /* \IO4B */
                            GP41 = IO4B /* \IO4B */
                            GPL4 = IO4L /* \IO4L */
                        }

                        Return (CRS) /* \_SB_.PCI0.SBRG.SIO1.CRS_ */
                    }

                    Name (DCAT, Package (0x15)
                    {
                        0x02, 
                        0x03, 
                        One, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0x06, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF
                    })
                    Mutex (MUT0, 0x00)
                    Method (ENFG, 1, NotSerialized)
                    {
                        Acquire (MUT0, 0x0FFF)
                        INDX = ENTK /* \ENTK */
                        INDX = ENTK /* \ENTK */
                        LDN = Arg0
                    }

                    Method (EXFG, 0, NotSerialized)
                    {
                        INDX = EXTK /* \EXTK */
                        Release (MUT0)
                    }

                    Method (LPTM, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT0 & 0x02)
                        EXFG ()
                        Return (Local0)
                    }

                    Method (UHID, 1, NotSerialized)
                    {
                        Return (0x0105D041)
                    }

                    OperationRegion (IOID, SystemIO, SP1O, 0x02)
                    Field (IOID, ByteAcc, NoLock, Preserve)
                    {
                        INDX,   8, 
                        DATA,   8
                    }

                    IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x07), 
                        LDN,    8, 
                        Offset (0x21), 
                        SCF1,   8, 
                        SCF2,   8, 
                        SCF3,   8, 
                        SCF4,   8, 
                        SCF5,   8, 
                        SCF6,   8, 
                        Offset (0x2C), 
                        CR2C,   8, 
                        CR2D,   8, 
                        Offset (0x30), 
                        ACTR,   8, 
                        Offset (0x60), 
                        IOAH,   8, 
                        IOAL,   8, 
                        IOH2,   8, 
                        IOL2,   8, 
                        Offset (0x70), 
                        INTR,   4, 
                        INTT,   4, 
                        Offset (0x74), 
                        DMCH,   8, 
                        Offset (0xE0), 
                        RGE0,   8, 
                        RGE1,   8, 
                        RGE2,   8, 
                        RGE3,   8, 
                        RGE4,   8, 
                        RGE5,   8, 
                        RGE6,   8, 
                        RGE7,   8, 
                        RGE8,   8, 
                        RGE9,   8, 
                        Offset (0xF0), 
                        OPT0,   8, 
                        OPT1,   8, 
                        OPT2,   8, 
                        OPT3,   8, 
                        OPT4,   8, 
                        OPT5,   8, 
                        OPT6,   8, 
                        OPT7,   8, 
                        OPT8,   8, 
                        OPT9,   8
                    }

                    Method (CGLD, 1, NotSerialized)
                    {
                        Return (DerefOf (DCAT [Arg0]))
                    }

                    Method (DSTA, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = ACTR /* \_SB_.PCI0.SBRG.SIO1.ACTR */
                        Local1 = ((IOAH << 0x08) | IOAL) /* \_SB_.PCI0.SBRG.SIO1.IOAL */
                        EXFG ()
                        If ((Local0 == 0xFF))
                        {
                            Return (Zero)
                        }

                        Local0 &= One
                        If ((Arg0 < 0x10))
                        {
                            IOST |= (Local0 << Arg0)
                        }

                        If (Local0)
                        {
                            Return (0x0F)
                        }
                        ElseIf ((Arg0 < 0x10))
                        {
                            If (((One << Arg0) & IOST))
                            {
                                Return (0x0D)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            If (Local1)
                            {
                                Return (0x0D)
                            }

                            Return (Zero)
                        }
                    }

                    Method (DCNT, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        If (((DMCH < 0x04) && ((Local1 = (DMCH & 0x03)) != Zero)))
                        {
                            RDMA (Arg0, Arg1, Local1++)
                        }

                        ACTR = Arg1
                        Local1 = (IOAH << 0x08)
                        Local1 |= IOAL
                        RRIO (Arg0, Arg1, Local1, 0x08)
                        EXFG ()
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y1E)
                        IRQNoFlags (_Y1C)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y1D)
                            {}
                    })
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1C._INT, IRQM)  // _INT: Interrupts
                    CreateByteField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1D._DMA, DMAM)  // _DMA: Direct Memory Access
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._MIN, IO11)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._MAX, IO12)  // _MAX: Maximum Base Address
                    CreateByteField (CRS1, \_SB.PCI0.SBRG.SIO1._Y1E._LEN, LEN1)  // _LEN: Length
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y21)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y22)
                        IRQNoFlags (_Y1F)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y20)
                            {}
                    })
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y1F._INT, IRQE)  // _INT: Interrupts
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y20._DMA, DMAE)  // _DMA: Direct Memory Access
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._MIN, IO21)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._MAX, IO22)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y21._LEN, LEN2)  // _LEN: Length
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._MIN, IO31)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._MAX, IO32)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.SBRG.SIO1._Y22._LEN, LEN3)  // _LEN: Length
                    Name (CRS3, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y25)
                        IRQ (Edge, ActiveLow, Shared, _Y23)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y24)
                            {}
                    })
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y23._INT, IRQT)  // _INT: Interrupts
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y23._HE, IRQS)  // _HE_: High-Edge
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y24._DMA, DMAT)  // _DMA: Direct Memory Access
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._MIN, IO41)  // _MIN: Minimum Base Address
                    CreateWordField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._MAX, IO42)  // _MAX: Maximum Base Address
                    CreateByteField (CRS3, \_SB.PCI0.SBRG.SIO1._Y25._LEN, LEN4)  // _LEN: Length
                    Method (DCRS, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO11 = (IOAH << 0x08)
                        IO11 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO11 */
                        IO12 = IO11 /* \_SB_.PCI0.SBRG.SIO1.IO11 */
                        LEN1 = 0x08
                        If (INTR)
                        {
                            IRQM = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQM = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAM = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAM = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS1) /* \_SB_.PCI0.SBRG.SIO1.CRS1 */
                    }

                    Method (DCR2, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO21 = (IOAH << 0x08)
                        IO21 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO21 */
                        IO22 = IO21 /* \_SB_.PCI0.SBRG.SIO1.IO21 */
                        LEN2 = 0x08
                        IO31 = (IOH2 << 0x08)
                        IO31 |= IOL2 /* \_SB_.PCI0.SBRG.SIO1.IO31 */
                        IO32 = IO31 /* \_SB_.PCI0.SBRG.SIO1.IO31 */
                        LEN3 = 0x08
                        If (INTR)
                        {
                            IRQE = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQE = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAE = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAE = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS2) /* \_SB_.PCI0.SBRG.SIO1.CRS2 */
                    }

                    Method (DCR3, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO41 = (IOAH << 0x08)
                        IO41 |= IOAL /* \_SB_.PCI0.SBRG.SIO1.IO41 */
                        IO42 = IO41 /* \_SB_.PCI0.SBRG.SIO1.IO41 */
                        LEN4 = 0x08
                        If (INTR)
                        {
                            IRQT = (One << INTR) /* \_SB_.PCI0.SBRG.SIO1.INTR */
                        }
                        Else
                        {
                            IRQT = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAT = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAT = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS3) /* \_SB_.PCI0.SBRG.SIO1.CRS3 */
                    }

                    Method (DSRS, 2, NotSerialized)
                    {
                        If (((Arg1 == 0x02) & LPTM (Arg1)))
                        {
                            DSR2 (Arg0, Arg1)
                        }
                        Else
                        {
                            CreateWordField (Arg0, 0x09, IRQM)
                            CreateByteField (Arg0, 0x0C, DMAM)
                            CreateWordField (Arg0, 0x02, IO11)
                            ENFG (CGLD (Arg1))
                            IOAL = (IO11 & 0xFF)
                            IOAH = (IO11 >> 0x08)
                            If (IRQM)
                            {
                                FindSetRightBit (IRQM, Local0)
                                INTR = (Local0 - One)
                            }
                            Else
                            {
                                INTR = Zero
                            }

                            If (DMAM)
                            {
                                FindSetRightBit (DMAM, Local0)
                                DMCH = (Local0 - One)
                            }
                            Else
                            {
                                DMCH = 0x04
                            }

                            EXFG ()
                            DCNT (Arg1, One)
                            Local2 = Arg1
                            If ((Local2 > Zero))
                            {
                                Local2 -= One
                            }
                        }
                    }

                    Method (DSR2, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x11, IRQE)
                        CreateByteField (Arg0, 0x14, DMAE)
                        CreateWordField (Arg0, 0x02, IO21)
                        CreateWordField (Arg0, 0x0A, IO31)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO21 & 0xFF)
                        IOAH = (IO21 >> 0x08)
                        IOL2 = (IO31 & 0xFF)
                        IOH2 = (IO31 >> 0x08)
                        If (IRQE)
                        {
                            FindSetRightBit (IRQE, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAE)
                        {
                            FindSetRightBit (DMAE, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                        Local2 = Arg1
                        If ((Local2 > Zero))
                        {
                            Local2 -= One
                        }
                    }

                    Method (DSR3, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x02, IO41)
                        CreateWordField (Arg0, 0x09, IRQT)
                        CreateByteField (Arg0, 0x0B, IRQS)
                        CreateByteField (Arg0, 0x0D, DMAT)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO41 & 0xFF)
                        IOAH = (IO41 >> 0x08)
                        If (IRQT)
                        {
                            FindSetRightBit (IRQT, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAT)
                        {
                            FindSetRightBit (DMAT, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                        Local2 = Arg1
                        If ((Local2 > Zero))
                        {
                            Local2 -= One
                        }
                    }

                    Name (PMFG, Zero)
                    Method (SIOS, 1, NotSerialized)
                    {
                        Debug = "SIOS"
                        If ((0x05 != Arg0))
                        {
                            ENFG (0x0A)
                            If ((Arg0 == One))
                            {
                                OPT6 = Zero
                                OPT7 = Zero
                                If (KBFG)
                                {
                                    OPT6 |= 0x10
                                }
                                Else
                                {
                                    OPT6 &= 0xEF
                                }

                                If (MSFG)
                                {
                                    OPT6 |= 0x20
                                }
                                Else
                                {
                                    OPT6 &= 0xDF
                                }

                                OPT3 = 0xFF
                                OPT4 = 0xFF
                                Local0 = (One | OPT2) /* \_SB_.PCI0.SBRG.SIO1.OPT2 */
                                OPT2 = Local0
                            }

                            If ((Arg0 >= 0x03))
                            {
                                RGE0 &= 0x9F
                                Local0 = RGE3 /* \_SB_.PCI0.SBRG.SIO1.RGE3 */
                                Sleep (0xC8)
                                If (KBFG)
                                {
                                    RGE0 |= 0x41
                                }
                                Else
                                {
                                    RGE0 &= 0xBE
                                }

                                If (MSFG)
                                {
                                    RGE6 &= 0x7F
                                    RGE0 |= 0x22
                                }
                                Else
                                {
                                    RGE0 &= 0xDD
                                }
                            }

                            EXFG ()
                        }
                    }

                    Method (SIOW, 1, NotSerialized)
                    {
                        Debug = "SIOW"
                        ENFG (0x0A)
                        OPT3 = 0xFF
                        OPT6 &= 0xCF
                        OPT2 &= 0xFE
                        RGE0 &= 0xBE
                        RGE0 &= 0xDD
                        EXFG ()
                    }

                    Method (SIOH, 0, NotSerialized)
                    {
                    }
                }

                Device (UAR1)
                {
                    Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x02)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (^^SIO1.DSTA (Zero))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        ^^SIO1.DCNT (Zero, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (^^SIO1.DCRS (Zero, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        ^^SIO1.DSRS (Arg0, Zero)
                    }

                    Name (_DDN, "COM1")  // _DDN: DOS Device Name
                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (PS2K)
                {
                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x0060,             // Range Minimum
                                0x0060,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IO (Decode16,
                                0x0064,             // Range Minimum
                                0x0064,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IRQNoFlags ()
                                {1}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        KBFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (KBFG, One)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x1D, 0x03))
                    }
                }

                Device (PS2M)
                {
                    Name (_HID, EisaId ("PNP0F03") /* Microsoft PS/2-style Mouse */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x4000))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {12}
                    })
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {12}
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (CRS1) /* \_SB_.PCI0.SBRG.PS2M.CRS1 */
                        }
                        Else
                        {
                            Return (CRS2) /* \_SB_.PCI0.SBRG.PS2M.CRS2 */
                        }
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        MSFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (MSFG, One)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x1D, 0x03))
                    }
                }

                Device (HHMD)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x0B)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (SGPI)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (LDN, 0x09)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (ACPI)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Name (LDN, 0x0A)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (SP80)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, 0x04)  // _UID: Unique ID
                    Name (LDN, 0x14)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (SFED)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, 0x05)  // _UID: Unique ID
                    Name (LDN, 0x15)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (DSLP)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, 0x06)  // _UID: Unique ID
                    Name (LDN, 0x16)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (SDIO)
            {
                Name (_ADR, 0x00140007)  // _ADR: Address
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR01) /* \_SB_.AR01 */
                    }

                    Return (PD01) /* \_SB_.PD01 */
                }

                Device (D003)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR03) /* \_SB_.AR03 */
                    }

                    Return (PD03) /* \_SB_.PD03 */
                }

                Device (D004)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00010004)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04) /* \_SB_.AR04 */
                    }

                    Return (PD04) /* \_SB_.PD04 */
                }

                Device (D005)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00010005)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR05) /* \_SB_.AR05 */
                    }

                    Return (PD05) /* \_SB_.PD05 */
                }

                Device (D006)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00010006)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR06) /* \_SB_.AR06 */
                    }

                    Return (PD06) /* \_SB_.PD06 */
                }

                Device (D007)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00010007)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR07) /* \_SB_.AR07 */
                    }

                    Return (PD07) /* \_SB_.PD07 */
                }

                Device (D008)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP7)
            {
                Name (_ADR, 0x00020001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR08) /* \_SB_.AR08 */
                    }

                    Return (PD08) /* \_SB_.PD08 */
                }

                Device (D009)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPP8)
            {
                Name (_ADR, 0x00030001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR09) /* \_SB_.AR09 */
                    }

                    Return (PD09) /* \_SB_.PD09 */
                }

                Device (X161)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x10, 0x04))
                    }
                }
            }

            Device (GPP9)
            {
                Name (_ADR, 0x00030002)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0A) /* \_SB_.AR0A */
                    }

                    Return (PD0A) /* \_SB_.PD0A */
                }

                Device (X162)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x10, 0x04))
                    }
                }
            }

            Device (GPPA)
            {
                Name (_ADR, 0x00030003)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0B) /* \_SB_.AR0B */
                    }

                    Return (PD0B) /* \_SB_.PD0B */
                }

                Device (D00A)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPB)
            {
                Name (_ADR, 0x00030004)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0C) /* \_SB_.AR0C */
                    }

                    Return (PD0C) /* \_SB_.PD0C */
                }

                Device (D00B)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPC)
            {
                Name (_ADR, 0x00030005)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0D) /* \_SB_.AR0D */
                    }

                    Return (PD0D) /* \_SB_.PD0D */
                }

                Device (D00C)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPD)
            {
                Name (_ADR, 0x00030006)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0E) /* \_SB_.AR0E */
                    }

                    Return (PD0E) /* \_SB_.PD0E */
                }

                Device (D00D)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPE)
            {
                Name (_ADR, 0x00030007)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0F) /* \_SB_.AR0F */
                    }

                    Return (PD0F) /* \_SB_.PD0F */
                }

                Device (D00E)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GPPF)
            {
                Name (_ADR, 0x00040001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR10) /* \_SB_.AR10 */
                    }

                    Return (PD10) /* \_SB_.PD10 */
                }

                Device (D00F)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GP10)
            {
                Name (_ADR, 0x00050001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR11) /* \_SB_.AR11 */
                    }

                    Return (PD11) /* \_SB_.PD11 */
                }

                Device (D010)
                {
                    Name (_ADR, 0xFF)  // _ADR: Address
                }
            }

            Device (GP11)
            {
                Name (_ADR, 0x00050002)  // _ADR: Address
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR02) /* \_SB_.AR02 */
                    }

                    Return (PD02) /* \_SB_.PD02 */
                }

                Device (PTXH)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x08, 0x04))
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (PDID, PCI_Config, Zero, 0x04)
                        Field (PDID, AnyAcc, NoLock, Preserve)
                        {
                            Offset (0x02), 
                            XDID,   16
                        }

                        Name (PT4, Package (0x16)
                        {
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x12, 
                            0x13, 
                            0x14, 
                            0x15, 
                            0x16, 
                            0x17
                        })
                        Name (PT2, Package (0x16)
                        {
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x12, 
                            0x13, 
                            0x14, 
                            0x15, 
                            0x16, 
                            0x17, 
                            0x18, 
                            0x19, 
                            0x1A, 
                            0x1B
                        })
                        Name (PT1, Package (0x16)
                        {
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x12, 
                            0x13, 
                            0x14, 
                            0x15, 
                            0x16, 
                            0x17, 
                            0x18, 
                            0x19, 
                            0x1A, 
                            0x1B, 
                            0x1C
                        })
                        Name (USBV, Package (0x16)
                        {
                            One, 
                            One, 
                            One, 
                            One, 
                            One, 
                            One, 
                            One, 
                            One, 
                            Zero, 
                            Zero, 
                            One, 
                            One, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero
                        })
                        Name (USBP, Package (0x16) {})
                        Name (PH1P, Package (0x04)
                        {
                            0x1F, 
                            0x20, 
                            0x21, 
                            0x22
                        })
                        Name (PH1V, Package (0x04)
                        {
                            One, 
                            One, 
                            One, 
                            One
                        })
                        Name (PH2P, Package (0x04)
                        {
                            0x23, 
                            0x24, 
                            0x25, 
                            0x26
                        })
                        Name (PH2V, Package (0x04)
                        {
                            One, 
                            One, 
                            One, 
                            Zero
                        })
                        Name (PH3P, Package (0x04)
                        {
                            0x27, 
                            0x28, 
                            0x29, 
                            0x2A
                        })
                        Name (PH3V, Package (0x04)
                        {
                            One, 
                            One, 
                            One, 
                            One
                        })
                        Method (UPGP, 0, Serialized)
                        {
                            Local0 = 0x16
                            If (((XDID == 0x43B9) || (XDID == 0x43D0)))
                            {
                                While (Local0)
                                {
                                    Local0--
                                    USBP [Local0] = DerefOf (PT4 [Local0])
                                }
                            }
                            ElseIf ((((XDID == 0x43BB) || (XDID == 0x43D5)) || (XDID == 
                                0x43EE)))
                            {
                                While (Local0)
                                {
                                    Local0--
                                    USBP [Local0] = DerefOf (PT2 [Local0])
                                }
                            }
                            ElseIf (((XDID == 0x43BC) || (XDID == 0x43EC)))
                            {
                                While (Local0)
                                {
                                    Local0--
                                    USBP [Local0] = DerefOf (PT1 [Local0])
                                }
                            }
                        }

                        Method (GPLD, 2, Serialized)
                        {
                            Name (PCKG, Package (0x01)
                            {
                                Buffer (0x14) {}
                            })
                            CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
                            REV = 0x02
                            CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
                            VISI = Arg0
                            CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
                            GPOS = Arg1
                            Return (PCKG) /* \_SB_.PCI0.GPP1.PTXH.RHUB.GPLD.PCKG */
                        }

                        Method (GUPC, 1, Serialized)
                        {
                            Name (PCKG, Package (0x04)
                            {
                                Zero, 
                                0xFF, 
                                Zero, 
                                Zero
                            })
                            PCKG [Zero] = Arg0
                            Return (PCKG) /* \_SB_.PCI0.GPP1.PTXH.RHUB.GUPC.PCKG */
                        }

                        Method (TUPC, 1, Serialized)
                        {
                            Name (PCKG, Package (0x04)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                Zero
                            })
                            PCKG [One] = Arg0
                            Return (PCKG) /* \_SB_.PCI0.GPP1.PTXH.RHUB.TUPC.PCKG */
                        }

                        Device (POT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x02]), DerefOf (USBP [0x02])))
                            }
                        }

                        Device (PO11)
                        {
                            Name (_ADR, 0x0B)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                Zero, 
                                0xFF, 
                                Zero, 
                                Zero
                            })
                            Device (HS11)
                            {
                                Name (_ADR, One)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x03, 
                                    Zero, 
                                    Zero
                                })
                                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLD (DerefOf (PH1V [Zero]), DerefOf (PH1P [Zero])))
                                }
                            }

                            Device (HS12)
                            {
                                Name (_ADR, 0x02)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x03, 
                                    Zero, 
                                    Zero
                                })
                                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLD (DerefOf (PH1V [One]), DerefOf (PH1P [One])))
                                }
                            }

                            Device (HS13)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x03, 
                                    Zero, 
                                    Zero
                                })
                                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLD (DerefOf (PH1V [0x02]), DerefOf (PH1P [0x02])))
                                }
                            }

                            Device (HS14)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x03, 
                                    Zero, 
                                    Zero
                                })
                                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLD (DerefOf (PH1V [0x03]), DerefOf (PH1P [0x03])))
                                }
                            }
                        }

                        Device (POT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x03]), DerefOf (USBP [0x03])))
                            }
                        }

                        Device (PO12)
                        {
                            Name (_ADR, 0x0C)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x0B]), DerefOf (USBP [0x0B])))
                            }
                        }

                        Device (POT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x04]), DerefOf (USBP [0x04])))
                            }
                        }

                        Device (PO13)
                        {
                            Name (_ADR, 0x0D)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x0C]), DerefOf (USBP [0x0C])))
                            }
                        }

                        Device (POT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (TUPC (0x0A))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x05]), DerefOf (USBP [0x05])))
                            }
                        }

                        Device (PO14)
                        {
                            Name (_ADR, 0x0E)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x0D]), DerefOf (USBP [0x0D])))
                            }
                        }

                        Device (POT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [Zero]), DerefOf (USBP [Zero])))
                            }
                        }

                        Device (POT9)
                        {
                            Name (_ADR, 0x09)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x08]), DerefOf (USBP [0x08])))
                            }
                        }

                        Device (POT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (TUPC (0x0A))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [One]), DerefOf (USBP [One])))
                            }
                        }

                        Device (PO10)
                        {
                            Name (_ADR, 0x0A)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x09]), DerefOf (USBP [0x09])))
                            }
                        }

                        Device (POT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x06]), DerefOf (USBP [0x06])))
                            }
                        }

                        Device (PO15)
                        {
                            Name (_ADR, 0x0F)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x0E]), DerefOf (USBP [0x0E])))
                            }
                        }

                        Device (POT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x07]), DerefOf (USBP [0x07])))
                            }
                        }

                        Device (PO16)
                        {
                            Name (_ADR, 0x10)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x0F]), DerefOf (USBP [0x0F])))
                            }
                        }

                        Device (PO17)
                        {
                            Name (_ADR, 0x11)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x10]), DerefOf (USBP [0x10])))
                            }
                        }

                        Device (PO18)
                        {
                            Name (_ADR, 0x12)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x11]), DerefOf (USBP [0x11])))
                            }
                        }

                        Device (PO19)
                        {
                            Name (_ADR, 0x13)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x12]), DerefOf (USBP [0x12])))
                            }
                        }

                        Device (PO20)
                        {
                            Name (_ADR, 0x14)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x13]), DerefOf (USBP [0x13])))
                            }
                        }

                        Device (PO21)
                        {
                            Name (_ADR, 0x15)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x14]), DerefOf (USBP [0x14])))
                            }
                        }

                        Device (PO22)
                        {
                            Name (_ADR, 0x16)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                UPGP ()
                                Return (GPLD (DerefOf (USBV [0x15]), DerefOf (USBP [0x15])))
                            }
                        }
                    }
                }

                Device (PT01)
                {
                    Name (_ADR, One)  // _ADR: Address
                }

                Device (PT02)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Device (PT21)
                    {
                        Name (_ADR, 0x00010000)  // _ADR: Address
                    }

                    Device (PT22)
                    {
                        Name (_ADR, 0x00020000)  // _ADR: Address
                    }

                    Device (PT23)
                    {
                        Name (_ADR, 0x00030000)  // _ADR: Address
                    }

                    Device (PT25)
                    {
                        Name (_ADR, 0x00050000)  // _ADR: Address
                    }

                    Device (PT28)
                    {
                        Name (_ADR, 0x00080000)  // _ADR: Address
                        Device (X1_1)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                            {
                                Return (GPRW (0x14, 0x04))
                            }
                        }
                    }

                    Device (PT29)
                    {
                        Name (_ADR, 0x00090000)  // _ADR: Address
                        Device (RLAN)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                            {
                                Return (GPRW (0x08, 0x04))
                            }
                        }
                    }

                    Device (PT20)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (X162)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                            {
                                Return (GPRW (0x14, 0x04))
                            }
                        }
                    }

                    Device (PT24)
                    {
                        Name (_ADR, 0x00040000)  // _ADR: Address
                        Device (M2_2)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                            {
                                Return (GPRW (0x08, 0x04))
                            }
                        }
                    }

                    Device (PT26)
                    {
                        Name (_ADR, 0x00060000)  // _ADR: Address
                    }

                    Device (PT27)
                    {
                        Name (_ADR, 0x00070000)  // _ADR: Address
                    }
                }
            }
        }
    }

    Scope (_GPE)
    {
        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GP12, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP13, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP13.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP30, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP31, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L10, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP8.X161, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP9.X162, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP1.PTXH, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1.PT02.PT29.RLAN, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1.PT02.PT24.M2_2, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Method (_L14, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP1.PT02.PT28.X1_1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1.PT02.PT20.X162, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Name (_UID, 0xAA)  // _UID: Unique ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S3, Package (0x04)  // _S3_: S3 System State
    {
        0x03, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })
    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        If (Arg0)
        {
            \_SB.TPM.TPTS (Arg0)
            MPTS (Arg0, \_SB.PCI0.SBRG.SIO1.SIOS (Arg0), \_SB.PCI0.GPTS (Arg0), \_SB.PCI0.NPTS (Arg0), SPTS (Arg0))
        }
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        DBG8 = (Arg0 << 0x04)
        SWAK (Arg0)
        DBG8 = (Arg0 << 0x04)
        \_SB.PCI0.NWAK (Arg0)
        \_SB.PCI0.GWAK (Arg0)
        \_SB.PCI0.SBRG.SIO1.SIOW (Arg0)
        MWAK (Arg0)
        Return (WAKP) /* \WAKP */
    }

    Scope (_SB)
    {
        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x0C), 
            SIRA,   8, 
            SIRB,   8, 
            SIRC,   8, 
            SIRD,   8, 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x17), 
            SDCL,   8, 
            Offset (0x1A), 
            SDIO,   8, 
            Offset (0x30), 
            USB1,   8, 
            Offset (0x34), 
            USB3,   8, 
            Offset (0x41), 
            SATA,   8, 
            Offset (0x62), 
            GIOC,   8, 
            Offset (0x70), 
            I2C0,   8, 
            I2C1,   8, 
            I2C2,   8, 
            I2C3,   8, 
            URT0,   8, 
            URT1,   8, 
            Offset (0x80), 
            AIRA,   8, 
            AIRB,   8, 
            AIRC,   8, 
            AIRD,   8, 
            AIRE,   8, 
            AIRF,   8, 
            AIRG,   8, 
            AIRH,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
            Local1 = PD64 /* \_SB_.PD64 */
            AIRA = 0x10
            AIRB = 0x11
            AIRC = 0x12
            AIRD = 0x13
            AIRE = 0x14
            AIRF = 0x15
            AIRG = 0x16
            AIRH = 0x17
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            HDAD = Arg0
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            USB1 = Arg0
            USB3 = Arg0
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            SATA = Arg0
        }

        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Name (IPRA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRB, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRC, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRD, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRA)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSA) /* \_SB_.PRSA */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTA (Local0)
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRB)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSB) /* \_SB_.PRSB */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTB (Local0)
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRC)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSC) /* \_SB_.PRSC */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTC (Local0)
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRD)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSD) /* \_SB_.PRSD */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                INTD (Local0)
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRE)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSE) /* \_SB_.PRSE */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (PIRE, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRF)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSF) /* \_SB_.PRSF */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRG)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSG) /* \_SB_.PRSG */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRH)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSH) /* \_SB_.PRSH */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }
    }

    Device (HPET)
    {
        Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((HPEN == One))
            {
                If ((OSVR >= 0x0C))
                {
                    Return (0x0F)
                }

                HPEN = Zero
                Return (One)
            }

            Return (One)
        }

        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
        {
            Name (BUF0, ResourceTemplate ()
            {
                IRQNoFlags ()
                    {0}
                IRQNoFlags ()
                    {8}
                Memory32Fixed (ReadOnly,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    )
            })
            Return (BUF0) /* \HPET._CRS.BUF0 */
        }
    }

    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0) {})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0) {})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Scope (_SB.PCI0)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            If ((PICM != Zero))
            {
                DSPI ()
                NAPE ()
            }

            OSTP ()
            OSFL ()
        }
    }

    Name (TSOS, 0x75)
    Name (UR0I, 0x03)
    Name (UR1I, 0x04)
    Name (UR2I, 0x03)
    Name (UR3I, 0x04)
    Name (IC0I, 0x04)
    Name (IC1I, 0x0B)
    Name (IC2I, 0x0A)
    Name (IC3I, 0x06)
    Name (IC4I, 0x0E)
    Name (IC5I, 0x0F)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }
    }

    Scope (_SB)
    {
        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
                ,   4, 
            LPCE,   1, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
                ,   3, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            Offset (0x1F), 
            IM1F,   8, 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, Zero, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Arg1 = IUA0 /* \_SB_.IUA0 */
            }

            If ((Arg0 == One))
            {
                Arg1 = IUA1 /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Arg1 = IUA2 /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Arg1 = IUA3 /* \_SB_.IUA3 */
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg0 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local3 = (One << Arg0)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    PG1A = One
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                    PG1A = Zero
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {3}
                    Memory32Fixed (ReadWrite,
                        0xFEDC9000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFEDC7000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (UR0I & 0x0F))
                Return (BUF0) /* \_SB_.FUR0._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (IER0)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {4}
                    Memory32Fixed (ReadWrite,
                        0xFEDCA000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFEDC8000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (UR1I & 0x0F))
                Return (BUF0) /* \_SB_.FUR1._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (UOL1)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {3}
                    Memory32Fixed (ReadWrite,
                        0xFEDCE000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFEDCC000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (UR2I & 0x0F))
                Return (BUF0) /* \_SB_.FUR2._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (UOL2)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {4}
                    Memory32Fixed (ReadWrite,
                        0xFEDCF000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFEDCD000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (UR3I & 0x0F))
                Return (BUF0) /* \_SB_.FUR3._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (UOL3)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {10}
                    Memory32Fixed (ReadWrite,
                        0xFEDC2000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC0I & 0x0F))
                Return (BUF0) /* \_SB_.I2CA._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {11}
                    Memory32Fixed (ReadWrite,
                        0xFEDC3000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC1I & 0x0F))
                Return (BUF0) /* \_SB_.I2CB._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {4}
                    Memory32Fixed (ReadWrite,
                        0xFEDC4000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC2I & 0x0F))
                Return (BUF0) /* \_SB_.I2CC._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {6}
                    Memory32Fixed (ReadWrite,
                        0xFEDC5000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC3I & 0x0F))
                Return (BUF0) /* \_SB_.I2CD._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {14}
                    Memory32Fixed (ReadWrite,
                        0xFEDC6000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC4I & 0x0F))
                Return (BUF0) /* \_SB_.I2CE._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC4E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IRQ (Edge, ActiveHigh, Exclusive, )
                        {15}
                    Memory32Fixed (ReadWrite,
                        0xFEDCB000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                CreateWordField (BUF0, One, IRQW)
                IRQW = (One << (IC5I & 0x0F))
                Return (BUF0) /* \_SB_.I2CF._CRS.BUF0 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC5E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = Zero
            IM15 = One
            IM16 = One
            IM20 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            IM1F = One
            If ((EMMD != One))
            {
                IM4A = One
                IM58 = One
                IM4B = One
                IM57 = One
                IM6D = One
            }

            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCICC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If (EMMD)
                {
                    Return (SHID) /* \_SB_.SHID */
                }
                Else
                {
                    Return (AHID) /* \_SB_.AHID */
                }
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If (EMMD)
                {
                    Return (SCID) /* \_SB_.SCID */
                }
                Else
                {
                    Return (ACID) /* \_SB_.ACID */
                }
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    Return (DCRS) /* \_SB_.DCRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, Zero)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }
        }

        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER0)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y26)
                    IRQNoFlags (_Y27)
                        {3}
                })
                CreateByteField (BUF0, \_SB.UAR1._CRS._Y26._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR1._CRS._Y26._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR1._CRS._Y27._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR0, IRQL)
                Return (BUF0) /* \_SB_.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER1)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y28)
                    IRQNoFlags (_Y29)
                        {4}
                })
                CreateByteField (BUF0, \_SB.UAR2._CRS._Y28._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR2._CRS._Y28._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR2._CRS._Y29._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR1, IRQL)
                Return (BUF0) /* \_SB_.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER2)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y2A)
                    IRQNoFlags (_Y2B)
                        {3}
                })
                CreateByteField (BUF0, \_SB.UAR3._CRS._Y2A._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR3._CRS._Y2A._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR3._CRS._Y2B._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR2, IRQL)
                Return (BUF0) /* \_SB_.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER3)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y2C)
                    IRQNoFlags (_Y2D)
                        {4}
                })
                CreateByteField (BUF0, \_SB.UAR4._CRS._Y2C._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.UAR4._CRS._Y2C._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.UAR4._CRS._Y2D._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR3, IRQL)
                Return (BUF0) /* \_SB_.UAR4._CRS.BUF0 */
            }
        }
    }

    Device (_SB.TPM)
    {
        Name (TMRQ, 0xFFFFFFFF)
        Name (TLVL, 0xFFFFFFFF)
        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {
            If (TCMF)
            {
                Return (0x01013469)
            }
            ElseIf ((TTDP == Zero))
            {
                Return (0x310CD041)
            }
            Else
            {
                Return ("MSFT0101")
            }
        }

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)
        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            ACC0,   8, 
            Offset (0x08), 
            INTE,   32, 
            INTV,   8, 
            Offset (0x10), 
            INTS,   32, 
            INTF,   32, 
            TSTS,   32, 
            Offset (0x24), 
            FIFO,   32, 
            Offset (0x30), 
            IDTF,   32, 
            Offset (0x4C), 
            SCMD,   32
        }

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {
            If ((TTDP == Zero))
            {
                Return (Unicode ("TPM 1.2 Device"))
            }
            Else
            {
                Return (Unicode ("TPM 2.0 Device"))
            }
        }

        Name (_UID, One)  // _UID: Unique ID
        Name (CRST, ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0x00000000,         // Address Base
                0x00001000,         // Address Length
                _Y2E)
            Memory32Fixed (ReadOnly,
                0xFED70000,         // Address Base
                0x00001000,         // Address Length
                _Y2F)
        })
        Name (CRSD, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y30)
        })
        Name (CRID, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y31)
        })
        Name (CREI, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                )
            GpioInt (Level, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                "\\_SB.GPIO", 0x00, ResourceConsumer, _Y32,
                )
                {   // Pin list
                    0x0000
                }
        })
        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {
            If ((AMDT == One))
            {
                CreateDWordField (CRST, \_SB.TPM._Y2E._BAS, MTFB)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y2E._LEN, LTFB)  // _LEN: Length
                MTFB = TPMB /* \TPMB */
                LTFB = TPBS /* \TPBS */
                CreateDWordField (CRST, \_SB.TPM._Y2F._BAS, MTFC)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y2F._LEN, LTFC)  // _LEN: Length
                MTFC = TPMC /* \TPMC */
                LTFC = TPCS /* \TPCS */
                Return (CRST) /* \_SB_.TPM_.CRST */
            }
            Else
            {
                If ((DTPT == One))
                {
                    CreateDWordField (CRSD, \_SB.TPM._Y30._BAS, MTFE)  // _BAS: Base Address
                    CreateDWordField (CRSD, \_SB.TPM._Y30._LEN, LTFE)  // _LEN: Length
                    MTFE = 0xFED40000
                    LTFE = 0x5000
                    Return (CRSD) /* \_SB_.TPM_.CRSD */
                }
                ElseIf ((TTPF == One))
                {
                    If (((TMRQ == Zero) && (TMRQ != 0xFFFFFFFF)))
                    {
                        CreateDWordField (CRID, \_SB.TPM._Y31._BAS, MTFD)  // _BAS: Base Address
                        CreateDWordField (CRID, \_SB.TPM._Y31._LEN, LTFD)  // _LEN: Length
                        MTFD = 0xFED40000
                        LTFD = 0x5000
                        Return (CRID) /* \_SB_.TPM_.CRID */
                    }
                    Else
                    {
                        CreateWordField (CREI, 0x23, LIRQ)
                        CreateBitField (CREI, \_SB.TPM._Y32._POL, LLVL)  // _POL: Polarity
                        LIRQ = TMRQ /* \_SB_.TPM_.TMRQ */
                        LLVL = TLVL /* \_SB_.TPM_.TLVL */
                        Return (CREI) /* \_SB_.TPM_.CREI */
                    }
                }
                ElseIf ((TTPF == Zero))
                {
                    CreateDWordField (CRST, \_SB.TPM._Y2F._BAS, MTFF)  // _BAS: Base Address
                    MTFF = FTPM /* \FTPM */
                    Return (CRST) /* \_SB_.TPM_.CRST */
                }

                MTFE = Zero
                LTFE = Zero
                Return (CRID) /* \_SB_.TPM_.CRID */
            }

            Return (CRID) /* \_SB_.TPM_.CRID */
        }

        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
        {
            If (((TMRQ != Zero) && (TMRQ != 0xFFFFFFFF)))
            {
                CreateWordField (Arg0, 0x23, IRQ0)
                CreateWordField (CREI, 0x23, LIRQ)
                LIRQ = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                TMRQ = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                CreateBitField (Arg0, 0x98, ITRG)
                CreateBitField (CREI, \_SB.TPM._Y32._MOD, LTRG)  // _MOD: Mode
                LTRG = ITRG /* \_SB_.TPM_._SRS.ITRG */
                CreateBitField (Arg0, 0x99, ILVL)
                CreateBitField (CREI, \_SB.TPM._Y32._POL, LLVL)  // _POL: Polarity
                LLVL = ILVL /* \_SB_.TPM_._SRS.ILVL */
                If ((((IDTF & 0x0F) == Zero) || ((IDTF & 0x0F
                    ) == 0x0F)))
                {
                    If ((IRQ0 < 0x10))
                    {
                        INTV = (IRQ0 & 0x0F)
                    }

                    If ((ITRG == One))
                    {
                        INTE |= 0x10
                    }
                    Else
                    {
                        INTE &= 0xFFFFFFEF
                    }

                    If ((ILVL == Zero))
                    {
                        INTE |= 0x08
                    }
                    Else
                    {
                        INTE &= 0xFFFFFFF7
                    }
                }
            }
        }

        OperationRegion (CRBD, SystemMemory, TPMM, 0x48)
        Field (CRBD, AnyAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            HERR,   32, 
            Offset (0x40), 
            HCMD,   32, 
            HSTS,   32
        }

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((TTDP == Zero))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
            ElseIf ((TTDP == One))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Return (Zero)
        }

        Method (STRT, 3, Serialized)
        {
            OperationRegion (TPMR, SystemMemory, FTPM, 0x1000)
            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }

            Name (TIMR, Zero)
            If ((ToInteger (Arg0) != Zero)) {}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    TIMR = Zero
                    If ((AMDT == One))
                    {
                        While (((BEGN == One) && (TIMR < 0x0200)))
                        {
                            If ((BEGN == One))
                            {
                                Sleep (One)
                                TIMR++
                            }
                        }
                    }
                    ElseIf ((((HSTS & 0x02) | (HSTS & One)
                        ) == 0x03))
                    {
                        HCMD = One
                    }
                    Else
                    {
                        FERR = One
                        BEGN = Zero
                    }

                    Return (Zero)
                }

            }

            Return (One)
        }

        Method (CRYF, 3, Serialized)
        {
            If ((ToInteger (Arg0) != One)) {}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    Name (TPMV, Package (0x02)
                    {
                        One, 
                        Package (0x02)
                        {
                            One, 
                            0x20
                        }
                    })
                    If ((_STA () == Zero))
                    {
                        Return (Package (0x01)
                        {
                            Zero
                        })
                    }

                    Return (TPMV) /* \_SB_.TPM_.CRYF.TPMV */
                }

            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (_SB.TPM)
    {
        OperationRegion (TSMI, SystemIO, SMIA, 0x02)
        Field (TSMI, WordAcc, NoLock, Preserve)
        {
            SMI,    16
        }

        OperationRegion (ATNV, SystemMemory, PPIM, PPIL)
        Field (ATNV, AnyAcc, NoLock, Preserve)
        {
            RQST,   32, 
            RCNT,   32, 
            ERRO,   32, 
            FLAG,   32, 
            MISC,   32, 
            OPTN,   32, 
            SRSP,   32
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        If ((PPIV == Zero))
                        {
                            Return ("1.2")
                        }
                        Else
                        {
                            Return ("1.3")
                        }
                    }
                    Case (0x02)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        SRSP = Zero
                        FLAG = 0x02
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x03)
                    {
                        Name (PPI1, Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        PPI1 [One] = RQST /* \_SB_.TPM_.RQST */
                        Return (PPI1) /* \_SB_.TPM_._DSM.PPI1 */
                    }
                    Case (0x04)
                    {
                        Return (TRST) /* \TRST */
                    }
                    Case (0x05)
                    {
                        Name (PPI2, Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        SRSP = Zero
                        FLAG = 0x05
                        SMI = OFST /* \OFST */
                        PPI2 [One] = RCNT /* \_SB_.TPM_.RCNT */
                        PPI2 [0x02] = ERRO /* \_SB_.TPM_.ERRO */
                        Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x07
                        OPTN = Zero
                        If ((RQST == 0x17))
                        {
                            ToInteger (DerefOf (Arg3 [One]), OPTN) /* \_SB_.TPM_.OPTN */
                        }

                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x08)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x08
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }
            ElseIf ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x09
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }

            If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
            {
                Return (CRYF (Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4") /* Unknown UUID */))
            {
                Return (STRT (Arg1, Arg2, Arg3))
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Method (TPTS, 1, Serialized)
        {
            Switch (ToInteger (Arg0))
            {
                Case (0x04)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }
                Case (0x05)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }

            }

            Sleep (0x012C)
        }
    }

    Scope (\)
    {
        Device (AMW0)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "ASUSWMI")  // _UID: Unique ID
            Name (_WDG, Buffer (0x50)
            {
                /* 0000 */  0xD0, 0x5E, 0x84, 0x97, 0x6D, 0x4E, 0xDE, 0x11,  // .^..mN..
                /* 0008 */  0x8A, 0x39, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66,  // .9.. ..f
                /* 0010 */  0x42, 0x43, 0x01, 0x02, 0xA0, 0x47, 0x67, 0x46,  // BC...GgF
                /* 0018 */  0xEC, 0x70, 0xDE, 0x11, 0x8A, 0x39, 0x08, 0x00,  // .p...9..
                /* 0020 */  0x20, 0x0C, 0x9A, 0x66, 0x42, 0x44, 0x01, 0x02,  //  ..fBD..
                /* 0028 */  0x72, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,  // r.......
                /* 0030 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,  // ....)...
                /* 0038 */  0xD2, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,  // ....!...
                /* 0040 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0048 */  0xC9, 0x06, 0x29, 0x10, 0x4D, 0x4F, 0x01, 0x00   // ..).MO..
            })
            Name (CCAC, Zero)
            Name (ECD2, Zero)
            Name (EID2, Zero)
            Method (WED2, 1, NotSerialized)
            {
                ECD2 = Arg0
            }

            Method (WMBC, 3, Serialized)
            {
                Local0 = One
                Switch (Arg1)
                {
                    Case (0x43455053)
                    {
                        Return (SPEC (Arg2))
                    }
                    Case (0x50564544)
                    {
                        Return (DEVP (Arg2))
                    }
                    Case (0x50534453)
                    {
                        Return (SDSP (Arg2))
                    }
                    Case (0x50534447)
                    {
                        Return (GDSP (Arg2))
                    }
                    Case (0x53564544)
                    {
                        Return (DEVS (Arg2))
                    }
                    Case (0x53544344)
                    {
                        Return (DSTS (Arg2))
                    }
                    Case (0x44495047)
                    {
                        Return (GPID ())
                    }
                    Case (0x5446424B)
                    {
                        Return (KBFT (Arg2))
                    }
                    Case (0x59454B48)
                    {
                        Return (HKEY ())
                    }
                    Case (0x4C455252)
                    {
                        Return (LERR (Arg2))
                    }
                    Case (0x47424F44)
                    {
                        Return (GBOD (Arg2))
                    }
                    Case (0x53424F44)
                    {
                        Return (SBOD (Arg2))
                    }
                    Case (0x47424F4E)
                    {
                        Return (GBON (Arg2))
                    }
                    Case (0x53415057)
                    {
                        Return (SAPW (Arg2))
                    }
                    Case (0x53555057)
                    {
                        Return (SUPW (Arg2))
                    }
                    Case (0x53555058)
                    {
                        Return (GLBN (Arg2))
                    }
                    Case (0x53555059)
                    {
                        Return (ISLG (Arg2))
                    }
                    Case (0x53555060)
                    {
                        Return (GLBO (Arg2))
                    }
                    Case (0x53555061)
                    {
                        Return (SLBO (Arg2))
                    }
                    Case (0x53424F47)
                    {
                        Return (SBOG (Arg2))
                    }
                    Case (0x4C444654)
                    {
                        Return (LDFT ())
                    }
                    Case (0x53465442)
                    {
                        Return (SFTB (Arg2))
                    }
                    Case (0x53444654)
                    {
                        Return (SDFT (Arg2))
                    }
                    Case (0x5346544D)
                    {
                        Return (SFTM ())
                    }
                    Case (0x4443544C)
                    {
                        Return (DCTL (Arg2))
                    }
                    Case (0x4746414E)
                    {
                        Return (GFAN (Arg2))
                    }
                    Case (0x4446414E)
                    {
                        Return (SFAN (Arg2))
                    }
                    Case (0x47464356)
                    {
                        Return (GFCV (Arg2))
                    }
                    Case (0x44464356)
                    {
                        Return (SFCV (Arg2))
                    }
                    Case (0x43455057)
                    {
                        Return (CKPW (Arg2))
                    }
                    Case (0x47544F44)
                    {
                        Return (GTOD (Arg2))
                    }
                    Case (0x53544F44)
                    {
                        Return (STOD (Arg2))
                    }
                    Case (0x4F505945)
                    {
                        Return (EYPO ())
                    }
                    Case (0x54505945)
                    {
                        Return (EYPT ())
                    }
                    Case (0x45505945)
                    {
                        Return (EYPE ())
                    }
                    Case (0x56505945)
                    {
                        Return (EYPF ())
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }

                Return (Local0)
            }

            Method (RSMB, 1, Serialized)
            {
                Return (Zero)
            }

            Method (WSMB, 1, Serialized)
            {
                Return (Zero)
            }

            Method (RSMW, 1, Serialized)
            {
                Return (Zero)
            }

            Method (WSMW, 1, Serialized)
            {
                Return (Zero)
            }

            Method (RSMK, 1, Serialized)
            {
                Return (Zero)
            }

            Method (WSMK, 1, Serialized)
            {
                Return (Zero)
            }

            Mutex (ASMX, 0x00)
            Method (RIOB, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    OperationRegion (TMIO, SystemIO, W_PT, One)
                    Field (TMIO, ByteAcc, NoLock, Preserve)
                    {
                        PT08,   8
                    }

                    Local0 = PT08 /* \AMW0.RIOB.PT08 */
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WIOB, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    CreateByteField (Arg0, 0x02, B_DT)
                    OperationRegion (TMIO, SystemIO, W_PT, One)
                    Field (TMIO, ByteAcc, NoLock, Preserve)
                    {
                        PT08,   8
                    }

                    PT08 = B_DT /* \AMW0.WIOB.B_DT */
                    Release (ASMX)
                }

                Return (Ones)
            }

            Method (RIOW, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x02)
                    Field (TMIO, WordAcc, NoLock, Preserve)
                    {
                        PT16,   16
                    }

                    Local0 = PT16 /* \AMW0.RIOW.PT16 */
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WIOW, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    CreateWordField (Arg0, 0x02, W_DT)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x02)
                    Field (TMIO, WordAcc, NoLock, Preserve)
                    {
                        PT16,   16
                    }

                    PT16 = W_DT /* \AMW0.WIOW.W_DT */
                    Release (ASMX)
                }

                Return (Ones)
            }

            Method (RIOD, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x04)
                    Field (TMIO, DWordAcc, NoLock, Preserve)
                    {
                        PT32,   32
                    }

                    Local0 = PT32 /* \AMW0.RIOD.PT32 */
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WIOD, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    CreateDWordField (Arg0, 0x02, D_DT)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x04)
                    Field (TMIO, DWordAcc, NoLock, Preserve)
                    {
                        PT32,   32
                    }

                    PT32 = D_DT /* \AMW0.WIOD.D_DT */
                    Release (ASMX)
                }

                Return (Ones)
            }

            Method (RMEM, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateDWordField (Arg0, Zero, W_MM)
                    CreateByteField (Arg0, 0x04, W_SZ)
                    OperationRegion (TMMM, SystemMemory, ToInteger (W_MM), 0x04)
                    Field (TMMM, ByteAcc, NoLock, Preserve)
                    {
                        MM08,   8
                    }

                    Field (TMMM, ByteAcc, NoLock, Preserve)
                    {
                        MM16,   16
                    }

                    Field (TMMM, ByteAcc, NoLock, Preserve)
                    {
                        MM32,   32
                    }

                    Switch (ToInteger (W_SZ))
                    {
                        Case (One)
                        {
                            Local0 = MM08 /* \AMW0.RMEM.MM08 */
                        }
                        Case (0x02)
                        {
                            Local0 = MM16 /* \AMW0.RMEM.MM16 */
                        }
                        Case (0x04)
                        {
                            Local0 = MM32 /* \AMW0.RMEM.MM32 */
                        }
                        Default
                        {
                            Local0 = Ones
                        }

                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WMEM, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateDWordField (Arg0, Zero, W_MM)
                    CreateByteField (Arg0, 0x04, W_SZ)
                    CreateDWordField (Arg0, 0x08, W_DT)
                    OperationRegion (TMMM, SystemMemory, W_MM, 0x04)
                    Field (TMMM, ByteAcc, NoLock, Preserve)
                    {
                        MM08,   8
                    }

                    Field (TMMM, WordAcc, NoLock, Preserve)
                    {
                        MM16,   16
                    }

                    Field (TMMM, DWordAcc, NoLock, Preserve)
                    {
                        MM32,   32
                    }

                    Local0 = Zero
                    Switch (ToInteger (W_SZ))
                    {
                        Case (One)
                        {
                            MM08 = W_DT /* \AMW0.WMEM.W_DT */
                        }
                        Case (0x02)
                        {
                            MM16 = W_DT /* \AMW0.WMEM.W_DT */
                        }
                        Case (0x04)
                        {
                            MM32 = W_DT /* \AMW0.WMEM.W_DT */
                        }
                        Default
                        {
                            Local0 = Ones
                        }

                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (RPCI, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, TBUS)
                    CreateByteField (Arg0, One, TDEV)
                    CreateByteField (Arg0, 0x02, TFUN)
                    CreateWordField (Arg0, 0x04, TREG)
                    CreateByteField (Arg0, 0x06, W_SZ)
                    Local0 = TBUS /* \AMW0.RPCI.TBUS */
                    Local0 <<= 0x05
                    Local0 += TDEV /* \AMW0.RPCI.TDEV */
                    Local0 <<= 0x03
                    Local0 += TFUN /* \AMW0.RPCI.TFUN */
                    Local0 <<= 0x0C
                    Local0 += TREG /* \AMW0.RPCI.TREG */
                    Local0 += PEBS /* \PEBS */
                    OperationRegion (PCFG, SystemMemory, Local0, 0x04)
                    Field (PCFG, ByteAcc, NoLock, Preserve)
                    {
                        BCFG,   8
                    }

                    Field (PCFG, WordAcc, NoLock, Preserve)
                    {
                        WCFG,   16
                    }

                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        XCFG,   32
                    }

                    Local0 = Zero
                    Switch (ToInteger (W_SZ))
                    {
                        Case (One)
                        {
                            Local0 = BCFG /* \AMW0.RPCI.BCFG */
                        }
                        Case (0x02)
                        {
                            Local0 = WCFG /* \AMW0.RPCI.WCFG */
                        }
                        Case (0x04)
                        {
                            Local0 = XCFG /* \AMW0.RPCI.XCFG */
                        }
                        Default
                        {
                            Local0 = Ones
                        }

                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WPCI, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, TBUS)
                    CreateByteField (Arg0, One, TDEV)
                    CreateByteField (Arg0, 0x02, TFUN)
                    CreateWordField (Arg0, 0x04, TREG)
                    CreateByteField (Arg0, 0x06, W_SZ)
                    CreateDWordField (Arg0, 0x08, TDAT)
                    Local0 = TBUS /* \AMW0.WPCI.TBUS */
                    Local0 <<= 0x05
                    Local0 += TDEV /* \AMW0.WPCI.TDEV */
                    Local0 <<= 0x03
                    Local0 += TFUN /* \AMW0.WPCI.TFUN */
                    Local0 <<= 0x0C
                    Local0 += TREG /* \AMW0.WPCI.TREG */
                    Local0 += PEBS /* \PEBS */
                    OperationRegion (PCFG, SystemMemory, Local0, 0x04)
                    Field (PCFG, ByteAcc, NoLock, Preserve)
                    {
                        BCFG,   8
                    }

                    Field (PCFG, WordAcc, NoLock, Preserve)
                    {
                        WCFG,   16
                    }

                    Field (PCFG, DWordAcc, NoLock, Preserve)
                    {
                        XCFG,   32
                    }

                    Local0 = Zero
                    Switch (ToInteger (W_SZ))
                    {
                        Case (One)
                        {
                            BCFG = TDAT /* \AMW0.WPCI.TDAT */
                        }
                        Case (0x02)
                        {
                            WCFG = TDAT /* \AMW0.WPCI.TDAT */
                        }
                        Case (0x04)
                        {
                            XCFG = TDAT /* \AMW0.WPCI.TDAT */
                        }
                        Default
                        {
                            Local0 = Ones
                        }

                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (RIDX, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    CreateByteField (Arg0, 0x02, W_ID)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x02)
                    Field (TMIO, ByteAcc, NoLock, Preserve)
                    {
                        IDXP,   8, 
                        DATP,   8
                    }

                    IDXP = ToInteger (W_ID)
                    Local0 = DATP /* \AMW0.RIDX.DATP */
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WIDX, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateWordField (Arg0, Zero, W_PT)
                    CreateByteField (Arg0, 0x02, W_ID)
                    CreateByteField (Arg0, 0x03, W_DT)
                    OperationRegion (TMIO, SystemIO, W_PT, 0x02)
                    Field (TMIO, ByteAcc, NoLock, Preserve)
                    {
                        IDXP,   8, 
                        DATP,   8
                    }

                    IDXP = ToInteger (W_ID)
                    DATP = W_DT /* \AMW0.WIDX.W_DT */
                    Release (ASMX)
                    Return (Zero)
                }

                Return (Ones)
            }

            Name (RGBF, Buffer (0x10) {})
            CreateDWordField (RGBF, Zero, REAX)
            CreateDWordField (RGBF, 0x04, REBX)
            CreateDWordField (RGBF, 0x08, RECX)
            CreateDWordField (RGBF, 0x0C, REDX)
            Name (MRBF, Buffer (0x08) {})
            CreateDWordField (MRBF, Zero, MEDX)
            CreateDWordField (MRBF, 0x04, MEAX)
            Method (RDMR, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateDWordField (Arg0, Zero, W_ID)
                    RGBF = \_SB.GMSR (W_ID)
                    MEDX = REDX /* \AMW0.REDX */
                    MEAX = REAX /* \AMW0.REAX */
                    Release (ASMX)
                    Return (MRBF) /* \AMW0.MRBF */
                }

                Return (Ones)
            }

            Method (WRMR, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateDWordField (Arg0, Zero, W_ID)
                    CreateDWordField (Arg0, 0x04, W_HI)
                    CreateDWordField (Arg0, 0x08, W_LW)
                    RECX = W_ID /* \AMW0.WRMR.W_ID */
                    REDX = W_HI /* \AMW0.WRMR.W_HI */
                    REAX = W_LW /* \AMW0.WRMR.W_LW */
                    Local0 = \_SB.SMSR (RGBF)
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (RCID, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateDWordField (Arg0, Zero, W_ID)
                    RGBF = \_SB.PRID (W_ID)
                    Release (ASMX)
                    Return (RGBF) /* \AMW0.RGBF */
                }

                Return (Ones)
            }

            Method (RDEC, 1, Serialized)
            {
                Return (Ones)
            }

            Method (WREC, 1, Serialized)
            {
                Return (Ones)
            }

            Method (RSIO, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, W_LN)
                    CreateByteField (Arg0, One, W_ID)
                    Local0 = Ones
                    If ((Acquire (\_SB.PCI0.SBRG.SIO1.MUT0, 0xFFFF) == Zero))
                    {
                        \_SB.PCI0.SBRG.SIO1.ENFG (W_LN)
                        \_SB.PCI0.SBRG.SIO1.INDX = W_ID /* \AMW0.RSIO.W_ID */
                        Local0 = \_SB.PCI0.SBRG.SIO1.DATA
                        \_SB.PCI0.SBRG.SIO1.EXFG ()
                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WSIO, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, W_LN)
                    CreateByteField (Arg0, One, W_ID)
                    CreateByteField (Arg0, 0x02, W_DT)
                    Local0 = Ones
                    If ((Acquire (\_SB.PCI0.SBRG.SIO1.MUT0, 0xFFFF) == Zero))
                    {
                        \_SB.PCI0.SBRG.SIO1.ENFG (W_LN)
                        \_SB.PCI0.SBRG.SIO1.INDX = W_ID /* \AMW0.WSIO.W_ID */
                        \_SB.PCI0.SBRG.SIO1.DATA = W_DT /* \AMW0.WSIO.W_DT */
                        \_SB.PCI0.SBRG.SIO1.EXFG ()
                    }

                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            OperationRegion (SHWM, SystemIO, IOHW, 0x0A)
            Field (SHWM, ByteAcc, NoLock, Preserve)
            {
                Offset (0x05), 
                HIDX,   8, 
                HDAT,   8
            }

            IndexField (HIDX, HDAT, ByteAcc, Lock, Preserve)
            {
                Offset (0x4E), 
                BANK,   4
            }

            IndexField (\_SB.PCI0.SBRG.SIO1.INDX, \_SB.PCI0.SBRG.SIO1.DATA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x28), 
                    ,   4, 
                HMLK,   1
            }

            Name (LCKS, Zero)
            Method (RHWM, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, W_BK)
                    CreateByteField (Arg0, One, W_ID)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    LCKS = HMLK /* \AMW0.HMLK */
                    HMLK = Zero
                    BANK = W_BK /* \AMW0.RHWM.W_BK */
                    HIDX = W_ID /* \AMW0.RHWM.W_ID */
                    Local0 = HDAT /* \AMW0.HDAT */
                    HMLK = LCKS /* \AMW0.LCKS */
                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    Release (ASMX)
                    Return (Local0)
                }

                Return (Ones)
            }

            Method (WHWM, 1, Serialized)
            {
                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    CreateByteField (Arg0, Zero, W_BK)
                    CreateByteField (Arg0, One, W_ID)
                    CreateByteField (Arg0, 0x02, W_DT)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    LCKS = HMLK /* \AMW0.HMLK */
                    HMLK = Zero
                    BANK = W_BK /* \AMW0.WHWM.W_BK */
                    HIDX = W_ID /* \AMW0.WHWM.W_ID */
                    HDAT = W_DT /* \AMW0.WHWM.W_DT */
                    HMLK = LCKS /* \AMW0.LCKS */
                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    Release (ASMX)
                    Return (Zero)
                }

                Return (Ones)
            }

            Method (ATOH, 1, Serialized)
            {
                Local0 = Ones
                If (((Arg0 >= 0x61) && (Arg0 <= 0x66)))
                {
                    Local0 = (Arg0 - 0x57)
                }

                If (((Arg0 >= 0x41) && (Arg0 <= 0x46)))
                {
                    Local0 = (Arg0 - 0x37)
                }

                If (((Arg0 >= 0x30) && (Arg0 <= 0x39)))
                {
                    Local0 = (Arg0 - 0x30)
                }

                Return (Local0)
            }

            Method (HTOA, 1, Serialized)
            {
                Local0 = Ones
                If (((Arg0 >= Zero) && (Arg0 <= 0x09)))
                {
                    Local0 = (Arg0 + 0x30)
                }

                If (((Arg0 >= 0x0A) && (Arg0 <= 0x0F)))
                {
                    Local0 = (Arg0 - 0x0A)
                    Local0 += 0x41
                }

                Return (Local0)
            }

            Name (STRB, Buffer (0x0100) {})
            Name (HEXB, Buffer (0x0100) {})
            Method (STOH, 1, Serialized)
            {
                STRB = Arg0
                CreateByteField (Arg0, Zero, DCNT)
                DCNT >>= 0x02
                Local0 = Zero
                While ((Local0 < DCNT))
                {
                    Local1 = ((0x04 * Local0) + 0x02)
                    Local2 = (Local1 + 0x02)
                    Local3 = ATOH (DerefOf (STRB [Local1]))
                    Local3 <<= 0x04
                    Local3 += ATOH (DerefOf (STRB [Local2]))
                    HEXB [Local0] = Local3
                    Local0++
                }

                Return (HEXB) /* \AMW0.HEXB */
            }

            Method (HTOS, 2, Serialized)
            {
                HEXB = Arg0
                STRB [Zero] = (Arg1 << 0x02)
                STRB [One] = Zero
                Local0 = Zero
                While ((Local0 < Arg1))
                {
                    Local3 = DerefOf (HEXB [Local0])
                    Local4 = (Local3 >> 0x04)
                    Local4 &= 0x0F
                    Local3 &= 0x0F
                    Local1 = ((0x04 * Local0) + 0x02)
                    Local2 = (Local1 + 0x02)
                    STRB [Local1] = HTOA (Local4)
                    Local1++
                    STRB [Local1] = Zero
                    STRB [Local2] = HTOA (Local3)
                    Local2++
                    STRB [Local2] = Zero
                    Local0++
                }

                Return (STRB) /* \AMW0.STRB */
            }

            Name (IDBF, Buffer (0x60) {})
            Name (OSBF, Buffer (0x82) {})
            Name (ODBF, Buffer (0x20) {})
            Name (B_CT, Zero)
            Name (B_BK, Zero)
            Name (B_ID, Zero)
            Name (B_DT, Zero)
            Method (BRIO, 1, Serialized)
            {
                CreateByteField (Arg0, Zero, WLEN)
                B_CT = (WLEN >> 0x02)
                If ((B_CT > 0x20))
                {
                    Return (Ones)
                }

                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    IDBF = STOH (Arg0)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    Local0 = Zero
                    Local1 = Zero
                    While ((Local0 < B_CT))
                    {
                        B_BK = DerefOf (IDBF [Local0])
                        Local0++
                        B_ID = DerefOf (IDBF [Local0])
                        Local0++
                        \_SB.PCI0.SBRG.SIO1.LDN = B_BK /* \AMW0.B_BK */
                        \_SB.PCI0.SBRG.SIO1.INDX = B_ID /* \AMW0.B_ID */
                        ODBF [Local1] = \_SB.PCI0.SBRG.SIO1.DATA
                        Local1++
                    }

                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    OSBF = HTOS (ODBF, Local1)
                    Release (ASMX)
                    Return (OSBF) /* \AMW0.OSBF */
                }

                Return (Ones)
            }

            Method (BWIO, 1, Serialized)
            {
                CreateByteField (Arg0, Zero, WLEN)
                B_CT = (WLEN >> 0x02)
                If ((B_CT > 0x20))
                {
                    Return (Ones)
                }

                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    IDBF = STOH (Arg0)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    Local0 = Zero
                    While ((Local0 < B_CT))
                    {
                        B_BK = DerefOf (IDBF [Local0])
                        Local0++
                        B_ID = DerefOf (IDBF [Local0])
                        Local0++
                        B_DT = DerefOf (IDBF [Local0])
                        Local0++
                        \_SB.PCI0.SBRG.SIO1.LDN = B_BK /* \AMW0.B_BK */
                        \_SB.PCI0.SBRG.SIO1.INDX = B_ID /* \AMW0.B_ID */
                        \_SB.PCI0.SBRG.SIO1.DATA = B_DT /* \AMW0.B_DT */
                    }

                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    Release (ASMX)
                    Return (Zero)
                }

                Return (Ones)
            }

            Method (BRHM, 1, Serialized)
            {
                CreateByteField (Arg0, Zero, WLEN)
                B_CT = (WLEN >> 0x02)
                If ((B_CT > 0x20))
                {
                    Return (Ones)
                }

                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    IDBF = STOH (Arg0)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    LCKS = HMLK /* \AMW0.HMLK */
                    HMLK = Zero
                    Local0 = Zero
                    Local1 = Zero
                    While ((Local0 < B_CT))
                    {
                        B_BK = DerefOf (IDBF [Local0])
                        Local0++
                        B_ID = DerefOf (IDBF [Local0])
                        Local0++
                        BANK = B_BK /* \AMW0.B_BK */
                        HIDX = B_ID /* \AMW0.B_ID */
                        ODBF [Local1] = HDAT /* \AMW0.HDAT */
                        Local1++
                    }

                    HMLK = LCKS /* \AMW0.LCKS */
                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    OSBF = HTOS (ODBF, Local1)
                    Release (ASMX)
                    Return (OSBF) /* \AMW0.OSBF */
                }

                Return (Ones)
            }

            Method (BWHM, 1, Serialized)
            {
                CreateByteField (Arg0, Zero, WLEN)
                B_CT = (WLEN >> 0x02)
                If ((B_CT > 0x20))
                {
                    Return (Ones)
                }

                If ((Acquire (ASMX, 0xFFFF) == Zero))
                {
                    IDBF = STOH (Arg0)
                    \_SB.PCI0.SBRG.SIO1.ENFG (0x07)
                    LCKS = HMLK /* \AMW0.HMLK */
                    HMLK = Zero
                    Local0 = Zero
                    While ((Local0 < B_CT))
                    {
                        B_BK = DerefOf (IDBF [Local0])
                        Local0++
                        B_ID = DerefOf (IDBF [Local0])
                        Local0++
                        B_DT = DerefOf (IDBF [Local0])
                        Local0++
                        BANK = B_BK /* \AMW0.B_BK */
                        HIDX = B_ID /* \AMW0.B_ID */
                        HDAT = B_DT /* \AMW0.B_DT */
                    }

                    HMLK = LCKS /* \AMW0.LCKS */
                    \_SB.PCI0.SBRG.SIO1.EXFG ()
                    Release (ASMX)
                    Return (Zero)
                }

                Return (Ones)
            }

            Name (ECBK, Zero)
            Method (BREC, 1, Serialized)
            {
                Return (Ones)
            }

            Method (BWEC, 1, Serialized)
            {
                Return (Ones)
            }

            Method (WMBD, 3, Serialized)
            {
                Local0 = One
                Switch (Arg1)
                {
                    Case (0x424D5352)
                    {
                        Return (RSMB (Arg2))
                    }
                    Case (0x424D5357)
                    {
                        Return (WSMB (Arg2))
                    }
                    Case (0x574D5352)
                    {
                        Return (RSMW (Arg2))
                    }
                    Case (0x574D5357)
                    {
                        Return (WSMW (Arg2))
                    }
                    Case (0x4B4D5352)
                    {
                        Return (RSMK (Arg2))
                    }
                    Case (0x4B4D5357)
                    {
                        Return (WSMK (Arg2))
                    }
                    Case (0x52494F42)
                    {
                        Return (RIOB (Arg2))
                    }
                    Case (0x57494F42)
                    {
                        Return (WIOB (Arg2))
                    }
                    Case (0x52494F57)
                    {
                        Return (RIOW (Arg2))
                    }
                    Case (0x57494F57)
                    {
                        Return (WIOW (Arg2))
                    }
                    Case (0x52494F44)
                    {
                        Return (RIOD (Arg2))
                    }
                    Case (0x57494F44)
                    {
                        Return (WIOD (Arg2))
                    }
                    Case (0x524D454D)
                    {
                        Return (RMEM (Arg2))
                    }
                    Case (0x574D454D)
                    {
                        Return (WMEM (Arg2))
                    }
                    Case (0x52504349)
                    {
                        Return (RPCI (Arg2))
                    }
                    Case (0x57504349)
                    {
                        Return (WPCI (Arg2))
                    }
                    Case (0x52494458)
                    {
                        Return (RIDX (Arg2))
                    }
                    Case (0x57494458)
                    {
                        Return (WIDX (Arg2))
                    }
                    Case (0x52444D52)
                    {
                        Return (RDMR (Arg2))
                    }
                    Case (0x57524D52)
                    {
                        Return (WRMR (Arg2))
                    }
                    Case (0x52434944)
                    {
                        Return (RCID (Arg2))
                    }
                    Case (0x52444543)
                    {
                        Return (RDEC (Arg2))
                    }
                    Case (0x57524543)
                    {
                        Return (WREC (Arg2))
                    }
                    Case (0x5253494F)
                    {
                        Return (RSIO (Arg2))
                    }
                    Case (0x5753494F)
                    {
                        Return (WSIO (Arg2))
                    }
                    Case (0x5248574D)
                    {
                        Return (RHWM (Arg2))
                    }
                    Case (0x5748574D)
                    {
                        Return (WHWM (Arg2))
                    }
                    Case (0x4252494F)
                    {
                        Return (BRIO (Arg2))
                    }
                    Case (0x4257494F)
                    {
                        Return (BWIO (Arg2))
                    }
                    Case (0x4252484D)
                    {
                        Return (BRHM (Arg2))
                    }
                    Case (0x4257484D)
                    {
                        Return (BWHM (Arg2))
                    }
                    Case (0x42524543)
                    {
                        Return (BREC (Arg2))
                    }
                    Case (0x42574543)
                    {
                        Return (BWEC (Arg2))
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }

                Return (Local0)
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xD2))
                {
                    Return (EID2) /* \AMW0.EID2 */
                }

                Return (Zero)
            }

            Method (AMWR, 1, Serialized)
            {
                Local1 = Zero
                If (ECD2)
                {
                    EID2 = Arg0
                    Notify (AMW0, 0xD2) // Hardware-Specific
                    Local1 = One
                }
                Else
                {
                }

                Return (Local1)
            }

            Method (AMWN, 1, Serialized)
            {
                Local0 = AMWR (Arg0)
                Return (Local0)
            }

            Name (WQMO, Buffer (0x1C5F)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x4F, 0x1C, 0x00, 0x00, 0x82, 0xDA, 0x00, 0x00,  // O.......
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0xA8, 0x29, 0xA7, 0x00, 0x01, 0x06, 0x18, 0x42,  // .).....B
                /* 0020 */  0x10, 0x07, 0x10, 0x0A, 0x2A, 0x9A, 0x42, 0x04,  // ....*.B.
                /* 0028 */  0x0A, 0x0D, 0xA1, 0x38, 0x0A, 0x60, 0x30, 0x12,  // ...8.`0.
                /* 0030 */  0x20, 0x24, 0x07, 0x42, 0x2E, 0x98, 0x98, 0x00,  //  $.B....
                /* 0038 */  0x11, 0x10, 0xF2, 0x2A, 0xC0, 0xA6, 0x00, 0x93,  // ...*....
                /* 0040 */  0x20, 0xEA, 0xDF, 0x1F, 0xA2, 0x24, 0x38, 0x94,  //  ....$8.
                /* 0048 */  0x10, 0x08, 0x49, 0x14, 0x60, 0x5E, 0x80, 0x6E,  // ..I.`^.n
                /* 0050 */  0x01, 0x86, 0x05, 0xD8, 0x16, 0x60, 0x5A, 0x80,  // .....`Z.
                /* 0058 */  0x63, 0x48, 0x2A, 0x0D, 0x9C, 0x12, 0x58, 0x0A,  // cH*...X.
                /* 0060 */  0x84, 0x84, 0x0A, 0x50, 0x2E, 0xC0, 0xB7, 0x00,  // ...P....
                /* 0068 */  0xED, 0x88, 0x92, 0x2C, 0xC0, 0x32, 0x8C, 0x08,  // ...,.2..
                /* 0070 */  0x3C, 0x8A, 0xC8, 0x46, 0xE3, 0x04, 0x65, 0x43,  // <..F..eC
                /* 0078 */  0xA3, 0x64, 0x40, 0xC8, 0xB3, 0x00, 0xEB, 0xC0,  // .d@.....
                /* 0080 */  0x84, 0xC0, 0xEE, 0x05, 0x98, 0x13, 0xE0, 0x4D,  // .......M
                /* 0088 */  0x80, 0xB8, 0x61, 0xC8, 0xDA, 0x00, 0x04, 0x55,  // ..a....U
                /* 0090 */  0x98, 0x00, 0x5B, 0x30, 0x42, 0xA9, 0x0D, 0x46,  // ..[0B..F
                /* 0098 */  0x28, 0x8D, 0x21, 0x68, 0x18, 0x46, 0x89, 0x78,  // (.!h.F.x
                /* 00A0 */  0x48, 0x9D, 0xC1, 0x0A, 0x25, 0x62, 0x98, 0x10,  // H...%b..
                /* 00A8 */  0x11, 0x2A, 0xC3, 0x20, 0xC3, 0x0A, 0x15, 0x2D,  // .*. ...-
                /* 00B0 */  0x6E, 0x84, 0xF6, 0x07, 0x41, 0xA2, 0xAD, 0x58,  // n...A..X
                /* 00B8 */  0x43, 0x75, 0xA4, 0xD1, 0xA0, 0x86, 0x97, 0xE0,  // Cu......
                /* 00C0 */  0x70, 0x3D, 0xD4, 0x73, 0xEC, 0x5C, 0x80, 0x74,  // p=.s.\.t
                /* 00C8 */  0x60, 0x81, 0x04, 0x3F, 0x8B, 0x3A, 0xC7, 0x49,  // `..?.:.I
                /* 00D0 */  0x40, 0x12, 0x18, 0xEB, 0xF8, 0xD9, 0xC0, 0xF1,  // @.......
                /* 00D8 */  0xAE, 0x01, 0x35, 0xE3, 0xE3, 0x65, 0x82, 0xE0,  // ..5..e..
                /* 00E0 */  0x50, 0x43, 0xF4, 0x40, 0xC3, 0x9D, 0xC0, 0x21,  // PC.@...!
                /* 00E8 */  0x32, 0x40, 0xCF, 0xE9, 0x68, 0x30, 0x07, 0x00,  // 2@..h0..
                /* 00F0 */  0x3B, 0x9C, 0x8C, 0xEE, 0x01, 0xA5, 0x0A, 0x30,  // ;......0
                /* 00F8 */  0x3B, 0x66, 0x59, 0x04, 0xD2, 0x78, 0x0C, 0x7D,  // ;fY..x.}
                /* 0100 */  0xBA, 0xE7, 0x73, 0xC2, 0x09, 0x2C, 0x7F, 0x10,  // ..s..,..
                /* 0108 */  0xA8, 0x91, 0x19, 0xDA, 0x06, 0xA7, 0x25, 0xCC,  // ......%.
                /* 0110 */  0x90, 0x87, 0x7F, 0x58, 0x4C, 0x2C, 0x84, 0x3E,  // ...XL,.>
                /* 0118 */  0x08, 0x1E, 0x0F, 0xBC, 0xFF, 0xFF, 0x78, 0xC0,  // ......x.
                /* 0120 */  0xA3, 0xF8, 0x4C, 0x20, 0x84, 0x57, 0x82, 0xD8,  // ..L .W..
                /* 0128 */  0x1E, 0xD0, 0x73, 0x82, 0x81, 0xB1, 0x03, 0xB2,  // ..s.....
                /* 0130 */  0x5F, 0x01, 0x08, 0xC1, 0xCB, 0x1C, 0x91, 0x9C,  // _.......
                /* 0138 */  0x22, 0x68, 0x4C, 0xC6, 0x68, 0x15, 0x42, 0x43,  // "hL.h.BC
                /* 0140 */  0x08, 0x6D, 0x88, 0xB3, 0x8B, 0x7F, 0xF0, 0x86,  // .m......
                /* 0148 */  0x39, 0x77, 0x13, 0x14, 0x39, 0x02, 0x94, 0x98,  // 9w..9...
                /* 0150 */  0x11, 0xA0, 0x8E, 0x01, 0xD1, 0x43, 0x9F, 0x4D,  // .....C.M
                /* 0158 */  0xF4, 0xE3, 0x89, 0x72, 0x12, 0x07, 0xE4, 0x33,  // ...r...3
                /* 0160 */  0x83, 0x11, 0x82, 0x97, 0x7B, 0x48, 0x20, 0x9A,  // ....{H .
                /* 0168 */  0xE7, 0xA0, 0x13, 0xC3, 0x39, 0x1D, 0x02, 0x13,  // ....9...
                /* 0170 */  0xC4, 0xF3, 0x3C, 0x41, 0xA2, 0x2C, 0x55, 0x36,  // ..<A.,U6
                /* 0178 */  0x96, 0xEA, 0x41, 0x50, 0x41, 0x40, 0x9A, 0xBB,  // ..APA@..
                /* 0180 */  0x21, 0x4E, 0xDA, 0xC8, 0x81, 0x63, 0x54, 0x3F,  // !N...cT?
                /* 0188 */  0x6C, 0x2A, 0x02, 0x4E, 0x87, 0x0D, 0x8F, 0xDB,  // l*.N....
                /* 0190 */  0xF1, 0x49, 0x14, 0x7D, 0x40, 0x14, 0xCE, 0x61,  // .I.}@..a
                /* 0198 */  0xCF, 0x1C, 0x14, 0xC4, 0x80, 0x4E, 0x02, 0x21,  // .....N.!
                /* 01A0 */  0x27, 0x47, 0x01, 0x94, 0x96, 0x71, 0x92, 0x71,  // 'G...q.q
                /* 01A8 */  0x9D, 0xDA, 0x9B, 0x80, 0xA7, 0xF5, 0x58, 0x70,  // ......Xp
                /* 01B0 */  0x18, 0xC7, 0x75, 0xD6, 0x7E, 0x7E, 0xF8, 0xC6,  // ..u.~~..
                /* 01B8 */  0xE0, 0xF9, 0xF8, 0x2E, 0xC0, 0x35, 0x40, 0x68,  // .....5@h
                /* 01C0 */  0x46, 0x86, 0xB7, 0x1A, 0x40, 0x0A, 0xC6, 0x4F,  // F...@..O
                /* 01C8 */  0x02, 0x8F, 0x00, 0x26, 0xB0, 0xAE, 0x03, 0x01,  // ...&....
                /* 01D0 */  0xF4, 0xCB, 0x86, 0x87, 0xEF, 0x13, 0xC6, 0xE3,  // ........
                /* 01D8 */  0x45, 0x82, 0xFA, 0xEE, 0x03, 0xA0, 0x00, 0xF2,  // E.......
                /* 01E0 */  0x01, 0xC0, 0x4A, 0xEF, 0x00, 0x74, 0x0C, 0x21,  // ..J..t.!
                /* 01E8 */  0xC2, 0x44, 0x33, 0x3A, 0x97, 0xB0, 0x52, 0xFD,  // .D3:..R.
                /* 01F0 */  0xFF, 0x47, 0xCB, 0x0F, 0x2A, 0x1E, 0xAD, 0x41,  // .G..*..A
                /* 01F8 */  0x3C, 0x5A, 0x07, 0x1A, 0x2D, 0xFA, 0x98, 0x61,  // <Z..-..a
                /* 0200 */  0x85, 0xA3, 0x92, 0xCF, 0x09, 0x68, 0xB8, 0x30,  // .....h.0
                /* 0208 */  0x08, 0x0A, 0x3F, 0x70, 0x40, 0x03, 0x3C, 0xBD,  // ..?p@.<.
                /* 0210 */  0x37, 0x03, 0xCF, 0xC4, 0x70, 0x9E, 0x2F, 0x87,  // 7...p./.
                /* 0218 */  0xF3, 0x7C, 0xF9, 0x70, 0x7C, 0xA0, 0x80, 0x3F,  // .|.p|..?
                /* 0220 */  0x60, 0x2C, 0x41, 0x81, 0x13, 0x06, 0x39, 0x3C,  // `,A...9<
                /* 0228 */  0x46, 0xF0, 0x60, 0xA9, 0xAC, 0x71, 0xA1, 0xEE,  // F.`..q..
                /* 0230 */  0x07, 0x3E, 0xD1, 0x30, 0xEC, 0x43, 0x3D, 0x9A,  // .>.0.C=.
                /* 0238 */  0xB7, 0x84, 0x33, 0x7C, 0x9B, 0x38, 0xA8, 0x77,  // ..3|.8.w
                /* 0240 */  0x0F, 0x3B, 0x15, 0x6A, 0xD1, 0x21, 0xAC, 0x47,  // .;.j.!.G
                /* 0248 */  0xCA, 0x61, 0x8D, 0x16, 0xF6, 0x80, 0x9F, 0x3B,  // .a.....;
                /* 0250 */  0x7C, 0xCF, 0xE0, 0x57, 0x1A, 0x1F, 0x43, 0xE8,  // |..W..C.
                /* 0258 */  0x2A, 0x74, 0xAA, 0xE0, 0xA2, 0x20, 0x14, 0x6F,  // *t... .o
                /* 0260 */  0x2D, 0x1A, 0xFE, 0x59, 0x78, 0x5C, 0xAF, 0x18,  // -..Yx\..
                /* 0268 */  0xBE, 0x02, 0x3C, 0x9C, 0xF8, 0x0C, 0x10, 0x3F,  // ..<....?
                /* 0270 */  0xD0, 0x11, 0xBC, 0x88, 0xF8, 0xEC, 0xE3, 0xCB,  // ........
                /* 0278 */  0x8B, 0x0F, 0x19, 0xEC, 0x64, 0xC1, 0x43, 0x50,  // ....d.CP
                /* 0280 */  0x28, 0xC6, 0xE1, 0x00, 0x25, 0x1C, 0x46, 0x70,  // (...%.Fp
                /* 0288 */  0x06, 0xF1, 0xF0, 0x1C, 0xE4, 0x70, 0x80, 0x3E,  // .....p.>
                /* 0290 */  0x07, 0x79, 0x20, 0x6C, 0x10, 0x06, 0x39, 0x8F,  // .y l..9.
                /* 0298 */  0x97, 0x1F, 0x76, 0xB1, 0xC0, 0xFF, 0xFF, 0x2F,  // ..v..../
                /* 02A0 */  0x16, 0xC0, 0x2B, 0xCD, 0xA0, 0xD0, 0x7A, 0x06,  // ..+...z.
                /* 02A8 */  0x05, 0x01, 0xE3, 0xF9, 0xC1, 0xE3, 0xF5, 0x6C,  // .......l
                /* 02B0 */  0x3D, 0x2D, 0xF0, 0x8E, 0xD8, 0xE7, 0x0F, 0xE0,  // =-......
                /* 02B8 */  0x1C, 0xFE, 0xF0, 0x82, 0x8A, 0x3B, 0x24, 0x0A,  // .....;$.
                /* 02C0 */  0xE2, 0xB3, 0x81, 0xA3, 0x8C, 0x17, 0x3D, 0x13,  // ......=.
                /* 02C8 */  0x1F, 0x86, 0x7C, 0x5C, 0x78, 0xBA, 0xC1, 0x1C,  // ..|\x...
                /* 02D0 */  0x3E, 0xC0, 0x3D, 0x12, 0x1F, 0x3E, 0x80, 0xC7,  // >.=..>..
                /* 02D8 */  0xFF, 0xFF, 0xF0, 0x01, 0xFC, 0x24, 0x5A, 0xD4,  // .....$Z.
                /* 02E0 */  0x2A, 0xF4, 0xF0, 0x01, 0xAE, 0x20, 0x27, 0x24,  // *.... '$
                /* 02E8 */  0xB4, 0x9C, 0xC3, 0x07, 0x72, 0x22, 0x61, 0xA2,  // ....r"a.
                /* 02F0 */  0xFB, 0x8C, 0xF4, 0xE2, 0x61, 0x09, 0x07, 0x0F,  // ....a...
                /* 02F8 */  0x54, 0x78, 0x12, 0xC5, 0x3F, 0x15, 0xA0, 0x02,  // Tx..?...
                /* 0300 */  0x9F, 0x0A, 0x28, 0x88, 0x01, 0x7D, 0xA8, 0x80,  // ..(..}..
                /* 0308 */  0x33, 0x83, 0x67, 0x2F, 0xCC, 0x3C, 0x60, 0x9C,  // 3.g/.<`.
                /* 0310 */  0x91, 0x00, 0x5B, 0x87, 0x0A, 0xF0, 0xFE, 0xFF,  // ..[.....
                /* 0318 */  0x0F, 0x15, 0xC0, 0xE1, 0x80, 0x04, 0xC8, 0x92,  // ........
                /* 0320 */  0x78, 0x41, 0x7A, 0xA8, 0x00, 0xD7, 0x81, 0xD3,  // xAz.....
                /* 0328 */  0x87, 0x0A, 0x7E, 0x92, 0xB3, 0x28, 0x20, 0x1D,  // ..~..( .
                /* 0330 */  0xF1, 0x7C, 0xA8, 0x80, 0x71, 0x11, 0x32, 0xFC,  // .|..q.2.
                /* 0338 */  0x2F, 0xDD, 0xB1, 0x3C, 0x87, 0x91, 0x73, 0x05,  // /..<..s.
                /* 0340 */  0x3A, 0xF6, 0xC1, 0x00, 0x15, 0x74, 0xF4, 0x14,  // :....t..
                /* 0348 */  0xC4, 0x80, 0x4E, 0x71, 0x30, 0x40, 0xEB, 0x38,  // ..Nq0@.8
                /* 0350 */  0x57, 0xA0, 0x8E, 0x71, 0xC0, 0xEF, 0xFF, 0x7F,  // W..q....
                /* 0358 */  0xA6, 0x00, 0x4E, 0x22, 0x8E, 0x56, 0xA8, 0xE1,  // ..N".V..
                /* 0360 */  0x7A, 0xAC, 0x06, 0xF1, 0x58, 0x7D, 0x0C, 0xF5,  // z...X}..
                /* 0368 */  0x58, 0x71, 0xDF, 0x00, 0x1F, 0x01, 0xF0, 0x47,  // Xq.....G
                /* 0370 */  0x27, 0x1C, 0xD8, 0x73, 0x05, 0x60, 0xDA, 0xE3,  // '..s.`..
                /* 0378 */  0xB9, 0x02, 0x74, 0xD2, 0xCE, 0x3E, 0xE8, 0x80,  // ..t..>..
                /* 0380 */  0x6B, 0xD5, 0x49, 0x0C, 0x7F, 0x8E, 0x63, 0x04,  // k.I...c.
                /* 0388 */  0x43, 0x1D, 0xDE, 0x28, 0x84, 0xE3, 0x50, 0x28,  // C..(..P(
                /* 0390 */  0xCC, 0xC9, 0x80, 0xFE, 0xFF, 0x8F, 0xB0, 0x04,  // ........
                /* 0398 */  0x8E, 0x82, 0x78, 0x68, 0x0E, 0x73, 0x86, 0x03,  // ..xh.s..
                /* 03A0 */  0xCD, 0xB1, 0x00, 0xDE, 0xAD, 0x82, 0x1D, 0x0B,  // ........
                /* 03A8 */  0x60, 0x13, 0xF8, 0x58, 0x00, 0xBE, 0x38, 0xC3,  // `..X..8.
                /* 03B0 */  0x42, 0x8F, 0xD6, 0xF7, 0x3F, 0xDC, 0xFD, 0x21,  // B...?..!
                /* 03B8 */  0xCA, 0x4B, 0xB1, 0x0F, 0x39, 0x70, 0xC7, 0x05,  // .K..9p..
                /* 03C0 */  0x8E, 0xD3, 0x03, 0xE0, 0xEA, 0x20, 0x26, 0xA7,  // ..... &.
                /* 03C8 */  0xA7, 0x07, 0x70, 0x25, 0x39, 0x3D, 0xA0, 0x06,  // ..p%9=..
                /* 03D0 */  0xEC, 0xFF, 0xBF, 0x1E, 0x20, 0x9D, 0x13, 0xB0,  // .... ...
                /* 03D8 */  0x17, 0x6D, 0x06, 0x71, 0xA2, 0xCF, 0x23, 0x56,  // .m.q..#V
                /* 03E0 */  0x70, 0xC4, 0x41, 0x65, 0x27, 0x51, 0xF2, 0x23,  // p.Ae'Q.#
                /* 03E8 */  0x0E, 0x2A, 0xEB, 0xD8, 0x29, 0x88, 0x01, 0x7D,  // .*..)..}
                /* 03F0 */  0xA2, 0x04, 0x7C, 0xDC, 0x71, 0x80, 0xC5, 0x46,  // ..|.q..F
                /* 03F8 */  0x3D, 0x59, 0x1E, 0x79, 0xB2, 0x14, 0xC4, 0x93,  // =Y.y....
                /* 0400 */  0xF5, 0xA5, 0x02, 0x38, 0xDC, 0x70, 0x80, 0xFD,  // ...8.p..
                /* 0408 */  0xFF, 0xFF, 0x52, 0x01, 0x94, 0x1C, 0x4A, 0xBD,  // ..R...J.
                /* 0410 */  0x54, 0x80, 0x4C, 0xDE, 0x0D, 0x07, 0x1D, 0x72,  // T.L....r
                /* 0418 */  0xAD, 0xBA, 0xD7, 0xB1, 0x63, 0xAB, 0xC7, 0xED,  // ....c...
                /* 0420 */  0x9B, 0x34, 0x26, 0xD8, 0x0D, 0x07, 0x15, 0x89,  // .4&.....
                /* 0428 */  0x42, 0x81, 0xCE, 0x05, 0xA8, 0x08, 0x70, 0x14,  // B.....p.
                /* 0430 */  0xC4, 0x43, 0xF3, 0xB9, 0xC0, 0x4A, 0xCE, 0x05,  // .C...J..
                /* 0438 */  0x68, 0xEF, 0x17, 0x0A, 0x32, 0x38, 0xDF, 0x0B,  // h...28..
                /* 0440 */  0x0C, 0x53, 0xFC, 0x50, 0x74, 0xEF, 0xF1, 0xB9,  // .S.Pt...
                /* 0448 */  0x00, 0xDC, 0x57, 0x1C, 0x70, 0x19, 0x13, 0xA0,  // ..W.p...
                /* 0450 */  0x0D, 0x92, 0xDC, 0xC3, 0x3D, 0x2E, 0xDC, 0x38,  // ....=..8
                /* 0458 */  0x3C, 0xAA, 0x63, 0x8A, 0xF9, 0x1C, 0x17, 0xE4,  // <.c.....
                /* 0460 */  0x39, 0xCE, 0xF3, 0xC2, 0x9D, 0x1F, 0x80, 0xDB,  // 9.......
                /* 0468 */  0xFF, 0x7F, 0x60, 0xB0, 0x2E, 0x5C, 0x40, 0x5C,  // ..`..\@\
                /* 0470 */  0xA8, 0x49, 0x89, 0xE7, 0x07, 0x70, 0xDD, 0xBA,  // .I...p..
                /* 0478 */  0x7D, 0x2F, 0xC4, 0x49, 0xB9, 0xBB, 0xA2, 0x30,  // }/.I...0
                /* 0480 */  0x5E, 0x49, 0x62, 0xF8, 0x9E, 0x6A, 0x6C, 0xC3,  // ^Ib..jl.
                /* 0488 */  0x1C, 0xC0, 0xA9, 0x18, 0x27, 0xC1, 0xE0, 0x67,  // ....'..g
                /* 0490 */  0x07, 0x3A, 0x2E, 0x47, 0x26, 0xD1, 0x6D, 0xDF,  // .:.G&.m.
                /* 0498 */  0x47, 0x08, 0x1E, 0x73, 0xF4, 0x14, 0xC4, 0x80,  // G..s....
                /* 04A0 */  0xCE, 0x70, 0x52, 0x41, 0xAB, 0x00, 0xD1, 0x14,  // .pRA....
                /* 04A8 */  0x30, 0x37, 0x57, 0xC0, 0xDF, 0xFF, 0xFF, 0xE6,  // 07W.....
                /* 04B0 */  0x0A, 0xB0, 0xC2, 0xA5, 0x42, 0x8D, 0x52, 0x8F,  // ....B.R.
                /* 04B8 */  0x14, 0xE0, 0xBA, 0x03, 0xFA, 0x16, 0x86, 0x93,  // ........
                /* 04C0 */  0x04, 0xA4, 0x2B, 0xEB, 0x69, 0x3C, 0x00, 0xF8,  // ..+.i<..
                /* 04C8 */  0x4A, 0x01, 0xE3, 0xE2, 0xC9, 0x8E, 0x38, 0xFC,  // J.....8.
                /* 04D0 */  0x76, 0xED, 0x63, 0x01, 0x30, 0xFF, 0xFF, 0x5F,  // v.c.0.._
                /* 04D8 */  0x09, 0xC1, 0x7A, 0x2C, 0x00, 0xDE, 0x22, 0x5D,  // ..z,.."]
                /* 04E0 */  0x5A, 0x34, 0x7B, 0x3F, 0x06, 0xD9, 0xB1, 0x00,  // Z4{?....
                /* 04E8 */  0x2D, 0x0A, 0x48, 0x1E, 0x67, 0x41, 0x86, 0xF6,  // -.H.gA..
                /* 04F0 */  0x58, 0xF6, 0xAA, 0xE7, 0x51, 0x3D, 0x03, 0x44,  // X...Q=.D
                /* 04F8 */  0x38, 0x91, 0x10, 0x09, 0x2C, 0xE3, 0x58, 0x80,  // 8...,.X.
                /* 0500 */  0xA2, 0xF0, 0x25, 0x1E, 0xEE, 0xCD, 0x13, 0xCE,  // ..%.....
                /* 0508 */  0x1C, 0x30, 0x53, 0x7E, 0x71, 0xE1, 0xE7, 0x02,  // .0S~q...
                /* 0510 */  0xC0, 0xCE, 0xFF, 0xFF, 0x5C, 0x00, 0x4C, 0x94,  // ....\.L.
                /* 0518 */  0x2A, 0xB5, 0x28, 0xF3, 0x7E, 0x0B, 0xDE, 0x01,  // *.(.~...
                /* 0520 */  0xFB, 0x7E, 0xEB, 0x73, 0x01, 0x53, 0x38, 0x0B,  // .~.s.S8.
                /* 0528 */  0x21, 0x04, 0xE9, 0xF3, 0x08, 0xA0, 0x13, 0x80,  // !.......
                /* 0530 */  0xCF, 0x05, 0xEC, 0xB0, 0xE6, 0x73, 0x01, 0x3F,  // .....s.?
                /* 0538 */  0x8C, 0x38, 0xCA, 0x79, 0x0D, 0x25, 0x1E, 0x8E,  // .8.y.%..
                /* 0540 */  0x82, 0xF8, 0x82, 0x0B, 0xEF, 0x5C, 0x00, 0x38,  // .....\.8
                /* 0548 */  0x18, 0x96, 0x81, 0xF9, 0xB0, 0xF8, 0x5C, 0xE1,  // ......\.
                /* 0550 */  0x1C, 0x85, 0x80, 0xDF, 0x55, 0xE1, 0xC9, 0xD2,  // ....U...
                /* 0558 */  0xE3, 0xF2, 0xFF, 0xFF, 0x30, 0xF7, 0xEC, 0x08,  // ....0...
                /* 0560 */  0xE4, 0x7D, 0x2A, 0xF4, 0x78, 0x7A, 0x00, 0x57,  // .}*.xz.W
                /* 0568 */  0x8E, 0xD3, 0x03, 0x5A, 0x0D, 0x90, 0x26, 0xF4,  // ...Z..&.
                /* 0570 */  0xF4, 0x00, 0x33, 0xFF, 0x51, 0x0D, 0x95, 0xFC,  // ..3.Q...
                /* 0578 */  0x7E, 0x0B, 0x8A, 0x73, 0x01, 0x38, 0x2E, 0x6B,  // ~..s.8.k
                /* 0580 */  0xC0, 0xEC, 0x56, 0x80, 0xBD, 0xAC, 0x01, 0x8B,  // ..V.....
                /* 0588 */  0x0B, 0x0E, 0xFC, 0xFF, 0xFF, 0xCD, 0x03, 0xF8,  // ........
                /* 0590 */  0x5D, 0x6F, 0x01, 0x59, 0x77, 0x8A, 0xD7, 0x5B,  // ]o.Yw..[
                /* 0598 */  0x90, 0x49, 0x5B, 0x85, 0xEE, 0x93, 0xB8, 0x80,  // .I[.....
                /* 05A0 */  0x6B, 0xD1, 0x05, 0x07, 0x0F, 0xFF, 0x80, 0xCB,  // k.......
                /* 05A8 */  0x75, 0x5E, 0x99, 0xC9, 0x21, 0xC0, 0x71, 0x4E,  // u^..!.qN
                /* 05B0 */  0xE1, 0xA8, 0x20, 0x14, 0x8A, 0x7D, 0x32, 0x40,  // .. ..}2@
                /* 05B8 */  0x05, 0x1D, 0x3D, 0x05, 0x31, 0xA0, 0x53, 0x5C,  // ..=.1.S\
                /* 05C0 */  0x5D, 0xD1, 0x3A, 0x6E, 0x5C, 0x9E, 0x82, 0x06,  // ].:n\...
                /* 05C8 */  0x71, 0x46, 0x67, 0xE5, 0x43, 0x05, 0xF8, 0xFF,  // qFg.C...
                /* 05D0 */  0xFF, 0xB7, 0x56, 0x30, 0x1D, 0x2A, 0x80, 0xC5,  // ..V0.*..
                /* 05D8 */  0xE5, 0x18, 0xEE, 0xA1, 0x02, 0xF0, 0x12, 0xE9,  // ........
                /* 05E0 */  0xDA, 0x82, 0xFE, 0x2C, 0xF8, 0xA2, 0x00, 0x7B,  // ...,...{
                /* 05E8 */  0x64, 0x60, 0x3F, 0x2E, 0xF8, 0x82, 0x04, 0x3C,  // d`?....<
                /* 05F0 */  0xFF, 0xFF, 0xA7, 0x0F, 0xF0, 0xEB, 0xBC, 0x20,  // ....... 
                /* 05F8 */  0x81, 0x4E, 0xDB, 0xE9, 0x03, 0x9D, 0xF0, 0x82,  // .N......
                /* 0600 */  0x84, 0x18, 0x55, 0xC8, 0x23, 0x31, 0xF0, 0x91,  // ..U.#1..
                /* 0608 */  0x3D, 0x17, 0x1A, 0xE1, 0xDD, 0xFC, 0x71, 0xC1,  // =.....q.
                /* 0610 */  0xE8, 0x26, 0x98, 0xE7, 0xF4, 0x81, 0x4A, 0x42,  // .&....JB
                /* 0618 */  0xA1, 0x24, 0x47, 0x08, 0x94, 0xF6, 0x23, 0x04,  // .$G...#.
                /* 0620 */  0x05, 0xF1, 0x75, 0x9D, 0x1F, 0x0E, 0xF0, 0x43,  // ..u....C
                /* 0628 */  0x7E, 0x1C, 0x78, 0x85, 0xF0, 0xA0, 0xD8, 0x44,  // ~.x....D
                /* 0630 */  0x60, 0xDC, 0x92, 0x80, 0xE7, 0x1D, 0xD5, 0xE3,  // `.......
                /* 0638 */  0xC2, 0x0D, 0xC6, 0xC7, 0x87, 0xB3, 0x3A, 0xA5,  // ......:.
                /* 0640 */  0xA3, 0x02, 0x1E, 0x53, 0xF6, 0xA8, 0xC0, 0xF4,  // ...S....
                /* 0648 */  0xFF, 0xBF, 0x4A, 0x01, 0x26, 0x6F, 0x1F, 0xE0,  // ..J.&o..
                /* 0650 */  0xB8, 0x4A, 0x01, 0x1E, 0xBC, 0x0A, 0x35, 0x78,  // .J....5x
                /* 0658 */  0x95, 0x02, 0x99, 0xB2, 0xDB, 0x07, 0x8A, 0xC3,  // ........
                /* 0660 */  0xF9, 0x6E, 0x1F, 0x08, 0xAB, 0x87, 0x7D, 0x72,  // .n....}r
                /* 0668 */  0x02, 0x78, 0x7F, 0x80, 0x71, 0xF9, 0x00, 0xCB,  // .x..q...
                /* 0670 */  0xFF, 0xFF, 0xF2, 0x01, 0xF0, 0xFF, 0xFF, 0x7F,  // ........
                /* 0678 */  0xF9, 0x00, 0x4C, 0x59, 0xBD, 0x7C, 0x80, 0x4C,  // ..LY.|.L
                /* 0680 */  0xE0, 0xE5, 0x03, 0x35, 0x52, 0xC7, 0x3C, 0x17,  // ...5R.<.
                /* 0688 */  0x22, 0x86, 0x16, 0xE3, 0x09, 0xE1, 0xF5, 0xA1,  // ".......
                /* 0690 */  0x63, 0x01, 0xE6, 0x8F, 0x86, 0x00, 0x05, 0xFE,  // c.......
                /* 0698 */  0xFF, 0x47, 0x43, 0x80, 0xE7, 0x62, 0x0F, 0x20,  // .GC..b. 
                /* 06A0 */  0xD0, 0xFE, 0xFF, 0x07, 0x10, 0x78, 0xC2, 0x8E,  // .....x..
                /* 06A8 */  0x86, 0xE8, 0x78, 0x6B, 0x11, 0xF0, 0xB3, 0xD0,  // ..xk....
                /* 06B0 */  0xFB, 0x07, 0x9C, 0x63, 0xC8, 0xEB, 0x82, 0x07,  // ...c....
                /* 06B8 */  0xFF, 0x0C, 0xE0, 0x30, 0xA7, 0x0F, 0x54, 0x8C,  // ...0..T.
                /* 06C0 */  0xD3, 0x07, 0xA0, 0x3B, 0xCE, 0xE9, 0x03, 0x15,  // ...;....
                /* 06C8 */  0xE0, 0xF4, 0x41, 0x41, 0x7C, 0xFA, 0x00, 0xDC,  // ..AA|...
                /* 06D0 */  0xFC, 0xFF, 0x03, 0x0D, 0x05, 0x35, 0x2C, 0x8F,  // .....5,.
                /* 06D8 */  0xC3, 0x47, 0x05, 0xFC, 0x41, 0x01, 0x77, 0xF8,  // .G..A.w.
                /* 06E0 */  0x00, 0x7E, 0x8A, 0x4F, 0x11, 0xE4, 0xBE, 0xE0,  // .~.O....
                /* 06E8 */  0x23, 0x83, 0x0F, 0x1F, 0xC0, 0xDC, 0xEC, 0xE1,  // #.......
                /* 06F0 */  0x03, 0x74, 0xE2, 0x0E, 0x1F, 0x28, 0x51, 0x10,  // .t...(Q.
                /* 06F8 */  0x8A, 0x78, 0x98, 0x82, 0x7E, 0xB8, 0xF3, 0xF1,  // .x..~...
                /* 0700 */  0xD0, 0xC7, 0x07, 0x72, 0x94, 0x02, 0xEA, 0xFF,  // ...r....
                /* 0708 */  0xFF, 0xA3, 0x14, 0xC0, 0xA3, 0x9B, 0x02, 0xFC,  // ........
                /* 0710 */  0xA3, 0x14, 0xE0, 0xE5, 0xFF, 0x7F, 0xFC, 0x00,  // ........
                /* 0718 */  0x3E, 0x82, 0x8F, 0x52, 0xA0, 0x3E, 0x7E, 0xF8,  // >..R.>~.
                /* 0720 */  0x28, 0xE5, 0x6B, 0x2E, 0x3B, 0x7E, 0x80, 0x21,  // (.k.;~.!
                /* 0728 */  0xCA, 0xF1, 0x03, 0x15, 0x82, 0x42, 0x21, 0xCE,  // .....B!.
                /* 0730 */  0x10, 0x28, 0xD9, 0x67, 0x08, 0x0A, 0xE2, 0xE1,  // .(.g....
                /* 0738 */  0xF9, 0xF8, 0x01, 0x98, 0x38, 0x0B, 0xC3, 0x19,  // ....8...
                /* 0740 */  0x2B, 0xFC, 0x63, 0x2E, 0x30, 0xFB, 0xFF, 0x1F,  // +.c.0...
                /* 0748 */  0x73, 0x01, 0xFE, 0x19, 0x3E, 0x7C, 0x80, 0x2E,  // s...>|..
                /* 0750 */  0xD4, 0x3A, 0x74, 0xF8, 0xC0, 0x49, 0x3B, 0x7C,  // .:t..I;|
                /* 0758 */  0x20, 0x8E, 0x0F, 0x30, 0x90, 0x9E, 0xCF, 0xB0,  //  ..0....
                /* 0760 */  0x32, 0x0E, 0x1F, 0x28, 0x0A, 0x42, 0xA3, 0xFF,  // 2..(.B..
                /* 0768 */  0xFF, 0xD1, 0x80, 0x47, 0x3E, 0x1A, 0x50, 0x10,  // ...G>.P.
                /* 0770 */  0xB3, 0x39, 0xCF, 0xCD, 0x02, 0xAD, 0xE8, 0x0C,  // .9......
                /* 0778 */  0x8A, 0x9C, 0x08, 0xBC, 0x53, 0x3B, 0xF0, 0x3C,  // ....S;.<
                /* 0780 */  0x5A, 0x00, 0x16, 0xCF, 0x53, 0xE0, 0x3C, 0x5A,  // Z...S.<Z
                /* 0788 */  0x00, 0x9F, 0xFF, 0xFF, 0xD1, 0x02, 0x3C, 0x1E,  // ......<.
                /* 0790 */  0x7D, 0x2A, 0x3C, 0x5A, 0x80, 0xEC, 0xCC, 0xE9,  // }*<Z....
                /* 0798 */  0xA3, 0x05, 0x1F, 0xB0, 0x45, 0x01, 0x69, 0x62,  // ....E.ib
                /* 07A0 */  0x07, 0xF1, 0xA4, 0x13, 0xF1, 0x7C, 0x83, 0xD6,  // .....|..
                /* 07A8 */  0x8C, 0xA2, 0x71, 0x86, 0x0F, 0xFD, 0x2C, 0x99,  // ..q...,.
                /* 07B0 */  0xC0, 0x32, 0x0E, 0x47, 0x14, 0xC2, 0x14, 0x3E,  // .2.G...>
                /* 07B8 */  0x17, 0x00, 0xFF, 0xE3, 0x3B, 0x3F, 0x17, 0x00,  // ....;?..
                /* 07C0 */  0x8E, 0xA4, 0x6A, 0x94, 0x28, 0xF3, 0x5C, 0x00,  // ..j.(.\.
                /* 07C8 */  0xAE, 0x0C, 0x27, 0x18, 0xD4, 0xFF, 0x1F, 0xD6,  // ..'.....
                /* 07D0 */  0x4A, 0x4E, 0x30, 0x08, 0x8D, 0xB7, 0x02, 0x1D,  // JN0.....
                /* 07D8 */  0x0A, 0x9E, 0x61, 0x30, 0x04, 0xD3, 0x1F, 0x0B,  // ..a0....
                /* 07E0 */  0xE8, 0xA0, 0x9C, 0x9B, 0x44, 0xB9, 0x8F, 0x05,  // ....D...
                /* 07E8 */  0xA8, 0xA4, 0xC7, 0x02, 0x0A, 0xE2, 0xC3, 0x32,  // .......2
                /* 07F0 */  0x81, 0x90, 0x91, 0x63, 0x01, 0xEA, 0x30, 0xE6,  // ...c..0.
                /* 07F8 */  0x61, 0x30, 0xAD, 0xC3, 0xD0, 0x98, 0x0E, 0xFE,  // a0......
                /* 0800 */  0xAD, 0xC0, 0xD7, 0x85, 0x27, 0x17, 0xF0, 0x8E,  // ....'...
                /* 0808 */  0xD4, 0x87, 0x02, 0x70, 0x88, 0xBB, 0xB8, 0x00,  // ...p....
                /* 0810 */  0x54, 0xF9, 0xFF, 0xDF, 0x28, 0x80, 0x89, 0xC2,  // T...(...
                /* 0818 */  0x1F, 0xC5, 0x8B, 0x0B, 0xC8, 0x04, 0x5D, 0xE4,  // ......].
                /* 0820 */  0xD1, 0xB1, 0x6E, 0x14, 0x88, 0x83, 0x54, 0xE8,  // ..n...T.
                /* 0828 */  0x18, 0x47, 0x72, 0x1C, 0x91, 0x9F, 0x5D, 0xB0,  // .Gr...].
                /* 0830 */  0x04, 0xBE, 0x2A, 0xFA, 0x52, 0xC1, 0xE5, 0x53,  // ..*.R..S
                /* 0838 */  0x48, 0xFE, 0x0D, 0x0B, 0x25, 0xF8, 0x6E, 0x41,  // H...%.nA
                /* 0840 */  0x41, 0x3C, 0x3A, 0x27, 0xB9, 0x61, 0xA1, 0xB5,  // A<:'.a..
                /* 0848 */  0x80, 0x68, 0x1E, 0x38, 0x9D, 0xD3, 0xD0, 0xB4,  // .h.8....
                /* 0850 */  0x7C, 0xBD, 0x02, 0xA6, 0x21, 0x6E, 0x0F, 0x68,  // |...!n.h
                /* 0858 */  0x19, 0x20, 0xBA, 0x77, 0xE0, 0xAE, 0x8A, 0xC0,  // . .w....
                /* 0860 */  0xEC, 0xE8, 0x80, 0x3D, 0x78, 0xF0, 0xFF, 0xFF,  // ...=x...
                /* 0868 */  0x55, 0x11, 0x60, 0xDA, 0xCD, 0x48, 0x57, 0x45,  // U.`..HWE
                /* 0870 */  0xB0, 0x5D, 0xC0, 0x50, 0x57, 0x45, 0x02, 0xA4,  // .].PWE..
                /* 0878 */  0x9B, 0x11, 0xE6, 0xEA, 0x1A, 0xE4, 0x11, 0xC0,  // ........
                /* 0880 */  0x07, 0xC2, 0xE3, 0x0A, 0xF5, 0x74, 0xE4, 0xC9,  // .....t..
                /* 0888 */  0xBC, 0x04, 0xF0, 0x3B, 0x18, 0xB8, 0xFE, 0xFF,  // ...;....
                /* 0890 */  0x77, 0x30, 0x80, 0x11, 0x36, 0x8F, 0x38, 0x40,  // w0..6.8@
                /* 0898 */  0xE4, 0x7C, 0x63, 0xED, 0x23, 0xD1, 0xD9, 0x20,  // .|c.#.. 
                /* 08A0 */  0xC8, 0x23, 0x80, 0xC1, 0x7D, 0x0B, 0xF0, 0x10,  // .#..}...
                /* 08A8 */  0x1E, 0x71, 0x80, 0xC3, 0x3C, 0x70, 0x47, 0x1C,  // .q..<pG.
                /* 08B0 */  0x30, 0xFF, 0xFF, 0x8F, 0x38, 0x00, 0xFF, 0xFF,  // 0...8...
                /* 08B8 */  0xFF, 0x07, 0x0F, 0x30, 0xCA, 0x94, 0xEA, 0x50,  // ...0...P
                /* 08C0 */  0xE2, 0xC1, 0x03, 0x5C, 0x12, 0x25, 0x5C, 0x59,  // ...\.%\Y
                /* 08C8 */  0xB1, 0x41, 0x57, 0xA2, 0xD3, 0xF3, 0x23, 0x0E,  // .AW...#.
                /* 08D0 */  0x87, 0x3D, 0xB0, 0x97, 0x0E, 0x1F, 0x31, 0x7C,  // .=....1|
                /* 08D8 */  0xC6, 0x49, 0xE0, 0x68, 0x80, 0x3A, 0x76, 0xF0,  // .I.h.:v.
                /* 08E0 */  0x50, 0x30, 0x8A, 0x7D, 0x2E, 0x40, 0x05, 0x3D,  // P0.}.@.=
                /* 08E8 */  0x17, 0x50, 0x10, 0x03, 0x3A, 0xC5, 0x65, 0x12,  // .P..:.e.
                /* 08F0 */  0x3D, 0x64, 0xCF, 0x82, 0x4D, 0xF5, 0x1C, 0x4E,  // =d..M..N
                /* 08F8 */  0xEA, 0x61, 0x12, 0xF0, 0x15, 0x6E, 0x95, 0x1A,  // .a...n..
                /* 0900 */  0x2B, 0x8F, 0x73, 0x70, 0xA1, 0x20, 0xB6, 0x70,  // +.sp. .p
                /* 0908 */  0xA4, 0x00, 0x62, 0xFF, 0xFF, 0xC3, 0x24, 0x30,  // ..b...$0
                /* 0910 */  0x08, 0x72, 0xAE, 0x41, 0x5F, 0x59, 0x7C, 0xA6,  // .r.A_Y|.
                /* 0918 */  0xC2, 0x1D, 0x3B, 0x80, 0xDF, 0xB1, 0x06, 0x3B,  // ..;....;
                /* 0920 */  0x74, 0x58, 0xD7, 0x69, 0x7B, 0xC7, 0x10, 0xE6,  // tX.i{...
                /* 0928 */  0x53, 0x86, 0x8F, 0x90, 0x6C, 0x58, 0xE0, 0x86,  // S...lX..
                /* 0930 */  0xF2, 0xD0, 0xC1, 0x17, 0x65, 0xE8, 0x68, 0x68,  // ....e.hh
                /* 0938 */  0xA3, 0xBE, 0x1F, 0xF8, 0x62, 0x11, 0xF5, 0xF9,  // ....b...
                /* 0940 */  0xC3, 0xA3, 0x02, 0xFB, 0x4F, 0x44, 0x63, 0x07,  // ....ODc.
                /* 0948 */  0xE1, 0x09, 0xE6, 0xFF, 0xFF, 0x04, 0x03, 0xAC,  // ........
                /* 0950 */  0x75, 0x1A, 0xD4, 0xE8, 0xF1, 0x04, 0x03, 0x2E,  // u.......
                /* 0958 */  0x51, 0x27, 0x18, 0xF4, 0xC9, 0xC5, 0x67, 0x3E,  // Q'....g>
                /* 0960 */  0xCC, 0x09, 0x06, 0x46, 0x98, 0x13, 0x0C, 0x2A,  // ...F...*
                /* 0968 */  0x06, 0x8C, 0x62, 0x1C, 0x43, 0x50, 0xC2, 0x8F,  // ..b.CP..
                /* 0970 */  0x21, 0x14, 0xC4, 0xC7, 0x10, 0x9F, 0x60, 0x00,  // !.....`.
                /* 0978 */  0x13, 0x19, 0x2E, 0x0E, 0x68, 0x15, 0x57, 0x10,  // ....h.W.
                /* 0980 */  0xE4, 0x25, 0x0C, 0x58, 0xFD, 0xFF, 0x6F, 0x0D,  // .%.X..o.
                /* 0988 */  0x30, 0x72, 0x1C, 0x40, 0xD0, 0x37, 0x74, 0x1F,  // 0r.@.7t.
                /* 0990 */  0x40, 0x60, 0xCC, 0x09, 0xAC, 0x87, 0x02, 0x1F,  // @`......
                /* 0998 */  0xD4, 0xC0, 0x76, 0x8A, 0xF7, 0xED, 0x03, 0xFE,  // ..v.....
                /* 09A0 */  0x98, 0xC0, 0x8A, 0xE4, 0x69, 0x83, 0xED, 0x2C,  // ....i..,
                /* 09A8 */  0x07, 0x58, 0x3C, 0xBA, 0x60, 0xFF, 0xFF, 0x67,  // .X<.`..g
                /* 09B0 */  0x39, 0xC0, 0xCE, 0xD1, 0x45, 0x67, 0x39, 0x90,  // 9...Eg9.
                /* 09B8 */  0xE9, 0xFF, 0x27, 0xE8, 0x4C, 0x8A, 0x53, 0x01,  // ..'.L.S.
                /* 09C0 */  0xA4, 0xB3, 0x1C, 0x1B, 0xC7, 0x4B, 0x8A, 0x87,  // .....K..
                /* 09C8 */  0xF9, 0x62, 0xE9, 0x7B, 0x0A, 0x1B, 0x5F, 0x9C,  // .b.{.._.
                /* 09D0 */  0xA7, 0x80, 0x17, 0xD0, 0x87, 0x00, 0x67, 0x7E,  // ......g~
                /* 09D8 */  0xB2, 0xE8, 0xF0, 0xC2, 0xD3, 0xC2, 0x48, 0xF9,  // ......H.
                /* 09E0 */  0x99, 0x14, 0xA5, 0xF5, 0x4C, 0x4A, 0x41, 0x3C,  // ....LJA<
                /* 09E8 */  0x3A, 0x1F, 0x5E, 0x00, 0x9B, 0xFF, 0xFF, 0xC3,  // :.^.....
                /* 09F0 */  0x0B, 0x30, 0xB8, 0x75, 0x00, 0x0B, 0xC9, 0xBF,  // .0.u....
                /* 09F8 */  0x0A, 0x5D, 0x06, 0xB8, 0x48, 0x18, 0x0D, 0xC9,  // .]..H...
                /* 0A00 */  0x20, 0x06, 0xF4, 0x85, 0x14, 0xF0, 0x72, 0xDD,  //  .....r.
                /* 0A08 */  0xF3, 0x95, 0x01, 0x7F, 0xF5, 0x61, 0xA7, 0x72,  // .....a.r
                /* 0A10 */  0xDF, 0x2C, 0x4C, 0xF0, 0xAC, 0xEC, 0x9B, 0x1C,  // .,L.....
                /* 0A18 */  0xB8, 0x0F, 0x0D, 0xE0, 0x1A, 0x14, 0xCC, 0x41,  // .......A
                /* 0A20 */  0x9C, 0x8B, 0xCF, 0x5D, 0x1E, 0x14, 0xFE, 0xFF,  // ...]....
                /* 0A28 */  0x7F, 0x7D, 0x01, 0xDF, 0xA0, 0xC0, 0x0F, 0x1B,  // .}......
                /* 0A30 */  0xF0, 0xDD, 0xE0, 0xC0, 0x81, 0xC5, 0xFD, 0xCC,  // ........
                /* 0A38 */  0x83, 0x02, 0x16, 0x03, 0x07, 0x16, 0x37, 0x10,  // ......7.
                /* 0A40 */  0x0F, 0x0A, 0x5C, 0x97, 0x46, 0x0F, 0x0A, 0x77,  // ..\.F..w
                /* 0A48 */  0xCC, 0xB0, 0x48, 0x40, 0xDD, 0x42, 0x9E, 0x4F,  // ..H@.B.O
                /* 0A50 */  0x4E, 0x1C, 0x33, 0x2A, 0xB0, 0x7B, 0x18, 0x15,  // N.3*.{..
                /* 0A58 */  0xF4, 0xFF, 0xFF, 0xA8, 0xC0, 0x35, 0x73, 0xCC,  // .....5s.
                /* 0A60 */  0xA8, 0xC0, 0x0E, 0xE3, 0x51, 0x81, 0xEB, 0x3E,  // ....Q..>
                /* 0A68 */  0x05, 0xBC, 0xB5, 0x3A, 0xBC, 0x59, 0x82, 0x4D,  // ...:.Y.M
                /* 0A70 */  0xEB, 0x7D, 0x0A, 0x9D, 0xF8, 0x61, 0xA1, 0x9B,  // .}...a..
                /* 0A78 */  0x25, 0xBB, 0x4F, 0xC1, 0xCE, 0x77, 0x9F, 0x42,  // %.O..w.B
                /* 0A80 */  0x25, 0x83, 0x51, 0xB2, 0x33, 0x0F, 0x2A, 0xCB,  // %.Q.3.*.
                /* 0A88 */  0x99, 0x87, 0x82, 0xD8, 0xC4, 0x7D, 0x0A, 0x28,  // .....}.(
                /* 0A90 */  0xFD, 0xFF, 0xEF, 0x53, 0x80, 0xBF, 0x41, 0xC3,  // ...S..A.
                /* 0A98 */  0x39, 0x11, 0xE1, 0x07, 0x0D, 0xD6, 0xAB, 0x03,  // 9.......
                /* 0AA0 */  0x1F, 0x34, 0x78, 0xA6, 0x04, 0xF3, 0xF8, 0x81,  // .4x.....
                /* 0AA8 */  0x99, 0x12, 0x58, 0x8F, 0x4C, 0xE0, 0x9B, 0x12,  // ..X.L...
                /* 0AB0 */  0x9C, 0xE3, 0x10, 0x7E, 0x4A, 0xFC, 0xFF, 0x3F,  // ...~J..?
                /* 0AB8 */  0x25, 0xB0, 0x5D, 0x98, 0xC0, 0x37, 0x25, 0x98,  // %.]..7%.
                /* 0AC0 */  0xA3, 0x06, 0xFF, 0x79, 0x09, 0x7C, 0x47, 0x58,  // ...y.|GX
                /* 0AC8 */  0x4F, 0x09, 0x77, 0xCB, 0xF5, 0x59, 0x08, 0xC6,  // O.w..Y..
                /* 0AD0 */  0x98, 0xC0, 0x7A, 0x5C, 0x02, 0xDF, 0x98, 0xE0,  // ..z\....
                /* 0AD8 */  0x0E, 0x1B, 0xFC, 0x87, 0x25, 0xF0, 0xFD, 0xFF,  // ....%...
                /* 0AE0 */  0x4F, 0xB9, 0x80, 0x45, 0x18, 0x9F, 0x72, 0x01,  // O..E..r.
                /* 0AE8 */  0x4F, 0xB7, 0x28, 0x9D, 0x72, 0x41, 0x96, 0x66,  // O.(.rA.f
                /* 0AF0 */  0x1D, 0x3A, 0xEF, 0xE3, 0x34, 0x01, 0x69, 0x64,  // .:..4.id
                /* 0AF8 */  0x27, 0x11, 0xF1, 0x5D, 0xBF, 0xEB, 0x79, 0xE9,  // '..]..y.
                /* 0B00 */  0xBC, 0xD4, 0x39, 0x82, 0x6E, 0x32, 0xEF, 0x00,  // ..9.n2..
                /* 0B08 */  0x86, 0xB6, 0x8A, 0x83, 0x3E, 0x1D, 0x95, 0xF3,  // ....>...
                /* 0B10 */  0x93, 0x28, 0xFF, 0xB9, 0x00, 0x95, 0xF8, 0x5C,  // .(.....\
                /* 0B18 */  0x40, 0x41, 0x0C, 0xE8, 0x38, 0x02, 0xFE, 0xFF,  // @A..8...
                /* 0B20 */  0x27, 0x24, 0xEC, 0x4E, 0x7C, 0xAD, 0x62, 0x08,  // '$.N|.b.
                /* 0B28 */  0x87, 0xC4, 0x06, 0x02, 0xE3, 0x9A, 0x04, 0x56,  // .......V
                /* 0B30 */  0x02, 0xDF, 0xC5, 0x01, 0xE7, 0x83, 0xF1, 0xB5,  // ........
                /* 0B38 */  0x02, 0x70, 0xF3, 0xFF, 0xBF, 0x56, 0xE0, 0xBC,  // .p...V..
                /* 0B40 */  0x0A, 0xB5, 0xE8, 0xF0, 0x5A, 0x01, 0x2E, 0x41,  // ....Z..A
                /* 0B48 */  0xAB, 0xD0, 0xB5, 0x02, 0x17, 0x6B, 0x2D, 0xBA,  // .....k-.
                /* 0B50 */  0x8B, 0x33, 0x9F, 0xD0, 0xC2, 0x38, 0x92, 0xE3,  // .3...8..
                /* 0B58 */  0x88, 0x7C, 0xC8, 0x2F, 0x10, 0x61, 0x42, 0x3C,  // .|./.aB<
                /* 0B60 */  0x90, 0xEA, 0x5A, 0x81, 0x8A, 0x40, 0xA1, 0xE8,  // ..Z..@..
                /* 0B68 */  0xE7, 0x02, 0x54, 0xD8, 0xB1, 0x53, 0x10, 0x03,  // ..T..S..
                /* 0B70 */  0x3A, 0xC9, 0xB5, 0x02, 0xAD, 0x05, 0x44, 0xB3,  // :.....D.
                /* 0B78 */  0xC0, 0xE9, 0x9C, 0x84, 0x26, 0xE5, 0x43, 0x05,  // ....&.C.
                /* 0B80 */  0xE0, 0x2B, 0xC6, 0x35, 0x1E, 0x25, 0xFC, 0x1A,  // .+.5.%..
                /* 0B88 */  0x4F, 0x41, 0x3C, 0x31, 0x1F, 0x2A, 0x80, 0xF3,  // OA<1.*..
                /* 0B90 */  0xFF, 0xFF, 0xA8, 0x0D, 0x9E, 0x61, 0xE1, 0x64,  // .....a.d
                /* 0B98 */  0xDC, 0x70, 0x7C, 0xC6, 0x24, 0xA8, 0x8F, 0xE3,  // .p|.$...
                /* 0BA0 */  0xC0, 0xF9, 0xE0, 0x01, 0xBC, 0x25, 0xFA, 0x94,  // .....%..
                /* 0BA8 */  0x7A, 0x68, 0x05, 0x99, 0x98, 0x83, 0x07, 0x3A,  // zh.....:
                /* 0BB0 */  0xD2, 0x5A, 0x74, 0x68, 0x65, 0x07, 0x0F, 0x58,  // .Zthe..X
                /* 0BB8 */  0x21, 0x0E, 0x1E, 0x28, 0xF9, 0x14, 0x92, 0x7F,  // !..(....
                /* 0BC0 */  0x76, 0x40, 0x09, 0x3E, 0x3B, 0x50, 0x10, 0x8F,  // v@.>;P..
                /* 0BC8 */  0xCD, 0x07, 0x0F, 0xE0, 0xF1, 0xFF, 0x3F, 0x78,  // ......?x
                /* 0BD0 */  0x00, 0x93, 0x10, 0x37, 0x07, 0xE8, 0x97, 0x56,  // ...7...V
                /* 0BD8 */  0x60, 0x76, 0x70, 0xC0, 0x1E, 0x9F, 0x00, 0x8B,  // `vp.....
                /* 0BE0 */  0xC7, 0x0E, 0xE0, 0xF9, 0xFF, 0x3F, 0x76, 0x00,  // .....?v.
                /* 0BE8 */  0x0D, 0xA7, 0xC7, 0x0E, 0x70, 0xC5, 0x79, 0x03,  // ....p.y.
                /* 0BF0 */  0xE8, 0xD8, 0x81, 0x13, 0x05, 0xA4, 0xE3, 0x13,  // ........
                /* 0BF8 */  0x1B, 0xD3, 0x13, 0xB6, 0x41, 0x1E, 0x1F, 0x30,  // ....A..0
                /* 0C00 */  0xC6, 0x00, 0x25, 0xE3, 0xBC, 0x41, 0x21, 0x4C,  // ..%..A!L
                /* 0C08 */  0xE1, 0x73, 0x01, 0x18, 0x67, 0x81, 0x3F, 0x17,  // .s..g.?.
                /* 0C10 */  0x80, 0x9D, 0xC0, 0xE7, 0x02, 0xC0, 0x93, 0x45,  // .......E
                /* 0C18 */  0xB3, 0x42, 0x7D, 0x9E, 0x0B, 0xE0, 0xFE, 0xFF,  // .B}.....
                /* 0C20 */  0xCF, 0x05, 0xE0, 0x9E, 0xA6, 0xCF, 0x05, 0x00,  // ........
                /* 0C28 */  0x7D, 0xA4, 0x9E, 0x0B, 0x80, 0xD7, 0x38, 0x9F,  // }.....8.
                /* 0C30 */  0x0B, 0xC0, 0xF2, 0xFF, 0x3F, 0x17, 0x00, 0xD4,  // ....?...
                /* 0C38 */  0xB0, 0x78, 0x2E, 0x00, 0x5E, 0xD2, 0xCE, 0x05,  // .x..^...
                /* 0C40 */  0x80, 0x8A, 0xFF, 0xFF, 0xB9, 0x00, 0xD0, 0xA6,  // ........
                /* 0C48 */  0xF5, 0x5C, 0x00, 0x2E, 0xF1, 0xAB, 0xA0, 0xA1,  // .\......
                /* 0C50 */  0x21, 0x24, 0x17, 0x06, 0x25, 0x61, 0xEC, 0x50,  // !$..%a.P
                /* 0C58 */  0x46, 0x73, 0x30, 0xC7, 0x10, 0x9C, 0x49, 0x82,  // Fs0...I.
                /* 0C60 */  0x43, 0x0D, 0xD4, 0x53, 0x7F, 0x1A, 0x38, 0x8D,  // C..S..8.
                /* 0C68 */  0xC7, 0x40, 0xCF, 0xEA, 0x79, 0x3C, 0x24, 0x3B,  // .@..y<$;
                /* 0C70 */  0x23, 0x78, 0x88, 0xFC, 0x58, 0xE0, 0xB1, 0xBE,  // #x..X...
                /* 0C78 */  0xB1, 0x59, 0x3B, 0xA2, 0x4E, 0x6C, 0x86, 0x49,  // .Y;.Nl.I
                /* 0C80 */  0xE0, 0x21, 0x32, 0x34, 0x4E, 0x70, 0x66, 0xA1,  // .!24Npf.
                /* 0C88 */  0x31, 0x37, 0x3F, 0xDF, 0xFF, 0x5E, 0x03, 0x3C,  // 17?..^.<
                /* 0C90 */  0x37, 0x13, 0x74, 0x3F, 0x74, 0x29, 0x44, 0xD0,  // 7.t?t)D.
                /* 0C98 */  0x09, 0xE0, 0x9D, 0xA0, 0x46, 0x01, 0xDE, 0xAE,  // ....F...
                /* 0CA0 */  0x02, 0xB2, 0x25, 0x40, 0xDC, 0xE8, 0x85, 0xF5,  // ..%@....
                /* 0CA8 */  0xCA, 0x15, 0x25, 0x44, 0x84, 0xA0, 0x51, 0x8C,  // ..%D..Q.
                /* 0CB0 */  0x17, 0x21, 0x54, 0x88, 0x28, 0x51, 0x9B, 0x03,  // .!T.(Q..
                /* 0CB8 */  0x91, 0x36, 0x54, 0x81, 0x44, 0x0B, 0x66, 0x04,  // .6T.D.f.
                /* 0CC0 */  0x66, 0x7F, 0x10, 0x44, 0xFA, 0x33, 0x40, 0x77,  // f..D.3@w
                /* 0CC8 */  0x40, 0x47, 0x3A, 0x3C, 0xA2, 0x87, 0xEB, 0xA1,  // @G:<....
                /* 0CD0 */  0x9E, 0xE3, 0xFF, 0xFF, 0x35, 0xFD, 0x79, 0xD2,  // ....5.y.
                /* 0CD8 */  0x20, 0x07, 0x79, 0x6E, 0x4F, 0x8F, 0x18, 0x70,  //  .ynO..p
                /* 0CE0 */  0x9D, 0x21, 0xA0, 0x5D, 0xE6, 0x03, 0x9E, 0xF1,  // .!.]....
                /* 0CE8 */  0x03, 0x33, 0x85, 0x43, 0x0D, 0xD1, 0xA7, 0x77,  // .3.C...w
                /* 0CF0 */  0x4F, 0xE0, 0x10, 0x19, 0xA0, 0x0F, 0x11, 0xF0,  // O.......
                /* 0CF8 */  0xC7, 0xE3, 0x03, 0x24, 0xE6, 0xB0, 0xA9, 0x41,  // ...$...A
                /* 0D00 */  0xA0, 0x46, 0x66, 0x68, 0x8F, 0xF4, 0xB4, 0x9E,  // .Ffh....
                /* 0D08 */  0x32, 0x3D, 0xFC, 0xC3, 0x62, 0x62, 0xCF, 0x0E,  // 2=..bb..
                /* 0D10 */  0x74, 0x3C, 0xE0, 0x57, 0x7C, 0x26, 0x10, 0xC2,  // t<.W|&..
                /* 0D18 */  0xC3, 0x83, 0xE7, 0xEB, 0x43, 0xB5, 0x4E, 0x22,  // ....C.N"
                /* 0D20 */  0x68, 0x68, 0x83, 0x9E, 0x8D, 0xCF, 0x10, 0xBE,  // hh......
                /* 0D28 */  0x79, 0xB0, 0xA3, 0x05, 0x17, 0x75, 0xB4, 0x40,  // y....u.@
                /* 0D30 */  0x9D, 0x16, 0x7C, 0x50, 0x60, 0x47, 0x54, 0x7E,  // ..|P`GT~
                /* 0D38 */  0xB2, 0x60, 0x47, 0x61, 0x70, 0xCA, 0x3B, 0x84,  // .`Gap.;.
                /* 0D40 */  0x80, 0x02, 0xC4, 0x27, 0x0B, 0x36, 0x2F, 0x0C,  // ...'.6/.
                /* 0D48 */  0x81, 0x45, 0xC2, 0xA3, 0x0E, 0x1D, 0x86, 0xE7,  // .E......
                /* 0D50 */  0xA7, 0x84, 0xC7, 0x11, 0x86, 0xFD, 0x46, 0xE2,  // ......F.
                /* 0D58 */  0x29, 0x1C, 0x8E, 0x8F, 0x14, 0x46, 0x08, 0x5E,  // )....F.^
                /* 0D60 */  0xEE, 0xD4, 0xF4, 0xFF, 0x9F, 0x40, 0xCD, 0xA3,  // .....@..
                /* 0D68 */  0xD3, 0x94, 0x4E, 0xF9, 0x10, 0xD8, 0x50, 0x3D,  // ..N...P=
                /* 0D70 */  0x04, 0x7E, 0x5E, 0xF0, 0x10, 0xF8, 0x00, 0x5A,  // .~^....Z
                /* 0D78 */  0x9D, 0x1D, 0x39, 0x9F, 0x9C, 0x13, 0x6E, 0xBC,  // ..9...n.
                /* 0D80 */  0x7C, 0x4C, 0xD8, 0x01, 0xF0, 0x94, 0xAF, 0x5C,  // |L.....\
                /* 0D88 */  0x9F, 0x45, 0x68, 0x8C, 0xE5, 0xFB, 0x38, 0x02,  // .Eh...8.
                /* 0D90 */  0xC8, 0x99, 0xC4, 0x13, 0x48, 0x84, 0x97, 0x91,  // ....H...
                /* 0D98 */  0x20, 0x21, 0x8E, 0xE5, 0x35, 0xC4, 0x20, 0x31,  //  !..5. 1
                /* 0DA0 */  0x8E, 0xE1, 0x64, 0x1E, 0x47, 0x38, 0xCC, 0x33,  // ..d.G8.3
                /* 0DA8 */  0x89, 0xE1, 0x1E, 0x0E, 0x5E, 0x45, 0x5E, 0x48,  // ....^E^H
                /* 0DB0 */  0x0C, 0xF3, 0x28, 0xE2, 0xF3, 0x41, 0x0C, 0x63,  // ..(..A.c
                /* 0DB8 */  0x86, 0x8A, 0x76, 0x02, 0x3E, 0x8E, 0xB0, 0x48,  // ..v.>..H
                /* 0DC0 */  0x0F, 0x06, 0x0D, 0xD5, 0xC7, 0x11, 0xC0, 0xCF,  // ........
                /* 0DC8 */  0xFF, 0xFF, 0x38, 0x02, 0xFC, 0x8F, 0x08, 0xB8,  // ..8.....
                /* 0DD0 */  0xD3, 0x06, 0xDC, 0xFB, 0x44, 0x88, 0x27, 0x8D,  // ....D.'.
                /* 0DD8 */  0x97, 0x84, 0x67, 0x0D, 0xE0, 0xA2, 0x8A, 0xB9,  // ..g.....
                /* 0DE0 */  0x00, 0x43, 0x20, 0x4A, 0x73, 0x34, 0x47, 0x71,  // .C Js4Gq
                /* 0DE8 */  0x58, 0x13, 0x90, 0x86, 0xC9, 0x19, 0xCF, 0xFD,  // X.......
                /* 0DF0 */  0xB9, 0xE0, 0xEC, 0x62, 0x07, 0x09, 0x13, 0xE4,  // ...b....
                /* 0DF8 */  0x89, 0xE0, 0x35, 0xCA, 0xA7, 0x20, 0x41, 0xEA,  // ..5.. A.
                /* 0E00 */  0x6C, 0xCE, 0xD3, 0x53, 0x48, 0xF7, 0xD9, 0x1C,  // l..SH...
                /* 0E08 */  0xA5, 0xF4, 0x9C, 0x46, 0x41, 0x7C, 0x46, 0xF0,  // ...FA|F.
                /* 0E10 */  0xB5, 0x1B, 0xCE, 0x1C, 0xCE, 0xE8, 0x40, 0xDE,  // ......@.
                /* 0E18 */  0x03, 0xD8, 0xC5, 0x1C, 0x98, 0x5D, 0x64, 0xB0,  // .....]d.
                /* 0E20 */  0x27, 0x1D, 0x3C, 0xBA, 0xFF, 0xFF, 0x37, 0x85,  // '.<...7.
                /* 0E28 */  0xF3, 0x7C, 0x3F, 0xF0, 0xBD, 0x1C, 0xB0, 0x15,  // .|?.....
                /* 0E30 */  0xE2, 0x2E, 0x80, 0x92, 0x7D, 0x17, 0xA0, 0x20,  // ....}.. 
                /* 0E38 */  0x9E, 0x98, 0xA3, 0x5C, 0x91, 0xA0, 0xE0, 0x3F,  // ...\...?
                /* 0E40 */  0x0A, 0xBC, 0x0C, 0xBC, 0x2E, 0x60, 0xAE, 0xE5,  // .....`..
                /* 0E48 */  0xC0, 0x37, 0xC8, 0x85, 0x01, 0xCA, 0x6D, 0xE0,  // .7....m.
                /* 0E50 */  0xE1, 0x89, 0x0D, 0x0A, 0xFC, 0x50, 0xBE, 0x1E,  // .....P..
                /* 0E58 */  0x82, 0xF9, 0xFF, 0x7F, 0x3D, 0x04, 0xB6, 0x4A,  // ....=..J
                /* 0E60 */  0x9D, 0xDA, 0x54, 0x78, 0x3D, 0x04, 0x57, 0x94,  // ..Tx=.W.
                /* 0E68 */  0x6B, 0x09, 0xEA, 0xD6, 0x64, 0x41, 0x40, 0xF2,  // k...dA@.
                /* 0E70 */  0x7E, 0xBE, 0x21, 0x98, 0x3E, 0x97, 0xC0, 0xBB,  // ~.!.>...
                /* 0E78 */  0x83, 0x6A, 0x55, 0xBA, 0x97, 0xF0, 0xE0, 0x14,  // .jU.....
                /* 0E80 */  0x8A, 0x7E, 0x78, 0x40, 0x85, 0x3D, 0x3C, 0x50,  // .~x@.=<P
                /* 0E88 */  0x10, 0x5F, 0x8C, 0x7C, 0x2F, 0x01, 0xEC, 0xFF,  // ._.|/...
                /* 0E90 */  0xFF, 0x47, 0x84, 0xCD, 0x30, 0x22, 0xB4, 0x8A,  // .G..0"..
                /* 0E98 */  0xA3, 0x05, 0x72, 0x46, 0x60, 0x3D, 0x11, 0xF8,  // ..rF`=..
                /* 0EA0 */  0xE4, 0x02, 0x9C, 0xC3, 0x5F, 0x82, 0x51, 0x71,  // ...._.Qq
                /* 0EA8 */  0xE7, 0x4C, 0x41, 0x3C, 0x28, 0x9F, 0x5C, 0x80,  // .LA<(.\.
                /* 0EB0 */  0xDF, 0xA9, 0x04, 0x30, 0xF5, 0xFF, 0x07, 0xD3,  // ...0....
                /* 0EB8 */  0xA9, 0x04, 0x74, 0x77, 0x2F, 0x30, 0x5D, 0x4D,  // ..tw/0]M
                /* 0EC0 */  0xCE, 0x24, 0x5A, 0x70, 0xDF, 0xBD, 0x00, 0x66,  // .$Zp...f
                /* 0EC8 */  0xFE, 0xFF, 0xEF, 0x5E, 0x00, 0x3D, 0xBD, 0xDE,  // ...^.=..
                /* 0ED0 */  0xBD, 0x80, 0xD7, 0xB9, 0x84, 0xFF, 0xFF, 0xEF,  // ........
                /* 0ED8 */  0x5E, 0x00, 0xFF, 0xFF, 0xFF, 0x77, 0x2F, 0x80,  // ^....w/.
                /* 0EE0 */  0x32, 0xA7, 0x12, 0x90, 0x65, 0x3B, 0x95, 0xA0,  // 2...e;..
                /* 0EE8 */  0x15, 0x9E, 0xA3, 0xA1, 0x4E, 0xE0, 0x50, 0x9E,  // ....N.P.
                /* 0EF0 */  0x30, 0x5E, 0xD5, 0x13, 0x58, 0xCF, 0xE5, 0x0B,  // 0^..X...
                /* 0EF8 */  0xA5, 0x04, 0x46, 0x97, 0x2F, 0xE0, 0xF5, 0xFF,  // ..F./...
                /* 0F00 */  0xBF, 0x7C, 0x01, 0xAC, 0x08, 0x74, 0x17, 0x40,  // .|...t.@
                /* 0F08 */  0x45, 0xB8, 0x0B, 0x50, 0x10, 0x5F, 0xBE, 0x00,  // E..P._..
                /* 0F10 */  0x2F, 0xA1, 0x20, 0x64, 0xE4, 0x26, 0x41, 0x2F,  // /. d.&A/
                /* 0F18 */  0x5F, 0x70, 0x2E, 0x0E, 0xBE, 0x1F, 0x79, 0x50,  // _p....yP
                /* 0F20 */  0x30, 0xFE, 0xFF, 0x83, 0x82, 0x39, 0x98, 0xF3,  // 0....9..
                /* 0F28 */  0x2E, 0xF6, 0xA4, 0x48, 0xAF, 0x27, 0x70, 0xEF,  // ...H.'p.
                /* 0F30 */  0x1C, 0x1E, 0x1B, 0x38, 0xC4, 0x5D, 0xC1, 0x80,  // ...8.]..
                /* 0F38 */  0xBD, 0xCB, 0xDB, 0x09, 0xB8, 0xB4, 0xAD, 0x5D,  // .......]
                /* 0F40 */  0xB7, 0x13, 0x5C, 0xC2, 0xE3, 0x34, 0xE4, 0xE3,  // ..\..4..
                /* 0F48 */  0x09, 0x26, 0xCF, 0xED, 0x04, 0x95, 0x04, 0x46,  // .&.....F
                /* 0F50 */  0x59, 0x48, 0x74, 0x84, 0xE0, 0xEA, 0x6F, 0x62,  // YHt...ob
                /* 0F58 */  0x14, 0xC4, 0x16, 0x6E, 0x27, 0x80, 0x88, 0xFF,  // ...n'...
                /* 0F60 */  0xFF, 0xED, 0x04, 0xB0, 0x30, 0x66, 0x38, 0x23,  // ....0f8#
                /* 0F68 */  0x7A, 0xAF, 0x30, 0xA4, 0xCF, 0x60, 0xC0, 0x34,  // z.0..`.4
                /* 0F70 */  0xD0, 0x11, 0x04, 0x7D, 0x49, 0xC3, 0x26, 0xB8,  // ...}I.&.
                /* 0F78 */  0x81, 0xD0, 0x19, 0xC1, 0xBB, 0x80, 0xC0, 0x9D,  // ........
                /* 0F80 */  0x18, 0xAC, 0x03, 0x08, 0xF8, 0xCE, 0x6A, 0xC0,  // ......j.
                /* 0F88 */  0xE8, 0xFF, 0x7F, 0x56, 0x03, 0xBE, 0x07, 0x00,  // ...V....
                /* 0F90 */  0x9F, 0xD5, 0x00, 0x55, 0xB7, 0x17, 0x90, 0x5D,  // ...U...]
                /* 0F98 */  0x53, 0x7C, 0x7B, 0xE1, 0x03, 0xB6, 0x06, 0x20,  // S|{.... 
                /* 0FA0 */  0x1D, 0x1F, 0x4E, 0xFF, 0x38, 0x8E, 0xE2, 0xBC,  // ..N.8...
                /* 0FA8 */  0x4E, 0xE3, 0x05, 0x26, 0x46, 0xCD, 0xA7, 0x0C,  // N..&F...
                /* 0FB0 */  0x32, 0xE1, 0xDE, 0x00, 0x95, 0xFA, 0x1A, 0x45,  // 2......E
                /* 0FB8 */  0x47, 0xE5, 0xBC, 0x24, 0x4A, 0x7D, 0x2C, 0x40,  // G..$J},@
                /* 0FC0 */  0xE5, 0x3C, 0x16, 0x50, 0x10, 0x03, 0xFA, 0xE2,  // .<.P....
                /* 0FC8 */  0x61, 0x25, 0x17, 0x0F, 0xF4, 0x20, 0x4E, 0xF6,  // a%... N.
                /* 0FD0 */  0x0D, 0xD5, 0x17, 0x0F, 0x30, 0x13, 0xFC, 0xFF,  // ....0...
                /* 0FD8 */  0x5F, 0x3C, 0xC0, 0x64, 0xEC, 0xD6, 0xF3, 0x42,  // _<.d...B
                /* 0FE0 */  0x01, 0x44, 0x82, 0x4F, 0x15, 0x15, 0x75, 0xAA,  // .D.O..u.
                /* 0FE8 */  0x14, 0xC4, 0x53, 0x75, 0x8C, 0x13, 0x89, 0xA7,  // ..Su....
                /* 0FF0 */  0x8A, 0x3E, 0x09, 0x9D, 0xDB, 0x1B, 0x09, 0x3F,  // .>.....?
                /* 0FF8 */  0x0F, 0xBC, 0x4F, 0x80, 0x79, 0x28, 0x3E, 0x5C,  // ..O.y(>\
                /* 1000 */  0x01, 0x8E, 0x14, 0xFA, 0x34, 0xA9, 0xF4, 0x3A,  // ....4..:
                /* 1008 */  0x01, 0x2E, 0x41, 0xD7, 0x09, 0x74, 0xAC, 0xA5,  // ..A..t..
                /* 1010 */  0xEA, 0x3A, 0x01, 0x6F, 0x98, 0x0E, 0x72, 0x9D,  // .:.o..r.
                /* 1018 */  0xA0, 0x10, 0xFF, 0xFF, 0xC7, 0x3C, 0x16, 0xE0,  // .....<..
                /* 1020 */  0xB0, 0x87, 0x92, 0x0C, 0x47, 0x41, 0x3C, 0x36,  // ....GA<6
                /* 1028 */  0xDF, 0xC9, 0x7D, 0x9D, 0x80, 0x7B, 0x67, 0x81,  // ..}..{g.
                /* 1030 */  0x77, 0x9D, 0x60, 0x87, 0x02, 0xD8, 0x04, 0xBE,  // w.`.....
                /* 1038 */  0xB3, 0x80, 0xE7, 0x40, 0xC1, 0x0E, 0x0E, 0x60,  // ...@...`
                /* 1040 */  0x1E, 0x14, 0x38, 0x0E, 0x0E, 0x80, 0xAA, 0x1B,  // ..8.....
                /* 1048 */  0x2D, 0xC8, 0xF4, 0x1F, 0x1C, 0xD0, 0x2A, 0xAE,  // -.....*.
                /* 1050 */  0x35, 0x88, 0xFF, 0xFF, 0xC1, 0x01, 0x2F, 0xED,  // 5...../.
                /* 1058 */  0x34, 0x44, 0x72, 0x5F, 0x6B, 0x50, 0x89, 0xAF,  // 4Dr_kP..
                /* 1060 */  0x35, 0x80, 0xEC, 0xE8, 0x53, 0x45, 0x85, 0x9D,  // 5...SE..
                /* 1068 */  0x2A, 0x05, 0xF1, 0x54, 0x7D, 0xE5, 0x80, 0x75,  // *..T}..u
                /* 1070 */  0x9D, 0xC0, 0x1C, 0xBB, 0xC0, 0x3D, 0x14, 0x5F,  // .....=._
                /* 1078 */  0x39, 0xC0, 0x77, 0x9F, 0x00, 0x0E, 0xFF, 0xFF,  // 9.w.....
                /* 1080 */  0x63, 0x17, 0x48, 0xEF, 0x35, 0xA0, 0x93, 0x74,  // c.H.5..t
                /* 1088 */  0x9F, 0x40, 0x07, 0xBB, 0xD7, 0x40, 0xBC, 0x4F,  // .@...@.O
                /* 1090 */  0x3C, 0xAD, 0x3D, 0xD1, 0xE9, 0x5E, 0x83, 0x0A,  // <.=..^..
                /* 1098 */  0x41, 0xA1, 0x8B, 0x8D, 0x4F, 0x05, 0x5C, 0x34,  // A...O.\4
                /* 10A0 */  0x1C, 0x05, 0xF1, 0xBD, 0x06, 0x70, 0x72, 0x72,  // .....prr
                /* 10A8 */  0x00, 0xEF, 0xBD, 0x06, 0x3C, 0x27, 0x07, 0xE0,  // ....<'..
                /* 10B0 */  0xF3, 0xFF, 0x3F, 0x39, 0x00, 0xB5, 0x8B, 0x0D,  // ..?9....
                /* 10B8 */  0xC8, 0x12, 0x9C, 0x1C, 0xD0, 0x3A, 0x2E, 0x36,  // .....:.6
                /* 10C0 */  0x50, 0x11, 0x12, 0x4C, 0x7E, 0xB1, 0x41, 0x65,  // P..L~.Ae
                /* 10C8 */  0xBE, 0xD8, 0x00, 0xB2, 0xEF, 0xA7, 0xE0, 0xBB,  // ........
                /* 10D0 */  0x08, 0x3C, 0x50, 0xE0, 0x2E, 0x14, 0xF8, 0xFF,  // .<P.....
                /* 10D8 */  0xFF, 0xCD, 0x06, 0x98, 0xDD, 0x4F, 0x81, 0xBF,  // .....O..
                /* 10E0 */  0xC4, 0x9B, 0x0D, 0xE8, 0x44, 0x5D, 0x28, 0xD0,  // ....D](.
                /* 10E8 */  0xD1, 0x6E, 0x36, 0x50, 0xAD, 0x01, 0x2A, 0xCC,  // .n6P..*.
                /* 10F0 */  0xCD, 0x06, 0x15, 0x83, 0x42, 0x57, 0x1B, 0x1F,  // ....BW..
                /* 10F8 */  0x0B, 0xB8, 0x6C, 0x38, 0x0A, 0xE2, 0x9B, 0x0D,  // ..l8....
                /* 1100 */  0xE0, 0xE4, 0xE8, 0x80, 0xF9, 0xFF, 0x1F, 0x1D,  // ........
                /* 1108 */  0xC0, 0x78, 0xB5, 0x01, 0x3E, 0x47, 0x07, 0x40,  // .x..>G.@
                /* 1110 */  0xC1, 0xD5, 0x06, 0x64, 0x2A, 0x56, 0xA1, 0xA3,  // ...d*V..
                /* 1118 */  0x03, 0x2E, 0xCB, 0x4D, 0x19, 0xAA, 0x39, 0x40,  // ...M..9@
                /* 1120 */  0xDD, 0x9A, 0x7D, 0xB5, 0xE1, 0xBA, 0x29, 0xA4,  // ..}...).
                /* 1128 */  0xFC, 0xE8, 0x80, 0xD2, 0x7A, 0x74, 0xA0, 0x20,  // ....zt. 
                /* 1130 */  0x1E, 0x9B, 0x53, 0x1C, 0x0B, 0xD0, 0x3A, 0x8E,  // ..S...:.
                /* 1138 */  0x05, 0x74, 0xAE, 0x31, 0x22, 0x3C, 0x3B, 0x3C,  // .t.1"<;<
                /* 1140 */  0xDB, 0x00, 0xA3, 0xFF, 0xFF, 0xA1, 0x00, 0x5E,  // .......^
                /* 1148 */  0x86, 0x9B, 0x28, 0x94, 0x0B, 0x40, 0xC4, 0x33,  // ..(..@.3
                /* 1150 */  0x3A, 0x7F, 0x13, 0x9C, 0xE8, 0x21, 0x81, 0xF3,  // :....!..
                /* 1158 */  0x20, 0x0A, 0xBE, 0xCB, 0x0F, 0x60, 0x70, 0x24,  //  ....`p$
                /* 1160 */  0xBE, 0x72, 0x00, 0x6E, 0xFE, 0xFF, 0x57, 0x0E,  // .r.n..W.
                /* 1168 */  0x9C, 0x4D, 0x8B, 0x36, 0x2F, 0x3F, 0x20, 0x0B,  // .M.6/? .
                /* 1170 */  0x77, 0xF9, 0x41, 0x4B, 0xBC, 0x72, 0x40, 0x3C,  // w.AK.r@<
                /* 1178 */  0xCE, 0x1C, 0xB1, 0x2F, 0x42, 0xBE, 0xFC, 0x70,  // .../B..p
                /* 1180 */  0x39, 0x30, 0x12, 0x03, 0xA1, 0x63, 0x01, 0x8F,  // 90...c..
                /* 1188 */  0x7F, 0xE5, 0xA0, 0x20, 0x96, 0x70, 0x2C, 0x80,  // ... .p,.
                /* 1190 */  0x7A, 0xE5, 0xC0, 0xDC, 0x7E, 0x80, 0xE9, 0xB1,  // z...~...
                /* 1198 */  0x80, 0x5F, 0xA7, 0xE1, 0x9C, 0x3A, 0x70, 0xD7,  // ._...:p.
                /* 11A0 */  0x69, 0xE0, 0x7A, 0x41, 0x02, 0x1E, 0xFF, 0xFF,  // i.zA....
                /* 11A8 */  0xE3, 0x05, 0xA0, 0xF1, 0x82, 0x04, 0xB2, 0x18,  // ........
                /* 11B0 */  0x0F, 0x09, 0x1D, 0x2F, 0x70, 0x62, 0x80, 0x74,  // .../pb.t
                /* 11B8 */  0xBC, 0x80, 0x87, 0xF0, 0x54, 0xA1, 0x15, 0xE9,  // ....T...
                /* 11C0 */  0x82, 0xC4, 0x83, 0xC3, 0x28, 0xFA, 0xF1, 0x02,  // ....(...
                /* 11C8 */  0x15, 0xF6, 0x94, 0x41, 0x41, 0x7C, 0xD4, 0x71,  // ...AA|.q
                /* 11D0 */  0x82, 0x93, 0x03, 0x7A, 0x94, 0x56, 0x38, 0x06,  // ...z.V8.
                /* 11D8 */  0xCD, 0xE3, 0xE9, 0x07, 0xBC, 0x04, 0xBE, 0x36,  // .......6
                /* 11E0 */  0x80, 0x6B, 0x42, 0x70, 0x86, 0x70, 0xBE, 0xB5,  // .kBp.p..
                /* 11E8 */  0x4F, 0x08, 0xD2, 0xFF, 0xFF, 0x76, 0x04, 0x9C,  // O....v..
                /* 11F0 */  0x22, 0x4C, 0x08, 0xAD, 0x02, 0x44, 0x1A, 0x0F,  // "L...D..
                /* 11F8 */  0x01, 0xC4, 0xF1, 0x88, 0x40, 0x7C, 0x68, 0xE0,  // ....@|h.
                /* 1200 */  0x23, 0x02, 0xD7, 0x65, 0x10, 0x07, 0xEE, 0xA3,  // #..e....
                /* 1208 */  0xC4, 0x19, 0xF7, 0x7C, 0x02, 0x03, 0x31, 0x92,  // ...|..1.
                /* 1210 */  0x0F, 0xAB, 0x60, 0x3B, 0x81, 0x01, 0xAB, 0x7B,  // ..`;...{
                /* 1218 */  0x8F, 0x4F, 0x60, 0xC0, 0xE4, 0xFF, 0x7F, 0x02,  // .O`.....
                /* 1220 */  0x03, 0x1C, 0x59, 0x38, 0xD3, 0x00, 0xAA, 0x4C,  // ..Y8...L
                /* 1228 */  0x3A, 0x14, 0x7A, 0x02, 0x03, 0x99, 0xCC, 0x33,  // :.z....3
                /* 1230 */  0x0D, 0x3A, 0xEC, 0x4A, 0x74, 0xA6, 0x81, 0x37,  // .:.Jt..7
                /* 1238 */  0x4D, 0xC7, 0x3B, 0xD3, 0x50, 0x08, 0x07, 0x83,  // M.;.P...
                /* 1240 */  0x51, 0x2C, 0x08, 0x1D, 0x0B, 0x78, 0x10, 0x38,  // Q,...x.8
                /* 1248 */  0x0A, 0x62, 0x0F, 0xC7, 0x6D, 0x7A, 0xA6, 0x81,  // .b..mz..
                /* 1250 */  0x77, 0xB6, 0xE2, 0xFF, 0xFF, 0xF3, 0x17, 0x78,  // w......x
                /* 1258 */  0x2F, 0x14, 0xE0, 0x1A, 0x12, 0x9C, 0x4B, 0x0D,  // /.....K.
                /* 1260 */  0x3F, 0x7D, 0x01, 0xD7, 0x03, 0x1A, 0x9C, 0x63,  // ?}.....c
                /* 1268 */  0x0D, 0x66, 0x4C, 0x60, 0x3F, 0xD8, 0x80, 0x6F,  // .fL`?..o
                /* 1270 */  0x4C, 0x3E, 0xD8, 0xC0, 0x3B, 0x9E, 0x81, 0x1B,  // L>..;...
                /* 1278 */  0xCA, 0x77, 0x66, 0x70, 0xFD, 0xFF, 0x8F, 0x79,  // .wfp...y
                /* 1280 */  0xC0, 0xEF, 0x6E, 0x03, 0xBE, 0x63, 0x1E, 0xF0,  // ..n..c..
                /* 1288 */  0x3B, 0xC3, 0x00, 0xBA, 0xAE, 0xD5, 0x40, 0xEB,  // ;.....@.
                /* 1290 */  0xBA, 0x70, 0x9C, 0xAF, 0xD5, 0xEC, 0xFF, 0x7F,  // .p......
                /* 1298 */  0xAD, 0xC6, 0xA9, 0xBF, 0x56, 0xA3, 0xF4, 0x1E,  // ....V...
                /* 12A0 */  0x4A, 0x29, 0x88, 0xC7, 0xE6, 0x24, 0x87, 0x0B,  // J)...$..
                /* 12A8 */  0xB4, 0x96, 0x0B, 0x3E, 0x99, 0xD3, 0x31, 0x9C,  // ...>..1.
                /* 12B0 */  0xCF, 0x09, 0x15, 0x7F, 0xC6, 0x47, 0x5D, 0xAC,  // .....G].
                /* 12B8 */  0x81, 0xE1, 0x3D, 0x0C, 0xE6, 0xA0, 0x30, 0x17,  // ..=...0.
                /* 12C0 */  0x6B, 0xC0, 0x56, 0xF0, 0x7B, 0x18, 0x2A, 0xEA,  // k.V.{.*.
                /* 12C8 */  0x8C, 0x28, 0x88, 0xAF, 0x05, 0xBE, 0x97, 0xC0,  // .(......
                /* 12D0 */  0xB9, 0x73, 0xE0, 0xEE, 0x25, 0xF0, 0xEE, 0xD5,  // .s..%...
                /* 12D8 */  0x60, 0xF9, 0xFF, 0xCF, 0x15, 0x6C, 0x57, 0x0E,  // `....lW.
                /* 12E0 */  0xE0, 0x2D, 0x56, 0xA2, 0xC9, 0x6B, 0x35, 0x10,  // .-V..k5.
                /* 12E8 */  0x93, 0x76, 0xAD, 0x06, 0x5D, 0x9C, 0x2B, 0x07,  // .v..].+.
                /* 12F0 */  0x7A, 0x4C, 0xBE, 0x72, 0xC0, 0xBA, 0x58, 0x03,  // zL.r..X.
                /* 12F8 */  0xD3, 0x2B, 0x12, 0xDC, 0x53, 0x07, 0xEE, 0xEC,  // .+..S...
                /* 1300 */  0x00, 0xE3, 0xFF, 0x7F, 0x17, 0x03, 0xB6, 0xC7,  // ........
                /* 1308 */  0x0B, 0x70, 0xDC, 0xC5, 0x80, 0xD3, 0xF1, 0x02,  // .p......
                /* 1310 */  0xA8, 0x5F, 0x90, 0x40, 0xA6, 0xE5, 0x82, 0x84,  // ._.@....
                /* 1318 */  0x4E, 0x74, 0xBC, 0x80, 0x6A, 0xED, 0xC4, 0xE3,  // Nt..j...
                /* 1320 */  0x0B, 0x12, 0xEA, 0x8E, 0xE4, 0xD4, 0x47, 0x18,  // ......G.
                /* 1328 */  0x54, 0xCE, 0xD3, 0x01, 0x05, 0x31, 0xA0, 0x6F,  // T....1.o
                /* 1330 */  0x84, 0xBE, 0x86, 0xE1, 0xCE, 0x0D, 0xEC, 0xFF,  // ........
                /* 1338 */  0x7F, 0x6E, 0xC0, 0x1C, 0x8F, 0x80, 0xE1, 0x21,  // .n.....!
                /* 1340 */  0x8C, 0x5D, 0x7E, 0x80, 0x45, 0x8C, 0xB3, 0x15,  // .]~.E...
                /* 1348 */  0x4A, 0xF8, 0xC5, 0x84, 0x82, 0x78, 0x62, 0x3E,  // J....xb>
                /* 1350 */  0xC1, 0xC1, 0xB9, 0x4E, 0x70, 0x91, 0x63, 0xD2,  // ...Np.c.
                /* 1358 */  0xA1, 0x16, 0xFC, 0x63, 0xF1, 0x09, 0x0E, 0x7C,  // ...c...|
                /* 1360 */  0xA3, 0x82, 0x3B, 0xDC, 0xB3, 0x39, 0x2A, 0xF0,  // ..;..9*.
                /* 1368 */  0x5F, 0x14, 0x7C, 0xCC, 0x03, 0xE7, 0xFF, 0xFF,  // _.|.....
                /* 1370 */  0xD6, 0x01, 0x9C, 0x95, 0xDA, 0x94, 0x78, 0x47,  // ......xG
                /* 1378 */  0x02, 0x59, 0xBC, 0x3B, 0x12, 0x5A, 0xE4, 0xAD,  // .Y.;.Z..
                /* 1380 */  0x03, 0xEA, 0x91, 0xC7, 0xB2, 0xEE, 0x48, 0x28,  // ......H(
                /* 1388 */  0x41, 0x30, 0xBA, 0x24, 0xF9, 0xEC, 0xC0, 0x97,  // A0.$....
                /* 1390 */  0x66, 0x30, 0x83, 0xF8, 0x8E, 0xE4, 0x20, 0xB7,  // f0.... .
                /* 1398 */  0x0E, 0xE8, 0x17, 0x24, 0xE0, 0x79, 0x74, 0x00,  // ...$.yt.
                /* 13A0 */  0xC7, 0xF9, 0x02, 0xFE, 0x0D, 0x09, 0x3C, 0xA3,  // ......<.
                /* 13A8 */  0xC2, 0xFD, 0xFF, 0xCF, 0x17, 0xC0, 0xEF, 0x8E,  // ........
                /* 13B0 */  0x04, 0x9E, 0xF3, 0x05, 0x60, 0x4A, 0xE9, 0x25,  // ....`J.%
                /* 13B8 */  0x09, 0x64, 0x7A, 0x0E, 0xEA, 0xE8, 0x54, 0x07,  // .dz...T.
                /* 13C0 */  0x75, 0xA8, 0xDE, 0x00, 0x95, 0xE3, 0x84, 0x4E,  // u......N
                /* 13C8 */  0x47, 0xE5, 0x04, 0x30, 0xBA, 0x24, 0x01, 0xBF,  // G..0.$..
                /* 13D0 */  0xFF, 0xFF, 0x25, 0x09, 0x30, 0x11, 0xE5, 0x66,  // ..%.0..f
                /* 13D8 */  0x82, 0x12, 0x7F, 0x33, 0xA1, 0x20, 0xBE, 0x1C,  // ...3. ..
                /* 13E0 */  0xFB, 0x0C, 0xE7, 0xA9, 0xE2, 0xA0, 0x3D, 0x80,  // ......=.
                /* 13E8 */  0x47, 0x80, 0x17, 0x13, 0xB8, 0x57, 0x24, 0xE0,  // G....W$.
                /* 13F0 */  0x35, 0x26, 0x58, 0x8A, 0xC7, 0x04, 0x04, 0x6E,  // 5&X....n
                /* 13F8 */  0x1C, 0xE0, 0x1C, 0x13, 0xAC, 0x3B, 0xFE, 0x31,  // .....;.1
                /* 1400 */  0x81, 0xE9, 0xFF, 0x7F, 0x83, 0x07, 0x06, 0x63,  // .......c
                /* 1408 */  0x82, 0x7D, 0xA6, 0x38, 0x26, 0xF0, 0xDF, 0x8C,  // .}.8&...
                /* 1410 */  0x7C, 0x6F, 0x01, 0x3C, 0xFD, 0x15, 0x3B, 0xBC,  // |o.<..;.
                /* 1418 */  0x66, 0x81, 0xEC, 0xA0, 0xE1, 0x7B, 0x0B, 0x4E,  // f....{.N
                /* 1420 */  0xC2, 0x35, 0x0B, 0xE2, 0x30, 0x1F, 0x31, 0x1D,  // .5..0.1.
                /* 1428 */  0xFA, 0xAA, 0x47, 0x47, 0xE5, 0xB8, 0x24, 0x0A,  // ..GG..$.
                /* 1430 */  0x7D, 0x6F, 0x41, 0xC5, 0x3C, 0x64, 0x50, 0x10,  // }oA.<dP.
                /* 1438 */  0x03, 0xFA, 0xE0, 0x0D, 0x96, 0xFF, 0xFF, 0xBD,  // ........
                /* 1440 */  0x05, 0x9C, 0x07, 0x6F, 0xC0, 0xF4, 0x69, 0x17,  // ...o..i.
                /* 1448 */  0x7C, 0xC7, 0x09, 0xE0, 0xED, 0xD0, 0xE2, 0x25,  // |......%
                /* 1450 */  0x10, 0x6C, 0x97, 0x3E, 0x1F, 0x27, 0xD8, 0xFF,  // .l.>.'..
                /* 1458 */  0x7F, 0xBC, 0x2C, 0xD4, 0x52, 0x75, 0x9C, 0x80,  // ..,.Ru..
                /* 1460 */  0x67, 0xEE, 0x2E, 0x4A, 0x2F, 0x81, 0x3C, 0x00,  // g..J/.<.
                /* 1468 */  0x85, 0xE4, 0xDF, 0x47, 0x51, 0x82, 0xE1, 0x28,  // ...GQ..(
                /* 1470 */  0x88, 0xC7, 0xE6, 0x13, 0x35, 0x70, 0xBB, 0x4F,  // ....5p.O
                /* 1478 */  0x80, 0xEF, 0x44, 0x0D, 0xDC, 0xCE, 0x0D, 0x80,  // ..D.....
                /* 1480 */  0xA9, 0xCB, 0x1D, 0xDC, 0xFF, 0xFF, 0xB9, 0x01,  // ........
                /* 1488 */  0x46, 0xFA, 0x73, 0x03, 0xFA, 0x24, 0xED, 0xCB,  // F.s..$..
                /* 1490 */  0x1D, 0xBC, 0x73, 0x83, 0x55, 0x9F, 0xA8, 0x51,  // ..s.U..Q
                /* 1498 */  0x7A, 0x29, 0xA4, 0xFA, 0xDC, 0x80, 0xD2, 0x79,  // z).....y
                /* 14A0 */  0x6E, 0xA0, 0x20, 0x1E, 0x9B, 0x13, 0x1C, 0x0A,  // n. .....
                /* 14A8 */  0xD0, 0xA3, 0xF4, 0x7C, 0x1F, 0x02, 0xEA, 0x3C,  // ...|...<
                /* 14B0 */  0xD4, 0x00, 0xD1, 0x5B, 0x0F, 0xB0, 0x3A, 0x33,  // ...[..:3
                /* 14B8 */  0x80, 0xEF, 0xD6, 0x03, 0x98, 0xF8, 0xFF, 0x5F,  // ......._
                /* 14C0 */  0xED, 0xC0, 0x7B, 0xDD, 0x00, 0x1C, 0xF9, 0x34,  // ..{....4
                /* 14C8 */  0xE9, 0xF4, 0xD6, 0x03, 0xB2, 0x48, 0xD7, 0x0D,  // .....H..
                /* 14D0 */  0xB4, 0xB0, 0x3B, 0x19, 0xD4, 0x4B, 0x9D, 0xA5,  // ..;..K..
                /* 14D8 */  0x1C, 0xA5, 0x51, 0x22, 0x0E, 0xD1, 0xBE, 0x60,  // ..Q"...`
                /* 14E0 */  0xA2, 0xAE, 0x66, 0x1C, 0xC4, 0x17, 0x3C, 0x9F,  // ..f...<.
                /* 14E8 */  0x4D, 0x7D, 0xDD, 0x80, 0x77, 0xE9, 0x01, 0xEE,  // M}..w...
                /* 14F0 */  0xFF, 0xFF, 0x7B, 0x11, 0x70, 0xB9, 0x71, 0x80,  // ..{.p.q.
                /* 14F8 */  0xEF, 0x5E, 0x04, 0xDC, 0x4E, 0x16, 0x80, 0xAA,  // .^..N...
                /* 1500 */  0x7B, 0x11, 0xC8, 0xE2, 0x9F, 0x2C, 0xD0, 0x21,  // {....,.!
                /* 1508 */  0x4E, 0x16, 0x50, 0x0F, 0x46, 0x4F, 0x00, 0xBA,  // N.P.FO..
                /* 1510 */  0x17, 0xA1, 0x04, 0x53, 0x48, 0xF6, 0xBD, 0x08,  // ...SH...
                /* 1518 */  0x25, 0x14, 0x46, 0xFF, 0x7F, 0x38, 0x83, 0x78,  // %.F..8.x
                /* 1520 */  0x6C, 0x8E, 0x70, 0x28, 0x40, 0xAB, 0x00, 0x91,  // l.p(@...
                /* 1528 */  0xC2, 0x79, 0x68, 0x0C, 0x5D, 0x1F, 0x8C, 0x00,  // .yh.]...
                /* 1530 */  0x62, 0xFF, 0xFF, 0xCF, 0x1B, 0xC0, 0xDD, 0xA6,  // b.......
                /* 1538 */  0x57, 0x91, 0x07, 0x23, 0x90, 0x85, 0x3A, 0x6F,  // W..#..:o
                /* 1540 */  0xA0, 0xA5, 0x9D, 0x37, 0xA0, 0x1E, 0x99, 0x2D,  // ...7...-
                /* 1548 */  0xE6, 0x60, 0x84, 0x92, 0x01, 0xA3, 0x93, 0x91,  // .`......
                /* 1550 */  0x0F, 0x05, 0x3C, 0xF6, 0x79, 0x83, 0x82, 0xF8,  // ..<.y...
                /* 1558 */  0x60, 0xE4, 0x43, 0x01, 0x9C, 0xF3, 0x06, 0xE6,  // `.C.....
                /* 1560 */  0x64, 0x04, 0x98, 0xFD, 0xFF, 0x9F, 0x8C, 0x00,  // d.......
                /* 1568 */  0x8E, 0x1C, 0x2D, 0x74, 0x32, 0x02, 0x59, 0x96,  // ..-t2.Y.
                /* 1570 */  0xA3, 0x05, 0x5A, 0xD1, 0xD1, 0x02, 0xA2, 0x34,  // ..Z....4
                /* 1578 */  0x01, 0xDA, 0x8E, 0x36, 0x3E, 0x19, 0xA1, 0xD2,  // ...6>...
                /* 1580 */  0x93, 0x28, 0xFD, 0xF1, 0x05, 0x95, 0xF7, 0x74,  // .(.....t
                /* 1588 */  0x40, 0x41, 0x0C, 0xE8, 0x30, 0x43, 0x44, 0x41,  // @A..0CDA
                /* 1590 */  0x7A, 0x20, 0x9E, 0xEF, 0xE9, 0x1C, 0xC3, 0x8B,  // z ......
                /* 1598 */  0x03, 0x66, 0xBA, 0x95, 0x23, 0x68, 0x32, 0xCD,  // .f..#h2.
                /* 15A0 */  0xC3, 0x69, 0x2E, 0x0F, 0x3F, 0xB0, 0xFF, 0xFF,  // .i..?...
                /* 15A8 */  0xB7, 0x23, 0x98, 0xBA, 0xAE, 0x05, 0xD0, 0x4F,  // .#.....O
                /* 15B0 */  0x01, 0x47, 0x7B, 0x26, 0x87, 0x60, 0xCF, 0x97,  // .G{&.`..
                /* 15B8 */  0x1F, 0x20, 0x12, 0x7F, 0xBA, 0xA8, 0xC0, 0xD3,  // . ......
                /* 15C0 */  0xA5, 0x20, 0x9E, 0x2E, 0x1C, 0x29, 0x57, 0x0A,  // . ...)W.
                /* 15C8 */  0xD4, 0x64, 0x71, 0xB7, 0x82, 0x87, 0x75, 0xB0,  // .dq...u.
                /* 15D0 */  0x5F, 0x13, 0x3D, 0x5C, 0x30, 0x5D, 0xDF, 0x80,  // _.=\0]..
                /* 15D8 */  0xBB, 0x52, 0x85, 0xB7, 0x0A, 0x70, 0xC5, 0x5A,  // .R...p.Z
                /* 15E0 */  0xA7, 0x6E, 0x15, 0x38, 0x71, 0xA7, 0x75, 0xF2,  // .n.8q.u.
                /* 15E8 */  0xFF, 0xBF, 0x55, 0xC0, 0xF2, 0x06, 0xE9, 0xD3,  // ..U.....
                /* 15F0 */  0x3A, 0x4A, 0x08, 0x85, 0x64, 0x5C, 0xDF, 0x50,  // :J..d\.P
                /* 15F8 */  0xD7, 0x2C, 0x83, 0x19, 0xC4, 0xA3, 0x73, 0xA8,  // .,....s.
                /* 1600 */  0x73, 0x01, 0x5A, 0xD2, 0xAD, 0x02, 0xCA, 0xD9,  // s.Z.....
                /* 1608 */  0x00, 0x5C, 0xB7, 0x20, 0xF0, 0x9C, 0x0D, 0x00,  // .\. ....
                /* 1610 */  0x53, 0x5E, 0xCF, 0x06, 0x20, 0x0B, 0x73, 0x81,  // S^.. .s.
                /* 1618 */  0x41, 0x4B, 0xBA, 0x6A, 0x41, 0x75, 0x76, 0x9F,  // AK.jAuv.
                /* 1620 */  0xA5, 0x17, 0x18, 0x1E, 0x9F, 0x44, 0x47, 0x10,  // .....DG.
                /* 1628 */  0xB8, 0x69, 0xCE, 0x06, 0xC8, 0xFF, 0x3F, 0x41,  // .i....?A
                /* 1630 */  0x3D, 0x57, 0x2D, 0xD4, 0x09, 0x06, 0xE0, 0xBB,  // =W-.....
                /* 1638 */  0x4D, 0x91, 0xFF, 0xFF, 0x13, 0x0C, 0xD8, 0x82,  // M.......
                /* 1640 */  0x9D, 0x60, 0xD0, 0xF2, 0x4E, 0x30, 0x10, 0x8F,  // .`..N0..
                /* 1648 */  0x15, 0x6F, 0x30, 0x09, 0x0A, 0x3A, 0xC1, 0xA0,  // .o0..:..
                /* 1650 */  0xA4, 0x50, 0xE8, 0x08, 0xE3, 0x73, 0x01, 0x8F,  // .P...s..
                /* 1658 */  0x0E, 0x46, 0x41, 0x3C, 0x3A, 0xC7, 0x3A, 0x17,  // .FA<:.:.
                /* 1660 */  0xA0, 0x45, 0x1D, 0x2B, 0x20, 0xDD, 0x0D, 0xE0,  // .E.+ ...
                /* 1668 */  0x1C, 0x61, 0x00, 0xD3, 0x87, 0x83, 0x47, 0x18,  // .a....G.
                /* 1670 */  0xE0, 0xF3, 0xFF, 0x3F, 0x1C, 0x60, 0xAC, 0x1D,  // ...?.`..
                /* 1678 */  0x61, 0x00, 0xD2, 0xFF, 0xFF, 0x8F, 0x15, 0xC0,  // a.......
                /* 1680 */  0xC2, 0xA1, 0xC5, 0x23, 0x0C, 0x30, 0xBB, 0x78,  // ...#.0.x
                /* 1688 */  0xFA, 0x08, 0x03, 0xF0, 0xE9, 0x70, 0xF0, 0x08,  // .....p..
                /* 1690 */  0xC3, 0xFF, 0xFF, 0x87, 0x03, 0xB0, 0x28, 0xB4,  // ......(.
                /* 1698 */  0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65, 0x6A,  // .S.Q..ej
                /* 16A0 */  0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6, 0x8C,  // .iP.O...
                /* 16A8 */  0x95, 0x78, 0x0C, 0x28, 0x06, 0x84, 0xC6, 0xE2,  // .x.(....
                /* 16B0 */  0xD3, 0x8B, 0x41, 0xAC, 0x9B, 0x42, 0x57, 0x67,  // ..A..BWg
                /* 16B8 */  0x87, 0x00, 0x11, 0x90, 0x65, 0xFF, 0xC2, 0x05,  // ....e...
                /* 16C0 */  0x44, 0x40, 0x04, 0x64, 0x21, 0x9F, 0x14, 0x01,  // D@.d!...
                /* 16C8 */  0x59, 0x15, 0x88, 0x80, 0x9C, 0x0A, 0x88, 0x46,  // Y......F
                /* 16D0 */  0x04, 0xA2, 0x71, 0x3C, 0x00, 0xB1, 0x70, 0x20,  // ..q<..p 
                /* 16D8 */  0x02, 0xB2, 0x3A, 0x13, 0x40, 0x4C, 0x2A, 0x88,  // ..:.@L*.
                /* 16E0 */  0x80, 0x2C, 0x4B, 0x05, 0x10, 0x13, 0x09, 0x22,  // .,K...."
                /* 16E8 */  0x20, 0x67, 0x5C, 0x9F, 0x80, 0x1C, 0x18, 0x44,  //  g\....D
                /* 16F0 */  0x40, 0x0E, 0xF9, 0xAD, 0x16, 0x90, 0x23, 0x83,  // @.....#.
                /* 16F8 */  0x08, 0xC8, 0x82, 0x75, 0x00, 0x31, 0xF9, 0x20,  // ...u.1. 
                /* 1700 */  0x02, 0x72, 0x7C, 0x20, 0x2A, 0xC6, 0x07, 0x10,  // .r| *...
                /* 1708 */  0x8B, 0xF2, 0x18, 0x10, 0x90, 0x73, 0x81, 0x08,  // .....s..
                /* 1710 */  0xC8, 0x39, 0x68, 0x04, 0xE4, 0x54, 0x14, 0x02,  // .9h..T..
                /* 1718 */  0xB2, 0x2A, 0x27, 0x40, 0x4C, 0x23, 0x88, 0x80,  // .*'@L#..
                /* 1720 */  0x9C, 0x12, 0x88, 0x66, 0x06, 0xA2, 0x82, 0xAD,  // ...f....
                /* 1728 */  0x00, 0x31, 0xF5, 0x20, 0x02, 0xB2, 0x52, 0x2D,  // .1. ..R-
                /* 1730 */  0x40, 0x4C, 0x37, 0x88, 0x80, 0x9C, 0xDA, 0x0B,  // @L7.....
                /* 1738 */  0x10, 0xD3, 0xF0, 0x0E, 0x10, 0x90, 0x33, 0x98,  // ......3.
                /* 1740 */  0x01, 0x62, 0x89, 0x40, 0x04, 0x64, 0x45, 0x6E,  // .b.@.dEn
                /* 1748 */  0x80, 0x98, 0x3E, 0x10, 0x01, 0x39, 0x1D, 0x10,  // ..>..9..
                /* 1750 */  0xCD, 0x0A, 0x44, 0x95, 0xDA, 0x01, 0x62, 0xB2,  // ..D...b.
                /* 1758 */  0x41, 0x04, 0x64, 0x91, 0x0F, 0x21, 0x01, 0x59,  // A.d..!.Y
                /* 1760 */  0x32, 0x88, 0x80, 0x9C, 0xD8, 0x0F, 0x10, 0x8B,  // 2.......
                /* 1768 */  0x0F, 0x22, 0x20, 0x87, 0x3D, 0x84, 0x08, 0xC8,  // ." .=...
                /* 1770 */  0xD1, 0x41, 0x04, 0x64, 0xF9, 0x86, 0x80, 0x58,  // .A.d...X
                /* 1778 */  0x18, 0x10, 0x01, 0x59, 0x94, 0x23, 0x20, 0xA6,  // ...Y.# .
                /* 1780 */  0x10, 0x44, 0x40, 0x8E, 0x07, 0x44, 0xFE, 0xFF,  // .D@..D..
                /* 1788 */  0x83, 0x11, 0x10, 0x4D, 0xF6, 0x3A, 0x15, 0x90,  // ...M.:..
                /* 1790 */  0x73, 0x82, 0x08, 0xC8, 0x6A, 0x35, 0x01, 0x31,  // s...j5.1
                /* 1798 */  0xE9, 0x20, 0x02, 0x72, 0x6E, 0x20, 0x2A, 0xC2,  // . .rn *.
                /* 17A0 */  0x13, 0x10, 0x8B, 0x0C, 0xA2, 0x6B, 0x3B, 0x79,  // .....k;y
                /* 17A8 */  0x88, 0x08, 0xC8, 0x29, 0x4C, 0x01, 0xB1, 0x48,  // ...)L..H
                /* 17B0 */  0x20, 0x02, 0x72, 0x00, 0x55, 0x40, 0x2C, 0x0E,  //  .r.U@,.
                /* 17B8 */  0x88, 0x80, 0x2C, 0xC9, 0x15, 0x10, 0x13, 0x08,  // ..,.....
                /* 17C0 */  0x22, 0x20, 0xE7, 0x7B, 0x50, 0x08, 0xC8, 0x61,  // " .{P..a
                /* 17C8 */  0x41, 0x04, 0xE4, 0x68, 0xB6, 0x80, 0x58, 0x50,  // A..h..XP
                /* 17D0 */  0x10, 0x01, 0x59, 0xEA, 0x6B, 0x49, 0x40, 0x16,  // ..Y.kI@.
                /* 17D8 */  0x0E, 0x22, 0x20, 0x27, 0xF7, 0x05, 0xC4, 0x64,  // ." '...d
                /* 17E0 */  0xBC, 0x44, 0x04, 0xE4, 0xD0, 0x20, 0x02, 0xB2,  // .D... ..
                /* 17E8 */  0x04, 0x63, 0x40, 0x2C, 0x06, 0x88, 0x80, 0x1C,  // .c@,....
                /* 17F0 */  0x0A, 0x88, 0xAA, 0x7A, 0x76, 0x0A, 0xC8, 0x12,  // ...zv...
                /* 17F8 */  0x41, 0x74, 0x78, 0x20, 0x40, 0x34, 0x30, 0x10,  // Atx @40.
                /* 1800 */  0x8D, 0xF7, 0xB0, 0xD3, 0x80, 0x08, 0x88, 0x0E,  // ........
                /* 1808 */  0x18, 0xE4, 0x29, 0xA3, 0xC3, 0x05, 0x01, 0x11,  // ..).....
                /* 1810 */  0x90, 0x25, 0xBF, 0x78, 0x05, 0xE4, 0x00, 0x20,  // .%.x... 
                /* 1818 */  0x3A, 0x85, 0x10, 0x73, 0x40, 0x4C, 0x0E, 0x88,  // :..s@L..
                /* 1820 */  0x80, 0x9C, 0x44, 0x1D, 0x10, 0x8B, 0x05, 0xA2,  // ..D.....
                /* 1828 */  0x83, 0x02, 0x71, 0x77, 0x50, 0xA0, 0x20, 0x3A,  // ..qwP. :
                /* 1830 */  0x0C, 0x10, 0x7B, 0x87, 0x01, 0x0A, 0x22, 0x20,  // ..{..." 
                /* 1838 */  0x07, 0x03, 0xA2, 0x29, 0x81, 0x68, 0xA6, 0x9F,  // ...).h..
                /* 1840 */  0x95, 0x80, 0x9C, 0x10, 0x44, 0x40, 0xD6, 0xF9,  // ....D@..
                /* 1848 */  0x66, 0x11, 0x90, 0x55, 0x83, 0x08, 0xC8, 0xC1,  // f..U....
                /* 1850 */  0xFF, 0x2A, 0x81, 0x88, 0x8A, 0xF7, 0x4D, 0x20,  // .*....M 
                /* 1858 */  0x22, 0x1E, 0x44, 0x40, 0x4E, 0x02, 0x44, 0x75,  // ".D@N.Du
                /* 1860 */  0xBF, 0x5C, 0x02, 0x91, 0x14, 0x20, 0x02, 0xB2,  // .\... ..
                /* 1868 */  0x82, 0x87, 0x8C, 0x06, 0x46, 0x40, 0x04, 0xE4,  // ....F@..
                /* 1870 */  0xEC, 0x40, 0x54, 0x89, 0xC6, 0x81, 0x51, 0x10,  // .@T...Q.
                /* 1878 */  0x0D, 0x8C, 0x00, 0x51, 0x3D, 0x1E, 0x81, 0xFC,  // ...Q=...
                /* 1880 */  0xFF, 0x3F, 0x8A, 0x08, 0x44, 0x07, 0x06, 0x02,  // .?..D...
                /* 1888 */  0x44, 0x73, 0x02, 0x51, 0x8D, 0x8F, 0x96, 0x40,  // Ds.Q...@
                /* 1890 */  0x44, 0x30, 0x88, 0x0E, 0x1C, 0x04, 0x88, 0x46,  // D0.....F
                /* 1898 */  0x06, 0xA2, 0x62, 0x55, 0x02, 0x31, 0xE5, 0x20,  // ..bU.1. 
                /* 18A0 */  0x3A, 0x34, 0x10, 0x20, 0x9A, 0x1F, 0x88, 0xA6,  // :4. ....
                /* 18A8 */  0x75, 0x09, 0xC4, 0xB2, 0x83, 0x08, 0xC8, 0xDA,  // u.......
                /* 18B0 */  0x7F, 0x34, 0x81, 0x48, 0x10, 0x10, 0x01, 0x39,  // .4.H...9
                /* 18B8 */  0x3D, 0x10, 0x95, 0xA2, 0x73, 0xB0, 0x14, 0x44,  // =...s..D
                /* 18C0 */  0x07, 0x05, 0xE2, 0x13, 0x88, 0x45, 0x00, 0x11,  // .....E..
                /* 18C8 */  0x90, 0x03, 0x01, 0x51, 0x29, 0x2F, 0x9E, 0x40,  // ...Q)/.@
                /* 18D0 */  0x44, 0x18, 0x88, 0x80, 0x1C, 0x09, 0x88, 0x06,  // D.......
                /* 18D8 */  0x04, 0xA2, 0xD2, 0x8C, 0x02, 0x31, 0xA1, 0x20,  // .....1. 
                /* 18E0 */  0x3A, 0xB4, 0x10, 0x20, 0x1A, 0x19, 0x88, 0xCA,  // :.. ....
                /* 18E8 */  0x7D, 0xFD, 0x04, 0x22, 0xE2, 0x41, 0x04, 0xE4,  // }..".A..
                /* 18F0 */  0xE8, 0x1F, 0x20, 0x01, 0x59, 0xC7, 0x23, 0xE8,  // .. .Y.#.
                /* 18F8 */  0x41, 0x80, 0x81, 0xE8, 0x20, 0x40, 0x80, 0xA8,  // A... @..
                /* 1900 */  0x04, 0xAB, 0x40, 0x4C, 0x0F, 0x88, 0x0E, 0x2E,  // ..@L....
                /* 1908 */  0x04, 0x88, 0x86, 0x02, 0xA2, 0x62, 0xB4, 0x02,  // .....b..
                /* 1910 */  0x31, 0x65, 0x20, 0x02, 0x72, 0x22, 0x20, 0x1A,  // 1e .r" .
                /* 1918 */  0x0F, 0x88, 0xEA, 0x7A, 0x0F, 0x3D, 0xDC, 0x30,  // ...z.=.0
                /* 1920 */  0x10, 0x1D, 0x54, 0x08, 0x10, 0x8D, 0x0A, 0x44,  // ..T....D
                /* 1928 */  0x73, 0x89, 0x3D, 0x34, 0x50, 0x10, 0x1D, 0x56,  // s.=4P..V
                /* 1930 */  0x88, 0xDA, 0xC3, 0x0A, 0x05, 0xD1, 0x61, 0x85,  // ......a.
                /* 1938 */  0xB8, 0x3D, 0xAC, 0x50, 0x10, 0x1D, 0x56, 0x88,  // .=.P..V.
                /* 1940 */  0xDC, 0xC3, 0x0A, 0x05, 0xD1, 0x61, 0x85, 0xD8,  // .....a..
                /* 1948 */  0x3D, 0xAC, 0x50, 0x10, 0x01, 0x59, 0xB4, 0x5E,  // =.P..Y.^
                /* 1950 */  0x20, 0x16, 0x01, 0x44, 0x87, 0x06, 0xF2, 0x6A,  //  ..D...j
                /* 1958 */  0xD2, 0xA1, 0x81, 0x80, 0xE8, 0x60, 0x42, 0x80,  // .....`B.
                /* 1960 */  0x68, 0x24, 0x20, 0x1A, 0xE0, 0xB5, 0x15, 0x48,  // h$ ....H
                /* 1968 */  0xFF, 0xFF, 0x83, 0x89, 0x40, 0x74, 0xDA, 0x22,  // ....@t."
                /* 1970 */  0x8E, 0x81, 0x98, 0x38, 0x10, 0x01, 0x39, 0xDC,  // ...8..9.
                /* 1978 */  0x7B, 0x49, 0x83, 0x23, 0x20, 0x3A, 0x94, 0x90,  // {I.# :..
                /* 1980 */  0x47, 0xD9, 0x43, 0x09, 0x03, 0xD1, 0xE1, 0x80,  // G.C.....
                /* 1988 */  0x7C, 0xB0, 0x74, 0x38, 0x20, 0xBF, 0x44, 0x1D,  // |.t8 .D.
                /* 1990 */  0x04, 0x88, 0xEA, 0x61, 0x51, 0x10, 0x2A, 0xF7,  // ...aQ.*.
                /* 1998 */  0x2F, 0x16, 0x84, 0x44, 0xFD, 0x43, 0x05, 0x21,  // /..D.C.!
                /* 19A0 */  0x42, 0x3F, 0x60, 0x3A, 0x1E, 0x90, 0x1F, 0x55,  // B?`:...U
                /* 19A8 */  0x70, 0x92, 0x0F, 0x44, 0x47, 0x0F, 0xF2, 0x1A,  // p..DG...
                /* 19B0 */  0xD3, 0xD1, 0x83, 0x80, 0x08, 0xC8, 0x6A, 0x8C,  // ......j.
                /* 19B8 */  0x03, 0x31, 0x6D, 0x20, 0x3A, 0x3A, 0x11, 0x20,  // .1m ::. 
                /* 19C0 */  0x9A, 0x11, 0x88, 0x2A, 0xFC, 0xB9, 0x05, 0x22,  // ...*..."
                /* 19C8 */  0x72, 0x41, 0x74, 0x4C, 0x21, 0x40, 0x34, 0x30,  // rAtL!@40
                /* 19D0 */  0x10, 0x95, 0xF9, 0x0C, 0x14, 0x90, 0x35, 0x83,  // ......5.
                /* 19D8 */  0x08, 0xC8, 0xFA, 0x7E, 0x70, 0x81, 0x88, 0x5A,  // ...~p..Z
                /* 19E0 */  0x10, 0x01, 0x39, 0xA9, 0x76, 0x20, 0x16, 0x1B,  // ..9.v ..
                /* 19E8 */  0x44, 0x40, 0xD6, 0xFA, 0x96, 0x3B, 0x4C, 0x06,  // D@...;L.
                /* 19F0 */  0xA2, 0xE3, 0x00, 0x79, 0xB7, 0x3D, 0x0E, 0x30,  // ...y.=.0
                /* 19F8 */  0x10, 0x0D, 0x92, 0x00, 0xD1, 0xE8, 0x40, 0x54,  // ......@T
                /* 1A00 */  0xB8, 0xFA, 0xE3, 0x08, 0x05, 0xD1, 0x11, 0x82,  // ........
                /* 1A08 */  0x00, 0x51, 0x1D, 0xEE, 0x81, 0x98, 0x7A, 0x10,  // .Q....z.
                /* 1A10 */  0x01, 0x39, 0x0A, 0x10, 0x95, 0x2D, 0xFF, 0x18,  // .9...-..
                /* 1A18 */  0x43, 0x41, 0x74, 0x8C, 0x20, 0xFA, 0x8F, 0x11,  // CAt. ...
                /* 1A20 */  0x14, 0x44, 0x40, 0x0E, 0x01, 0x44, 0x13, 0x01,  // .D@..D..
                /* 1A28 */  0x51, 0xF5, 0xFE, 0x81, 0x58, 0x16, 0x10, 0x01,  // Q...X...
                /* 1A30 */  0x59, 0x53, 0x80, 0x81, 0x53, 0x10, 0x1D, 0x21,  // YS..S..!
                /* 1A38 */  0x48, 0x81, 0x63, 0x01, 0x05, 0xD1, 0x40, 0x49,  // H.c...@I
                /* 1A40 */  0x02, 0x20, 0x26, 0x16, 0x44, 0x83, 0x26, 0x40,  // . &.D.&@
                /* 1A48 */  0x34, 0x30, 0x10, 0x15, 0xDD, 0x00, 0x88, 0x25,  // 40.....%
                /* 1A50 */  0x00, 0xD1, 0xF1, 0x84, 0x44, 0x38, 0x26, 0x51,  // ....D8&Q
                /* 1A58 */  0x10, 0x01, 0xFD, 0xFF, 0x1F, 0x81, 0x54, 0x01,  // ......T.
                /* 1A60 */  0x88, 0x29, 0xC8, 0x00, 0xC4, 0xB2, 0x82, 0x08,  // .)......
                /* 1A68 */  0xC8, 0xC9, 0x81, 0xA8, 0xE6, 0x10, 0x03, 0xA0,  // ........
                /* 1A70 */  0x20, 0x3A, 0xC6, 0x10, 0x20, 0xAA, 0xA4, 0x04,  //  :.. ...
                /* 1A78 */  0x10, 0x4B, 0x90, 0xE2, 0x08, 0x41, 0x41, 0x34,  // .K...AA4
                /* 1A80 */  0x70, 0xD2, 0x02, 0x88, 0xC5, 0x00, 0xD1, 0x60,  // p......`
                /* 1A88 */  0x49, 0x0D, 0x20, 0x26, 0x08, 0x44, 0xC7, 0x31,  // I. &.D.1
                /* 1A90 */  0x02, 0x44, 0x83, 0x01, 0x51, 0x49, 0x3D, 0x8E,  // .D..QI=.
                /* 1A98 */  0x5C, 0x14, 0x44, 0x40, 0xD6, 0x12, 0xE4, 0x18,  // \.D@....
                /* 1AA0 */  0x42, 0x41, 0x74, 0x60, 0x20, 0x45, 0x0E, 0x0C,  // BAt` E..
                /* 1AA8 */  0x14, 0x44, 0x83, 0x25, 0x49, 0x0E, 0x09, 0x14,  // .D.%I...
                /* 1AB0 */  0x44, 0x40, 0x0E, 0xDA, 0x04, 0x88, 0xA5, 0x06,  // D@......
                /* 1AB8 */  0xD1, 0x40, 0x49, 0x94, 0x63, 0x0D, 0x05, 0xD1,  // .@I.c...
                /* 1AC0 */  0x21, 0x81, 0x54, 0x39, 0x24, 0x50, 0x10, 0x01,  // !.T9$P..
                /* 1AC8 */  0x39, 0x70, 0x96, 0x23, 0x08, 0x05, 0xD1, 0xE0,  // 9p.#....
                /* 1AD0 */  0x48, 0x97, 0xC1, 0x51, 0x10, 0x1D, 0x95, 0xC8,  // H..Q....
                /* 1AD8 */  0x3B, 0x55, 0xC7, 0x0F, 0x02, 0xA2, 0x63, 0x14,  // ;U....c.
                /* 1AE0 */  0x29, 0x03, 0xC4, 0x32, 0x81, 0x08, 0xC8, 0x3A,  // )..2...:
                /* 1AE8 */  0x9E, 0xBB, 0x02, 0xB2, 0x28, 0x10, 0x1D, 0x99,  // ....(...
                /* 1AF0 */  0x08, 0x10, 0x8D, 0x05, 0x44, 0xA5, 0xB4, 0x01,  // ....D...
                /* 1AF8 */  0x62, 0xBA, 0x40, 0x74, 0xCC, 0x23, 0x40, 0x34,  // b.@t.#@4
                /* 1B00 */  0x1B, 0x10, 0x8D, 0x11, 0xE7, 0x08, 0x43, 0x41,  // ......CA
                /* 1B08 */  0x74, 0x1C, 0x21, 0x79, 0x8E, 0x23, 0x14, 0x44,  // t.!y.#.D
                /* 1B10 */  0x07, 0x0F, 0x02, 0x44, 0x03, 0x02, 0x51, 0x61,  // ...D..Qa
                /* 1B18 */  0x7D, 0x80, 0x98, 0x4C, 0x10, 0x1D, 0x4B, 0x08,  // }..L..K.
                /* 1B20 */  0x10, 0x8D, 0x0A, 0x44, 0x45, 0x06, 0x1A, 0x28,  // ...DE..(
                /* 1B28 */  0x05, 0xD1, 0xE1, 0x82, 0x00, 0xD1, 0xE8, 0x40,  // .......@
                /* 1B30 */  0x54, 0x79, 0xA2, 0x81, 0x52, 0x10, 0x1D, 0x87,  // Ty..R...
                /* 1B38 */  0x08, 0x10, 0x95, 0xD2, 0x08, 0xC8, 0xFF, 0xFF,  // ........
                /* 1B40 */  0x43, 0x9E, 0x40, 0x74, 0x60, 0x20, 0x91, 0x0E,  // C.@t` ..
                /* 1B48 */  0x09, 0xB4, 0x12, 0x10, 0xCB, 0x03, 0x22, 0x20,  // ......" 
                /* 1B50 */  0x2B, 0xC9, 0x34, 0x48, 0x0A, 0x22, 0x20, 0xE7,  // +.4H." .
                /* 1B58 */  0x01, 0xA2, 0xE9, 0x80, 0xA8, 0xAA, 0x50, 0x47,  // ......PG
                /* 1B60 */  0x31, 0x0A, 0xA2, 0x41, 0x92, 0x52, 0x83, 0xA4,  // 1..A.R..
                /* 1B68 */  0x20, 0x3A, 0x6E, 0x11, 0x20, 0x1A, 0x13, 0x88,  //  :n. ...
                /* 1B70 */  0x4A, 0x6C, 0x75, 0x8C, 0xA2, 0x20, 0x1A, 0x1C,  // Jlu.. ..
                /* 1B78 */  0x01, 0xA2, 0xD1, 0x81, 0xA8, 0xEC, 0x07, 0xAA,  // ........
                /* 1B80 */  0x0E, 0x1F, 0x04, 0x44, 0xC7, 0x43, 0x52, 0x0B,  // ...D.CR.
                /* 1B88 */  0x88, 0x69, 0xC9, 0x35, 0x38, 0x0A, 0xA2, 0xC1,  // .i.58...
                /* 1B90 */  0x91, 0x5E, 0x03, 0xA5, 0x20, 0x02, 0x72, 0x0E,  // .^.. .r.
                /* 1B98 */  0x20, 0x9A, 0x1F, 0x88, 0xAA, 0x09, 0x76, 0xDC,  //  .....v.
                /* 1BA0 */  0xA1, 0x20, 0x3A, 0x20, 0x10, 0x20, 0xAA, 0x26,  // . : . .&
                /* 1BA8 */  0x19, 0x10, 0x93, 0x06, 0x22, 0x20, 0x6B, 0x68,  // ...." kh
                /* 1BB0 */  0x06, 0xC4, 0x14, 0x81, 0x08, 0xC8, 0x59, 0xA2,  // ......Y.
                /* 1BB8 */  0x01, 0xB1, 0x64, 0x20, 0x3A, 0x1A, 0x92, 0x6A,  // ..d :..j
                /* 1BC0 */  0x07, 0x0B, 0x0A, 0xA2, 0x43, 0x05, 0xC9, 0x76,  // ....C..v
                /* 1BC8 */  0xBC, 0xA4, 0x20, 0x3A, 0x18, 0x90, 0x6E, 0x40,  // .. :..n@
                /* 1BD0 */  0x4C, 0x25, 0x88, 0x06, 0x4C, 0xC2, 0x0D, 0x98,  // L%..L...
                /* 1BD8 */  0x82, 0x08, 0xC8, 0xA1, 0xCA, 0x01, 0x53, 0x10,  // ......S.
                /* 1BE0 */  0x1D, 0xAD, 0x48, 0xBA, 0xA3, 0x15, 0x05, 0x11,  // ..H.....
                /* 1BE8 */  0x90, 0x03, 0x02, 0xD1, 0xB8, 0x40, 0x54, 0x65,  // .....@Te
                /* 1BF0 */  0xBC, 0x43, 0x02, 0x05, 0xD1, 0x41, 0x83, 0x00,  // .C...A..
                /* 1BF8 */  0xD1, 0xD4, 0x40, 0x34, 0x5E, 0xBD, 0xE3, 0x1D,  // ..@4^...
                /* 1C00 */  0x05, 0xD1, 0x61, 0x87, 0xF4, 0x03, 0x62, 0xA2,  // ..a...b.
                /* 1C08 */  0x41, 0x74, 0x08, 0x20, 0x40, 0x34, 0x3A, 0x10,  // At. @4:.
                /* 1C10 */  0x95, 0x1C, 0xF0, 0x88, 0x47, 0x41, 0x74, 0xD0,  // ....GAt.
                /* 1C18 */  0x20, 0x09, 0x07, 0x4E, 0x41, 0x04, 0xF4, 0xFF,  //  ..NA...
                /* 1C20 */  0x7F, 0x48, 0x11, 0x10, 0x55, 0xD2, 0xF0, 0x88,  // .H..U...
                /* 1C28 */  0x45, 0x23, 0x1E, 0x8C, 0x28, 0x88, 0x0E, 0x07,  // E#..(...
                /* 1C30 */  0x24, 0x23, 0x10, 0xD3, 0x0B, 0xA2, 0x63, 0x29,  // $#....c)
                /* 1C38 */  0xE9, 0x08, 0xC4, 0xB4, 0x82, 0xE8, 0xA8, 0x49,  // .......I
                /* 1C40 */  0x42, 0x1E, 0x35, 0x69, 0xC9, 0x83, 0x06, 0x4D,  // B.5i...M
                /* 1C48 */  0x79, 0x18, 0xA0, 0x20, 0x3A, 0x44, 0x90, 0x96,  // y.. :D..
                /* 1C50 */  0x87, 0x08, 0x0A, 0x22, 0x20, 0x2B, 0xAB, 0x09,  // ..." +..
                /* 1C58 */  0xC4, 0x74, 0x82, 0x08, 0xC8, 0xFF, 0x7F         // .t.....
            })
            Name (EPY1, 0x682B8978)
            Name (EPY2, 0xE473EA44)
            Name (EPY3, 0x9BB8E4DF)
            Name (EPY4, 0x41658332)
            Method (EYPO, 0, Serialized)
            {
                Return (EPY1) /* \AMW0.EPY1 */
            }

            Method (EYPT, 0, Serialized)
            {
                Return (EPY2) /* \AMW0.EPY2 */
            }

            Method (EYPE, 0, Serialized)
            {
                Return (EPY3) /* \AMW0.EPY3 */
            }

            Method (EYPF, 0, Serialized)
            {
                Return (EPY4) /* \AMW0.EPY4 */
            }

            Method (SPEC, 1, Serialized)
            {
                Return (AMWV) /* \AMWV */
            }

            Method (DEVP, 1, Serialized)
            {
                CreateDWordField (Arg0, Zero, DVID)
                CreateDWordField (Arg0, 0x04, PARA)
                If ((PARA == One))
                {
                    Switch (DVID)
                    {
                        Case (0x00010011)
                        {
                            \_SB.DSAF |= One
                        }
                        Case (0x00010013)
                        {
                            \_SB.DSAF |= 0x02
                        }
                        Case (0x00010023)
                        {
                            \_SB.DSAF |= 0x04
                        }
                        Case (0x00060013)
                        {
                            \_SB.DSAF |= 0x08
                        }
                        Case (0x00060015)
                        {
                            \_SB.DSAF |= 0x10
                        }
                        Case (0x00010015)
                        {
                            \_SB.DSAF |= 0x20
                        }
                        Case (0x00090011)
                        {
                            \_SB.DSAF |= 0x40
                        }
                        Case (0x00070011)
                        {
                            \_SB.DSAF |= 0x80
                        }
                        Case (0x00080013)
                        {
                            \_SB.DSAF |= 0x0100
                        }
                        Case (0x00010019)
                        {
                            \_SB.DSAF |= 0x0200
                        }
                        Case (0x00010017)
                        {
                            \_SB.DSAF |= 0x0400
                        }
                        Case (0x00050011)
                        {
                            \_SB.DSAF |= 0x0800
                        }
                        Case (0x00050012)
                        {
                            \_SB.DSAF |= 0x1000
                        }
                        Case (0x00060017)
                        {
                            \_SB.DSAF |= 0x2000
                        }
                        Case (0x00080021)
                        {
                            \_SB.DSAF |= 0x4000
                        }
                        Case (0x00100011)
                        {
                            \_SB.DSAF |= 0x8000
                        }
                        Case (0x00050001)
                        {
                            \_SB.DSAF |= 0x00010000
                        }
                        Case (0x00120000)
                        {
                            \_SB.DSAF |= 0x00020000
                        }
                        Case (0x00120021)
                        {
                            \_SB.DSAF |= 0x00040000
                        }
                        Case (0x00120011)
                        {
                            \_SB.DSAF |= 0x00080000
                        }
                        Case (0x00120023)
                        {
                            \_SB.DSAF |= 0x00100000
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                ElseIf ((PARA == Zero))
                {
                    Switch (DVID)
                    {
                        Case (0x00010011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFFE
                        }
                        Case (0x00010013)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFFD
                        }
                        Case (0x00010023)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFFB
                        }
                        Case (0x00060013)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFF7
                        }
                        Case (0x00060015)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFEF
                        }
                        Case (0x00010015)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFDF
                        }
                        Case (0x00090011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFFBF
                        }
                        Case (0x00070011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFF7F
                        }
                        Case (0x00080013)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFEFF
                        }
                        Case (0x00010019)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFDFF
                        }
                        Case (0x00010017)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFFBFF
                        }
                        Case (0x00050011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFF7FF
                        }
                        Case (0x00050012)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFEFFF
                        }
                        Case (0x00060017)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFDFFF
                        }
                        Case (0x00080021)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFFBFFF
                        }
                        Case (0x00100011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFF7FFF
                        }
                        Case (0x00050001)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFEFFFF
                        }
                        Case (0x00120000)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFDFFFF
                        }
                        Case (0x00120021)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFFBFFFF
                        }
                        Case (0x00120011)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFF7FFFF
                        }
                        Case (0x00120023)
                        {
                            \_SB.DSAF &= 0xFFFFFFFFFFEFFFFF
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }

                Return (One)
            }

            Method (SDSP, 1, Serialized)
            {
                CreateDWordField (Arg0, Zero, ACTN)
                Return (Zero)
            }

            Method (GDSP, 1, Serialized)
            {
                CreateDWordField (Arg0, Zero, ACTN)
                Return (Zero)
            }

            Method (DEVS, 1, Serialized)
            {
                CreateDWordField (Arg0, Zero, DVID)
                CreateDWordField (Arg0, 0x04, CPAR)
                Switch (DVID)
                {
                    Case (Zero)
                    {
                        Return (Zero)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }

            Method (DSTS, 1, Serialized)
            {
                CreateDWordField (Arg0, Zero, DVID)
                Switch (DVID)
                {
                    Case (0xA0000000)
                    {
                        Local0 = 0x09
                    }
                    Case (0xA0000002)
                    {
                        Local0 = One
                    }
                    Case (Zero)
                    {
                        Return (Zero)
                    }
                    Default
                    {
                        Local0 = Zero
                    }

                }

                Local0 &= 0x0007FFFF
                Return (Local0)
            }

            Method (GPID, 0, Serialized)
            {
                Return (Zero)
            }

            Method (KBFT, 1, Serialized)
            {
                Return (Zero)
            }

            Method (HKEY, 0, Serialized)
            {
                Return (Zero)
            }

            Method (CFVS, 1, Serialized)
            {
            }

            Method (CFVG, 0, Serialized)
            {
            }

            Name (RAMA, 0xCAB11018)
            Name (WBUF, Buffer (0x50) {})
            OperationRegion (\RAMX, SystemMemory, RAMA, 0x0100)
            Field (RAMX, ByteAcc, NoLock, Preserve)
            {
                WFUN,   32, 
                WSIZ,   32, 
                Offset (0x10), 
                IDAT,   896, 
                ODAT,   1024
            }

            Mutex (WMTX, 0x00)
            Name (LSTF, Buffer (0x04) {})
            Name (LSTI, Buffer (0x70) {})
            Name (CURF, Buffer (0x04) {})
            Name (CURI, Buffer (0x70) {})
            Method (WMII, 0, Serialized)
            {
                CURF = WFUN /* \AMW0.WFUN */
                CURI = IDAT /* \AMW0.IDAT */
                If (((CURF == LSTF) && (CURI == LSTI)))
                {
                    Return (Zero)
                }
                Else
                {
                    ODAT = Zero
                    \_SB.ISMI (0xDA)
                    LSTF = WFUN /* \AMW0.WFUN */
                    LSTI = IDAT /* \AMW0.IDAT */
                }
            }

            Method (LERR, 1, Serialized)
            {
                WBUF = ODAT /* \AMW0.ODAT */
                Return (DerefOf (WBUF [Zero]))
            }

            Method (GBOD, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000001
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SBOD, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000002
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GBON, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000003
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GLBN, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000006
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (ISLG, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000007
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GLBO, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000008
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SLBO, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000009
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SAPW, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000004
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SUPW, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000005
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SBOG, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000A
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (LDFT, 0, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000B
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SFTB, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000C
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SDFT, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000D
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SFTM, 0, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000E
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (DCTL, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x8000000F
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GFAN, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000010
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SFAN, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000011
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GFCV, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000012
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (SFCV, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000013
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (CKPW, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000014
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (GTOD, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000015
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (STOD, 1, Serialized)
            {
                If ((Acquire (WMTX, 0xFFFF) == Zero))
                {
                    WFUN = 0x80000016
                    IDAT = Arg0
                    WMII ()
                    WBUF = ODAT /* \AMW0.ODAT */
                    Release (WMTX)
                    Return (WBUF) /* \AMW0.WBUF */
                }

                Return (Ones)
            }

            Method (AAPD, 1, Serialized)
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB)
    {
        Name (RAMB, 0xCAC11018)
        OperationRegion (\RAMW, SystemMemory, RAMB, 0x00010000)
        Field (RAMW, ByteAcc, NoLock, Preserve)
        {
            DSAF,   32, 
            PAR0,   32, 
            PAR1,   32, 
            PAR2,   32, 
            PINX,   32, 
            PADD,   2048
        }

        Mutex (MPAR, 0x00)
        Name (ARBF, Buffer (0x10) {})
        CreateDWordField (ARBF, Zero, REAX)
        CreateDWordField (ARBF, 0x04, REBX)
        CreateDWordField (ARBF, 0x08, RECX)
        CreateDWordField (ARBF, 0x0C, REDX)
        OperationRegion (DEB0, SystemIO, 0x80, One)
        Field (DEB0, ByteAcc, NoLock, Preserve)
        {
            DBG8,   8
        }

        OperationRegion (IOB2, SystemIO, SMIP, 0x02)
        Field (IOB2, ByteAcc, NoLock, Preserve)
        {
            SMPT,   8, 
            SMIS,   8
        }

        Method (ISMI, 1, Serialized)
        {
            SMPT = Arg0
        }

        Method (GMSR, 1, Serialized)
        {
            If ((Acquire (MPAR, 0xFFFF) == Zero))
            {
                PINX = 0x80000000
                PAR0 = Arg0
                ISMI (0x90)
                RECX = Arg0
                REAX = PAR1 /* \_SB_.PAR1 */
                REDX = PAR2 /* \_SB_.PAR2 */
                Release (MPAR)
                Return (ARBF) /* \_SB_.ARBF */
            }

            Return (Ones)
        }

        Method (SMSR, 1, Serialized)
        {
            If ((Acquire (MPAR, 0xFFFF) == Zero))
            {
                CreateDWordField (Arg0, Zero, AEAX)
                CreateDWordField (Arg0, 0x04, AEBX)
                CreateDWordField (Arg0, 0x08, AECX)
                CreateDWordField (Arg0, 0x0C, AEDX)
                PINX = 0x80000001
                PAR0 = AECX /* \_SB_.SMSR.AECX */
                PAR1 = AEAX /* \_SB_.SMSR.AEAX */
                PAR2 = AEDX /* \_SB_.SMSR.AEDX */
                ISMI (0x90)
                Release (MPAR)
            }

            Return (Ones)
        }

        Method (PRID, 1, Serialized)
        {
            If ((Acquire (MPAR, 0xFFFF) == Zero))
            {
                PINX = 0x80000002
                PAR0 = Arg0
                ISMI (0x90)
                REAX = PAR1 /* \_SB_.PAR1 */
                REDX = PAR2 /* \_SB_.PAR2 */
                Release (MPAR)
                Return (ARBF) /* \_SB_.ARBF */
            }

            Return (Ones)
        }

        Method (GPRE, 1, Serialized)
        {
            PAR0 = Arg0
            PINX = 0x80000005
            ISMI (0x90)
            Return (PAR0) /* \_SB_.PAR0 */
        }

        Method (GNVS, 1, Serialized)
        {
            PAR0 = Arg0
            PINX = 0x80000003
            ISMI (0x90)
            Return (PAR1) /* \_SB_.PAR1 */
        }

        Method (SNVS, 2, Serialized)
        {
            PAR0 = Arg0
            PAR1 = Arg1
            PINX = 0x80000004
            ISMI (0x90)
        }

        Method (SIRS, 0, Serialized)
        {
            PINX = 0x8000000A
            ISMI (0x90)
        }

        Method (SARM, 1, Serialized)
        {
            If (((Arg0 > 0x03) && (Arg0 < 0x06)))
            {
                ISMI (0x92)
            }
        }

        Method (GAMM, 0, Serialized)
        {
            ISMI (0x91)
        }

        Method (SAMM, 0, Serialized)
        {
            ISMI (0x92)
        }
    }

    Scope (_SB)
    {
        OperationRegion (WPBR, SystemMemory, 0xCAC22000, 0x0001)
        Field (WPBR, AnyAcc, NoLock, Preserve)
        {
            CTRL,   8
        }
    }

    Scope (\)
    {
        Device (ABAW)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "AsusBACKUPWMI")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x19, 0x56, 0x48, 0xA0, 0x07, 0x3E, 0xBE, 0x4A,  // .VH..>.J
                /* 0008 */  0xBE, 0x6B, 0x0A, 0xB6, 0x7E, 0x2A, 0x92, 0xE6,  // .k..~*..
                /* 0010 */  0x42, 0x43, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // BC..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x4D, 0x4F, 0x01, 0x00   // ..).MO..
            })
            Method (WMBC, 3, Serialized)
            {
                Switch (Arg1)
                {
                    Case (0x41424145)
                    {
                        Return (EABA ())
                    }
                    Case (0x41424147)
                    {
                        Return (GABA ())
                    }
                    Case (0x53425544)
                    {
                        Return (SBUD (Arg2))
                    }
                    Case (0x47425544)
                    {
                        Return (GBUD (Arg2))
                    }
                    Case (0x53595343)
                    {
                        Return (SYSC (Arg2))
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }

                Return (Zero)
            }

            Name (WQMO, Buffer (0x03F5)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xE5, 0x03, 0x00, 0x00, 0x06, 0x0F, 0x00, 0x00,  // ........
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0xA8, 0x50, 0x87, 0x00, 0x01, 0x06, 0x18, 0x42,  // .P.....B
                /* 0020 */  0x20, 0x74, 0x01, 0x89, 0xC0, 0xA1, 0x21, 0x14,  //  t....!.
                /* 0028 */  0x46, 0x01, 0x0C, 0x46, 0x02, 0x84, 0xE4, 0x40,  // F..F...@
                /* 0030 */  0xC8, 0x05, 0x13, 0x13, 0x20, 0x02, 0x42, 0x5E,  // .... .B^
                /* 0038 */  0x05, 0xD8, 0x14, 0x60, 0x12, 0x44, 0xFD, 0xFB,  // ...`.D..
                /* 0040 */  0x43, 0x94, 0x04, 0x87, 0x12, 0x02, 0x21, 0x89,  // C.....!.
                /* 0048 */  0x02, 0xCC, 0x0B, 0xD0, 0x2D, 0xC0, 0xB0, 0x00,  // ....-...
                /* 0050 */  0xDB, 0x02, 0x4C, 0x0B, 0x70, 0x0C, 0x49, 0xA5,  // ..L.p.I.
                /* 0058 */  0x81, 0x53, 0x02, 0x4B, 0x81, 0x90, 0x50, 0x01,  // .S.K..P.
                /* 0060 */  0xCA, 0x05, 0xF8, 0x16, 0xA0, 0x1D, 0x51, 0x92,  // ......Q.
                /* 0068 */  0x05, 0x58, 0x86, 0x11, 0x81, 0x47, 0x11, 0xD9,  // .X...G..
                /* 0070 */  0x68, 0x9C, 0xA0, 0x6C, 0x68, 0x94, 0x0C, 0x08,  // h..lh...
                /* 0078 */  0x79, 0x16, 0x60, 0x1D, 0x98, 0x10, 0xD8, 0xBD,  // y.`.....
                /* 0080 */  0x00, 0x83, 0x02, 0x84, 0xCD, 0x42, 0xE2, 0x04,  // .....B..
                /* 0088 */  0x58, 0x13, 0xA0, 0x4D, 0x80, 0x31, 0x01, 0xE6,  // X..M.1..
                /* 0090 */  0x04, 0xD8, 0x12, 0xE0, 0x4C, 0x80, 0x45, 0x28,  // ....L.E(
                /* 0098 */  0x79, 0x43, 0x11, 0x58, 0xBC, 0x0A, 0x71, 0x84,  // yC.X..q.
                /* 00A0 */  0x12, 0xC3, 0x80, 0x31, 0xA2, 0x44, 0x0B, 0x65,  // ...1.D.e
                /* 00A8 */  0x98, 0x80, 0x91, 0x2A, 0x83, 0x11, 0x72, 0x8C,  // ...*..r.
                /* 00B0 */  0x70, 0xB6, 0x3F, 0x08, 0x12, 0x6C, 0xC1, 0x1A,  // p.?..l..
                /* 00B8 */  0xAA, 0x23, 0x8D, 0x06, 0x35, 0xBC, 0x04, 0x87,  // .#..5...
                /* 00C0 */  0xEB, 0xA1, 0x9E, 0x63, 0xE7, 0x02, 0xA4, 0x4F,  // ...c...O
                /* 00C8 */  0x52, 0x20, 0x07, 0x79, 0x6E, 0x75, 0x8E, 0x93,  // R .ynu..
                /* 00D0 */  0x80, 0x24, 0x30, 0x56, 0x82, 0x0E, 0x06, 0x0E,  // .$0V....
                /* 00D8 */  0xC5, 0x35, 0xA0, 0x66, 0x7C, 0xBC, 0x4C, 0x10,  // .5.f|.L.
                /* 00E0 */  0x1C, 0x6A, 0x88, 0x1E, 0x68, 0xB8, 0x13, 0x38,  // .j..h..8
                /* 00E8 */  0x44, 0x06, 0xE8, 0x69, 0x1D, 0x0D, 0xE6, 0x00,  // D..i....
                /* 00F0 */  0x60, 0x87, 0x93, 0xD1, 0x3D, 0xA0, 0x54, 0x01,  // `...=.T.
                /* 00F8 */  0x66, 0xC7, 0xAC, 0x89, 0x25, 0x38, 0x1E, 0x43,  // f...%8.C
                /* 0100 */  0x9F, 0xEE, 0xF9, 0x9C, 0x70, 0x02, 0xCB, 0x1F,  // ....p...
                /* 0108 */  0x04, 0x6A, 0x64, 0x86, 0xF6, 0x20, 0x4F, 0x2B,  // .jd.. O+
                /* 0110 */  0x66, 0xC8, 0xC3, 0x3F, 0x2C, 0x26, 0x16, 0x42,  // f..?,&.B
                /* 0118 */  0x1F, 0x04, 0x8F, 0x07, 0xDE, 0xFF, 0x7F, 0x3C,  // .......<
                /* 0120 */  0xE0, 0x51, 0x7C, 0x26, 0x10, 0xC2, 0x2B, 0x41,  // .Q|&..+A
                /* 0128 */  0x6C, 0x0F, 0x28, 0x41, 0x81, 0xC0, 0xE8, 0x01,  // l.(A....
                /* 0130 */  0xD9, 0xAF, 0x00, 0x84, 0xE0, 0x65, 0x8E, 0x48,  // .....e.H
                /* 0138 */  0x4E, 0x11, 0x34, 0x26, 0x4F, 0xEE, 0xD5, 0x20,  // N.4&O.. 
                /* 0140 */  0xC4, 0xBB, 0x40, 0xE8, 0xB3, 0x3A, 0xE5, 0x30,  // ..@..:.0
                /* 0148 */  0x85, 0x9F, 0x13, 0x28, 0x41, 0x91, 0x03, 0x40,  // ...(A..@
                /* 0150 */  0x89, 0x19, 0x00, 0xEA, 0x14, 0x10, 0xFB, 0x70,  // .......p
                /* 0158 */  0x4E, 0xE6, 0x00, 0x0E, 0x27, 0xCA, 0x39, 0x1C,  // N...'.9.
                /* 0160 */  0x8F, 0x8F, 0x0C, 0x46, 0x38, 0xCB, 0x72, 0x4F,  // ...F8.rO
                /* 0168 */  0x0E, 0x44, 0xF3, 0x1C, 0x34, 0x85, 0x53, 0x7A,  // .D..4.Sz
                /* 0170 */  0x19, 0x30, 0xC1, 0x04, 0xAB, 0x94, 0x05, 0x10,  // .0......
                /* 0178 */  0x05, 0x3A, 0x1E, 0xC8, 0xC6, 0x4A, 0x4D, 0xA0,  // .:...JM.
                /* 0180 */  0x23, 0x85, 0x65, 0x01, 0x69, 0x38, 0xB8, 0x33,  // #.e.i8.3
                /* 0188 */  0x45, 0x98, 0xD7, 0x03, 0x0F, 0xDC, 0xE7, 0x03,  // E.......
                /* 0190 */  0xCF, 0x2A, 0xC2, 0x93, 0x01, 0x01, 0xD5, 0x71,  // .*.....q
                /* 0198 */  0x83, 0xC7, 0x87, 0x50, 0xF8, 0x31, 0x51, 0x38,  // ...P.1Q8
                /* 01A0 */  0xC7, 0x05, 0xA3, 0x20, 0x3E, 0x01, 0x38, 0x0A,  // ... >.8.
                /* 01A8 */  0x84, 0x9C, 0x1C, 0x06, 0xD0, 0x43, 0x3B, 0x0B,  // .....C;.
                /* 01B0 */  0x43, 0x1C, 0xAA, 0x09, 0x3C, 0x95, 0x47, 0x06,  // C...<.G.
                /* 01B8 */  0x58, 0x03, 0x8C, 0x78, 0x72, 0x9E, 0x86, 0xE1,  // X..xr...
                /* 01C0 */  0x0C, 0x69, 0x38, 0x7E, 0x15, 0x38, 0xAF, 0x04,  // .i8~.8..
                /* 01C8 */  0xFC, 0x48, 0x00, 0xFF, 0xBA, 0xE1, 0x03, 0xC1,  // .H......
                /* 01D0 */  0x29, 0x3C, 0x69, 0xBC, 0x5D, 0x24, 0xF0, 0x91,  // )<i.]$..
                /* 01D8 */  0x00, 0x1C, 0x40, 0xBE, 0x03, 0x58, 0xE9, 0x39,  // ..@..X.9
                /* 01E0 */  0x80, 0xCE, 0x21, 0x44, 0x98, 0x68, 0x26, 0xF8,  // ..!D.h&.
                /* 01E8 */  0xFF, 0x87, 0xE7, 0x82, 0x47, 0x4A, 0x65, 0x8D,  // ....GJe.
                /* 01F0 */  0x0B, 0x75, 0x2C, 0xF0, 0xE1, 0x80, 0x61, 0x9F,  // .u,...a.
                /* 01F8 */  0xFC, 0xD1, 0x14, 0x3D, 0x43, 0x5D, 0x08, 0x0E,  // ...=C]..
                /* 0200 */  0xEA, 0xED, 0xC1, 0x16, 0x0D, 0x2A, 0x34, 0x08,  // .....*4.
                /* 0208 */  0xEB, 0x91, 0x72, 0x58, 0xA3, 0x85, 0x3D, 0xE0,  // ..rX..=.
                /* 0210 */  0x27, 0x07, 0xDF, 0x3A, 0x3C, 0x33, 0x63, 0x84,  // '..:<3c.
                /* 0218 */  0xF5, 0x68, 0x1D, 0xE9, 0x60, 0x80, 0x12, 0x35,  // .h..`..5
                /* 0220 */  0x54, 0x03, 0xC9, 0xE3, 0x2C, 0xC8, 0xCD, 0x00,  // T...,...
                /* 0228 */  0xCE, 0xDC, 0x4E, 0xE5, 0x50, 0xD9, 0xC9, 0x00,  // ..N.P...
                /* 0230 */  0x38, 0x0C, 0xE3, 0x48, 0xCE, 0xE3, 0xF1, 0x21,  // 8..H...!
                /* 0238 */  0xC2, 0x8B, 0x0C, 0x3B, 0x19, 0x00, 0x9E, 0x3D,  // ...;...=
                /* 0240 */  0x9E, 0x0C, 0x40, 0xF1, 0xFF, 0x3F, 0x19, 0xE0,  // ..@..?..
                /* 0248 */  0xA2, 0xAC, 0x42, 0x27, 0x03, 0x3E, 0x60, 0x0B,  // ..B'.>`.
                /* 0250 */  0x02, 0xD2, 0x84, 0xDE, 0x6F, 0x1E, 0x67, 0x0C,  // ....o.g.
                /* 0258 */  0xEC, 0xC1, 0x1D, 0x47, 0xE4, 0x37, 0x80, 0x63,  // ...G.7.c
                /* 0260 */  0x79, 0xA0, 0x61, 0x12, 0x00, 0x75, 0x1E, 0xF0,  // y.a..u..
                /* 0268 */  0xA8, 0x1C, 0x9E, 0x42, 0xE1, 0x69, 0x74, 0x2C,  // ...B.it,
                /* 0270 */  0x40, 0x9C, 0x0E, 0x28, 0x88, 0x0F, 0x41, 0x8E,  // @..(..A.
                /* 0278 */  0x70, 0x2C, 0x40, 0x8F, 0xD2, 0xE3, 0x38, 0x05,  // p,@...8.
                /* 0280 */  0x36, 0xBA, 0x83, 0x64, 0x03, 0xF3, 0xD8, 0xB8,  // 6..d....
                /* 0288 */  0x06, 0x08, 0xDD, 0x00, 0x8C, 0x6B, 0x35, 0x83,  // .....k5.
                /* 0290 */  0x45, 0x81, 0xF9, 0x4C, 0x80, 0xD1, 0x75, 0x25,  // E..L..u%
                /* 0298 */  0x00, 0x59, 0x86, 0x11, 0xA1, 0x55, 0x80, 0x48,  // .Y...U.H
                /* 02A0 */  0x23, 0xA4, 0xEE, 0x48, 0x9E, 0x11, 0x78, 0x0F,  // #..H..x.
                /* 02A8 */  0x5F, 0x64, 0x46, 0x20, 0x8B, 0x71, 0xB1, 0x80,  // _dF .q..
                /* 02B0 */  0x72, 0xDC, 0xE0, 0x93, 0x06, 0xFB, 0x91, 0xC0,  // r.......
                /* 02B8 */  0x63, 0x02, 0x9B, 0x3E, 0x01, 0xFF, 0xFF, 0x6B,  // c..>...k
                /* 02C0 */  0x05, 0xB8, 0xD1, 0xF9, 0xA9, 0xC4, 0xC7, 0x05,  // ........
                /* 02C8 */  0x1E, 0x78, 0xD4, 0x14, 0xC4, 0x83, 0x72, 0x98,  // .x....r.
                /* 02D0 */  0xB9, 0xA2, 0x4F, 0x6B, 0x1E, 0xC0, 0x1B, 0xC9,  // ..Ok....
                /* 02D8 */  0x53, 0x92, 0x21, 0x5E, 0x22, 0x7C, 0x4A, 0xF2,  // S.!^"|J.
                /* 02E0 */  0xA9, 0x04, 0xEC, 0x50, 0x3E, 0x95, 0x00, 0x9E,  // ...P>...
                /* 02E8 */  0x1C, 0x3A, 0x35, 0xEB, 0xF4, 0x54, 0x02, 0x2E,  // .:5..T..
                /* 02F0 */  0x49, 0xEB, 0xD0, 0xA9, 0x04, 0x77, 0xB0, 0xF3,  // I....w..
                /* 02F8 */  0x84, 0x1E, 0x7F, 0xD8, 0x29, 0x07, 0x73, 0x80,  // ....).s.
                /* 0300 */  0xE0, 0x27, 0x14, 0x9D, 0x7D, 0x50, 0x21, 0x28,  // .'..}P!(
                /* 0308 */  0x14, 0xE1, 0x54, 0x82, 0x12, 0x0D, 0x47, 0x41,  // ..T...GA
                /* 0310 */  0x3C, 0x36, 0x07, 0x81, 0xD0, 0xFF, 0xFF, 0x5C,  // <6.....\
                /* 0318 */  0x80, 0x3B, 0xB6, 0xF9, 0xA4, 0xE7, 0x4B, 0x81,  // .;....K.
                /* 0320 */  0xC5, 0x9F, 0x0A, 0xA0, 0xDE, 0x28, 0xD8, 0xD1,  // .....(..
                /* 0328 */  0x07, 0x18, 0x0D, 0x0A, 0xCE, 0x34, 0xF9, 0x18,  // .....4..
                /* 0330 */  0x3C, 0x28, 0x70, 0x0F, 0xD7, 0x27, 0x07, 0xC0,  // <(p..'..
                /* 0338 */  0x93, 0x44, 0xAB, 0x0A, 0x4F, 0x0E, 0x20, 0xD3,  // .D..O. .
                /* 0340 */  0x7F, 0x72, 0x40, 0xAB, 0x00, 0xD2, 0x39, 0x8C,  // .r@...9.
                /* 0348 */  0x9F, 0x1C, 0xE0, 0xE4, 0x3E, 0x32, 0xD0, 0x51,  // ....>2.Q
                /* 0350 */  0xF9, 0xFF, 0x9F, 0x98, 0x44, 0xA9, 0x0F, 0x28,  // ....D..(
                /* 0358 */  0xA8, 0x9C, 0x63, 0xA7, 0x20, 0x06, 0x74, 0x88,  // ..c. .t.
                /* 0360 */  0x93, 0x03, 0xF4, 0xF3, 0x11, 0xF0, 0xBC, 0xDA,  // ........
                /* 0368 */  0x00, 0x8B, 0xE8, 0x53, 0x45, 0x85, 0x9D, 0x2A,  // ...SE..*
                /* 0370 */  0x05, 0xF1, 0x54, 0x7D, 0x9F, 0x80, 0x7B, 0xAB,  // ..T}..{.
                /* 0378 */  0x7C, 0xB1, 0x01, 0xFB, 0x7D, 0x02, 0x30, 0xF3,  // |...}.0.
                /* 0380 */  0xFF, 0xBF, 0x4F, 0x40, 0xF2, 0x78, 0x9F, 0x00,  // ..O@.x..
                /* 0388 */  0x97, 0x42, 0x9B, 0x3E, 0x35, 0x1A, 0xB5, 0x6A,  // .B.>5..j
                /* 0390 */  0x50, 0xA6, 0x46, 0x99, 0x06, 0xB5, 0xFA, 0x54,  // P.F....T
                /* 0398 */  0x6A, 0xCC, 0x98, 0x96, 0x93, 0x96, 0x2F, 0x32,  // j...../2
                /* 03A0 */  0x54, 0xC4, 0x72, 0x04, 0x62, 0xE9, 0x14, 0x32,  // T.r.b..2
                /* 03A8 */  0x72, 0x12, 0x30, 0x88, 0xEE, 0x0E, 0xE4, 0x73,  // r.0....s
                /* 03B0 */  0x2A, 0x20, 0x4B, 0x03, 0x11, 0x90, 0x23, 0x7D,  // * K...#}
                /* 03B8 */  0x1B, 0x04, 0xE4, 0x7C, 0x20, 0x02, 0xB2, 0x2A,  // ...| ..*
                /* 03C0 */  0x0F, 0x40, 0x4C, 0x22, 0x88, 0x80, 0x9C, 0x0D,  // .@L"....
                /* 03C8 */  0x88, 0x06, 0x05, 0xA2, 0xB1, 0xD6, 0x29, 0x20,  // ......) 
                /* 03D0 */  0x87, 0x04, 0x11, 0x90, 0x05, 0x7E, 0xD1, 0x04,  // .....~..
                /* 03D8 */  0x64, 0xB9, 0x20, 0x02, 0x72, 0x50, 0x20, 0x1A,  // d. .rP .
                /* 03E0 */  0x1B, 0x88, 0x0A, 0x7E, 0x23, 0x08, 0xC8, 0xEA,  // ...~#...
                /* 03E8 */  0x41, 0x04, 0x64, 0x9D, 0x36, 0x80, 0x98, 0x6A,  // A.d.6..j
                /* 03F0 */  0x10, 0x01, 0xF9, 0xFF, 0x0F                     // .....
            })
            OperationRegion (DEB0, SystemIO, 0x80, One)
            Field (DEB0, ByteAcc, NoLock, Preserve)
            {
                DBG8,   8
            }

            OperationRegion (IOB2, SystemIO, SMIP, 0x02)
            Field (IOB2, ByteAcc, NoLock, Preserve)
            {
                SMPT,   8, 
                SMIS,   8
            }

            Method (ISMI, 1, Serialized)
            {
                SMPT = Arg0
            }

            Method (EABA, 0, Serialized)
            {
                ISMI (0x95)
                Return (Zero)
            }

            Method (GABA, 0, Serialized)
            {
                Return (ABAP) /* \ABAW.ABAP */
            }

            Method (SYSC, 1, Serialized)
            {
                SYSD = Arg0
                ISMI (0x95)
                Return (ERCO) /* \ABAW.ERCO */
            }

            Method (SBUD, 1, Serialized)
            {
                IDAT = Arg0
                Local0 = (INDX + 0x0C)
                Local1 = (Local0 + ABAP) /* \ABAW.ABAP */
                OperationRegion (SBTB, SystemMemory, Local1, 0x04)
                Field (SBTB, ByteAcc, NoLock, Preserve)
                {
                    TDAT,   32
                }

                TDAT = DAT0 /* \ABAW.DAT0 */
                Return (Zero)
            }

            Method (GBUD, 1, Serialized)
            {
                INDX = Arg0
                Local0 = (INDX + 0x0C)
                Local1 = (Local0 + ABAP) /* \ABAW.ABAP */
                OperationRegion (GBTB, SystemMemory, Local1, 0x04)
                Field (GBTB, ByteAcc, NoLock, Preserve)
                {
                    RDAT,   32
                }

                Return (RDAT) /* \ABAW.GBUD.RDAT */
            }

            Name (ABAP, 0xCACA4018)
            Name (WBUF, Buffer (0x50) {})
            OperationRegion (\ABAX, SystemMemory, ABAP, 0x00010000)
            Field (ABAX, ByteAcc, NoLock, Preserve)
            {
                SIGN,   32, 
                WFUN,   32, 
                DSIG,   32, 
                BUDA,   1024, 
                ERCO,   32, 
                IDAT,   96
            }

            Field (ABAX, ByteAcc, NoLock, Preserve)
            {
                Offset (0x90), 
                INDX,   32, 
                DAT0,   32
            }

            Field (ABAX, ByteAcc, NoLock, Preserve)
            {
                SYSD,   96
            }
        }
    }

    Scope (\)
    {
        Device (ACCE)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "ASUSCONTROLCENTER")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x15, 0xB1, 0x2B, 0xB8, 0xAE, 0x43, 0x35, 0x4B,  // ..+..C5K
                /* 0008 */  0xB7, 0x9D, 0xBD, 0x64, 0x16, 0xAB, 0xC3, 0x81,  // ...d....
                /* 0010 */  0x42, 0x43, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // BC..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x4D, 0x4F, 0x01, 0x00   // ..).MO..
            })
            Method (WMBC, 3, Serialized)
            {
                Switch (Arg1)
                {
                    Case (0x41504631)
                    {
                        Return (APF1 (Arg2))
                    }
                    Case (0x41505057)
                    {
                        Return (APPW (Arg2))
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }

                Return (Zero)
            }

            Name (WQMO, Buffer (0x0298)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x88, 0x02, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00,  // ........
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xC9, 0x83, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x20, 0x82, 0x00, 0x89, 0xC0, 0xA1, 0x21, 0x14,  //  .....!.
                /* 0028 */  0x43, 0x01, 0x0C, 0x46, 0x02, 0x84, 0xE4, 0x40,  // C..F...@
                /* 0030 */  0xC8, 0x05, 0x13, 0x13, 0x20, 0x02, 0x42, 0x5E,  // .... .B^
                /* 0038 */  0x05, 0xD8, 0x14, 0x60, 0x12, 0x44, 0xFD, 0xFB,  // ...`.D..
                /* 0040 */  0x43, 0x94, 0x04, 0x87, 0x12, 0x02, 0x21, 0x89,  // C.....!.
                /* 0048 */  0x02, 0xCC, 0x0B, 0xD0, 0x2D, 0xC0, 0xB0, 0x00,  // ....-...
                /* 0050 */  0xDB, 0x02, 0x4C, 0x0B, 0x70, 0x0C, 0x49, 0xA5,  // ..L.p.I.
                /* 0058 */  0x81, 0x53, 0x02, 0x4B, 0x81, 0x90, 0x50, 0x01,  // .S.K..P.
                /* 0060 */  0xCA, 0x05, 0xF8, 0x16, 0xA0, 0x1D, 0x51, 0x92,  // ......Q.
                /* 0068 */  0x05, 0x58, 0x86, 0x11, 0x81, 0x47, 0x11, 0xD9,  // .X...G..
                /* 0070 */  0x68, 0x9C, 0xA0, 0x6C, 0x68, 0x94, 0x0C, 0x08,  // h..lh...
                /* 0078 */  0x79, 0x16, 0x60, 0x1D, 0x98, 0x10, 0xD8, 0xBD,  // y.`.....
                /* 0080 */  0x00, 0x85, 0x02, 0xC4, 0x09, 0x50, 0x86, 0x21,  // .....P.!
                /* 0088 */  0x84, 0xC6, 0x10, 0x64, 0x4D, 0x80, 0xAD, 0x91,  // ...dM...
                /* 0090 */  0xC8, 0x99, 0x00, 0x83, 0x02, 0x2C, 0xA2, 0x10,  // .....,..
                /* 0098 */  0xAC, 0x30, 0xA1, 0x0C, 0xD2, 0x9B, 0x00, 0x73,  // .0.....s
                /* 00A0 */  0x93, 0x12, 0x8A, 0x31, 0x6A, 0x43, 0x13, 0x6C,  // ...1jC.l
                /* 00A8 */  0x8C, 0x98, 0x71, 0x3A, 0x44, 0xD4, 0x04, 0xE2,  // ..q:D...
                /* 00B0 */  0xB4, 0x3F, 0x08, 0x12, 0x69, 0xC1, 0x1A, 0xAA,  // .?..i...
                /* 00B8 */  0x23, 0x8D, 0x06, 0x35, 0xBC, 0x04, 0x87, 0xEB,  // #..5....
                /* 00C0 */  0xA1, 0x9E, 0x63, 0xE7, 0x02, 0xA4, 0x4F, 0x52,  // ..c...OR
                /* 00C8 */  0x20, 0x07, 0x79, 0x6E, 0x75, 0x8E, 0x93, 0x80,  //  .ynu...
                /* 00D0 */  0x24, 0x30, 0x56, 0x82, 0x0E, 0x06, 0x0E, 0xC5,  // $0V.....
                /* 00D8 */  0x35, 0xA0, 0x66, 0x7C, 0xBC, 0x4C, 0x10, 0x1C,  // 5.f|.L..
                /* 00E0 */  0x6A, 0x88, 0x1E, 0x68, 0xB8, 0x13, 0x38, 0x44,  // j..h..8D
                /* 00E8 */  0x06, 0x68, 0x61, 0xA3, 0x41, 0x1D, 0x00, 0x3C,  // .ha.A..<
                /* 00F0 */  0xAD, 0x93, 0x79, 0x0F, 0x28, 0x55, 0x80, 0xD9,  // ..y.(U..
                /* 00F8 */  0x31, 0x6B, 0x8E, 0x09, 0x8E, 0xC7, 0xD0, 0xA7,  // 1k......
                /* 0100 */  0x7B, 0x3E, 0x27, 0x9C, 0xC0, 0xF2, 0x07, 0x81,  // {>'.....
                /* 0108 */  0x1A, 0x99, 0xA1, 0x3D, 0xC9, 0xD3, 0x8A, 0x19,  // ...=....
                /* 0110 */  0xF2, 0xF0, 0x0F, 0x8B, 0x89, 0x85, 0xD0, 0x07,  // ........
                /* 0118 */  0xC1, 0xE3, 0x81, 0xF7, 0xFF, 0x1F, 0x0F, 0x78,  // .......x
                /* 0120 */  0x14, 0x9F, 0x09, 0x84, 0xF0, 0x4A, 0x10, 0xDB,  // .....J..
                /* 0128 */  0x03, 0x7A, 0x44, 0xC0, 0x02, 0x7B, 0x40, 0xF6,  // .zD..{@.
                /* 0130 */  0x2B, 0x00, 0x21, 0x78, 0x99, 0x23, 0x92, 0x53,  // +.!x.#.S
                /* 0138 */  0x04, 0x8D, 0xC9, 0x38, 0x11, 0xE2, 0x3F, 0x39,  // ...8..?9
                /* 0140 */  0x70, 0x91, 0xD0, 0x28, 0x31, 0xD0, 0xA8, 0x23,  // p..(1..#
                /* 0148 */  0x40, 0xD4, 0x88, 0x41, 0x43, 0x1F, 0x4B, 0x68,  // @..AC.Kh
                /* 0150 */  0x0F, 0xC6, 0xE7, 0x05, 0x23, 0x9C, 0x62, 0xB9,  // ....#.b.
                /* 0158 */  0xC7, 0x06, 0xA2, 0x79, 0x36, 0x3A, 0x2D, 0x9C,  // ...y6:-.
                /* 0160 */  0xCF, 0x9B, 0x80, 0x09, 0x06, 0x7F, 0x18, 0x68,  // .......h
                /* 0168 */  0x94, 0x96, 0x4E, 0x21, 0x1B, 0xCB, 0xF4, 0x88,  // ..N!....
                /* 0170 */  0x28, 0x95, 0x47, 0x10, 0x37, 0xE6, 0x19, 0x14,  // (.G.7...
                /* 0178 */  0x0E, 0xAD, 0x53, 0x42, 0x58, 0x1D, 0x12, 0x74,  // ..SBX..t
                /* 0180 */  0xCA, 0x30, 0xB0, 0x23, 0x93, 0xE8, 0x88, 0xE1,  // .0.#....
                /* 0188 */  0xE1, 0x98, 0xD7, 0x31, 0x0F, 0x1B, 0x14, 0xC4,  // ...1....
                /* 0190 */  0x80, 0xCE, 0x00, 0x21, 0x27, 0x87, 0x00, 0x94,  // ...!'...
                /* 0198 */  0x0A, 0x10, 0xCD, 0xE0, 0x6C, 0x8E, 0xE7, 0x61,  // ....l..a
                /* 01A0 */  0xC0, 0xA2, 0x2F, 0x0A, 0x74, 0x7A, 0xBE, 0x02,  // ../.tz..
                /* 01A8 */  0x70, 0x0D, 0x10, 0x3A, 0x14, 0x18, 0xD8, 0x6A,  // p..:...j
                /* 01B0 */  0x00, 0x29, 0x18, 0x9F, 0xEC, 0xA3, 0x44, 0x02,  // .)....D.
                /* 01B8 */  0xA6, 0xEB, 0x1C, 0x00, 0xFD, 0x8E, 0xE1, 0x11,  // ........
                /* 01C0 */  0x9C, 0xDD, 0x23, 0xC5, 0x23, 0x46, 0x82, 0xFA,  // ..#.#F..
                /* 01C8 */  0xAE, 0x01, 0xA0, 0x00, 0xF2, 0xD8, 0xAD, 0x74,  // .......t
                /* 01D0 */  0xFA, 0x74, 0x0C, 0x21, 0xC2, 0x44, 0x33, 0x3A,  // .t.!.D3:
                /* 01D8 */  0x0F, 0x3F, 0x54, 0x54, 0xDC, 0xA1, 0x52, 0x10,  // .?TT..R.
                /* 01E0 */  0x0F, 0xD5, 0x51, 0x86, 0x8A, 0xFA, 0xFF, 0x1F,  // ..Q.....
                /* 01E8 */  0x1F, 0xF8, 0xA1, 0xC1, 0x07, 0x89, 0x27, 0x01,  // ......'.
                /* 01F0 */  0xCC, 0x01, 0xE0, 0x21, 0x03, 0xD6, 0xA9, 0x20,  // ...!... 
                /* 01F8 */  0x64, 0x44, 0x4F, 0xC3, 0x70, 0x9E, 0x2C, 0x87,  // dDO.p.,.
                /* 0200 */  0xF3, 0x64, 0xF9, 0x58, 0x7C, 0x88, 0x80, 0x3F,  // .d.X|..?
                /* 0208 */  0x5A, 0x2C, 0x41, 0x81, 0xB3, 0x05, 0x39, 0x3C,  // Z,A...9<
                /* 0210 */  0x46, 0xF0, 0x48, 0xA9, 0xAC, 0x71, 0xA1, 0x2E,  // F.H..q..
                /* 0218 */  0x07, 0x3E, 0xC5, 0x30, 0xEC, 0xF7, 0x06, 0x5F,  // .>.0..._
                /* 0220 */  0x11, 0xCE, 0xF0, 0x2D, 0xE2, 0xA0, 0xDE, 0x37,  // ...-...7
                /* 0228 */  0x6C, 0x4C, 0xA3, 0x50, 0x83, 0xB0, 0x1E, 0x29,  // lL.P...)
                /* 0230 */  0x87, 0x35, 0x5A, 0xD8, 0x03, 0x7E, 0xD6, 0xF0,  // .5Z..~..
                /* 0238 */  0x3D, 0xC5, 0x33, 0x33, 0x46, 0x58, 0x8F, 0xD6,  // =.33FX..
                /* 0240 */  0xA7, 0x09, 0xD8, 0x08, 0xBD, 0x9F, 0x26, 0x00,  // ......&.
                /* 0248 */  0x5D, 0xFF, 0xFF, 0xD3, 0x04, 0xC0, 0x39, 0xAF,  // ].....9.
                /* 0250 */  0x42, 0x4F, 0x13, 0x60, 0x53, 0x68, 0xD3, 0xA7,  // BO.`Sh..
                /* 0258 */  0x46, 0xA3, 0x56, 0x0D, 0xCA, 0xD4, 0x28, 0xD3,  // F.V...(.
                /* 0260 */  0xA0, 0x56, 0x9F, 0x4A, 0x8D, 0x19, 0x3B, 0x39,  // .V.J..;9
                /* 0268 */  0x38, 0xC6, 0x62, 0x35, 0x16, 0x8B, 0x58, 0x8E,  // 8.b5..X.
                /* 0270 */  0x40, 0xAC, 0x92, 0x42, 0x46, 0x40, 0x24, 0x19,  // @..BF@$.
                /* 0278 */  0x44, 0x40, 0x96, 0x77, 0xF2, 0x11, 0x90, 0xC5,  // D@.w....
                /* 0280 */  0x82, 0x08, 0xC8, 0xF9, 0x2C, 0x00, 0xB1, 0xB0,  // ....,...
                /* 0288 */  0x20, 0x02, 0x72, 0xB0, 0xBF, 0x83, 0x80, 0xFC,  //  .r.....
                /* 0290 */  0xFF, 0x8F, 0x09, 0x22, 0x20, 0xFF, 0xFF, 0x01   // ..." ...
            })
            OperationRegion (DEB0, SystemIO, 0x80, One)
            Field (DEB0, ByteAcc, NoLock, Preserve)
            {
                DBG8,   8
            }

            OperationRegion (IOB2, SystemIO, SMIP, 0x02)
            Field (IOB2, ByteAcc, NoLock, Preserve)
            {
                SMPT,   8, 
                SMIS,   8
            }

            Method (ISMI, 1, Serialized)
            {
                SMPT = Arg0
            }

            Method (WMII, 0, Serialized)
            {
                ISMI (0x96)
            }

            Method (APF1, 1, Serialized)
            {
                WFUN = 0x80000004
                IDAT = Arg0
                WMII ()
                Return (WSTA) /* \ACCE.WSTA */
            }

            Method (APPW, 1, Serialized)
            {
                WFUN = 0x80000008
                IDAT = Arg0
                WMII ()
                Return (WSTA) /* \ACCE.WSTA */
            }

            Name (ACCB, 0xCAC93018)
            OperationRegion (\ACCX, SystemMemory, ACCB, 0x0100)
            Field (ACCX, ByteAcc, NoLock, Preserve)
            {
                WSIZ,   32, 
                WFUN,   32, 
                WSTA,   32, 
                IDAT,   1952
            }
        }
    }

    Scope (_SB)
    {
        Name (ANVM, 0xCAC63000)
        OperationRegion (ANVX, SystemMemory, ANVM, 0x00030000)
        Name (ASFH, 0xCAC23000)
        OperationRegion (ASFX, SystemMemory, ASFH, 0x00040000)
    }

    Name (BDID, 0xFF)
    Scope (_SB.PCI0.GP13.XHC0)
    {
        Device (RHUB)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Device (PRT1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT2)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "RIGHT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x2,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT3)
            {
                Name (_ADR, 0x03)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x3,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT4)
            {
                Name (_ADR, 0x04)  // _ADR: Address
                Name (UPC1, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC2, Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                {
                    Return (UPC2) /* \_SB_.PCI0.GP13.XHC0.RHUB.PRT4.UPC2 */
                }

                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "RIGHT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x4,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT5)
            {
                Name (_ADR, 0x05)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT6)
            {
                Name (_ADR, 0x06)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "RIGHT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x2,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT7)
            {
                Name (_ADR, 0x07)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x3,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }

            Device (PRT8)
            {
                Name (_ADR, 0x08)  // _ADR: Address
                Name (UPC1, Package (0x04)
                {
                    Zero, 
                    0xFF, 
                    Zero, 
                    Zero
                })
                Name (UPC2, Package (0x04)
                {
                    0xFF, 
                    0x03, 
                    Zero, 
                    Zero
                })
                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                {
                    Return (UPC2) /* \_SB_.PCI0.GP13.XHC0.RHUB.PRT8.UPC2 */
                }

                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "RIGHT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x4,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x1,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 00000114
[008h 0008   1]                     Revision : 06
[009h 0009   1]                     Checksum : ED
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]                 FACS Address : CAEF0000
[028h 0040   4]                 DSDT Address : CAB16000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 01 [Desktop]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 000000B4
[04Ch 0076   4]       PM Timer Block Address : 00000808
[050h 0080   4]           GPE0 Block Address : 00000820
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0400
[066h 0102   2]           Cache Flush Stride : 0010
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0001
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 0
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0003C5A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 1
                Remote Power-on capable (V4) : 1
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 00 [Undefined/Legacy]
[078h 0120   8]                      Address : 00000000000000B2

[080h 0128   1]         Value to cause reset : BE
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 02
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000CAB16000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 02 [Word Access:16]
[098h 0152   8]                      Address : 0000000000000800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 02 [Word Access:16]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 02 [Word Access:16]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 00000000000000B4

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 01 [Byte Access:8]
[0E0h 0224   8]                      Address : 0000000000000820

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 01 [Byte Access:8]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

[10Ch 0268   8]                Hypervisor ID : 0000000000000000

Raw Table Data: Length 276 (0x114)

    0000: 46 41 43 50 14 01 00 00 06 ED 41 4C 41 53 4B 41  // FACP......ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 00 00 EF CA 00 60 B1 CA 00 01 09 00  // .........`......
    0030: B2 00 00 00 A0 A1 00 00 00 08 00 00 00 00 00 00  // ................
    0040: 04 08 00 00 00 00 00 00 B4 00 00 00 08 08 00 00  // ................
    0050: 20 08 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 65 00 E9 03 00 04 10 00 01 03 0D 00 32 01 00 00  // e...........2...
    0070: A5 C5 03 00 01 08 00 00 B2 00 00 00 00 00 00 00  // ................
    0080: BE 00 00 02 00 00 00 00 00 00 00 00 00 60 B1 CA  // .............`..
    0090: 00 00 00 00 01 20 00 02 00 08 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 02 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 08 00 00 00 00 00 00 01 00 00 02 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 B4 00 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 08 00 00 00 00 00 00 01 40 00 01  // . ...........@..
    00E0: 20 08 00 00 00 00 00 00 01 00 00 01 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : AFA6BACC
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 CC BA A6 AF 00 00 00 00  // FACS@...........
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FIDT
----
[000h 0000   4]                    Signature : "FIDT"    
[004h 0004   4]                 Table Length : 0000009C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 46
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013


**** Unknown ACPI table signature [FIDT]


Raw Table Data: Length 156 (0x9C)

    0000: 46 49 44 54 9C 00 00 00 01 46 41 4C 41 53 4B 41  // FIDT.....FALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 41 4D 49 20  // A M I.... ..AMI 
    0020: 13 00 01 00 24 46 49 44 04 78 00 41 35 30 38 38  // ....$FID.x.A5088
    0030: 00 00 00 00 16 61 A8 EA D6 35 B1 1B 44 8D 3B 10  // .....a...5..D.;.
    0040: 85 EE 1F 41 30 35 00 31 37 00 33 30 00 30 32 00  // ...A05.17.30.02.
    0050: E7 07 02 17 16 1E 0F FF FF 41 4C 41 53 4B 41 41  // .........ALASKAA
    0060: 20 4D 20 49 00 00 00 31 00 00 00 FF FF FF FF FF  //  M I...1........
    0070: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0080: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0090: FF FF FF FF FF FF FF FF FF FF FF FF              // ............


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : BA
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 01000013


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 00000000C347D000

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 00000000CA9C5000

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 BA 41 4C 41 53 4B 41  // FPDTD.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 00 01 00 00 10 01 00 00 00 00 00 D0 47 C3  // ..............G.
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 00 50 9C CA  // .............P..
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : BD
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00000005

[024h 0036   4]            Hardware Block ID : 10228201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 40
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 37EE
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 BD 41 4C 41 53 4B 41  // HPET8.....ALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 41 4D 49 20  // A M I.... ..AMI 
    0020: 05 00 00 00 01 82 22 10 00 40 00 00 00 00 D0 FE  // ......"..@......
    0030: 00 00 00 00 00 EE 37 00                          // ......7.


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 000000D0
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : F2
[00Ah 0010   6]                       Oem ID : "AMD  "
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050   2]                       Length : 0048
[034h 0052   2]                     DeviceId : 0002
[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FD500000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]            Feature Reporting : 80048F2E

[048h 0072   1]                Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076   1]                Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081   2]                    Device ID : FF00
[053h 0083   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A5
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                Subtable Type : 04 [Device Entry: End of Range]
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[060h 0096   1]                Subtable Type : 48 [Device Entry: Special Device]
[061h 0097   2]                    Device ID : 0000
[063h 0099   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                Subtable Type : 48 [Device Entry: Special Device]
[069h 0105   2]                    Device ID : 0000
[06Bh 0107   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[06Ch 0108   1]                       Handle : 09
[06Dh 0109   2]        Source Used Device ID : 00A0
[06Fh 0111   1]                      Variety : 01

[070h 0112   1]                Subtable Type : 48 [Device Entry: Special Device]
[071h 0113   2]                    Device ID : 0000
[073h 0115   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[074h 0116   1]                       Handle : 0A
[075h 0117   2]        Source Used Device ID : 0001
[077h 0119   1]                      Variety : 01

[078h 0120   1]                Subtable Type : 11 [Hardware Definition Block (IVHD)]
[079h 0121   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[07Ah 0122   2]                       Length : 0058
[07Ch 0124   2]                     DeviceId : 0002
[07Eh 0126   2]            Capability Offset : 0040
[080h 0128   8]                 Base Address : 00000000FD500000
[088h 0136   2]            PCI Segment Group : 0000
[08Ah 0138   2]          Virtualization Info : 0000
[08Ch 0140   4]                   Attributes : 00040200
[090h 0144   8]                    EFR Image : 058F77EF22294A5A
[098h 0152   8]                     Reserved : 0000000000000000

[0A0h 0160   1]                Subtable Type : 03 [Device Entry: Start of Range]
[0A1h 0161   2]                    Device ID : 0008
[0A3h 0163   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164   1]                Subtable Type : 04 [Device Entry: End of Range]
[0A5h 0165   2]                    Device ID : FFFE
[0A7h 0167   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A8h 0168   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A9h 0169   2]                    Device ID : FF00
[0ABh 0171   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0ACh 0172   1]                     Reserved : 00
[0ADh 0173   2]        Source Used Device ID : 00A5
[0AFh 0175   1]                     Reserved : 00

[0B0h 0176   1]                Subtable Type : 04 [Device Entry: End of Range]
[0B1h 0177   2]                    Device ID : FFFF
[0B3h 0179   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B4h 0180   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[0B5h 0181   2]                    Device ID : 0000
[0B7h 0183   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B8h 0184   1]                Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185   2]                    Device ID : 0000
[0BBh 0187   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0BCh 0188   1]                       Handle : 00
[0BDh 0189   2]        Source Used Device ID : 00A0
[0BFh 0191   1]                      Variety : 02

[0C0h 0192   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193   2]                    Device ID : 0000
[0C3h 0195   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0C4h 0196   1]                       Handle : 09
[0C5h 0197   2]        Source Used Device ID : 00A0
[0C7h 0199   1]                      Variety : 01

[0C8h 0200   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C9h 0201   2]                    Device ID : 0000
[0CBh 0203   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0CCh 0204   1]                       Handle : 0A
[0CDh 0205   2]        Source Used Device ID : 0001
[0CFh 0207   1]                      Variety : 01

Raw Table Data: Length 208 (0xD0)

    0000: 49 56 52 53 D0 00 00 00 02 F2 41 4D 44 20 20 00  // IVRS......AMD  .
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 50 FD 00 00 00 00  // ..H...@...P.....
    0040: 00 00 00 00 2E 8F 04 80 03 08 00 00 04 FE FF 00  // ................
    0050: 43 00 FF 00 00 A5 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 09 A0 00 01  // H.......H.......
    0070: 48 00 00 00 0A 01 00 01 11 B0 58 00 02 00 40 00  // H.........X...@.
    0080: 00 00 50 FD 00 00 00 00 00 00 00 00 00 02 04 00  // ..P.............
    0090: 5A 4A 29 22 EF 77 8F 05 00 00 00 00 00 00 00 00  // ZJ)".w..........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A5 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 09 A0 00 01 48 00 00 00 0A 01 00 01  // H.......H.......


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F4
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 7F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 F4 41 4C 41 53 4B 41  // MCFG<.....ALASKA
    0010: 41 20 4D 20 49 00 00 00 09 20 07 01 4D 53 46 54  // A M I.... ..MSFT
    0020: 13 00 01 00 00 00 00 00 00 00 00 00 00 00 00 F0  // ................
    0030: 00 00 00 00 00 00 00 7F 00 00 00 00              // ............


PCCT
----
[000h 0000   4]                    Signature : "PCCT"    [Platform Communications Channel Table]
[004h 0004   4]                 Table Length : 0000006E
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 60
[00Ah 0010   6]                       Oem ID : "AMD"
[010h 0016   8]                 Oem Table ID : "AmdTable"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   4]        Flags (decoded below) : 00000000
                                    Platform : 0
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 00 [Generic Communications Subspace]
[031h 0049   1]                       Length : 3E

[032h 0050   6]                     Reserved : 000000000000
[038h 0056   8]                 Base Address : 00000000CAC00000
[040h 0064   8]               Address Length : 0000000000010000

[048h 0072  12]            Doorbell Register : [Generic Address Structure]
[048h 0072   1]                     Space ID : 00 [SystemMemory]
[049h 0073   1]                    Bit Width : 40
[04Ah 0074   1]                   Bit Offset : 00
[04Bh 0075   1]         Encoded Access Width : 04 [QWord Access:64]
[04Ch 0076   8]                      Address : 00000000FD010540

[054h 0084   8]                Preserve Mask : FFFFFFFF00000000
[05Ch 0092   8]                   Write Mask : 0000000000000001
[064h 0100   4]              Command Latency : 00000FA0
[068h 0104   4]          Maximum Access Rate : 0000EA60
[06Ch 0108   2]      Minimum Turnaround Time : 0000

Raw Table Data: Length 110 (0x6E)

    0000: 50 43 43 54 6E 00 00 00 02 60 41 4D 44 00 00 00  // PCCTn....`AMD...
    0010: 41 6D 64 54 61 62 6C 65 01 00 00 00 41 4D 44 20  // AmdTable....AMD 
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 3E 00 00 00 00 00 00 00 00 C0 CA 00 00 00 00  // .>..............
    0040: 00 00 01 00 00 00 00 00 00 40 00 04 40 05 01 FD  // .........@..@...
    0050: 00 00 00 00 00 00 00 00 FF FF FF FF 01 00 00 00  // ................
    0060: 00 00 00 00 A0 0F 00 00 60 EA 00 00 00 00        // ........`.....


SSDT1
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "AmdTable", 0x00000001)
{
    External (_SB_.PLTF.C000, DeviceObj)
    External (_SB_.PLTF.C001, DeviceObj)
    External (_SB_.PLTF.C002, DeviceObj)
    External (_SB_.PLTF.C003, DeviceObj)
    External (_SB_.PLTF.C004, DeviceObj)
    External (_SB_.PLTF.C005, DeviceObj)
    External (_SB_.PLTF.C006, DeviceObj)
    External (_SB_.PLTF.C007, DeviceObj)

    Scope (\_SB.PLTF.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C000.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000004, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000008, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000000C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000014, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000018, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000001C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000040, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000044, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000048, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000050, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C001.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000100, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000104, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000108, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000010C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000114, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000118, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000011C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000140, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000144, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000148, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000150, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C002.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000200, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000204, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000208, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000020C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000214, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000218, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000021C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000240, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000244, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000248, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000250, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C003.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000300, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000304, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000308, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000030C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000314, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000318, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000031C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000340, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000344, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000348, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000350, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C004)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C004.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000400, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000404, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000408, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000040C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000414, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000418, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000041C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000440, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000444, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000448, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000450, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C005)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C005.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000500, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000504, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000508, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000050C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000514, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000518, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000051C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000540, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000544, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000548, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000550, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C006)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C006.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000600, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000604, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000608, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000060C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000614, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000618, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000061C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000640, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000644, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000648, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000650, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Scope (\_SB.PLTF.C007)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000ED8, 
                0x00000F78, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000AF0, 
                0x00000AF0, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000007BC, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C007.PPCV */
        }

        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000700, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000704, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000708, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000070C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000714, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000718, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x000000000000071C, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000740, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000744, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000748, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (PCC, 
                    0x20,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000750, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000226, 
            0x00000ED9
        })
    }

    Method (NFPR, 0, NotSerialized)
    {
        Local0 = 0xCAC00000
        OperationRegion (SHRM, SystemMemory, Local0, 0x0808)
        Field (SHRM, DWordAcc, NoLock, Preserve)
        {
            Offset (0x48), 
            V000,   1, 
            Offset (0x148), 
            V001,   1, 
            Offset (0x248), 
            V002,   1, 
            Offset (0x348), 
            V003,   1, 
            Offset (0x448), 
            V004,   1, 
            Offset (0x548), 
            V005,   1, 
            Offset (0x648), 
            V006,   1, 
            Offset (0x748), 
            V007,   1
        }

        If ((V000 == One))
        {
            Notify (\_SB.PLTF.C000, 0x84) // Reserved
        }

        If ((V001 == One))
        {
            Notify (\_SB.PLTF.C001, 0x84) // Reserved
        }

        If ((V002 == One))
        {
            Notify (\_SB.PLTF.C002, 0x84) // Reserved
        }

        If ((V003 == One))
        {
            Notify (\_SB.PLTF.C003, 0x84) // Reserved
        }

        If ((V004 == One))
        {
            Notify (\_SB.PLTF.C004, 0x84) // Reserved
        }

        If ((V005 == One))
        {
            Notify (\_SB.PLTF.C005, 0x84) // Reserved
        }

        If ((V006 == One))
        {
            Notify (\_SB.PLTF.C006, 0x84) // Reserved
        }

        If ((V007 == One))
        {
            Notify (\_SB.PLTF.C007, 0x84) // Reserved
        }
    }

    Method (NFPC, 0, NotSerialized)
    {
        Notify (\_SB.PLTF.C000, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C001, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C002, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C003, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C004, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C005, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C006, 0x85) // Device-Specific
        Notify (\_SB.PLTF.C007, 0x85) // Device-Specific
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 2, "AMD", "ArticTPX", 0x00000001)
{
    /*
     * iASL Warning: There were 19 external control methods found during
     * disassembly, but only 0 were resolved (19 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M097, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M131, IntObj)
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M232, MethodObj)    // Warning: Unknown method, guessing 7 arguments

    Scope (\_SB)
    {
        Name (MACO, Zero)
    }

    Scope (\_SB.PCI0.GPP8.SWUS.SWDS.VGA)
    {
        Name (M189, Buffer (0x0100) {})
        Name (M190, 0xFFFFFFFF)
        Name (M191, 0xFFFFFFFF)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (PX00 ())
            }

            If ((Arg0 == One))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0A))
            {
                PX10 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
            }

            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = Zero
            M158 = Zero
            M160 = Zero
            Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (One, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            Local7 = Buffer (0x05) {}
            CreateWordField (Local7, Zero, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = Zero
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, Zero)
            M133 (0x11, Local0) = M049 /* External reference */
            Store (M113 (Local0, Local6, M023 (Zero, M091, M090), If ((M192 && Local6))
                    {
                        M000 (0x0D86)
                        M112 (Local0, Zero)
                        M111 (Local0, One)
                        Sleep (0x20)
                        M112 (Local0, 0x02)
                        M112 (Local0, One)
                        M000 (0x0D87)
                        HPOK = Zero
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        Local2 = Zero
                        While ((Local2 < 0x0F))
                        {
                            M023 (Zero, M091, M090)
                            Local4 = One
                            Local5 = 0xC8
                            While ((Local4 && Local5))
                            {
                                0xA5 = M021 (Zero, M091, M090)
                                Local0
                                Local0 &= 0x7F
                                If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                {
                                    Local4 = Zero
                                }
                                Else
                                {
                                    Sleep (0x05)
                                    Local5--
                                }
                            }

                            If (!Local4)
                            {
                                M090 = M024 (Zero, M091)
                                Local5
                                If (Local5)
                                {
                                    M026 (Zero, M091, M090)
                                    Sleep (0x05)
                                    Local2++
                                }
                                Else
                                {
                                    Local0 = Zero
                                    If ((M025 == Zero))
                                    {
                                        M091
                                        M090
                                        Zero
                                        Ones
                                        Local0 = One
                                    }

                                    If (Local0)
                                    {
                                        M111 (M049, M133 (0x17, One))
                                        M111 (M049, M133 (0x18, One))
                                        HPOK = One
                                        Local2 = 0x10
                                    }
                                    Else
                                    {
                                        HPOK = Zero
                                        Local2 = 0x10
                                    }
                                }
                            }
                            Else
                            {
                                Local2 = 0x10
                            }
                        }

                        If (!HPOK)
                        {
                            M000 (0x0D88)
                            Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                Local5 = 0x05, While ((Local4 && Local5))
                                        {
                                            0xA5 = M021 (Zero, M091, M090)
                                            Local0
                                            Local0 &= 0x7F
                                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                            {
                                                Local4 = Zero
                                            }
                                            Else
                                            {
                                                Store (M019 (M095 (M094 (M093 (Zero, Local0), Sleep (0x05), Local5--), 
                                                    M201 = Zero, \_SB.ALIB, 0x06), Local7, If ((M097 (Zero, 0x54 = M019 (
                                                    Zero, M091, M090), Local0, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFC)), 
                                                    M232 (M097 (Zero, 0x10, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFF)), 
                                                    M000 (0x0D89), Else
                                                                                {
                                                                                    M000 (0x0D8A)
                                                                                    M201 = Zero
                                                                                    \_SB.ALIB
                                                                                    0x06
                                                                                    Local7
                                                                                    M000 (0x0D8B)
                                                                                    M111 (M049, M133 (0x17, Zero))
                                                                                    M111 (M049, M133 (0x18, Zero))
                                                                                    M112 (Local0, Zero)
                                                                                    Sleep (0x0A)
                                                                                    M111 (Local0, Zero)
                                                                                    M023 (Zero, M091, M090)
                                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                                                                        Local5 = 0x05, While ((Local4 && Local5))
                                                                                                {
                                                                                                    0xA5 = M021 (Zero, M091, M090)
                                                                                                    Local0
                                                                                                    Local0 &= 0x7F
                                                                                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                                                                    {
                                                                                                        Local4 = Zero
                                                                                                    }
                                                                                                    Else
                                                                                                    {
                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x05), Local5--), 
                                                                                                            HPOK = 0x02, M000 (0x0D8C), If (HPOK)
                                                                                                                    {
                                                                                                                        Local5 = 0x7FFFFFFF
                                                                                                                        Local5 |= 0x80000000
                                                                                                                        0x54 = M019 (Zero, M091, M090)
                                                                                                                        Local1
                                                                                                                        M020 (Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFC))
                                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local0), If (((HPOK == One) && 
                                                                                                                            (Local0 != Local5)))
                                                                                                                                        {
                                                                                                                                            M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                                                                Local5))
                                                                                                                                                        {
                                                                                                                                                            M020 (M095 (M094 (M191 = (M093 (One, Zero) + 0x4C), Sleep (0x0A), M020 (
                                                                                                                                                                Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFF)))))
                                                                                                                                                        })))
                                                                                                                                        })))
                                                                                                                    }))
                                                                                                    }
                                                                                                }))
                                                                                }))) != )) {})
                                            }
                                        }))
                        }
                    })
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & One)
            If (M195)
            {
                M111 (M049, M133 (0x17, One))
            }
            Else
            {
                M111 (M049, M133 (0x17, Zero))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & One)
            If (M196)
            {
                M111 (M049, M133 (0x18, One))
            }
            Else
            {
                M111 (M049, M133 (0x18, Zero))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.PX08.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.PX09.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M189 */
        }

        Method (PX10, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            \_SB.MACO = (Arg0 & One)
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & One)
            Local2 = M162 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0E, Zero, One, Local2)
            }
        }

        Name (ATIB, Buffer (0x0100) {})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (AF00 ())
            }

            If ((Arg0 == One))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, Zero, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = Zero
                M158 = Zero
                M159 = Zero
                M160 = Zero
                Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = One
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, Zero)
        Name (M211, Zero)
        Name (M212, Zero)
        Name (M213, Zero)
        Name (M214, Zero)
        Name (M215, Zero)
        Name (M303, Zero)
        Name (M304, Zero)
        Name (SSDM, 0x0A)
        Name (SCDY, Zero)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, Zero, M165)
            CreateBitField (M164, One, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, Zero)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = Zero
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFFFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = Zero
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFFFFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = Zero
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ One)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = Zero
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, Zero), 0x10, Local0)
            Else
            {
                One = M043 (Zero, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [Zero] = 0x05
                    ATIB [One] = Zero
                    ATIB [0x02] = Zero
                    ATIB [0x03] = Zero
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & One))
            {
                CreateBitField (M164, Zero, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, One, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)) {}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                Local0 = (Arg0 & 0x03)
                M303 = Local0
                Local0 = (Arg1 & 0xFFFFFFFF)
                M304 = Local0
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "AMD AOD", 0x00000001)
{
    Scope (\)
    {
        Device (AOD)
        {
            Name (DBG, Zero)
            Name (GDBG, Zero)
            Name (CDBG, Zero)
            Name (VDBG, Zero)
            Name (RDBG, Zero)
            OperationRegion (PMRG, SystemMemory, 0xFED80300, 0x0100)
            OperationRegion (PSMI, SystemIO, 0xB2, 0x02)
            Field (PSMI, ByteAcc, NoLock, Preserve)
            {
                APMC,   8, 
                APMD,   8
            }

            Method (ASMI, 1, NotSerialized)
            {
                APMC = Arg0
                Sleep (0x0A)
            }

            Name (OBID, Package (0xC1)
            {
                0x40, 
                0x00010001, 
                0x00010002, 
                0x00020001, 
                0x00020002, 
                0x00020003, 
                0x00020004, 
                0x00020005, 
                0x00020006, 
                0x00020007, 
                0x00020008, 
                0x00020009, 
                0x0002000A, 
                0x0002000B, 
                0x0002000C, 
                0x0002000D, 
                0x0002000E, 
                0x0002000F, 
                0x00020010, 
                0x00020011, 
                0x00020012, 
                0x00020013, 
                0x00020014, 
                0x00020015, 
                0x00020016, 
                0x00020017, 
                0x00020018, 
                0x00020019, 
                0x0002001A, 
                0x0002001B, 
                0x0002001C, 
                0x0002001D, 
                0x0002001E, 
                0x0002001F, 
                0x00020020, 
                0x00020021, 
                0x00020022, 
                0x00020023, 
                0x00020024, 
                0x00020025, 
                0x00020026, 
                0x00020027, 
                0x00020028, 
                0x00020029, 
                0x0002002A, 
                0x0002002B, 
                0x0002002C, 
                0x0002002D, 
                0x0002002E, 
                0x0002002F, 
                0x00020030, 
                0x00020031, 
                0x00020032, 
                0x00020033, 
                0x00020034, 
                0x00020035, 
                0x00020036, 
                0x00020037, 
                0x00020038, 
                0x00020039, 
                0x0002003A, 
                0x00030001, 
                0x00030002, 
                0x00040001, 
                0x00040002, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                "Get APCB Config", 
                "Get memory voltages", 
                "Set memory clock frequency", 
                "Set Tcl", 
                "Set Trcdrd", 
                "Set Trcdwr", 
                "Set Tras", 
                "Set Trp", 
                "Set ProcODT", 
                "Set Trcpage", 
                "Set Trc", 
                "Set Trfc", 
                "Set Trfc2", 
                "Set Trfc4", 
                "Set Tfaw", 
                "Set TrrdS", 
                "Set TrrdL", 
                "Set Twr", 
                "Set TwtrS", 
                "Set TwtrL", 
                "Set TCke", 
                "Set Tcwl", 
                "Set Trtp", 
                "Set TrdrdSc", 
                "Set TrdrdScL", 
                "Set TrdrdSd", 
                "Set TrdrdDd", 
                "Set TwrwrSc", 
                "Set TwrwrScL", 
                "Set TwrwrSd", 
                "Set TwrwrDd", 
                "Set Trdwr", 
                "Set Twrrd", 
                "Set GearDownEn", 
                "Set Cmd2t", 
                "Set RttNom", 
                "Set RttWR", 
                "Set RttPark", 
                "Set PowerDownEn", 
                "Set SMT EN", 
                "Software Downcore Config", 
                "Set EDC Throttler Control", 
                "Set AddrCmdSetup", 
                "Set CsOdtSetup", 
                "Set CkeSetup", 
                "Set CadBusClkDrvStren", 
                "Set CadBusAddrCmdDrvStren", 
                "Set CadBusCsOdtCmdDrvStren", 
                "Set CadBusCkeDrvStren", 
                "Set CLDO_VDDP", 
                "Set Interleave Mode", 
                "Set Interleave Size", 
                "Set FCLK OC Mode", 
                "Set SOC VID", 
                "Set FCLK Frequency", 
                "Set CCLK Fmax", 
                "Set GFXCLK Fmax", 
                "Set CLDO_VDDG", 
                "Get ECO Mode", 
                "Set ECO Mode", 
                "Set VDDIO", 
                "Set VTT", 
                "Command Buffer Start", 
                "Command Buffer End"
            })
            Name (OBIE, Package (0xC1)
            {
                0x40, 
                0x00050001, 
                0x00050002, 
                0x00050003, 
                0x00050004, 
                0x00050005, 
                0x0005000A, 
                0x0005000B, 
                0x0005000C, 
                0x0005000D, 
                0x0005000E, 
                0x0005000F, 
                0x00050010, 
                0x00020043, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                "Set PPT Limit", 
                "Set TDC Limit", 
                "Set EDC Limit", 
                "Set Scalar", 
                "Set DRAM Map Inversion", 
                "Set Curve Optimizer", 
                "Set IOD VDDG", 
                "Set Soc TDC Limit", 
                "Set Soc EDC Limit", 
                "Set Dram Latency Enhance", 
                "Get Dram Latency Enhance", 
                "Set GFX Curve Optimizer", 
                "Set LCLK Freq", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                ""
            })
            Name (OBIT, Package (0xFD)
            {
                0x00020001, 
                0x014D, 
                0x0FA0, 
                0x21, 
                0x00020002, 
                0x08, 
                0x21, 
                One, 
                0x00020003, 
                0x08, 
                0x3F, 
                One, 
                0x00020004, 
                0x08, 
                0x3F, 
                One, 
                0x00020005, 
                0x15, 
                0x3A, 
                One, 
                0x00020006, 
                0x08, 
                0x3F, 
                One, 
                0x00020007, 
                Zero, 
                0x3F, 
                One, 
                0x00020008, 
                Zero, 
                0x03FF, 
                One, 
                0x00020009, 
                0x1D, 
                0x87, 
                One, 
                0x0002000A, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000B, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000C, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000D, 
                0x06, 
                0x36, 
                One, 
                0x0002000E, 
                0x04, 
                0x0C, 
                One, 
                0x0002000F, 
                0x04, 
                0x0C, 
                One, 
                0x00020010, 
                0x0A, 
                0x51, 
                One, 
                0x00020011, 
                0x02, 
                0x0E, 
                One, 
                0x00020012, 
                0x02, 
                0x0E, 
                One, 
                0x00020013, 
                One, 
                0x1F, 
                One, 
                0x00020014, 
                0x09, 
                0x16, 
                One, 
                0x00020015, 
                0x05, 
                0x0E, 
                One, 
                0x00020016, 
                One, 
                0x0F, 
                One, 
                0x00020017, 
                One, 
                0x0F, 
                One, 
                0x00020018, 
                One, 
                0x0F, 
                One, 
                0x00020019, 
                One, 
                0x0F, 
                One, 
                0x0002001A, 
                One, 
                0x0F, 
                One, 
                0x0002001B, 
                One, 
                0x3F, 
                One, 
                0x0002001C, 
                One, 
                0x0F, 
                One, 
                0x0002001D, 
                One, 
                0x0F, 
                One, 
                0x0002001E, 
                One, 
                0x1F, 
                One, 
                0x0002001F, 
                One, 
                0x0F, 
                One, 
                0x00020020, 
                Zero, 
                One, 
                One, 
                0x00020021, 
                Zero, 
                One, 
                One, 
                0x00020022, 
                Zero, 
                0x07, 
                One, 
                0x00020023, 
                Zero, 
                0x04, 
                One, 
                0x00020024, 
                Zero, 
                0x07, 
                One, 
                0x00020025, 
                Zero, 
                One, 
                One, 
                0x00020026, 
                Zero, 
                One, 
                One, 
                0x00020027, 
                Zero, 
                0xFFFFFFFF, 
                One, 
                0x00020028, 
                Zero, 
                0x0F, 
                One, 
                0x00020029, 
                Zero, 
                0x3F, 
                One, 
                0x0002002A, 
                Zero, 
                0x3F, 
                One, 
                0x0002002B, 
                Zero, 
                0x3F, 
                One, 
                0x0002002C, 
                Zero, 
                0x1F, 
                One, 
                0x0002002D, 
                Zero, 
                0x1F, 
                One, 
                0x0002002E, 
                Zero, 
                0x1F, 
                One, 
                0x0002002F, 
                Zero, 
                0x1F, 
                One, 
                0x00020030, 
                Zero, 
                0x05DC, 
                One, 
                0x00020031, 
                Zero, 
                0xFFFFFFFF, 
                One, 
                0x00020032, 
                Zero, 
                0x07, 
                One, 
                0x00020033, 
                Zero, 
                One, 
                One, 
                0x00020034, 
                Zero, 
                0xFF, 
                One, 
                0x00020035, 
                0x014D, 
                0x0FA0, 
                0x21, 
                0x00020036, 
                0x0F3C, 
                0x1004, 
                One, 
                0x00020037, 
                0x04B0, 
                0x09C4, 
                One, 
                0x00020038, 
                0x0258, 
                0x05DC, 
                One, 
                0x00030001, 
                0x0333, 
                0x062D, 
                0x03, 
                0x00030002, 
                0x0199, 
                0x0316, 
                0x03, 
                0x00050001, 
                Zero, 
                0x000003E8, 
                One, 
                0x00050002, 
                Zero, 
                0x000000A0, 
                One, 
                0x00050003, 
                Zero, 
                0x000000BE, 
                One, 
                0x00050004, 
                0x64, 
                0x03E8, 
                0x64, 
                0x00050005, 
                Zero, 
                0xFF, 
                One, 
                Zero
            })
            Name (OBIU, Package (0x19)
            {
                0x0005000A, 
                Zero, 
                0x1E, 
                One, 
                0x0005000B, 
                0x0258, 
                0x05DC, 
                One, 
                0x0005000C, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x0005000D, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050010, 
                Zero, 
                0x1E, 
                One, 
                0x00020043, 
                0x96, 
                0x09C4, 
                One, 
                Zero
            })
            Name (OBD1, Package (0xCF)
            {
                0x00020001, 
                0x4A, 
                0x014D, 
                0x0190, 
                0x0215, 
                0x029B, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x00020002, 
                0x1A, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0D, 
                0x0E, 
                0x0F, 
                0x10, 
                0x11, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x00020005, 
                0x26, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x22, 
                0x23, 
                0x24, 
                0x25, 
                0x26, 
                0x27, 
                0x28, 
                0x29, 
                0x2A, 
                0x2B, 
                0x2C, 
                0x2D, 
                0x2E, 
                0x2F, 
                0x30, 
                0x31, 
                0x32, 
                0x33, 
                0x34, 
                0x35, 
                0x36, 
                0x37, 
                0x38, 
                0x39, 
                0x3A, 
                0x00020007, 
                0x12, 
                Zero, 
                One, 
                0x02, 
                0x03, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x38, 
                0x39, 
                0x3A, 
                0x3B, 
                0x3E, 
                0x3F, 
                0x00020014, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0E, 
                0x10, 
                0x12, 
                0x14, 
                0x0002002C, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002D, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002E, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002F, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                Zero
            })
            Name (OBD2, Package (0x52)
            {
                0x00020035, 
                0x46, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x0002003A, 
                0x03, 
                Zero, 
                One, 
                0x02, 
                0x0005000E, 
                0x02, 
                Zero, 
                One, 
                Zero
            })
            Method (BM01, 0, NotSerialized)
            {
            }

            Method (XINI, 0, NotSerialized)
            {
            }

            Method (EM01, 0, NotSerialized)
            {
            }

            Method (BM05, 1, NotSerialized)
            {
            }

            Method (EM05, 1, NotSerialized)
            {
            }

            Method (HM06, 0, NotSerialized)
            {
            }

            Method (HM07, 1, NotSerialized)
            {
            }

            Method (SBSL, 1, NotSerialized)
            {
                Field (PMRG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x2E), 
                    SBSL,   8
                }

                Local0 = (Arg0 | One)
                SBSL = Local0
            }

            Method (SETV, 2, NotSerialized)
            {
            }

            Method (GETV, 1, NotSerialized)
            {
            }

            Method (CPTB, 2, NotSerialized)
            {
                Name (LOID, Zero)
                CreateDWordField (Arg1, Zero, BUF0)
                CreateDWordField (Arg1, 0x04, BUF1)
                CreateDWordField (Arg1, 0x08, BUF2)
                CreateDWordField (Arg1, 0x0C, BUF3)
                Local0 = Zero
                LOID = DerefOf (OBIT [Local0])
                While (LOID)
                {
                    If ((LOID == Arg0))
                    {
                        BUF0 = DerefOf (OBIT [(Local0 + Zero)])
                        BUF1 = DerefOf (OBIT [(Local0 + One)])
                        BUF2 = DerefOf (OBIT [(Local0 + 0x02)])
                        BUF3 = DerefOf (OBIT [(Local0 + 0x03)])
                        Break
                    }

                    Local0 += 0x04
                    LOID = DerefOf (OBIT [Local0])
                }

                If ((LOID == Zero))
                {
                    Local0 = Zero
                    LOID = DerefOf (OBIU [Local0])
                    While (LOID)
                    {
                        If ((LOID == Arg0))
                        {
                            BUF0 = DerefOf (OBIU [(Local0 + Zero)])
                            BUF1 = DerefOf (OBIU [(Local0 + One)])
                            BUF2 = DerefOf (OBIU [(Local0 + 0x02)])
                            BUF3 = DerefOf (OBIU [(Local0 + 0x03)])
                            Break
                        }

                        Local0 += 0x04
                        LOID = DerefOf (OBIU [Local0])
                    }
                }

                If ((LOID == Zero))
                {
                    Return (0xFF)
                }

                Return (Zero)
            }

            Name (GF01, Zero)
            Name (GVBF, Buffer (0x05)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
            })
            CreateDWordField (GVBF, Zero, GVB1)
            CreateByteField (GVBF, 0x04, GVB2)
            Method (AM01, 0, NotSerialized)
            {
                Return (CMDV) /* \AOD_.CMDV */
            }

            Method (AM02, 0, NotSerialized)
            {
                If (!GF01)
                {
                    BM01 ()
                    XINI ()
                    EM01 ()
                    GF01 = One
                }

                Return (Zero)
            }

            Method (AM03, 0, NotSerialized)
            {
                Return (OBID) /* \AOD_.OBID */
            }

            Method (AM04, 1, NotSerialized)
            {
                Name (LODT, Package (0x66)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD1 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD1 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD1 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD1 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD1 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD2 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD2 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD2 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD2 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD2 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Return (LODT) /* \AOD_.AM04.LODT */
            }

            Method (AM05, 1, NotSerialized)
            {
                CreateDWordField (Arg0, Zero, ACMD)
                CreateField (OBUF, Zero, (SizeOf (OBUF) * 0x08), TEMP)
                TEMP = Zero
                CreateWordField (OBUF, Zero, BSCD)
                CreateDWordField (OBUF, 0x02, BSTS)
                CreateWordField (OBUF, 0x06, BSD1)
                CreateDWordField (OBUF, 0x08, BBSN)
                CreateDWordField (OBUF, 0x0C, BBVS)
                CreateDWordField (OBUF, 0x10, BBCB)
                CreateWordField (OBUF, 0x14, BBMC)
                CreateByteField (OBUF, 0x16, BTCL)
                CreateByteField (OBUF, 0x17, BTRR)
                CreateByteField (OBUF, 0x18, BTRW)
                CreateByteField (OBUF, 0x19, BRAS)
                CreateByteField (OBUF, 0x1A, BTRP)
                CreateWordField (OBUF, 0x1B, BVIO)
                CreateWordField (OBUF, 0x1D, BVTT)
                CreateWordField (OBUF, 0x1F, BVPP)
                CreateWordField (OBUF, 0x21, BODT)
                CreateWordField (OBUF, 0x23, BRPG)
                CreateByteField (OBUF, 0x25, BTRC)
                CreateWordField (OBUF, 0x26, BRFC)
                CreateWordField (OBUF, 0x28, BRF2)
                CreateWordField (OBUF, 0x2A, BRF4)
                CreateByteField (OBUF, 0x2C, BFAW)
                CreateByteField (OBUF, 0x2D, BRRS)
                CreateByteField (OBUF, 0x2E, BRRL)
                CreateByteField (OBUF, 0x2F, BTWR)
                CreateByteField (OBUF, 0x30, BWTS)
                CreateByteField (OBUF, 0x31, BWTL)
                CreateByteField (OBUF, 0x32, BCKE)
                CreateByteField (OBUF, 0x33, BCWL)
                CreateByteField (OBUF, 0x34, BRTP)
                CreateByteField (OBUF, 0x35, BRSC)
                CreateByteField (OBUF, 0x36, BRSL)
                CreateByteField (OBUF, 0x37, BRSD)
                CreateByteField (OBUF, 0x38, BRDD)
                CreateByteField (OBUF, 0x39, BWSC)
                CreateByteField (OBUF, 0x3A, BWSL)
                CreateByteField (OBUF, 0x3B, BWSD)
                CreateByteField (OBUF, 0x3C, BWDD)
                CreateByteField (OBUF, 0x3D, BRWR)
                CreateByteField (OBUF, 0x3E, BWRD)
                CreateByteField (OBUF, 0x3F, BRDN)
                CreateByteField (OBUF, 0x40, BM2T)
                CreateByteField (OBUF, 0x41, RBNM)
                CreateByteField (OBUF, 0x42, RBWR)
                CreateByteField (OBUF, 0x43, RBPK)
                CreateByteField (OBUF, 0x44, BPWD)
                CreateByteField (OBUF, 0x45, BOCD)
                CreateDWordField (OBUF, 0x46, BOCV)
                CreateDWordField (OBUF, 0x4A, BOCF)
                CreateByteField (OBUF, 0x4E, BSMT)
                CreateDWordField (OBUF, 0x4F, BTOF)
                CreateByteField (OBUF, 0x53, BEDC)
                CreateWordField (OBUF, 0x54, BCNT)
                CreateByteField (OBUF, 0x56, BACS)
                CreateByteField (OBUF, 0x57, BCOS)
                CreateByteField (OBUF, 0x58, BCES)
                CreateByteField (OBUF, 0x59, BCBC)
                CreateByteField (OBUF, 0x5A, BCBA)
                CreateByteField (OBUF, 0x5B, BCBO)
                CreateByteField (OBUF, 0x5C, BCBE)
                CreateDWordField (OBUF, 0x5D, BCVP)
                CreateByteField (OBUF, 0x5F, BEDO)
                CreateDWordField (OBUF, 0x60, BNLC)
                CreateDWordField (OBUF, 0x64, BNLM)
                CreateDWordField (OBUF, 0x68, BNLS)
                CreateDWordField (OBUF, 0x6C, BPPL)
                CreateDWordField (OBUF, 0x70, BTDL)
                CreateDWordField (OBUF, 0x74, BEDL)
                CreateByteField (OBUF, 0x78, BFOC)
                CreateByteField (OBUF, 0x79, BSVD)
                CreateWordField (OBUF, 0x7A, BFCK)
                CreateByteField (OBUF, 0x7C, BDPC)
                CreateByteField (OBUF, 0x7D, BCPS)
                CreateWordField (OBUF, 0x7E, BFMX)
                CreateWordField (OBUF, 0x80, BGMX)
                CreateWordField (OBUF, 0x82, BVDG)
                CreateDWordField (OBUF, 0x84, BEOG)
                CreateDWordField (OBUF, 0x88, BEOS)
                CreateDWordField (OBUF, 0x8C, BPPT)
                CreateDWordField (OBUF, 0x90, BTDC)
                CreateDWordField (OBUF, 0x94, BEDM)
                CreateDWordField (OBUF, 0x98, BSCA)
                CreateByteField (OBUF, 0x9C, BDMI)
                CreateByteField (OBUF, 0x9D, BGAS)
                CreateByteField (OBUF, 0x9E, BGAG)
                CreateByteField (OBUF, 0x9F, BNPS)
                CreateByteField (OBUF, 0xA0, BNPG)
                CreateDWordField (OBUF, 0xA1, BPCS)
                CreateWordField (OBUF, 0xA5, BIOD)
                CreateWordField (OBUF, 0xA7, BGFV)
                CreateWordField (OBUF, 0xA9, BGFX)
                CreateDWordField (OBUF, 0xAB, BSTD)
                CreateDWordField (OBUF, 0xAF, BSED)
                CreateByteField (OBUF, 0xB3, BSLC)
                CreateByteField (OBUF, 0xB4, BGLC)
                If ((ACMD == 0x00010001))
                {
                    R101 (Arg0)
                }
                ElseIf ((ACMD == 0x00010002))
                {
                    R102 (Arg0)
                }
                ElseIf ((ACMD == 0x00020001))
                {
                    R201 (Arg0)
                }
                ElseIf ((ACMD == 0x00020002))
                {
                    R202 (Arg0)
                }
                ElseIf ((ACMD == 0x00020003))
                {
                    R203 (Arg0)
                }
                ElseIf ((ACMD == 0x00020004))
                {
                    R204 (Arg0)
                }
                ElseIf ((ACMD == 0x00020005))
                {
                    R205 (Arg0)
                }
                ElseIf ((ACMD == 0x00020006))
                {
                    R206 (Arg0)
                }
                ElseIf ((ACMD == 0x00020007))
                {
                    R207 (Arg0)
                }
                ElseIf ((ACMD == 0x00020008))
                {
                    R208 (Arg0)
                }
                ElseIf ((ACMD == 0x00020009))
                {
                    R209 (Arg0)
                }
                ElseIf ((ACMD == 0x0002000A))
                {
                    R20A (Arg0)
                }
                ElseIf ((ACMD == 0x0002000B))
                {
                    R20B (Arg0)
                }
                ElseIf ((ACMD == 0x0002000C))
                {
                    R20C (Arg0)
                }
                ElseIf ((ACMD == 0x0002000D))
                {
                    R20D (Arg0)
                }
                ElseIf ((ACMD == 0x0002000E))
                {
                    R20E (Arg0)
                }
                ElseIf ((ACMD == 0x0002000F))
                {
                    R20F (Arg0)
                }
                ElseIf ((ACMD == 0x00020010))
                {
                    R210 (Arg0)
                }
                ElseIf ((ACMD == 0x00020011))
                {
                    R211 (Arg0)
                }
                ElseIf ((ACMD == 0x00020012))
                {
                    R212 (Arg0)
                }
                ElseIf ((ACMD == 0x00020013))
                {
                    R213 (Arg0)
                }
                ElseIf ((ACMD == 0x00020014))
                {
                    R214 (Arg0)
                }
                ElseIf ((ACMD == 0x00020015))
                {
                    R215 (Arg0)
                }
                ElseIf ((ACMD == 0x00020016))
                {
                    R216 (Arg0)
                }
                ElseIf ((ACMD == 0x00020017))
                {
                    R217 (Arg0)
                }
                ElseIf ((ACMD == 0x00020018))
                {
                    R218 (Arg0)
                }
                ElseIf ((ACMD == 0x00020019))
                {
                    R219 (Arg0)
                }
                ElseIf ((ACMD == 0x0002001A))
                {
                    R21A (Arg0)
                }
                ElseIf ((ACMD == 0x0002001B))
                {
                    R21B (Arg0)
                }
                ElseIf ((ACMD == 0x0002001C))
                {
                    R21C (Arg0)
                }
                ElseIf ((ACMD == 0x0002001D))
                {
                    R21D (Arg0)
                }
                ElseIf ((ACMD == 0x0002001E))
                {
                    R21E (Arg0)
                }
                ElseIf ((ACMD == 0x0002001F))
                {
                    R21F (Arg0)
                }
                ElseIf ((ACMD == 0x00020020))
                {
                    R220 (Arg0)
                }
                ElseIf ((ACMD == 0x00020021))
                {
                    R221 (Arg0)
                }
                ElseIf ((ACMD == 0x00020022))
                {
                    R222 (Arg0)
                }
                ElseIf ((ACMD == 0x00020023))
                {
                    R223 (Arg0)
                }
                ElseIf ((ACMD == 0x00020024))
                {
                    R224 (Arg0)
                }
                ElseIf ((ACMD == 0x00020025))
                {
                    R225 (Arg0)
                }
                ElseIf ((ACMD == 0x00020026))
                {
                    R226 (Arg0)
                }
                ElseIf ((ACMD == 0x00020027))
                {
                    R227 (Arg0)
                }
                ElseIf ((ACMD == 0x00020028))
                {
                    R228 (Arg0)
                }
                ElseIf ((ACMD == 0x00020029))
                {
                    R229 (Arg0)
                }
                ElseIf ((ACMD == 0x0002002A))
                {
                    R22A (Arg0)
                }
                ElseIf ((ACMD == 0x0002002B))
                {
                    R22B (Arg0)
                }
                ElseIf ((ACMD == 0x0002002C))
                {
                    R22C (Arg0)
                }
                ElseIf ((ACMD == 0x0002002D))
                {
                    R22D (Arg0)
                }
                ElseIf ((ACMD == 0x0002002E))
                {
                    R22E (Arg0)
                }
                ElseIf ((ACMD == 0x0002002F))
                {
                    R22F (Arg0)
                }
                ElseIf ((ACMD == 0x00020030))
                {
                    R230 (Arg0)
                }
                ElseIf ((ACMD == 0x00020031))
                {
                    R231 (Arg0)
                }
                ElseIf ((ACMD == 0x00020032))
                {
                    R232 (Arg0)
                }
                ElseIf ((ACMD == 0x00020033))
                {
                    R233 (Arg0)
                }
                ElseIf ((ACMD == 0x00020034))
                {
                    R234 (Arg0)
                }
                ElseIf ((ACMD == 0x00020035))
                {
                    R235 (Arg0)
                }
                ElseIf ((ACMD == 0x00020036))
                {
                    R236 (Arg0)
                }
                ElseIf ((ACMD == 0x00020037))
                {
                    R237 (Arg0)
                }
                ElseIf ((ACMD == 0x00020038))
                {
                    R238 (Arg0)
                }
                ElseIf ((ACMD == 0x00020039))
                {
                    R239 (Arg0)
                }
                ElseIf ((ACMD == 0x0002003A))
                {
                    R23A (Arg0)
                }
                ElseIf ((ACMD == 0x00050001))
                {
                    R23B (Arg0)
                }
                ElseIf ((ACMD == 0x00050002))
                {
                    R23C (Arg0)
                }
                ElseIf ((ACMD == 0x00050003))
                {
                    R23D (Arg0)
                }
                ElseIf ((ACMD == 0x00050004))
                {
                    R23E (Arg0)
                }
                ElseIf ((ACMD == 0x00050005))
                {
                    R23F (Arg0)
                }
                ElseIf ((ACMD == 0x00030001))
                {
                    R301 (Arg0)
                }
                ElseIf ((ACMD == 0x00030002))
                {
                    R302 (Arg0)
                }
                ElseIf ((ACMD == 0x00030003))
                {
                    R303 (Arg0)
                }
                ElseIf ((ACMD == 0x00050006))
                {
                    R304 (Arg0)
                }
                ElseIf ((ACMD == 0x00050007))
                {
                    R305 (Arg0)
                }
                ElseIf ((ACMD == 0x00050008))
                {
                    R306 (Arg0)
                }
                ElseIf ((ACMD == 0x00050009))
                {
                    R307 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000A))
                {
                    R308 (Arg0)
                }
                ElseIf ((ACMD == 0x00050010))
                {
                    R510 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000B))
                {
                    R309 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000C))
                {
                    R30A (Arg0)
                }
                ElseIf ((ACMD == 0x0005000D))
                {
                    R30B (Arg0)
                }
                ElseIf ((ACMD == 0x0005000E))
                {
                    R30C (Arg0)
                }
                ElseIf ((ACMD == 0x0005000F))
                {
                    R30D (Arg0)
                }
                ElseIf ((ACMD == 0x00020043))
                {
                    R243 (Arg0)
                }
                ElseIf ((ACMD == 0x00040001))
                {
                    R401 (Arg0)
                }
                ElseIf ((ACMD == 0x00040002))
                {
                    R402 (Arg0)
                }
                Else
                {
                }

                BSCD = ASCD /* \AOD_.ASCD */
                BSTS = ASTS /* \AOD_.ASTS */
                BSD1 = RSD1 /* \AOD_.RSD1 */
                BBSN = MBSN /* \AOD_.MBSN */
                BBVS = MBVS /* \AOD_.MBVS */
                BBCB = MBCB /* \AOD_.MBCB */
                BBMC = MBMC /* \AOD_.MBMC */
                BTCL = TTCL /* \AOD_.TTCL */
                BTRR = TRCR /* \AOD_.TRCR */
                BTRW = TRCW /* \AOD_.TRCW */
                BRAS = TRAS /* \AOD_.TRAS */
                BTRP = TTRP /* \AOD_.TTRP */
                BVIO = VDIO /* \AOD_.VDIO */
                BVTT = VMTT /* \AOD_.VMTT */
                BVPP = VMPP /* \AOD_.VMPP */
                BODT = PODT /* \AOD_.PODT */
                BRPG = TRPG /* \AOD_.TRPG */
                BTRC = TTRC /* \AOD_.TTRC */
                BRFC = TRFC /* \AOD_.TRFC */
                BRF2 = TRF2 /* \AOD_.TRF2 */
                BRF4 = TRF4 /* \AOD_.TRF4 */
                BFAW = TFAW /* \AOD_.TFAW */
                BRRS = TRRS /* \AOD_.TRRS */
                BRRL = TRRL /* \AOD_.TRRL */
                BTWR = TTWR /* \AOD_.TTWR */
                BWTS = TWTS /* \AOD_.TWTS */
                BWTL = TWTL /* \AOD_.TWTL */
                BCKE = TCKE /* \AOD_.TCKE */
                BCWL = TCWL /* \AOD_.TCWL */
                BRTP = TRTP /* \AOD_.TRTP */
                BRSC = TRSC /* \AOD_.TRSC */
                BRSL = TRSL /* \AOD_.TRSL */
                BRSD = TRSD /* \AOD_.TRSD */
                BRDD = TRDD /* \AOD_.TRDD */
                BWSC = TWSC /* \AOD_.TWSC */
                BWSL = TWSL /* \AOD_.TWSL */
                BWSD = TWSD /* \AOD_.TWSD */
                BWDD = TWDD /* \AOD_.TWDD */
                BRWR = TRWR /* \AOD_.TRWR */
                BWRD = TWRD /* \AOD_.TWRD */
                BRDN = GRDN /* \AOD_.GRDN */
                BM2T = CM2T /* \AOD_.CM2T */
                RBNM = RTNM /* \AOD_.RTNM */
                RBWR = RTWR /* \AOD_.RTWR */
                RBPK = RTPK /* \AOD_.RTPK */
                BPWD = PWDE /* \AOD_.PWDE */
                BOCD = OCDS /* \AOD_.OCDS */
                BOCV = OCVM /* \AOD_.OCVM */
                BOCF = OCFM /* \AOD_.OCFM */
                BSMT = SMTE /* \AOD_.SMTE */
                BTOF = TOFF /* \AOD_.TOFF */
                BEDC = EDCT /* \AOD_.EDCT */
                BCNT = ACNT /* \AOD_.ACNT */
                BACS = ACSP /* \AOD_.ACSP */
                BCOS = COSP /* \AOD_.COSP */
                BCES = CESP /* \AOD_.CESP */
                BCBC = CBCK /* \AOD_.CBCK */
                BCBA = CBAC /* \AOD_.CBAC */
                BCBO = CBCO /* \AOD_.CBCO */
                BCBE = CBCE /* \AOD_.CBCE */
                BCVP = CDVP /* \AOD_.CDVP */
                BEDO = EDCO /* \AOD_.EDCO */
                BNLC = INLC /* \AOD_.INLC */
                BNLM = INLM /* \AOD_.INLM */
                BNLS = INLS /* \AOD_.INLS */
                BPPL = PPTL /* \AOD_.PPTL */
                BTDL = TDCL /* \AOD_.TDCL */
                BEDL = EDCL /* \AOD_.EDCL */
                BFOC = FCOC /* \AOD_.FCOC */
                BSVD = SVID /* \AOD_.SVID */
                BFCK = FCLK /* \AOD_.FCLK */
                BDPC = MDPC /* \AOD_.MDPC */
                BCPS = MCPS /* \AOD_.MCPS */
                BFMX = FMAX /* \AOD_.FMAX */
                BGMX = GMAX /* \AOD_.GMAX */
                BVDG = CVDG /* \AOD_.CVDG */
                BEOG = ECOG /* \AOD_.ECOG */
                BEOS = ECOS /* \AOD_.ECOS */
                BPPT = PPTS /* \AOD_.PPTS */
                BTDC = TDCS /* \AOD_.TDCS */
                BEDM = EDCS /* \AOD_.EDCS */
                BSCA = SCAS /* \AOD_.SCAS */
                BDMI = DMIS /* \AOD_.DMIS */
                BGAS = GAMS /* \AOD_.GAMS */
                BGAG = GAMG /* \AOD_.GAMG */
                BNPS = NPSS /* \AOD_.NPSS */
                BNPG = NPSG /* \AOD_.NPSG */
                BPCS = COPS /* \AOD_.COPS */
                BIOD = IVDG /* \AOD_.IVDG */
                BGFV = OGFV /* \AOD_.OGFV */
                BGFX = OGFX /* \AOD_.OGFX */
                BSTD = OTDC /* \AOD_.OTDC */
                BSED = OEDC /* \AOD_.OEDC */
                BSLC = DMLC /* \AOD_.DMLC */
                BGLC = DMLG /* \AOD_.DMLG */
                Return (OBUF) /* \AOD_.OBUF */
            }

            Method (AM06, 1, NotSerialized)
            {
                Name (INFO, Buffer (0x10)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                CPTB (Arg0, INFO)
                Return (INFO) /* \AOD_.AM06.INFO */
            }

            Method (AM07, 1, NotSerialized)
            {
                Name (BSPD, Buffer (0x0214) {})
                If ((Arg0 > 0x0F))
                {
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                If ((Arg0 == Zero))
                {
                    BSPD = DSPD /* \AOD_.DSPD */
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                Local0 = Zero
                Local0 += (Arg0 * 0x0214)
                Local1 = 0x0214
                Local2 = Zero
                While (Local1)
                {
                    BSPD [Local2] = DerefOf (DSPD [Local0])
                    Local1--
                    Local0++
                    Local2++
                }

                Return (BSPD) /* \AOD_.AM07.BSPD */
            }

            Method (AM08, 0, NotSerialized)
            {
                Return (OBIE) /* \AOD_.OBIE */
            }

            Name (CMDV, 0x05)
            Name (OBUF, Buffer (0xC8) {})
            OperationRegion (AODT, SystemMemory, 0xCAEF2018, 0x220C)
            Field (AODT, AnyAcc, NoLock, Preserve)
            {
                ASCD,   16, 
                ASTS,   32, 
                RSD1,   16, 
                MBSN,   32, 
                MBVS,   32, 
                MBCB,   32, 
                MBMC,   16, 
                TTCL,   8, 
                TRCR,   8, 
                TRCW,   8, 
                TRAS,   8, 
                TTRP,   8, 
                VDIO,   16, 
                VMTT,   16, 
                VMPP,   16, 
                PODT,   16, 
                TRPG,   16, 
                TTRC,   8, 
                TRFC,   16, 
                TRF2,   16, 
                TRF4,   16, 
                TFAW,   8, 
                TRRS,   8, 
                TRRL,   8, 
                TTWR,   8, 
                TWTS,   8, 
                TWTL,   8, 
                TCKE,   8, 
                TCWL,   8, 
                TRTP,   8, 
                TRSC,   8, 
                TRSL,   8, 
                TRSD,   8, 
                TRDD,   8, 
                TWSC,   8, 
                TWSL,   8, 
                TWSD,   8, 
                TWDD,   8, 
                TRWR,   8, 
                TWRD,   8, 
                GRDN,   8, 
                CM2T,   8, 
                RTNM,   8, 
                RTWR,   8, 
                RTPK,   8, 
                PWDE,   8, 
                OCDS,   8, 
                OCVM,   32, 
                OCFM,   32, 
                SMTE,   8, 
                TOFF,   32, 
                EDCT,   8, 
                ACNT,   16, 
                ACSP,   8, 
                COSP,   8, 
                CESP,   8, 
                CBCK,   8, 
                CBAC,   8, 
                CBCO,   8, 
                CBCE,   8, 
                CDVP,   16, 
                EDCO,   8, 
                INLC,   32, 
                INLM,   32, 
                INLS,   32, 
                PPTL,   32, 
                TDCL,   32, 
                EDCL,   32, 
                FCOC,   8, 
                SVID,   8, 
                FCLK,   16, 
                MDPC,   8, 
                MCPS,   8, 
                FMAX,   16, 
                GMAX,   16, 
                CVDG,   16, 
                ECOG,   32, 
                ECOS,   32, 
                PPTS,   32, 
                TDCS,   32, 
                EDCS,   32, 
                SCAS,   32, 
                DMIS,   8, 
                GAMS,   8, 
                GAMG,   8, 
                NPSS,   8, 
                NPSG,   8, 
                COPS,   32, 
                IVDG,   16, 
                OGFV,   16, 
                OGFX,   16, 
                OTDC,   32, 
                OEDC,   32, 
                DMLC,   8, 
                DMLG,   8, 
                GPSM,   8, 
                TPMS,   32, 
                DMTP,   8, 
                OCFX,   8, 
                MRSD,   32, 
                RSD2,   64, 
                NDPC,   8, 
                NCPS,   8, 
                RSD3,   16, 
                DSPD,   68096
            }

            Method (R101, 1, NotSerialized)
            {
                MBVS = 0x05
                MBCB = 0x80000000
                ASMI (0x9D)
            }

            Method (R102, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x40000000
                MBCB = Local0
                ASMI (0x9E)
            }

            Method (R201, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MCLK)
                MBVS = 0x05
                MBMC = MCLK /* \AOD_.R201.MCLK */
                MBCB = One
                ASMI (0x9D)
            }

            Method (R202, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTCL)
                MBVS = 0x05
                TTCL = MTCL /* \AOD_.R202.MTCL */
                MBCB = 0x02
                ASMI (0x9D)
            }

            Method (R203, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDD)
                MBVS = 0x05
                TRCR = MRDD /* \AOD_.R203.MRDD */
                MBCB = 0x04
                ASMI (0x9D)
            }

            Method (R204, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDW)
                MBVS = 0x05
                TRCW = MRDW /* \AOD_.R204.MRDW */
                MBCB = 0x08
                ASMI (0x9D)
            }

            Method (R205, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRS)
                MBVS = 0x05
                TRAS = MTRS /* \AOD_.R205.MTRS */
                MBCB = 0x20
                ASMI (0x9D)
            }

            Method (R206, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRP)
                MBVS = 0x05
                TTRP = MTRP /* \AOD_.R206.MTRP */
                MBCB = 0x10
                ASMI (0x9D)
            }

            Method (R207, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MPOT)
                MBVS = 0x05
                PODT = MPOT /* \AOD_.R207.MPOT */
                MBCB = 0x3000
                ASMI (0x9D)
            }

            Method (R208, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MRPG)
                MBVS = 0x05
                TRPG = MRPG /* \AOD_.R208.MRPG */
                MBCB = 0x4000
                ASMI (0x9D)
            }

            Method (R209, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTRC = SVAL /* \AOD_.R209.SVAL */
                MBCB = 0x5000
                ASMI (0x9D)
            }

            Method (R20A, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRFC = SVAL /* \AOD_.R20A.SVAL */
                MBCB = 0x6000
                ASMI (0x9D)
            }

            Method (R20B, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF2 = SVAL /* \AOD_.R20B.SVAL */
                MBCB = 0x7000
                ASMI (0x9D)
            }

            Method (R20C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF4 = SVAL /* \AOD_.R20C.SVAL */
                MBCB = 0x8000
                ASMI (0x9D)
            }

            Method (R20D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TFAW = SVAL /* \AOD_.R20D.SVAL */
                MBCB = 0x9000
                ASMI (0x9D)
            }

            Method (R20E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRS = SVAL /* \AOD_.R20E.SVAL */
                MBCB = 0xA000
                ASMI (0x9D)
            }

            Method (R20F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRL = SVAL /* \AOD_.R20F.SVAL */
                MBCB = 0xB000
                ASMI (0x9D)
            }

            Method (R210, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTWR = SVAL /* \AOD_.R210.SVAL */
                MBCB = 0xC000
                ASMI (0x9D)
            }

            Method (R211, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTS = SVAL /* \AOD_.R211.SVAL */
                MBCB = 0xD000
                ASMI (0x9D)
            }

            Method (R212, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTL = SVAL /* \AOD_.R212.SVAL */
                MBCB = 0xE000
                ASMI (0x9D)
            }

            Method (R213, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCKE = SVAL /* \AOD_.R213.SVAL */
                MBCB = 0xF000
                ASMI (0x9D)
            }

            Method (R214, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCWL = SVAL /* \AOD_.R214.SVAL */
                MBCB = 0x00010000
                ASMI (0x9D)
            }

            Method (R215, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRTP = SVAL /* \AOD_.R215.SVAL */
                MBCB = 0x00020000
                ASMI (0x9D)
            }

            Method (R216, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSC = SVAL /* \AOD_.R216.SVAL */
                MBCB = 0x00030000
                ASMI (0x9D)
            }

            Method (R217, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSL = SVAL /* \AOD_.R217.SVAL */
                MBCB = 0x00040000
                ASMI (0x9D)
            }

            Method (R218, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSD = SVAL /* \AOD_.R218.SVAL */
                MBCB = 0x00050000
                ASMI (0x9D)
            }

            Method (R219, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRDD = SVAL /* \AOD_.R219.SVAL */
                MBCB = 0x00060000
                ASMI (0x9D)
            }

            Method (R21A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSC = SVAL /* \AOD_.R21A.SVAL */
                MBCB = 0x00070000
                ASMI (0x9D)
            }

            Method (R21B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSL = SVAL /* \AOD_.R21B.SVAL */
                MBCB = 0x00080000
                ASMI (0x9D)
            }

            Method (R21C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSD = SVAL /* \AOD_.R21C.SVAL */
                MBCB = 0x00090000
                ASMI (0x9D)
            }

            Method (R21D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWDD = SVAL /* \AOD_.R21D.SVAL */
                MBCB = 0x000A0000
                ASMI (0x9D)
            }

            Method (R21E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRWR = SVAL /* \AOD_.R21E.SVAL */
                MBCB = 0x000B0000
                ASMI (0x9D)
            }

            Method (R21F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWRD = SVAL /* \AOD_.R21F.SVAL */
                MBCB = 0x000C0000
                ASMI (0x9D)
            }

            Method (R220, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GRDN = SVAL /* \AOD_.R220.SVAL */
                MBCB = 0x000D0000
                ASMI (0x9D)
            }

            Method (R221, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CM2T = SVAL /* \AOD_.R221.SVAL */
                MBCB = 0x000E0000
                ASMI (0x9D)
            }

            Method (R222, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTNM = SVAL /* \AOD_.R222.SVAL */
                MBCB = 0x000F0000
                ASMI (0x9D)
            }

            Method (R223, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTWR = SVAL /* \AOD_.R223.SVAL */
                MBCB = 0x00100000
                ASMI (0x9D)
            }

            Method (R224, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTPK = SVAL /* \AOD_.R224.SVAL */
                MBCB = 0x00200000
                ASMI (0x9D)
            }

            Method (R225, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PWDE = SVAL /* \AOD_.R225.SVAL */
                MBCB = 0x00300000
                ASMI (0x9D)
            }

            Method (R226, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SMTE = SVAL /* \AOD_.R226.SVAL */
                MBCB = 0x00400000
                ASMI (0x9D)
            }

            Method (R227, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACNT = SVAL /* \AOD_.R227.SVAL */
                MBCB = 0x00500000
                ASMI (0x9D)
            }

            Method (R228, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCT = SVAL /* \AOD_.R228.SVAL */
                MBCB = 0x00600000
                ASMI (0x9D)
            }

            Method (R229, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACSP = SVAL /* \AOD_.R229.SVAL */
                MBCB = 0x00800000
                ASMI (0x9D)
            }

            Method (R22A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COSP = SVAL /* \AOD_.R22A.SVAL */
                MBCB = 0x00900000
                ASMI (0x9D)
            }

            Method (R22B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CESP = SVAL /* \AOD_.R22B.SVAL */
                MBCB = 0x00A00000
                ASMI (0x9D)
            }

            Method (R22C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCK = SVAL /* \AOD_.R22C.SVAL */
                MBCB = 0x00B00000
                ASMI (0x9D)
            }

            Method (R22D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBAC = SVAL /* \AOD_.R22D.SVAL */
                MBCB = 0x00C00000
                ASMI (0x9D)
            }

            Method (R22E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCO = SVAL /* \AOD_.R22E.SVAL */
                MBCB = 0x00D00000
                ASMI (0x9D)
            }

            Method (R22F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCE = SVAL /* \AOD_.R22F.SVAL */
                MBCB = 0x00E00000
                ASMI (0x9D)
            }

            Method (R230, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CDVP = SVAL /* \AOD_.R230.SVAL */
                MBCB = 0x00700000
                ASMI (0x9D)
            }

            Method (R231, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLM = SVAL /* \AOD_.R231.SVAL */
                MBCB = 0x00100001
                ASMI (0x9D)
            }

            Method (R232, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLS = SVAL /* \AOD_.R232.SVAL */
                MBCB = 0x00100002
                ASMI (0x9D)
            }

            Method (R233, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCOC = SVAL /* \AOD_.R233.SVAL */
                MBCB = 0x00100003
                ASMI (0x9D)
            }

            Method (R234, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SVID = SVAL /* \AOD_.R234.SVAL */
                MBCB = 0x00100004
                ASMI (0x9D)
            }

            Method (R235, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCLK = SVAL /* \AOD_.R235.SVAL */
                MBCB = 0x00100005
                ASMI (0x9D)
            }

            Method (R236, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FMAX = SVAL /* \AOD_.R236.SVAL */
                MBCB = 0x00100006
                ASMI (0x9D)
            }

            Method (R237, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GMAX = SVAL /* \AOD_.R237.SVAL */
                MBCB = 0x00100007
                ASMI (0x9D)
            }

            Method (R238, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CVDG = SVAL /* \AOD_.R238.SVAL */
                MBCB = 0x00100008
                ASMI (0x9D)
            }

            Method (R239, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100009
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R23A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ECOS = SVAL /* \AOD_.R23A.SVAL */
                MBCB = 0x0010000A
                ASMI (0x9D)
            }

            Method (R23B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PPTS = SVAL /* \AOD_.R23B.SVAL */
                MBCB = 0x0010000B
                ASMI (0x9D)
            }

            Method (R23C, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TDCS = SVAL /* \AOD_.R23C.SVAL */
                MBCB = 0x0010000C
                ASMI (0x9D)
            }

            Method (R23D, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCS = SVAL /* \AOD_.R23D.SVAL */
                MBCB = 0x0010000D
                ASMI (0x9D)
            }

            Method (R23E, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SCAS = SVAL /* \AOD_.R23E.SVAL */
                MBCB = 0x0010000E
                ASMI (0x9D)
            }

            Method (R23F, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMIS = SVAL /* \AOD_.R23F.SVAL */
                MBCB = 0x0010000F
                ASMI (0x9D)
            }

            Method (R301, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVIO)
                MBVS = 0x05
                VDIO = MVIO /* \AOD_.R301.MVIO */
                MBCB = 0x0100
                ASMI (0x9E)
            }

            Method (R302, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVTT)
                MBVS = 0x05
                VMTT = MVTT /* \AOD_.R302.MVTT */
                MBCB = 0x0200
                ASMI (0x9E)
            }

            Method (R303, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                VMPP = MVPP /* \AOD_.R303.MVPP */
                MBCB = 0x2000
                ASMI (0x9E)
            }

            Method (R304, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GAMS = SVAL /* \AOD_.R304.SVAL */
                MBCB = 0x00100010
                ASMI (0x9D)
            }

            Method (R305, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100020
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R306, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                NPSS = SVAL /* \AOD_.R306.SVAL */
                MBCB = 0x00100030
                ASMI (0x9D)
            }

            Method (R307, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100031
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R308, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COPS = SVAL /* \AOD_.R308.SVAL */
                MBCB = 0x00100032
                ASMI (0x9D)
            }

            Method (R309, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                IVDG = SVAL /* \AOD_.R309.SVAL */
                MBCB = 0x00100033
                ASMI (0x9D)
            }

            Method (R30A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OTDC = SVAL /* \AOD_.R30A.SVAL */
                MBCB = 0x00100034
                ASMI (0x9D)
            }

            Method (R30B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OEDC = SVAL /* \AOD_.R30B.SVAL */
                MBCB = 0x00100035
                ASMI (0x9D)
            }

            Method (R30C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMLC = SVAL /* \AOD_.R30C.SVAL */
                MBCB = 0x00100036
                ASMI (0x9D)
            }

            Method (R30D, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100037
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R401, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x01000000
                ASMI (0x9E)
            }

            Method (R402, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x02000000
                ASMI (0x9E)
            }

            Method (R505, 1, NotSerialized)
            {
                MBVS = 0x05
            }

            Method (R510, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GPSM = SVAL /* \AOD_.R510.SVAL */
                MBCB = 0x00100038
                ASMI (0x9D)
            }

            Method (R243, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TPMS = SVAL /* \AOD_.R243.SVAL */
                MBCB = 0x0010003A
                ASMI (0x9D)
            }

            Name (WQBA, Buffer (0x0A57)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x47, 0x0A, 0x00, 0x00, 0x38, 0x37, 0x00, 0x00,  // G...87..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xDB, 0x9A, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0F, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,  // ..."!...
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,  // ..,...8.
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,  // ..@H..J.
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,  // ........
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,  // ...`P.S.
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,  // ..*.....
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,  // ,.......
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,  // ......(1
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,  // .(......
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,  // P.. J...
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,  // .F.x..$O
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,  // @....`].
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,  // .!P.C@..
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,  // .j..N@..
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,  // N.I..X..
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,  // k.M.I.1.
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0x50, 0x1A, 0x40,  // x\.A.P.@
                /* 00A8 */  0x98, 0xFC, 0x21, 0x2B, 0x06, 0x0C, 0x4A, 0xC2,  // ..!+..J.
                /* 00B0 */  0x58, 0xA8, 0x8B, 0x51, 0xA3, 0x46, 0xCA, 0x06,  // X..Q.F..
                /* 00B8 */  0x64, 0x88, 0xD2, 0x46, 0x8D, 0x1E, 0xD0, 0xF9,  // d..F....
                /* 00C0 */  0x1D, 0xC9, 0xD9, 0x1D, 0xDD, 0x91, 0x24, 0x30,  // ......$0
                /* 00C8 */  0xEA, 0x31, 0x1D, 0x63, 0x61, 0x33, 0x12, 0x6A,  // .1.ca3.j
                /* 00D0 */  0x8C, 0xE6, 0xA0, 0x48, 0xB8, 0x41, 0xA3, 0x25,  // ...H.A.%
                /* 00D8 */  0xC2, 0x6A, 0x5C, 0xB1, 0xCF, 0xCC, 0xC2, 0x87,  // .j\.....
                /* 00E0 */  0x25, 0x8C, 0x23, 0x38, 0xB0, 0x83, 0xB5, 0x68,  // %.#8...h
                /* 00E8 */  0x18, 0xA1, 0x15, 0x04, 0xA7, 0x41, 0x1C, 0x45,  // .....A.E
                /* 00F0 */  0x94, 0x30, 0x0C, 0xCF, 0x98, 0x81, 0x8E, 0x92,  // .0......
                /* 00F8 */  0x21, 0x85, 0x09, 0x7A, 0x02, 0x41, 0x4E, 0x9E,  // !..z.AN.
                /* 0100 */  0x61, 0x19, 0xE2, 0x0C, 0x38, 0x56, 0x8C, 0x50,  // a...8V.P
                /* 0108 */  0x21, 0x31, 0x03, 0x09, 0xFE, 0xFF, 0x3F, 0x81,  // !1....?.
                /* 0110 */  0xAE, 0x31, 0xE4, 0x19, 0x88, 0xDC, 0x03, 0x4E,  // .1.....N
                /* 0118 */  0x20, 0x48, 0xF4, 0x28, 0xC1, 0x8D, 0x6B, 0x54,  //  H.(..kT
                /* 0120 */  0x36, 0xA6, 0xB3, 0xC1, 0x0D, 0xCC, 0x04, 0x71,  // 6......q
                /* 0128 */  0x0E, 0x0F, 0x23, 0x03, 0x42, 0x13, 0x88, 0x1F,  // ..#.B...
                /* 0130 */  0x3B, 0x7C, 0x02, 0xBB, 0x3F, 0x0E, 0x48, 0x21,  // ;|..?.H!
                /* 0138 */  0x82, 0x2E, 0x04, 0x67, 0x5A, 0xA3, 0x80, 0x77,  // ...gZ..w
                /* 0140 */  0xC4, 0xB3, 0x43, 0x5B, 0x10, 0x3A, 0x0B, 0xC4,  // ..C[.:..
                /* 0148 */  0x6A, 0x0C, 0x45, 0x10, 0x11, 0x82, 0x46, 0x31,  // j.E...F1
                /* 0150 */  0x5E, 0x84, 0x50, 0x21, 0xA2, 0x44, 0x3D, 0xE7,  // ^.P!.D=.
                /* 0158 */  0x20, 0xB5, 0x09, 0x50, 0x06, 0x22, 0xB4, 0x60,  //  ..P.".`
                /* 0160 */  0x46, 0x60, 0xF6, 0xCF, 0x00, 0xCC, 0x02, 0xC4,  // F`......
                /* 0168 */  0x1F, 0x81, 0x25, 0x9C, 0x08, 0x64, 0x64, 0x34,  // ..%..dd4
                /* 0170 */  0xF4, 0xB0, 0xE0, 0x93, 0x00, 0x3B, 0x20, 0x78,  // .....; x
                /* 0178 */  0x3E, 0xA7, 0x66, 0x02, 0x07, 0x86, 0x10, 0xAF,  // >.f.....
                /* 0180 */  0x04, 0x88, 0x3A, 0x5A, 0x50, 0x02, 0x4B, 0x39,  // ..:ZP.K9
                /* 0188 */  0x1A, 0x10, 0xDB, 0x03, 0xD3, 0x3D, 0xE0, 0x08,  // .....=..
                /* 0190 */  0xCF, 0xDD, 0x97, 0x83, 0x53, 0xF3, 0x4F, 0xC3,  // ....S.O.
                /* 0198 */  0xD3, 0x7C, 0x48, 0xC0, 0x0C, 0xD1, 0x63, 0x3D,  // .|H...c=
                /* 01A0 */  0x88, 0x80, 0x87, 0xC8, 0x4E, 0x09, 0x06, 0xC4,  // ....N...
                /* 01A8 */  0x7B, 0xBF, 0x16, 0x90, 0x11, 0xBC, 0x24, 0x18,  // {.....$.
                /* 01B0 */  0xD0, 0x93, 0x78, 0x40, 0x00, 0xCB, 0x41, 0xE3,  // ..x@..A.
                /* 01B8 */  0xC0, 0x4F, 0xA8, 0xE2, 0x3B, 0x00, 0x3D, 0x12,  // .O..;.=.
                /* 01C0 */  0xB0, 0x19, 0xC5, 0x37, 0x41, 0x59, 0xC7, 0x07,  // ...7AY..
                /* 01C8 */  0xF4, 0x9C, 0xA3, 0x3D, 0x3B, 0xBC, 0x2C, 0x34,  // ...=;.,4
                /* 01D0 */  0x7B, 0xC5, 0x20, 0x04, 0xAF, 0x01, 0xBE, 0x29,  // {. ....)
                /* 01D8 */  0xF8, 0x34, 0x62, 0x51, 0xAB, 0x93, 0x93, 0x55,  // .4bQ...U
                /* 01E0 */  0x79, 0xC4, 0x14, 0xDC, 0x43, 0xE0, 0x32, 0xE0,  // y...C.2.
                /* 01E8 */  0x34, 0x74, 0x8F, 0x17, 0x1C, 0x0A, 0xC6, 0x4B,  // 4t.....K
                /* 01F0 */  0xFF, 0xFF, 0xE3, 0x05, 0xF7, 0xBC, 0x8E, 0x17,  // ........
                /* 01F8 */  0x2C, 0xC7, 0x84, 0x87, 0x8D, 0xAA, 0x20, 0x34,  // ,..... 4
                /* 0200 */  0x88, 0x03, 0x6E, 0x7E, 0x00, 0xE4, 0x6A, 0xE1,  // ..n~..j.
                /* 0208 */  0x11, 0xB3, 0xB9, 0x9C, 0x15, 0x3B, 0xA2, 0xF0,  // .....;..
                /* 0210 */  0xE1, 0xF1, 0x61, 0x78, 0xC4, 0xEF, 0x0D, 0xC5,  // ..ax....
                /* 0218 */  0x82, 0x48, 0x20, 0x84, 0xCE, 0x0C, 0x47, 0x0E,  // .H ...G.
                /* 0220 */  0x16, 0x67, 0x27, 0x08, 0x11, 0x58, 0xDA, 0xD0,  // .g'..X..
                /* 0228 */  0xD1, 0x43, 0xF6, 0xA8, 0x5E, 0x62, 0x8C, 0xF1,  // .C..^b..
                /* 0230 */  0x44, 0x60, 0xD4, 0x53, 0x3A, 0x7A, 0xF0, 0x01,  // D`.S:z..
                /* 0238 */  0x7A, 0xF4, 0x80, 0xCF, 0xFF, 0xFF, 0xE8, 0x71,  // z......q
                /* 0240 */  0x92, 0xC6, 0x2C, 0x11, 0xA3, 0x47, 0x9F, 0x23,  // ..,..G.#
                /* 0248 */  0x3C, 0x9D, 0xB7, 0x1F, 0x7E, 0x14, 0x49, 0xE0,  // <...~.I.
                /* 0250 */  0xF8, 0x10, 0x1A, 0x3D, 0x78, 0x4E, 0x3F, 0x1E,  // ...=xN?.
                /* 0258 */  0x3D, 0xF8, 0xC7, 0xE8, 0xD1, 0x83, 0x67, 0x0C,  // =.....g.
                /* 0260 */  0xE7, 0x86, 0xBB, 0xDA, 0x78, 0xE4, 0x60, 0x1F,  // ....x.`.
                /* 0268 */  0x2F, 0x5E, 0xDE, 0x71, 0x0B, 0x14, 0x3E, 0x67,  // /^.q..>g
                /* 0270 */  0x4F, 0x06, 0xF0, 0x1E, 0x84, 0x3B, 0x6F, 0x01,  // O....;o.
                /* 0278 */  0x97, 0x11, 0x70, 0xC1, 0x4F, 0x1D, 0x9F, 0xAB,  // ..p.O...
                /* 0280 */  0xA8, 0x44, 0x18, 0xD4, 0xD1, 0x0A, 0x5C, 0xFF,  // .D....\.
                /* 0288 */  0xFF, 0xA3, 0x15, 0xC0, 0x84, 0xFB, 0xC3, 0xAB,  // ........
                /* 0290 */  0xD5, 0xA3, 0x15, 0xD8, 0x43, 0xBE, 0x24, 0xF4,  // ....C.$.
                /* 0298 */  0x23, 0x70, 0x6C, 0x08, 0x39, 0x39, 0x5A, 0xA1,  // #pl.99Z.
                /* 02A0 */  0x4E, 0x46, 0xB8, 0xA0, 0x07, 0x2B, 0xA0, 0x7B,  // NF...+.{
                /* 02A8 */  0xD0, 0xC0, 0x1D, 0x0F, 0xE0, 0xFC, 0xFF, 0x8F,  // ........
                /* 02B0 */  0x07, 0x7C, 0x60, 0xFC, 0xF4, 0x02, 0x3E, 0x11,  // .|`...>.
                /* 02B8 */  0x47, 0x21, 0x9F, 0xCA, 0xA0, 0x9F, 0x20, 0x3D,  // G!.... =
                /* 02C0 */  0x5A, 0xF0, 0x1C, 0xAB, 0x80, 0xC3, 0xA9, 0x0C,  // Z.......
                /* 02C8 */  0x38, 0x0C, 0x19, 0x7C, 0xF2, 0x0E, 0x53, 0xE8,  // 8..|..S.
                /* 02D0 */  0x03, 0x89, 0xA7, 0x50, 0xEB, 0x2D, 0x84, 0xC0,  // ...P.-..
                /* 02D8 */  0x1E, 0x90, 0x8F, 0x12, 0x41, 0x4E, 0x24, 0xC2,  // ....AN$.
                /* 02E0 */  0xB9, 0xF8, 0x38, 0x05, 0x98, 0xF8, 0xFF, 0x8F,  // ..8.....
                /* 02E8 */  0x1A, 0x7F, 0xCB, 0x60, 0xD7, 0x29, 0x30, 0x9C,  // ...`.)0.
                /* 02F0 */  0x82, 0xE0, 0x4D, 0xCA, 0xE3, 0x07, 0xDF, 0xB1,  // ..M.....
                /* 02F8 */  0x07, 0x77, 0x0A, 0x82, 0xE7, 0x71, 0x48, 0x42,  // .w...qHB
                /* 0300 */  0x3E, 0x8F, 0x97, 0x00, 0xDC, 0x45, 0x08, 0x7F,  // >....E..
                /* 0308 */  0x10, 0x02, 0x3E, 0xB2, 0x16, 0x4A, 0x4F, 0x41,  // ..>..JOA
                /* 0310 */  0x16, 0x02, 0x83, 0x3A, 0x08, 0x01, 0x2E, 0xFF,  // ...:....
                /* 0318 */  0xFF, 0x07, 0x21, 0x60, 0xE7, 0xED, 0xB6, 0xA1,  // ..!`....
                /* 0320 */  0x6B, 0x90, 0x6F, 0x03, 0x4F, 0x03, 0xAF, 0x11,  // k.o.O...
                /* 0328 */  0x51, 0x1E, 0x84, 0x7C, 0x13, 0x7A, 0x21, 0x88,  // Q..|.z!.
                /* 0330 */  0x10, 0xE5, 0x78, 0x4F, 0x20, 0xC2, 0xD3, 0x90,  // ..xO ...
                /* 0338 */  0x27, 0x1C, 0x26, 0xDC, 0xC9, 0x46, 0x79, 0x69,  // '.&..Fyi
                /* 0340 */  0x08, 0x63, 0xE8, 0x58, 0x81, 0x22, 0xC7, 0x0F,  // .c.X."..
                /* 0348 */  0xE1, 0x4B, 0x85, 0x0F, 0x42, 0x2C, 0xCA, 0x79,  // .K..B,.y
                /* 0350 */  0x40, 0x3F, 0x02, 0x9F, 0x3F, 0x6C, 0xE4, 0x2C,  // @?..?l.,
                /* 0358 */  0x82, 0x3A, 0x09, 0xF8, 0xD0, 0xE1, 0x41, 0x3D,  // .:....A=
                /* 0360 */  0x21, 0x60, 0x42, 0x9F, 0xEC, 0x40, 0x75, 0x14,  // !`B..@u.
                /* 0368 */  0x02, 0xCE, 0x07, 0x10, 0x78, 0x21, 0x0F, 0xAD,  // ....x!..
                /* 0370 */  0xA0, 0x3B, 0x92, 0x83, 0xE3, 0x50, 0x17, 0x39,  // .;...P.9
                /* 0378 */  0xEE, 0x03, 0x0D, 0xF6, 0xEC, 0xC1, 0xFF, 0xFF,  // ........
                /* 0380 */  0x67, 0x0F, 0xE0, 0x21, 0xED, 0xE0, 0x81, 0x12,  // g..!....
                /* 0388 */  0x73, 0xF6, 0x00, 0x48, 0x73, 0xD9, 0x78, 0xF7,  // s..Hs.x.
                /* 0390 */  0xF0, 0xA5, 0xE7, 0x4C, 0x9F, 0x3D, 0x3C, 0xD7,  // ...L.=<.
                /* 0398 */  0x77, 0x0E, 0x1F, 0xEB, 0x8C, 0x62, 0x88, 0xF7,  // w....b..
                /* 03A0 */  0x0F, 0x1F, 0x0A, 0xA2, 0x44, 0x3C, 0xD7, 0x28,  // ....D<.(
                /* 03A8 */  0x87, 0x1C, 0x25, 0x6E, 0x84, 0x30, 0xCF, 0x77,  // ..%n.0.w
                /* 03B0 */  0xC6, 0x89, 0x11, 0x2A, 0x02, 0x03, 0x7D, 0xF6,  // ...*..}.
                /* 03B8 */  0x60, 0x71, 0xCE, 0x1E, 0x50, 0xB1, 0xCF, 0xE6,  // `q..P...
                /* 03C0 */  0x8D, 0x23, 0xC2, 0x6B, 0xC0, 0x39, 0xFE, 0xFF,  // .#.k.9..
                /* 03C8 */  0xCF, 0xC7, 0x67, 0x0F, 0xC0, 0x9B, 0x94, 0xB7,  // ..g.....
                /* 03D0 */  0x9B, 0xCE, 0x1E, 0xE0, 0x3A, 0xC2, 0xE2, 0xCE,  // ....:...
                /* 03D8 */  0x1E, 0xF0, 0xC6, 0x8D, 0x3D, 0x7D, 0x00, 0x3B,  // ....=}.;
                /* 03E0 */  0x19, 0xAF, 0x01, 0x1F, 0x3D, 0x68, 0xF0, 0x03,  // ....=h..
                /* 03E8 */  0x2A, 0xD0, 0xFE, 0xFF, 0x1F, 0x50, 0x01, 0x97,  // *....P..
                /* 03F0 */  0x87, 0x8F, 0x07, 0x54, 0xB0, 0x4B, 0x7F, 0x0E,  // ...T.K..
                /* 03F8 */  0xE8, 0x53, 0xE0, 0xE0, 0x07, 0x54, 0xF4, 0x70,  // .S...T.p
                /* 0400 */  0x7C, 0x9C, 0xC3, 0x9C, 0x50, 0x01, 0x9B, 0xFF,  // |...P...
                /* 0408 */  0x7F, 0x02, 0x1F, 0x6E, 0xE1, 0x00, 0x87, 0xF4,  // ...n....
                /* 0410 */  0x58, 0xC1, 0x76, 0x3E, 0x05, 0x0E, 0x63, 0x05,  // X.v>..c.
                /* 0418 */  0xCF, 0xC0, 0xF8, 0x58, 0x81, 0xC5, 0xC4, 0x9E,  // ...X....
                /* 0420 */  0x3D, 0x8E, 0x15, 0x6C, 0xA7, 0x52, 0xE0, 0x30,  // =..l.R.0
                /* 0428 */  0x56, 0x30, 0x0D, 0x8C, 0x8D, 0x15, 0x7C, 0x12,  // V0....|.
                /* 0430 */  0xCE, 0xC5, 0xE8, 0x31, 0xFA, 0xDA, 0x72, 0x40,  // ...1..r@
                /* 0438 */  0x9E, 0x47, 0x84, 0xA7, 0x7C, 0xF6, 0xFF, 0x27,  // .G..|..'
                /* 0440 */  0x70, 0xDC, 0xE1, 0x82, 0xEA, 0x5C, 0xE3, 0xE1,  // p....\..
                /* 0448 */  0x82, 0x5F, 0xDE, 0x70, 0x41, 0x33, 0x36, 0x38,  // ._.pA368
                /* 0450 */  0x23, 0x06, 0xDF, 0xD1, 0xC9, 0xE7, 0x58, 0xB0,  // #.....X.
                /* 0458 */  0x5C, 0x22, 0xD8, 0x59, 0x80, 0x4D, 0x07, 0x7F,  // \".Y.M..
                /* 0460 */  0x95, 0xC5, 0x9F, 0x99, 0x80, 0x91, 0xE4, 0xC7,  // ........
                /* 0468 */  0x92, 0x09, 0x14, 0xE0, 0x74, 0x20, 0x51, 0x2F,  // ....t Q/
                /* 0470 */  0x02, 0x0A, 0xE3, 0x43, 0x8D, 0xCF, 0x4C, 0x70,  // ...C..Lp
                /* 0478 */  0x25, 0xC1, 0xA1, 0xCE, 0x69, 0xEC, 0x74, 0x7C,  // %...i.t|
                /* 0480 */  0x72, 0x27, 0xF2, 0x7A, 0xE0, 0xC9, 0x3D, 0x3C,  // r'.z..=<
                /* 0488 */  0xC1, 0x38, 0x26, 0x78, 0x5A, 0x27, 0x65, 0xED,  // .8&xZ'e.
                /* 0490 */  0x47, 0x20, 0xF2, 0xFF, 0xBF, 0x66, 0xB1, 0xB3,  // G ...f..
                /* 0498 */  0x02, 0x47, 0xE3, 0x27, 0x29, 0xB0, 0x5E, 0x18,  // .G.').^.
                /* 04A0 */  0x7C, 0x4C, 0x00, 0xC7, 0xAC, 0x5F, 0xA3, 0x30,  // |L..._.0
                /* 04A8 */  0x58, 0xA1, 0x62, 0x34, 0x7A, 0x0D, 0x22, 0xA0,  // X.b4z.".
                /* 04B0 */  0xC7, 0xD7, 0xD7, 0x30, 0x74, 0x27, 0x30, 0x54,  // ...0t'0T
                /* 04B8 */  0xC4, 0x10, 0x6F, 0x06, 0x76, 0x79, 0x1E, 0x42,  // ..o.vy.B
                /* 04C0 */  0x1E, 0x9A, 0xC0, 0x85, 0xFD, 0xD0, 0x04, 0xF6,  // ........
                /* 04C8 */  0x50, 0x67, 0x32, 0x1A, 0x69, 0x34, 0xA8, 0x73,  // Pg2.i4.s
                /* 04D0 */  0x3A, 0x3F, 0x10, 0x3C, 0x72, 0xF9, 0xD8, 0x61,  // :?.<r..a
                /* 04D8 */  0x90, 0x13, 0x3D, 0xAD, 0xC7, 0x85, 0xA7, 0x01,  // ..=.....
                /* 04E0 */  0x8F, 0x9B, 0x5D, 0x13, 0xFC, 0x41, 0xF0, 0xF1,  // ..]..A..
                /* 04E8 */  0x00, 0x7F, 0x80, 0x08, 0x78, 0xA2, 0x4F, 0x1E,  // ....x.O.
                /* 04F0 */  0xB0, 0x4E, 0x20, 0xF8, 0xA3, 0x06, 0xFC, 0xF1,  // .N .....
                /* 04F8 */  0xF8, 0x18, 0xE0, 0x63, 0x07, 0x97, 0x3F, 0x08,  // ...c..?.
                /* 0500 */  0xD4, 0x51, 0x91, 0x8F, 0xF4, 0xB4, 0xDE, 0x06,  // .Q......
                /* 0508 */  0x7C, 0x48, 0x38, 0x2C, 0x76, 0xE6, 0xF0, 0xC9,  // |H8,v...
                /* 0510 */  0x08, 0xFF, 0xFF, 0x1F, 0x0F, 0x38, 0x8F, 0xED,  // .....8..
                /* 0518 */  0x0F, 0x19, 0xBE, 0x32, 0x78, 0xBE, 0x3E, 0xD1,  // ...2x.>.
                /* 0520 */  0x82, 0xE5, 0xD6, 0xE1, 0x43, 0x43, 0xA8, 0xA7,  // ....CC..
                /* 0528 */  0x0E, 0xCF, 0xE0, 0xFD, 0xC2, 0x27, 0x10, 0x60,  // .....'.`
                /* 0530 */  0x22, 0xCA, 0xCC, 0x10, 0x98, 0xD0, 0x75, 0xCA,  // ".....u.
                /* 0538 */  0xC6, 0x59, 0x93, 0x9E, 0x07, 0x2C, 0xF7, 0x80,  // .Y...,..
                /* 0540 */  0xA0, 0x6B, 0x04, 0xE6, 0x06, 0x11, 0xC4, 0xC3,  // .k......
                /* 0548 */  0x7F, 0xA3, 0xE0, 0x87, 0x46, 0x01, 0xEA, 0x60,  // ....F..`
                /* 0550 */  0x66, 0x08, 0x4B, 0xA3, 0x90, 0x30, 0x08, 0x8D,  // f.K..0..
                /* 0558 */  0xC8, 0x47, 0x0F, 0x02, 0x47, 0x41, 0x3C, 0x7A,  // .G..GA<z
                /* 0560 */  0xC7, 0x3C, 0x3E, 0xA1, 0x87, 0xEA, 0x63, 0x80,  // .<>...c.
                /* 0568 */  0x27, 0x81, 0x0B, 0x75, 0xF0, 0xA1, 0xC7, 0x05,  // '..u....
                /* 0570 */  0x3C, 0xDE, 0x03, 0xB1, 0xCF, 0x01, 0x6C, 0xEC,  // <.....l.
                /* 0578 */  0xB8, 0x93, 0x07, 0xDC, 0x71, 0xE0, 0x4F, 0x9C,  // ....q.O.
                /* 0580 */  0xF8, 0xB3, 0x1A, 0x3F, 0xF5, 0x80, 0xF3, 0xC8,  // ...?....
                /* 0588 */  0x89, 0xFB, 0xFF, 0x1F, 0x0E, 0xE0, 0x01, 0xF9,  // ........
                /* 0590 */  0x3E, 0x60, 0xA5, 0x67, 0x02, 0x3A, 0x87, 0x10,  // >`.g.:..
                /* 0598 */  0x61, 0xA2, 0x19, 0x1E, 0x13, 0xF8, 0xF8, 0x44,  // a......D
                /* 05A0 */  0x4F, 0xA4, 0x1E, 0x17, 0x1F, 0xA5, 0xCF, 0x30,  // O......0
                /* 05A8 */  0x0C, 0xFB, 0x11, 0xC5, 0xC7, 0xC4, 0x03, 0x7C,  // .......|
                /* 05B0 */  0x39, 0x78, 0xE6, 0xC3, 0xC0, 0x7A, 0xDC, 0x1C,  // 9x...z..
                /* 05B8 */  0xD6, 0x68, 0x61, 0x0F, 0xF7, 0x19, 0xC2, 0xF7,  // .ha.....
                /* 05C0 */  0x0F, 0xCF, 0xCC, 0xD7, 0x46, 0x9F, 0x3C, 0xC0,  // ....F.<.
                /* 05C8 */  0x72, 0x94, 0x82, 0x3F, 0x54, 0xDC, 0x59, 0x00,  // r..?T.Y.
                /* 05D0 */  0xEE, 0x81, 0x89, 0xCD, 0xE1, 0x69, 0x00, 0x2F,  // .....i./
                /* 05D8 */  0xF3, 0x10, 0x81, 0x1A, 0x88, 0x45, 0x2E, 0x50,  // .....E.P
                /* 05E0 */  0xC7, 0x15, 0x8F, 0xC4, 0x04, 0x96, 0x77, 0x80,  // ......w.
                /* 05E8 */  0x40, 0x9D, 0x1F, 0x2C, 0xEB, 0x00, 0x81, 0x12,  // @..,....
                /* 05F0 */  0x02, 0x47, 0x41, 0x7C, 0x80, 0xF0, 0x31, 0xDD,  // .GA|..1.
                /* 05F8 */  0x46, 0x0E, 0x10, 0xE8, 0x03, 0x0C, 0x83, 0x78,  // F......x
                /* 0600 */  0xE8, 0x34, 0x81, 0x8F, 0x32, 0x3E, 0x40, 0x00,  // .4..2>@.
                /* 0608 */  0x8F, 0x71, 0xE0, 0x0F, 0x10, 0xF0, 0xFE, 0xFF,  // .q......
                /* 0610 */  0x04, 0x3E, 0x01, 0x03, 0x9F, 0xF3, 0x03, 0x38,  // .>.....8
                /* 0618 */  0x4E, 0xA2, 0x3E, 0x3F, 0x80, 0xEB, 0x04, 0xE0,  // N.>?....
                /* 0620 */  0xF3, 0x03, 0x70, 0x1D, 0xE0, 0xA3, 0x00, 0x58,  // ..p....X
                /* 0628 */  0xCE, 0x64, 0x6C, 0x0E, 0x2F, 0x35, 0x67, 0xFE,  // .dl./5g.
                /* 0630 */  0xCA, 0xE4, 0x13, 0x2F, 0xE6, 0xD4, 0xCB, 0x75,  // .../...u
                /* 0638 */  0x8D, 0x80, 0x44, 0x3C, 0x43, 0xA0, 0x06, 0xE1,  // ..D<C...
                /* 0640 */  0x83, 0xB9, 0x8F, 0x13, 0xCC, 0xE7, 0x21, 0x48,  // ......!H
                /* 0648 */  0xAA, 0x51, 0x04, 0xEF, 0x5B, 0x01, 0x8B, 0x70,  // .Q..[..p
                /* 0650 */  0x8C, 0x40, 0x89, 0xA7, 0x90, 0xF4, 0x63, 0x04,  // .@....c.
                /* 0658 */  0x4A, 0x2C, 0x1C, 0x05, 0xF1, 0xA8, 0x7D, 0x90,  // J,....}.
                /* 0660 */  0xB0, 0x8D, 0xB3, 0x2D, 0xFA, 0x30, 0xCC, 0x8F,  // ...-.0..
                /* 0668 */  0x02, 0xFC, 0x14, 0x01, 0xF7, 0xFF, 0x3F, 0x0B,  // ......?.
                /* 0670 */  0x9F, 0xC2, 0x70, 0x47, 0x0F, 0x70, 0x5C, 0xC4,  // ..pG.p\.
                /* 0678 */  0x0E, 0xED, 0xEC, 0x1E, 0x12, 0xA2, 0xC4, 0x3C,  // .......<
                /* 0680 */  0x83, 0x37, 0x3F, 0x03, 0x86, 0x8D, 0xE6, 0x31,  // .7?....1
                /* 0688 */  0xE2, 0x70, 0xCE, 0xD1, 0x17, 0x35, 0xCF, 0x29,  // .p...5.)
                /* 0690 */  0xD6, 0xE3, 0x1B, 0x3F, 0x52, 0xC0, 0x45, 0xF1,  // ...?R.E.
                /* 0698 */  0x91, 0x02, 0xEE, 0x4C, 0xCE, 0x03, 0xA3, 0x6E,  // ...L...n
                /* 06A0 */  0x2C, 0x82, 0xF7, 0xB5, 0x10, 0x7F, 0xB0, 0x00,  // ,.......
                /* 06A8 */  0x1E, 0xC7, 0x25, 0x1F, 0x2C, 0xC0, 0x05, 0xE9,  // ..%.,...
                /* 06B0 */  0x83, 0x05, 0x70, 0x3D, 0x1F, 0xF8, 0x74, 0x00,  // ..p=..t.
                /* 06B8 */  0xD6, 0x0B, 0x19, 0xBF, 0x1F, 0xB0, 0xFF, 0xFF,  // ........
                /* 06C0 */  0xFD, 0x00, 0x77, 0xC2, 0x80, 0x71, 0x3E, 0xC0,  // ..w..q>.
                /* 06C8 */  0xDC, 0x30, 0x1C, 0x6B, 0xA5, 0x3A, 0x61, 0xE0,  // .0.k.:a.
                /* 06D0 */  0x62, 0x3D, 0x28, 0x34, 0x10, 0x36, 0xBC, 0xE7,  // b=(4.6..
                /* 06D8 */  0x9F, 0x27, 0x43, 0x7E, 0x98, 0x61, 0x51, 0xE0,  // .'C~.aQ.
                /* 06E0 */  0x74, 0xB4, 0xF0, 0xC9, 0xC2, 0x21, 0x28, 0x74,  // t....!(t
                /* 06E8 */  0x10, 0xF3, 0x09, 0x83, 0x8B, 0x39, 0x61, 0x50,  // .....9aP
                /* 06F0 */  0x10, 0x03, 0x3A, 0xE9, 0x39, 0x0C, 0x7D, 0xDA,  // ..:.9.}.
                /* 06F8 */  0xF4, 0xB1, 0x81, 0xDD, 0xEE, 0x7D, 0xBF, 0xF0,  // .....}..
                /* 0700 */  0x5C, 0x3C, 0x67, 0x8E, 0xE7, 0xF3, 0x32, 0x43,  // \<g...2C
                /* 0708 */  0x7D, 0x33, 0x01, 0xCF, 0x95, 0x82, 0x1D, 0xE7,  // }3......
                /* 0710 */  0x31, 0xB7, 0x49, 0x76, 0xE0, 0x64, 0xC7, 0x02,  // 1.Iv.d..
                /* 0718 */  0xA3, 0x1C, 0xEF, 0x6B, 0xA1, 0xD5, 0xDC, 0x15,  // ...k....
                /* 0720 */  0x50, 0x33, 0xC2, 0x10, 0x78, 0xC0, 0x3E, 0x89,  // P3..x.>.
                /* 0728 */  0x81, 0x49, 0xDF, 0x8D, 0x02, 0xE4, 0xE8, 0x5C,  // .I.....\
                /* 0730 */  0xE8, 0xE8, 0x51, 0x07, 0x00, 0x1F, 0xED, 0xF8,  // ..Q.....
                /* 0738 */  0xE8, 0x7D, 0xC4, 0xF6, 0x71, 0x05, 0xEE, 0xE1,  // .}..q...
                /* 0740 */  0xCE, 0x67, 0x28, 0x70, 0xFC, 0xFF, 0xCF, 0x50,  // .g(p...P
                /* 0748 */  0xC0, 0x65, 0x60, 0x9E, 0xE1, 0x13, 0x0A, 0xB8,  // .e`.....
                /* 0750 */  0xEE, 0x0F, 0xFC, 0xA2, 0x8A, 0x99, 0xC8, 0xB3,  // ........
                /* 0758 */  0x30, 0x8C, 0x53, 0x0A, 0xF0, 0x18, 0xBD, 0x4F,  // 0.S....O
                /* 0760 */  0x29, 0xE0, 0x3A, 0x00, 0xF8, 0x94, 0x02, 0x5C,  // ).:....\
                /* 0768 */  0xE7, 0xF8, 0x50, 0x00, 0x96, 0x33, 0x4A, 0x14,  // ..P..3J.
                /* 0770 */  0xDF, 0x7F, 0x3D, 0x11, 0x1B, 0x1F, 0x3E, 0xBD,  // ..=...>.
                /* 0778 */  0xA0, 0x78, 0x2C, 0xCF, 0xE6, 0xEC, 0x4C, 0xA9,  // .x,...L.
                /* 0780 */  0xB3, 0x09, 0x3A, 0xDA, 0xEB, 0x41, 0x83, 0x7E,  // ..:..A.~
                /* 0788 */  0x50, 0xF1, 0xEC, 0xC3, 0x1F, 0x5F, 0x84, 0xE7,  // P...._..
                /* 0790 */  0x53, 0x03, 0xFF, 0xFF, 0x13, 0x38, 0xCE, 0xD9,  // S....8..
                /* 0798 */  0x04, 0x15, 0x84, 0x42, 0xC7, 0x4E, 0x1F, 0x27,  // ...B.N.'
                /* 07A0 */  0xB8, 0xA4, 0xE3, 0x04, 0x05, 0x31, 0xA0, 0xF3,  // .....1..
                /* 07A8 */  0x1E, 0xF1, 0x3C, 0x0C, 0x7A, 0x9C, 0xE0, 0xA7,  // ..<.z...
                /* 07B0 */  0x3E, 0xDF, 0x12, 0x8E, 0xE3, 0x09, 0x24, 0xC1,  // >.....$.
                /* 07B8 */  0x7C, 0x27, 0x01, 0x7A, 0x39, 0x81, 0x77, 0x5E,  // |'.z9.w^
                /* 07C0 */  0x07, 0xCF, 0x28, 0xBC, 0x93, 0xB3, 0x60, 0x08,  // ..(...`.
                /* 07C8 */  0x6F, 0xD6, 0xEC, 0x38, 0x81, 0xBF, 0x1C, 0x3C,  // o..8...<
                /* 07D0 */  0x2B, 0x3C, 0xA8, 0xF3, 0xEB, 0x09, 0xCC, 0x7B,  // +<.....{
                /* 07D8 */  0x1E, 0xB8, 0x8E, 0x27, 0xC0, 0x42, 0xE6, 0x01,  // ...'.B..
                /* 07E0 */  0x00, 0x75, 0x6C, 0xF4, 0xC1, 0x91, 0x1F, 0x00,  // .ul.....
                /* 07E8 */  0x1C, 0xFA, 0x78, 0x82, 0x9E, 0x89, 0x8F, 0x45,  // ..x....E
                /* 07F0 */  0x4F, 0x25, 0xBE, 0x00, 0xF0, 0xB3, 0x9B, 0xCE,  // O%......
                /* 07F8 */  0x27, 0xA0, 0x38, 0x67, 0x82, 0x67, 0x1C, 0xEC,  // '.8g.g..
                /* 0800 */  0x0A, 0x80, 0x3F, 0x03, 0x60, 0xFE, 0xFF, 0x27,  // ..?.`..'
                /* 0808 */  0x14, 0x38, 0x47, 0x32, 0xF0, 0x4D, 0xC4, 0xA7,  // .8G2.M..
                /* 0810 */  0x8A, 0x03, 0xC1, 0x9E, 0x64, 0x81, 0x37, 0x2C,  // ....d.7,
                /* 0818 */  0x3F, 0xC9, 0x02, 0x3E, 0x6E, 0x23, 0xD8, 0x59,  // ?..>n#.Y
                /* 0820 */  0x3C, 0x93, 0x30, 0x82, 0x91, 0x8F, 0x26, 0xA8,  // <.0...&.
                /* 0828 */  0x23, 0xB2, 0x83, 0x9E, 0xC2, 0x10, 0xE3, 0x7C,  // #......|
                /* 0830 */  0xAC, 0x30, 0x46, 0xE4, 0xE2, 0x47, 0xAD, 0xC9,  // .0F..G..
                /* 0838 */  0xF8, 0x6C, 0xE6, 0xCB, 0x3A, 0x3B, 0xFC, 0xE0,  // .l..:;..
                /* 0840 */  0x08, 0x06, 0x3A, 0xA0, 0xA0, 0x8E, 0x63, 0x3E,  // ..:...c>
                /* 0848 */  0x8B, 0x81, 0xEB, 0xFF, 0x7F, 0x16, 0x03, 0x78,  // .......x
                /* 0850 */  0x70, 0x76, 0xF7, 0xE8, 0xF9, 0xB1, 0x9D, 0x83,  // pv......
                /* 0858 */  0x78, 0xF4, 0x0E, 0x7F, 0x16, 0x83, 0x1E, 0xF6,  // x.......
                /* 0860 */  0x2C, 0x06, 0xB4, 0x05, 0x9F, 0xC5, 0x40, 0x79,  // ,.....@y
                /* 0868 */  0x8B, 0xC0, 0xFF, 0xFF, 0x6F, 0x11, 0xB8, 0x33,  // ....o..3
                /* 0870 */  0x28, 0xF0, 0x5A, 0x9B, 0x4F, 0x28, 0xE0, 0xBA,  // (.Z.O(..
                /* 0878 */  0x33, 0xF8, 0x84, 0x02, 0x5C, 0x8F, 0x00, 0xB8,  // 3...\...
                /* 0880 */  0x33, 0x28, 0x38, 0x4E, 0x00, 0xCC, 0xD7, 0x0D,  // 3(8N....
                /* 0888 */  0x80, 0x82, 0x3C, 0x02, 0xE0, 0xAF, 0xF0, 0x3E,  // ..<....>
                /* 0890 */  0x98, 0xE0, 0xE2, 0x9D, 0x54, 0x50, 0x1C, 0x8E,  // ....TP..
                /* 0898 */  0x77, 0x52, 0x41, 0x4C, 0x25, 0xF2, 0x5B, 0x8B,  // wRAL%.[.
                /* 08A0 */  0x27, 0x10, 0xFE, 0xE0, 0xE2, 0xBC, 0x9F, 0xF1,  // '.......
                /* 08A8 */  0x53, 0x19, 0x0C, 0x51, 0x07, 0x0B, 0x94, 0x8C,  // S..Q....
                /* 08B0 */  0x83, 0x05, 0x05, 0x31, 0xA0, 0x33, 0x9E, 0x52,  // ...1.3.R
                /* 08B8 */  0xD0, 0xA7, 0x32, 0x7E, 0x19, 0xF1, 0xC0, 0x12,  // ..2~....
                /* 08C0 */  0xCC, 0x74, 0x4D, 0x81, 0xFA, 0xFF, 0x47, 0xF6,  // .tM...G.
                /* 08C8 */  0x05, 0x04, 0x37, 0x60, 0xB8, 0x60, 0x0F, 0x12,  // ..7`.`..
                /* 08D0 */  0x46, 0x78, 0x4D, 0xF6, 0x3C, 0x30, 0x47, 0x14,  // FxM.<0G.
                /* 08D8 */  0xC0, 0x86, 0xE4, 0xA1, 0xA3, 0x44, 0x0E, 0x9D,  // .....D..
                /* 08E0 */  0x82, 0x78, 0xE8, 0xA6, 0xF1, 0x11, 0x05, 0x37,  // .x.....7
                /* 08E8 */  0x56, 0x76, 0x21, 0x80, 0x15, 0xF5, 0x94, 0x02,  // Vv!.....
                /* 08F0 */  0x0A, 0x91, 0xC3, 0x07, 0xCD, 0x38, 0x8E, 0xEE,  // .....8..
                /* 08F8 */  0xA9, 0xC7, 0xF3, 0xE0, 0x77, 0x62, 0x1F, 0xF3,  // ....wb..
                /* 0900 */  0xE0, 0x9E, 0x54, 0x70, 0xA7, 0x46, 0xDC, 0x49,  // ..Tp.F.I
                /* 0908 */  0x05, 0x0C, 0x73, 0xC4, 0x9E, 0xCA, 0xC0, 0xF1,  // ..s.....
                /* 0910 */  0xFF, 0x3F, 0x82, 0x02, 0x47, 0x0F, 0x47, 0x50,  // .?..G.GP
                /* 0918 */  0x40, 0xCB, 0x21, 0x85, 0x1F, 0x33, 0x30, 0x57,  // @.!..30W
                /* 0920 */  0x03, 0x7E, 0x04, 0xC5, 0xC4, 0x7C, 0x3E, 0xE8,  // .~...|>.
                /* 0928 */  0x7C, 0xC2, 0x8F, 0x06, 0x0E, 0xF4, 0x2A, 0x10,  // |.....*.
                /* 0930 */  0x38, 0x3B, 0xEB, 0xE3, 0x2E, 0x07, 0x3E, 0x61,  // 8;....>a
                /* 0938 */  0x98, 0x60, 0x84, 0xD3, 0x04, 0x85, 0xB0, 0x78,  // .`.....x
                /* 0940 */  0x0A, 0x49, 0x3F, 0x54, 0xA0, 0xC4, 0xC2, 0x51,  // .I?T...Q
                /* 0948 */  0x10, 0x1F, 0x2A, 0x2C, 0xE4, 0x50, 0x81, 0x3E,  // ..*,.P.>
                /* 0950 */  0x46, 0xE1, 0x83, 0x9F, 0x28, 0x40, 0x71, 0x01,  // F...(@q.
                /* 0958 */  0x78, 0x64, 0x07, 0xEF, 0x7D, 0x9D, 0xFD, 0xFF,  // xd..}...
                /* 0960 */  0xEF, 0xEB, 0x98, 0x41, 0xE2, 0x2E, 0x2A, 0x1E,  // ...A..*.
                /* 0968 */  0xB2, 0x0F, 0xEC, 0x98, 0x79, 0xFA, 0x68, 0x01,  // ....y.h.
                /* 0970 */  0x8F, 0xC0, 0xA7, 0x47, 0xF0, 0xC1, 0xFB, 0x30,  // ...G...0
                /* 0978 */  0x05, 0xBC, 0xCE, 0x7A, 0x3E, 0x58, 0x80, 0x0B,  // ...z>X..
                /* 0980 */  0xDC, 0x07, 0x0B, 0xE0, 0x7A, 0xFB, 0xF1, 0xE9,  // ....z...
                /* 0988 */  0x00, 0xAC, 0xA3, 0x3D, 0xE6, 0xF3, 0x8D, 0xF3,  // ...=....
                /* 0990 */  0x7E, 0x00, 0xE3, 0xA6, 0xF2, 0x10, 0xE9, 0x7B,  // ~......{
                /* 0998 */  0x80, 0xF1, 0xD9, 0xF9, 0x00, 0x7B, 0x25, 0xF2,  // .....{%.
                /* 09A0 */  0xF1, 0x59, 0x36, 0x7D, 0x6A, 0x34, 0x6A, 0xD5,  // .Y6}j4j.
                /* 09A8 */  0xA0, 0x4C, 0x8D, 0x32, 0x0D, 0x6A, 0xF5, 0xA9,  // .L.2.j..
                /* 09B0 */  0xD4, 0x98, 0x31, 0x4F, 0x50, 0xFA, 0xFF, 0x47,  // ..1OP..G
                /* 09B8 */  0x58, 0xB8, 0x46, 0xEE, 0x50, 0x4F, 0x09, 0x81,  // X.F.PO..
                /* 09C0 */  0x38, 0xEE, 0xF2, 0x35, 0x7A, 0xF2, 0x3A, 0x11,  // 8..5z.:.
                /* 09C8 */  0x88, 0x85, 0xA8, 0x00, 0x61, 0x62, 0x16, 0x29,  // ....ab.)
                /* 09D0 */  0x10, 0x4B, 0x5D, 0xA4, 0x40, 0x1C, 0xC5, 0x07,  // .K].@...
                /* 09D8 */  0x08, 0x0B, 0xA8, 0x04, 0x84, 0x45, 0xB5, 0x02,  // .....E..
                /* 09E0 */  0x44, 0xB5, 0x80, 0xB0, 0x58, 0x5E, 0x40, 0x58,  // D...X^@X
                /* 09E8 */  0xB0, 0x85, 0x0A, 0xC4, 0x61, 0xDC, 0x80, 0x30,  // ....a..0
                /* 09F0 */  0x29, 0x2F, 0x08, 0x0D, 0x86, 0xD8, 0x39, 0x42,  // )/....9B
                /* 09F8 */  0xEB, 0xAC, 0x6B, 0x10, 0x01, 0x39, 0xB4, 0x1F,  // ..k..9..
                /* 0A00 */  0x20, 0x26, 0x61, 0xFD, 0x02, 0xB2, 0x70, 0x45,  //  &a...pE
                /* 0A08 */  0x40, 0x2C, 0x06, 0x88, 0x80, 0xAC, 0xC3, 0x12,  // @,......
                /* 0A10 */  0x10, 0x13, 0x05, 0x22, 0x20, 0x4B, 0xD3, 0x04,  // ..." K..
                /* 0A18 */  0xC4, 0x84, 0x82, 0x08, 0xC8, 0x21, 0x45, 0x01,  // .....!E.
                /* 0A20 */  0xB1, 0xC4, 0x20, 0x02, 0x72, 0x78, 0x53, 0x40,  // .. .rxS@
                /* 0A28 */  0x4C, 0x8A, 0x2A, 0x20, 0xA6, 0xFE, 0xA1, 0x20,  // L.* ... 
                /* 0A30 */  0x20, 0x47, 0x01, 0x11, 0x90, 0x03, 0xD9, 0x02,  //  G......
                /* 0A38 */  0x62, 0xF1, 0x40, 0x04, 0x64, 0x85, 0xEF, 0x51,  // b.@.d..Q
                /* 0A40 */  0x01, 0x59, 0x2E, 0x88, 0x80, 0x1C, 0xC1, 0x18,  // .Y......
                /* 0A48 */  0x10, 0x0B, 0x04, 0x22, 0x20, 0xCB, 0x92, 0x06,  // ..." ...
                /* 0A50 */  0xC4, 0x44, 0x82, 0x08, 0xC8, 0xFF, 0x7F         // .D.....
            })
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "AOD")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x6A, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,  // j.......
                /* 0008 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,  // ....)...
                /* 0010 */  0x41, 0x41, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AA..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   // ..).BA..
            })
            Method (WMAA, 3, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((((Arg1 != One) || (Arg1 != 0x02)) || 
                        (Arg1 != 0x06)))
                    {
                        CreateDWordField (Arg2, Zero, WIID)
                    }

                    If ((Arg1 == One))
                    {
                        Return (AM01 ())
                    }
                    ElseIf ((Arg1 == 0x02))
                    {
                        Return (AM02 ())
                    }
                    ElseIf ((Arg1 == 0x03))
                    {
                        Return (AM03 ())
                    }
                    ElseIf ((Arg1 == 0x04))
                    {
                        Return (AM04 (WIID))
                    }
                    ElseIf ((Arg1 == 0x05))
                    {
                        Return (AM05 (Arg2))
                    }
                    ElseIf ((Arg1 == 0x06))
                    {
                        Return (AM06 (WIID))
                    }
                    ElseIf ((Arg1 == 0x07))
                    {
                        Return (AM07 (WIID))
                    }
                    ElseIf ((Arg1 == 0x08))
                    {
                        Return (AM08 ())
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "ArticDIS", 0x00000001)
{
    External (_SB_.PLTF, DeviceObj)

    Scope (\_SB.PLTF)
    {
        Name (_LPI, Package (0x04)  // _LPI: Low Power Idle States
        {
            Zero, 
            Zero, 
            One, 
            Package (0x0A)
            {
                0x000F4240, 
                0xC350, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "S0i3"
            }
        })
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "ArticNOI", 0x00000001)
{
    /*
     * iASL Warning: There were 20 external control methods found during
     * disassembly, but only 0 were resolved (20 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.SWUS.SWDS.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP8.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments

    Method (AFN0, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN0))
        {
            \_SB.PCI0.GPP8.VGA.AFN0 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN0))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN0 ()
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN1))
        {
            \_SB.PCI0.GPP8.VGA.AFN1 (Arg0)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN1))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN1 (Arg0)
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN2))
        {
            \_SB.PCI0.GPP8.VGA.AFN2 (Arg0, Arg1)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN2))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN2 (Arg0, Arg1)
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN3))
        {
            \_SB.PCI0.GPP8.VGA.AFN3 (Arg0, Arg1)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN3))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN3 (Arg0, Arg1)
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN4))
        {
            \_SB.PCI0.GPP8.VGA.AFN4 (Arg0)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN4))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN4 (Arg0)
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN5))
        {
            \_SB.PCI0.GPP8.VGA.AFN5 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN5))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN5 ()
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN6))
        {
            \_SB.PCI0.GPP8.VGA.AFN6 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN6))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN6 ()
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN7))
        {
            \_SB.PCI0.GPP8.VGA.AFN7 (Arg0)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN7))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN7 (Arg0)
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFN8))
        {
            \_SB.PCI0.GPP8.VGA.AFN8 ()
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN8))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFN8 ()
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.GPP8.VGA.AFNC))
        {
            \_SB.PCI0.GPP8.VGA.AFNC (Arg0, Arg1)
        }

        If (CondRefOf (\_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFNC))
        {
            \_SB.PCI0.GPP8.SWUS.SWDS.VGA.AFNC (Arg0, Arg1)
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "ArticDGP", 0x00000001)
{
    External (_SB_.PCI0.GPP8, DeviceObj)
    External (_SB_.PCI0.GPP8.M434, UnknownObj)
    External (M049, UnknownObj)
    External (M097, UnknownObj)
    External (M128, UnknownObj)

    Scope (\_SB.PCI0.GPP8)
    {
        Device (SWUS)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
            {
                Return (Zero)
            }

            Name (DDPM, Package (0x02)
            {
                0x08, 
                0x04
            })
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (DDPM) /* \_SB_.PCI0.GPP8.SWUS.DDPM */
            }

            Device (SWDS)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }

                Name (DDPM, Package (0x02)
                {
                    0x08, 
                    0x04
                })
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (DDPM) /* \_SB_.PCI0.GPP8.SWUS.SWDS.DDPM */
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((M097 != Zero))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (0x0F)
                        }
                    }
                }

                Method (_DSD, 0, Serialized)  // _DSD: Device-Specific Data
                {
                    Return (Package (0x02)
                    {
                        ToUUID ("6b4ad420-8fd3-4364-acf8-eb94876fd9eb") /* Unknown UUID */, 
                        Package (0x00) {}
                    })
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    Name (M432, Zero)
                    Name (M433, Zero)
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (M435, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (M435, Zero, M436)
                                CreateBitField (M435, 0x05, M445)
                                CreateBitField (M435, 0x0A, M437)
                                CreateBitField (M435, 0x0B, M438)
                                If ((Arg1 >= 0x04))
                                {
                                    M436 = One
                                    M445 = One
                                    ((0x66 = (M049 >> M128)) /* External reference */ & 0x04)
                                    One
                                    M432
                                    ((0x66 = (M049 >> M128)) /* External reference */ & 0x05)
                                    One
                                    M433
                                    If ((M432 == One))
                                    {
                                        M437 = One
                                    }

                                    If ((M433 == One))
                                    {
                                        M438 = One
                                    }
                                }
                                Else
                                {
                                    M436 = One
                                    M445 = One
                                }

                                Return (M435) /* \_SB_.PCI0.GPP8.SWUS.SWDS._DSM.M435 */
                            }
                            Case (0x05)
                            {
                                Return (Zero)
                            }
                            Case (0x0A)
                            {
                                Return (One)
                            }
                            Case (0x0B)
                            {
                                Local0 = ToInteger (Arg3)
                                If ((Local0 <= 0x2710))
                                {
                                    \_SB.PCI0.GPP8.M434 = 0x2710
                                }
                                Else
                                {
                                    Local0 = 0x2710
                                }

                                Return (Local0)
                            }
                            Default
                            {
                                Return (Zero)
                            }

                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }
            }
        }

        Method (_DSD, 0, Serialized)  // _DSD: Device-Specific Data
        {
            Return (Package (0x04)
            {
                ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                Package (0x01)
                {
                    Package (0x02)
                    {
                        "HotPlugSupportInD3", 
                        One
                    }
                }, 

                ToUUID ("fdf06fad-f744-4451-bb64-ecd792215b10") /* Unknown UUID */, 
                Package (0x01)
                {
                    Package (0x02)
                    {
                        "FundamentalDeviceResetTriggeredOnD3ToD0", 
                        One
                    }
                }
            })
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "AMD", "AmdTable", 0x00001000)
{
    Name (PTOS, Zero)
    If (CondRefOf (\_OSI))
    {
        If (\_OSI ("Windows 2015"))
        {
            PTOS = 0x70
        }
    }

    Scope (\_SB)
    {
        Device (PTIO)
        {
            Name (_HID, "AMDIF030")  // _HID: Hardware ID
            Name (_CID, "AMDIF030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFEC30000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.PTIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PTOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 2, "ALASKA", "CPUSSDT", 0x01072009)
{
    Scope (\_SB)
    {
        Device (PLTF)
        {
            Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A05") /* Generic Container Device */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Device (C000)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, Zero)  // _UID: Unique ID
            }

            Device (C001)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, One)  // _UID: Unique ID
            }

            Device (C002)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x02)  // _UID: Unique ID
            }

            Device (C003)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x03)  // _UID: Unique ID
            }

            Device (C004)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x04)  // _UID: Unique ID
            }

            Device (C005)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x05)  // _UID: Unique ID
            }

            Device (C006)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x06)  // _UID: Unique ID
            }

            Device (C007)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x07)  // _UID: Unique ID
            }
        }
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "AmdTable", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF0000000)
        Name (ADBG, Buffer (0x0100) {})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        OperationRegion (A035, SystemMemory, AGRB, 0x1000)
        Field (A035, ByteAcc, NoLock, Preserve)
        {
            Offset (0xB8), 
            A036,   32
        }

        BankField (A035, A036, 0x03B10530, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A024,   32
        }

        BankField (A035, A036, 0x03B1057C, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A017,   32
        }

        BankField (A035, A036, 0x03B109C4, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A018,   32
        }

        BankField (A035, A036, 0x03B109C8, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A019,   32
        }

        BankField (A035, A036, 0x03B109CC, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A020,   32
        }

        BankField (A035, A036, 0x03B109D0, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A021,   32
        }

        BankField (A035, A036, 0x03B109D4, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A022,   32
        }

        BankField (A035, A036, 0x03B109D8, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A023,   32
        }

        Method (A010, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A011)
            CreateDWordField (Arg1, 0x04, A012)
            CreateDWordField (Arg1, 0x08, A013)
            CreateDWordField (Arg1, 0x0C, A014)
            CreateDWordField (Arg1, 0x10, A015)
            CreateDWordField (Arg1, 0x14, A016)
            A017 = 0x00
            While ((A017 != 0x00)) {}
            A018 = A011 /* \_SB_.A010.A011 */
            A019 = A012 /* \_SB_.A010.A012 */
            A020 = A013 /* \_SB_.A010.A013 */
            A021 = A014 /* \_SB_.A010.A014 */
            A022 = A015 /* \_SB_.A010.A015 */
            A023 = A016 /* \_SB_.A010.A016 */
            A024 = Arg0
            While ((A017 == 0x00)) {}
        }

        Method (A025, 5, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Local7 = Buffer (0x18) {}
                CreateDWordField (Local7, 0x00, A026)
                CreateDWordField (Local7, 0x04, A027)
                CreateDWordField (Local7, 0x08, A028)
                CreateDWordField (Local7, 0x0C, A029)
                CreateDWordField (Local7, 0x10, A030)
                CreateDWordField (Local7, 0x14, A031)
                A026 = Arg0
                A027 = Arg1
                A028 = Arg2
                A029 = Arg3
                A010 (0x0F, Local7)
            }
        }

        Method (A032, 1, NotSerialized)
        {
            If ((Arg0 == 0x00)) {}
            Else
            {
            }

            Return (Local0)
        }

        Method (A033, 1, NotSerialized)
        {
            If ((Arg0 == 0x00)) {}
        }

        Method (A009, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A034)
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A026)
            CreateDWordField (Local7, 0x04, A027)
            CreateDWordField (Local7, 0x08, A028)
            CreateDWordField (Local7, 0x0C, A029)
            CreateDWordField (Local7, 0x10, A030)
            CreateDWordField (Local7, 0x14, A031)
            Local0 = 0x02
            While ((Local0 < A034))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A026 = 0x00
                A027 = 0x00
                A028 = 0x00
                A029 = 0x00
                A030 = 0x00
                A031 = 0x00
                If ((Local1 == 0x04))
                {
                    A026 = Local2
                    A010 (0x3C, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A026 = Local2
                    A010 (0x3A, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A026 = Local2
                    A010 (0x3B, Local7)
                }

                If ((Local1 == 0x10))
                {
                    A026 = Local2
                    A010 (0x3D, Local7)
                }

                If ((Local1 == 0x11))
                {
                    A026 = Local2
                    A010 (0x2F, Local7)
                }
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
        }

        Method (AWAK, 1, NotSerialized)
        {
        }

        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A003)
                CreateWordField (Arg1, 0x02, A004)
                CreateDWordField (Arg1, 0x04, A005)
                Local0 = Buffer (0x0100) {}
                CreateWordField (Local0, 0x00, A006)
                A006 = A003 /* \_SB_.ALIB.A003 */
                CreateWordField (Local0, 0x02, A007)
                A007 = A004 /* \_SB_.ALIB.A004 */
                CreateDWordField (Local0, 0x04, A008)
                A008 = A005 /* \_SB_.ALIB.A005 */
                A008 &= ~0x0F
                Local1 = 0x01
                A008 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x0C))
            {
                A009 (Arg1)
            }

            Local0 = Buffer (0x0100)
                {
                     0x03, 0x00, 0x00                                 // ...
                }
            Return (Local0)
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 2, "AMD", "ArticN", 0x00000001)
{
    /*
     * iASL Warning: There were 24 external control methods found during
     * disassembly, but only 0 were resolved (24 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_GPE.SP00, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP01, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP02, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP03, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP04, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP05, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP06, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP07, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.IPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.IWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M263, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M264, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M284, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SBRG.SIO1.ACTR, UnknownObj)
    External (_SB_.PCI0.SBRG.SIO1.ENFG, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SBRG.SIO1.EXFG, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.SBRG.SIO1.OPT0, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.OPT1, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.OPT4, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.OPT5, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.RGE0, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.RGE1, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.RGE4, IntObj)
    External (_SB_.PCI0.SBRG.SIO1.RGE5, IntObj)
    External (_SB_.PCXX.GPXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.GPXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)
    External (NFPC, MethodObj)    // Warning: Unknown method, guessing 0 arguments

    OperationRegion (CPNV, SystemMemory, 0xCAEF5018, 0x000100D8)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   32, 
        M327,   16, 
        M328,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32, 
        M290,   32, 
        M331,   32, 
        M414,   16, 
        M444,   72
    }

    Method (M000, 1, Serialized)
    {
        Name (M285, Buffer (0x04)
        {
             0x01, 0x03, 0x80, 0x00                           // ....
        })
        CreateByteField (M285, Zero, M286)
        CreateByteField (M285, One, M287)
        CreateWordField (M285, 0x02, M288)
        Name (M450, Buffer (0x05)
        {
             0x00, 0x96, 0x05, 0x00, 0x00                     // .....
        })
        CreateDWordField (M450, Zero, M452)
        CreateByteField (M450, 0x04, M451)
        Local0 = (Arg0 + 0xB0000000)
        If (Zero)
        {
            Local1 = ToInteger (M288)
            If ((ToInteger (M287) == 0x03))
            {
                OperationRegion (VARM, SystemIO, Local1, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                VARR = Local0
            }
            ElseIf ((ToInteger (M287) == 0x02))
            {
                OperationRegion (VARN, SystemIO, Local1, 0x02)
                Field (VARN, WordAcc, NoLock, Preserve)
                {
                    VARS,   16
                }

                VARS = (Local0 & 0xFFFF)
            }
            ElseIf ((ToInteger (M287) == One))
            {
                OperationRegion (VARO, SystemIO, Local1, One)
                Field (VARO, ByteAcc, NoLock, Preserve)
                {
                    VART,   8
                }

                VART = (Local0 & 0xFF)
            }
        }

        If ((ToInteger (M451) == One))
        {
            Local2 = ToInteger (M452)
            M250 (Zero, Zero, Zero, Local2, Local0)
        }
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Mutex (M421, 0x00)
    Method (M422, 4, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 == Zero))
        {
            Return (0xFFFFFFFF)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xE0
        Acquire (M421, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M422.VAR1 */
        Local2 = VAR2 /* \M422.VAR2 */
        VAR1 = Local1
        Release (M421)
        Return (Local2)
    }

    Method (M423, 5, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 != Zero))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xE0
            Acquire (M421, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M423.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M421)
        }
    }

    Mutex (M253, 0x00)
    Method (M249, 4, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 == 0xFFFFFFFF))
        {
            Return (0xFFFFFFFF)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 5, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 != 0xFFFFFFFF))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFFFFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 4, Serialized)
    {
        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (Arg3)
        {
            M429 (Arg0, Arg1, Arg2, 0x88, Zero, 0x04, Arg3)
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, One)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M430 (Arg0, Arg1, Arg2)
            If ((Local3 & 0x0800))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M430, 3, Serialized)
    {
        Local0 = M017 (Arg0, Arg1, Arg2, 0x68, 0x10, 0x10)
        Return (Local0)
    }

    Method (M412, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, Zero)
        Local3 >>= Local2
        Local3 &= One
        Return (Local3)
    }

    Method (M413, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, One)
        Local3 &= (0xFFFFFFFF ^ (One << Local2))
        Local3 |= (Arg1 << Local2)
        M410 (Local0, Local1, One, Local3)
    }

    Method (M440, 1, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, Zero)
        Local0 = M011 (0xFEC30000, 0x04, Arg0, One)
        Return (Local0)
    }

    Method (M441, 2, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, One)
        M012 (0xFEC30000, 0x08, Arg0, One, Arg1)
    }

    Method (GDRG, 1, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE0 /* External reference */
            }
            Case (One)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT0 /* External reference */
            }
            Case (0x02)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE0 /* External reference */
            }
            Case (0x03)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE4 /* External reference */
            }
            Case (0x04)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT0 /* External reference */
            }
            Case (0x05)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT4 /* External reference */
            }
            Case (0x06)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT4 /* External reference */
            }
            Case (0x07)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE0 /* External reference */
            }
            Case (0x08)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE4 /* External reference */
            }
            Default
            {
                Local0 = Ones
            }

        }

        Return (Local0)
    }

    Method (SDRG, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                \_SB.PCI0.SBRG.SIO1.RGE0 = Arg1
            }
            Case (One)
            {
                \_SB.PCI0.SBRG.SIO1.OPT0 = Arg1
            }
            Case (0x02)
            {
                \_SB.PCI0.SBRG.SIO1.RGE0 = Arg1
            }
            Case (0x03)
            {
                \_SB.PCI0.SBRG.SIO1.RGE4 = Arg1
            }
            Case (0x04)
            {
                \_SB.PCI0.SBRG.SIO1.OPT0 = Arg1
            }
            Case (0x05)
            {
                \_SB.PCI0.SBRG.SIO1.OPT4 = Arg1
            }
            Case (0x06)
            {
                \_SB.PCI0.SBRG.SIO1.OPT4 = Arg1
            }
            Case (0x07)
            {
                \_SB.PCI0.SBRG.SIO1.RGE0 = Arg1
            }
            Case (0x08)
            {
                \_SB.PCI0.SBRG.SIO1.RGE4 = Arg1
            }

        }
    }

    Method (GLRG, 1, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE1 /* External reference */
            }
            Case (One)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT1 /* External reference */
            }
            Case (0x02)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE1 /* External reference */
            }
            Case (0x03)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE5 /* External reference */
            }
            Case (0x04)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT1 /* External reference */
            }
            Case (0x05)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT5 /* External reference */
            }
            Case (0x06)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.OPT5 /* External reference */
            }
            Case (0x07)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE1 /* External reference */
            }
            Case (0x08)
            {
                Local0 = \_SB.PCI0.SBRG.SIO1.RGE5 /* External reference */
            }
            Default
            {
                Local0 = Ones
            }

        }

        Return (Local0)
    }

    Method (SLRG, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                \_SB.PCI0.SBRG.SIO1.RGE1 = Arg1
            }
            Case (One)
            {
                \_SB.PCI0.SBRG.SIO1.OPT1 = Arg1
            }
            Case (0x02)
            {
                \_SB.PCI0.SBRG.SIO1.RGE1 = Arg1
            }
            Case (0x03)
            {
                \_SB.PCI0.SBRG.SIO1.RGE5 = Arg1
            }
            Case (0x04)
            {
                \_SB.PCI0.SBRG.SIO1.OPT1 = Arg1
            }
            Case (0x05)
            {
                \_SB.PCI0.SBRG.SIO1.OPT5 = Arg1
            }
            Case (0x06)
            {
                \_SB.PCI0.SBRG.SIO1.OPT5 = Arg1
            }
            Case (0x07)
            {
                \_SB.PCI0.SBRG.SIO1.RGE1 = Arg1
            }
            Case (0x08)
            {
                \_SB.PCI0.SBRG.SIO1.RGE5 = Arg1
            }

        }
    }

    Method (M460, 2, Serialized)
    {
        Name (SGBF, Buffer (0x24)
        {
            /* 0000 */  0x08, 0x02, 0xE0, 0xE1, 0x08, 0x80, 0xF0, 0xF1,  // ........
            /* 0008 */  0x09, 0x01, 0xE0, 0xE1, 0x09, 0x02, 0xE4, 0xE5,  // ........
            /* 0010 */  0x09, 0x04, 0xF0, 0xF1, 0x09, 0x08, 0xF4, 0xF5,  // ........
            /* 0018 */  0x07, 0x01, 0xF4, 0xF5, 0x07, 0x02, 0xE0, 0xE1,  // ........
            /* 0020 */  0x07, 0x04, 0xE4, 0xE5                           // ....
        })
        Divide (Arg0, 0x0A, Local1, Local0)
        Local2 = DerefOf (SGBF [((Local0 * 0x04) + Zero)]
            )
        \_SB.PCI0.SBRG.SIO1.ENFG (Local2)
        Local3 = DerefOf (SGBF [((Local0 * 0x04) + One)]
            )
        \_SB.PCI0.SBRG.SIO1.ACTR |= Local3
        Local4 = GDRG (Local0)
        Local5 = (One << Local1)
        Local7 = (0xFF - Local5)
        Local4 &= Local7
        SDRG (Local0, Local4)
        Local6 = GLRG (Local0)
        If (Arg1)
        {
            Local6 |= Local5
        }
        Else
        {
            Local6 &= Local7
        }

        SLRG (Local0, Local6)
        \_SB.PCI0.SBRG.SIO1.EXFG ()
        Return (Local0)
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                            One)
                    }
                    Else
                    {
                        Local2 = M011 ((M084 + 0x1202), (Local1 * 0x04), Zero, 
                            One)
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 >>= 0x10
                    Local2 &= One
                }
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 >>= 0x10
            Local2 &= One
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                (Local1 + 0x08) = M038 /* External reference */
                Local2
            }
            Else
            {
                Local2 = 0xFF
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            Local2 = M440 (Local1)
        }
        ElseIf ((Local0 == 0x06))
        {
            Local2 = M412 (Local1)
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                    Else
                    {
                        M012 ((M084 + 0x1202), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 &= 0xCF3FFFFF
                    Local2 |= 0x00800000
                    Local2 |= (Arg1 << 0x16)
                    M250 (Local3, Local4, Local5, Local6, Local2)
                }
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, One, Zero)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 &= 0xCF3FFFFF
            Local2 |= 0x00800000
            Local2 |= (Arg1 << 0x16)
            M423 (Local3, Local4, Local5, Local6, Local2)
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                M039 ((Local1 + 0x08), Arg1)
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            M441 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x06))
        {
            M413 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x07))
        {
            M460 (Local1, Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32A, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x1D, 0x1E,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M330, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32B, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x0B, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x1D, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // ........
        /* 0010 */  0x17, 0x20, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // . T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 < 0x02))
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
        ElseIf (((M085 > 0x02) && (M085 < 0x08)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x09) || (M085 == 0x0A)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0B) || (M085 == 0x0C)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32A [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0D) || (M085 == 0x0E)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x0F))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32B [Arg0]) * 
                0x04), Zero, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M428, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0xFF
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x08 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M011 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M429, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M012 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, One)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, One)
                If (((Local3 == One) && (Local4 == One)))
                {
                    Local0 = One
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local3 != Zero))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)) {}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)) {}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = Zero
                    Local2 = One
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        Local7 = M013 ((Local0 + Local1), 0x08, Zero, 0x20)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == Zero))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        If (((Local7 >> 0x10) > Zero))
                                        {
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                            }
                                            Else
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                            }

                                            Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << One)))
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                            }
                                            Else
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                            }
                                        }
                                        ElseIf ((Local2 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                ), 0x02, Zero)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Zero)
                                        }
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            One) * 0x04), 0x04, Zero)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == One))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            If (((Local7 >> 0x10) > Zero))
                                            {
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                }
                                                Else
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                }

                                                Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << One)))
                                                Local6 |= (0x03 << (Local2 << One))
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                }
                                                Else
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                }
                                            }
                                            ElseIf ((Local2 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                    ), 0x02, 0x03)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                            }
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                One) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (Zero, M013 ((Local0 + Local1), 0x05, Zero, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, Zero, 0x08), 0x19, Zero, 0x08)
                                        If ((M265 (Local6, Zero, Zero) == One))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                If (((Local7 >> 0x10) > Zero))
                                                {
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                    }
                                                    Else
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                    }

                                                    Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << One)))
                                                    Local6 |= (Local3 << (Local2 << One))
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                    }
                                                    Else
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                    }
                                                }
                                                ElseIf ((Local2 >= 0x04))
                                                {
                                                    M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                        ), 0x02, Local3)
                                                }
                                                Else
                                                {
                                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Local3)
                                                }
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    One) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        One) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                                Local7 = M009 (Local5)
                                Local4 = 0x03F2
                                While (((Local4 > Zero) && (Local7 != Local6)))
                                {
                                    Local4 = (Local4 - One)
                                    Stall (0x63)
                                    Local7 = M009 (Local5)
                                }
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            If ((M009 (Local5) == Local6))
                            {
                                Local7 = One
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05) {})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                If ((Arg3 != One))
                {
                    M120 = Zero
                    \_SB.ALIB (0x06)
                    M115
                }
            }
            Else
            {
                If ((Arg3 != One))
                {
                    M120 = One
                    \_SB.ALIB (0x06)
                    M115
                }

                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 3, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = Zero
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M011 ((Local0 + Local1), One, Zero, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, Zero, 0x08)
                    Local5 = M011 ((Local0 + Local1), 0x03, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local4 == Arg2))
                        {
                            Return (Local5)
                        }
                    }

                    Local1 += 0x04
                }
            }
        }

        Return (0xFFFFFFFF)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = One
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M04A, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
        }

        Return (Local0)
    }

    Method (M04B, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local2 = M011 (Arg0, (Arg1 + 0x02), Zero, 0x08)
            Local3 = M011 (Arg0, (Arg1 + 0x03), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
            Local0 |= (Local2 << 0x10)
            Local0 |= (Local3 << 0x18)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        If ((Local2 > Zero))
        {
            Sleep (Local2)
        }

        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (ToInteger (Local0))
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x05)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x0B))
        {
            If ((M085 >= 0x0D))
            {
                Return (M017 (Zero, 0x08, (Arg0 + One), 0x19, Zero, 0x08))
            }
            ElseIf ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, Arg0, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, 0x02, 0x19, Zero, 0x08))
            }
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M401, 2, NotSerialized)
    {
        Local0 = (Arg0 & 0x1F)
        Local0 = ((Local0 << 0x03) | (Arg1 & 0x07))
        Local1 = Zero
        If (((M085 >= 0x09) && (M085 <= 0x0A)))
        {
            Local2 = 0x07
            Local3 = 0x14301000
        }
        ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
        {
            Local2 = 0x10
            Local3 = 0x14601000
        }
        ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
        {
            Local2 = 0x0A
            Local3 = 0x14301000
        }
        ElseIf ((M085 == 0x0F))
        {
            Local2 = 0x0B
            Local3 = 0x14301000
        }
        Else
        {
            Local2 = 0x10
            Local3 = 0x14301000
        }

        Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
            ))
        While (((Local1 < Local2) && (Local4 != Local0)))
        {
            Local1++
            Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
                ))
        }

        If ((Local1 <= Local2))
        {
            Return (Local1)
        }
        Else
        {
            Return (0xFF)
        }
    }

    Method (M402, 2, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x09) && (M085 <= 0x0A)))
            {
                Local6 = (0x11140294 + (Local4 << 0x0C))
                Local7 = 0x11180188
            }
            ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
            {
                If ((Local4 >= 0x08))
                {
                    Local6 = (0x11840294 + ((Local4 - 0x08) << 0x0C))
                    Local7 = 0x11880188
                }
                Else
                {
                    Local6 = (0x11440294 + (Local4 << 0x0C))
                    Local7 = 0x11480188
                }
            }
            ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
            {
                If ((Local4 >= 0x03))
                {
                    Local6 = (0x11240294 + ((Local4 - 0x03) << 0x0C))
                    Local7 = 0x11280188
                }
                Else
                {
                    Local6 = (0x11140294 + (Local4 << 0x0C))
                    Local7 = 0x11180188
                }
            }
            ElseIf ((M085 == 0x0F))
            {
                If ((Local4 >= 0x05))
                {
                    Local6 = (0x11240294 + ((Local4 - 0x05) << 0x0C))
                    Local7 = 0x11280188
                }
                Else
                {
                    Local6 = (0x11140294 + (Local4 << 0x0C))
                    Local7 = 0x11180188
                }
            }
            ElseIf ((Local4 >= 0x08))
            {
                Local6 = (0x11240294 + ((Local4 - 0x08) << 0x0C))
                Local7 = 0x11280188
            }
            Else
            {
                Local6 = (0x11140294 + (Local4 << 0x0C))
                Local7 = 0x11180188
            }

            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                Local0 = M249 (Zero, Zero, Zero, Local7)
                Local0 &= 0xFFFFDFFF
                M250 (Zero, Zero, Zero, Local7, (Local0 | 0x2000))
            }

            Local1 = (M019 (Zero, Zero, Zero, 0x84) & 0xFF00FCFF)
            Local2 = ((Arg0 << 0x13) | (Arg1 << 0x10))
            Local1 |= Local2
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0300))
            If ((M085 >= 0x0C))
            {
                Local3 = M019 (Zero, Zero, Zero, 0x84)
                Local5 = 0x4EEA
                While (((Local5 > Zero) && ((Local3 & 0x0400) != 0x0400)))
                {
                    Local5 = (Local5 - One)
                    Stall (0x63)
                    Local3 = M019 (Zero, Zero, Zero, 0x84)
                }
            }

            Local3 = M249 (Zero, Zero, Zero, Local6)
            Local5 = 0x4EEA
            While (((Local5 > Zero) && ((Local3 & 0x3F) != 0x1F)))
            {
                Local5 = (Local5 - One)
                Stall (0x63)
                Local3 = M249 (Zero, Zero, Zero, Local6)
            }

            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                M250 (Zero, Zero, Zero, Local7, Local0)
            }
        }
    }

    Method (M403, 3, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x09) && (M085 <= 0x0A)))
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }
            ElseIf (((M085 >= 0x0B) && (M085 <= 0x0C)))
            {
                If ((Local4 >= 0x08))
                {
                    Local2 = (0x11840280 + ((Local4 - 0x08) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11440280 + (Local4 << 0x0C))
                }
            }
            ElseIf (((M085 >= 0x0D) && (M085 <= 0x0E)))
            {
                If ((Local4 >= 0x03))
                {
                    Local2 = (0x11240280 + ((Local4 - 0x03) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11140280 + (Local4 << 0x0C))
                }
            }
            ElseIf ((M085 == 0x0F))
            {
                If ((Local4 >= 0x05))
                {
                    Local2 = (0x11240280 + ((Local4 - 0x05) << 0x0C))
                }
                Else
                {
                    Local2 = (0x11140280 + (Local4 << 0x0C))
                }
            }
            ElseIf ((Local4 >= 0x08))
            {
                Local2 = (0x11240280 + ((Local4 - 0x08) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }

            Local0 = M249 (Zero, Zero, Zero, Local2)
            Local0 &= 0xFFBFFFFF
            Local1 = Arg2
            Local0 |= (Local1 << 0x16)
            M250 (Zero, Zero, Zero, Local2, Local0)
        }
    }

    Name (M404, Buffer (0x07)
    {
         0x00, 0x02, 0x06, 0x08, 0x04, 0x0A, 0x0C         // .......
    })
    Method (M405, 5, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 <<= (Local1 * 0x02)
                Local0 &= 0x03
            }
            ElseIf ((Local1 >= 0x04))
            {
                Local0 = M011 ((M084 + 0x0E00), One, ((Local1 - 0x04
                    ) * 0x02), 0x02)
            }
            Else
            {
                Local0 = M011 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 
                    0x02)
            }
        }
        Else
        {
            Local0 = M011 ((M084 + 0x0E00), (Arg4 / 0x02), (
                (Arg4 & One) * 0x04), 0x04)
        }

        Return (Local0)
    }

    Method (M406, 6, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 &= (0xFFFFFFFF ^ (0x03 << (Local1 << One)))
                Local0 |= (Arg5 << (Local1 << One))
                If ((Arg3 == 0x02))
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D02300, Local0)
                }
                Else
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D01E00, Local0)
                }
            }
            ElseIf ((Local1 >= 0x04))
            {
                M012 ((M084 + 0x0E00), One, ((Local1 - 0x04) * 0x02
                    ), 0x02, Arg5)
            }
            Else
            {
                M012 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 0x02, Arg5)
            }
        }
        Else
        {
            M012 ((M084 + 0x0E00), (Arg4 / 0x02), ((Arg4 & 
                One) * 0x04), 0x04, Arg5)
        }
    }

    Mutex (M408, 0x00)
    Method (M409, 3, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M409.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M409.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M409.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = ((Arg1 << One) | One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M409.SMB2 */
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M409.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = SMB5 /* \M409.SMB5 */
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (M410, 4, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M410.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M410.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M410.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = (Arg1 << One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M410.SMB2 */
            SMB5 = Arg3
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M410.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = Zero
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TPTS))
                {
                    \_SB.PCXX.GPXX.SAXX.TPTS (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TPTS))
                {
                    \_SB.PCI0.PTBR.PTST.TPTS (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TPTS))
            {
                \_SB.PCXX.SAXX.TPTS (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M263))
            {
                \_SB.M263 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IPTS))
                {
                    \_SB.IPTS (Arg0)
                }
            }
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TWAK))
                {
                    \_SB.PCXX.GPXX.SAXX.TWAK (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TWAK))
                {
                    \_SB.PCI0.PTBR.PTST.TWAK (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TWAK))
            {
                \_SB.PCXX.SAXX.TWAK (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M264))
            {
                \_SB.M264 (Arg0)
            }
        }

        If ((M280 != Zero))
        {
            If (CondRefOf (\_SB.M284))
            {
                \_SB.M284 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IWAK))
                {
                    \_SB.IWAK (Arg0)
                }
            }
        }
    }

    Scope (\_SB.GPIO)
    {
        Method (XINI, 0, NotSerialized)
        {
            If ((\_GPE.M420 != 0xFF))
            {
                Local0 = (\_GPE.M415 & One)
                Local1 = (\_GPE.M416 & 0x07)
                Local1 += \_GPE.M411
                \_GPE.M419 = M409 (Local0, Local1, Zero)
            }
        }
    }

    Scope (\_GPE)
    {
        Name (M411, 0x20)
        Name (M415, One)
        Name (M416, 0x04)
        Name (M417, 0x40)
        Name (M418, 0x40)
        Name (M419, 0xFF)
        Name (M420, 0xFF)
        Name (M4D2, Buffer (0x08) {})
        Method (XL0A, 0, NotSerialized)
        {
            Local0 = (\_GPE.M415 & One)
            Local1 = (\_GPE.M416 & 0x07)
            Local1 += \_GPE.M411
            Local2 = \_GPE.M419
            Local3 = M409 (Local0, Local1, Zero)
            \_GPE.M419 = Local3
            Local3 ^= Local2
            Local3 |= \_GPE.M418
            Local3 &= \_GPE.M417
            If (((Local3 & One) == One))
            {
                If (CondRefOf (\_GPE.SP00))
                {
                    \_GPE.SP00 ()
                }
            }

            If (((Local3 & 0x02) == 0x02))
            {
                If (CondRefOf (\_GPE.SP01))
                {
                    \_GPE.SP01 ()
                }
            }

            If (((Local3 & 0x04) == 0x04))
            {
                If (CondRefOf (\_GPE.SP02))
                {
                    \_GPE.SP02 ()
                }
            }

            If (((Local3 & 0x08) == 0x08))
            {
                If (CondRefOf (\_GPE.SP03))
                {
                    \_GPE.SP03 ()
                }
            }

            If (((Local3 & 0x10) == 0x10))
            {
                If (CondRefOf (\_GPE.SP04))
                {
                    \_GPE.SP04 ()
                }
            }

            If (((Local3 & 0x20) == 0x20))
            {
                If (CondRefOf (\_GPE.SP05))
                {
                    \_GPE.SP05 ()
                }
            }

            If (((Local3 & 0x40) == 0x40))
            {
                If (CondRefOf (\_GPE.SP06))
                {
                    \_GPE.SP06 ()
                }
            }

            If (((Local3 & 0x80) == 0x80))
            {
                If (CondRefOf (\_GPE.SP07))
                {
                    \_GPE.SP07 ()
                }
            }
        }

        Method (XL0B, 0, NotSerialized)
        {
            Local3 = Buffer (0x08) {}
            CreateWordField (Local3, Zero, M254)
            CreateByteField (Local3, 0x02, M255)
            CreateDWordField (Local3, 0x03, M256)
            M256 = Zero
            M254 = 0x07
            M255 = 0x30
            If (CondRefOf (\_SB.ALIB))
            {
                Local3 = \_SB.ALIB (0x0C)
                Local4
                M4D2 = Local4
                CreateDWordField (M4D2, Zero, M4D0)
                CreateDWordField (M4D2, 0x04, M4D1)
                ToInteger (M4D0, Local0)
                ToInteger (M4D1, Local1)
                If ((Local0 == Zero))
                {
                    If (CondRefOf (\_SB.APAD))
                    {
                        \_SB.APAD.M446 [One] = Local1
                        Notify (\_SB.APAD, 0x80) // Status Change
                    }
                }
                ElseIf ((Local0 == One)) {}
                ElseIf ((Local0 == 0x02))
                {
                    If (CondRefOf (NFPC))
                    {
                        NFPC ()
                    }
                }
            }
        }
    }

    Scope (\_SB)
    {
        Device (APAD)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Name (M446, Package (0x02)
            {
                One, 
                Zero
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (\_OSI ("Processor Aggregator Device"))
                {
                    Local0 = M04A (M128, 0x91)
                    If (((Local0 & 0x80) == 0x80))
                    {
                        Return (0x0F)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Local0 = M04A (M128, 0x91)
                If (((Local0 & 0xC0) == 0xC0))
                {
                    Local3 = Buffer (0x08) {}
                    CreateWordField (Local3, Zero, M254)
                    CreateByteField (Local3, 0x02, M255)
                    CreateDWordField (Local3, 0x03, M256)
                    M256 = (Local0 >> 0x08)
                    M254 = 0x07
                    M255 = 0x31
                    If (CondRefOf (\_SB.ALIB))
                    {
                        \_SB.ALIB (0x0C)
                        Local3
                    }
                }
            }

            Method (_PUR, 0, NotSerialized)  // _PUR: Processor Utilization Request
            {
                Return (M446) /* \_SB_.APAD.M446 */
            }
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004   4]                 Table Length : 0000004C
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : C3
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   2]               Platform Class : 0000
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]              Control Address : 00000000FD210510
[030h 0048   4]                 Start Method : 02 [ACPI Start Method]

[034h 0052  12]            Method Parameters : 00 00 00 00 00 00 00 00 00 00 00 00
[040h 0064   4]           Minimum Log Length : 00010000
[044h 0068   8]                  Log Address : 00000000CAEE0000

Raw Table Data: Length 76 (0x4C)

    0000: 54 50 4D 32 4C 00 00 00 04 C3 41 4C 41 53 4B 41  // TPM2L.....ALASKA
    0010: 41 20 4D 20 49 20 00 00 01 00 00 00 41 4D 49 20  // A M I ......AMI 
    0020: 00 00 00 00 00 00 00 00 10 05 21 FD 00 00 00 00  // ..........!.....
    0030: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 00 00 01 00 00 00 EE CA 00 00 00 00              // ............


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000E084
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 15
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD"
[020h 0032   4]        Asl Compiler Revision : 31504F47


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 57476 (0xE084)

    0000: 56 46 43 54 84 E0 00 00 01 15 41 4C 41 53 4B 41  // VFCT......ALASKA
    0010: 41 20 4D 20 49 20 00 00 01 00 00 00 41 4D 44 00  // A M I ......AMD.
    0020: 47 4F 50 31 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // GOP12..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 09 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 40 73 00 00 00 00  // ..........@s....
    0060: 01 00 00 00 00 E0 00 00 55 AA 70 E9 3F 03 00 00  // ........U.p.?...
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: F0 02 00 00 00 00 49 42 4D 93 D8 8E 00 00 00 00  // ......IBM.......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: C6 02 00 00 00 00 00 00 31 32 2F 31 31 2F 31 39  // ........12/11/19
    00C0: 20 32 32 3A 35 39 00 00 37 00 00 00 E9 2D 04 00  //  22:59..7....-..
    00D0: E9 37 04 00 00 00 84 01 0A 00 00 00 00 00 00 00  // .7..............
    00E0: 0B 00 0E 81 87 1F 50 00 00 00 00 00 01 00 01 00  // ......P.........
    00F0: 01 30 88 79 1E 45 A8 79 14 02 10 BD C1 6F 1C CF  // .0.y.E.y.....o..
    0100: F9 FF 1F 00 00 00 00 00 00 C4 AF F8 3F 00 00 00  // ............?...
    0110: 00 00 00 00 00 00 40 73 38 AB 46 73 44 73 0C 00  // ......@s8.FsDs..
    0120: 05 00 31 03 D0 31 37 55 00 F8 80 10 42 F0 DF 03  // ..1..17U....B...
    0130: 00 2C 23 20 20 42 C8 43 C8 8D E6 00 00 1E A8 00  // .,#  B.C........
    0140: 0F 80 08 F0 3E A7 68 24 DA 21 DA 21 00 21 00 01  // ....>.h$.!.!.!..
    0150: 00 2C C0 4C 60 19 20 00 30 00 03 80 0C 0C 00 00  // .,.L`. .0.......
    0160: 36 10 07 52 80 18 0C 0E 0A 00 00 00 04 F0 02 00  // 6..R............
    0170: 00 00 08 00 00 00 00 00 08 40 18 10 70 01 00 00  // .........@..p...
    0180: 20 00 00 00 04 00 00 00 1C 04 00 00 C8 00 00 00  //  ...............
    0190: 30 00 00 00 00 00 00 08 40 00 00 00 00 00 00 00  // 0.......@.......
    01A0: 00 00 00 00 1C 32 00 88 76 84 90 03 00 00 00 00  // .....2..v.......
    01B0: 00 00 00 00 00 00 00 00 00 00 00 E4 27 09 40 10  // ............'.@.
    01C0: 18 00 64 00 00 00 00 C0 98 07 00 00 40 7A 01 A0  // ..d.........@z..
    01D0: 00 28 00 00 00 80 10 90 01 18 00 00 08 00 80 81  // .(..............
    01E0: 47 01 00 F0 A1 1F 11 30 00 00 00 00 31 31 33 2D  // G......0....113-
    01F0: 45 34 32 31 30 4D 42 2D 55 30 44 00 4E 41 56 49  // E4210MB-U0D.NAVI
    0200: 31 34 00 50 43 49 5F 45 58 50 52 45 53 53 00 47  // 14.PCI_EXPRESS.G
    0210: 44 44 52 36 00 0D 0A 31 34 32 31 20 4E 41 56 49  // DDR6...1421 NAVI
    0220: 31 34 20 58 54 58 20 4D 31 34 42 20 38 47 42 20  // 14 XTX M14B 8GB 
    0230: 33 30 30 65 2F 31 30 30 6D 20 30 2E 39 56 20 31  // 300e/100m 0.9V 1
    0240: 33 35 20 20 20 20 20 20 20 20 20 20 20 20 20 20  // 35              
    0250: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0260: 20 20 20 0D 0A 00 0D 0A 20 0D 0A 00 28 43 29 20  //    ..... ...(C) 
    0270: 31 39 38 38 2D 32 30 31 38 2C 20 41 64 76 61 6E  // 1988-2018, Advan
    0280: 63 65 64 20 4D 69 63 72 6F 20 44 65 76 69 63 65  // ced Micro Device
    0290: 73 2C 20 49 6E 63 2E 00 41 54 4F 4D 42 49 4F 53  // s, Inc..ATOMBIOS
    02A0: 42 4B 2D 41 4D 44 20 56 45 52 30 31 37 2E 30 30  // BK-AMD VER017.00
    02B0: 32 2E 30 30 30 2E 30 30 30 2E 30 30 30 30 30 30  // 2.000.000.000000
    02C0: 00 34 32 31 54 31 36 4D 42 2E 55 30 44 00 32 30  // .421T16MB.U0D.20
    02D0: 34 34 34 35 31 20 00 34 39 34 34 35 34 20 20 00  // 44451 .494454  .
    02E0: 20 20 20 20 20 20 20 20 00 53 41 50 50 48 49 52  //         .SAPPHIR
    02F0: 45 5F 4E 41 56 49 31 34 5F 31 45 34 32 31 30 30  // E_NAVI14_1E42100
    0300: 5F 31 33 35 5F 41 31 5F 47 44 52 36 5F 38 47 5F  // _135_A1_GDR6_8G_
    0310: 4D 54 36 31 4B 35 31 32 4D 33 32 4B 50 41 31 34  // MT61K512M32KPA14
    0320: 42 5C 63 6F 6E 66 69 67 2E 68 00 00 00 90 28 00  // B\config.h....(.
    0330: 02 02 41 54 4F 4D 00 C0 3F 04 59 02 15 03 AD 01  // ..ATOM..?.Y.....
    0340: 72 04 00 00 00 00 A2 1D 21 E4 F0 02 24 92 CA 92  // r.......!...$...
    0350: 00 00 5C C8 00 00 00 00 50 43 49 52 02 10 40 73  // ..\.....PCIR..@s
    0360: 00 00 18 00 00 00 00 03 70 00 02 11 00 00 00 00  // ........p.......
    0370: 41 4D 44 20 41 54 4F 4D 42 49 4F 53 00 A9 FE 3B  // AMD ATOMBIOS...;
    0380: B9 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0390: 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  // ................
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 1E 06 66  // ...............f
    03B0: 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F A3  // PfQfRfSfUfVfW...
    03C0: 14 00 8C 0E 08 00 B2 20 E8 8F 2C 0B C0 75 14 A2  // ....... ..,..u..
    03D0: 02 00 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58  // ..f_f^f]f[fZfYfX
    03E0: 07 1F CB E8 A9 2D E8 7B 2B 32 D2 8D 3E C6 02 89  // .....-.{+2..>...
    03F0: 55 16 E8 3C 11 E8 FF 10 E8 56 12 E8 AD 02 E8 35  // U..<.....V.....5
    0400: 28 0B C0 74 0C E8 39 00 E8 83 53 E8 FB 10 E8 D8  // (..t..9...S.....
    0410: 53 E8 A9 00 B4 80 E8 75 2B 8A C7 66 C1 E0 10 8A  // S......u+..f....
    0420: E3 B0 20 66 A3 D8 8E E8 AC 02 E8 0E 11 E8 A2 2D  // .. f...........-
    0430: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0440: CB 2E 8B 1E 08 00 83 3E 51 04 00 75 04 89 1E 4F  // .......>Q..u...O
    0450: 04 1E 2E 8E 1E 47 04 9C FA 66 C7 06 08 01 65 F0  // .....G...f....e.
    0460: 00 F0 C7 06 40 00 72 04 89 1E 42 00 C7 06 B4 01  // ....@.r...B.....
    0470: 72 04 89 1E B6 01 C7 06 7C 00 BA 5C 89 1E 7E 00  // r.......|..\..~.
    0480: C7 06 0C 01 CD 60 89 1E 0E 01 C7 06 A8 04 EC 56  // .....`.........V
    0490: 89 1E AA 04 2E 8E 1E 4F 04 8B C3 A3 EE 56 A3 FE  // .......O.....V..
    04A0: 56 A3 10 57 9D 1F C3 50 4D 49 44 72 04 1E 47 00  // V..W...PMIDr..G.
    04B0: 00 00 A0 00 B0 00 B8 00 C0 00 00 00 00 BB 00 00  // ................
    04C0: E8 61 10 66 C1 E8 10 A3 F6 02 BB 0B 00 E8 54 10  // .a.f..........T.
    04D0: 8D 3E C6 02 66 89 45 18 C3 00 E8 D0 2C 80 FC A0  // .>..f.E.....,...
    04E0: 75 05 E8 3D 00 EB 11 80 FC 4F 75 05 E8 BD 41 EB  // u..=.....Ou...A.
    04F0: 07 E8 12 47 EB 02 B4 01 E8 D7 2C CF E8 AE 2C E8  // ...G......,...,.
    0500: 20 00 EB 02 B4 01 E8 C9 2C CB E8 A0 2C 80 FC 4F  //  .......,...,..O
    0510: 75 05 E8 97 41 EB 07 E8 EC 46 EB 02 B4 01 E8 B1  // u...A....F......
    0520: 2C CB 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // ,...fPfQfRfSfUfV
    0530: 66 57 0E 1F 3C 04 75 29 2E A1 1A 00 66 C1 E0 10  // fW..<.u)....f...
    0540: 2E A1 18 00 8D 36 AA 01 8A 3C 80 EF 30 B3 02 8B  // .....6...<..0...
    0550: EC 89 5E 0C 89 46 04 66 C1 E8 10 89 46 00 E9 28  // ..^..F.f....F..(
    0560: 01 3C 05 75 18 E8 26 2A E8 F9 29 2E A1 08 00 8B  // .<.u..&*..).....
    0570: EC 89 56 10 89 46 00 89 5E 04 E9 0C 01 3C 06 75  // ..V..F..^....<.u
    0580: 32 E8 88 0F 66 D1 E0 8B EC 89 46 14 BB 02 00 E8  // 2...f.....F.....
    0590: 92 0F 88 46 18 E8 7C 0F 66 89 46 0C BB 09 00 E8  // ...F..|.f.F.....
    05A0: 82 0F 33 C0 66 89 46 00 2E 8B 16 F6 02 89 56 10  // ..3.f.F.......V.
    05B0: E9 D6 00 3C 0B 75 24 0A DB 75 11 B9 80 00 BB 02  // ...<.u$..u......
    05C0: 00 8B EC 89 5E 0C 89 4E 14 E9 BD 00 8A C7 E8 D0  // ....^..N........
    05D0: 00 E8 34 01 0F 84 A9 00 E9 AE 00 3C 17 75 1D E8  // ..4........<.u..
    05E0: 31 12 74 06 E8 8B 0D E8 0C 17 E8 EE 09 E8 FA 0E  // 1.t.............
    05F0: 33 C9 8B C8 8B EC 89 4E 14 E9 8D 00 3C 18 75 45  // 3......N....<.uE
    0600: 0A FF 75 10 E8 B8 11 8B EC 89 46 0C E8 3B 0A 89  // ..u.......F..;..
    0610: 4E 10 EB 75 E8 FC 11 75 68 BB 00 1C E8 2C 2B 66  // N..u...uh....,+f
    0620: 0B C0 74 5D 23 C9 74 59 E8 D0 11 BE 00 1C E8 20  // ..t]#.tY....... 
    0630: 0F 74 4E BE 00 1C B0 40 E8 6F 0F E8 81 11 8B EC  // .tN....@.o......
    0640: 89 46 0C EB 44 3C 82 75 1A 80 FB 05 75 15 0A FF  // .F..D<.u....u...
    0650: 75 0A E8 C5 10 8B EC 89 46 14 EB 2D E8 92 10 74  // u.......F..-...t
    0660: 18 EB 26 3C 8E 75 12 80 FF 01 74 08 80 FF 02 75  // ..&<.u....t....u
    0670: 08 80 C1 02 E8 EB 10 EB 10 8B EC C6 46 19 02 EB  // ............F...
    0680: 0F 8B EC C6 46 19 01 EB 07 32 E4 8B EC 88 66 19  // ....F....2....f.
    0690: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    06A0: C3 51 8A C8 B8 01 00 D3 E0 59 C3 E8 4A 2B C3 0C  // .Q.......Y..J+..
    06B0: 01 C3 50 51 B0 B6 E6 43 B0 33 E6 42 B0 05 E6 42  // ..PQ...C.3.B...B
    06C0: E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8 00 E8 16 27  // .a.....a.......'
    06D0: E6 61 59 58 C3 00 1E 56 0E 1F 80 3E 02 00 80 76  // .aYX...V...>...v
    06E0: 05 C6 06 02 00 80 8A 0E 02 00 C1 E1 09 FC C6 06  // ................
    06F0: 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB F6 D4 FE C4  // !..3.2..........
    0700: 88 26 21 00 5E 1F C3 00 57 0B C0 75 0F E8 2A 0C  // .&!.^...W..u..*.
    0710: 74 25 E8 24 00 F6 C3 04 74 F3 EB 11 8B C8 E8 15  // t%.$....t.......
    0720: 25 23 C1 74 12 E8 11 00 F6 C3 04 74 0A 5F 8D 5C  // %#.t.......t._.\
    0730: 28 E8 4C 06 0B F6 C3 5F C3 50 E8 DF 0B E8 67 24  // (.L...._.P....g$
    0740: E8 75 24 0A C9 74 69 0A ED 74 10 8A CD B5 02 E8  // .u$..ti..t......
    0750: 17 26 B1 02 8D 9C 48 01 E8 94 29 E8 76 02 F6 C3  // .&....H...).v...
    0760: 04 74 08 E8 F2 0C E8 D8 22 74 45 8D 5C 28 E8 69  // .t......"tE.\(.i
    0770: 00 56 83 C6 08 E8 A4 22 5E 80 FD 02 75 11 51 E8  // .V....."^...u.Q.
    0780: 04 18 59 80 FB 00 75 4D 51 B5 08 E8 E8 05 59 8A  // ..Y...uMQ.....Y.
    0790: DD 33 C9 E8 F5 16 0A C0 75 3B E8 37 02 8A EB 8D  // .3......u;.7....
    07A0: 5C 28 80 CD 02 E8 3B 00 74 03 80 CD 04 E8 C6 05  // \(....;.t.......
    07B0: 8D 9C A6 00 E8 94 29 0A C0 74 1A 56 83 C6 08 E8  // ......)..t.V....
    07C0: 5A 22 5E 8A DD B9 80 00 E8 C0 16 E8 D8 04 74 05  // Z"^...........t.
    07D0: 33 C9 E8 A1 05 E8 FC 01 58 C3 51 B9 49 00 E8 B4  // 3.......X.Q.I...
    07E0: 25 59 C3 51 E8 1A 00 75 14 E8 B9 01 3C 01 75 0D  // %Y.Q...u....<.u.
    07F0: B9 20 00 E8 27 00 75 05 80 C9 01 EB 02 33 C9 59  // . ..'.u......3.Y
    0800: C3 53 E8 46 29 66 3D 00 FF FF FF 75 0E 83 C3 04  // .S.F)f=....u....
    0810: E8 38 29 66 3D FF FF FF 00 75 00 5B C3 50 52 32  // .8)f=....u.[.PR2
    0820: D2 E8 27 29 02 D0 02 D4 66 C1 E8 10 02 D0 02 D4  // ..')....f.......
    0830: 83 C3 04 E2 EC 0A D2 5A 58 C3 E8 DF 0A 8D 9C 4C  // .......ZX......L
    0840: 01 E8 39 01 E8 8D 01 B5 13 F6 C3 08 75 0C E8 07  // ..9.........u...
    0850: 0C 8A EA 80 FD 13 75 02 B5 03 66 50 8D 9C B8 02  // ......u...fP....
    0860: 66 33 C0 8A C5 E8 43 28 66 58 A9 C8 0E 74 55 E8  // f3....C(fX...tU.
    0870: 62 01 F6 C3 08 74 0F E8 0F 05 8D 5C 28 E8 04 01  // b....t.....\(...
    0880: 75 04 E8 72 00 C3 B5 02 E8 23 01 E8 46 01 F6 C3  // u..r.....#..F...
    0890: 04 74 21 8D 5C 28 E8 49 01 E8 94 03 74 05 B5 03  // .t!.\(.I....t...
    08A0: E8 0B 01 E8 68 04 E8 21 01 80 FD 00 75 48 B5 02  // ....h..!....uH..
    08B0: E8 0D 01 C3 8D 9C 68 01 B8 00 55 E8 51 11 B5 02  // ......h...U.Q...
    08C0: E8 FD 00 C3 A9 02 00 74 2D B5 04 E8 E0 00 E8 03  // .......t-.......
    08D0: 01 F6 C3 08 74 03 E8 B0 04 8D 9C 68 01 56 E8 3A  // ....t......h.V.:
    08E0: 26 8B F7 E8 68 04 5E E8 D7 25 E8 D3 00 8D 5C 28  // &...h.^..%....\(
    08F0: E8 F7 25 E8 18 04 C3 B5 01 E8 B2 00 B5 02 E8 BF  // ..%.............
    0900: 00 E8 D0 00 F6 C3 04 75 10 8D 9C 68 01 B8 00 55  // .......u...h...U
    0910: E8 FC 10 B5 02 E8 17 00 C3 E8 C6 00 B5 02 8D 5C  // ...............\
    0920: 28 E8 6E 00 75 02 B5 01 E8 04 00 E8 E0 03 C3 8D  // (.n.u...........
    0930: 9C B4 02 B1 02 E8 B7 27 B5 02 E8 83 00 C3 8D 9C  // .......'........
    0940: 4C 01 E8 38 00 E8 8C 00 F6 C3 04 74 23 8D 5C 28  // L..8.......t#.\(
    0950: E8 8F 00 E8 C5 25 8D 9C 68 01 06 0E 07 B9 07 00  // .....%..h.......
    0960: E8 6C 24 07 E8 63 00 E8 EE 0A 8D 5C 28 E8 B6 25  // .l$..c.....\(..%
    0970: 8D 5C 28 E8 54 25 B8 02 00 E8 BE FE C3 B9 61 00  // .\(.T%........a.
    0980: E8 12 24 C3 53 81 C3 05 01 E8 BF 27 24 06 3C 02  // ..$.S......'$.<.
    0990: 5B C3 E8 10 00 3D 01 04 75 0A 53 83 C3 18 E8 AA  // [....=..u.S.....
    09A0: 27 5B A8 01 C3 53 83 C3 12 E8 9F 27 5B C3 8D 9C  // '[...S.....'[...
    09B0: B4 02 32 C9 E8 38 27 C3 8D 9C B4 02 E8 8C 27 C3  // ..2..8'.......'.
    09C0: 8D 9C B4 02 B1 01 E8 26 27 C3 8D 9C B4 02 B1 01  // .......&'.......
    09D0: E8 34 27 C3 66 50 8D 9C 48 01 E8 6E 27 8A D8 66  // .4'.fP..H..n'..f
    09E0: 58 C3 55 57 51 B9 08 00 BD 00 00 BB 08 00 2B D9  // X.UWQ.........+.
    09F0: D1 E3 8D 58 4E E8 53 27 E8 E3 01 E2 EE 8D 5C 4B  // ...XN.S'......\K
    0A00: E8 48 27 B9 03 00 8B D0 BF 5A 0A 85 55 06 74 17  // .H'......Z..U.t.
    0A10: 66 8B 05 8D 9A F4 01 E8 91 26 8B 45 04 8D 9A F8  // f........&.E....
    0A20: 01 E8 9F 26 83 C5 08 83 C7 08 E2 DF 8D 7C 5E B9  // ...&.........|^.
    0A30: 04 00 33 ED 8B DF E8 12 27 0B C0 74 09 E8 5D 01  // ..3.....'..t..].
    0A40: E8 97 00 83 C5 1C 83 C7 12 E2 E9 55 32 ED E8 6F  // ...........U2..o
    0A50: FF 8D 5C 28 E8 4E FF 3D 01 04 75 10 83 C3 14 E8  // ..\(.N.=..u.....
    0A60: E9 26 24 70 C0 E8 04 8A E8 E8 54 FF 5D 8D 9C A6  // .&$p......T.]...
    0A70: 00 E8 D7 26 0A C0 74 46 8D 9C A8 00 E8 CC 26 3C  // ...&..tF......&<
    0A80: 02 75 3B 66 C1 E8 10 3C 04 72 33 8D 9C A8 00 32  // .u;f...<.r3....2
    0A90: E4 03 D8 8B FB B9 04 00 8B DF E8 AE 26 0B C0 74  // ............&..t
    0AA0: 15 E8 F9 00 A9 80 00 75 0D E8 2E 00 83 C5 1C 55  // .......u.......U
    0AB0: 58 83 F8 70 73 08 83 C7 12 49 0B C9 75 DA 59 5F  // X..ps....I..u.Y_
    0AC0: 5D C3 20 03 58 02 3C 00 01 00 00 04 00 03 3C 00  // ]. .X.<.......<.
    0AD0: 00 08 80 02 E0 01 3C 00 20 00 51 8D 1D E8 6B 26  // ......<. .Q...k&
    0AE0: 8D 9A 68 01 E8 DC 25 8D 5D 02 E8 5E 26 8D 9A 6A  // ..h...%.]..^&..j
    0AF0: 01 E8 89 00 8D 5D 05 E8 51 26 8D 9A 6E 01 E8 7C  // .....]..Q&..n..|
    0B00: 00 8D 5D 08 E8 44 26 8B C8 8A DC 66 C1 C8 10 8A  // ..]..D&....f....
    0B10: D0 80 E2 0F 8A F0 C0 EE 04 8A EC C0 ED 06 8A FC  // ................
    0B20: C0 EF 04 80 E7 03 80 E4 0F C0 E4 04 0A D4 80 E2  // ................
    0B30: 3F 80 E4 C0 C0 EC 02 0A F4 8B C3 8D 9A 74 01 E8  // ?............t..
    0B40: 81 25 8D 9A 72 01 8B C1 E8 78 25 8D 9A 76 01 33  // .%..r....x%..v.3
    0B50: C0 8A C6 E8 6D 25 8D 9A 78 01 33 C0 8A C2 E8 62  // ....m%..x.3....b
    0B60: 25 8D 5D 0C E8 E4 25 8D 9A 7A 01 E8 0F 00 8D 5D  // %.]...%..z.....]
    0B70: 0F E8 D7 25 8D 9A 7E 01 E8 48 25 59 C3 8B C8 8A  // ...%..~..H%Y....
    0B80: D4 66 C1 C8 10 8A F0 80 E6 0F 8A E8 C0 ED 04 8B  // .f..............
    0B90: C1 E8 2F 25 83 C3 02 8B C2 E8 27 25 C3 8D 5D 11  // ../%......'%..].
    0BA0: E8 A8 25 8A E0 BA 06 00 C0 E8 07 74 03 80 CA 80  // ..%........t....
    0BB0: 8A C4 C0 E8 03 24 03 3C 02 75 03 80 CA 40 3C 03  // .....$.<.u...@<.
    0BC0: 75 12 8A C4 D0 E8 A8 01 74 03 80 E2 FD A8 02 74  // u.......t......t
    0BD0: 03 80 E2 FB 8B C2 8D 9A 80 01 E8 E6 24 C3 3C 01  // ............$.<.
    0BE0: 74 3D 8B D0 0F B6 C6 24 3F 04 3C 8D 9A F8 01 E8  // t=.....$?.<.....
    0BF0: D1 24 0F B6 C2 83 C0 1F C1 E0 03 8D 9A F4 01 E8  // .$..............
    0C00: C1 24 0F B6 DE C1 EB 06 C1 E3 02 2E F7 A7 BA 0B  // .$..............
    0C10: 2E F7 B7 B8 0B 8D 9A F6 01 E8 A7 24 83 C5 08 C3  // ...........$....
    0C20: 10 00 0A 00 04 00 03 00 05 00 04 00 10 00 09 00  // ................
    0C30: 8D 9C A6 00 E8 14 25 0A C0 74 1F 8D 9C A8 00 51  // ......%..t.....Q
    0C40: B1 03 E8 18 00 59 0B DB 74 10 E8 FE 24 32 C0 66  // .....Y..t...$2.f
    0C50: 3D 00 03 0C 00 75 03 0B DB C3 33 DB C3 66 50 52  // =....u....3..fPR
    0C60: E8 E8 24 3C 02 75 39 80 FC 03 72 34 66 C1 E8 10  // ..$<.u9...r4f...
    0C70: 32 E4 3C 04 76 2A 03 C3 8B D0 83 C3 04 3B DA 73  // 2.<.v*.......;.s
    0C80: 1F E8 C7 24 8A E0 80 E4 E0 C0 EC 05 24 1F 38 CC  // ...$........$.8.
    0C90: 74 08 32 E4 FE C0 03 D8 EB E3 0B DB 5A 66 58 C3  // t.2.........ZfX.
    0CA0: 33 DB 5A 66 58 C3 51 8D 9C A6 00 E8 9D 24 0A C0  // 3.ZfX.Q......$..
    0CB0: 74 1B 8D 9C A8 00 B1 12 E8 18 00 74 10 E8 8B 24  // t..........t...$
    0CC0: 66 C1 E8 10 80 E4 07 75 04 B0 01 EB 02 32 C0 0A  // f......u.....2..
    0CD0: C0 59 C3 66 50 52 E8 72 24 3C 70 75 2B 66 C1 E8  // .Y.fPR.r$<pu+f..
    0CE0: 10 32 E4 83 C3 05 03 C3 8B D0 3B DA 73 1A E8 5A  // .2........;.s..Z
    0CF0: 24 38 C8 74 0D 66 C1 E8 10 32 E4 83 C0 03 03 D8  // $8.t.f...2......
    0D00: EB E8 0B DB 5A 66 58 C3 33 DB 5A 66 58 C3 57 66  // ....ZfX.3.ZfX.Wf
    0D10: 51 8D 9C 68 01 8B FB 8B DF E8 3D 00 0B C9 74 0B  // Q..h......=...t.
    0D20: 66 8B D1 E8 97 0F 83 C7 1C EB EC 66 59 5F C3 50  // f..........fY_.P
    0D30: 53 51 B9 07 00 53 8B DA E8 10 24 83 F8 00 5B 74  // SQ...S....$...[t
    0D40: 09 66 C1 E3 10 8B DA E8 60 20 59 5B 58 C3 51 53  // .f......` Y[X.QS
    0D50: B9 07 00 E8 6D 20 5B 59 C3 66 50 53 83 C3 06 E8  // ....m [Y.fPS....
    0D60: E9 23 5B 8B C8 66 C1 E1 10 53 83 C3 02 E8 DB 23  // .#[..f...S.....#
    0D70: 8B C8 5B 66 58 C3 8D 9C 48 01 32 C9 E8 70 23 C3  // ..[fX...H.2..p#.
    0D80: 57 B9 20 00 E8 48 20 5F C3 E8 83 01 66 8B CA 66  // W. ..H _....f..f
    0D90: 52 E8 C4 06 E8 AA 1C 66 5A 74 10 E8 3A 06 B3 00  // R......fZt..:...
    0DA0: E8 96 19 66 3B CA 73 03 66 8B D1 8D 9C D0 03 E8  // ...f;.s.f.......
    0DB0: 99 23 0B C0 75 44 8D 9C 54 02 66 B8 48 3F 00 00  // .#..uD..T.f.H?..
    0DC0: E8 E8 22 B5 01 66 81 FA 78 69 00 00 72 25 83 C3  // .."..f..xi..r%..
    0DD0: 04 66 B8 78 69 00 00 E8 D1 22 B5 02 66 81 FA F0  // .f.xi...."..f...
    0DE0: D2 00 00 72 0E 83 C3 04 66 B8 F0 D2 00 00 E8 BA  // ...r....f.......
    0DF0: 22 B5 03 B1 03 E8 CF 01 EB 45 66 B9 08 00 00 00  // "........Ef.....
    0E00: 66 33 D2 53 8D 9C 54 02 8B D3 5B E8 3D 23 0B C0  // f3.S..T...[.=#..
    0E10: 74 22 66 25 FF FF 00 00 66 D1 E0 53 8B DA E8 8A  // t"f%....f..S....
    0E20: 22 5B 66 C1 CA 10 FE C2 66 C1 CA 10 83 C2 04 83  // "[f.....f.......
    0E30: C3 02 E2 D7 66 C1 CA 10 8A EA B1 03 E8 88 01 E8  // ....f...........
    0E40: 38 06 A8 01 74 3F 8D 9C AE 03 E8 FE 22 3C 00 74  // 8...t?......"<.t
    0E50: 34 E8 CF 05 8A EB E8 5C 01 32 ED E8 63 01 E8 A2  // 4......\.2..c...
    0E60: 05 8D 9C BB 02 E8 E3 22 33 C9 8A C8 E8 28 01 66  // ......."3....(.f
    0E70: 3B C2 74 0E 51 E8 43 01 FE C5 E8 44 01 59 E2 EC  // ;.t.Q.C....D.Y..
    0E80: EB 03 B3 00 C3 8D 9C BB 02 E8 BF 22 FE C8 8A E8  // ..........."....
    0E90: E8 2E 01 8D 9C 40 03 B9 00 00 E8 52 22 E8 C2 02  // .....@.....R"...
    0EA0: E8 D2 00 E8 0F 01 66 52 E8 AD 05 E8 93 1B 66 5A  // ......fR......fZ
    0EB0: 75 04 B3 00 EB 58 E8 F6 00 80 FD 01 77 07 E8 FA  // u....X......w...
    0EC0: 00 0A ED 74 47 E8 1E 03 E8 28 11 80 FB 00 75 1D  // ...tG....(....u.
    0ED0: E8 A7 05 A8 01 74 07 B1 0D E8 3F 19 EB 30 B5 01  // .....t....?..0..
    0EE0: E8 9E 05 E8 25 0F B5 00 E8 96 05 EB 21 E8 BF 00  // ....%.......!...
    0EF0: 80 FD 01 76 07 D0 ED E8 BB 00 EB BA E8 76 00 E8  // ...v.........v..
    0F00: B3 00 E8 B6 00 FE CD E8 B7 00 EB AA B3 08 C3 8D  // ................
    0F10: 9C 29 01 E8 35 22 66 33 D2 8A D0 66 B8 8C 0A 00  // .)..5"f3...f....
    0F20: 00 66 F7 E2 E8 31 05 E8 17 1B 75 3D 66 50 8D 9C  // .f...1....u=fP..
    0F30: 28 01 E8 16 22 3C 14 66 58 72 2E 66 50 8D 9C D0  // (..."<.fXr.fP...
    0F40: 03 E8 07 22 0B C0 66 58 74 1F B9 08 00 8D 9C D0  // ..."..fXt.......
    0F50: 03 8B C1 D1 E0 03 D8 E8 F1 21 0B C0 75 02 E2 ED  // .........!..u...
    0F60: 66 25 FF FF 00 00 66 D1 E0 66 0B C0 75 03 B8 48  // f%....f..f..u..H
    0F70: 3F 66 8B D0 C3 8D 9C 2A 01 E8 CF 21 24 0F 8A E8  // ?f.....*...!$...
    0F80: 0A ED 75 02 B5 01 C3 B5 00 8D 9C 31 01 E8 BB 21  // ..u........1...!
    0F90: A8 01 74 02 B5 01 C3 53 51 E8 1F 00 32 E4 8A C5  // ..t....SQ...2...
    0FA0: C1 E0 02 59 8D 9C 54 02 03 D8 E8 9E 21 5B C3 B1  // ...Y..T.....![..
    0FB0: 02 E8 1D 00 C3 B1 02 E8 0D 00 C3 B1 01 E8 11 00  // ................
    0FC0: C3 B1 01 E8 01 00 C3 53 8D 9C B8 02 E8 20 21 5B  // .......S..... ![
    0FD0: C3 53 8D 9C B8 02 E8 2E 21 5B C3 33 C9 E8 7F 1E  // .S......![.3....
    0FE0: 75 3C 66 BA 37 F1 FF FF 66 33 C0 E8 E3 04 33 C0  // u<f.7...f3....3.
    0FF0: E8 47 03 74 1C A9 C8 0E 74 F6 E8 3C F7 F6 C3 04  // .G.t....t..<....
    1000: 75 05 F6 C3 18 74 E9 E8 30 00 50 E8 2C F8 58 EB  // u....t..0.P.,.X.
    1010: DF E8 1C 00 75 08 E8 31 00 8B C1 E8 1C F8 C3 8D  // ....u..1........
    1020: 5D 28 66 C1 E3 10 8D 5C 28 B9 49 00 E8 7B 1D C3  // ](f....\(.I..{..
    1030: 66 50 E8 B5 04 8B C8 66 58 C3 66 52 66 BA FF FF  // fP.....fX.fRf...
    1040: FF FF 33 D0 E8 8A 04 66 5A C3 50 53 52 E8 E0 FF  // ..3....fZ.PSR...
    1050: 75 09 33 C0 E8 E3 02 8B C8 EB 10 83 F9 02 74 0B  // u.3...........t.
    1060: E8 2F 08 80 FB 01 75 03 83 E1 FD 5A 5B 58 C3 56  // ./....u....Z[X.V
    1070: 66 33 C0 66 BA 00 F0 FF FF E8 52 07 66 C1 E6 10  // f3.f......R.f...
    1080: E8 C4 02 0B C0 74 03 E8 1C 00 E8 32 07 5E C3 66  // .....t.....2.^.f
    1090: 52 66 8B D0 E8 D2 15 8D 9C 1C 03 E8 AD 20 8A C2  // Rf........... ..
    10A0: E8 08 20 66 5A C3 50 51 E8 71 02 50 32 C0 E8 00  // .. fZ.PQ.q.P2...
    10B0: 04 E8 CC 01 E8 98 00 8D 9C 40 03 E8 8D 20 38 E8  // .........@... 8.
    10C0: 74 0A 8A C5 E8 E4 1F B0 02 E8 E5 03 58 E8 CA 00  // t...........X...
    10D0: E8 A8 00 E8 8C 00 8D 9C 4C 01 E8 6E 20 8B C8 8B  // ........L..n ...
    10E0: D3 8D 9C 00 03 E8 63 20 3B C1 74 05 B0 02 E8 C0  // ......c ;.t.....
    10F0: 03 E8 3B FC 8D 9C 00 03 E8 4B 15 8D 9C D8 02 E8  // ..;......K......
    1100: A9 1F E8 8A FF 66 C1 CE 10 8B FE 66 C1 CE 10 E8  // .....f.....f....
    1110: 95 00 E8 D1 00 E8 24 03 8A E9 8D 9C DC 02 32 C9  // ......$.......2.
    1120: E8 CC 1F E8 0D 03 66 25 FF 0F 00 00 59 58 66 BA  // ......f%....YXf.
    1130: FF FF FF FF 33 D0 E8 95 06 33 D2 C3 53 66 50 8D  // ....3....3..SfP.
    1140: 9C D4 02 E8 05 20 8A C4 E8 60 1F 66 58 5B C3 53  // ..... ...`.fX[.S
    1150: 66 50 8D 9C D4 02 E8 F2 1F 8A E0 E8 4D 1F 66 58  // fP..........M.fX
    1160: 5B C3 E8 73 02 E8 2E 02 8A DD E8 93 16 8A E9 8D  // [..s............
    1170: 9C 3C 03 32 C9 E8 77 1F 0B DB C3 83 EC 08 8B EC  // .<.2..w.........
    1180: E8 55 02 E8 10 02 E8 19 16 8D 9C 4C 03 E8 BB 1F  // .U.........L....
    1190: 8A 46 00 E8 15 1F 83 C4 08 C3 8D 9C D4 02 E8 AA  // .F..............
    11A0: 1F 32 C0 E8 05 1F C3 E8 0A 00 8D 9C D0 02 32 C9  // .2............2.
    11B0: E8 3C 1F C3 B5 00 8D 1D E8 90 1F 66 8B D0 8D 9C  // .<.........f....
    11C0: 02 03 E8 86 1F 0B C0 74 1C 51 8B C8 8D 9C 06 03  // .......t.Q......
    11D0: E8 78 1F 66 C1 E0 10 8B C1 59 66 3B C2 75 04 B5  // .x.f.....Yf;.u..
    11E0: 00 EB 02 B5 02 C3 E8 2B 02 8D 9C 40 03 B1 03 E8  // .......+...@....
    11F0: FD 1E E8 D5 F7 8D 9C 40 03 B1 02 E8 F1 1E E8 95  // .......@........
    1200: 01 80 FD 00 75 14 E8 A6 FD E8 8E 02 E8 88 FD 66  // ....u..........f
    1210: 8B D0 E8 77 02 E8 8E 02 EB 21 E8 4A 02 E8 6C 02  // ...w.....!.J..l.
    1220: E8 73 01 80 FD 02 B5 04 75 0B 81 FA 74 40 76 05  // .s......u...t@v.
    1230: B5 08 66 D1 EA E8 6E 02 E8 5F 02 E8 2B 00 C3 66  // ..f...n.._..+..f
    1240: 52 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B  // RR2.........f3..
    1250: C8 5A 51 66 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59  // .ZQf....f..f...Y
    1260: 66 F7 F1 66 8B C8 66 5A C3 B5 00 E8 EA 01 E8 CC  // f..f..fZ........
    1270: 17 75 03 E8 11 FD 8D 9C 48 03 32 C9 E8 70 1E C3  // .u......H.2..p..
    1280: 53 E8 5F 01 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8  // S._.f....M......
    1290: B9 1E 8A E8 8D 9C B4 02 E8 B0 1E 8A C8 E8 BA 14  // ................
    12A0: 8A EB 5B C3 57 53 53 E8 D6 FF E8 2B 01 5B E8 1F  // ..[.WSS....+.[..
    12B0: 15 74 66 80 FD 00 75 29 53 E8 DB FC 66 8B D0 E8  // .tf...u)S...f...
    12C0: 08 F7 8A CD 51 E8 E7 FC 8A FD 59 E8 71 FF 5B E8  // ....Q.....Y.q.[.
    12D0: 79 1E 66 25 FF FF 00 00 66 3B C8 73 39 32 DB EB  // y.f%....f;.s92..
    12E0: 38 80 FD 02 75 16 E8 6F 01 E8 62 17 74 28 8D 1F  // 8...u..o..b.t(..
    12F0: E8 58 1E 3D 74 40 76 1E 32 DB EB 1D 80 FD 03 75  // .X.=t@v.2......u
    1300: 15 53 E8 D3 00 B3 03 E8 2F 14 5B E8 3D 1E 3B C2  // .S....../.[.=.;.
    1310: 76 04 32 DB EB 03 80 CB 01 5B 5F C3 53 8B F0 E8  // v.2......[_.S...
    1320: 14 19 23 F0 74 09 8B C6 E8 B3 17 8B F3 0B DB 5B  // ..#.t..........[
    1330: C3 51 E8 15 FD E8 0F 00 59 C3 51 50 E8 F7 18 8B  // .Q......Y.QP....
    1340: C8 58 E8 02 00 59 C3 57 53 E8 28 19 0B C0 74 09  // .X...Y.WS.(...t.
    1350: 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83 FB FF 74 0B  // .....;.u......t.
    1360: 83 C7 02 85 D9 74 F2 8B C3 EB 02 33 C0 0B C0 5B  // .....t.....3...[
    1370: 5F C3 33 C0 E8 C3 FF 74 13 E8 A0 FF 8B DE B9 FB  // _.3....t........
    1380: 00 E8 11 1A 83 C6 08 E8 5C 18 EB E8 BB F0 16 B8  // ........\.......
    1390: 5A A5 E8 2E 1D C3 53 66 50 8D 9C 40 03 E8 AB 1D  // Z.....SfP..@....
    13A0: 8A E8 66 58 5B C3 8D 9C 69 03 E8 9E 1D C3 8D 9C  // ..fX[...i.......
    13B0: 64 03 E8 96 1D 0B C0 C3 53 66 50 8D 9C D4 02 E8  // d.......SfP.....
    13C0: 89 1D 8A C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8  // ....fX[.SfP.....
    13D0: 79 1D 8A C8 66 58 5B C3 53 8D 5C 14 E8 6C 1D 8B  // y...fX[.S.\..l..
    13E0: D0 5B C3 53 66 50 8D 5C 16 E8 5F 1D 8B D0 66 58  // .[.SfP.\.._...fX
    13F0: 5B C3 53 66 50 8D 9C 50 03 E8 4F 1D 66 8B D0 66  // [.SfP..P..O.f..f
    1400: 58 5B C3 53 66 50 8D 9C 54 03 E8 3E 1D 66 8B D0  // X[.SfP..T..>.f..
    1410: 66 58 5B C3 53 66 50 8D 5C 10 E8 2E 1D 8B C8 66  // fX[.SfP.\......f
    1420: 58 5B C3 66 50 53 8D 9C 41 03 E8 1E 1D 5B 8A D8  // X[.fPS..A....[..
    1430: 66 58 C3 53 8D 5C 08 E8 11 1D 5B C3 53 50 8D 9C  // fX.S.\....[.SP..
    1440: 4C 03 E8 06 1D 8A C8 58 5B C3 53 50 8D 9C 4D 03  // L......X[.SP..M.
    1450: E8 F8 1C 8A C8 58 5B C3 53 66 50 8D 5C 0C E8 EA  // .....X[.SfP.\...
    1460: 1C 8B D0 66 58 5B C3 53 66 50 8D 9C 00 03 E8 DA  // ...fX[.SfP......
    1470: 1C 66 33 D2 8B D0 66 58 5B C3 8D 5C 04 E8 CB 1C  // .f3...fX[..\....
    1480: C3 51 8D 5C 04 32 C9 E8 65 1C 59 C3 8D 9C 50 03  // .Q.\.2..e.Y...P.
    1490: E8 B8 1C 66 8B C2 E8 12 1C C3 53 8D 9C 40 03 B1  // ...f......S..@..
    14A0: 01 E8 4B 1C 5B C3 8D 9C 54 03 66 8B C2 E8 FB 1B  // ..K.[...T.f.....
    14B0: C3 53 51 8A E8 E8 C2 FF 24 FD 0A E8 E8 C2 FF 59  // .SQ.....$......Y
    14C0: 5B C3 66 50 8D 9C D8 02 E8 80 1C 66 8B D0 66 58  // [.fP.......f..fX
    14D0: C3 53 66 50 51 66 8B C8 BB 00 00 E8 E1 15 23 C2  // .SfPQf........#.
    14E0: 0B C1 E8 E3 15 59 66 58 5B C3 BB 00 00 E8 CF 15  // .....YfX[.......
    14F0: 66 25 CA 0E 00 00 C3 E8 59 18 E8 E8 17 E8 C6 17  // f%......Y.......
    1500: 75 06 E8 43 17 E8 CA 17 C3 B0 01 C3 55 B3 01 E8  // u..C........U...
    1510: 2D 1A 5D C3 66 53 66 BB 04 00 00 00 E8 05 00 33  // -.].fSf........3
    1520: C0 66 5B C3 55 66 C1 E3 10 BB 00 00 E8 10 1A 5D  // .f[.Uf.........]
    1530: C3 E8 18 19 BB 0A 00 E8 8E 15 C3 BB 0A 00 E8 7E  // ...............~
    1540: 15 66 8B C8 E8 05 19 BB 0A 00 66 2B C1 E8 78 15  // .f........f+..x.
    1550: C3 E8 29 00 0B C9 74 22 E8 14 FB E8 24 07 66 51  // ..)...t"....$.fQ
    1560: 66 8B C8 BB 07 00 E8 56 15 66 25 00 FE 00 00 66  // f......V.f%....f
    1570: 0B C1 E8 53 15 66 59 0C 01 C3 32 C0 C3 E8 6B 02  // ...S.fY...2...k.
    1580: 0B C9 75 06 E8 C3 FA E8 71 02 51 E8 BC FA 66 C1  // ..u.....q.Q...f.
    1590: E6 10 33 C0 E8 9A FD 74 09 E8 09 03 75 F6 33 C8  // ..3....t....u.3.
    15A0: EB F2 58 23 C8 66 C1 EE 10 C3 A8 10 75 63 E8 E3  // ..X#.f......uc..
    15B0: 06 66 C1 E6 10 33 C0 E8 80 FD 74 35 E8 5D FD 50  // .f...3....t5.].P
    15C0: 51 8B C8 E8 F9 01 85 C1 59 58 74 0D 50 E8 AA FE  // Q.......YXt.P...
    15D0: 24 03 3C 03 58 75 E0 EB 0C 50 E8 9D FE A8 01 58  // $.<.Xu...P.....X
    15E0: 74 D5 E8 6A FB 50 E8 CD 07 58 B5 00 E8 92 FE EB  // t..j.P...X......
    15F0: C6 E8 CB 01 E8 25 FD E8 34 01 B1 00 E8 41 07 66  // .....%..4....A.f
    1600: C1 EE 10 E8 87 06 A8 20 75 42 A8 40 75 03 E8 0F  // ....... uB.@u...
    1610: 0E E8 6E 06 0A C0 75 07 32 C9 B5 01 E8 B2 0E E8  // ..n...u.2.......
    1620: 9D 01 E8 F7 FC E8 30 FE E8 16 14 75 14 E8 62 02  // ......0....u..b.
    1630: 0A DB 74 0D E8 18 FB E8 7C 07 B5 00 E8 42 FE EB  // ..t.....|....B..
    1640: 08 E8 59 07 B5 01 E8 38 FE E8 E6 00 C3 E8 E6 15  // ..Y....8........
    1650: C3 E8 1E FD E8 9F 06 33 C9 E8 9F 01 66 33 D2 66  // .......3....f3.f
    1660: 33 C0 E8 6C FE E8 52 00 B1 FF E8 84 00 33 C0 E8  // 3..l..R......3..
    1670: C8 FC 74 0A E8 A5 FC 50 E8 C5 07 58 EB F1 32 C9  // ..t....P...X..2.
    1680: E8 C4 01 E8 B0 15 0B C0 C3 E8 E6 FC E8 67 06 66  // .............g.f
    1690: 33 C0 66 BA 00 F0 FF FF E8 33 01 51 B1 01 E8 8C  // 3.f......3.Q....
    16A0: 01 59 33 C0 E8 93 FC 74 0A E8 70 FC 50 E8 5B 07  // .Y3....t..p.P.[.
    16B0: 58 EB F1 E8 A7 0D E8 7F 16 C3 B8 02 00 E8 5C FC  // X.............\.
    16C0: 74 2E B1 07 E8 CA 11 B8 02 00 E8 6C F0 F6 C3 04  // t..........l....
    16D0: 75 12 E8 46 18 83 3D 00 75 0A E8 59 15 83 E0 FD  // u..F..=.u..Y....
    16E0: E8 5C 15 C3 66 B8 02 00 00 00 E8 E4 FD E8 4E F2  // .\..f.........N.
    16F0: C3 E8 DD 13 74 23 38 E1 76 04 8A CC EB 06 38 C1  // ....t#8.v.....8.
    1700: 73 02 8A C8 BB 02 00 E8 B5 13 8A E1 E8 B9 13 B1  // s...............
    1710: 04 E8 7D 11 0C 01 C3 0C 01 C3 51 E8 B3 13 74 0C  // ..}.......Q...t.
    1720: 8A CC BB 02 00 E8 97 13 8A C4 8A E1 59 C3 E8 F1  // ............Y...
    1730: 05 C3 E8 FC 05 C3 E8 26 17 75 18 E8 81 00 E8 DB  // .......&.u......
    1740: FB 80 F9 01 75 0E 51 E8 53 06 B5 01 E8 32 FD 59  // ....u.Q.S....2.Y
    1750: E8 DF FF C3 E8 D7 FF 51 E8 B0 06 B5 00 E8 21 FD  // .......Q......!.
    1760: 59 C3 B8 02 00 E8 B4 FB 74 03 E8 24 11 C3 E8 B0  // Y.......t..$....
    1770: 04 3B C1 7C 3A 8B C1 E8 F0 04 E8 BA 0E 8B C8 51  // .;.|:..........Q
    1780: E8 20 05 E8 E4 04 59 E8 AD 0E 3B C8 72 02 8B C1  // . ....Y...;.r...
    1790: 8D 5C 04 E8 2D 19 32 C9 B5 0F E8 F8 0C E8 EC 15  // .\..-.2.........
    17A0: FE C1 38 C1 72 F2 8D 5C 04 E8 9F 19 0B C0 C3 33  // ..8.r..\.......3
    17B0: C0 C3 BB 00 18 33 C0 8A C2 C1 E0 02 03 D8 C3 53  // .....3.........S
    17C0: BB 03 00 E8 F9 12 66 25 FF 0F 00 00 5B C3 53 66  // ......f%....[.Sf
    17D0: 50 66 51 66 8B C8 BB 03 00 E8 E3 12 66 23 C2 66  // PfQf........f#.f
    17E0: 0B C1 E8 E3 12 66 59 66 58 5B C3 66 50 BB 05 00  // .....fYfX[.fP...
    17F0: E8 CC 12 25 FF 0F 8B C8 66 58 C3 E8 38 14 23 C8  // ...%....fX..8.#.
    1800: 66 50 BB 05 00 E8 B7 12 25 00 F0 0B C1 E8 B8 12  // fP......%.......
    1810: 66 58 C3 66 50 53 BB 06 00 E8 A3 12 A8 10 75 09  // fX.fPS........u.
    1820: BB F0 16 E8 25 19 3D 5A A5 5B 66 58 C3 66 50 53  // ....%.=Z.[fX.fPS
    1830: BB 06 00 E8 89 12 80 F1 01 C0 E1 04 24 EF 0A C1  // ............$...
    1840: E8 85 12 5B 66 58 C3 53 66 50 BB F8 16 E8 FB 18  // ...[fX.SfP......
    1850: 8A C1 E8 56 18 66 58 5B C3 53 BB F8 16 E8 EB 18  // ...V.fX[.S......
    1860: 83 E0 01 5B C3 53 66 50 BB 07 00 E8 51 12 F6 C4  // ...[.SfP....Q...
    1870: 01 66 58 B0 06 74 02 B0 08 5B C3 53 BB 07 00 E8  // .fX..t...[.S....
    1880: 3D 12 80 E4 FE 80 FD 06 74 03 80 CC 01 E8 38 12  // =.......t.....8.
    1890: 5B C3 66 50 BB 06 00 E8 25 12 24 40 C0 E8 06 8A  // [.fP....%.$@....
    18A0: D8 66 58 C3 C3 50 66 51 E8 71 FA 83 EC 04 8B EC  // .fX..PfQ.q......
    18B0: 66 33 C0 66 89 46 00 33 D2 8D BC 68 01 8D 1D E8  // f3.f.F.3...h....
    18C0: 89 18 0B C0 74 22 8B DF B0 00 E8 12 01 74 14 8B  // ....t".......t..
    18D0: DF E8 85 F4 66 8B 46 00 66 3B C8 72 06 8B D7 66  // ....f.F.f;.r...f
    18E0: 89 4E 00 83 C7 1C EB D5 0B D2 74 0A 8D 9C 4C 01  // .N........t...L.
    18F0: E8 3C F4 E9 88 00 66 33 C0 66 89 46 00 8D BC F4  // .<....f3.f.F....
    1900: 01 33 D2 8D 1D E8 43 18 0B C0 74 58 66 50 E8 A7  // .3....C...tXfP..
    1910: F0 3C 01 66 58 74 05 3D 40 06 73 43 66 52 66 8B  // .<.fXt.=@.sCfRf.
    1920: D0 8D 5D 04 E8 24 18 E8 5D 00 8B CA 66 5A 74 2F  // ..]..$..]...fZt/
    1930: 56 8D 9C 4C 01 8B F1 E8 14 F4 5E B0 00 E8 9F 00  // V..L......^.....
    1940: 74 1D 8D 1D E8 04 18 8B D9 8B 47 06 66 C1 E0 10  // t.........G.f...
    1950: 8B 47 02 66 3B 46 00 72 06 8B D1 66 89 46 00 83  // .G.f;F.r...f.F..
    1960: C7 08 EB 9F 0B D2 74 16 56 8D 9C 4C 01 8B F2 E8  // ......t.V..L....
    1970: DC F3 5E 53 8D 9C 62 01 33 C0 E8 46 17 5B 83 C4  // ..^S..b.3..F.[..
    1980: 04 0B D2 66 59 58 C3 57 53 51 E8 05 13 3B 55 02  // ...fYX.WSQ...;U.
    1990: 75 18 66 C1 CA 10 8B DA 66 C1 CA 10 3B 5D 06 75  // u.f.....f...;].u
    19A0: 09 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 DE 33  // ...t.:E.t......3
    19B0: D2 EB 02 8B D7 0B D2 59 5B 5F C3 51 66 52 E8 D1  // .......Y[_.QfR..
    19C0: 12 3A 65 1A 75 09 0A C0 74 0E 3A 45 1B 74 09 83  // .:e.u...t.:E.t..
    19D0: C7 1C E2 ED 33 FF EB 00 0B FF 66 5A 59 C3 C3 66  // ....3.....fZY..f
    19E0: 51 66 52 53 53 66 C1 CE 10 8B DE 66 C1 CE 10 E8  // QfRSSf.....f....
    19F0: 59 17 5B 66 8B D0 E8 60 F3 3B CA 72 0A 66 3B CA  // Y.[f...`.;.r.f;.
    1A00: 72 05 E8 9F F8 75 02 32 C0 5B 66 5A 66 59 C3 56  // r....u.2.[fZfY.V
    1A10: 57 E8 A7 FF 8B F7 E8 35 F3 5F 5E C3 66 50 53 66  // W......5._^.fPSf
    1A20: 51 52 57 56 51 8B DE B9 08 00 E8 68 13 59 8D 5C  // QRWVQ......h.Y.\
    1A30: 08 8B C1 66 C1 E0 10 8A C2 E8 6F 16 F6 C2 03 75  // ...f......o....u
    1A40: 24 8B C1 24 7F BF FF 1A 80 3D FF 0F 84 0F 01 3A  // $..$.....=.....:
    1A50: 05 75 0D 66 8B 45 01 66 B9 00 05 02 00 E9 96 00  // .u.f.E.f........
    1A60: 83 C7 05 EB E3 F6 C2 01 74 25 8B C1 E8 70 01 0F  // ........t%...p..
    1A70: 84 EB 00 33 C9 8A CC 8A D0 0A C0 75 12 8D 5C 08  // ...3.......u..\.
    1A80: 66 25 FF FF 00 00 66 C1 E0 08 E8 1E 16 EB B2 8A  // f%....f.........
    1A90: E1 8A CA 80 E1 0C C0 E9 02 80 E2 F0 C0 EA 04 8A  // ................
    1AA0: EA 80 FC 70 72 2A 80 FC 75 73 25 80 EC 70 8A C4  // ...pr*..us%..p..
    1AB0: 32 E4 50 E8 30 02 8B D8 58 38 D8 72 05 33 C0 E9  // 2.P.0...X8.r.3..
    1AC0: 9C 00 E8 28 02 E8 83 16 0B C0 0F 84 90 00 EB 1B  // ...(............
    1AD0: 32 C0 E8 E6 FE 0F 84 85 00 8D 5C 16 8B 05 E8 E2  // 2.........\.....
    1AE0: 15 8B 45 06 66 C1 E0 10 8B 45 02 50 E8 48 0B 66  // ..E.f....E.P.H.f
    1AF0: C1 E1 10 8B C8 58 8D 1C E8 B0 15 66 50 8D 5C 04  // .....X.....fP.\.
    1B00: 66 8B C1 E8 A5 15 66 58 66 C1 E8 10 66 81 E1 FF  // f.....fXf...f...
    1B10: FF 00 00 66 F7 E1 66 50 8D 5C 06 E8 2D 16 8B C8  // ...f..fP.\..-...
    1B20: 66 58 66 D3 E0 66 C1 E8 10 40 8D 5C 14 E8 93 15  // fXf..f...@.\....
    1B30: BF 5F 1B 83 F9 01 74 11 BF 67 1B 81 F9 01 01 74  // ._....t..g.....t
    1B40: 08 BF 6F 1B 83 F9 02 75 15 8D 5C 0C 66 8B 05 E8  // ..o....u..\.f...
    1B50: 59 15 8D 5C 10 66 8B 45 04 E8 4F 15 0B DB 5E 5F  // Y..\.f.E..O...^_
    1B60: 5A 66 59 5B 66 58 C3 00 40 01 90 01 01 40 01 90  // ZfY[fX..@....@..
    1B70: 01 02 80 02 90 01 03 80 02 90 01 04 40 01 90 01  // ............@...
    1B80: 05 40 01 90 01 06 80 02 90 01 07 D0 02 5E 01 0D  // .@...........^..
    1B90: 40 01 90 01 0E 80 02 90 01 0F 80 02 5E 01 10 80  // @...........^...
    1BA0: 02 5E 01 11 80 02 E0 01 12 80 02 E0 01 13 80 02  // .^..............
    1BB0: 90 01 23 20 04 90 01 32 20 04 B0 02 33 20 04 C0  // ..# ...2 ...3 ..
    1BC0: 02 62 80 02 E0 01 FF 05 0A 05 05 05 00 00 00 05  // .b..............
    1BD0: 0B 06 05 05 00 00 00 08 10 08 08 08 00 00 00 56  // ...............V
    1BE0: E8 CF 12 80 E4 01 3B 04 74 09 83 C6 04 E2 F7 33  // ......;.t......3
    1BF0: C0 EB 05 8B 44 02 0B C0 5E C3 57 53 50 E8 B2 12  // ....D...^.WSP...
    1C00: 83 E9 0A E8 E0 00 83 F8 05 76 03 B8 05 00 D1 E0  // .........v......
    1C10: 03 C8 FB A5 83 C6 02 E2 FA B8 FF FF AB 58 5B 5F  // .............X[_
    1C20: C3 66 53 51 66 52 E8 41 00 E8 77 00 66 C1 E8 10  // .fSQfR.A..w.f...
    1C30: 66 0F B7 D8 66 B8 00 00 00 03 66 D3 E8 66 33 D2  // f...f.....f..f3.
    1C40: 66 F7 F3 E8 F1 09 66 5A 59 66 5B C3 53 66 50 BB  // f.....fZYf[.SfP.
    1C50: 07 00 E8 6A 0E 0A C0 66 58 5B C3 53 66 50 BB 07  // ...j...fX[.SfP..
    1C60: 00 E8 5B 0E A8 01 66 58 5B C3 53 66 50 8D 5C 06  // ..[...fX[.SfP.\.
    1C70: E8 D8 14 8A C8 66 58 5B C3 51 B9 08 00 E8 2A 11  // .....fX[.Q....*.
    1C80: 59 C3 53 8D 5C 08 E8 C2 14 24 03 5B C3 8D 5C 09  // Y.S.\....$.[..\.
    1C90: E8 B8 14 C3 51 53 B1 01 8A E8 8D 5C 08 E8 4F 14  // ....QS.....\..O.
    1CA0: 5B 59 C3 53 8D 1C E8 A2 14 5B C3 53 8D 5C 04 E8  // [Y.S.....[.S.\..
    1CB0: 99 14 5B C3 53 8D 5C 16 E8 90 14 5B C3 53 66 52  // ..[.S.\....[.SfR
    1CC0: 33 C0 E8 C2 FC 66 5A 75 1B E8 34 00 74 16 E8 15  // 3....fZu..4.t...
    1CD0: 00 40 83 F8 05 73 0D E8 D1 13 48 E8 0F 00 66 8B  // .@...s....H...f.
    1CE0: C2 E8 C7 13 5B C3 BB 00 1E E8 5F 14 C3 BB 08 1E  // ....[....._.....
    1CF0: C1 E0 03 03 D8 C3 BB 00 1E B9 32 00 E8 96 10 C3  // ..........2.....
    1D00: 51 E8 E2 FF 0B C0 74 12 8B C8 BB 08 1E E8 3B 14  // Q.....t.......;.
    1D10: 66 3B C2 74 07 83 C3 08 E2 F3 0B DB 59 C3 C3 00  // f;.t........Y...
    1D20: C3 00 BB 20 DF E8 E3 33 E8 8D F6 B5 01 E8 E5 07  // ... ...3........
    1D30: C3 BB 00 DF E8 D4 33 E8 7E F6 B5 00 E8 D6 07 C3  // ......3.~.......
    1D40: 80 F9 00 75 0A E8 4A 10 8A C8 B5 02 E8 1D 09 0B  // ...u..J.........
    1D50: F6 74 2E E8 62 F6 B5 01 51 E8 C0 07 59 E8 C3 07  // .t..b...Q...Y...
    1D60: 56 33 F6 B5 00 E8 2D 07 5E B5 01 E8 CE F6 E8 FB  // V3....-.^.......
    1D70: 08 E8 C4 09 E8 41 F6 8D 9C 00 03 E8 AC 07 E8 F5  // .....A..........
    1D80: 07 66 C1 CE 10 B5 01 E8 0B 07 E8 00 FF A8 40 75  // .f............@u
    1D90: 07 32 C0 B5 01 E8 7E 08 66 C1 CE 10 C3 E8 18 F6  // .2....~.f.......
    1DA0: B5 01 E8 4B 07 B5 00 E8 79 07 E8 DC 07 B1 0F E8  // ...K....y.......
    1DB0: 69 0A E8 26 00 C3 E8 52 00 E8 0C F6 B5 00 E8 2F  // i..&...R......./
    1DC0: 07 B5 00 E8 5D 07 E8 81 F6 E8 C6 0F 38 C1 74 0A  // ....].......8.t.
    1DD0: 80 F9 0B 74 05 B5 03 E8 92 08 C3 B1 10 E8 3B 0A  // ...t..........;.
    1DE0: E8 B3 F5 80 FD 00 74 06 B1 01 E8 A4 0A C3 E8 A6  // ......t.........
    1DF0: 05 80 FD 01 75 07 B5 02 E8 D5 05 EB 03 E8 F3 01  // ....u...........
    1E00: B1 0D E8 16 0A B1 03 E8 54 00 C3 E8 D5 F5 0B D2  // ........T.......
    1E10: 74 05 B1 00 E8 42 0A B1 02 E8 42 00 E8 5B F6 A8  // t....B....B..[..
    1E20: 01 74 12 E8 70 F5 80 FD 00 75 0A B1 0C E8 EB 09  // .t..p....u......
    1E30: B0 02 E8 91 04 B1 00 E8 57 0A B1 0D E8 1F 00 C3  // ........W.......
    1E40: B1 07 E8 4C 0A E8 9B F5 0B D2 75 0C E8 09 F6 E8  // ...L......u.....
    1E50: EB 0B 75 09 E8 F2 0A C3 B1 07 E8 FC 09 C3 E8 F7  // ..u.............
    1E60: F5 E8 D9 0B 75 24 51 E8 27 0A 59 80 F9 0C 75 1A  // ....u$Q.'.Y...u.
    1E70: 33 D2 56 83 C6 08 E8 02 0C 5E 0A C0 75 0C B9 0A  // 3.V......^..u...
    1E80: 00 E8 62 0F 42 83 FA 1E 75 E8 C3 80 FB 01 0F 84  // ..b.B...u.......
    1E90: C5 00 E8 A5 05 66 C1 E1 10 8D 9C 35 01 E8 AB 12  // .....f.....5....
    1EA0: A8 01 74 05 51 E8 2B 04 59 E8 68 F5 B0 04 E8 9C  // ..t.Q.+.Y.h.....
    1EB0: 05 66 BA 50 01 40 50 E8 76 05 E8 B8 0A 75 7E 66  // .f.P.@P.v....u~f
    1EC0: BA 50 01 50 4F 8D 9C 2D 01 E8 7F 12 24 06 3C 02  // .P.PO..-....$.<.
    1ED0: 75 02 B6 02 B0 05 E8 74 05 E8 54 05 8D 5C 28 03  // u......t..T..\(.
    1EE0: D8 E8 91 0A 75 57 0A FF 75 09 B0 0A E8 5E 05 32  // ....uW..u....^.2
    1EF0: DB EB 4A 51 33 C9 8A CF E8 35 05 03 C8 E8 3A 05  // ..JQ3....5....:.
    1F00: 59 B0 07 E8 47 05 66 BA 50 01 10 30 33 DB E8 64  // Y...G.f.P..03..d
    1F10: 0A 74 0F 51 8A EB 8D 9C 44 01 B1 02 E8 D0 11 59  // .t.Q....D......Y
    1F20: EB 61 E8 0B 05 66 C1 C9 10 2B C1 66 C1 C1 10 3D  // .a...f...+.f...=
    1F30: 80 00 0F 82 76 FF B0 08 E8 12 05 EB 43 51 8A EB  // ....v.......CQ..
    1F40: 8D 9C 44 01 B1 02 E8 A6 11 59 66 BA 50 01 10 30  // ..D......Yf.P..0
    1F50: 33 DB E8 20 0A EB 2C 8D 5C 28 03 D9 53 8A E9 B1  // 3.. ..,.\(..S...
    1F60: 32 51 5F E8 AE F4 8A E9 B1 A0 BA 00 80 E8 DA 09  // 2Q_.............
    1F70: 80 FF 01 5B 74 0A B1 A2 E8 CF 09 80 FF 01 75 03  // ...[t.........u.
    1F80: B0 00 C3 B0 01 C3 51 B1 0C E8 D2 FE 59 B0 01 E8  // ......Q.....Y...
    1F90: BB 04 56 83 C6 08 E8 E2 0A 5E 0A C0 75 04 B3 10  // ..V......^..u...
    1FA0: EB 3F B0 02 E8 A6 04 E8 38 00 74 11 B0 03 E8 9C  // .?......8.t.....
    1FB0: 04 B0 01 E8 10 03 75 29 E8 27 00 75 24 66 BA 0C  // ......u).'.u$f..
    1FC0: 00 90 43 8D 9C 30 01 E8 AB 09 66 BA 20 00 90 41  // ..C..0....f. ..A
    1FD0: 8D 9C 34 01 E8 9E 09 E8 BD 03 B0 09 E8 6E 04 33  // ..4..........n.3
    1FE0: DB C3 E8 2F F4 66 BA 00 00 90 47 8D 9C 28 01 E8  // .../.f....G..(..
    1FF0: 83 09 C3 B1 0C E8 66 FE B1 00 E8 94 08 B1 01 E8  // ......f.........
    2000: 8F 08 8D 9C AC 03 66 B8 00 00 00 00 E8 9C 10 B0  // ......f.........
    2010: 01 E8 B2 02 74 0A B5 04 E8 CB 03 B3 08 E9 3F 01  // ....t.........?.
    2020: B1 08 E8 F6 07 E8 D2 02 B1 09 E8 EE 07 E8 C5 01  // ................
    2030: 8D 9C B8 03 66 33 C0 E8 71 10 E8 60 01 B9 90 01  // ....f3..q..`....
    2040: E8 98 0D B0 01 E8 63 02 B5 02 E8 8D 03 E8 74 01  // ......c.......t.
    2050: E8 9F 03 E8 E0 01 B5 03 E8 7F 03 33 C9 E8 00 01  // ...........3....
    2060: F6 C5 01 75 34 B5 02 E8 70 03 E8 20 01 F6 C5 04  // ...u4...p.. ....
    2070: 74 08 B5 01 E8 6F 03 E9 CC 00 8A FD 80 E7 03 E8  // t....o..........
    2080: E8 00 80 E3 03 38 FB 75 0D E8 4C 01 75 08 B5 02  // .....8.u..L.u...
    2090: E8 53 03 E9 B0 00 E8 67 01 FE C1 E8 85 F3 38 D9  // .S.....g......8.
    20A0: 75 BB 8D 9C AC 03 E8 A2 10 3C 03 74 05 E8 ED 00  // u........<.t....
    20B0: EB 9B 8D 9C B0 03 66 33 C0 E8 EF 0F 8D 9C 2A 01  // ......f3......*.
    20C0: E8 88 10 A8 40 74 0C B1 13 E8 4F 07 B0 03 E8 DA  // ....@t....O.....
    20D0: 01 EB 0A B1 0A E8 43 07 B0 02 E8 CE 01 B5 04 E8  // ......C.........
    20E0: F8 02 E8 DF 00 E8 0A 03 E8 4B 01 B5 05 E8 EA 02  // .........K......
    20F0: 33 C9 E8 6B 00 80 FD 07 75 05 E8 86 00 75 2E 51  // 3..k....u....u.Q
    2100: B5 04 E8 D5 02 59 F6 C5 01 75 07 B5 03 E8 D6 02  // .....Y...u......
    2110: EB 34 E8 78 00 8A D5 E8 E6 00 E8 70 00 38 EA 75  // .4.x.......p.8.u
    2120: 0C E8 B4 00 75 07 B5 02 E8 BB 02 EB 19 FE C1 E8  // ....u...........
    2130: F1 F2 38 D9 75 BC 8D 9C AC 03 E8 0E 10 3C 04 75  // ..8.u........<.u
    2140: 05 E8 59 00 EB 9C B0 00 E8 60 01 B1 0B E8 CB 06  // ..Y......`......
    2150: 8D 9C AD 03 E8 F4 0F B3 00 0A C0 74 02 B3 08 C3  // ...........t....
    2160: 8D 9C C0 03 E8 0F 00 8A E8 C3 53 8D 9C C4 03 E8  // ..........S.....
    2170: 04 00 5B 8A D8 C3 51 E8 D1 0F C0 E1 02 D3 E8 24  // ..[...Q........$
    2180: 0F 59 C3 8D 9C C2 03 E8 C1 0F A8 01 C3 8D 9C B8  // .Y..............
    2190: 03 E8 73 0F C3 8D 9C B8 03 E8 53 0F C3 33 C9 33  // ..s.......S..3.3
    21A0: D2 E8 E9 FF 38 D5 76 02 8A D5 FE C1 E8 74 F2 38  // ....8.v......t.8
    21B0: D9 72 EE 33 C9 8A EA 8D 9C 5C 03 E8 31 0F B1 0B  // .r.3.....\..1...
    21C0: E8 CE 06 C3 E8 4D F2 8D 9C B8 03 E8 7D 0F 66 BA  // .....M......}.f.
    21D0: 03 01 80 83 E8 9E 07 C3 51 53 8D 9C B0 03 E8 26  // ........QS.....&
    21E0: 0F FE C5 E8 09 0F 80 FD 06 72 07 B5 02 E8 F6 01  // .........r......
    21F0: 33 C9 5B 59 C3 66 33 C0 8D 9C B0 03 E8 AC 0E C3  // 3.[Y.f3.........
    2200: 32 ED E8 65 FF 80 E3 0C C0 EB 02 B7 03 2A FB C0  // 2..e.........*..
    2210: E3 03 8A EB 80 FB 18 72 03 80 CD 20 E8 4B FF 80  // .......r... .K..
    2220: E3 03 38 FB 72 02 8A DF 80 FB 03 75 03 80 CD 04  // ..8.r......u....
    2230: 0A EB E8 60 FF C3 E8 DB F1 8D 9C C0 03 66 BA 02  // ...`.........f..
    2240: 02 90 45 E8 2F 07 C3 E8 CA F1 66 BA 00 01 90 42  // ..E./.....f....B
    2250: 8D 9C B4 03 E8 1E 07 E8 BA F1 66 BA 03 01 90 45  // ..........f....E
    2260: 8D 9C B8 03 E8 0E 07 E8 EE F1 E8 D4 07 75 3B E8  // .............u;.
    2270: A2 F1 66 BA 0A 01 90 40 8D 9C BF 03 E8 F6 06 8D  // ..f....@........
    2280: 9C 28 01 E8 C5 0E 3C 14 72 20 E8 87 F1 66 BA 10  // .(....<.r ...f..
    2290: 00 90 4F 8D 9C D0 03 E8 DB 06 E8 77 F1 66 BA 15  // ..O........w.f..
    22A0: 01 90 40 8D 9C CC 03 E8 CB 06 C3 E8 66 F1 66 BA  // ..@.........f.f.
    22B0: 02 01 80 50 E8 BE 06 C3 E8 48 F1 8B C2 66 33 D2  // ...P.....H...f3.
    22C0: B9 8C 0A F7 F1 C3 E8 4B F1 66 BA 00 06 80 50 E8  // .......K.f....P.
    22D0: A3 06 C3 E8 3E F1 66 BA 11 01 80 50 B0 04 E8 94  // ....>.f....P....
    22E0: 06 C3 E8 2F F1 66 BA 00 06 90 40 8D 9C C8 03 E8  // .../.f....@.....
    22F0: 83 06 8D 9C C8 03 E8 52 0E C3 E8 BB FF 3C 06 74  // .......R.....<.t
    2300: 0E 3C 0A 74 0A 3C 14 74 06 3C 1E 74 02 33 C0 E8  // .<.t.<.t.<.t.3..
    2310: 11 F1 8A E3 80 CC 80 50 E8 F9 F0 58 66 BA 00 01  // .......P...Xf...
    2320: 80 61 E8 50 06 33 C9 E8 84 F0 0B C0 74 02 B5 10  // .a.P.3......t...
    2330: 8D 9C BC 03 E8 B8 0D 8A C5 E8 D8 F0 66 BA 07 01  // ............f...
    2340: 80 50 E8 30 06 E8 10 F1 E8 F6 06 75 49 8D 9C 48  // .P.0.......uI..H
    2350: 03 E8 F7 0D 0A C0 74 0E E8 B9 F0 66 BA 0A 01 80  // ......t....f....
    2360: 50 B0 01 E8 0F 06 8D 9C 28 01 E8 DE 0D 3C 14 72  // P.......(....<.r
    2370: 25 8D 9C D0 03 E8 D3 0D 0B C0 74 1A E8 3C EC 32  // %.........t..<.2
    2380: C9 8D 9C CC 03 E8 67 0D 8A C5 E8 87 F0 66 BA 15  // ......g......f..
    2390: 01 80 50 E8 DF 05 C3 8D 9C B4 03 B9 0E 00 E8 F4  // ..P.............
    23A0: 09 E8 A3 FE E8 8F FE E8 38 FF 3C 01 75 1C E8 D2  // ........8.<.u...
    23B0: FD 74 17 33 C9 E8 A8 FD 80 FD 07 75 0D FE C1 E8  // .t.3.......u....
    23C0: 61 F0 38 D9 75 EF B5 01 EB 02 B5 00 E8 01 00 C3  // a.8.u...........
    23D0: 8D 9C AC 03 B1 02 E8 16 0D C3 51 8D 9C AC 03 32  // ..........Q....2
    23E0: C9 E8 0B 0D 59 C3 51 8D 9C AC 03 B1 01 E8 FF 0C  // ....Y.Q.........
    23F0: 59 C3 8D 9C 32 01 E8 52 0D 24 07 75 15 B9 64 00  // Y...2..R.$.u..d.
    2400: 8D 9C AC 03 E8 44 0D 3C 02 74 03 B9 90 01 E8 CA  // .....D.<.t......
    2410: 09 C3 32 E4 B1 04 33 D2 F6 E1 8B C8 E8 C7 09 C3  // ..2...3.........
    2420: 51 8D 5C 14 E8 24 0D 66 C1 E0 10 E8 A4 01 59 C3  // Q.\..$.f......Y.
    2430: 53 8D 9C 44 01 E8 13 0D 5B C3 53 66 50 8D 9C 44  // S..D....[.SfP..D
    2440: 01 E8 07 0D 8B C1 E8 62 0C 66 58 5B C3 53 51 8D  // .......b.fX[.SQ.
    2450: 9C 44 01 8A E8 B1 03 E8 95 0C 59 5B C3 33 C9 E8  // .D........Y[.3..
    2460: 2D 09 38 C1 73 05 B5 00 E8 8C 00 B5 00 E8 80 00  // -.8.s...........
    2470: FE C1 E8 1A 09 38 C1 72 E6 B1 14 8A E9 E8 12 09  // .....8.r........
    2480: 38 C1 74 05 B5 03 E8 E3 01 FE C1 E8 FB 08 04 14  // 8.t.............
    2490: 38 C1 76 E7 C3 83 EC 0C 8B EC 0B F6 74 1E E8 02  // 8.v.........t...
    24A0: F8 66 C1 C8 10 66 89 46 00 8D 5C 04 E8 9C 0C 66  // .f...f.F..\....f
    24B0: 89 46 04 8D 5C 08 E8 92 0C 88 46 0A 89 4E 08 8C  // .F..\.....F..N..
    24C0: D0 66 C1 E0 10 8B C4 BB 2B 00 E8 D8 07 83 C4 0C  // .f......+.......
    24D0: C3 83 EC 04 8B EC B0 02 88 46 01 88 4E 00 8C D0  // .........F..N...
    24E0: 66 C1 E0 10 8B C4 BB 25 00 E8 B9 07 83 C4 04 C3  // f......%........
    24F0: BB 23 00 E8 08 00 C3 BB 17 00 E8 01 00 C3 83 EC  // .#..............
    2500: 04 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 E8 94  // ....N...f.......
    2510: 07 83 C4 04 C3 BB 22 00 E8 E3 FF C3 BB 27 00 E8  // ......"......'..
    2520: DC FF C3 BB 2C 00 E8 D5 FF C3 E8 1E 0C 66 A9 00  // ....,........f..
    2530: 00 FF FF 74 40 83 EC 18 8B EC 55 51 B9 04 00 83  // ...t@.....UQ....
    2540: C3 02 E8 06 0C 66 89 46 00 83 C5 04 83 C3 04 E2  // .....f.F........
    2550: F1 83 C3 04 E8 F4 0B 66 C1 C8 10 66 89 46 00 59  // .......f...f.F.Y
    2560: 5D 88 4E 14 8C D0 66 C1 E0 10 8B C4 BB 31 00 E8  // ].N...f......1..
    2570: 33 07 83 C4 18 C3 E8 3F EE 8D 9C D0 02 E8 CB 0B  // 3......?........
    2580: 8A E8 BB 21 00 E8 76 FF C3 8D 9C 3C 03 E8 BB 0B  // ...!..v....<....
    2590: 8A F8 E8 01 EE 8A DD 53 8D 9C 42 03 E8 AC 0B 8A  // .......S..B.....
    25A0: E8 5B E8 13 EE E8 B0 EE E8 96 04 75 02 B3 01 83  // .[.........u....
    25B0: EC 04 8B EC 88 4E 00 88 7E 01 88 5E 02 88 6E 03  // .....N..~..^..n.
    25C0: 8C D0 66 C1 E0 10 8B C4 BB 2A 00 E8 D7 06 83 C4  // ..f......*......
    25D0: 04 C3 83 EC 10 8B EC 66 3D F0 FF FF 03 76 06 66  // .......f=....v.f
    25E0: B8 F0 FF FF 03 66 8B C8 66 33 C0 66 89 46 04 66  // .....f..f3.f.F.f
    25F0: 89 46 00 66 89 46 08 66 B8 00 00 00 D0 66 0B C1  // .F.f.F.f.....f..
    2600: 66 89 46 0C 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8  // f.F...f......5..
    2610: 93 06 83 C4 10 C3 83 EC 08 8B EC 89 4E 00 66 89  // ............N.f.
    2620: 56 02 89 5E 06 8C D0 66 C1 E0 10 8B C4 BB 2D 00  // V..^...f......-.
    2630: E8 72 06 83 C4 08 C3 3D C0 7F 76 04 B8 C0 7F C3  // .r.....=..v.....
    2640: 83 C0 3F 24 C0 C3 51 E8 01 0B 66 33 D2 B9 0A 00  // ..?$..Q...f3....
    2650: F7 F1 8B C8 E8 F4 0A 03 C1 66 25 FF FF 00 00 59  // .........f%....Y
    2660: 3D 10 27 73 03 B8 10 27 C3 32 D2 C3 80 FD 02 75  // =.'s...'.2.....u
    2670: 25 E8 4E EE 66 BB 00 08 00 00 E8 9A 00 E8 42 EE  // %.N.f.........B.
    2680: 66 BB 03 08 00 00 E8 8E 00 66 33 D2 66 BB 01 08  // f........f3.f...
    2690: 00 00 E8 82 00 C3 80 FD 03 75 10 66 33 C0 8A C1  // .........u.f3...
    26A0: 66 33 D2 66 BB FF 00 00 00 EB 36 51 33 D2 E8 E5  // f3.f......6Q3...
    26B0: EC 8A D5 66 C1 E2 10 E8 1E ED 8A F2 8A D1 66 8B  // ...f..........f.
    26C0: C2 66 0D 00 00 00 80 E8 59 ED 80 FB 04 76 06 66  // .f......Y....v.f
    26D0: 0D 00 00 00 08 E8 8F ED E8 DD EC 66 33 DB 8A D9  // ...........f3...
    26E0: 59 83 EC 10 8B EC 66 89 46 04 66 89 5E 08 66 8B  // Y.....f.F.f.^.f.
    26F0: C2 66 33 D2 66 BB 64 00 00 00 66 F7 E3 66 89 46  // .f3.f.d...f..f.F
    2700: 00 BB 0C 00 8C D0 66 C1 E0 10 8B C4 E8 96 05 8B  // ......f.........
    2710: EC B3 01 83 C4 10 C3 83 EC 10 8B EC 66 89 56 00  // ............f.V.
    2720: 66 89 5E 04 BB 2E 00 8C D0 66 C1 E0 10 8B C4 E8  // f.^......f......
    2730: 73 05 B3 01 83 C4 10 C3 C3 53 51 66 50 B9 68 74  // s........SQfP.ht
    2740: 80 FB 03 74 0B B9 A0 8C 80 FB 00 75 03 B9 78 69  // ...t.......u..xi
    2750: 66 33 D2 8B D1 66 58 59 5B C3 66 52 B3 00 66 F7  // f3...fXY[.fR..f.
    2760: C2 00 00 FF FF 75 1A 80 FD 13 74 15 80 FD 14 74  // .....u....t....t
    2770: 10 B3 01 80 FD 0E 74 09 B3 03 80 F9 03 74 02 B3  // ......t......t..
    2780: 02 66 5A C3 B5 11 80 FA 23 74 07 80 FA 22 74 02  // .fZ.....#t..."t.
    2790: B5 00 C3 B5 02 80 FA 23 74 07 80 FA 22 74 02 B3  // .......#t..."t..
    27A0: 01 C3 32 C9 80 FD 00 75 08 C7 46 00 0B 01 B1 01  // ..2....u..F.....
    27B0: C3 50 33 C0 E8 73 01 04 14 89 46 00 58 B1 01 C3  // .P3..s....F.X...
    27C0: C3 8B DA B7 22 80 FE 21 74 02 B7 21 C3 0C 01 C3  // ...."..!t..!....
    27D0: E8 78 09 66 C1 E8 10 0B C0 74 1C 53 83 C3 06 E8  // .x.f.....t.S....
    27E0: 69 09 5B 3D E0 01 72 0F 53 83 C3 18 E8 5C 09 5B  // i.[=..r.S....\.[
    27F0: A8 80 75 03 0C 01 C3 32 C0 C3 B5 0C C3 B5 02 C3  // ..u....2........
    2800: 50 E8 26 01 B1 03 0A C0 74 04 B1 08 02 C8 58 C3  // P.&.....t.....X.
    2810: 80 FA 22 75 05 C7 46 00 78 69 C3 E8 EF 00 80 FD  // .."u..F.xi......
    2820: FF 74 35 83 EC 0C 8B EC 88 4E 01 88 6E 00 80 F9  // .t5......N..n...
    2830: 0F 75 05 E8 24 00 EB 0F 80 F9 10 75 0A 8D 9C 48  // .u..$......u...H
    2840: 03 E8 07 09 88 46 02 8C D0 66 C1 E0 10 8B C4 BB  // .....F...f......
    2850: 04 00 E8 50 04 83 C4 0C C3 C3 66 53 E8 A4 EB 66  // ...P......fS...f
    2860: 8B C2 66 33 D2 66 BB 8C 0A 00 00 66 F7 F3 66 5B  // ..f3.f.....f..f[
    2870: 8A E8 88 6E 09 8D 9C 40 03 E8 CF 08 88 46 02 88  // ...n...@.....F..
    2880: 66 03 66 C1 E8 10 88 46 08 E8 66 EB 66 89 56 04  // f.f....F..f.f.V.
    2890: C3 83 EC 20 8B EC 80 F9 04 75 0A 88 4E 01 32 C0  // ... .....u..N.2.
    28A0: 88 46 00 EB 56 E8 30 EB E8 7F 00 88 46 00 88 4E  // .F..V.0.....F..N
    28B0: 01 E8 A4 EB 88 56 0A 80 F9 01 74 18 80 F9 0B 75  // .....V....t....u
    28C0: 3A 8D 9C 5C 03 E8 83 08 88 46 02 E8 24 EB 66 89  // :..\.....F..$.f.
    28D0: 56 04 EB 27 E8 3D EB 88 6E 08 E8 15 EB 66 89 56  // V..'.=..n....f.V
    28E0: 04 E8 3F EB 88 5E 03 E8 AC EA 88 6E 02 51 E8 1C  // ..?..^.....n.Q..
    28F0: 00 8A CD B0 01 D2 E0 59 88 46 09 8C D0 66 C1 E0  // .......Y.F...f..
    2900: 10 8B C4 BB 4C 00 E8 9C 03 83 C4 20 C3 8D 9C 3C  // ....L...... ...<
    2910: 03 E8 37 08 32 ED 3C 03 74 0C 3C 09 72 09 3C 0E  // ..7.2.<.t.<.r.<.
    2920: 77 05 2C 08 8A E8 C3 B5 FF C3 52 32 C0 80 EE 21  // w.,.......R2...!
    2930: 80 FA 1E 74 10 B0 02 80 FA 20 74 09 B0 04 80 FA  // ...t..... t.....
    2940: 21 74 02 B0 06 02 C6 5A C3 C3 83 EC 08 8B EC 89  // !t.....Z........
    2950: 7E 00 89 5E 02 89 56 04 89 4E 06 8C D0 66 C1 E0  // ~..^..V..N...f..
    2960: 10 8B C4 BB 36 00 E8 3C 03 8B EC 8B 5E 02 8A 7E  // ....6..<....^..~
    2970: 01 83 C4 08 C3 56 33 F6 66 F7 C2 00 00 80 00 75  // .....V3.f......u
    2980: 0A 50 33 C0 8A C6 8B F0 32 F6 58 53 BB 04 1F E8  // .P3.....2.XS....
    2990: 19 07 66 8B C2 BB 00 1F E8 10 07 5B 66 F7 C2 00  // ..f........[f...
    29A0: 00 10 00 75 02 33 DB 8B D3 66 C1 E2 10 BA 00 1F  // ...u.3...f......
    29B0: 83 EC 08 8B EC 66 89 56 00 88 4E 04 8A C5 FE C8  // .....f.V..N.....
    29C0: 88 46 07 C6 46 05 00 C6 46 06 00 8C D0 66 C1 E0  // .F..F...F....f..
    29D0: 10 8B C4 BB 4E 00 E8 CC 02 8B EC 8A 5E 05 8A 7E  // ....N.......^..~
    29E0: 06 83 C4 08 0A DB 74 32 51 B9 90 01 80 FB 20 74  // ......t2Q..... t
    29F0: 05 80 FB 80 75 13 B9 0A 00 8B C6 0A C0 74 0A B9  // ....u........t..
    2A00: 90 01 3C 01 74 03 B9 E8 03 E8 CF 03 59 8B C6 FE  // ..<.t.......Y...
    2A10: C4 8B F0 80 FC 06 76 98 0A DB 5E C3 8D 5C 04 E8  // ......v...^..\..
    2A20: 29 07 8B D0 B5 02 E8 14 00 74 11 B5 01 80 FA 13  // )........t......
    2A30: 75 0A E8 61 00 80 FA 13 75 02 B5 02 C3 80 FA 14  // u..a....u.......
    2A40: C3 E8 F9 FF 74 03 80 FA 0E C3 80 FA 05 C3 80 FA  // ....t...........
    2A50: 02 74 03 80 FA 04 C3 80 FA 01 74 03 80 FA 02 C3  // .t........t.....
    2A60: 80 FA 02 75 03 B2 01 C3 80 FA 04 75 03 B2 03 C3  // ...u.......u....
    2A70: C3 B5 08 E8 D8 FF 74 02 B5 04 C3 8D 5C 09 E8 CA  // ......t.....\...
    2A80: 06 8A C8 0A C9 75 03 32 C0 C3 B5 02 E8 DA 02 8A  // .....u.2........
    2A90: C5 24 02 D0 E8 C3 8D 5C 08 E8 AF 06 8A D0 B6 01  // .$.....\........
    2AA0: 83 EC 10 8B EC 89 56 02 8C D0 66 C1 E0 10 8B C4  // ......V...f.....
    2AB0: BB 4F 00 E8 EF 01 8B EC 8A 56 04 83 C4 10 C3 53  // .O.......V.....S
    2AC0: 83 C3 4C E8 53 06 5B C3 53 83 C3 4C E8 A5 05 5B  // ..L.S.[.S..L...[
    2AD0: C3 56 E8 96 01 8B 44 38 83 7D 20 00 5E C3 52 50  // .V....D8.} .^.RP
    2AE0: 0F BC D8 32 FF 80 FB 01 75 05 BB 00 24 EB 0C FE  // ...2....u...$...
    2AF0: CB B8 00 04 F7 E3 05 00 20 8B D8 58 5A C3 57 E8  // ........ ..XZ.W.
    2B00: 56 00 74 0A 8B 5D 02 E8 08 00 0B DB 5F C3 33 DB  // V.t..]......_.3.
    2B10: 5F C3 52 51 0B DB 74 1B 56 E8 36 01 03 DE 5E 33  // _.RQ..t.V.6...^3
    2B20: C9 8A 4F 01 80 3F FF 74 08 3A 07 74 06 03 D9 EB  // ..O..?.t.:.t....
    2B30: F0 33 DB 0B DB 59 5A C3 56 51 E8 15 01 32 C9 8D  // .3...YZ.VQ...2..
    2B40: 7C 08 3B 5D 04 74 0C 83 C7 10 FE C1 3A 4C 06 72  // |.;].t......:L.r
    2B50: F1 33 FF 0B FF 59 5E C3 56 51 E8 F5 00 32 C9 8D  // .3...Y^.VQ...2..
    2B60: 7C 08 3B 1D 74 0C 83 C7 10 FE C1 3A 4C 06 72 F2  // |.;.t......:L.r.
    2B70: 33 FF 0B FF 59 5E C3 56 51 E8 D6 00 32 C9 8D 7C  // 3...Y^.VQ...2..|
    2B80: 08 3B 45 0C 74 0C 83 C7 10 FE C1 3A 4C 06 72 F1  // .;E.t......:L.r.
    2B90: 33 FF 0B FF 59 5E C3 57 50 E8 DB FF 8A C3 8B 5D  // 3...Y^.WP......]
    2BA0: 02 E8 6E FF 58 5F C3 53 32 C9 B3 01 E8 E8 FF 74  // ..n.X_.S2......t
    2BB0: 03 8A 4F 02 0A C9 5B C3 53 32 ED B3 02 E8 D7 FF  // ..O...[.S2......
    2BC0: 74 03 8A 6F 02 0A ED 5B C3 50 57 8B DA E8 68 FF  // t..o...[.PW...h.
    2BD0: 75 04 33 DB EB 0D B0 14 8B 5D 08 E8 34 FF 74 F2  // u.3......]..4.t.
    2BE0: 8B 5F 02 5F 58 C3 66 50 53 51 57 8D 1C 66 25 FF  // ._._X.fPSQW..f%.
    2BF0: FF 00 00 E8 B5 04 8B D8 E8 3B 00 23 C3 74 31 E8  // .........;.#.t1.
    2C00: 75 FF 0B FF 74 2A 66 50 66 8B 45 04 8D 5C 0C E8  // u...t*fPf.E..\..
    2C10: 99 04 66 33 C0 8B 05 8D 5C 04 E8 8E 04 66 58 E8  // ..f3....\....fX.
    2C20: 85 FF E8 93 FF 8D 5C 08 66 33 C0 8B C1 E8 7B 04  // ......\.f3....{.
    2C30: 5F 59 5B 66 58 C3 56 E8 18 00 8B 44 04 5E C3 56  // _Y[fX.V....D.^.V
    2C40: E8 0F 00 89 44 04 5E C3 C3 BF E6 02 8B 3D 8B 7D  // ....D.^......=.}
    2C50: 0C C3 BE E6 02 8B 34 8B 74 30 C3 1E 0E 1F BF E6  // ......4.t0......
    2C60: 02 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE E6 02 8B 34  // ..=.}..........4
    2C70: 8B 74 10 C3 BF E6 02 8B 3D 8B 7D 26 83 C7 04 C3  // .t......=.}&....
    2C80: BE E6 02 8B 34 8B 74 1A C3 BE E6 02 8B 34 8B 74  // ....4.t......4.t
    2C90: 3A C3 BF E6 02 8B 3D 8B 7D 0A 83 C7 04 B9 07 00  // :.....=.}.......
    2CA0: C3 E8 01 00 CB 83 EC 06 8B EC 89 46 00 66 33 C0  // ...........F.f3.
    2CB0: C6 46 04 00 89 46 02 06 52 8A D3 8B C5 E8 CD 16  // .F...F..R.......
    2CC0: 5A 07 83 C4 06 C3 E8 80 FF 66 F7 45 10 01 00 00  // Z........f.E....
    2CD0: 00 C3 50 E8 73 FF B8 01 00 09 45 10 58 C3 E8 68  // ..P.s.....E.X..h
    2CE0: FF 88 45 10 C3 66 53 83 EC 48 8B EC 66 89 5E 00  // ..E..fS..H..f.^.
    2CF0: 66 89 4E 04 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8  // f.N...f.........
    2D00: A3 FF 83 C4 48 66 5B E8 6A 01 E8 A4 01 83 EC 1C  // ....Hf[.j.......
    2D10: 8B EC C6 46 01 07 8C D0 66 C1 E0 10 8B C4 BB 0D  // ...F....f.......
    2D20: 00 E8 81 FF 83 C4 1C E8 0E 00 BB 04 00 E8 8F FD  // ................
    2D30: 66 C1 E8 10 E8 A7 FF C3 83 EC 1C 8B EC C6 46 01  // f.............F.
    2D40: 08 8C D0 66 C1 E0 10 8B C4 BB 0D 00 E8 56 FF 83  // ...f.........V..
    2D50: C4 1C C3 E8 F3 FE 66 8B 5D 08 66 8B 4D 0C C3 56  // ......f.].f.M..V
    2D60: E8 26 FF 66 8B 44 08 5E C3 83 EC 04 8B EC 89 4E  // .&.f.D.^.......N
    2D70: 00 8C D0 66 C1 E0 10 8B C4 BB 38 00 E8 26 FF 8B  // ...f......8..&..
    2D80: EC 8A 6E 02 83 C4 04 C3 C3 B0 06 C3 B0 01 C3 B0  // ..n.............
    2D90: 05 C3 B0 08 C3 53 66 50 66 33 C0 E8 0D 03 83 C3  // .....SfPf3......
    2DA0: 04 E2 F8 66 58 5B C3 32 C0 C3 FC E8 9D 03 66 C1  // ...fX[.2......f.
    2DB0: CB 10 E8 F6 02 66 C1 CB 10 66 81 C3 04 00 04 00  // .....f...f......
    2DC0: E2 E9 C3 FC 66 AD E8 E2 02 83 C3 04 E2 F6 C3 FC  // ....f...........
    2DD0: E8 78 03 66 AB 83 C3 04 E2 F6 C3 66 50 B8 64 00  // .x.f.......fP.d.
    2DE0: E8 10 00 66 58 C3 66 50 B8 50 C3 D1 E1 E8 03 00  // ...fX.fP.P......
    2DF0: 66 58 C3 52 F7 E1 8B CA E8 69 01 66 53 8B D9 66  // fX.R.....i.fS..f
    2E00: C1 E3 10 8B D8 66 B8 04 B1 03 00 B2 00 66 EF B2  // .....f.......f..
    2E10: 04 66 33 C0 66 EF 66 B8 08 B1 03 00 B2 00 66 EF  // .f3.f.f.......f.
    2E20: B2 04 66 ED 33 C9 66 03 D8 73 0A 66 ED 66 A9 00  // ..f.3.f..s.f.f..
    2E30: 00 00 80 75 F6 66 ED 66 3B C3 73 0C 66 C1 E8 10  // ...u.f.f;.s.f...
    2E40: 3B C1 72 04 8B C8 EB ED 66 5B 5A C3 BB 42 EC E8  // ;.r.....f[Z..B..
    2E50: C7 02 66 33 D2 66 BB 64 00 00 00 66 F7 F3 C3 66  // ..f3.f.d...f...f
    2E60: 50 53 BB 07 00 E8 57 FC 25 00 02 35 00 02 0B C0  // PS....W.%..5....
    2E70: 5B 66 58 C3 66 51 B3 01 E8 C4 00 E8 02 FE 66 33  // [fX.fQ........f3
    2E80: C9 8B 4C 08 66 C1 E0 0A 0B C9 75 03 B9 20 00 66  // ..L.f.....u.. .f
    2E90: 2B C1 E8 EB FD 66 89 44 04 89 4C 08 66 59 C3 56  // +....f.D..L.fY.V
    2EA0: 1E 0E 1F E8 DA FD 66 8B 44 04 66 C1 E0 0A 1F 5E  // ......f.D.f....^
    2EB0: C3 C3 BE E6 02 8B 34 8B 74 1E 83 C6 04 B9 1C 00  // ......4.t.......
    2EC0: C3 56 E8 A6 FD 8A 6C 33 5E C3 56 E8 9D FD 53 81  // .V....l3^.V...S.
    2ED0: C3 09 01 E8 75 02 8A E8 5B 53 81 C3 00 01 E8 6A  // ....u...[S.....j
    2EE0: 02 5B 8A C5 66 89 44 34 5E C3 56 E8 7D FD 66 8B  // .[..f.D4^.V.}.f.
    2EF0: 44 34 53 81 C3 08 01 B1 01 8A E8 E8 F1 01 5B 53  // D4S...........[S
    2F00: 81 C3 00 01 B1 01 8A EC E8 E4 01 5B 53 81 C3 02  // ...........[S...
    2F10: 01 66 C1 E8 10 E8 AB 01 5B 5E C3 56 E8 4C FD 8B  // .f......[^.V.L..
    2F20: FE 83 C7 04 5E C3 56 E8 41 FD 8A 44 24 80 FD 00  // ....^.V.A..D$...
    2F30: 74 05 88 6C 33 0C 02 88 44 24 5E C3 32 C0 C3 66  // t..l3...D$^.2..f
    2F40: 53 83 EC 04 8B EC 8C D0 66 C1 E0 10 8B C4 66 89  // S.......f.....f.
    2F50: 5E 00 BB 06 00 E8 4D FD 8B EC 66 8B 46 00 83 C4  // ^.....M...f.F...
    2F60: 04 66 5B C3 66 50 8C C8 3D 00 C0 75 0C BA C3 03  // .f[.fP..=..u....
    2F70: EC 8A F0 0A F6 74 02 EB 0E 53 2E 8B 1E 14 00 B2  // .....t...S......
    2F80: 20 E8 D6 00 8A F4 5B 32 D2 66 ED 66 58 C3 2E 8B  //  .....[2.f.fX...
    2F90: 1E 14 00 C3 0B C9 75 1A 4B 74 16 43 3B DA 77 09  // ......u.Kt.C;.w.
    2FA0: 8B C8 8B C2 2B D2 F7 F3 91 F7 F3 8B DA 8B D1 2B  // ....+..........+
    2FB0: C9 C3 3B CA 72 1A 75 10 3B D8 77 0C 2B C3 8B D8  // ..;.r.u.;.w.+...
    2FC0: 2B C9 2B D2 B8 01 00 C3 2B C9 2B DB 93 87 CA C3  // +.+.....+.+.....
    2FD0: 55 56 2B F6 8B EE 03 DB 13 C9 72 11 45 3B CA 72  // UV+.......r.E;.r
    2FE0: F5 77 04 3B D8 76 EF F8 13 F6 4D 78 20 D1 D9 D1  // .w.;.v....Mx ...
    2FF0: DB 2B C3 1B D1 F5 72 F0 03 F6 4D 78 0C D1 E9 D1  // .+....r...Mx....
    3000: DB 03 C3 13 D1 73 F1 EB DF 03 C3 13 D1 8B D8 8B  // .....s..........
    3010: CA 8B C6 33 D2 5E 5D C3 93 50 92 0B C0 74 02 F7  // ...3.^]..P...t..
    3020: E2 91 0B C0 74 04 F7 E3 03 C8 58 F7 E3 03 D1 C3  // ....t.....X.....
    3030: 52 66 50 B4 80 8A C7 66 C1 E0 10 8A E3 8A C2 24  // RfP....f.......$
    3040: FC BA F8 0C 66 EF 66 58 5A C3 52 BA FC 0C 66 ED  // ....f.fXZ.R...f.
    3050: 5A C3 52 BA FC 0C 66 EF 5A C3 E8 31 FF 9C FA E8  // Z.R...f.Z..1....
    3060: CE FF E8 E5 FF 9D C3 E8 24 FF 9C FA E8 C1 FF E8  // ........$.......
    3070: E0 FF 9D C3 52 66 53 66 50 E8 06 00 66 58 66 5B  // ....RfSfP...fXf[
    3080: 5A C3 66 C1 E3 10 66 C1 EB 0E E8 D7 FE E8 93 01  // Z.f...f.........
    3090: C3 66 50 66 C1 E3 10 66 C1 EB 10 E8 01 FE 66 03  // .fPf...f......f.
    30A0: D8 66 81 CB 00 00 00 80 66 58 C3 52 66 53 E8 04  // .f......fX.RfS..
    30B0: 00 66 5B 5A C3 66 50 E8 AA FE E8 D4 FF E8 63 01  // .f[Z.fP.......c.
    30C0: 66 58 C3 52 51 66 53 66 50 8A CB 80 E3 FC 80 E1  // fX.RQfSfP.......
    30D0: 03 C0 E1 03 E8 8D FE E8 B7 FF E8 2D 01 66 D3 C8  // ...........-.f..
    30E0: 58 50 66 D3 C0 E8 3B 01 66 58 66 5B 59 5A C3 66  // XPf...;.fXf[YZ.f
    30F0: 50 51 C0 E1 03 E8 53 00 66 D3 C8 8A C5 66 D3 C0  // PQ....S.f....f..
    3100: E8 A8 FF 59 66 58 C3 66 50 51 C0 E1 03 E8 3B 00  // ...YfX.fPQ....;.
    3110: 66 D3 C8 59 8A E8 66 58 C3 E8 5F 00 C3 E8 44 FE  // f..Y..fX.._...D.
    3120: 66 C1 E3 10 66 C1 EB 0E E8 DF 00 C3 E8 35 FE 66  // f...f........5.f
    3130: C1 E3 02 E8 D4 00 C3 52 66 53 E8 04 00 66 5B 5A  // .......RfS...f[Z
    3140: C3 E8 20 FE E8 4A FF E8 C0 00 C3 51 66 52 8A EB  // .. ..J.....QfR..
    3150: 8A CB 80 E1 03 C0 E1 03 80 E3 FC E8 D9 FF 80 F9  // ................
    3160: 00 74 14 66 8B D0 83 C3 04 E8 CB FF 83 EB 04 66  // .t.f...........f
    3170: 92 66 0F AD D0 8A DD 66 5A 59 C3 52 66 53 E8 9C  // .f.....fZY.RfS..
    3180: FF 66 5B 5A C3 52 66 53 E8 A1 FF 66 5B 5A C3 66  // .f[Z.RfS...f[Z.f
    3190: 50 55 52 66 50 8B EC 8B 56 0C 89 56 08 E8 C4 FD  // PURfP...V..V....
    31A0: B2 00 66 ED 66 89 46 0A 66 58 5A 5D C3 66 50 55  // ..f.f.F.fXZ].fPU
    31B0: 52 66 50 8B EC 8B 56 0C 89 56 08 E8 A6 FD 2E A1  // RfP...V..V......
    31C0: 35 03 B2 18 EF B2 00 66 ED 66 89 46 0A 66 58 5A  // 5......f.f.F.fXZ
    31D0: 5D C3 66 50 55 52 8B EC E8 89 FD B2 00 66 8B 46  // ].fPUR.......f.F
    31E0: 0A 66 EF 8B 56 08 89 56 0C 66 8B 46 04 66 89 46  // .f..V..V.f.F.f.F
    31F0: 08 5A 5D 66 58 66 58 C3 66 50 52 E8 66 FD B2 18  // .Z]fXfX.fPR.f...
    3200: 66 ED 2E A3 35 03 5A 66 58 C3 66 81 FB FF 00 00  // f...5.ZfX.f.....
    3210: 00 77 04 8A D3 EB 09 66 8B C3 B2 00 66 EF B2 04  // .w.....f....f...
    3220: 66 ED C3 66 81 FB FF 00 00 00 77 04 8A D3 EB 0A  // f..f......w.....
    3230: 66 93 B2 00 66 EF 66 93 B2 04 66 EF C3 C3 C3 55  // f...f.f...f....U
    3240: 8B EC 53 51 8B F0 26 8B 5C 14 26 8B 4C 16 E8 28  // ..SQ..&.\.&.L..(
    3250: 00 8D 66 FC 59 5B 5D C3 53 51 8B F0 26 8B 5C 24  // ..f.Y[].SQ..&.\$
    3260: 33 C9 E8 14 00 59 5B C3 55 8B EC 53 51 8B F0 26  // 3....Y[.U..SQ..&
    3270: 8B 5C 08 26 8B 4C 0A EB D5 52 56 57 C8 06 00 00  // .\.&.L...RVW....
    3280: 8B F0 89 4E FE 8C D0 8E C0 26 8B 7C 26 8A 45 01  // ...N.....&.|&.E.
    3290: 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA  // 2.. .+..........
    32A0: D1 D8 E2 FA 8A 4D 03 32 ED 8B FA E3 06 D1 E0 D1  // .....M.2........
    32B0: D7 E2 FA F7 D0 F7 D7 26 21 44 1C 26 21 7C 1E 8C  // .......&!D.&!|..
    32C0: D0 8E C0 26 8B 7C 26 8A 4D 01 32 ED B8 20 00 2B  // ...&.|&.M.2.. .+
    32D0: C1 8B C8 66 C7 46 FA FF FF FF FF E3 08 D1 6E FC  // ...f.F........n.
    32E0: D1 5E FA E2 F8 8A 4D 02 32 ED 8B C3 8B 56 FE E3  // .^....M.2....V..
    32F0: 06 D1 EA D1 D8 E2 FA 23 46 FA 23 56 FC 8A 4D 03  // .......#F.#V..M.
    3300: 32 ED E3 06 D1 E0 D1 D2 E2 FA 26 09 44 1C 26 09  // 2.........&.D.&.
    3310: 54 1E C9 5F 5E 5A C3 55 8B EC 53 51 52 57 50 8B  // T.._^Z.U..SQRWP.
    3320: D8 26 8B 7F 26 8A 45 01 32 E4 B9 20 00 2B C8 B8  // .&..&.E.2.. .+..
    3330: FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 02 88  // .............M..
    3340: 4E F6 C6 46 F7 00 8B FA 8B 4E F6 E3 06 D1 E0 D1  // N..F.....N......
    3350: D7 E2 FA 26 09 47 1C 26 09 7F 1E 8D 66 F8 5F 5A  // ...&.G.&....f._Z
    3360: E9 F1 FE 53 51 52 57 8B D8 8C D0 8E C0 26 8B 77  // ...SQRW......&.w
    3370: 26 8A 4C 01 32 ED B8 20 00 2B C1 8B C8 BE FF FF  // &.L.2.. .+......
    3380: 8B D6 E3 06 D1 EA D1 DE E2 FA 26 8B 7F 26 8A 4D  // ..........&..&.M
    3390: 02 32 ED 8B C6 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7  // .2..............
    33A0: D2 26 21 47 1C 26 21 57 1E 5F E9 CC 05 53 56 8B  // .&!G.&!W._...SV.
    33B0: D8 8C D2 8E C2 26 8B 77 26 80 3C 00 74 73 80 3C  // .....&.w&.<.ts.<
    33C0: 01 75 58 8A 44 01 32 E4 26 83 7F 1E 00 75 4C 26  // .uX.D.2.&....uL&
    33D0: 3B 47 1C 75 46 8A 04 6B F0 03 8A 84 0C 90 26 01  // ;G.uF..k......&.
    33E0: 47 26 8C D0 8E C0 26 8B 77 26 80 3C 09 74 17 8A  // G&....&.w&.<.t..
    33F0: 04 32 E4 6B F0 03 8B C3 FF 94 0A 90 26 8B 77 26  // .2.k........&.w&
    3400: 8A 04 32 E4 EB D1 8B 44 01 26 29 47 26 26 FF 47  // ..2....D.&)G&&.G
    3410: 26 26 8B 47 1C 26 8B 77 1E EB 1A 26 8B 77 26 8A  // &&.G.&.w...&.w&.
    3420: 04 32 E4 6B F0 03 8A 84 0C 90 26 01 47 26 E9 80  // .2.k......&.G&..
    3430: FF 33 C0 33 F6 8B D6 5E 5B C3 53 51 52 56 8B D8  // .3.3...^[.SQRV..
    3440: 8D 77 35 26 8B 54 02 26 89 57 14 26 C7 47 16 00  // .w5&.T.&.W.&.G..
    3450: 00 8B F0 26 8B 47 20 33 D2 26 01 47 14 26 11 54  // ...&.G 3.&.G.&.T
    3460: 16 8C D1 8E C1 26 F6 47 2F 06 0F 85 0A 05 26 80  // .....&.G/.....&.
    3470: 7F 34 00 75 22 26 8B 77 16 26 0B 77 14 75 10 26  // .4.u"&.w.&.w.u.&
    3480: D1 67 08 26 D1 57 0A 26 D1 67 08 26 D1 57 0A 8B  // .g.&.W.&.g.&.W..
    3490: C3 E8 79 11 E9 E1 04 26 8A 47 34 32 E4 05 80 00  // ..y....&.G42....
    34A0: 99 26 89 47 1C 26 89 57 1E 8B C3 E8 FF FE E9 C7  // .&.G.&.W........
    34B0: 04 53 56 8B D8 8D 77 35 26 8A 44 02 32 E4 C1 E0  // .SV...w5&.D.2...
    34C0: 02 26 8B 37 26 8B 34 03 F0 26 8B 47 08 26 8B 5F  // .&.7&.4..&.G.&._
    34D0: 0A 26 89 04 26 89 5C 02 5E 5B C3 53 52 56 8B D8  // .&..&.\.^[.SRV..
    34E0: 8C D0 8D 77 35 8E C0 26 8A 54 02 80 FA 40 73 21  // ...w5..&.T...@s!
    34F0: 26 8B 77 02 32 F6 C1 E2 02 26 8B 74 04 03 F2 26  // &.w.2....&.t...&
    3500: 8B 57 08 26 8B 47 0A 26 89 14 26 89 44 02 E9 7F  // .W.&.G.&..&.D...
    3510: 00 80 FA 41 75 12 26 8B 47 08 26 8B 57 0A 26 89  // ...Au.&.G.&.W.&.
    3520: 47 10 26 89 57 12 EB 68 80 FA 40 75 12 26 8B 47  // G.&.W..h..@u.&.G
    3530: 08 26 8B 57 0A 26 89 47 0C 26 89 57 0E EB 51 80  // .&.W.&.G.&.W..Q.
    3540: FA 42 75 0A 26 8B 47 08 26 89 47 22 EB 42 80 FA  // .Bu.&.G.&.G".B..
    3550: 43 75 0A 26 8A 47 08 26 88 47 33 EB 33 80 FA 46  // Cu.&.G.&.G3.3..F
    3560: 75 12 26 8B 57 08 26 8B 47 0A 26 89 57 18 26 89  // u.&.W.&.G.&.W.&.
    3570: 47 1A EB 1C 80 FA 47 75 0A 26 8B 47 08 26 89 47  // G.....Gu.&.G.&.G
    3580: 24 EB 0D 80 FA 48 75 08 26 8B 47 08 26 89 47 20  // $....Hu.&.G.&.G 
    3590: 5E 5A 5B C3 53 56 8B D8 8D 77 35 26 8A 44 02 32  // ^Z[.SV...w5&.D.2
    35A0: E4 26 89 47 14 26 C7 47 16 00 00 5E 5B C3 53 56  // .&.G.&.G...^[.SV
    35B0: 8B D8 26 8B 77 02 26 8B 74 02 8A 04 32 E4 26 89  // ..&.w.&.t...2.&.
    35C0: 47 14 26 C7 47 16 00 00 26 8B 5F 02 26 FF 47 02  // G.&.G...&._.&.G.
    35D0: 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8B  // ^[.SV..&.w.&.t..
    35E0: 34 26 89 77 14 26 C7 47 16 00 00 26 8B 5F 02 26  // 4&.w.&.G...&._.&
    35F0: 83 47 02 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26  // .G..^[.SV..&.w.&
    3600: 8B 74 02 8B 04 8B 74 02 26 89 47 14 26 89 77 16  // .t....t.&.G.&.w.
    3610: 26 8B 5F 02 26 83 47 02 04 5E 5B C3 53 52 56 8B  // &._.&.G..^[.SRV.
    3620: D8 E8 70 FF 8B F3 26 8B 47 18 26 8B 57 1A D1 EA  // ..p...&.G.&.W...
    3630: D1 D8 D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3  // ......&.G.&.T...
    3640: E8 2B 10 E9 4A FF 53 8B D8 26 8B 5F 02 26 FF 47  // .+..J.S..&._.&.G
    3650: 02 5B C3 53 8B D8 26 8B 5F 02 26 83 47 02 02 5B  // .[.S..&._.&.G..[
    3660: C3 53 56 8B D8 E8 6B FF 8B F3 26 8B 57 20 33 C0  // .SV...k...&.W 3.
    3670: 26 01 57 14 26 11 44 16 8C D2 8E C2 26 8B 47 2E  // &.W.&.D.....&.G.
    3680: 32 C0 80 E4 06 3D 00 02 75 07 32 E4 33 D2 5E 5B  // 2....=..u.2.3.^[
    3690: C3 26 8B 47 2E 32 C0 80 E4 06 3D 00 04 74 EB 26  // .&.G.2....=..t.&
    36A0: 80 7F 34 00 75 08 8B C3 E8 2F 0F 5E 5B C3 26 8A  // ..4.u..../.^[.&.
    36B0: 47 34 32 E4 26 89 47 1C 26 C7 47 1E 00 00 8B C3  // G42.&.G.&.G.....
    36C0: E8 EA FC 5E 5B C3 53 8B D8 E8 E2 FE 26 8B 47 14  // ...^[.S.....&.G.
    36D0: C1 E0 02 26 8B 1F 26 8B 1F 03 D8 26 8B 07 26 8B  // ...&..&....&..&.
    36E0: 57 02 5B C3 EA 36 DF 36 F5 36 44 37 FB 36 13 37  // W.[..6.6.6D7.6.7
    36F0: 2D 37 38 37 3E 37 53 51 56 8B D8 E8 B0 FE 8C D2  // -787>7SQV.......
    3700: 8E C2 26 83 7F 16 00 75 22 26 83 7F 14 40 73 1B  // ..&....u"&...@s.
    3710: 26 8B 77 02 26 8B 5F 14 C1 E3 02 26 8B 44 04 03  // &.w.&._....&.D..
    3720: D8 26 8B 07 26 8B 57 02 E9 7B 05 26 8B 77 14 26  // .&..&.W..{.&.w.&
    3730: 8B 47 16 83 C6 C0 83 D0 FF 75 71 83 FE 08 77 6C  // .G.......uq...wl
    3740: 03 F6 2E FF A4 7C 36 26 8B 47 10 26 8B 57 12 E9  // .....|6&.G.&.W..
    3750: 54 05 26 8B 47 0C 26 8B 57 0E E9 49 05 26 8B 47  // T.&.G.&.W..I.&.G
    3760: 22 EB 4B 26 8A 4F 33 32 ED BB 01 00 33 D2 E3 06  // ".K&.O32....3...
    3770: D1 E3 D1 D2 E2 FA 8B C3 E9 2B 05 26 8A 4F 33 32  // .........+.&.O32
    3780: ED B8 01 00 33 D2 E3 06 D1 E0 D1 D2 E2 FA F7 D0  // ....3...........
    3790: F7 D2 E9 11 05 26 8B 47 18 26 8B 57 1A E9 06 05  // .....&.G.&.W....
    37A0: 26 8B 47 24 EB 08 26 8B 47 20 EB 02 33 C0 33 D2  // &.G$..&.G ..3.3.
    37B0: E9 F3 04 53 56 8B D8 E8 F4 FD 8B F3 26 8B 47 18  // ...SV.......&.G.
    37C0: 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14  // &.W.........&.G.
    37D0: 26 11 54 16 8B C3 E8 16 0E 5E 5B C3 33 C0 33 D2  // &.T......^[.3.3.
    37E0: C3 53 56 8B D8 E8 EB FD 26 8B 77 14 26 03 77 22  // .SV.....&.w.&.w"
    37F0: 8B 04 8B 54 02 5E 5B C3 53 8B D8 26 C6 47 2B 04  // ...T.^[.S..&.G+.
    3800: E8 AB FD 26 8B 47 14 26 8B 57 16 5B C3 53 8B D8  // ...&.G.&.W.[.S..
    3810: 26 C6 47 2B 01 E8 BB FD EB E9 53 8B D8 26 C6 47  // &.G+......S..&.G
    3820: 2B 00 E8 D2 FD EB DC 53 8B D8 83 C3 35 26 8A 5F  // +......S....5&._
    3830: 01 C0 EB 03 80 E3 07 32 FF 03 DB FF 97 9A 8F 5B  // .......2.......[
    3840: C3 53 52 56 8B D8 26 8A 47 2C 32 E4 8B F0 03 F0  // .SRV..&.G,2.....
    3850: 8B C3 FF 94 B6 8F 26 89 47 08 26 89 57 0A 26 8A  // ......&.G.&.W.&.
    3860: 47 2D 32 E4 8B F0 03 F0 8B C3 FF 94 CE 8F 26 89  // G-2...........&.
    3870: 47 04 26 89 57 06 E9 17 FD 53 51 56 8B D8 26 8A  // G.&.W....SQV..&.
    3880: 4F 2B 32 ED 8B F1 8A 8C FE 8F E3 0A 26 D1 6F 06  // O+2.........&.o.
    3890: 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6  // &._...&.O+2.....
    38A0: 02 8B 8C DE 8F 8B B4 E0 8F 26 21 4F 04 26 21 77  // .........&!O.&!w
    38B0: 06 26 8A 4F 2A 32 ED 8B F1 8A 8C 06 90 E3 0A 26  // .&.O*2.........&
    38C0: D1 67 04 26 D1 57 06 E2 F6 26 8B 4F 08 26 8B 77  // .g.&.W...&.O.&.w
    38D0: 0A 26 89 4F 14 26 89 77 16 E9 CA 03 53 51 52 56  // .&.O.&.w....SQRV
    38E0: 57 8B D8 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1  // W......&.G+2....
    38F0: E6 02 26 8A 47 2A 8B F8 8A 8D 06 90 32 ED 8B 84  // ..&.G*......2...
    3900: DE 8F 8B 94 E0 8F E3 06 D1 E0 D1 D2 E2 FA F7 D0  // ................
    3910: F7 D2 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4  // ..&!G.&!W.&.G*2.
    3920: 8B F0 8A 8C 06 90 32 ED E3 0A 26 D1 6F 0A 26 D1  // ......2...&.o.&.
    3930: 5F 08 E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84 DE  // _...&.G+........
    3940: 8F 8B 94 E0 8F 26 21 47 08 26 21 57 0A 26 8A 47  // .....&!G.&!W.&.G
    3950: 2A 32 E4 8B F0 8A 8C 06 90 32 ED E3 0A 26 D1 67  // *2.......2...&.g
    3960: 08 26 D1 57 0A E2 F6 26 8B 47 14 26 8B 57 16 26  // .&.W...&.G.&.W.&
    3970: 09 47 08 26 09 57 0A 5F 5E 5A 59 5B C3 53 51 56  // .G.&.W._^ZY[.SQV
    3980: 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C FE 8F E3 0A  // ..&.O+2.........
    3990: 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED  // &.o.&._...&.O+2.
    39A0: 8B F1 C1 E6 02 8B 8C DE 8F 8B B4 E0 8F 26 21 4F  // .............&!O
    39B0: 04 26 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C 06  // .&!w.&.O*2......
    39C0: 90 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 4F  // ...&.o.&._...&.O
    39D0: 2B 32 ED 8B F1 C1 E6 02 8B 8C DE 8F 8B B4 E0 8F  // +2..............
    39E0: 26 21 4F 08 26 21 77 0A E9 BB 02 51 52 57 8B D8  // &!O.&!w....QRW..
    39F0: 8C D0 8E C0 26 80 7F 2B 00 74 1A 26 8A 47 2C 32  // ....&..+.t.&.G,2
    3A00: E4 8B F0 03 F0 8B C3 FF 94 B6 8F 26 89 47 08 26  // ...........&.G.&
    3A10: 89 57 0A EB 10 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .W...&.G,2......
    3A20: C3 FF 94 C2 8F 26 8A 47 2D 32 E4 8B F0 03 F0 8B  // .....&.G-2......
    3A30: C3 FF 94 CE 8F 26 89 47 04 26 89 57 06 8C D2 8E  // .....&.G.&.W....
    3A40: C2 26 80 7F 2B 00 74 4A 26 8A 47 2B 32 E4 8B F0  // .&..+.tJ&.G+2...
    3A50: C1 E6 02 26 8A 47 2A 8B F8 8A 8D 06 90 32 ED 8B  // ...&.G*......2..
    3A60: 84 DE 8F 8B 94 E0 8F E3 06 D1 E0 D1 D2 E2 FA F7  // ................
    3A70: D0 F7 D2 26 21 47 08 26 21 57 0A 8B C3 E8 F9 FD  // ...&!G.&!W......
    3A80: 26 8B 47 04 26 8B 57 06 26 09 47 08 26 09 57 0A  // &.G.&.W.&.G.&.W.
    3A90: EB 10 26 8B 57 04 26 8B 47 06 26 89 57 08 26 89  // ..&.W.&.G.&.W.&.
    3AA0: 47 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // G.&.G,2.........
    3AB0: AA 8F 5F 5A 59 C3 53 51 52 56 57 8B D8 26 8A 47  // .._ZY.SQRVW..&.G
    3AC0: 2A 32 E4 8B F0 8A 8C 06 90 32 ED E3 0A 26 D1 67  // *2.......2...&.g
    3AD0: 04 26 D1 57 06 E2 F6 8C D0 8E C0 26 8A 47 2B 32  // .&.W.......&.G+2
    3AE0: E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D 06 90  // ......&.G*......
    3AF0: 32 ED 8B 84 DE 8F 8B 94 E0 8F E3 06 D1 E0 D1 D2  // 2...............
    3B00: E2 FA F7 D0 F7 D2 26 09 47 04 26 09 57 06 26 8B  // ......&.G.&.W.&.
    3B10: 47 04 26 8B 57 06 26 21 47 08 26 21 57 0A E9 56  // G.&.W.&!G.&!W..V
    3B20: FE 55 8B EC 51 52 50 8B D8 26 8A 47 2C 32 E4 8B  // .U..QRP..&.G,2..
    3B30: F0 03 F0 8B C3 FF 94 B6 8F 26 89 47 08 26 89 57  // .........&.G.&.W
    3B40: 0A 26 8A 47 2B 88 46 FA 8B C3 E8 DA FC 26 89 47  // .&.G+.F......&.G
    3B50: 04 26 89 57 06 26 8A 4F 2D 32 ED 8B F1 03 F1 8B  // .&.W.&.O-2......
    3B60: C3 FF 94 CE 8F 26 89 47 14 26 89 57 16 8B C3 E8  // .....&.G.&.W....
    3B70: 44 FF 8A 46 FA 32 E4 8B F0 8A 8C FE 8F E3 0A 26  // D..F.2.........&
    3B80: D1 6F 16 26 D1 5F 14 E2 F6 26 8A 57 2B 32 F6 8B  // .o.&._...&.W+2..
    3B90: F2 C1 E6 02 8B 84 DE 8F 8B 94 E0 8F 26 21 47 14  // ............&!G.
    3BA0: 26 21 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C 06 90  // &!W.&.G*2.......
    3BB0: 32 ED E3 0A 26 D1 67 14 26 D1 57 16 E2 F6 26 8B  // 2...&.g.&.W...&.
    3BC0: 47 14 26 8B 57 16 26 09 47 08 26 09 57 0A 26 8A  // G.&.W.&.G.&.W.&.
    3BD0: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 AA 8F 8D 66  // G,2............f
    3BE0: FC 5A 59 5D C3 51 8B D8 E8 56 FC 26 8A 4F 2B 32  // .ZY].Q...V.&.O+2
    3BF0: ED 8B F1 8A 8C FE 8F E3 0A 26 D1 6F 06 26 D1 5F  // .........&.o.&._
    3C00: 04 E2 F6 8B C3 E8 AE FE 26 8A 4F 2C 32 ED 8B F1  // ........&.O,2...
    3C10: 03 F1 8B C3 FF 94 AA 8F 59 C3 8B D8 E8 22 FC 8B  // ........Y...."..
    3C20: C3 E8 55 FC 26 8B 47 04 26 8B 77 06 26 09 47 08  // ..U.&.G.&.w.&.G.
    3C30: 26 09 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // &.w.&.G,2.......
    3C40: FF 94 AA 8F C3 53 56 8B D8 E8 F5 FB 8B C3 E8 28  // .....SV........(
    3C50: FC 26 8B 47 04 26 8B 77 06 26 31 47 08 26 31 77  // .&.G.&.w.&1G.&1w
    3C60: 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 AA  // .&.G,2..........
    3C70: 8F 5E 5B C3 53 51 56 8B D8 E8 C5 FB 8B C3 E8 F8  // .^[.SQV.........
    3C80: FB 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2  // .&.O...&.g.&.W..
    3C90: F6 8B C3 E8 46 FC 26 8A 4F 2C 32 ED 8B F1 03 F1  // ....F.&.O,2.....
    3CA0: 8B C3 FF 94 AA 8F 5E 59 5B C3 53 51 56 8B D8 E8  // ......^Y[.SQV...
    3CB0: 8F FB 8B C3 E8 C2 FB 26 8B 4F 04 E3 0A 26 D1 6F  // .......&.O...&.o
    3CC0: 0A 26 D1 5F 08 E2 F6 EB C8 52 8B D8 E8 72 FB 8B  // .&._.....R...r..
    3CD0: C3 E8 A5 FB 8B F3 26 8B 47 04 26 8B 57 06 26 01  // ......&.G.&.W.&.
    3CE0: 47 08 26 11 54 0A 8B C3 E8 F1 FB 26 8A 47 2C 32  // G.&.T......&.G,2
    3CF0: E4 8B F0 03 F0 8B C3 FF 94 AA 8F 5A C3 52 8B D8  // ...........Z.R..
    3D00: E8 3E FB 8B C3 E8 71 FB 8B F3 26 8B 47 04 26 8B  // .>....q...&.G.&.
    3D10: 57 06 26 29 47 08 26 19 54 0A EB CA 51 52 8B F0  // W.&)G.&.T...QR..
    3D20: E8 1E FB 8B C6 E8 55 FC 26 8B 44 08 26 8B 54 0A  // ......U.&.D.&.T.
    3D30: 26 8B 5C 04 26 8B 4C 06 E8 DD F2 26 89 44 0C 26  // &.\.&.L....&.D.&
    3D40: 89 54 0E 5A 59 C3 52 8B D0 E8 F5 FA 8B C2 E8 2C  // .T.ZY.R........,
    3D50: FC 8B C2 E8 5C 08 5A C3 51 52 57 8B F0 E8 E1 FA  // ....\.Z.QRW.....
    3D60: 8B C6 E8 18 FC 26 8B 44 08 26 8B 54 0A 26 8B 5C  // .....&.D.&.T.&.\
    3D70: 04 26 8B 4C 06 E8 1C F2 26 89 44 0C 26 89 54 0E  // .&.L....&.D.&.T.
    3D80: 8C D7 8E C7 26 8B 44 08 26 8B 54 0A 26 8B 5C 04  // ....&.D.&.T.&.\.
    3D90: 26 8B 4C 06 E8 FD F1 26 89 5C 10 26 89 4C 12 E9  // &.L....&.\.&.L..
    3DA0: 10 FD 52 8B D0 E8 99 FA 8B C2 E8 D0 FB 8B C2 E8  // ..R.............
    3DB0: D3 07 5A C3 51 52 8B D8 E8 86 FA 8B C3 E8 BD FB  // ..Z.QR..........
    3DC0: 8C D1 8E C1 26 8B 47 08 26 8B 57 0A 26 3B 57 06  // ....&.G.&.W.&;W.
    3DD0: 75 0E 26 3B 47 04 75 08 26 C6 47 30 01 5A 59 C3  // u.&;G.u.&.G0.ZY.
    3DE0: 8B D0 26 8B 47 0A 26 3B 47 06 72 08 75 0A 26 3B  // ..&.G.&;G.r.u.&;
    3DF0: 57 04 73 04 33 C0 EB 03 B8 02 00 26 88 47 30 5A  // W.s.3......&.G0Z
    3E00: 59 C3 51 52 57 8B D8 26 8A 47 2C 32 E4 8B F0 03  // Y.QRW..&.G,2....
    3E10: F0 8B C3 FF 94 B6 8F 26 89 47 08 26 89 57 0A 8C  // .......&.G.&.W..
    3E20: D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8  // ...&.G+2........
    3E30: 8A 8D FE 8F 32 ED 8B 84 DE 8F 8B 94 E0 8F E3 06  // ....2...........
    3E40: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21  // ..........&!G.&!
    3E50: 57 0A E9 4D FC 55 8B EC 51 52 57 83 EC 06 8B D8  // W..M.U..QRW.....
    3E60: 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D FE  // &.G+2...........
    3E70: 8F 32 ED 8B 84 DE 8F 89 46 F4 8B 84 E0 8F 89 46  // .2......F......F
    3E80: F6 E3 08 D1 66 F4 D1 56 F6 E2 F8 8B 7E F4 8B 46  // ....f..V....~..F
    3E90: F6 89 46 F8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // ..F.&.G,2.......
    3EA0: FF 94 B6 8F 26 89 47 08 26 89 57 0A 8B C3 E8 47  // ....&.G.&.W....G
    3EB0: F9 26 89 47 04 26 89 57 06 8B C7 F7 D0 8B 56 F6  // .&.G.&.W......V.
    3EC0: F7 D2 26 23 47 08 26 23 57 0A 26 89 47 14 26 89  // ..&#G.&#W.&.G.&.
    3ED0: 57 16 26 21 7F 08 8B 46 F6 26 21 47 0A 8C D1 8D  // W.&!...F.&!G....
    3EE0: 77 35 8E C1 26 80 3C 19 73 12 26 8B 4F 04 E3 0A  // w5..&.<.s.&.O...
    3EF0: 26 D1 67 08 26 D1 57 0A E2 F6 EB 10 26 8B 4F 04  // &.g.&.W.....&.O.
    3F00: E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 21 7F 08  // ..&.o.&._...&!..
    3F10: 8B 46 F8 26 21 47 0A 26 8B 57 14 26 8B 47 16 26  // .F.&!G.&.W.&.G.&
    3F20: 09 57 08 26 09 47 0A 26 8A 47 2C 32 E4 8B F0 03  // .W.&.G.&.G,2....
    3F30: F0 8B C3 FF 94 AA 8F 8D 66 FA 5F E9 A3 FC 52 8B  // ........f._...R.
    3F40: D8 E8 FD F8 8B C3 E8 34 FA 26 8B 47 08 26 8B 57  // .......4.&.G.&.W
    3F50: 0A 26 85 57 06 75 06 26 85 47 04 74 05 B8 03 00  // .&.W.u.&.G.t....
    3F60: EB 03 B8 01 00 26 88 47 30 5A C3 53 51 52 56 8B  // .....&.G0Z.SQRV.
    3F70: D8 26 8A 4F 2D 32 ED 8B F1 03 F1 FF 94 CE 8F 26  // .&.O-2.........&
    3F80: 89 47 04 26 89 57 06 26 8A 47 2B 32 E4 8B F0 8A  // .G.&.W.&.G+2....
    3F90: 8C FE 8F E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26  // .....&.o.&._...&
    3FA0: 8A 47 2B 8B F0 C1 E6 02 8B 84 DE 8F 8B 94 E0 8F  // .G+.............
    3FB0: 26 21 47 04 26 21 57 06 E9 BD F9 52 8B D8 E8 AA  // &!G.&!W....R....
    3FC0: FF 26 8B 47 04 26 8B 57 06 26 89 47 18 26 89 57  // .&.G.&.W.&.G.&.W
    3FD0: 1A 5A C3 51 52 8B D8 E8 91 FF 8C D0 8E C0 26 8B  // .Z.QR.........&.
    3FE0: 77 02 26 8B 74 02 81 3C 5A 5A 74 5B 26 8B 77 02  // w.&.t..<ZZt[&.w.
    3FF0: 26 8B 74 02 80 3C 63 75 E1 26 8B 77 02 26 FF 44  // &.t..<cu.&.w.&.D
    4000: 02 8B C3 E8 21 F8 26 89 47 08 26 89 57 0A 8B C3  // ....!.&.G.&.W...
    4010: E8 FA F7 26 89 47 14 26 89 57 16 8C D1 8E C1 26  // ...&.G.&.W.....&
    4020: 8B 57 04 26 8B 47 06 26 3B 47 0A 75 AD 26 3B 57  // .W.&.G.&;G.u.&;W
    4030: 08 75 A7 26 8B 77 02 26 8B 04 26 03 47 14 8B DE  // .u.&.w.&..&.G...
    4040: 26 89 47 02 5A 59 C3 26 8B 5F 02 26 83 47 02 02  // &.G.ZY.&._.&.G..
    4050: 5A 59 C3 52 57 8B D8 8C D0 8E C0 26 8B 77 02 26  // ZY.RW......&.w.&
    4060: 8B 74 02 8A 54 01 84 D2 75 08 26 C7 47 22 00 00  // .t..T...u.&.G"..
    4070: EB 2F 80 FA FF 75 14 26 8B 77 02 26 8B 3F 26 8B  // ./...u.&.w.&.?&.
    4080: 34 26 2B 75 02 26 89 77 22 EB 16 26 8B 07 E8 E3  // 4&+u.&.w"..&....
    4090: 02 8B F0 8A C2 32 E4 03 C0 03 F0 8B 04 26 89 47  // .....2.......&.G
    40A0: 22 26 8B 5F 02 26 83 47 02 02 5F 5A C3 8B D8 26  // "&._.&.G.._Z...&
    40B0: 80 67 2F F9 26 8B 77 02 26 8B 74 02 8A 44 01 26  // .g/.&.w.&.t..D.&
    40C0: 88 47 34 26 8B 5F 02 26 83 47 02 03 C3 8B D8 26  // .G4&._.&.G.....&
    40D0: 8B 77 02 26 8B 74 02 8B 74 01 26 89 77 20 EB E3  // .w.&.t..t.&.w ..
    40E0: 53 8B D8 26 8A 47 2C 32 E4 24 03 26 80 67 2F F9  // S..&.G,2.$.&.g/.
    40F0: C1 E0 09 26 09 47 2E E9 4F F5 8B D8 26 8B 77 02  // ...&.G..O...&.w.
    4100: 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47  // &.t..D.2.&.G.&.G
    4110: 06 00 00 8B C3 E8 40 04 26 8B 5F 02 26 83 47 02  // ......@.&._.&.G.
    4120: 02 C3 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32  // ....&.w.&.t..D.2
    4130: E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 08 04  // .&.G.&.G........
    4140: EB D6 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44  // ..SV..&.w.&.t..D
    4150: 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8  // .2.&.G.&.G......
    4160: 06 04 E9 86 F4 53 56 8B D8 26 8B 77 02 26 8B 74  // .....SV..&.w.&.t
    4170: 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00 00  // ..D.2.&.G.&.G...
    4180: 8B C3 E8 F0 03 E9 63 F4 53 56 8B D8 26 8B 77 02  // ......c.SV..&.w.
    4190: 8B DE 26 8B 5F 02 8B 5F 01 83 C3 03 26 01 5C 02  // ..&._.._....&.\.
    41A0: 5E 5B C3 51 52 8B D8 26 8B 77 02 26 83 44 02 02  // ^[.QR..&.w.&.D..
    41B0: 26 8B 07 E8 A0 01 8B C8 26 8B 77 28 8A 44 01 32  // &.......&.w(.D.2
    41C0: E4 03 C0 8B F1 03 F0 83 3C 00 74 4F 26 8B 77 28  // ........<.tO&.w(
    41D0: 8A 54 01 32 F6 8B C3 E8 B0 01 26 88 47 31 26 8B  // .T.2......&.G1&.
    41E0: 77 02 26 8B 34 8B 44 04 C1 E8 08 32 E4 24 7F C1  // w.&.4.D....2.$..
    41F0: E8 02 32 E4 24 1F 26 80 67 2F 07 C1 E0 0B 26 09  // ..2.$.&.g/....&.
    4200: 47 2E 26 8B 37 26 8B 47 2E C1 E8 0B C1 E0 02 26  // G.&.7&.G.......&
    4210: 01 04 26 C6 47 32 01 26 89 4F 28 5A 59 C3 53 8B  // ..&.G2.&.O(ZY.S.
    4220: D8 26 C6 47 32 82 5B C3 57 8B D8 8C D6 8E C6 26  // .&.G2.[.W......&
    4230: 80 7F 2C 05 74 0A 26 8A 47 2C 26 3A 47 30 75 1E  // ..,.t.&.G,&:G0u.
    4240: 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B  // &.w.&.t.&...&.=.
    4250: 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F C3 26 8B  // t...&._.&.w._.&.
    4260: 5F 02 26 83 47 02 03 5F C3 53 56 57 8B D8 8C D6  // _.&.G.._.SVW....
    4270: 8E C6 26 80 7F 30 01 74 0A 26 8A 47 30 26 3A 47  // ..&..0.t.&.G0&:G
    4280: 2C 75 20 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26  // ,u &.w.&.t.&...&
    4290: 8B 3D 8B 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F  // .=.t...&._.&.w._
    42A0: 5E 5B C3 26 8B 5F 02 26 83 47 02 03 EB F1 53 56  // ^[.&._.&.G....SV
    42B0: 57 8B D8 8C D0 8E C0 26 80 7F 30 01 74 E5 EB C3  // W......&..0.t...
    42C0: 55 8B EC 53 51 52 57 8B D8 26 8B 77 02 26 8B 74  // U..SQRW..&.w.&.t
    42D0: 02 8A 04 26 C6 47 3D 00 8C D1 8E C1 26 80 7F 3D  // ...&.G=.....&..=
    42E0: 08 73 20 26 8B 77 02 26 8A 57 3D 32 F6 26 8B 7C  // .s &.w.&.W=2.&.|
    42F0: 02 03 FA 8B F3 03 F2 8A 15 26 88 54 35 26 FE 47  // .........&.T5&.G
    4300: 3D EB D5 26 8B 7F 02 8A D0 32 F6 8B F2 C1 E6 02  // =..&.....2......
    4310: 8A 94 2B 90 26 01 55 02 26 8B 7F 28 8A 55 01 80  // ..+.&.U.&..(.U..
    4320: E2 07 26 88 57 2D 26 8B 7F 28 8A 55 01 C0 EA 03  // ..&.W-&..(.U....
    4330: 80 E2 07 26 88 57 2B 26 8B 7F 28 8A 55 01 C0 EA  // ...&.W+&..(.U...
    4340: 06 26 88 57 2A 8A 94 2A 90 26 88 57 2C 8D 66 F8  // .&.W*..*.&.W,.f.
    4350: 5F 5A 59 5B 5D C3 53 56 8B D8 26 8B 77 02 8B C6  // _ZY[].SV..&.w...
    4360: 8B 74 48 03 F0 8B D8 8B 74 1E 8B C6 03 C3 83 C0  // .tH.....t.......
    4370: 04 5E 5B C3 53 56 8B D8 26 8B 77 02 8B C6 8B 74  // .^[.SV..&.w....t
    4380: 48 03 F0 8B D8 8B 74 20 EB E0 8A C2 C3 16 07 55  // H.....t .......U
    4390: 8B EC 53 51 56 57 83 EC 40 8B F8 89 46 B8 E8 D3  // ..SQVW..@...F...
    43A0: FF 8B D8 89 46 E0 26 8B 45 02 8B 5F 2E 03 D8 89  // ....F.&.E.._....
    43B0: 5E DE 83 46 DE 04 8B C7 E8 9B FF 89 46 E0 32 F6  // ^..F........F.2.
    43C0: 8D 46 B8 E8 C4 FF 8A D0 32 F6 03 D2 8B 5E E0 03  // .F......2....^..
    43D0: DA 83 3F 00 0F 84 65 01 88 46 E9 80 66 E7 F9 C6  // ..?...e..F..f...
    43E0: 46 EC 00 C7 46 D8 00 00 66 C7 46 D0 00 00 00 00  // F...F...f.F.....
    43F0: C7 46 F6 00 00 C6 46 EA 01 EB 06 3C 01 0F 85 8C  // .F....F....<....
    4400: 00 8A 56 E9 8A C2 32 E4 03 C0 8B 5E E0 03 D8 83  // ..V...2....^....
    4410: 3F 00 74 75 26 8B 45 02 8B 1F 03 D8 8B 47 04 32  // ?.tu&.E......G.2
    4420: E4 8B C8 83 C1 09 32 ED 80 E1 FE 83 F9 00 74 07  // ......2.......t.
    4430: D1 E9 33 C0 50 E2 FD 8B C4 8B D8 89 46 BA 85 C0  // ..3.P.......F...
    4440: 74 41 83 C0 08 26 89 47 04 8A C2 32 E4 03 C0 8B  // tA...&.G...2....
    4450: 5E E0 03 D8 26 8B 45 02 03 07 8B 5E BA 26 89 07  // ^...&.E....^.&..
    4460: 8B 5E BA 26 8B 07 83 C0 06 26 89 47 02 8B 5E BA  // .^.&.....&.G..^.
    4470: 8B 76 F6 26 89 77 06 8B 5E BA 89 5E F6 C6 46 EA  // .v.&.w..^..^..F.
    4480: 00 EB 0A C6 46 EA 87 EB 04 C6 46 EA 83 8A 46 EA  // ....F.....F...F.
    4490: 32 E4 83 F8 10 0F 8F 99 00 88 66 EA 8A 46 EA 32  // 2.........f..F.2
    44A0: E4 85 C0 0F 8F 83 00 8C D0 8B 5E BA 8E C0 26 8B  // ..........^...&.
    44B0: 5F 02 89 5E E0 8B 5E BA 26 8B 5F 02 80 3F 5B 75  // _..^..^.&._..?[u
    44C0: 4A C6 46 EA 10 8B 5E BA 26 8B 5F 06 89 5E F6 8B  // J.F...^.&._..^..
    44D0: 5E BA 26 8B 1F 8B 47 04 32 E4 8B C8 83 C1 09 32  // ^.&...G.2......2
    44E0: ED 80 E1 FE 03 E1 8B 5E F6 89 5E BA 85 DB 74 AC  // .......^..^...t.
    44F0: 26 8B 1F 8B 47 04 C1 E8 08 32 E4 24 7F C1 E8 02  // &...G....2.$....
    4500: C1 E0 02 8B 5E B8 26 29 07 EB 91 8D 46 B8 E8 AF  // ....^.&)....F...
    4510: FD 8A D0 8D 46 B8 E8 2E 00 8A DA 32 FF C1 E3 02  // ....F......2....
    4520: 8D 46 B8 FF 97 28 90 E9 72 FF 83 7E F6 00 0F 85  // .F...(..r..~....
    4530: C9 FE 80 7E EA 10 74 05 8A 46 EA EB 02 32 C0 8D  // ...~..t..F...2..
    4540: 66 F8 5F 5E E9 0B FE C3 53 51 8B D8 26 8A 4F 04  // f._^....SQ..&.O.
    4550: 32 ED E8 86 E8 59 5B C3 53 51 8B D8 26 8A 4F 04  // 2....Y[.SQ..&.O.
    4560: 32 ED E8 81 E8 59 5B C3 53 8B D8 26 8A 47 04 32  // 2....Y[.S..&.G.2
    4570: E4 E6 80 5B C3 53 51 8B D8 26 8A 4F 04 32 ED E8  // ...[.SQ..&.O.2..
    4580: 9E D7 59 5B C3 53 8B D8 66 50 66 52 66 51 66 26  // ..Y[.S..fPfRfQf&
    4590: 8B 47 08 66 26 8B 57 10 66 26 8B 4F 04 66 F7 F1  // .G.f&.W.f&.O.f..
    45A0: 66 26 89 47 0C 66 26 89 57 10 66 59 66 5A 66 58  // f&.G.f&.W.fYfZfX
    45B0: 5B C3 53 8B D8 66 50 66 52 66 51 66 26 8B 47 08  // [.S..fPfRfQf&.G.
    45C0: 66 26 8B 4F 04 66 F7 E1 66 26 89 47 0C 66 26 89  // f&.O.f..f&.G.f&.
    45D0: 57 10 66 59 66 5A 66 58 5B C3 53 57 8B D8 26 8B  // W.fYfZfX[.SW..&.
    45E0: 5F 14 E8 38 EB 8B D0 66 C1 E8 10 92 5F 5B C3 53  // _..8...f...._[.S
    45F0: 57 8B D8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66  // W..&.G.&.W.....f
    4600: C1 E3 10 8B DA C1 E3 02 E8 36 EB EB D8 53 52 57  // .........6...SRW
    4610: 8B D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B  // ..&.G.&.W..f....
    4620: C2 26 8B 5F 14 E8 5A EA 5F 5A 5B C3 53 52 8B D8  // .&._..Z._Z[.SR..
    4630: 26 8B 47 1C 26 8B 57 1E 92 66 C1 E0 10 8B C2 26  // &.G.&.W..f.....&
    4640: 8B 5F 26 8B 5F 01 E8 39 EA 5A 5B C3 53 52 56 8B  // ._&._..9.Z[.SRV.
    4650: F0 26 8B 5C 26 8B 5F 01 E8 C2 EA 8B D0 66 C1 E8  // .&.\&._......f..
    4660: 10 92 26 89 44 1C 26 89 54 1E 5E 5A 5B C3 53 51  // ..&.D.&.T.^Z[.SQ
    4670: 52 57 8B D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0  // RW..&.G.&.W..f..
    4680: 10 8B C2 8B C8 26 8B 47 14 26 8B 57 16 8B D8 87  // .....&.G.&.W....
    4690: D3 66 C1 E3 10 8B DA C1 E3 02 8B C1 E8 16 EA 5F  // .f............._
    46A0: 5A 59 5B C3 8B D0 66 C1 E8 10 92 C3 1E 06 66 50  // ZY[...f.......fP
    46B0: 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F 0A C0  // fQfRfSfUfVfW....
    46C0: 75 06 E8 07 01 E9 A8 00 3C 01 75 06 E8 37 01 E9  // u.......<.u..7..
    46D0: 9E 00 3C 02 75 06 E8 5F 02 E9 94 00 3C 03 75 0B  // ..<.u.._....<.u.
    46E0: E8 91 03 8B EC 89 5E 0C E9 85 00 3C 04 75 02 EB  // ......^....<.u..
    46F0: 7D 3C 05 75 0A E8 0E 04 8B EC 89 56 10 EB 71 3C  // }<.u.......V..q<
    4700: 06 75 10 E8 8C 03 8B EC 89 5E 0C 89 4E 14 89 56  // .u.......^..N..V
    4710: 10 EB 5D 3C 07 75 02 EB 55 3C 08 75 0A E8 D0 03  // ..]<.u..U<.u....
    4720: 8B EC 88 7E 0D EB 49 3C 09 75 02 EB 41 3C 0A 75  // ...~..I<.u..A<.u
    4730: 10 E8 65 04 8B EC 89 4E 14 89 7E 00 8C 46 1C EB  // ..e....N..~..F..
    4740: 2F 3C 0B 75 02 EB 27 3C 10 75 0A E8 5A 04 8B EC  // /<.u..'<.u..Z...
    4750: 89 5E 0C EB 1B 3C 11 75 02 EB 13 3C 15 75 0F E8  // .^...<.u...<.u..
    4760: 80 04 8B EC 89 5E 0C EB 07 B8 4F 01 EB 02 32 C0  // .....^....O...2.
    4770: 8B EC 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66  // ...F.f_f^f]f[fZf
    4780: 59 66 58 07 1F C3 50 1E 2E 8E 1E 4F 04 8C D8 A3  // YfX...P....O....
    4790: EE 56 A3 FE 56 A3 10 57 2E 8E 1E 47 04 A3 AA 04  // .V..V..W...G....
    47A0: 1F 58 CB 00 30 31 2E 30 30 00 56 45 53 41 00 03  // .X..01.00.VESA..
    47B0: 08 03 00 00 01 00 00 00 00 00 00 00 00 03 02 11  // ................
    47C0: 04 02 00 00 94 01 00 00 3C 47 00 00 B9 3F 00 8B  // ........<G...?..
    47D0: DF 83 C7 04 FC 66 33 C0 F3 66 AB 8B FB BE 42 47  // .....f3..f....BG
    47E0: B9 22 00 F3 A4 06 1F 8C 4F 08 8C 47 10 8C 4F 18  // ."......O..G..O.
    47F0: 8C 4F 1C 8C 4F 20 83 C7 22 89 7F 0E 0E 1F E8 F9  // .O..O ..".......
    4800: D3 B0 4F 32 E4 C3 56 51 57 B9 10 00 66 33 C0 F3  // ..O2..VQW...f3..
    4810: 66 AB 5F 59 8C DB 06 1F C7 05 BB 00 C6 45 02 07  // f._Y.........E..
    4820: C7 45 04 40 00 C7 45 06 40 00 C6 45 1B 06 C6 45  // .E.@..E.@..E...E
    4830: 18 01 C6 45 1A 01 C6 45 1E 01 66 C7 45 3E 00 84  // ...E...E..f.E>..
    4840: D7 17 8E DB E8 CD CC 66 0B C0 0F 84 E1 00 06 1F  // .......f........
    4850: 66 89 45 28 8C C8 66 C1 E0 10 B8 FB 4A 66 89 45  // f.E(..f.....Jf.E
    4860: 0C 81 F9 FF 81 0F 84 C2 00 80 E5 03 B2 01 53 8E  // ..............S.
    4870: DB BE 80 1C E8 A5 D1 5B 06 1F 0F 84 B1 00 53 E8  // .......[......S.
    4880: 21 D4 66 89 45 12 C7 45 16 08 10 8D 5C 0C E8 BA  // !.f.E..E....\...
    4890: E8 66 89 45 1F 66 89 45 36 8D 5C 10 E8 AC E8 66  // .f.E.f.E6.\....f
    48A0: 89 45 23 66 89 45 3A 8D 5C 08 E8 9E E8 0A C0 75  // .E#f.E:.\......u
    48B0: 03 5B EB 7B E8 EC D3 66 C1 E8 10 3D 58 02 74 0D  // .[.{...f...=X.t.
    48C0: 3D 5E 01 74 08 77 0A C6 45 17 08 EB 04 C6 45 17  // =^.t.w..E.....E.
    48D0: 0E 2E A1 49 04 89 45 08 8D 5C 04 E8 6D E8 66 8B  // ...I..E..\..m.f.
    48E0: C8 66 C1 E9 10 D3 E0 89 45 10 89 45 32 B0 08 D2  // .f......E..E2...
    48F0: E0 88 45 19 8D 5C 14 E8 51 E8 5B 3D 00 03 77 2F  // ..E..\..Q.[=..w/
    4900: 53 8B D8 B8 00 03 33 D2 F7 F3 5B FE C8 88 45 1D  // S.....3...[...E.
    4910: 88 45 35 88 45 34 8E DB 57 53 BE 80 1C E8 5D CC  // .E5.E4..WS....].
    4920: 5B 5F 0B C9 75 05 06 1F 83 25 FE 32 E4 EB 02 B4  // [_..u....%.2....
    4930: 03 B0 4F 8E DB 5E C3 00 81 FB FF 81 74 68 0A FF  // ..O..^......th..
    4940: 75 04 8B C3 EB 21 F6 C7 08 75 61 8B CB B2 01 BE  // u....!...ua.....
    4950: 20 1C E8 C7 D0 74 55 E8 28 D3 0A C0 75 0E 66 C1  //  ....tU.(...u.f.
    4960: E8 10 80 E7 80 0A C7 E8 D5 02 EB 3A E8 A4 CE 74  // ...........:...t
    4970: 06 E8 15 CD E8 64 C6 BE 20 1C E8 D4 CB 74 2D E8  // .....d.. ....t-.
    4980: A5 00 E8 2C 00 66 BB 20 1C 00 1C E8 EB D2 BE 00  // ...,.f. ........
    4990: 1C E8 EE D2 66 C1 E8 10 8B D8 32 C0 F6 C7 80 74  // ....f.....2....t
    49A0: 02 B0 40 E8 04 CC B0 4F 32 E4 EB 04 B0 4F B4 03  // ..@....O2....O..
    49B0: C3 56 06 33 C0 8E C0 BE 20 1C E8 E6 D2 8B C8 66  // .V.3.... ......f
    49C0: C1 E8 10 8B D0 C1 E9 03 26 89 0E 4A 04 C1 EA 04  // ........&..J....
    49D0: FE CA 26 88 16 84 04 26 C6 06 51 04 00 26 C6 06  // ..&....&..Q..&..
    49E0: 50 04 00 26 C6 06 49 04 62 26 C7 06 4C 04 00 A0  // P..&..I.b&..L...
    49F0: 26 C6 06 85 04 10 26 C7 06 0C 01 CD 60 8C C8 26  // &.....&.....`..&
    4A00: A3 0E 01 07 5E C3 01 0F 00 0A 00 00 00 00 00 40  // ....^..........@
    4A10: 05 0F FF 00 01 02 03 04 05 06 07 08 09 0A 0B 0C  // ................
    4A20: 0D 0E 0F 01 00 0F 00 FC BA C4 03 B8 00 01 EF B9  // ................
    4A30: 04 00 B4 01 BE 9E 49 AC 86 E0 EF 8A E0 FE C4 E2  // ......I.........
    4A40: F6 B8 00 03 EF B9 09 00 BA CE 03 32 E4 BE A2 49  // ...........2...I
    4A50: 8A C4 EE AC 42 EE 4A FE C4 E2 F5 BA DA 03 EC B9  // ....B.J.........
    4A60: 14 00 BA C0 03 32 E4 BE AB 49 8A C4 EE AC EE FE  // .....2...I......
    4A70: C4 E2 F7 C3 BE 00 1C E8 08 D2 66 C1 E8 10 8B D8  // ..........f.....
    4A80: E8 D8 D1 75 05 E8 C4 D1 75 04 B8 4F 00 C3 B8 4F  // ...u....u..O...O
    4A90: 03 C3 E8 C6 D1 74 53 BE 00 1C 80 FB 00 74 18 80  // .....tS......t..
    4AA0: FB 01 75 05 E8 04 D2 EB 1D 80 FB 02 75 10 8B C1  // ..u.........u...
    4AB0: E8 B7 D1 D3 E8 8B C8 E8 B4 CC 74 2E EB 08 80 FB  // ..........t.....
    4AC0: 03 75 24 E8 5B D1 E8 A1 D1 8B D8 D3 E3 50 33 C0  // .u$.[........P3.
    4AD0: BA 00 03 3B DA 77 05 BA FF FF EB 04 F7 F3 8B D0  // ...;.w..........
    4AE0: 58 8B C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03 C3 00  // X...O..2...O....
    4AF0: 0A DB 75 07 8A EF E8 82 CD EB 05 E8 67 CD 8A F8  // ..u.........g...
    4B00: B0 4F 32 E4 C3 00 E8 52 D1 74 2C BE 00 1C E8 71  // .O2....R.t,....q
    4B10: D1 66 C1 E8 10 F6 C4 40 75 1D 0A FF 75 05 E8 1E  // .f.....@u...u...
    4B20: 00 EB 0F 80 FF 01 75 14 BB 13 00 E8 EB E5 D1 E8  // ......u.........
    4B30: 8B D0 B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0 C3 52  // ...O2...O...2..R
    4B40: 53 66 50 81 E2 FF 02 D1 E2 8B C2 40 66 C1 E0 10  // SfP........@f...
    4B50: 8B C2 BB 13 00 E8 1C E5 BB 12 00 E8 16 E5 66 58  // ..............fX
    4B60: 5B 5A C3 9C 1E 06 66 50 66 51 66 52 66 53 66 55  // [Z....fPfQfRfSfU
    4B70: 66 56 66 57 0E 1F E8 34 E6 E8 8A FF E8 53 E6 8B  // fVfW...4.....S..
    4B80: EC 89 56 10 89 46 18 66 5F 66 5E 66 5D 66 5B 66  // ..V..F.f_f^f]f[f
    4B90: 5A 66 59 66 58 07 1F 9D CB 0E 07 BF D0 8E 2E 8B  // ZfYfX...........
    4BA0: 0E CE 8E B8 4F 00 C3 00 0A DB 75 06 B7 04 B3 10  // ....O.....u.....
    4BB0: EB 26 80 FB 01 75 14 E8 59 CC 75 21 53 B1 01 0A  // .&...u..Y.u!S...
    4BC0: FF 74 02 B1 00 E8 6E CB 5B EB 0D 80 FB 02 75 0D  // .t....n.[.....u.
    4BD0: E8 86 CC 8A F8 C0 E7 02 B0 4F 32 E4 C3 B8 4F 03  // .........O2...O.
    4BE0: C3 00 80 E3 01 0A DB 75 05 BB 02 01 EB 0E E8 22  // .......u......."
    4BF0: CC 75 0E 33 C0 53 E8 0F BB 5B 74 05 B0 4F 32 E4  // .u.3.S...[t..O2.
    4C00: C3 B0 4F B4 03 C3 80 FC 1D 72 03 CD 42 C3 1E 06  // ..O......r..B...
    4C10: 66 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F  // fPfQfRfSfUfVfW..
    4C20: 50 0F B6 C4 D1 E0 8B F0 58 2E FF 94 E8 4B 66 5F  // P.......X....Kf_
    4C30: 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3 0E  // f^f]f[fZfYfX....
    4C40: 1F 50 0F B6 C4 D1 E0 8B F0 58 2E FF 94 E8 4B C3  // .P.......X....K.
    4C50: 22 4C 38 85 51 85 6E 85 15 4D 71 7C A3 7C 16 7D  // "L8.Q.n..Mq|.|.}
    4C60: 99 7D 27 7F 2B 7F 34 82 05 83 88 83 EF 83 8A 85  // .}'.+.4.........
    4C70: EC 85 95 88 2E 4F DC 8C D6 4B D6 4B D6 4B D6 4B  // .....O...K.K.K.K
    4C80: D6 4B D6 4B AC 8D AF 71 03 73 2E 8E 1E 47 04 80  // .K.K...q.s...G..
    4C90: 26 87 04 F3 50 8A E0 80 E4 7F E8 C4 01 3B D3 75  // &...P........;.u
    4CA0: 02 58 C3 BA CC 03 EC B2 B4 B1 30 26 F6 47 09 01  // .X........0&.G..
    4CB0: 74 0C B2 D4 B1 20 A8 01 75 49 B5 09 EB 06 A8 01  // t.... ..uI......
    4CC0: 74 41 B5 0B 53 E8 70 41 0A FF 5B 75 0B 80 26 88  // tA..S.pA..[u..&.
    4CD0: 04 F0 08 2E 88 04 EB 2B 58 80 0E 87 04 08 80 26  // .......+X......&
    4CE0: 10 04 CF 08 0E 10 04 89 16 63 04 C7 06 85 04 08  // .........c......
    4CF0: 00 C6 06 84 04 18 C7 06 0C 01 BA 58 8C 0E 0E 01  // ...........X....
    4D00: CD 42 C3 80 26 10 04 CF 08 0E 10 04 58 53 50 0E  // .B..&.......XSP.
    4D10: 1F 33 C9 8A C8 E8 FB CA 74 06 E8 6C C9 E8 BB C2  // .3......t..l....
    4D20: B2 08 BE 40 1C E8 F4 CC BE 40 1C E8 23 C8 58 5B  // ...@.....@..#.X[
    4D30: 0F 84 6E FF 2E 8E 1E 47 04 0E 07 E8 19 29 0E 1F  // ..n....G.....)..
    4D40: 53 66 BB 40 1C 00 1C E8 2F CF BE 00 1C B0 20 E8  // Sf.@..../..... .
    4D50: 58 C8 5B 2E 8E 1E 47 04 0E 07 E8 22 2E E8 24 00  // X.[...G...."..$.
    4D60: E8 2E 3D E8 D1 01 E8 8E 01 E8 B4 3E 0E 1F BE 00  // ..=........>....
    4D70: 1C B0 10 E8 34 C8 E8 FD 2D E8 F5 2D C3 8B EC C6  // ....4...-..-....
    4D80: 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD 00 E8 52 00  // F..../........R.
    4D90: E8 62 0A C3 53 83 C3 0A 8B 16 63 04 B9 19 00 B8  // .b..S.....c.....
    4DA0: 11 30 EF 32 C0 26 8A 27 EF 43 FE C0 E2 F7 5B 80  // .0.2.&.'.C....[.
    4DB0: C2 06 32 C0 EE C3 53 BA C4 03 83 C3 05 B9 04 00  // ..2...S.........
    4DC0: B0 01 26 8A 27 3C 01 75 03 80 CC 20 EF 43 FE C0  // ..&.'<.u... .C..
    4DD0: E2 F0 5B 26 8A 47 09 BA C2 03 EE B2 C4 B8 00 03  // ..[&.G..........
    4DE0: EF C3 8B F3 83 C6 23 BA DA 03 26 F6 47 09 01 75  // ......#...&.G..u
    4DF0: 02 B2 BA F6 06 89 04 08 74 1D 83 C6 10 EC B9 04  // ........t.......
    4E00: 00 B4 10 B2 C0 80 FC 11 74 07 8A C4 EE 26 8A 04  // ........t....&..
    4E10: EE 46 FE C4 E2 EF C3 53 EC 8B DE B9 14 00 32 E4  // .F.....S......2.
    4E20: B2 C0 8A C4 EE FE C4 26 8A 07 EE 43 E2 F4 8A C4  // .......&...C....
    4E30: EE 32 C0 EE 1E 06 E8 4F 2D 0B ED 74 09 1F 1E B9  // .2.....O-..t....
    4E40: 10 00 F3 A4 46 A4 07 1F 5B C3 53 83 C3 37 B9 09  // ....F...[.S..7..
    4E50: 00 32 C0 BA CE 03 26 8A 27 EF 43 FE C0 E2 F7 5B  // .2....&.'.C....[
    4E60: C3 BB EC 50 0E 07 8B D3 0A E4 7D 01 C3 E8 01 00  // ...P......}.....
    4E70: C3 33 F6 80 FC 03 7F 3C 4A F6 06 89 04 10 75 20  // .3.....<J.....u 
    4E80: A0 88 04 24 0F 3C 02 7E 24 3C 08 74 20 3C 06 74  // ...$.<.~$<.t <.t
    4E90: 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81 C3 00 04 C3  // .<.t..@.........
    4EA0: B0 40 D0 EC F6 E4 03 D8 81 C3 80 04 C3 B0 40 F6  // .@............@.
    4EB0: E4 03 D8 C3 80 FC 07 75 11 F6 06 89 04 10 75 05  // .......u......u.
    4EC0: 81 C3 00 01 C3 81 C3 00 05 C3 BF 6E 4E BE 8F 4E  // ...........nN..N
    4ED0: 33 C9 E8 4E 00 C3 04 80 00 05 80 00 06 C0 00 0D  // 3..N............
    4EE0: 80 02 0E C0 02 0F 80 03 10 C0 03 11 40 05 12 80  // ............@...
    4EF0: 05 13 C0 05 62 40 01 53 8A 1E 49 04 80 FB 07 7F  // ....b@.S..I.....
    4F00: 10 32 FF D1 E3 2E 8B 87 AB 4E A2 65 04 88 26 66  // .2.......N.e..&f
    4F10: 04 5B C3 2C 30 28 30 2D 30 29 30 2A 30 2E 30 1E  // .[.,0(0-0)0*0.0.
    4F20: 3F 29 30 2E 38 25 75 07 2E 03 5D 01 33 F6 C3 83  // ?)0.8%u...].3...
    4F30: C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E 47 04 F6 06  // ..;.u.......G...
    4F40: 87 04 80 75 49 83 3E 4C 04 00 74 42 A0 49 04 B9  // ...uI.>L..tB.I..
    4F50: 00 20 2E 8B 3E 4D 04 26 F6 47 33 01 75 0E 26 F6  // . ..>M.&.G3.u.&.
    4F60: 47 09 01 75 1B 2E 8B 3E 4B 04 EB 14 3C 06 7E 0B  // G..u...>K...<.~.
    4F70: 2E 8B 3E 49 04 26 8A 67 37 B5 40 66 33 C0 EB 06  // ..>I.&.g7.@f3...
    4F80: 66 B8 20 07 20 07 8E C7 66 33 FF F3 66 AB 80 26  // f. . ...f3..f..&
    4F90: 87 04 7F 07 1F C3 2E 8E 1E 47 04 80 FB 10 75 03  // .........G....u.
    4FA0: E9 7A 01 80 FB 20 75 03 E9 9B 01 80 FB 32 75 1F  // .z... u......2u.
    4FB0: BA CC 03 0A C0 75 09 EC 0C 02 B2 C2 EE E9 F3 00  // .....u..........
    4FC0: FE C8 0F 85 F3 00 EC 24 FD B2 C2 EE E9 E4 00 80  // .......$........
    4FD0: FB 35 75 28 3C 80 75 08 80 0E 89 04 40 E9 D3 00  // .5u(<.u.....@...
    4FE0: F6 06 89 04 40 0F 84 D0 00 0A C0 0F 84 CA 00 FE  // ....@...........
    4FF0: C8 75 06 E8 98 07 E9 BA 00 E9 BD 00 80 FB 30 74  // .u............0t
    5000: 03 E9 96 00 50 E8 30 3E 8A EF BA CC 03 EC 8A C8  // ....P.0>........
    5010: 58 0A C0 75 30 B7 08 F6 C1 01 75 12 0A ED 75 0B  // X..u0.....u...u.
    5020: A0 10 04 24 30 3C 30 75 10 B7 02 E9 8B 00 A0 10  // ...$0<0u........
    5030: 04 24 30 3C 30 75 02 B7 02 80 26 89 04 6F 80 0E  // .$0<0u....&..o..
    5040: 89 04 80 EB 36 3C 01 75 41 80 26 89 04 6F B7 09  // ....6<.uA.&..o..
    5050: F6 C1 01 75 15 B7 0B A0 10 04 24 30 3C 30 74 1B  // ...u......$0<0t.
    5060: B7 09 0A ED 74 15 B7 05 EB 11 A0 10 04 24 30 3C  // ....t........$0<
    5070: 30 75 08 B7 0B 0A ED 74 02 B7 03 8A 1E 88 04 80  // 0u.....t........
    5080: E3 F0 0A DF 88 1E 88 04 EB 29 3C 02 75 2B 80 26  // .........)<.u+.&
    5090: 89 04 6F 80 0E 89 04 10 EB B4 80 FB 31 75 1B 0A  // ..o.........1u..
    50A0: C0 74 0B 3C 01 75 0C 80 0E 89 04 08 EB 05 80 26  // .t.<.u.........&
    50B0: 89 04 F7 8B EC C6 46 1A 12 C3 80 FB 33 75 16 3C  // ......F.....3u.<
    50C0: 00 74 0B 3C 01 75 EC 80 26 89 04 FD EB E5 80 0E  // .t.<.u..&.......
    50D0: 89 04 02 EB DE 80 FB 34 75 17 3C 00 75 07 80 26  // .......4u.<.u..&
    50E0: 87 04 FE EB CE 3C 01 75 07 80 0E 87 04 01 EB C3  // .....<.u........
    50F0: C3 80 FB 36 75 26 BB 20 FF 3C 01 74 09 BB 00 DF  // ...6u&. .<.t....
    5100: 3C 00 74 02 EB AD E8 02 00 EB A8 9C FA BA C4 03  // <.t.............
    5110: B0 01 EE 42 EC 22 C7 0A C3 EE 9D C3 C3 B3 03 B7  // ...B."..........
    5120: 00 BA CC 03 EC A8 01 75 02 B7 01 A0 88 04 8A E0  // .......u........
    5130: B1 04 D2 EC 25 0F 0F 8B C8 8B EC 89 5E 0E 89 4E  // ....%.......^..N
    5140: 16 C6 46 1A 12 C3 9C FA C7 06 14 00 9C 76 8C 0E  // ..F..........v..
    5150: 16 00 9D C3 28 18 08 00 08 09 03 00 02 63 2D 27  // ....(........c-'
    5160: 28 90 2B A0 BF 1F 00 C7 06 07 00 00 00 00 9C 8E  // (.+.............
    5170: 8F 14 1F 96 B9 A3 FF 00 01 02 03 04 05 06 07 10  // ................
    5180: 11 12 13 14 15 16 17 08 00 0F 00 00 00 00 00 00  // ................
    5190: 10 0E 00 FF 50 18 08 00 10 01 03 00 02 63 5F 4F  // ....P........c_O
    51A0: 50 82 55 81 BF 1F 00 C7 06 07 00 00 00 00 9C 8E  // P.U.............
    51B0: 8F 28 1F 96 B9 A3 FF 00 01 02 03 04 05 06 07 10  // .(..............
    51C0: 11 12 13 14 15 16 17 08 00 0F 00 00 00 00 00 00  // ................
    51D0: 10 0E 00 FF 28 18 08 00 40 09 03 00 02 63 2D 27  // ....(...@....c-'
    51E0: 28 90 2B 80 BF 1F 00 C1 00 00 00 00 00 00 9C 8E  // (.+.............
    51F0: 8F 14 00 96 B9 A2 FF 00 13 15 17 02 04 06 07 10  // ................
    5200: 11 12 13 14 15 16 17 01 00 03 00 00 00 00 00 00  // ................
    5210: 30 0F 00 FF 50 18 08 00 40 01 01 00 06 63 5F 4F  // 0...P...@....c_O
    5220: 50 82 54 80 BF 1F 00 C1 00 00 00 00 00 00 9C 8E  // P.T.............
    5230: 8F 28 00 96 B9 C2 FF 00 17 17 17 17 17 17 17 17  // .(..............
    5240: 17 17 17 17 17 17 17 01 00 01 00 00 00 00 00 00  // ................
    5250: 00 0D 00 FF 50 18 0E 00 10 00 03 00 03 A6 5F 4F  // ....P........._O
    5260: 50 82 55 81 BF 1F 00 4D 0B 0C 00 00 00 00 83 85  // P.U....M........
    5270: 5D 28 0D 63 BA A3 FF 00 08 08 08 08 08 08 08 10  // ](.c............
    5280: 18 18 18 18 18 18 18 0E 00 0F 08 00 00 00 00 00  // ................
    5290: 10 0A 00 FF 50 1D 10 00 A0 01 0F 00 0A E3 5F 4F  // ....P........._O
    52A0: 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00 EA 8C  // P.T..>.@........
    52B0: DF 50 00 E7 04 E3 FF 00 01 02 03 04 05 06 07 08  // .P..............
    52C0: 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 10 00 00 00 00  // ................
    52D0: 40 05 0F FF 00 05 11 1C 08 0B 14 28 0E 18 2D 32  // @..........(..-2
    52E0: 20 24 38 3F 00 05 08 0B 0E 11 14 18 1C 20 24 28  //  $8?......... $(
    52F0: 2D 32 38 3F 07 0C 10 15 1A 18 16 15 13 1C 25 2F  // -28?..........%/
    5300: 38 33 2E 2A 25 27 29 2A 2C 23 19 10 23 25 27 2A  // 83.*%')*,#..#%'*
    5310: 2C 2B 2A 29 29 2D 32 37 3B 39 37 34 32 33 34 35  // ,+*))-27;9742345
    5320: 35 31 2C 27 2F 30 32 33 34 34 33 33 32 35 38 3A  // 51,'/0234433258:
    5330: 3D 3C 3A 39 38 38 39 39 3A 37 34 31 03 05 07 09  // =<:98899:741....
    5340: 0B 0B 0A 09 08 0D 11 15 19 17 15 13 11 11 12 13  // ................
    5350: 14 0F 0B 07 10 10 12 13 14 13 13 13 12 14 16 18  // ................
    5360: 1A 19 18 17 16 17 17 17 18 15 14 11 15 15 16 17  // ................
    5370: 17 17 17 17 16 18 19 1A 1B 1B 1A 19 19 19 19 19  // ................
    5380: 1A 18 17 16 02 03 04 05 07 06 06 05 05 07 0A 0C  // ................
    5390: 0E 0D 0C 0B 09 0A 0A 0B 0B 09 06 04 09 09 0A 0B  // ................
    53A0: 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F 0E 0D 0D 0D 0D 0D  // ................
    53B0: 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D 0D 0D 0C 0D 0E 0F  // ................
    53C0: 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E 0D 0C 00 00 00 00  // ................
    53D0: 00 00 00 00 28 18 08 00 20 09 0F 00 06 63 2D 27  // ....(... ....c-'
    53E0: 28 90 2B 80 BF 1F 00 C0 00 00 00 00 00 00 9C 8E  // (.+.............
    53F0: 8F 14 00 96 B9 E3 FF 00 01 02 03 04 05 06 07 10  // ................
    5400: 11 12 13 14 15 16 17 01 00 0F 00 00 00 00 00 00  // ................
    5410: 00 05 0F FF 50 18 08 00 40 01 0F 00 06 63 5F 4F  // ....P...@....c_O
    5420: 50 82 54 80 BF 1F 00 C0 00 00 00 00 00 00 9C 8E  // P.T.............
    5430: 8F 28 00 96 B9 E3 FF 00 01 02 03 04 05 06 07 10  // .(..............
    5440: 11 12 13 14 15 16 17 01 00 0F 00 00 00 00 00 00  // ................
    5450: 00 05 0F FF 00 05 11 1C 08 0B 25 28 02 07 1B 20  // ..........%(... 
    5460: 0F 14 28 2C 0C 11 25 2A 14 1E 32 36 0F 13 27 2C  // ..(,..%*..26..',
    5470: 1B 20 34 39 06 0B 1F 24 13 18 2C 30 09 0D 21 26  // . 49...$..,0..!&
    5480: 15 1A 2E 33 13 17 2B 30 1F 24 38 3D 0E 18 2D 32  // ...3..+0.$8=..-2
    5490: 20 24 38 3F 00 05 11 1C 08 0B 14 18 00 05 11 1C  //  $8?............
    54A0: 08 0B 14 18 0E 18 2D 32 20 24 38 3F 0E 18 2D 32  // ......-2 $8?..-2
    54B0: 20 24 38 3F 00 05 11 1C 08 0B 14 18 00 05 11 1C  //  $8?............
    54C0: 08 0B 14 18 0E 18 2D 32 20 24 38 3F 0E 18 2D 32  // ......-2 $8?..-2
    54D0: 20 24 38 3F 50 18 0E 00 80 01 0F 00 06 A2 5F 4F  //  $8?P........._O
    54E0: 50 82 54 80 BF 1F 00 40 00 00 00 00 00 00 83 85  // P.T....@........
    54F0: 5D 28 0F 63 BA E3 FF 00 08 00 00 18 18 00 00 00  // ](.c............
    5500: 08 00 00 00 18 00 00 0B 00 05 00 00 00 00 00 00  // ................
    5510: 00 05 05 FF 50 18 0E 00 80 01 0F 00 06 A3 5F 4F  // ....P........._O
    5520: 50 82 54 80 BF 1F 00 40 00 00 00 00 00 00 83 85  // P.T....@........
    5530: 5D 28 0F 63 BA E3 FF 00 01 02 03 04 05 14 07 38  // ](.c...........8
    5540: 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00 00 00 00 00  // 9:;<=>?.........
    5550: 00 05 0F FF 28 18 0E 00 08 09 03 00 02 A3 2D 27  // ....(.........-'
    5560: 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00 00 00 83 85  // (.+....M........
    5570: 5D 14 1F 63 BA A3 FF 00 01 02 03 04 05 14 07 38  // ]..c...........8
    5580: 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00 00 00 00 00  // 9:;<=>?.........
    5590: 10 0E 00 FF 50 18 0E 00 10 01 03 00 02 A3 5F 4F  // ....P........._O
    55A0: 50 82 55 81 BF 1F 00 4D 0B 0C 00 00 00 00 83 85  // P.U....M........
    55B0: 5D 28 1F 63 BA A3 FF 00 01 02 03 04 05 14 07 38  // ](.c...........8
    55C0: 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00 00 00 00 00  // 9:;<=>?.........
    55D0: 10 0E 00 FF 28 18 10 00 08 08 03 00 02 67 2D 27  // ....(........g-'
    55E0: 28 90 2B A0 BF 1F 00 4F 0D 0E 00 00 00 00 9C 8E  // (.+....O........
    55F0: 8F 14 1F 96 B9 A3 FF 00 01 02 03 04 05 14 07 38  // ...............8
    5600: 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00 00 00 00 00  // 9:;<=>?.........
    5610: 10 0E 00 FF 50 18 10 00 10 00 03 00 02 67 5F 4F  // ....P........g_O
    5620: 50 82 55 81 BF 1F 00 4F 0D 0E 00 00 00 00 9C 8E  // P.U....O........
    5630: 8F 28 1F 96 B9 A3 FF 00 01 02 03 04 05 14 07 38  // .(.............8
    5640: 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00 00 00 00 00  // 9:;<=>?.........
    5650: 10 0E 00 FF 50 18 10 00 10 00 03 00 02 66 5F 4F  // ....P........f_O
    5660: 50 82 55 81 BF 1F 00 4F 0D 0E 00 00 00 00 9C 8E  // P.U....O........
    5670: 8F 28 0F 96 B9 A3 FF 00 08 08 08 08 08 08 08 10  // .(..............
    5680: 18 18 18 18 18 18 18 0E 00 0F 08 00 00 00 00 00  // ................
    5690: 10 0A 00 FF 50 1D 10 00 A0 01 0F 00 06 E3 5F 4F  // ....P........._O
    56A0: 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00 EA 8C  // P.T..>.@........
    56B0: DF 28 00 E7 04 C3 FF 00 3F 3F 3F 3F 3F 3F 3F 3F  // .(......????????
    56C0: 3F 3F 3F 3F 3F 3F 3F 01 00 0F 00 00 00 00 00 00  // ???????.........
    56D0: 00 05 01 FF 50 1D 10 00 A0 01 0F 00 06 E3 5F 4F  // ....P........._O
    56E0: 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00 EA 8C  // P.T..>.@........
    56F0: DF 28 00 E7 04 E3 FF 00 01 02 03 04 05 14 07 38  // .(.............8
    5700: 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00 00 00 00 00  // 9:;<=>?.........
    5710: 00 05 0F FF 28 18 08 00 20 01 0F 00 0E 63 5F 4F  // ....(... ....c_O
    5720: 50 82 54 80 BF 1F 00 41 00 00 00 00 00 00 9C 8E  // P.T....A........
    5730: 8F 28 40 96 B9 A3 FF 00 01 02 03 04 05 06 07 08  // .(@.............
    5740: 09 0A 0B 0C 0D 0E 0F 41 00 0F 00 00 00 00 00 00  // .......A........
    5750: 40 05 0F FF EC 50 00 C0 00 00 00 00 00 00 00 00  // @....P..........
    5760: 00 00 00 00 0C 57 00 C0 00 00 00 00 00 00 00 00  // .....W..........
    5770: 00 00 00 00 1A 00 AA 8E 00 C0 00 00 00 00 00 00  // ................
    5780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1E E8  // ................
    5790: 10 00 2E 8E 1E 47 04 E8 FE 36 E8 D5 36 E8 76 1A  // .....G...6..6.v.
    57A0: 1F C3 2E 8E 1E 47 04 C7 06 87 04 60 F9 C6 06 8A  // .....G.....`....
    57B0: 04 0B A0 89 04 0C 11 24 17 A2 89 04 B4 01 E8 73  // .......$.......s
    57C0: 1E A0 89 04 80 26 10 04 CF 80 0E 10 04 20 C7 06  // .....&....... ..
    57D0: 63 04 D4 03 0E 1F E8 71 B8 F7 C1 02 00 75 03 E8  // c......q.....u..
    57E0: F9 B7 B8 03 00 E8 57 F4 C3 1E 2E 8E 1E 47 04 0E  // ......W......G..
    57F0: 07 EB 00 1F C3 F6 06 89 04 08 74 01 C3 53 BA C8  // ..........t..S..
    5800: 03 EC B0 FF B2 C6 EE B2 C8 80 3E 63 04 B4 75 2F  // ..........>c..u/
    5810: BE 6E 58 B9 40 00 33 DB 9C FA 8A C3 EE 8B FB C1  // .nX.@.3.........
    5820: EF 03 83 E7 03 03 FE 2E 8A 05 42 EE 2E 8A 45 04  // ..........B...E.
    5830: EE 2E 8A 45 08 EE FE C3 4A E2 DF 9D E9 85 00 26  // ...E....J......&
    5840: 8A 47 2B F6 06 89 04 06 74 31 B9 F8 00 BF 6C 52  // .G+.....t1....lR
    5850: 3C 08 74 11 B9 40 00 BF EC 53 3C 38 74 07 3C 3F  // <.t..@...S<8t.<?
    5860: 74 03 BF 2C 54 33 DB 9C FA 8A C3 EE 2E 8A 01 42  // t..,T3.........B
    5870: EE EE EE FE C3 4A E2 F1 9D EB 49 3C 08 74 25 3C  // .....J....I<.t%<
    5880: 38 74 2E 3C 3F 74 2A B9 08 00 33 DB 51 E8 CB D3  // 8t.<?t*...3.Q...
    5890: B9 08 00 F7 C3 10 00 74 03 83 C7 18 E8 67 00 59  // .......t.....g.Y
    58A0: E2 EA EB 20 E8 B4 D3 B9 10 00 33 DB E8 57 00 EB  // ... ......3..W..
    58B0: 13 B9 40 00 33 DB 51 E8 28 00 8A C3 E8 B7 2F FE  // ..@.3.Q.(...../.
    58C0: C3 59 E2 F2 5B C3 00 2A 00 2A 00 2A 00 2A 15 3F  // .Y..[..*.*.*.*.?
    58D0: 15 3F 15 3F 15 3F 00 2A 00 3F 00 2A 00 3F 00 2A  // .?.?.?.*.?.*.?.*
    58E0: 00 3F 8B FB C1 EF 02 83 E7 0F 2E 8A B5 5E 58 8B  // .?...........^X.
    58F0: FB D1 EF 83 E7 0F 2E 8A AD 5E 58 8B FB 83 E7 0F  // .........^X.....
    5900: 2E 8A 8D 5E 58 C3 9C 8A C3 FA EE 2E 8A 05 42 EE  // ...^X.........B.
    5910: 47 2E 8A 05 EE 47 2E 8A 05 EE 47 FE C3 4A E2 E7  // G....G....G..J..
    5920: 9D C3 00 00 00 00 00 00 00 00 7E 81 A5 81 BD 99  // ..........~.....
    5930: 81 7E 7C FE D6 BA C6 FE 7C 00 C6 EE FE FE 7C 38  // .~|.....|.....|8
    5940: 10 00 10 38 7C FE 7C 38 10 00 10 38 10 EE EE 10  // ...8|.|8...8....
    5950: 38 00 38 7C FE FE 6C 10 38 00 00 18 3C 7E 3C 18  // 8.8|..l.8...<~<.
    5960: 00 00 FF E7 C3 81 C3 E7 FF FF 00 18 3C 66 66 3C  // ............<ff<
    5970: 18 00 FF E7 C3 99 99 C3 E7 FF 1E 0E 1E 36 78 CC  // .............6x.
    5980: CC 78 7E C3 C3 7E 18 7E 18 18 1E 1A 1E 18 18 70  // .x~..~.~.......p
    5990: F0 60 3E 3E 36 36 F6 66 1E 0C DB 3C 66 E7 66 3C  // .`>>66.f...<f.f<
    59A0: DB 00 80 C0 F0 F8 F0 C0 80 00 02 06 1E 3E 1E 06  // .............>..
    59B0: 02 00 18 3C 7E 18 7E 3C 18 00 66 66 66 66 66 00  // ...<~.~<..fffff.
    59C0: 66 00 7F DB 7B 3B 1B 1B 1B 00 3C 66 38 6C 6C 38  // f...{;....<f8ll8
    59D0: CC 78 00 00 00 00 FE FE FE 00 18 3C 7E 18 7E 3C  // .x.........<~.~<
    59E0: 18 7E 18 3C 7E 18 18 18 18 00 18 18 18 18 7E 3C  // .~.<~.........~<
    59F0: 18 00 00 18 1C FE 1C 18 00 00 00 30 70 FE 70 30  // ...........0p.p0
    5A00: 00 00 00 00 C0 C0 C0 FE 00 00 00 24 66 FF 66 24  // ...........$f.f$
    5A10: 00 00 00 10 38 7C 7C FE 00 00 00 FE 7C 7C 38 10  // ....8||.....||8.
    5A20: 00 00 00 00 00 00 00 00 00 00 18 3C 3C 18 18 00  // ...........<<...
    5A30: 18 00 6C 6C 6C 00 00 00 00 00 6C 6C FE 6C FE 6C  // ..lll.....ll.l.l
    5A40: 6C 00 18 7E C0 7C 06 FC 18 00 00 C6 0C 18 30 60  // l..~.|........0`
    5A50: C6 00 38 6C 38 76 CC CC 76 00 18 18 30 00 00 00  // ..8l8v..v...0...
    5A60: 00 00 18 30 60 60 60 30 18 00 60 30 18 18 18 30  // ...0```0..`0...0
    5A70: 60 00 00 EE 7C FE 7C EE 00 00 00 18 18 7E 18 18  // `...|.|......~..
    5A80: 00 00 00 00 00 00 18 18 30 00 00 00 00 FE 00 00  // ........0.......
    5A90: 00 00 00 00 00 00 00 38 38 00 06 0C 18 30 60 C0  // .......88....0`.
    5AA0: 80 00 7C C6 CE DE F6 E6 7C 00 18 78 18 18 18 18  // ..|.....|..x....
    5AB0: 7E 00 7C C6 0C 18 30 66 FE 00 7C C6 06 3C 06 C6  // ~.|...0f..|..<..
    5AC0: 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE C0 FC 06 06 C6  // |...<l..........
    5AD0: 7C 00 7C C6 C0 FC C6 C6 7C 00 FE C6 06 0C 18 18  // |.|.....|.......
    5AE0: 18 00 7C C6 C6 7C C6 C6 7C 00 7C C6 C6 7E 06 C6  // ..|..|..|.|..~..
    5AF0: 7C 00 00 1C 1C 00 00 1C 1C 00 00 18 18 00 00 18  // |...............
    5B00: 18 30 0C 18 30 60 30 18 0C 00 00 00 FE 00 00 FE  // .0..0`0.........
    5B10: 00 00 60 30 18 0C 18 30 60 00 7C C6 06 0C 18 00  // ..`0...0`.|.....
    5B20: 18 00 7C C6 C6 DE DC C0 7E 00 38 6C C6 C6 FE C6  // ..|.....~.8l....
    5B30: C6 00 FC 66 66 7C 66 66 FC 00 3C 66 C0 C0 C0 66  // ...ff|ff..<f...f
    5B40: 3C 00 F8 6C 66 66 66 6C F8 00 FE C2 C0 F8 C0 C2  // <..lfffl........
    5B50: FE 00 FE 62 60 7C 60 60 F0 00 7C C6 C0 C0 DE C6  // ...b`|``..|.....
    5B60: 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C 18 18 18 18 18  // |.........<.....
    5B70: 3C 00 3C 18 18 18 D8 D8 70 00 C6 CC D8 F0 D8 CC  // <.<.....p.......
    5B80: C6 00 F0 60 60 60 60 62 FE 00 C6 EE FE D6 D6 C6  // ...````b........
    5B90: C6 00 C6 E6 E6 F6 DE CE C6 00 7C C6 C6 C6 C6 C6  // ..........|.....
    5BA0: 7C 00 FC 66 66 7C 60 60 F0 00 7C C6 C6 C6 C6 D6  // |..ff|``..|.....
    5BB0: 7C 06 FC C6 C6 FC D8 CC C6 00 7C C6 C0 7C 06 C6  // |.........|..|..
    5BC0: 7C 00 7E 5A 18 18 18 18 3C 00 C6 C6 C6 C6 C6 C6  // |.~Z....<.......
    5BD0: 7C 00 C6 C6 C6 C6 6C 38 10 00 C6 C6 D6 D6 FE EE  // |.....l8........
    5BE0: C6 00 C6 6C 38 38 38 6C C6 00 66 66 66 3C 18 18  // ...l888l..fff<..
    5BF0: 3C 00 FE 86 0C 18 30 62 FE 00 7C 60 60 60 60 60  // <.....0b..|`````
    5C00: 7C 00 C0 60 30 18 0C 06 02 00 7C 0C 0C 0C 0C 0C  // |..`0.....|.....
    5C10: 7C 00 10 38 6C C6 00 00 00 00 00 00 00 00 00 00  // |..8l...........
    5C20: 00 FF 30 30 18 00 00 00 00 00 00 00 78 0C 7C CC  // ..00........x.|.
    5C30: 7E 00 E0 60 7C 66 66 66 FC 00 00 00 7C C6 C0 C6  // ~..`|fff....|...
    5C40: 7C 00 1C 0C 7C CC CC CC 7E 00 00 00 7C C6 FE C0  // |...|...~...|...
    5C50: 7C 00 1C 36 30 FC 30 30 78 00 00 00 76 CE C6 7E  // |..60.00x...v..~
    5C60: 06 7C E0 60 7C 66 66 66 E6 00 18 00 38 18 18 18  // .|.`|fff....8...
    5C70: 3C 00 0C 00 1C 0C 0C 0C CC 78 E0 60 66 6C 78 6C  // <........x.`flxl
    5C80: E6 00 18 18 18 18 18 18 1C 00 00 00 6C FE D6 D6  // ............l...
    5C90: C6 00 00 00 DC 66 66 66 66 00 00 00 7C C6 C6 C6  // .....ffff...|...
    5CA0: 7C 00 00 00 DC 66 66 7C 60 F0 00 00 76 CC CC 7C  // |....ff|`...v..|
    5CB0: 0C 1E 00 00 DC 66 60 60 F0 00 00 00 7C C0 7C 06  // .....f``....|.|.
    5CC0: 7C 00 30 30 FC 30 30 36 1C 00 00 00 CC CC CC CC  // |.00.006........
    5CD0: 76 00 00 00 C6 C6 6C 38 10 00 00 00 C6 C6 D6 FE  // v.....l8........
    5CE0: 6C 00 00 00 C6 6C 38 6C C6 00 00 00 C6 C6 CE 76  // l....l8l.......v
    5CF0: 06 7C 00 00 FC 98 30 64 FC 00 0E 18 18 70 18 18  // .|....0d.....p..
    5D00: 0E 00 18 18 18 00 18 18 18 00 70 18 18 0E 18 18  // ..........p.....
    5D10: 70 00 76 DC 00 00 00 00 00 00 00 10 38 38 6C 6C  // p.v.........88ll
    5D20: FE 00 3C 66 C0 66 3C 18 CC 78 00 C6 00 C6 C6 CE  // ..<f.f<..x......
    5D30: 76 00 0E 00 7C C6 FE C0 7C 00 7C C6 78 0C 7C CC  // v...|...|.|.x.|.
    5D40: 7E 00 C6 00 78 0C 7C CC 7E 00 E0 00 78 0C 7C CC  // ~...x.|.~...x.|.
    5D50: 7E 00 38 38 78 0C 7C CC 7E 00 00 00 7C C0 7C 18  // ~.88x.|.~...|.|.
    5D60: 6C 38 7C C6 7C C6 FE C0 7C 00 C6 00 7C C6 FE C0  // l8|.|...|...|...
    5D70: 7C 00 E0 00 7C C6 FE C0 7C 00 66 00 38 18 18 18  // |...|...|.f.8...
    5D80: 3C 00 7C C6 38 18 18 18 3C 00 00 00 38 18 18 18  // <.|.8...<...8...
    5D90: 3C 00 C6 38 6C C6 FE C6 C6 00 38 38 00 7C C6 FE  // <..8l.....88.|..
    5DA0: C6 00 0E 00 FE C0 F8 C0 FE 00 00 00 6C 9A 7E D8  // ............l.~.
    5DB0: 6E 00 7E D8 D8 FE D8 D8 DE 00 7C C6 00 7C C6 C6  // n.~.......|..|..
    5DC0: 7C 00 00 C6 00 7C C6 C6 7C 00 00 E0 00 7C C6 C6  // |....|..|....|..
    5DD0: 7C 00 7C C6 00 C6 C6 CE 76 00 00 E0 00 C6 C6 CE  // |.|.....v.......
    5DE0: 76 00 18 00 3C 18 18 18 3C 00 C6 38 6C C6 C6 6C  // v...<...<..8l..l
    5DF0: 38 00 C6 00 C6 C6 C6 C6 7C 00 00 18 7E D8 D8 7E  // 8.......|...~..~
    5E00: 18 00 38 6C 60 F0 66 F6 6C 00 C3 66 3C 7E 18 3C  // ..8l`.f.l..f<~.<
    5E10: 18 00 3E 63 38 0E 63 3E 00 1C 00 3E 61 3C 86 7C  // ..>c8.c>...>a<.|
    5E20: 00 1C 0E 00 78 0C 7C CC 7E 00 1C 00 38 18 18 18  // ....x.|.~...8...
    5E30: 3C 00 00 0E 00 7C C6 C6 7C 00 00 0E 00 CC CC DC  // <....|..|.......
    5E40: 76 00 00 FC 00 BC 66 66 E6 00 FE 00 C6 E6 F6 CE  // v.....ff........
    5E50: C6 00 3E 00 3E 60 67 63 3D 00 3E 00 76 CE C6 7E  // ..>.>`gc=.>.v..~
    5E60: 06 7C 18 00 18 30 60 66 3C 00 00 00 00 7C 60 60  // .|...0`f<....|``
    5E70: 00 00 00 00 00 7C 0C 0C 00 00 C0 CC D8 30 7C 36  // .....|.......0|6
    5E80: 0C 3E C0 CC D8 30 6C 3C 7E 0C 18 00 18 18 3C 3C  // .>...0l<~.....<<
    5E90: 18 00 00 36 6C D8 6C 36 00 00 00 D8 6C 36 6C D8  // ...6l.l6....l6l.
    5EA0: 00 00 22 88 22 88 22 88 22 88 55 AA 55 AA 55 AA  // ..".".".".U.U.U.
    5EB0: 55 AA DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18  // U..w.w.w.w......
    5EC0: 18 18 18 18 18 18 F8 18 18 18 18 18 F8 18 F8 18  // ................
    5ED0: 18 18 36 36 36 36 F6 36 36 36 00 00 00 00 FE 36  // ..6666.666.....6
    5EE0: 36 36 00 00 F8 18 F8 18 18 18 36 36 F6 06 F6 36  // 66........66...6
    5EF0: 36 36 36 36 36 36 36 36 36 36 00 00 FE 06 F6 36  // 6666666666.....6
    5F00: 36 36 36 36 F6 06 FE 00 00 00 36 36 36 36 FE 00  // 6666......6666..
    5F10: 00 00 18 18 F8 18 F8 00 00 00 00 00 00 00 F8 18  // ................
    5F20: 18 18 18 18 18 18 1F 00 00 00 18 18 18 18 FF 00  // ................
    5F30: 00 00 00 00 00 00 FF 18 18 18 18 18 18 18 1F 18  // ................
    5F40: 18 18 00 00 00 00 FF 00 00 00 18 18 18 18 FF 18  // ................
    5F50: 18 18 18 18 1F 18 1F 18 18 18 36 36 36 36 37 36  // ..........666676
    5F60: 36 36 36 36 37 30 3F 00 00 00 00 00 3F 30 37 36  // 666670?.....?076
    5F70: 36 36 36 36 F7 00 FF 00 00 00 00 00 FF 00 F7 36  // 6666...........6
    5F80: 36 36 36 36 37 30 37 36 36 36 00 00 FF 00 FF 00  // 6666707666......
    5F90: 00 00 36 36 F7 00 F7 36 36 36 18 18 FF 00 FF 00  // ..66...666......
    5FA0: 00 00 36 36 36 36 FF 00 00 00 00 00 FF 00 FF 18  // ..6666..........
    5FB0: 18 18 00 00 00 00 FF 36 36 36 36 36 36 36 3F 00  // .......6666666?.
    5FC0: 00 00 18 18 1F 18 1F 00 00 00 00 00 1F 18 1F 18  // ................
    5FD0: 18 18 00 00 00 00 3F 36 36 36 36 36 36 36 FF 36  // ......?6666666.6
    5FE0: 36 36 18 18 FF 18 FF 18 18 18 18 18 18 18 F8 00  // 66..............
    5FF0: 00 00 00 00 00 00 1F 18 18 18 FF FF FF FF FF FF  // ................
    6000: FF FF 00 00 00 00 FF FF FF FF F0 F0 F0 F0 F0 F0  // ................
    6010: F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF 00 00  // ................
    6020: 00 00 00 00 66 DC D8 DC 66 00 00 78 CC F8 CC C6  // ....f...f..x....
    6030: CC 00 00 FE 62 60 60 60 E0 00 00 FE 6C 6C 6C 6C  // ....b```....llll
    6040: 6C 00 FE C6 60 30 60 C6 FE 00 00 7E D8 CC CC D8  // l...`0`....~....
    6050: 70 00 00 66 66 66 66 7C C0 00 00 76 DC 18 18 18  // p..ffff|...v....
    6060: 38 00 FE 38 6C C6 6C 38 FE 00 38 6C C6 FE C6 6C  // 8..8l.l8..8l...l
    6070: 38 00 38 6C C6 C6 6C 6C EE 00 3E 60 38 66 C6 CC  // 8.8l..ll..>`8f..
    6080: 78 00 00 00 7E DB DB 7E 00 00 06 7C DE F6 E6 7C  // x...~..~...|...|
    6090: C0 00 38 60 C0 F8 C0 60 38 00 7C C6 C6 C6 C6 C6  // ..8`...`8.|.....
    60A0: C6 00 00 FE 00 FE 00 FE 00 00 18 18 7E 18 18 00  // ............~...
    60B0: 7E 00 30 18 0C 18 30 00 7E 00 0C 18 30 18 0C 00  // ~.0...0.~...0...
    60C0: 7E 00 0C 1E 18 18 18 18 18 18 18 18 18 18 18 78  // ~..............x
    60D0: 30 00 00 00 18 00 7E 00 18 00 00 76 DC 00 76 DC  // 0.....~....v..v.
    60E0: 00 00 7C C6 C6 7C 00 00 00 00 00 00 00 18 18 00  // ..|..|..........
    60F0: 00 00 00 00 00 00 18 00 00 00 1F 18 18 18 F8 38  // ...............8
    6100: 18 00 D8 6C 6C 6C 00 00 00 00 70 D8 30 F8 00 00  // ...lll....p.0...
    6110: 00 00 00 00 7C 7C 7C 7C 00 00 00 00 00 00 00 00  // ....||||........
    6120: 00 00 1D 00 00 00 00 24 66 FF 66 24 00 00 00 00  // .......$f.f$....
    6130: 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6140: 00 00 00 00 00 00 00 7E 81 A5 81 81 BD 99 81 81  // .......~........
    6150: 7E 00 00 00 00 00 00 7C FE FE D6 FE FE BA C6 FE  // ~......|........
    6160: 7C 00 00 00 00 00 00 00 6C EE FE FE FE FE 7C 38  // |.......l.....|8
    6170: 10 00 00 00 00 00 00 00 10 38 7C FE 7C 38 10 00  // .........8|.|8..
    6180: 00 00 00 00 00 00 00 00 10 38 38 10 6C EE 6C 10  // .........88.l.l.
    6190: 38 00 00 00 00 00 00 10 38 7C 7C FE FE FE 6C 10  // 8.......8||...l.
    61A0: 38 00 00 00 00 00 00 00 00 00 18 3C 3C 3C 18 00  // 8..........<<<..
    61B0: 00 00 00 00 00 FF FF FF FF FF E7 C3 C3 C3 E7 FF  // ................
    61C0: FF FF FF FF FF 00 00 00 00 18 3C 66 66 66 3C 18  // ..........<fff<.
    61D0: 00 00 00 00 00 FF FF FF FF E7 C3 99 99 99 C3 E7  // ................
    61E0: FF FF FF FF FF 00 00 1E 0E 1E 36 78 CC CC CC CC  // ..........6x....
    61F0: 78 00 00 00 00 00 00 3C 66 66 66 3C 18 7E 18 18  // x......<fff<.~..
    6200: 18 00 00 00 00 00 00 1E 1A 1E 18 18 18 18 78 F8  // ..............x.
    6210: 70 00 00 00 00 00 00 3E 36 3E 36 36 76 F6 66 0E  // p......>6>66v.f.
    6220: 1E 0C 00 00 00 00 00 18 DB 7E 3C 66 66 3C 7E DB  // .........~<ff<~.
    6230: 18 00 00 00 00 00 00 00 80 E0 F0 FC FE FC F0 E0  // ................
    6240: 80 00 00 00 00 00 00 00 02 0E 3E 7E FE 7E 3E 0E  // ..........>~.~>.
    6250: 02 00 00 00 00 00 00 18 3C 7E 18 18 18 18 7E 3C  // ........<~....~<
    6260: 18 00 00 00 00 00 00 66 66 66 66 66 66 66 00 66  // .......fffffff.f
    6270: 66 00 00 00 00 00 00 7F DB DB DB DB 7B 1B 1B 1B  // f...........{...
    6280: 1B 00 00 00 00 00 00 7C C6 C6 60 7C F6 DE 7C 0C  // .......|..`|..|.
    6290: C6 C6 7C 00 00 00 00 00 00 00 00 00 00 FE FE FE  // ..|.............
    62A0: FE 00 00 00 00 00 00 18 3C 7E 18 18 18 7E 3C 18  // ........<~...~<.
    62B0: 7E 00 00 00 00 00 00 18 3C 7E 18 18 18 18 18 18  // ~.......<~......
    62C0: 18 00 00 00 00 00 00 18 18 18 18 18 18 18 7E 3C  // ..............~<
    62D0: 18 00 00 00 00 00 00 00 00 00 0C 0E FF 0E 0C 00  // ................
    62E0: 00 00 00 00 00 00 00 00 00 00 30 70 FE 70 30 00  // ..........0p.p0.
    62F0: 00 00 00 00 00 00 00 00 00 00 00 C0 C0 C0 FE 00  // ................
    6300: 00 00 00 00 00 00 00 00 00 00 24 66 FF 66 24 00  // ..........$f.f$.
    6310: 00 00 00 00 00 00 00 00 10 38 38 38 7C 7C FE FE  // .........888||..
    6320: 00 00 00 00 00 00 00 00 FE FE 7C 7C 7C 38 38 10  // ..........|||88.
    6330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6340: 00 00 00 00 00 00 00 18 3C 3C 3C 3C 18 18 00 18  // ........<<<<....
    6350: 18 00 00 00 00 00 36 36 36 36 14 00 00 00 00 00  // ......6666......
    6360: 00 00 00 00 00 00 00 6C 6C 6C FE 6C 6C FE 6C 6C  // .......lll.ll.ll
    6370: 6C 00 00 00 00 00 00 18 18 7C C6 C0 78 3C 06 C6  // l........|..x<..
    6380: 7C 18 18 00 00 00 00 00 00 00 62 66 0C 18 30 66  // |.........bf..0f
    6390: C6 00 00 00 00 00 00 38 6C 38 30 76 7E CC CC CC  // .......8l80v~...
    63A0: 76 00 00 00 00 00 0C 0C 0C 18 00 00 00 00 00 00  // v...............
    63B0: 00 00 00 00 00 00 00 0C 18 30 30 30 30 30 30 18  // .........000000.
    63C0: 0C 00 00 00 00 00 00 30 18 0C 0C 0C 0C 0C 0C 18  // .......0........
    63D0: 30 00 00 00 00 00 00 00 00 00 6C 38 FE 38 6C 00  // 0.........l8.8l.
    63E0: 00 00 00 00 00 00 00 00 00 00 18 18 7E 18 18 00  // ............~...
    63F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 0C  // ................
    6400: 0C 18 00 00 00 00 00 00 00 00 00 00 FE 00 00 00  // ................
    6410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18  // ................
    6420: 18 00 00 00 00 00 00 00 00 02 06 0C 18 30 60 C0  // .............0`.
    6430: 80 00 00 00 00 00 00 7C C6 C6 CE DE F6 E6 C6 C6  // .......|........
    6440: 7C 00 00 00 00 00 00 18 78 18 18 18 18 18 18 18  // |.......x.......
    6450: 7E 00 00 00 00 00 00 7C C6 C6 06 0C 18 30 60 C6  // ~......|.....0`.
    6460: FE 00 00 00 00 00 00 7C C6 06 06 3C 06 06 06 C6  // .......|...<....
    6470: 7C 00 00 00 00 00 00 0C 1C 3C 6C CC CC FE 0C 0C  // |........<l.....
    6480: 1E 00 00 00 00 00 00 FE C0 C0 C0 FC 06 06 06 C6  // ................
    6490: 7C 00 00 00 00 00 00 7C C6 C0 C0 FC C6 C6 C6 C6  // |......|........
    64A0: 7C 00 00 00 00 00 00 FE C6 06 0C 18 30 30 30 30  // |...........0000
    64B0: 30 00 00 00 00 00 00 7C C6 C6 C6 7C C6 C6 C6 C6  // 0......|...|....
    64C0: 7C 00 00 00 00 00 00 7C C6 C6 C6 C6 7E 06 06 C6  // |......|....~...
    64D0: 7C 00 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C  // |...............
    64E0: 00 00 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C  // ................
    64F0: 0C 18 00 00 00 00 00 00 0C 18 30 60 C0 60 30 18  // ..........0`.`0.
    6500: 0C 00 00 00 00 00 00 00 00 00 00 FE 00 FE 00 00  // ................
    6510: 00 00 00 00 00 00 00 00 60 30 18 0C 06 0C 18 30  // ........`0.....0
    6520: 60 00 00 00 00 00 00 7C C6 C6 0C 18 18 18 00 18  // `......|........
    6530: 18 00 00 00 00 00 00 7C C6 C6 C6 DE DE DE DC C0  // .......|........
    6540: 7E 00 00 00 00 00 00 38 6C C6 C6 C6 FE C6 C6 C6  // ~......8l.......
    6550: C6 00 00 00 00 00 00 FC 66 66 66 7C 66 66 66 66  // ........fff|ffff
    6560: FC 00 00 00 00 00 00 3C 66 C2 C0 C0 C0 C0 C2 66  // .......<f......f
    6570: 3C 00 00 00 00 00 00 F8 6C 66 66 66 66 66 66 6C  // <.......lffffffl
    6580: F8 00 00 00 00 00 00 FE 66 60 64 7C 64 60 60 66  // ........f`d|d``f
    6590: FE 00 00 00 00 00 00 FE 66 60 64 7C 64 60 60 60  // ........f`d|d```
    65A0: F0 00 00 00 00 00 00 7C C6 C6 C0 C0 C0 CE C6 C6  // .......|........
    65B0: 7C 00 00 00 00 00 00 C6 C6 C6 C6 FE C6 C6 C6 C6  // |...............
    65C0: C6 00 00 00 00 00 00 3C 18 18 18 18 18 18 18 18  // .......<........
    65D0: 3C 00 00 00 00 00 00 3C 18 18 18 18 18 18 D8 D8  // <......<........
    65E0: 70 00 00 00 00 00 00 C6 C6 CC D8 F0 F0 D8 CC C6  // p...............
    65F0: C6 00 00 00 00 00 00 F0 60 60 60 60 60 60 62 66  // ........``````bf
    6600: FE 00 00 00 00 00 00 C6 C6 EE EE FE D6 D6 D6 C6  // ................
    6610: C6 00 00 00 00 00 00 C6 C6 E6 E6 F6 DE CE CE C6  // ................
    6620: C6 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6  // .......|........
    6630: 7C 00 00 00 00 00 00 FC 66 66 66 66 7C 60 60 60  // |.......ffff|```
    6640: F0 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 D6 D6  // .......|........
    6650: 7C 06 00 00 00 00 00 FC 66 66 66 7C 78 6C 66 66  // |.......fff|xlff
    6660: E6 00 00 00 00 00 00 7C C6 C0 C0 70 1C 06 06 C6  // .......|...p....
    6670: 7C 00 00 00 00 00 00 7E 5A 18 18 18 18 18 18 18  // |......~Z.......
    6680: 3C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 C6 C6  // <...............
    6690: 7C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 6C 38  // |.............l8
    66A0: 10 00 00 00 00 00 00 C6 C6 C6 D6 D6 D6 FE EE C6  // ................
    66B0: C6 00 00 00 00 00 00 C6 C6 C6 6C 38 38 6C C6 C6  // ..........l88l..
    66C0: C6 00 00 00 00 00 00 66 66 66 66 66 3C 18 18 18  // .......fffff<...
    66D0: 3C 00 00 00 00 00 00 FE C6 86 0C 18 30 60 C2 C6  // <...........0`..
    66E0: FE 00 00 00 00 00 00 7C 60 60 60 60 60 60 60 60  // .......|````````
    66F0: 7C 00 00 00 00 00 00 00 00 80 C0 60 30 18 0C 06  // |..........`0...
    6700: 02 00 00 00 00 00 00 7C 0C 0C 0C 0C 0C 0C 0C 0C  // .......|........
    6710: 7C 00 00 00 00 00 10 38 6C C6 00 00 00 00 00 00  // |......8l.......
    6720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6730: 00 00 FF 00 00 00 18 18 18 0C 00 00 00 00 00 00  // ................
    6740: 00 00 00 00 00 00 00 00 00 00 78 0C 7C CC CC DC  // ..........x.|...
    6750: 76 00 00 00 00 00 00 E0 60 60 7C 66 66 66 66 66  // v.......``|fffff
    6760: FC 00 00 00 00 00 00 00 00 00 7C C6 C0 C0 C0 C6  // ..........|.....
    6770: 7C 00 00 00 00 00 00 1C 0C 0C 7C CC CC CC CC CC  // |.........|.....
    6780: 7E 00 00 00 00 00 00 00 00 00 7C C6 C6 FE C0 C6  // ~.........|.....
    6790: 7C 00 00 00 00 00 00 1C 36 30 30 FC 30 30 30 30  // |.......600.0000
    67A0: 78 00 00 00 00 00 00 00 00 00 76 CE C6 C6 CE 76  // x.........v....v
    67B0: 06 C6 7C 00 00 00 00 E0 60 60 7C 66 66 66 66 66  // ..|.....``|fffff
    67C0: E6 00 00 00 00 00 00 18 18 00 38 18 18 18 18 18  // ..........8.....
    67D0: 3C 00 00 00 00 00 00 0C 0C 00 1C 0C 0C 0C 0C 0C  // <...............
    67E0: CC CC 78 00 00 00 00 E0 60 60 66 66 6C 78 6C 66  // ..x.....``fflxlf
    67F0: E6 00 00 00 00 00 00 18 18 18 18 18 18 18 18 18  // ................
    6800: 1C 00 00 00 00 00 00 00 00 00 6C FE D6 D6 C6 C6  // ..........l.....
    6810: C6 00 00 00 00 00 00 00 00 00 DC 66 66 66 66 66  // ...........fffff
    6820: 66 00 00 00 00 00 00 00 00 00 7C C6 C6 C6 C6 C6  // f.........|.....
    6830: 7C 00 00 00 00 00 00 00 00 00 DC 66 66 66 66 7C  // |..........ffff|
    6840: 60 60 F0 00 00 00 00 00 00 00 76 CC CC CC CC 7C  // ``........v....|
    6850: 0C 0C 1E 00 00 00 00 00 00 00 DC 66 60 60 60 60  // ...........f````
    6860: F0 00 00 00 00 00 00 00 00 00 7C C6 C0 7C 06 C6  // ..........|..|..
    6870: 7C 00 00 00 00 00 00 30 30 30 FC 30 30 30 30 36  // |......000.00006
    6880: 1C 00 00 00 00 00 00 00 00 00 CC CC CC CC CC CC  // ................
    6890: 76 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6 6C 38  // v.............l8
    68A0: 10 00 00 00 00 00 00 00 00 00 C6 C6 D6 D6 D6 FE  // ................
    68B0: 6C 00 00 00 00 00 00 00 00 00 C6 C6 6C 38 6C C6  // l...........l8l.
    68C0: C6 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6 CE 76  // ...............v
    68D0: 06 C6 7C 00 00 00 00 00 00 00 FE 86 0C 18 30 62  // ..|...........0b
    68E0: FE 00 00 00 00 00 00 0E 18 18 18 70 18 18 18 18  // ...........p....
    68F0: 0E 00 00 00 00 00 00 18 18 18 18 00 18 18 18 18  // ................
    6900: 18 00 00 00 00 00 00 70 18 18 18 0E 18 18 18 18  // .......p........
    6910: 70 00 00 00 00 00 00 76 DC 00 00 00 00 00 00 00  // p......v........
    6920: 00 00 00 00 00 00 00 00 00 00 10 38 38 6C 6C FE  // ...........88ll.
    6930: 00 00 00 00 00 00 00 3C 66 C0 C0 C0 C6 66 3C 18  // .......<f....f<.
    6940: 0C CC 38 00 00 00 00 C6 00 00 C6 C6 C6 C6 C6 CE  // ..8.............
    6950: 76 00 00 00 00 00 0C 18 30 00 7C C6 C6 FE C0 C6  // v.......0.|.....
    6960: 7C 00 00 00 00 00 30 78 CC 00 78 0C 7C CC CC DC  // |.....0x..x.|...
    6970: 76 00 00 00 00 00 00 CC 00 00 78 0C 7C CC CC DC  // v.........x.|...
    6980: 76 00 00 00 00 00 60 30 18 00 78 0C 7C CC CC DC  // v.....`0..x.|...
    6990: 76 00 00 00 00 00 38 6C 38 00 78 0C 7C CC CC DC  // v.....8l8.x.|...
    69A0: 76 00 00 00 00 00 00 00 00 7C C6 C0 C0 C6 7C 18  // v........|....|.
    69B0: 0C 6C 38 00 00 00 30 78 CC 00 7C C6 C6 FE C0 C6  // .l8...0x..|.....
    69C0: 7C 00 00 00 00 00 00 CC 00 00 7C C6 C6 FE C0 C6  // |.........|.....
    69D0: 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 FE C0 C6  // |.....0...|.....
    69E0: 7C 00 00 00 00 00 00 66 00 00 38 18 18 18 18 18  // |......f..8.....
    69F0: 3C 00 00 00 00 00 18 3C 66 00 38 18 18 18 18 18  // <......<f.8.....
    6A00: 3C 00 00 00 00 00 00 00 00 00 38 18 18 18 18 18  // <.........8.....
    6A10: 3C 00 00 00 00 00 C6 00 38 6C C6 C6 C6 FE C6 C6  // <.......8l......
    6A20: C6 00 00 00 00 38 6C 38 00 38 6C C6 C6 FE C6 C6  // .....8l8.8l.....
    6A30: C6 00 00 00 00 0C 18 30 00 FE 60 60 7C 60 60 60  // .......0..``|```
    6A40: FE 00 00 00 00 00 00 00 00 66 DB 1B 7F D8 D8 DF  // .........f......
    6A50: 76 00 00 00 00 00 00 7E D8 D8 D8 D8 FE D8 D8 D8  // v......~........
    6A60: DE 00 00 00 00 00 30 78 CC 00 7C C6 C6 C6 C6 C6  // ......0x..|.....
    6A70: 7C 00 00 00 00 00 00 C6 00 00 7C C6 C6 C6 C6 C6  // |.........|.....
    6A80: 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 C6 C6 C6  // |.....0...|.....
    6A90: 7C 00 00 00 00 00 30 78 CC 00 C6 C6 C6 C6 C6 CE  // |.....0x........
    6AA0: 76 00 00 00 00 00 60 30 18 00 C6 C6 C6 C6 C6 CE  // v.....`0........
    6AB0: 76 00 00 00 00 00 18 00 3C 18 18 18 18 18 18 18  // v.......<.......
    6AC0: 3C 00 00 00 00 00 C6 00 7C C6 C6 C6 C6 C6 C6 C6  // <.......|.......
    6AD0: 7C 00 00 00 00 00 C6 00 C6 C6 C6 C6 C6 C6 C6 C6  // |...............
    6AE0: 7C 00 00 00 00 00 00 18 18 7C C6 C0 C0 C6 7C 18  // |........|....|.
    6AF0: 18 00 00 00 00 00 38 6C 60 60 F0 60 60 60 66 F6  // ......8l``.```f.
    6B00: 6C 00 00 00 00 00 66 66 66 66 3C 18 7E 18 3C 18  // l.....ffff<.~.<.
    6B10: 18 00 00 00 00 00 00 3E 63 63 30 1C 06 63 63 3E  // .......>cc0..cc>
    6B20: 00 1C 00 00 00 00 00 00 00 00 3E 63 38 0E 63 3E  // ..........>c8.c>
    6B30: 00 1C 00 00 00 00 0C 18 30 00 78 0C 7C CC CC DC  // ........0.x.|...
    6B40: 76 00 00 00 00 00 0C 18 30 00 38 18 18 18 18 18  // v.......0.8.....
    6B50: 3C 00 00 00 00 00 0C 18 30 00 7C C6 C6 C6 C6 C6  // <.......0.|.....
    6B60: 7C 00 00 00 00 00 18 30 60 00 CC CC CC CC CC DC  // |......0`.......
    6B70: 76 00 00 00 00 00 00 76 DC 00 BC 66 66 66 66 66  // v......v...fffff
    6B80: E6 00 00 00 00 00 76 DC 00 C6 C6 E6 F6 DE CE C6  // ......v.........
    6B90: C6 00 00 00 00 00 21 1E 00 1E 33 60 60 67 63 33  // ......!...3``gc3
    6BA0: 1D 00 00 00 00 00 42 3C 00 3B 66 66 66 3E 06 66  // ......B<.;fff>.f
    6BB0: 3C 00 00 00 00 00 00 30 30 00 30 30 30 60 C6 C6  // <......00.000`..
    6BC0: 7C 00 00 00 00 00 00 00 00 00 00 00 7E 60 60 60  // |...........~```
    6BD0: 00 00 00 00 00 00 00 00 00 00 00 00 7E 06 06 06  // ............~...
    6BE0: 00 00 00 00 00 00 60 60 62 66 6C 18 30 60 DC 36  // ......``bfl.0`.6
    6BF0: 0C 18 3E 00 00 00 60 60 62 66 6C 18 36 6E DE 36  // ..>...``bfl.6n.6
    6C00: 7E 06 06 00 00 00 00 18 18 00 18 18 3C 3C 3C 3C  // ~...........<<<<
    6C10: 18 00 00 00 00 00 00 00 00 00 36 6C D8 6C 36 00  // ..........6l.l6.
    6C20: 00 00 00 00 00 00 00 00 00 00 D8 6C 36 6C D8 00  // ...........l6l..
    6C30: 00 00 00 00 00 11 44 11 44 11 44 11 44 11 44 11  // ......D.D.D.D.D.
    6C40: 44 11 44 11 44 AA 55 AA 55 AA 55 AA 55 AA 55 AA  // D.D.D.U.U.U.U.U.
    6C50: 55 AA 55 AA 55 DD 77 DD 77 DD 77 DD 77 DD 77 DD  // U.U.U.w.w.w.w.w.
    6C60: 77 DD 77 DD 77 18 18 18 18 18 18 18 18 18 18 18  // w.w.w...........
    6C70: 18 18 18 18 18 18 18 18 18 18 18 18 F8 18 18 18  // ................
    6C80: 18 18 18 18 18 18 18 18 18 18 F8 18 F8 18 18 18  // ................
    6C90: 18 18 18 18 18 36 36 36 36 36 36 36 F6 36 36 36  // .....6666666.666
    6CA0: 36 36 36 36 36 00 00 00 00 00 00 00 FE 36 36 36  // 66666........666
    6CB0: 36 36 36 36 36 00 00 00 00 00 F8 18 F8 18 18 18  // 66666...........
    6CC0: 18 18 18 18 18 36 36 36 36 36 F6 06 F6 36 36 36  // .....66666...666
    6CD0: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6666666666666666
    6CE0: 36 36 36 36 36 00 00 00 00 00 FE 06 F6 36 36 36  // 66666........666
    6CF0: 36 36 36 36 36 36 36 36 36 36 F6 06 FE 00 00 00  // 6666666666......
    6D00: 00 00 00 00 00 36 36 36 36 36 36 36 FE 00 00 00  // .....6666666....
    6D10: 00 00 00 00 00 18 18 18 18 18 F8 18 F8 00 00 00  // ................
    6D20: 00 00 00 00 00 00 00 00 00 00 00 00 F8 18 18 18  // ................
    6D30: 18 18 18 18 18 18 18 18 18 18 18 18 1F 00 00 00  // ................
    6D40: 00 00 00 00 00 18 18 18 18 18 18 18 FF 00 00 00  // ................
    6D50: 00 00 00 00 00 00 00 00 00 00 00 00 FF 18 18 18  // ................
    6D60: 18 18 18 18 18 18 18 18 18 18 18 18 1F 18 18 18  // ................
    6D70: 18 18 18 18 18 00 00 00 00 00 00 00 FF 00 00 00  // ................
    6D80: 00 00 00 00 00 18 18 18 18 18 18 18 FF 18 18 18  // ................
    6D90: 18 18 18 18 18 18 18 18 18 18 1F 18 1F 18 18 18  // ................
    6DA0: 18 18 18 18 18 36 36 36 36 36 36 36 37 36 36 36  // .....66666667666
    6DB0: 36 36 36 36 36 36 36 36 36 36 37 30 3F 00 00 00  // 666666666670?...
    6DC0: 00 00 00 00 00 00 00 00 00 00 3F 30 37 36 36 36  // ..........?07666
    6DD0: 36 36 36 36 36 36 36 36 36 36 F7 00 FF 00 00 00  // 6666666666......
    6DE0: 00 00 00 00 00 00 00 00 00 00 FF 00 F7 36 36 36  // .............666
    6DF0: 36 36 36 36 36 36 36 36 36 36 37 30 37 36 36 36  // 6666666666707666
    6E00: 36 36 36 36 36 00 00 00 00 00 FF 00 FF 00 00 00  // 66666...........
    6E10: 00 00 00 00 00 36 36 36 36 36 F7 00 F7 36 36 36  // .....66666...666
    6E20: 36 36 36 36 36 18 18 18 18 18 FF 00 FF 00 00 00  // 66666...........
    6E30: 00 00 00 00 00 36 36 36 36 36 36 36 FF 00 00 00  // .....6666666....
    6E40: 00 00 00 00 00 00 00 00 00 00 FF 00 FF 18 18 18  // ................
    6E50: 18 18 18 18 18 00 00 00 00 00 00 00 FF 36 36 36  // .............666
    6E60: 36 36 36 36 36 36 36 36 36 36 36 36 3F 00 00 00  // 666666666666?...
    6E70: 00 00 00 00 00 18 18 18 18 18 1F 18 1F 00 00 00  // ................
    6E80: 00 00 00 00 00 00 00 00 00 00 1F 18 1F 18 18 18  // ................
    6E90: 18 18 18 18 18 00 00 00 00 00 00 00 3F 36 36 36  // ............?666
    6EA0: 36 36 36 36 36 36 36 36 36 36 36 36 FF 36 36 36  // 666666666666.666
    6EB0: 36 36 36 36 36 18 18 18 18 18 FF 18 FF 18 18 18  // 66666...........
    6EC0: 18 18 18 18 18 18 18 18 18 18 18 18 F8 00 00 00  // ................
    6ED0: 00 00 00 00 00 00 00 00 00 00 00 00 1F 18 18 18  // ................
    6EE0: 18 18 18 18 18 FF FF FF FF FF FF FF FF FF FF FF  // ................
    6EF0: FF FF FF FF FF 00 00 00 00 00 00 00 00 FF FF FF  // ................
    6F00: FF FF FF FF FF F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0  // ................
    6F10: F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    6F20: 0F 0F 0F 0F 0F FF FF FF FF FF FF FF FF 00 00 00  // ................
    6F30: 00 00 00 00 00 00 00 00 00 76 DC D8 D8 D8 D8 DC  // .........v......
    6F40: 76 00 00 00 00 00 00 78 CC CC D8 FC C6 C6 C6 C6  // v......x........
    6F50: CC 00 00 00 00 00 00 FE 66 62 60 60 60 60 60 60  // ........fb``````
    6F60: 60 00 00 00 00 00 00 00 00 00 FE 6C 6C 6C 6C 6C  // `..........lllll
    6F70: 6C 00 00 00 00 00 00 FE C6 62 30 18 18 30 62 C6  // l........b0..0b.
    6F80: FE 00 00 00 00 00 00 00 00 00 7E D8 CC CC CC D8  // ..........~.....
    6F90: 70 00 00 00 00 00 00 00 00 66 66 66 66 66 7C 60  // p........fffff|`
    6FA0: C0 80 00 00 00 00 00 00 00 00 76 DC 18 18 18 18  // ..........v.....
    6FB0: 18 00 00 00 00 00 00 FE 38 38 6C C6 C6 6C 38 38  // ........88l..l88
    6FC0: FE 00 00 00 00 00 00 00 38 6C C6 C6 FE C6 C6 6C  // ........8l.....l
    6FD0: 38 00 00 00 00 00 00 38 6C C6 C6 C6 C6 6C 6C 6C  // 8......8l....lll
    6FE0: EE 00 00 00 00 00 00 3E 60 60 3C 66 C6 C6 C6 CC  // .......>``<f....
    6FF0: 78 00 00 00 00 00 00 00 00 00 7E DB DB DB 7E 00  // x.........~...~.
    7000: 00 00 00 00 00 00 00 02 06 7C CE DE F6 F6 7C 60  // .........|....|`
    7010: C0 00 00 00 00 00 00 00 1C 30 60 60 7C 60 60 30  // .........0``|``0
    7020: 1C 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6  // .......|........
    7030: C6 00 00 00 00 00 00 00 00 FE 00 00 FE 00 00 FE  // ................
    7040: 00 00 00 00 00 00 00 00 00 18 18 7E 18 18 00 00  // ...........~....
    7050: 7E 00 00 00 00 00 00 30 18 0C 06 0C 18 30 00 00  // ~......0.....0..
    7060: 7E 00 00 00 00 00 00 0C 18 30 60 30 18 0C 00 00  // ~........0`0....
    7070: 7E 00 00 00 00 00 00 00 00 0C 1E 1A 18 18 18 18  // ~...............
    7080: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 58  // ...............X
    7090: 78 30 00 00 00 00 00 00 00 18 18 00 7E 00 18 18  // x0..........~...
    70A0: 00 00 00 00 00 00 00 00 00 00 00 76 DC 00 76 DC  // ...........v..v.
    70B0: 00 00 00 00 00 00 00 78 CC CC 78 00 00 00 00 00  // .......x..x.....
    70C0: 00 00 00 00 00 00 00 00 00 00 00 00 18 18 00 00  // ................
    70D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 18 00 00  // ................
    70E0: 00 00 00 00 00 00 00 1F 18 18 18 18 18 D8 D8 78  // ...............x
    70F0: 38 18 00 00 00 00 00 D8 6C 6C 6C 6C 6C 00 00 00  // 8.......lllll...
    7100: 00 00 00 00 00 00 00 70 D8 18 30 60 F8 00 00 00  // .......p..0`....
    7110: 00 00 00 00 00 00 00 00 00 00 7E 7E 7E 7E 7E 7E  // ..........~~~~~~
    7120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7130: 00 00 00 00 00 1D 00 00 00 00 00 24 66 FF 66 24  // ...........$f.f$
    7140: 00 00 00 00 00 00 2F 00 00 00 01 03 06 0C 18 30  // ....../........0
    7150: 60 C0 80 00 00 00 00 30 00 00 7E C3 C3 C3 DB DB  // `......0..~.....
    7160: C3 C3 C3 7E 00 00 00 00 4D 00 00 C3 C3 E7 FF FF  // ...~....M.......
    7170: DB DB C3 C3 C3 00 00 00 00 54 00 00 FF 99 18 18  // .........T......
    7180: 18 18 18 18 18 3C 00 00 00 00 56 00 00 C3 C3 C3  // .....<....V.....
    7190: C3 C3 C3 C3 66 3C 18 00 00 00 00 57 00 00 C3 C3  // ....f<.....W....
    71A0: C3 C3 DB DB DB DB FF 66 00 00 00 00 58 00 00 C3  // .......f....X...
    71B0: C3 C3 66 3C 3C 66 C3 C3 C3 00 00 00 00 59 00 00  // ..f<<f.......Y..
    71C0: C3 C3 C3 C3 66 3C 18 18 18 3C 00 00 00 00 5C 00  // ....f<...<....\.
    71D0: 00 00 80 C0 60 30 18 0C 06 03 01 00 00 00 00 6D  // ....`0.........m
    71E0: 00 00 00 00 00 66 FF DB DB DB C3 C3 00 00 00 00  // .....f..........
    71F0: 76 00 00 00 00 00 C3 C3 C3 C3 66 3C 18 00 00 00  // v.........f<....
    7200: 00 77 00 00 00 00 00 C3 C3 DB DB DB FF 66 00 00  // .w...........f..
    7210: 00 00 00 00 CD 60 C3 0B DB 74 03 E9 46 01 57 32  // .....`...t..F.W2
    7220: C0 B9 40 00 F3 AA 5F BB 9A 8E 26 89 1D 26 8C 4D  // ..@..._...&..&.M
    7230: 02 2E 8E 1E 47 04 57 BE 49 04 B9 1E 00 83 C7 04  // ....G.W.I.......
    7240: FC 8A 04 26 88 05 46 47 E2 F7 5F A0 84 04 FE C0  // ...&..FG.._.....
    7250: 26 88 45 22 A1 85 04 26 89 45 23 57 E8 D9 1B 5F  // &.E"...&.E#W..._
    7260: 26 88 5D 25 26 88 7D 26 8A 1E 49 04 E8 FC 05 74  // &.]%&.}&..I....t
    7270: 05 80 FB 13 7F 1D 32 FF D1 E3 2E 8A 87 72 8E 32  // ......2......r.2
    7280: E4 0A C0 74 01 40 26 89 45 27 2E 8A 87 73 8E 26  // ...t.@&.E'...s.&
    7290: 88 45 29 A1 85 04 8A 16 84 04 FE C2 F6 E2 B2 00  // .E).............
    72A0: 3D C8 00 7E 15 B2 01 3D 5E 01 7E 0E B2 02 3D 90  // =..~...=^.~...=.
    72B0: 01 7E 07 B2 03 3D E0 01 7E 00 26 88 55 2A 8A 26  // .~...=..~.&.U*.&
    72C0: 87 04 8A C4 24 01 C0 E0 04 80 E4 02 D0 E4 0A E0  // ....$...........
    72D0: 80 F4 10 A0 89 04 24 0A 0A E0 E8 94 08 B2 C0 B0  // ......$.........
    72E0: 30 EE 42 EC 24 08 C0 E0 02 0A C4 0C 01 26 88 45  // 0.B.$........&.E
    72F0: 2D B0 03 26 88 45 31 E8 77 08 1E 06 32 D2 C4 1E  // -..&.E1.w...2...
    7300: A8 04 8C C1 8C CE 3B CE 74 34 26 C5 77 04 8C D9  // ......;.t4&.w...
    7310: 0B F1 74 03 80 CA 10 26 C5 77 0C 8C D9 0B F1 74  // ..t....&.w.....t
    7320: 03 80 CA 08 26 C5 77 08 8C D9 0B F1 74 03 80 CA  // ....&.w.....t...
    7330: 04 26 C5 77 10 8C D9 0B F1 74 03 80 CA 01 07 1F  // .&.w.....t......
    7340: 26 88 55 32 B0 03 BA C4 03 E8 E4 04 8A E0 C0 EC  // &.U2............
    7350: 02 8A D4 8A F2 D0 EE 81 E2 04 04 25 03 03 0B C2  // ...........%....
    7360: 26 89 45 2B 8B EC C6 46 1A 1B C3 0A C0 74 0F FE  // &.E+...F.....t..
    7370: C8 74 36 FE C8 74 56 8B EC C6 46 1A 00 C3 B8 20  // .t6..tV...F.... 
    7380: 00 F6 C1 01 74 03 83 C0 60 F6 C1 02 74 03 83 C0  // ....t...`...t...
    7390: 3A F6 C1 04 74 03 05 03 03 83 C0 3F C1 E8 06 8B  // :...t......?....
    73A0: EC 89 46 0E C6 46 1A 1C C3 8B FB 83 C7 20 F6 C1  // ..F..F....... ..
    73B0: 01 74 03 E8 85 00 F6 C1 02 74 03 E8 EF 00 F6 C1  // .t.......t......
    73C0: 04 74 03 E8 F8 01 8B EC C6 46 1A 1C C3 F6 C1 01  // .t.......F......
    73D0: 74 06 E8 16 15 E8 25 01 F6 C1 02 74 03 E8 85 01  // t.....%....t....
    73E0: F6 C1 04 74 03 E8 12 02 EB DC 8A C4 EE 42 EC AA  // ...t.........B..
    73F0: FE C4 4A E2 F5 C3 E8 6B 04 BD C0 03 B9 15 00 32  // ..J....k.......2
    7400: E4 EC 87 EA 8A C4 EE 42 EC AA FE C4 4A 87 EA E2  // .......B....J...
    7410: F0 EC 87 EA B0 20 EE C3 26 8A 05 88 04 47 46 E2  // ..... ..&....GF.
    7420: F7 C3 26 8A 25 EF 47 FE C0 E2 F7 C3 B2 C0 8A C4  // ..&.%.G.........
    7430: EE 26 8A 05 47 FE C4 EE E2 F4 C3 9C FA 51 57 8B  // .&..G........QW.
    7440: C7 2B C3 26 89 07 8B F7 E8 0A 04 EC 26 88 44 01  // .+.&........&.D.
    7450: 26 89 54 41 B2 CE EC 26 88 44 02 B2 CC EC 26 88  // &.TA...&.D....&.
    7460: 44 09 B2 CA EC 26 88 44 04 B2 C4 EC 26 88 04 83  // D....&.D....&...
    7470: C7 05 B9 04 00 B4 01 E8 70 FF 26 8A 04 EE 8B FE  // ........p.&.....
    7480: 83 C7 0A 26 8B 54 41 32 E4 B9 19 00 E8 5B FF 26  // ...&.TA2.....[.&
    7490: 8A 44 01 EE E8 5F FF B2 CE 32 E4 B9 09 00 E8 49  // .D..._...2.....I
    74A0: FF 26 8A 44 02 EE 5F 59 83 C7 60 9D C3 9C FA 8B  // .&.D.._Y..`.....
    74B0: C7 2B C3 26 89 47 02 51 57 2E 8E 1E 47 04 A0 10  // .+.&.G.QW...G...
    74C0: 04 24 30 AA BE 49 04 B9 1E 00 F3 A4 BE 84 04 B1  // .$0..I..........
    74D0: 07 F3 A4 BE A8 04 B1 04 F3 A4 BE 14 00 B1 04 F3  // ................
    74E0: A4 BE 74 00 B1 04 F3 A4 BE 7C 00 B1 04 F3 A4 BE  // ..t......|......
    74F0: 0C 01 B1 04 F3 A4 5F 59 83 C7 3A 9D C3 9C FA 26  // ......_Y..:....&
    7500: 8B 3F 03 FB 8B F7 51 8B FE 83 C7 05 BA C4 03 B8  // .?....Q.........
    7510: 00 01 EF B0 01 B9 04 00 E8 07 FF 47 B2 C2 26 8A  // ...........G..&.
    7520: 44 09 EE B2 C4 B8 00 03 EF 26 8A 04 EE 26 8B 54  // D........&...&.T
    7530: 41 B8 11 00 EF B1 19 32 C0 E8 E6 FE 26 8A 44 01  // A......2....&.D.
    7540: EE 80 C2 06 26 8A 44 04 EE EC B1 15 32 E4 E8 DB  // ....&.D.....2...
    7550: FE B0 20 EE B1 09 32 C0 B2 CE E8 C5 FE 26 8A 44  // .. ...2......&.D
    7560: 02 EE 59 9D C3 9C FA 26 8B 7F 02 03 FB 06 51 2E  // ..Y....&......Q.
    7570: 8E 1E 47 04 26 8A 05 80 26 10 04 CF 08 06 10 04  // ..G.&...&.......
    7580: 47 BE 49 04 B9 1E 00 E8 8E FE BE 84 04 B1 07 E8  // G.I.............
    7590: 86 FE BE A8 04 B1 04 E8 7E FE BE 14 00 B1 04 E8  // ........~.......
    75A0: 76 FE BE 74 00 B1 04 E8 6E FE BE 7C 00 B1 04 E8  // v..t....n..|....
    75B0: 66 FE BE 0C 01 B1 04 E8 5E FE 59 07 9D C3 9C FA  // f.......^.Y.....
    75C0: 8B C7 2B C3 26 89 47 04 E8 A6 05 B2 C0 B0 34 EE  // ..+.&.G.......4.
    75D0: 42 EC 26 88 05 BA C8 03 EC 26 88 45 01 50 4A 4A  // B.&......&.E.PJJ
    75E0: EC 26 88 45 02 83 C7 03 B9 00 03 42 32 C0 EE 42  // .&.E.......B2..B
    75F0: 42 EC AA E2 FC 58 4A EE 9D C3 9C FA 26 8B 77 04  // B....XJ.....&.w.
    7600: 03 F3 E8 6C 05 B2 C0 B0 34 EE 26 8A 04 EE BA C6  // ...l....4.&.....
    7610: 03 26 8A 44 02 EE 56 42 42 83 C6 03 32 C0 EE 42  // .&.D..VBB...2..B
    7620: B9 00 03 26 8A 04 EE 46 E2 F9 5E FE CA 26 8A 44  // ...&...F..^..&.D
    7630: 01 EE 9D C3 BA CC 03 EC 24 FE 0A C4 B2 C2 EE C3  // ........$.......
    7640: E8 A8 12 B2 C0 86 C4 EE EB 00 EB 00 86 C4 EE EB  // ................
    7650: 00 EB 00 B0 20 EE C3 50 8A E0 80 E4 80 80 26 87  // .... ..P......&.
    7660: 04 7F 08 26 87 04 24 7F 8A E0 3C 07 7E 1E 26 F6  // ...&..$...<.~.&.
    7670: 47 33 01 75 17 3C 23 74 13 3C 32 74 0F 3C 33 74  // G3.u.<#t.<2t.<3t
    7680: 0B B4 03 26 F6 47 09 01 75 02 B4 07 88 26 49 04  // ...&.G..u....&I.
    7690: BA B4 03 80 0E 87 04 02 26 F6 47 09 01 74 07 B2  // ........&.G..t..
    76A0: D4 80 26 87 04 FD 89 16 63 04 C7 06 4E 04 00 00  // ..&.....c...N...
    76B0: C6 06 62 04 00 B9 08 00 BF 50 04 FC 06 1E 07 33  // ..b......P.....3
    76C0: C0 F3 AB 07 26 8A 07 32 E4 A3 4A 04 26 8A 47 01  // ....&..2..J.&.G.
    76D0: A2 84 04 26 8A 47 02 A3 85 04 26 8B 47 03 A3 4C  // ...&.G....&.G..L
    76E0: 04 26 8B 47 14 86 C4 A3 60 04 58 C3 52 32 E4 33  // .&.G....`.X.R2.3
    76F0: D2 B0 0D CD 17 F6 C4 29 75 08 32 E4 33 D2 B0 0A  // .......)u.2.3...
    7700: CD 17 5A C3 06 1E 60 2E 8E 1E 47 04 2E 83 0E 51  // ..Z...`...G....Q
    7710: 04 00 75 6E 80 3E 00 05 01 74 67 C6 06 00 05 01  // ..un.>...tg.....
    7720: 8A 1E 62 04 32 FF D1 E3 8B FB 8B 85 50 04 8A 3E  // ..b.2.......P..>
    7730: 62 04 50 32 F6 8A 0E 84 04 32 ED 41 51 8B 0E 4A  // b.P2.....2.AQ..J
    7740: 04 32 D2 E8 A6 FF F6 C4 29 75 3D 51 52 89 95 50  // .2......)u=QR..P
    7750: 04 B4 08 E8 B0 D4 0A C0 75 02 B0 20 33 D2 32 E4  // ........u.. 3.2.
    7760: CD 17 F6 C4 29 75 1F 5A FE C2 59 E2 DE FE C6 59  // ....)u.Z..Y....Y
    7770: E2 CA E8 77 FF 32 C0 A2 00 05 58 89 85 50 04 E8  // ...w.2....X..P..
    7780: AF 03 61 1F 07 CF 5A 59 59 B0 FF EB EA 52 2A F5  // ..a...ZYY....R*.
    7790: 38 C6 7D 02 32 C0 2E 8E 06 49 04 5A C3 A0 85 04  // 8.}.2....I.Z....
    77A0: F6 E3 8A F7 8B D8 8B CA BA C4 03 B8 02 0F EF B4  // ................
    77B0: 02 E8 6D 00 8B D1 32 ED 8A E6 8A C6 F3 AA 03 FD  // ..m...2.........
    77C0: 8A CA 4B 75 F7 32 E4 E8 57 00 C3 53 8A 1E 62 04  // ..Ku.2..W..S..b.
    77D0: 0B C0 75 04 0A DB 74 03 E8 35 03 5B 8B F8 2B D1  // ..u...t..5.[..+.
    77E0: 81 C2 01 01 8A C3 32 E4 C3 8A C6 32 F6 2B EA 0A  // ......2....2.+..
    77F0: DB 74 2A 2A C3 F6 26 85 04 8B C8 52 B4 01 E8 20  // .t**..&....R... 
    7800: 00 B2 C4 B8 02 0F EF 5A 1E 06 1F 8B C1 8B CA F3  // .......Z........
    7810: A4 03 F5 03 FD 48 75 F5 1F E8 81 FF C3 8A D8 EB  // .....Hu.........
    7820: F8 BA CE 03 B0 05 EE 42 EC 24 FC 0A C4 EE 4A C3  // .......B.$....J.
    7830: 9C FA EE 42 EB 00 EC 4A 9D C3 1E 2E 8E 1E 47 04  // ...B...J......G.
    7840: 8B 16 63 04 80 C2 06 1F C3 1E 2E 8E 1E 47 04 8B  // ..c..........G..
    7850: 16 63 04 1F C3 50 BA CC 03 EC B2 D4 A8 01 75 02  // .c...P........u.
    7860: B2 B4 58 C3 E8 EE FF 80 C2 06 C3 1E 2E 8E 1E 47  // ..X............G
    7870: 04 80 3E 49 04 03 74 13 80 3E 49 04 02 74 0C 80  // ..>I..t..>I..t..
    7880: 3E 49 04 01 74 05 80 3E 49 04 00 1F C3 50 2E 8E  // >I..t..>I....P..
    7890: 06 4B 04 A0 10 04 24 30 3C 30 74 05 2E 8E 06 4D  // .K....$0<0t....M
    78A0: 04 58 0B C0 74 03 E8 E1 01 03 06 4E 04 81 C2 01  // .X..t......N....
    78B0: 01 2B D1 32 ED 8B 2E 4A 04 8B F8 8B F0 8B C5 F6  // .+.2...J........
    78C0: E3 D1 E0 D1 E5 0A DB 75 02 8A DE 38 F3 7E 02 8A  // .......u...8.~..
    78D0: DE C3 FC 8A D8 8B C1 E8 B3 FF 03 F0 3A 16 4A 04  // ............:.J.
    78E0: 74 06 06 1F E8 1B 00 C3 06 1F E8 40 00 C3 FC 8A  // t..........@....
    78F0: D8 8A C1 8A E6 E8 95 FF F7 DD 2B F0 06 1F E8 01  // ..........+.....
    7900: 00 C3 53 8A CE 2A CB 32 ED 32 F6 2B EA 2B EA E3  // ..S..*.2.2.+.+..
    7910: 0E 8A E1 8B CA F3 A5 03 F5 03 FD FE CC 75 F4 58  // .............u.X
    7920: B0 20 8A CA F3 AB 03 FD FE CB 75 F6 C3 53 8A C6  // . ........u..S..
    7930: 2A C3 74 06 F6 E2 8B C8 F3 A5 58 8B C8 F6 E2 91  // *.t.......X.....
    7940: B0 20 F3 AB C3 8B D8 E8 2E 00 2E 8E 1E 4D 04 8A  // . ...........M..
    7950: C3 22 DF D3 E3 A8 80 74 03 30 1C C3 F6 D7 8A 34  // .".....t.0.....4
    7960: 22 F7 0A DE 88 1C C3 8A FC E8 0C 00 2E 8E 1E 4D  // "..............M
    7970: 04 8A 04 D2 E8 22 C7 C3 B0 28 F6 E2 F6 C2 01 74  // ....."...(.....t
    7980: 03 05 D8 1F 8B F1 C1 EE 02 80 FF 05 7F 0C 03 F0  // ................
    7990: F6 D1 80 E1 03 D0 E1 B7 03 C3 D1 EE 03 F0 F6 D1  // ................
    79A0: 80 E1 07 B7 01 C3 FC 8A D8 2E 8E 06 4D 04 8B C1  // ............M...
    79B0: E8 86 00 75 02 8A DE 03 F0 E8 24 00 C3 FC 8A D8  // ...u......$.....
    79C0: 2E 8E 06 4D 04 8A C1 8A E6 E8 6D 00 75 02 8A DE  // ...M......m.u...
    79D0: F7 DD 81 C6 F0 00 81 C7 F0 00 2B F0 E8 01 00 C3  // ..........+.....
    79E0: 8A CE 2A CB E3 2C 51 8A CA 56 57 D1 E9 F3 A5 13  // ..*..,Q..VW.....
    79F0: C9 F3 A4 8A CA 2B F1 2B F9 81 C6 00 20 81 C7 00  // .....+.+.... ...
    7A00: 20 D1 E9 F3 A5 13 C9 F3 A4 5F 5E 03 F5 03 FD 59  //  ........_^....Y
    7A10: E2 D4 8A C7 8A E7 8A CA 57 D1 E9 F3 AB 13 C9 F3  // ........W.......
    7A20: AA 8A CA 2B F9 81 C7 00 20 D1 E9 F3 AB 13 C9 F3  // ...+.... .......
    7A30: AA 5F 03 FD FE CB 75 DE C3 E8 B0 00 81 C2 01 01  // ._....u.........
    7A40: 2B D1 38 F3 76 02 32 DB 51 B1 02 D2 E6 D2 E3 59  // +.8.v.2.Q......Y
    7A50: 32 ED BD 50 00 80 3E 49 04 06 74 04 D0 E2 D1 E0  // 2..P..>I..t.....
    7A60: 06 1F 8B F8 8B F0 B0 50 F6 E3 0A DB C3 52 53 8A  // .......P.....RS.
    7A70: DF 32 FF D1 E3 8B 87 50 04 E8 0E 00 50 D1 EB A1  // .2.....P....P...
    7A80: 4C 04 F7 E3 5B 03 C3 5B 5A C3 52 8B D0 A0 4A 04  // L...[..[Z.R...J.
    7A90: F6 E4 32 F6 03 C2 D1 E0 5A C3 8B E8 83 E5 0F 2E  // ..2.....Z.......
    7AA0: 8A A6 4A 7A 8B E8 C1 ED 04 83 E5 0F 2E 8A 86 4A  // ..Jz...........J
    7AB0: 7A C3 00 03 0C 0F 30 33 3C 3F C0 C3 CC CF F0 F3  // z.....03<?......
    7AC0: FC FF 26 8B 04 86 E0 BA 00 80 F6 C4 C0 74 02 0A  // ..&..........t..
    7AD0: D6 D0 EE C1 E0 02 75 F2 88 56 00 45 C3 8B 16 63  // ......u..V.E...c
    7AE0: 04 8A C5 86 E0 EF 8A E1 FE C0 EF C3 52 8B D0 8A  // ............R...
    7AF0: C4 F6 26 4A 04 C1 E0 02 32 F6 03 C2 5A C3 53 8A  // ..&J....2...Z.S.
    7B00: DF 32 FF D1 E3 8B 87 50 04 D1 EB E8 02 00 5B C3  // .2.....P......[.
    7B10: 52 8B D0 32 F6 52 8A C4 F6 26 85 04 F7 26 4A 04  // R..2.R...&...&J.
    7B20: 5A 03 C2 0A DB 74 08 03 06 4C 04 FE CB 75 F8 5A  // Z....t...L...u.Z
    7B30: C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 03  // .R...J...2......
    7B40: 06 4E 04 D1 F8 8B C8 B4 0E E8 91 FF 5A C3 8B C2  // .N..........Z...
    7B50: F7 26 4A 04 8B F9 C1 EF 03 03 F8 0A FF 74 0A 8A  // .&J..........t..
    7B60: C7 32 E4 F7 26 4C 04 03 F8 80 E1 07 B4 80 D2 EC  // .2..&L..........
    7B70: C3 E8 F0 FC EC C3 E8 F8 FF B2 C0 B0 20 EE C3 E8  // ............ ...
    7B80: EF FF B2 C0 32 C0 EE C3 C4 3E A8 04 26 C4 7D 04  // ....2....>..&.}.
    7B90: 8C C5 0B EF C3 53 B0 0E E8 95 FC 8A E0 B0 0F E8  // .....S..........
    7BA0: 8E FC 8B D8 B8 0E AA EF B8 0F 55 EF B0 0E E8 7F  // ..........U.....
    7BB0: FC 3C AA 74 0D B0 0F E8 76 FC 3C 55 74 04 32 C0  // .<.t....v.<Ut.2.
    7BC0: 5B C3 B0 0E 8A E7 EF FE C0 8A E3 EF B0 01 0A C0  // [...............
    7BD0: 5B C3 8A EE 8A 36 85 04 06 1F 0A DB 74 25 8A C5  // [....6......t%..
    7BE0: 2A C3 F6 E6 8B C8 52 32 F6 C1 E2 02 8B C2 D1 E2  // *.....R2........
    7BF0: 2B D5 51 8B C8 F3 A5 2B FA 2B F2 59 E2 F4 5A E8  // +.Q....+.+.Y..Z.
    7C00: 05 00 C3 8A DD EB F8 8A C6 F6 E3 8B C8 8A C7 8A  // ................
    7C10: E0 32 F6 C1 E2 02 8B DA D1 E2 8B F1 2B D5 8B CB  // .2..........+...
    7C20: F3 AB 2B FA 4E 75 F7 C3 2E 8E 1E 47 04 89 0E 60  // ..+.Nu.....G...`
    7C30: 04 8A C5 24 60 A8 20 74 06 B9 00 1E E9 94 00 F6  // ...$`. t........
    7C40: 06 87 04 01 0F 85 8B 00 80 3E 49 04 07 74 06 E8  // .........>I..t..
    7C50: 19 FC 74 01 C3 F6 06 87 04 08 74 03 CD 42 C3 8A  // ..t.......t..B..
    7C60: 36 85 04 8A D6 FE CA 38 CD 7E 1F 0A C9 74 64 8A  // 6......8.~...td.
    7C70: E9 8A CE FE C9 EB 5C 38 D1 74 58 8A CE 80 FD 03  // ......\8.tX.....
    7C80: 7C 04 8A E9 D0 ED FE C9 EB 49 80 F9 03 7E 44 8A  // |........I...~D.
    7C90: E1 2A E5 0A E4 75 0A 38 CA 74 38 FE CA 38 CA 74  // .*...u.8.t8..8.t
    7CA0: 32 8A C5 0A C1 38 F0 7E 0A 80 FC 02 7E 12 80 FD  // 2....8.~....~...
    7CB0: 02 7F C8 80 FC 03 7D BF 8A D6 FE CA 38 D1 74 13  // ......}.....8.t.
    7CC0: 8A CE FE C9 FE C9 8A E9 2A EC 80 FE 08 7F 04 FE  // ........*.......
    7CD0: C1 FE C5 B4 0A E8 05 FE C3 2E 8E 1E 47 04 A2 62  // ............G..b
    7CE0: 04 32 E4 8B F0 F7 26 4C 04 A3 4E 04 8B C8 E8 7A  // .2....&L..N....z
    7CF0: FB 74 07 80 3E 49 04 07 77 02 D1 F9 B4 0C E8 DC  // .t..>I..w.......
    7D00: FD D1 E6 8B 84 50 04 E8 27 FE C3 2E 8E 1E 47 04  // .....P..'.....G.
    7D10: 8A 26 49 04 E8 35 9F 74 07 C7 06 50 04 00 00 C3  // .&I..5.t...P....
    7D20: E8 48 FB 74 0B 80 FC 07 74 06 77 08 E8 77 FC C3  // .H.t....t.w..w..
    7D30: E8 9F FB C3 80 FC 13 7C 03 74 1F C3 E8 4E FA 8A  // .......|.t...N..
    7D40: D8 8B C1 E8 85 FA 8B 2E 4A 04 52 F6 26 85 04 F7  // ........J.R.&...
    7D50: E5 8B F7 03 F0 5A E8 90 FA C3 E8 30 FA 8A D8 8B  // .....Z.....0....
    7D60: C1 E8 67 FA C1 E7 03 52 8B 2E 4A 04 C1 E5 03 F7  // ..g....R..J.....
    7D70: 26 85 04 F7 E5 8B F7 03 F0 5A E8 55 FE C3 2E 8E  // &........Z.U....
    7D80: 1E 47 04 8A 26 49 04 E8 E1 FA 74 0C 80 FC 07 74  // .G..&I....t....t
    7D90: 07 77 40 80 FC 03 7F 04 E8 53 FB C3 E8 1E FC C3  // .w@......S......
    7DA0: E8 EA F9 8A D8 8A C1 8A E6 FE C4 E8 1D FA 2B 3E  // ..............+>
    7DB0: 4A 04 C1 E7 03 52 F7 26 85 04 F7 26 4A 04 C1 E0  // J....R.&...&J...
    7DC0: 03 8B F7 2B F0 5A 8B 2E 4A 04 C1 E5 03 F7 DD E8  // ...+.Z..J.......
    7DD0: 00 FE C3 80 FC 13 7C 03 74 C6 C3 E8 AF F9 8A D8  // ......|.t.......
    7DE0: 8A C1 8A E6 FE C4 E8 E2 F9 52 8B 2E 4A 04 F7 26  // .........R..J..&
    7DF0: 85 04 F7 E5 2B FD 8B F7 2B F0 5A F7 DD E8 E9 F9  // ....+...+.Z.....
    7E00: C3 2E 8E 1E 47 04 2E 8E 06 4D 04 E8 5D FA 74 11  // ....G....M..].t.
    7E10: 80 3E 49 04 07 7C 18 2E 8E 06 4B 04 74 03 E9 B1  // .>I..|....K.t...
    7E20: 00 E8 49 FC 8B D8 26 8B 07 8B EC 89 46 1A C3 A1  // ..I...&.....F...
    7E30: 50 04 E8 B7 FC 8B F0 BB 08 00 2B E3 8B EC 80 3E  // P.........+....>
    7E40: 49 04 06 75 1F B9 04 00 26 8A 04 88 46 00 45 26  // I..u....&...F.E&
    7E50: 8A 84 00 20 88 46 00 45 83 C6 50 E2 EB B8 00 02  // ... .F.E..P.....
    7E60: B2 80 EB 17 D1 E6 B9 04 00 E8 56 FC 81 C6 00 20  // ..........V.... 
    7E70: E8 4F FC 81 EE B0 1F E2 F0 EB E2 2B EB C4 3E 0C  // .O.........+..>.
    7E80: 01 32 F6 80 FB 0E 75 09 26 83 7D FE 10 75 02 B6  // .2....u.&.}..u..
    7E90: 80 16 1F 8B F5 8B CB F6 C6 80 74 01 47 56 57 F3  // ..........t.GVW.
    7EA0: A6 5F 5E 74 23 FE C0 03 FB F6 C6 80 74 01 47 FE  // ._^t#.......t.G.
    7EB0: CA 75 E2 FE CC 74 0F 2E 8E 1E 47 04 C4 3E 7C 00  // .u...t....G..>|.
    7EC0: B0 80 B2 80 EB CB 32 C0 8B E5 03 E3 8B EC 89 46  // ......2........F
    7ED0: 1A C3 80 3E 49 04 13 7C 05 75 02 EB 5A C3 2E 8E  // ...>I..|.u..Z...
    7EE0: 06 49 04 E8 18 FC 8B F0 8B 1E 85 04 2B E3 8B EC  // .I..........+...
    7EF0: B8 05 08 B9 05 00 BA CE 03 80 3E 49 04 0F 72 1A  // ..........>I..r.
    7F00: F6 06 87 04 60 75 13 B4 0A F7 C6 01 00 75 02 B4  // ....`u.......u..
    7F10: 05 B0 07 EF B8 05 18 B9 05 01 EF 51 8B CB 26 8A  // ...........Q..&.
    7F20: 04 F6 D0 88 46 00 45 03 36 4A 04 E2 F1 58 EF B8  // ....F.E.6J...X..
    7F30: 00 01 32 D2 E9 44 FF 2E 8E 06 49 04 A1 50 04 8B  // ..2..D....I..P..
    7F40: D0 32 F6 52 8A C4 32 E4 F7 26 4A 04 F7 26 85 04  // .2.R..2..&J..&..
    7F50: 5A 03 C2 8B F0 8B 1E 85 04 2B E3 8B EC 53 8B 3E  // Z........+...S.>
    7F60: 4A 04 4F C1 E7 03 C1 E6 03 B9 08 00 32 E4 26 8A  // J.O.........2.&.
    7F70: 04 D0 E4 0A C0 74 03 80 CC 01 46 E2 F1 88 66 00  // .....t....F...f.
    7F80: 45 03 F7 4B 75 E3 5B B8 00 01 32 D2 E9 EC FE 33  // E..Ku.[...2....3
    7F90: ED EB 03 BD 01 00 2E 8E 1E 47 04 2E 8E 06 4D 04  // .........G....M.
    7FA0: 8A 26 49 04 E8 C4 F8 74 0F 2E 8E 06 4B 04 80 FC  // .&I....t....K...
    7FB0: 07 74 05 7C 3D E9 0B 02 8A E3 8B F0 8A DF 32 FF  // .t.|=.........2.
    7FC0: D1 E3 8B 87 50 04 8B D0 A0 4A 04 F6 E4 32 F6 03  // ....P....J...2..
    7FD0: C2 8B F8 D1 E7 0A DB 74 0B D0 EB A1 4C 04 03 F8  // .......t....L...
    7FE0: FE CB 75 FA 8B C6 0B ED 75 03 F3 AB C3 AA 47 E2  // ..u.....u.....G.
    7FF0: FC C3 50 2E 8E 06 4D 04 A1 50 04 E8 EE FA 8B F8  // ..P...M..P......
    8000: A0 50 04 8A 26 4A 04 8B E8 58 A8 80 74 08 24 7F  // .P..&J...X..t.$.
    8010: C5 36 7C 00 EB 04 C5 36 0C 01 8A FC 32 E4 C1 E0  // .6|....6....2...
    8020: 03 03 F0 80 FF 06 74 69 D1 E7 8A F3 B0 55 80 E3  // ......ti.....U..
    8030: 03 F6 E3 8A D8 8A F8 8B C5 50 B2 04 F6 C6 80 75  // .........P.....u
    8040: 27 AC E8 55 FA 23 C3 AB AC E8 4E FA 23 C3 26 89  // '..U.#....N.#.&.
    8050: 85 FE 1F 83 C7 4E FE CA 75 E7 83 EE 08 81 EF 3E  // .....N..u......>
    8060: 01 58 E8 72 00 E2 D2 C3 AC E8 2E FA 23 C3 26 31  // .X.r........#.&1
    8070: 05 AC E8 25 FA 23 C3 26 31 85 00 20 83 C7 50 FE  // ...%.#.&1.. ..P.
    8080: CA 75 E5 83 EE 08 81 EF 3E 01 58 E8 49 00 E2 A9  // .u......>.X.I...
    8090: C3 8B C5 50 B2 04 F6 C3 80 74 1F AC 26 30 05 AC  // ...P.....t..&0..
    80A0: 26 30 85 00 20 83 C7 50 FE CA 7F EF 83 EE 08 81  // &0.. ..P........
    80B0: EF 3F 01 58 E8 20 00 E2 DA C3 AC AA AC 26 88 85  // .?.X. .......&..
    80C0: FF 1F 83 C7 4F FE CA 7F F1 83 EE 08 81 EF 3F 01  // ....O.........?.
    80D0: 58 E8 03 00 E2 BD C3 FE C0 38 E0 72 06 32 C0 81  // X........8.r.2..
    80E0: C7 F0 00 C3 8A 16 85 04 F6 E2 8B F0 32 F6 8B EA  // ............2...
    80F0: 66 0F B6 06 51 04 F6 E2 66 0F B7 16 4A 04 83 FA  // f...Q...f...J...
    8100: 64 75 03 BA 68 00 83 FA 5A 75 03 BA 60 00 81 FA  // du..h...Zu..`...
    8110: AF 00 75 03 BA B0 00 52 F7 E2 66 0F B7 F8 66 0F  // ..u....R..f...f.
    8120: B6 06 50 04 66 03 F8 66 C1 CF 10 03 FA 66 C1 C7  // ..P.f..f.....f..
    8130: 03 81 CF 00 FF 66 C1 C7 10 5A 8A E2 4A C1 E2 03  // .....f...Z..J...
    8140: A0 50 04 50 C5 06 0C 01 03 F0 2E 8E 06 49 04 58  // .P.P.........I.X
    8150: 57 51 50 9C FC 8B CD E8 3B 00 B5 08 AC 8A E0 8A  // WQP.....;.......
    8160: C7 D0 E4 73 02 8A C3 26 88 05 66 47 FE CD 75 EF  // ...s...&..fG..u.
    8170: 66 03 FA E2 E2 9D 58 59 5F 83 C7 08 FE C0 38 E0  // f.....XY_.....8.
    8180: 72 0E 51 32 C0 8B CD 49 03 FA 83 C7 08 E2 F9 59  // r.Q2...I.......Y
    8190: 2B F5 E2 BC C3 06 52 33 C0 8E C0 66 C1 C7 10 8B  // +.....R3...f....
    81A0: C7 66 C1 C7 10 E8 A4 9A 74 16 38 E0 74 12 0F B6  // .f......t.8.t...
    81B0: D0 E8 8B C9 8A E0 66 C1 C7 10 8B F8 66 C1 C7 10  // ......f.....f...
    81C0: 5A 07 C3 80 FC 13 7C 0B 0F 84 18 FF 80 FC 62 0F  // Z.....|.......b.
    81D0: 84 11 FF E8 01 00 C3 80 FC 11 75 06 80 E3 80 80  // ..........u.....
    81E0: CB 0F 50 53 8A DF 32 FF D1 E3 8B 97 50 04 5B 2E  // ..PS..2.....P.[.
    81F0: 8E 06 49 04 E8 07 F9 8B F8 8B 2E 85 04 58 32 F6  // ..I..........X2.
    8200: 52 8B 36 4A 04 56 8A 26 85 04 C5 36 0C 01 80 FC  // R.6J.V.&...6....
    8210: 0E 75 09 83 7C FE 10 75 03 B4 10 46 F6 E4 03 F0  // .u..|..u...F....
    8220: B6 03 F6 C3 80 75 6D B2 C4 B8 02 0F EF 5A 58 50  // .....um......ZXP
    8230: 52 4A 8A E0 57 51 51 57 8B CD 32 C0 AA 03 FA E2  // RJ..WQQW..2.....
    8240: FB 5F 47 FE C4 38 D4 76 0A 32 E4 8B CD 49 03 FA  // ._G..8.v.2...I..
    8250: 47 E2 FB 59 E2 E0 59 5F BA C4 03 B0 02 8A E3 EF  // G..Y..Y_........
    8260: 5B 4B 5A 51 57 8B CD AC 26 8A 25 AA 03 FB E2 F7  // [KZQW...&.%.....
    8270: 5F 47 2B F5 42 3B D3 76 0A 33 D2 8B CD 49 03 FB  // _G+.B;.v.3...I..
    8280: 47 E2 FB 59 E2 DD BA CE 03 B8 03 00 EF B2 C4 B8  // G..Y............
    8290: 02 0F EF C3 B2 CE B8 03 18 EF EB BC 2E 8E 1E 47  // ...............G
    82A0: 04 80 3E 63 04 B4 74 0B BA CC 03 EC A8 01 75 04  // ..>c..t.......u.
    82B0: CD 42 C3 C3 E8 D1 F8 0A FF 75 1C 8A E3 80 E4 1F  // .B.......u......
    82C0: 80 26 66 04 E0 08 26 66 04 E8 2D 00 8A 1E 66 04  // .&f...&f..-...f.
    82D0: 80 E3 20 B1 05 D2 EB E8 91 F5 74 19 A0 66 04 24  // .. .......t..f.$
    82E0: DF 80 E3 01 74 02 0C 20 A2 66 04 24 10 0C 02 0A  // ....t.. .f.$....
    82F0: D8 E8 53 00 C3 E8 7E F8 C3 53 50 80 E3 0F 8A FB  // ..S...~..SP.....
    8300: D0 E3 81 E3 10 07 0A DF E8 60 F5 74 0E B4 00 8A  // .........`.t....
    8310: C3 E8 2C F3 0B ED 74 03 26 88 1D 8A C3 E8 0B 00  // ..,...t.&.......
    8320: 0B ED 74 04 26 88 5D 10 58 5B C3 8A E0 1E 2E 8E  // ..t.&.].X[......
    8330: 1E 47 04 80 3E 49 04 33 1F 7F 08 8A C4 B4 11 E8  // .G..>I.3........
    8340: FE F2 C3 E8 30 F8 C3 9C FA E8 9F 05 B2 C0 B9 03  // ....0...........
    8350: 00 B4 01 8A C4 EE 8A C3 EE 0B ED 74 04 47 26 88  // ...........t.G&.
    8360: 1D FE C4 80 C3 02 E2 EB B0 20 EE 9D C3 2E 8E 1E  // ......... ......
    8370: 47 04 8A 26 49 04 E8 F2 F4 74 0A 80 FC 07 77 06  // G..&I....t....w.
    8380: 74 03 E8 C0 F5 C3 80 FC 13 7C 03 74 4C C3 8A D8  // t........|.tL...
    8390: E8 BB F7 BA CE 03 B0 08 EF 2E 8E 1E 49 04 F6 C3  // ............I...
    83A0: 80 75 1C B2 C4 B8 02 FF EF 8A 25 C6 05 00 8A E3  // .u........%.....
    83B0: EF 8A 25 B4 FF 88 25 EF B2 CE B8 08 FF EF C3 B8  // ..%...%.........
    83C0: 03 18 EF B2 C4 B0 02 8A E3 EF 8A 25 B4 FF 88 25  // ...........%...%
    83D0: EF B2 CE B8 03 00 EF EB E1 50 2E 8E 06 49 04 A1  // .........P...I..
    83E0: 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 58 26 88 05 C3  // J..........X&...
    83F0: 2E 8E 1E 47 04 8A 26 49 04 E8 6F F4 74 0F 80 FC  // ...G..&I..o.t...
    8400: 07 77 0B 74 08 E8 5F F5 8B EC 89 46 1A C3 80 FC  // .w.t.._....F....
    8410: 13 7C 03 74 29 C3 E8 35 F7 8A CC 2E 8E 1E 49 04  // .|.t)..5......I.
    8420: BA CE 03 32 FF B8 04 03 EF D0 E7 8A 1D 22 D9 74  // ...2.........".t
    8430: 03 80 CF 01 FE CC 7D F0 8B EC 88 7E 1A C3 A1 4A  // ......}....~...J
    8440: 04 C1 E0 03 F7 E2 03 C1 8B F8 2E 8E 1E 49 04 8A  // .............I..
    8450: 05 8B EC 88 46 1A C3 2E 8E 1E 47 04 8A 3E 62 04  // ....F.....G..>b.
    8460: 8A CF D0 E1 32 ED BE 50 04 03 F1 8B 14 8A 0E 49  // ....2..P.......I
    8470: 04 3C 0D 76 4A 2E 8E 06 4D 04 E8 EE F3 75 33 8A  // .<.vJ...M....u3.
    8480: 1E 4A 04 8A F8 8A C6 F6 E3 8A CA 03 C8 D1 E1 03  // .J..............
    8490: 0E 4E 04 8B F9 8A C7 AA D1 E9 41 FE C2 38 DA 73  // .N........A..8.s
    84A0: 59 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0  // Y....c..........
    84B0: EF C3 2E 8E 06 4B 04 80 F9 07 74 C3 E9 83 00 75  // .....K....t....u
    84C0: 04 32 D2 EB 0F 3C 0A 75 1D 3A 36 84 04 75 03 E9  // .2...<.u.:6..u..
    84D0: 93 00 FE C6 89 14 E8 92 F3 75 05 80 F9 07 7F 05  // .........u......
    84E0: 8B C2 E8 4C F6 C3 3C 07 75 04 E8 C5 81 C3 3C 08  // ...L..<.u.....<.
    84F0: 75 83 0A D2 74 DE FE CA EB DA 32 FF 32 D2 2B CB  // u...t.....2.2.+.
    8500: 3A 36 84 04 74 06 FE C6 03 CB EB 95 89 14 8B 16  // :6..t...........
    8510: 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF 2B FB 2B FB  // c...........+.+.
    8520: 26 8A 65 02 50 8B 3E 4E 04 8B F3 D1 E6 03 F7 A0  // &.e.P.>N........
    8530: 84 04 F6 E3 8B C8 06 1F F3 A5 8B CB 58 B0 20 F3  // ............X. .
    8540: AB C3 B9 01 00 B4 0A E8 BC C6 FE C2 3A 16 4A 04  // ............:.J.
    8550: 74 03 89 14 C3 32 FF 32 D2 89 14 3A 36 84 04 74  // t....2.2...:6..t
    8560: 2E FE C6 EB ED 89 14 2E 8E 06 4D 04 E8 FC F2 74  // ..........M....t
    8570: 0E 2E 8E 06 4B 04 80 F9 07 74 04 32 FF EB 10 8B  // ....K....t.2....
    8580: C2 E8 AD F5 8B F9 D1 E7 4F 8B 1E 4A 04 EB 91 33  // ........O..J...3
    8590: C9 8A 36 84 04 8A 16 4A 04 FE CA B0 01 E9 70 F7  // ..6....J......p.
    85A0: 2E 8E 1E 47 04 F6 06 87 04 08 74 03 CD 42 C3 E8  // ...G......t..B..
    85B0: 76 F6 8B EC C6 46 1B 00 C3 2E 8E 1E 47 04 8A DF  // v....F......G...
    85C0: 32 FF D1 E3 89 97 50 04 D0 EB 38 1E 62 04 75 05  // 2.....P...8.b.u.
    85D0: 8B C2 E8 5C F5 C3 2E 8E 1E 47 04 8A DF 32 FF D1  // ...\.....G...2..
    85E0: E3 8B 97 50 04 8B 0E 60 04 8B EC 89 4E 16 89 56  // ...P...`....N..V
    85F0: 12 C3 2E 8E 1E 47 04 A0 87 04 24 80 0A 06 49 04  // .....G....$...I.
    8600: 8A 26 4A 04 F6 06 87 04 08 75 2D E8 5D F2 74 07  // .&J......u-.].t.
    8610: 80 3E 49 04 07 7F 21 51 8A CC 8A 2E 84 04 BE E3  // .>I...!Q........
    8620: 85 81 FE EC 85 74 10 2E 3B 0C 74 05 83 C6 03 EB  // .....t..;.t.....
    8630: F0 24 80 2E 0A 44 02 59 8A 3E 62 04 8B EC 89 46  // .$...D.Y.>b....F
    8640: 1A 89 5E 0E 89 4E 16 89 56 12 C3 84 18 23 84 2B  // ..^..N..V....#.+
    8650: 33 84 2A 32 2E 8E 1E 47 04 3C 04 7F 1B 50 52 BA  // 3.*2...G.<...PR.
    8660: CC 03 EC A8 01 5A 58 74 08 80 3E 63 04 D4 74 08  // .....ZXt..>c..t.
    8670: C3 80 3E 63 04 B4 75 F8 3C 1C 73 F4 32 E4 8B E8  // ..>c..u.<.s.2...
    8680: D1 E5 2E FF A6 1F 86 57 86 77 86 89 86 BE 86 08  // .......W.w......
    8690: 86 08 86 08 86 E3 86 FB 86 FF 86 08 86 08 86 08  // ................
    86A0: 86 08 86 08 86 08 86 2D 87 08 86 31 87 4C 87 08  // .......-...1.L..
    86B0: 86 8B 87 08 86 99 87 B4 87 BB 87 C7 87 EB 87 80  // ................
    86C0: 3E 49 04 13 74 15 E8 BF F4 8B C3 86 E0 E8 70 EF  // >I..t.........p.
    86D0: 0B ED 74 07 8A C7 32 FF 26 88 01 E8 93 F4 C3 E8  // ..t...2.&.......
    86E0: A6 F4 8A C7 E8 44 FC 0B ED 74 F0 26 88 7D 11 EB  // .....D...t.&.}..
    86F0: EA 80 3E 49 04 13 74 E3 06 E8 8C F4 1F 0B ED 74  // ..>I..t........t
    8700: 07 8B F2 B9 11 00 F3 A4 8B F2 E8 DE 01 32 E4 B9  // .............2..
    8710: 10 00 B2 C0 9C FA 8A C4 EE AC EE 9D FE C4 E2 F4  // ................
    8720: AC E8 07 FC EB B5 80 FB 01 77 B0 E8 43 F4 B2 C0  // .........w..C...
    8730: B0 30 E8 FB F0 24 F7 80 26 65 04 DF 80 FB 00 74  // .0...$..&e.....t
    8740: 07 0C 08 80 0E 65 04 20 EE EB 90 E8 9D 01 8A C3  // .....e. ........
    8750: B2 C0 E8 DB F0 8B C8 EE B0 20 EE 8B EC 88 4E 0F  // ......... ....N.
    8760: E9 78 FF B3 11 EB E4 8B FA E8 05 F4 B9 10 00 32  // .x.............2
    8770: E4 B2 C0 8A C4 9C FA EE 42 EC 26 88 05 FE C4 4A  // ........B.&....J
    8780: EE 9D 47 E2 EE 9C FA B0 11 EE 42 EC 9D 26 88 05  // ..G.......B..&..
    8790: E8 E3 F3 EB 5A E8 CE 00 C3 8B FA 51 8B C3 26 8A  // ....Z......Q..&.
    87A0: 35 26 8A 6D 01 26 8A 4D 02 E8 CA 00 83 C7 03 43  // 5&.m.&.M.......C
    87B0: 59 E2 E8 C3 0A DB 75 1A E8 B6 F3 B2 C0 B0 30 E8  // Y.....u.......0.
    87C0: 6E F0 24 7F F6 C7 01 74 02 0C 80 B4 30 E8 70 EE  // n.$....t....0.p.
    87D0: EB 1D FE CB 75 1C E8 98 F3 B2 C0 B0 30 E8 50 F0  // ....u.......0.P.
    87E0: EE A8 80 75 03 C0 E7 02 B4 34 8A C7 E8 51 EE E8  // ...u.....4...Q..
    87F0: 7F F3 C3 8A C3 E8 D1 00 8B EC 89 4E 16 88 76 13  // ...........N..v.
    8800: C3 8B FA 51 8B C3 E8 C3 00 26 88 35 26 88 6D 01  // ...Q.....&.5&.m.
    8810: 26 88 4D 02 83 C7 03 43 59 E2 E8 C3 BA C6 03 8A  // &.M....CY.......
    8820: C3 EE C3 BA C6 03 EC 32 E4 8B EC 89 46 0E C3 E8  // .......2....F...
    8830: 3F F3 B2 C0 B0 34 E8 F7 EF 8A F8 EE B0 30 E8 EF  // ?....4.......0..
    8840: EF B3 01 A8 80 75 05 B3 00 C0 EF 02 8B EC 89 5E  // .....u.........^
    8850: 0E EB 9C 51 8B C3 E8 73 00 E8 2A 00 8A C3 E8 52  // ...Q...s..*....R
    8860: 00 43 59 E2 EE C3 F6 06 89 04 02 74 03 E8 16 00  // .CY........t....
    8870: 8A C3 E8 39 00 C3 F6 06 89 04 02 74 03 E8 06 00  // ...9.......t....
    8880: 8A C3 E8 2E 00 C3 50 B0 1E F6 E6 50 B0 3B F6 E5  // ......P....P.;..
    8890: 50 B0 0B F6 E1 59 03 C1 59 03 C1 B1 64 F6 F1 80  // P....Y..Y...d...
    88A0: FC 32 7C 02 FE C0 8A F0 8A E8 8A C8 58 C3 52 E8  // .2|.........X.R.
    88B0: 39 00 5A 53 8B DA BA C8 03 9C FA EE 42 8A C7 EE  // 9.ZS........B...
    88C0: 8A C5 EE 8A C1 EE 9D 5B C3 E8 1F 00 53 9C FA BA  // .......[....S...
    88D0: C7 03 EE 42 42 EC 8A F8 EB 00 EB 00 EC 8A E8 EB  // ...BB...........
    88E0: 00 EB 00 EC 8A C8 8A F7 9D 5B C3 50 51 E8 81 F2  // .........[.PQ...
    88F0: B9 FF 7F EC A8 08 75 02 E2 F9 59 58 C3 2E 8E 1E  // ......u...YX....
    8900: 47 04 8B F8 24 0F 81 E7 F0 00 C1 EF 03 83 FF 06  // G...$...........
    8910: 7F 18 2E FF A5 AF 88 B7 88 CC 88 6A 89 C6 89 3C  // ...........j...<
    8920: 03 74 08 3C 04 7F 03 E8 CF 01 C3 BA C4 03 B0 03  // .t.<............
    8930: 8A E3 EF C3 3C 04 77 F2 50 53 50 52 8B 16 63 04  // ....<.w.PSPR..c.
    8940: B0 07 E8 EB EE 8A E0 D0 EC 80 E4 01 A8 40 74 03  // .............@t.
    8950: 80 CC 02 B0 12 E8 D8 EE 40 A3 85 04 B0 09 E8 CF  // ........@.......
    8960: EE A8 80 74 04 D1 2E 85 04 A1 85 04 8B D0 3D F4  // ...t..........=.
    8970: 01 73 1B BA E0 01 3D C2 01 73 13 BA 90 01 3D 7C  // .s....=..s....=|
    8980: 01 73 0B BA 5E 01 3D 4A 01 73 03 BA C8 00 89 16  // .s..^.=J.s......
    8990: 85 04 5A 58 C6 06 84 04 FF E8 5D 01 5B 58 8A DF  // ..ZX......].[X..
    89A0: 32 FF 0A C0 74 0E B3 0E 3C 01 74 08 B3 08 3C 02  // 2...t...<.t...<.
    89B0: 74 02 B3 10 8A CB 8A E9 81 E9 01 02 80 F9 08 7E  // t..............~
    89C0: 04 81 E9 01 01 87 1E 85 04 53 E8 5B F2 5B E8 85  // .........S.[.[..
    89D0: 02 C3 0A C0 74 11 FE C8 74 1A FE C8 74 38 FE C8  // ....t...t...t8..
    89E0: 74 3C FE C8 74 40 C3 89 2E 7C 00 8C 06 7E 00 C3  // t<..t@...|...~..
    89F0: 8C C8 8E C0 FE CA 0A DB 74 07 32 FF 2E 8A 97 AA  // ........t.2.....
    8A00: 89 89 0E 85 04 88 16 84 04 89 2E 0C 01 8C 06 0E  // ................
    8A10: 01 C3 00 0D 18 2A E8 09 03 B9 0E 00 EB D6 BD BA  // .....*..........
    8A20: 58 B9 08 00 EB CA BD CD 60 B9 10 00 EB C2 0A C0  // X.......`.......
    8A30: 75 BD 8B 0E 85 04 8A 16 84 04 80 FF 07 77 35 80  // u............w5.
    8A40: FF 01 77 10 0A FF 75 06 C4 2E 7C 00 EB 26 C4 2E  // ..w...u...|..&..
    8A50: 0C 01 EB 20 80 FF 02 75 0B 8C CD 8E C5 2E 8B 2E  // ... ...u........
    8A60: AC 71 EB 10 0E 07 8A DF 32 FF 80 EB 02 D1 E3 2E  // .q......2.......
    8A70: 8B AF 1D 8A 8B C5 8B EC 89 4E 16 89 56 12 89 46  // .........N..V..F
    8A80: 0A 8C 46 1E C3 CD 60 BA 58 BA 5C BA 60 CD 60 CD  // ..F...`.X.\.`.`.
    8A90: 70 53 06 8A 26 49 04 E8 C7 C3 26 8A 47 02 26 8A  // pS..&I....&.G.&.
    8AA0: 67 33 F6 C4 01 74 22 BD CD 60 3C 10 7D 0E E8 71  // g3...t"..`<.}..q
    8AB0: 02 8C 06 0E 01 3C 0E 7D 07 BD BA 58 8C 0E 0E 01  // .....<.}...X....
    8AC0: 89 2E 0C 01 E8 10 01 EB 2D B4 84 3C 10 7D 13 B4  // ........-..<.}..
    8AD0: 81 3C 0E 74 0D 7F 15 B4 02 3C 08 74 05 80 CC 80  // .<.t.....<.t....
    8AE0: EB 0A 26 F6 47 05 01 74 03 80 E4 7F 86 C4 32 DB  // ..&.G..t......2.
    8AF0: E8 06 00 E8 C9 01 07 5B C3 8B F8 8B F2 BA CE 03  // .......[........
    8B00: EC B8 05 00 EF B8 06 04 EF B2 C4 EC B8 02 04 EF  // ................
    8B10: B8 04 07 EF 8B D6 8B C7 50 24 7F 0A C0 74 22 0E  // ........P$...t".
    8B20: 07 33 D2 B9 00 01 3C 04 75 07 B7 10 BD CD 60 EB  // .3....<.u.....`.
    8B30: 10 FE C8 75 07 B7 0E E8 E8 01 EB 05 B7 08 BD BA  // ...u............
    8B40: 58 E8 2D 00 58 A8 80 74 00 BA C4 03 B8 02 03 EF  // X.-.X..t........
    8B50: B8 04 02 EF B2 CC EC A8 01 B8 06 0E 75 02 B4 0A  // ............u...
    8B60: B2 CE 50 EC 58 EF B0 04 EE 32 C0 EE B8 05 10 EF  // ..P.X....2......
    8B70: C3 FC 0B C9 75 01 C3 80 FF 0E 75 0A 26 83 7E FE  // ....u.....u.&.~.
    8B80: 10 75 03 80 CD 80 1E 06 1F 2E 8E 06 49 04 8B FA  // .u..........I...
    8B90: C1 E7 05 B0 40 53 80 E3 03 F6 E3 5B F6 C3 04 74  // ....@S.....[...t
    8BA0: 02 04 20 86 E0 8B D0 03 FA 8B F5 E3 28 32 C0 86  // .. .........(2..
    8BB0: FB 32 FF 51 F6 C5 80 74 01 46 8B CB F3 A4 83 FB  // .2.Q...t.F......
    8BC0: 20 74 07 B9 20 00 2B CB F3 AA 59 F6 C5 80 74 01  //  t.. .+...Y...t.
    8BD0: 46 FE C9 75 DE 1F C3 8A 26 49 04 50 06 57 C4 3E  // F..u....&I.P.W.>
    8BE0: A8 04 26 C4 7D 0C 8C C5 0B EF 74 30 8B EF 83 C7  // ..&.}.....t0....
    8BF0: 07 26 8A 05 3C FF 74 24 38 E0 74 03 47 EB F2 8B  // .&..<.t$8.t.G...
    8C00: FD 26 8A 05 FE C8 A2 84 04 26 8B 45 01 A3 85 04  // .&.......&.E....
    8C10: 26 C4 7D 03 89 3E 0C 01 8C 06 0E 01 5F 07 58 C3  // &.}..>......_.X.
    8C20: 26 F6 47 33 01 74 01 C3 C4 1E A8 04 26 C4 5F 08  // &.G3.t......&._.
    8C30: 8C C0 0B C3 74 1F BF 0B 00 26 8A 01 3C FF 74 15  // ....t....&..<.t.
    8C40: 47 38 06 49 04 75 F2 26 8A 07 32 E4 87 06 85 04  // G8.I.u.&..2.....
    8C50: 8B D8 E8 01 00 C3 8B 16 63 04 8A 26 85 04 FE CC  // ........c..&....
    8C60: 80 E4 1F 9C FA 80 FA D4 74 0B B0 14 EE 42 EC 24  // ........t....B.$
    8C70: E0 0A C4 EE 4A B0 09 EE 42 EC 24 E0 0A C4 EE 9D  // ....J...B.$.....
    8C80: 8A C8 8B C3 8A 16 85 04 F6 F2 80 3E 84 04 FF 75  // ...........>...u
    8C90: 07 A2 84 04 FE 0E 84 04 F6 E2 F6 C1 80 74 02 D1  // .............t..
    8CA0: E0 48 8A E0 B0 12 8B 16 63 04 EF A0 4A 04 8A 26  // .H......c...J..&
    8CB0: 84 04 FE C4 F6 E4 D1 E0 05 00 01 A3 4C 04 C3 8A  // ............L...
    8CC0: 26 49 04 50 06 57 C4 3E A8 04 26 C4 7D 08 8C C5  // &I.P.W.>..&.}...
    8CD0: 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05 3C FF 74 3E  // ..tJ.....&..<.t>
    8CE0: 38 E0 74 03 47 EB F2 8B FD 26 8A 3D 26 8A 5D 01  // 8.t.G....&.=&.].
    8CF0: 26 8B 4D 02 26 8B 55 04 26 8A 45 0A 3C FF 74 02  // &.M.&.U.&.E.<.t.
    8D00: FE C8 50 A0 84 04 FE C0 F6 26 85 04 A3 85 04 58  // ..P......&.....X
    8D10: A2 84 04 26 C4 7D 06 8B EF 32 C0 E8 DB FD 5F 07  // ...&.}...2...._.
    8D20: 58 C3 50 53 51 52 2E A1 51 04 0B C0 74 09 2E 8B  // X.PSQR..Q...t...
    8D30: 2E AC 71 0E 07 EB 08 B8 30 11 B7 02 E8 C7 BE 5A  // ..q.....0......Z
    8D40: 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53 2E 8E 1E 47  // Y[X.<.|....S...G
    8D50: 04 86 FB 32 FF D1 E3 8B FB 81 C7 50 04 8B 35 5B  // ...2.......P..5[
    8D60: 89 15 56 8B F0 51 53 26 8A 46 00 45 3C 0D 7F 1F  // ..V..QS&.F.E<...
    8D70: 75 04 32 D2 EB 40 3C 0A 74 32 3C 07 75 05 E8 31  // u.2..@<.t2<.u..1
    8D80: 79 EB 62 3C 08 75 08 0A D2 74 5A FE CA EB 27 F7  // y.b<.u...tZ...'.
    8D90: C6 02 00 74 05 26 8A 5E 00 45 B9 01 00 B4 09 E8  // ...t.&.^.E......
    8DA0: 64 BE FE C2 3A 16 4A 04 72 0C 32 D2 89 15 3A 36  // d...:.J.r.2...:6
    8DB0: 84 04 73 06 FE C6 89 15 EB 2B 50 E8 AD EA 75 08  // ..s......+P...u.
    8DC0: B8 00 08 E8 40 BE EB 09 80 3E 49 04 07 74 F1 32  // ....@....>I..t.2
    8DD0: E4 86 3E 62 04 53 8A FC 55 E8 25 00 5D 5B 86 3E  // ..>b.S..U.%.][.>
    8DE0: 62 04 58 8B 15 5B 59 E2 15 5A F7 C6 01 00 75 02  // b.X..[Y..Z....u.
    8DF0: 89 15 8B 05 3A 3E 62 04 75 03 E8 34 ED C3 E9 64  // ....:>b.u..4...d
    8E00: FF 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B8 01 06  // .3..6....J......
    8E10: E8 F3 BD C3 2E 8E 1E 47 04 0A C0 75 0D E8 18 00  // .......G...u....
    8E20: 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01 75 09 E8 41  // ...^..F...<.u..A
    8E30: 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF AA 8E 2E 3A  // ....F..........:
    8E40: 05 72 04 BB FF FF C3 32 E4 D1 E0 03 F8 2E 8B 5D  // .r.....2.......]
    8E50: 04 0A DB 74 05 0A FF 75 04 C3 86 FB C3 A0 10 04  // ...t...u........
    8E60: 24 30 3C 30 74 06 F6 C3 01 75 EF C3 F6 C3 01 74  // $0<0t....u.....t
    8E70: E9 C3 BF AA 8E 2E 8A 0D 32 C0 83 C7 04 2E 3B 1D  // ........2.....;.
    8E80: 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02 FE C0 38 C8  // t....;.t......8.
    8E90: 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6 06 89 04 02  // ~...............
    8EA0: 74 0E BB 07 00 BA CC 03 EC A8 01 74 18 BB 08 00  // t..........t....
    8EB0: BA B4 03 E8 DF EC 74 21 B7 01 E8 8C E9 80 FA D4  // ......t!........
    8EC0: 74 17 86 FB C3 BA D4 03 E8 CA EC 74 0C B7 02 E8  // t..........t....
    8ED0: 77 E9 80 FA B4 74 02 86 FB C3 0F 08 0F 08 0F 08  // w....t..........
    8EE0: 0F 08 03 01 03 01 01 01 00 08 01 01 01 01 01 01  // ................
    8EF0: 01 01 0F 01 0F 08 0F 04 00 02 0F 02 01 01 0F 01  // ................
    8F00: FF 01 FF E0 0F 00 00 00 00 07 02 08 FF 0E 00 00  // ................
    8F10: 3F 00 10 01 08 00 00 00 00 01 00 02 02 01 00 04  // ?...............
    8F20: 04 01 00 05 02 05 00 06 01 06 05 06 00 08 01 08  // ................
    8F30: 00 07 02 07 06 07 CA 00 34 00 90 00 96 00 00 00  // ........4.......
    8F40: 00 00 00 00 5F 57 C3 90 50 66 52 E8 F4 FF FF FF  // ...._W..PfR.....
    8F50: 81 EF 10 00 00 00 2E 8B 07 66 BA F8 0C EF 66 BA  // .........f....f.
    8F60: FC 0C ED 32 C0 66 8B F8 66 5A 58 C3 66 B8 4F 03  // ...2.f..fZX.f.O.
    8F70: 66 52 66 56 53 57 50 0A FF 75 44 E8 C8 FF FF FF  // fRfVSWP..uD.....
    8F80: 66 33 F6 66 BB 53 00 E8 48 00 00 00 C1 E8 10 F6  // f3.f.S..H.......
    8F90: C4 40 75 2B 66 81 E2 FF 02 66 D1 E2 66 8B C2 66  // .@u+f....f..f..f
    8FA0: 40 C1 E0 10 66 8B C2 66 BB 13 00 E8 30 00 00 00  // @...f..f....0...
    8FB0: 66 BB 12 00 E8 27 00 00 00 66 58 32 E4 66 50 58  // f....'...fX2.fPX
    8FC0: 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03 C3 90 66 B8  // _[f^fZ..f.O...f.
    8FD0: 4F 03 C3 90 66 52 E8 11 00 00 00 ED 66 5A C3 90  // O...fR......fZ..
    8FE0: 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B D7 50  // fR......fZ..f..P
    8FF0: 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83 C2 04  // 3.f..f......f...
    9000: 58 C3 B2 37 A5 37 A5 37 A5 37 90 37 90 37 90 37  // X..7.7.7.7.7.7.7
    9010: 90 37 D2 33 49 34 73 34 B4 35 B3 35 B3 35 F9 35  // .7.3I4s4.5.5.5.5
    9020: 5E 36 8E 36 4B 37 74 37 74 37 EB 35 DE 35 DE 35  // ^6.6K7t7t7.5.5.5
    9030: DE 35 DE 35 DE 35 F9 35 5E 36 8E 36 4B 37 79 37  // .5.5.5.5^6.6K7y7
    9040: BF 37 74 37 74 37 FF FF FF FF FF FF 00 00 FF FF  // .7t7t7..........
    9050: 00 00 FF FF 00 00 FF 00 00 00 FF 00 00 00 FF 00  // ................
    9060: 00 00 FF 00 00 00 00 00 08 10 00 08 10 18 00 08  // ................
    9070: 10 18 D6 31 01 D6 31 02 E4 45 03 C4 45 03 FB 32  // ...1..1..E..E..2
    9080: 03 AF 32 03 D7 31 04 F0 31 04 00 32 04 D6 31 03  // ..2..1..1..2..1.
    9090: 00 00 00 00 83 39 00 02 83 39 01 02 83 39 02 02  // .....9...9...9..
    90A0: 83 39 03 02 83 39 04 02 83 39 05 02 7D 3B 00 02  // .9...9...9..};..
    90B0: 7D 3B 01 02 7D 3B 02 02 7D 3B 03 02 7D 3B 04 02  // };..};..};..};..
    90C0: 7D 3B 05 02 B2 3B 00 02 B2 3B 01 02 B2 3B 02 02  // };...;...;...;..
    90D0: B2 3B 03 02 B2 3B 04 02 B2 3B 05 02 ED 3D 00 02  // .;...;...;...=..
    90E0: ED 3D 01 02 ED 3D 02 02 ED 3D 03 02 ED 3D 04 02  // .=...=...=...=..
    90F0: ED 3D 05 02 ED 3D 00 02 ED 3D 01 02 ED 3D 02 02  // .=...=...=...=..
    9100: ED 3D 03 02 ED 3D 04 02 ED 3D 05 02 B4 3C 00 02  // .=...=...=...<..
    9110: B4 3C 01 02 B4 3C 02 02 B4 3C 03 02 B4 3C 04 02  // .<...<...<...<..
    9120: B4 3C 05 02 F0 3C 00 02 F0 3C 01 02 F0 3C 02 02  // .<...<...<...<..
    9130: F0 3C 03 02 F0 3C 04 02 F0 3C 05 02 61 3C 00 02  // .<...<...<..a<..
    9140: 61 3C 01 02 61 3C 02 02 61 3C 03 02 61 3C 04 02  // a<..a<..a<..a<..
    9150: 61 3C 05 02 95 3C 00 02 95 3C 01 02 95 3C 02 02  // a<...<...<...<..
    9160: 95 3C 03 02 95 3C 04 02 95 3C 05 02 45 40 00 00  // .<...<...<..E@..
    9170: 78 40 01 00 78 40 02 00 65 40 00 00 53 3F 00 02  // x@..x@..e@..S?..
    9180: 4C 3D 00 02 4C 3D 01 02 4C 3D 02 02 4C 3D 03 02  // L=..L=..L=..L=..
    9190: 4C 3D 04 02 4C 3D 05 02 6B 3F 00 02 C0 41 05 00  // L=..L=..k?...A..
    91A0: C0 41 01 00 C0 41 00 00 C0 41 02 00 01 42 00 00  // .A...A...A...B..
    91B0: 01 42 02 00 46 42 00 00 D6 3E 00 02 D6 3E 01 02  // .B..FB...>...>..
    91C0: D6 3E 02 02 D6 3E 03 02 D6 3E 04 02 D6 3E 05 02  // .>...>...>...>..
    91D0: 92 40 00 00 BA 40 00 00 3B 41 00 00 B6 41 00 00  // .@...@..;A...A..
    91E0: 9A 3D 00 02 9A 3D 01 02 9A 3D 02 02 9A 3D 03 02  // .=...=...=...=..
    91F0: 9A 3D 04 02 9A 3D 05 02 B5 41 00 01 B5 41 00 01  // .=...=...A...A..
    9200: B9 3A 00 02 B9 3A 01 02 B9 3A 02 02 B9 3A 03 02  // .:...:...:...:..
    9210: B9 3A 04 02 B9 3A 05 02 DA 40 00 00 B6 41 00 00  // .:...:...@...A..
    9220: B6 41 00 00 B6 41 00 00 EB 3F 00 00 DD 3B 00 02  // .A...A...?...;..
    9230: DD 3B 01 02 DD 3B 02 02 DD 3B 03 02 DD 3B 04 02  // .;...;...;...;..
    9240: DD 3B 05 02 0C 3C 00 02 0C 3C 01 02 0C 3C 02 02  // .;...<...<...<..
    9250: 0C 3C 03 02 0C 3C 04 02 0C 3C 05 02 42 3C 00 02  // .<...<...<..B<..
    9260: 42 3C 01 02 42 3C 02 02 42 3C 03 02 42 3C 04 02  // B<..B<..B<..B<..
    9270: 42 3C 05 02 FD 40 00 00 20 41 00 00 DE 3C 01 02  // B<...@.. A...<..
    9280: DE 3C 02 02 3A 3D 01 02 3A 3D 02 02 A6 00 02 01  // .<..:=..:=......
    9290: 14 93 00 00 00 00 00 00 14 AB 00 00 3A 93 00 00  // ............:...
    92A0: 00 00 4A 94 00 00 00 00 14 95 4C 99 00 00 00 00  // ..J.......L.....
    92B0: 00 00 00 00 00 00 00 00 30 A0 86 93 F4 93 D8 98  // ........0.......
    92C0: 1C 94 00 00 28 C3 00 00 00 00 00 00 00 00 00 00  // ....(...........
    92D0: 00 00 EC A0 5E A1 D2 A1 00 00 16 A2 00 00 5C C2  // ....^.........\.
    92E0: 00 00 E6 A2 BC A4 7C A5 DA A6 1C A7 C2 BF 00 00  // ......|.........
    92F0: 00 00 30 A7 00 00 E6 BC 00 00 12 BF F6 A8 00 00  // ..0.............
    9300: CE AA 00 00 00 00 00 00 74 C1 42 BE 00 00 00 00  // ........t.B.....
    9310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9320: 00 00 00 00 00 00 00 00 28 AE 34 AF 6A BA 8A BC  // ........(.4.j...
    9330: 00 00 4A 00 02 01 00 00 00 00 02 D1 4C C3 CA D1  // ..J.........L...
    9340: 14 C4 48 C4 FE C5 36 DD 48 C8 00 00 A4 C4 0C CA  // ..H...6.H.......
    9350: B0 C4 F0 C7 78 CA 00 00 24 C5 16 DD 00 00 02 DD  // ....x...$.......
    9360: 00 00 38 C5 C0 C5 2E DC 00 00 00 00 C6 C5 36 D2  // ..8...........6.
    9370: 00 00 00 00 00 00 7E DC 00 00 00 00 25 00 02 01  // ......~.....%...
    9380: 00 08 37 00 00 4B E5 00 04 49 19 00 02 05 02 06  // ..7..K...I......
    9390: 00 00 00 52 15 52 3D 52 18 52 1A 0D 65 53 00 02  // ...R.R=R.R..eS..
    93A0: 5B 00 4B 00 01 01 00 00 37 00 00 42 21 00 63 00  // [.K.....7..B!.c.
    93B0: 1F 00 63 01 39 00 63 03 3F 00 63 02 45 00 5A 5A  // ..c.9.c.?.c.E.ZZ
    93C0: 5B 03 05 40 00 00 05 04 2D 19 40 00 15 05 40 02  // [..@....-.@...@.
    93D0: 01 02 0C 00 40 02 00 00 0D 00 5B 02 00 00 E3 0D  // ....@.....[.....
    93E0: 5B 02 00 00 E7 0D 5B 02 00 00 E8 0D 5B 00 6E 00  // [.....[.....[.n.
    93F0: 02 01 0C 08 37 00 00 3D 25 00 00 44 22 00 3D 25  // ....7..=%..D".=%
    9400: 00 06 44 5D 00 3D 25 00 04 44 58 00 55 38 00 5B  // ..D].=%..DX.U8.[
    9410: 01 05 00 00 61 60 01 00 3C E5 01 00 80 49 2A 00  // ....a`..<....I*.
    9420: 01 05 00 00 62 60 01 00 01 01 01 00 01 56 00 40  // ....b`.......V.@
    9430: 03 A9 40 00 01 05 00 00 61 60 01 00 01 02 01 00  // ..@.....a`......
    9440: 40 02 E5 00 01 5B 02 E5 00 01 5B 01 05 00 00 61  // @....[....[....a
    9450: 60 01 00 3C E5 01 00 80 49 65 00 5B 28 00 02 01  // `..<....Ie.[(...
    9460: 00 00 37 00 00 01 05 00 00 6C A8 01 00 02 00 00  // ..7......l......
    9470: 01 00 02 01 01 00 01 05 00 00 6D A8 01 00 02 00  // ..........m.....
    9480: 02 01 00 5B 2E 00 02 01 00 00 37 00 00 52 16 03  // ...[......7..R..
    9490: 01 41 00 15 05 41 10 01 02 60 0F 41 03 01 40 00  // .A...A...`.A..@.
    94A0: 1B 05 40 10 01 02 62 0F 40 01 05 F3 0F E1 0A 60  // ..@...b.@......`
    94B0: 2D 5B CA 00 02 01 04 04 37 00 00 66 0C 03 0C 41  // -[......7..f...A
    94C0: 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 00 06 00  // ..-.AB-.B..=$...
    94D0: 44 31 00 2D 0D 42 08 00 3E 0A 42 41 45 19 00 55  // D1.-.B..>.BAE..U
    94E0: 20 00 5B 56 00 43 03 24 43 05 00 03 04 46 00 00  //  .[V.C.$C....F..
    94F0: 33 05 46 01 00 00 00 01 02 00 00 46 03 00 00 01  // 3.F........F....
    9500: 00 0D 02 01 00 44 2D 05 46 02 00 00 00 01 02 00  // .....D-.F.......
    9510: 00 46 03 24 43 04 00 4B E5 00 01 49 AA 00 07 02  // .F.$C..K...I....
    9520: 01 00 45 2D 05 46 01 00 00 00 01 02 00 00 46 4A  // ..E-.F........FJ
    9530: 02 01 00 44 44 90 00 03 29 43 00 0E A2 00 44 43  // ...DD...)C....DC
    9540: 98 00 03 29 43 00 08 A2 00 45 33 05 46 03 00 00  // ...)C....E3.F...
    9550: 00 01 02 00 00 46 01 02 01 00 00 5B 0D 02 01 00  // .....F.....[....
    9560: 44 01 04 00 00 00 00 3D A5 00 01 44 C4 00 07 02  // D......=...D....
    9570: 01 00 45 43 C9 00 0D 02 01 00 44 5B C3 03 01 07  // ..EC......D[....
    9580: 10 08 37 00 00 3D 25 01 FF 44 A1 03 3D 25 01 19  // ..7..=%..D..=%..
    9590: 46 9D 03 3D 25 01 02 47 9D 03 3D 25 01 14 45 A1  // F..=%..G..=%..E.
    95A0: 03 3D 05 00 00 00 00 00 44 FD 01 66 1B 56 00 02  // .=......D..f.V..
    95B0: 3D A5 01 02 49 41 00 56 08 40 43 53 00 3D A5 01  // =...IA.V.@CS.=..
    95C0: 03 49 4E 00 56 08 40 43 53 00 03 0C 40 18 00 3E  // .IN.V.@CS...@..>
    95D0: 0D 40 00 00 44 62 00 03 0A 02 40 43 66 00 0E E5  // .@..Db....@Cf...
    95E0: 01 80 4B E5 01 02 49 74 00 02 A9 02 02 55 28 02  // ..K...It.....U(.
    95F0: 03 01 00 00 03 05 46 A8 61 00 00 3D A5 01 00 44  // ......F.a..=...D
    9600: 8D 00 03 05 46 50 C3 00 00 5C A5 0F 5E F3 08 55  // ....FP...\..^..U
    9610: 28 01 3E 05 00 40 4B 4C 00 47 A7 00 1B 05 00 01  // (.>..@KL.G......
    9620: 43 BC 00 2C 65 01 01 3E 05 00 A0 25 26 00 48 BC  // C..,e..>...%&.H.
    9630: 00 15 05 00 01 43 A7 00 14 2D 01 04 4B E5 01 80  // .....C...-..K...
    9640: 49 EB 00 21 05 02 80 00 00 00 7C 02 40 00 7E 02  // I..!......|.@.~.
    9650: 40 46 7C 05 40 10 00 00 00 7E 05 40 35 0C 00 00  // @F|.@....~.@5...
    9660: 03 02 02 40 43 EE 00 56 00 02 27 02 00 46 21 05  // ...@C..V..'..F!.
    9670: 41 00 00 01 00 27 02 40 46 03 0A 42 40 3E 05 41  // A....'.@F..B@>.A
    9680: 00 00 00 00 49 16 01 03 0D 40 01 00 56 08 01 43  // ....I....@..V..C
    9690: 40 01 03 02 40 46 03 02 01 41 03 02 03 41 27 02  // @...@F...A...A'.
    96A0: 40 41 03 02 40 03 3E 05 41 00 00 00 00 49 1E 01  // @A..@.>.A....I..
    96B0: 27 02 01 03 03 0A 01 40 27 02 46 03 03 0A 03 01  // '......@'.F.....
    96C0: 03 0A 01 40 03 8A 01 42 27 02 00 46 33 05 40 10  // ...@...B'..F3.@.
    96D0: 00 00 00 15 05 40 05 03 8A 03 40 66 FF 2D 0D 42  // .....@....@f.-.B
    96E0: AB 03 56 00 40 03 21 40 01 33 25 40 14 15 25 40  // ..V.@.!@.3%@..%@
    96F0: 01 2D 0A 42 40 03 0C 48 00 00 4A 25 06 5E 04 44  // .-.B@..H..J%.^.D
    9700: 23 02 56 00 40 4B E5 01 30 44 9B 01 4A 25 F1 5D  // #.V.@K..0D..J%.]
    9710: 01 44 DC 01 43 A3 01 4A 25 F1 5D 01 49 DC 01 03  // .D..C..J%.].I...
    9720: 00 40 0B 5E 09 0D 40 F0 FF 3E 1A 40 03 49 DC 01  // .@.^..@..>.@.I..
    9730: 3C 02 07 5E 01 49 DC 01 3C 0A 0A 5E 03 49 DC 01  // <..^.I..<..^.I..
    9740: 03 00 40 0C 5E 09 25 40 70 3E 29 40 01 49 DC 01  // ..@.^.%@p>)@.I..
    9750: 3C 02 08 5E 02 44 E0 01 0E E5 01 01 3A 00 00 4B  // <..^.D......:..K
    9760: E5 01 01 44 75 03 4B E5 01 02 49 FD 01 3D 25 02  // ...Du.K...I..=%.
    9770: 04 46 FD 01 55 28 02 52 23 3A 00 00 02 01 03 02  // .F..U(.R#:......
    9780: 02 05 02 00 00 03 04 02 21 02 01 32 25 02 14 52  // ........!..2%..R
    9790: 4D 02 01 02 03 3D 05 00 00 00 00 00 44 9D 03 3D  // M....=......D..=
    97A0: A5 01 00 44 4E 02 02 01 03 02 02 05 02 00 0F 03  // ...DN...........
    97B0: 00 02 21 02 01 32 25 02 14 4B E5 01 30 44 48 02  // ..!..2%..K..0DH.
    97C0: 0E E5 02 01 52 4D 02 01 02 03 66 FF 2D 0D 42 AB  // ....RM....f.-.B.
    97D0: 03 56 00 40 03 21 40 01 33 25 40 14 15 25 40 01  // .V.@.!@.3%@..%@.
    97E0: 2D 0A 42 40 03 0C 48 00 00 03 05 40 00 00 38 00  // -.B@..H....@..8.
    97F0: 3E 05 00 C0 C6 2D 00 47 A0 02 5E A5 40 CF 20 3E  // >....-.G..^.@. >
    9800: 05 00 E0 67 35 00 47 A0 02 5E A5 40 CF 10 3E 05  // ...g5.G..^.@..>.
    9810: 00 00 09 3D 00 47 A0 02 09 A5 40 CF 5C B2 0F 5E  // ...=.G....@.\..^
    9820: C3 40 03 05 40 20 00 1C 24 3D A5 01 00 44 BB 02  // .@..@ ..$=...D..
    9830: 03 05 40 10 00 0C 12 5C 9A 10 5E 03 00 40 5C 1A  // ..@....\..^..@\.
    9840: 0B 5E 0F 00 03 5C A2 0B 5E 8F 40 56 00 40 03 29  // .^...\..^.@V.@.)
    9850: 40 01 0F 25 40 01 4B E5 01 80 49 E5 02 0F 65 40  // @..%@.K...I...e@
    9860: 01 5C 0A 0C 5E 8B FE 40 07 8D 0D 5E 0F E0 3E 8D  // .\..^..@...^..>.
    9870: 01 00 00 49 0A 03 3E 0D 03 00 00 49 0A 03 07 E5  // ...I..>....I....
    9880: 0E 5E FE 43 0F 03 0D E5 0E 5E 01 4A E5 0E 5E 01  // .^.C.....^.J..^.
    9890: 49 27 03 4A 65 0C 5E 01 49 27 03 07 E5 0E 5E EF  // I'.Je.^.I'....^.
    98A0: 43 2C 03 0D E5 0E 5E 10 01 02 07 5E 01 01 02 08  // C,....^....^....
    98B0: 5E 02 7C 05 02 00 EC 04 00 7E 02 40 46 27 05 40  // ^.|......~.@F'.@
    98C0: 0A 00 00 00 01 02 09 5E 40 01 0A 0A 5E 03 3A 00  // .......^@...^.:.
    98D0: 00 3D A5 01 00 44 9D 03 03 01 00 02 02 05 02 00  // .=...D..........
    98E0: 01 03 04 02 21 02 01 32 25 02 14 52 4D 02 02 02  // ....!..2%..RM...
    98F0: 00 3A 00 00 3D 25 02 04 46 9D 03 02 25 03 02 02  // .:..=%..F...%...
    9900: E1 03 02 02 61 03 01 02 B9 03 01 08 A5 03 04 0E  // ....a...........
    9910: B1 03 02 02 01 02 00 52 2E 3A 00 00 5B 02 25 01  // .......R.:..[.%.
    9920: 0B 43 75 03 7A 18 00 00 00 D8 00 B0 01 88 02 60  // .Cu.z..........`
    9930: 03 38 04 00 00 00 01 00 02 00 03 00 04 00 05 00  // .8..............
    9940: 73 00 02 01 00 00 37 00 00 3D 65 00 01 44 72 00  // s.....7..=e..Dr.
    9950: 56 00 40 03 21 40 00 21 25 40 DC 03 0A 48 40 01  // V.@.!@.!%@...H@.
    9960: 05 B6 3A 00 01 00 00 5C 05 2D 3B CF FF FF FF 20  // ..:....\.-;.... 
    9970: 00 00 00 5C 05 40 3B CF FF FF FF 20 00 00 00 56  // ...\.@;.... ...V
    9980: 00 40 03 21 40 00 21 25 40 80 03 0A 48 40 5C 05  // .@.!@.!%@...H@\.
    9990: 01 50 FF FC FF FF 00 03 00 00 56 00 40 03 21 40  // .P........V.@.!@
    99A0: 00 15 05 40 19 5C 02 50 50 FF FF FF F1 40 3A 00  // ...@.\.PP....@:.
    99B0: 00 5B 5B 00 E4 06 02 01 08 04 37 00 00 42 29 00  // .[[.......7..B).
    99C0: 63 07 13 02 63 08 17 00 5A 5A 5B 0D 25 C8 39 02  // c...c...ZZ[.%.9.
    99D0: 5C 25 34 47 FC 01 01 25 32 01 00 01 05 42 35 00  // \%4G...%2....B5.
    99E0: 00 00 00 01 05 40 35 00 00 00 00 01 05 46 35 00  // .....@5......F5.
    99F0: 00 00 00 01 05 44 35 00 00 00 00 01 05 4A 35 00  // .....D5......J5.
    9A00: 00 00 00 01 05 48 35 00 00 00 00 01 05 4E 35 00  // .....H5......N5.
    9A10: 00 00 00 01 05 4C 35 00 00 00 00 01 05 52 35 00  // .....L5......R5.
    9A20: 00 00 00 01 05 50 35 00 00 00 00 01 05 61 35 00  // .....P5......a5.
    9A30: 00 00 00 01 05 63 35 00 00 00 00 01 05 65 35 00  // .....c5......e5.
    9A40: 00 00 00 01 05 67 35 00 00 00 00 01 05 69 35 00  // .....g5......i5.
    9A50: 00 00 00 01 05 72 35 01 00 00 00 01 05 DF 39 02  // .....r5.......9.
    9A60: 10 00 00 01 05 B3 3A 00 00 00 00 01 05 B1 3A 00  // ......:.......:.
    9A70: 1B 5D 05 01 05 06 3B 35 00 13 00 01 05 07 3B 36  // .]....;5......;6
    9A80: 11 00 00 01 05 08 3B 41 E6 01 00 01 05 09 3B 00  // ......;A......;.
    9A90: 00 00 00 01 05 0A 3B 00 00 08 2C 01 05 0C 3B 02  // ......;...,...;.
    9AA0: 04 00 00 01 05 1F 3B 5E 4E 01 00 01 05 0A 3B 00  // ......;^N.....;.
    9AB0: 00 08 2C 01 05 0D 3B A4 01 00 00 01 05 0F 3B A4  // ..,...;.......;.
    9AC0: 01 00 00 01 05 14 3B 00 02 00 00 01 05 15 3B 49  // ......;.......;I
    9AD0: D2 00 00 01 05 18 3B 20 00 00 00 01 05 19 3B 24  // ......; ......;$
    9AE0: 0D 00 00 01 05 1C 3B 00 00 00 00 01 05 1D 3B 00  // ......;.......;.
    9AF0: 00 00 00 01 05 ED 3A 00 00 92 06 01 05 EE 3A AA  // ......:.......:.
    9B00: 08 00 E0 01 05 C9 39 FE 01 00 00 01 05 CA 39 1E  // ......9.......9.
    9B10: 05 00 00 01 05 CB 39 BA 04 00 00 01 05 CC 39 24  // ......9.......9$
    9B20: 04 00 00 01 05 CD 39 A2 08 00 00 01 05 CE 39 FE  // ......9.......9.
    9B30: 01 00 00 01 05 CF 39 1E 05 00 00 01 05 D0 39 BA  // ......9.......9.
    9B40: 04 00 00 01 05 D1 39 24 04 00 00 01 05 D2 39 A2  // ......9$......9.
    9B50: 08 00 00 01 05 D3 39 FE 01 00 00 01 05 D4 39 1E  // ......9.......9.
    9B60: 05 00 00 01 05 D5 39 BA 04 00 00 01 05 D6 39 24  // ......9.......9$
    9B70: 04 00 00 01 05 D7 39 A2 08 00 00 01 05 D8 39 FE  // ......9.......9.
    9B80: 01 00 00 01 05 D9 39 1E 05 00 00 01 05 DA 39 BA  // ......9.......9.
    9B90: 04 00 00 01 05 DB 39 24 04 00 00 01 05 DC 39 A2  // ......9$......9.
    9BA0: 08 00 00 0D 25 C8 39 02 0D 25 DA 41 01 01 25 33  // ....%.9..%.A..%3
    9BB0: 47 00 01 25 31 47 00 01 25 32 47 00 01 25 45 48  // G..%1G..%2G..%EH
    9BC0: 00 01 65 8B 4F F0 5B 01 05 1F 35 FF FF FF FF 01  // ..e.O.[...5.....
    9BD0: 05 20 35 1F 00 00 00 01 05 3B 01 64 02 12 00 01  // . 5......;.d....
    9BE0: 05 30 01 A0 86 11 00 01 05 31 01 3C 00 01 08 01  // .0.......1.<....
    9BF0: 8D 83 38 64 00 01 25 82 38 01 01 25 32 01 00 01  // ..8d..%.8..%2...
    9C00: 05 42 35 00 00 00 00 01 05 40 35 00 00 00 00 01  // .B5......@5.....
    9C10: 05 46 35 00 00 00 00 01 05 44 35 00 00 00 00 01  // .F5......D5.....
    9C20: 05 4A 35 00 00 00 00 01 05 48 35 00 00 00 00 01  // .J5......H5.....
    9C30: 05 4E 35 00 00 00 00 01 05 4C 35 00 00 00 00 01  // .N5......L5.....
    9C40: 05 52 35 00 00 00 00 01 05 50 35 00 00 00 00 01  // .R5......P5.....
    9C50: 05 61 35 00 00 00 00 01 05 63 35 00 00 00 00 01  // .a5......c5.....
    9C60: 05 65 35 00 00 00 00 01 05 67 35 00 00 00 00 01  // .e5......g5.....
    9C70: 05 69 35 00 00 00 00 01 05 72 35 01 00 00 00 01  // .i5......r5.....
    9C80: 05 DF 39 02 10 00 00 01 05 B3 3A 00 00 00 00 01  // ..9.......:.....
    9C90: 05 8F 3B 10 00 00 00 01 05 6B 3C 20 00 00 00 01  // ..;......k< ....
    9CA0: 05 47 3D 30 00 00 00 01 05 23 3E 40 00 00 00 55  // .G=0.....#>@...U
    9CB0: 00 01 20 0D 01 DC 00 03 0A 48 40 01 05 B1 3A 00  // .. ......H@...:.
    9CC0: 1B 5D 05 01 05 06 3B 35 00 13 00 01 05 07 3B 36  // .]....;5......;6
    9CD0: 11 00 00 01 05 08 3B 41 E6 01 00 01 05 09 3B 00  // ......;A......;.
    9CE0: 00 00 00 01 05 0A 3B 00 00 08 2C 01 05 0C 3B 02  // ......;...,...;.
    9CF0: 04 00 00 01 05 1F 3B 5E 4E 01 00 01 05 0A 3B 00  // ......;^N.....;.
    9D00: 00 08 2C 01 05 0D 3B A4 01 00 00 01 05 0F 3B A4  // ..,...;.......;.
    9D10: 01 00 00 01 05 14 3B 00 02 00 00 01 05 15 3B 49  // ......;.......;I
    9D20: D2 00 00 01 05 18 3B 20 00 00 00 01 05 19 3B 24  // ......; ......;$
    9D30: 0D 00 00 01 05 1C 3B 00 00 00 00 01 05 1D 3B 00  // ......;.......;.
    9D40: 00 00 00 01 05 ED 3A 00 00 92 06 01 05 EE 3A AA  // ......:.......:.
    9D50: 08 00 E0 2C 05 01 01 00 00 00 3D 0D 01 05 00 45  // ...,......=....E
    9D60: FE 02 56 08 48 01 05 C9 39 FE 01 00 00 01 05 CA  // ..V.H...9.......
    9D70: 39 1E 05 00 00 01 05 CB 39 BA 04 00 00 01 05 CC  // 9.......9.......
    9D80: 39 24 04 00 00 01 05 CD 39 A2 08 00 00 01 05 CE  // 9$......9.......
    9D90: 39 FE 01 00 00 01 05 CF 39 1E 05 00 00 01 05 D0  // 9.......9.......
    9DA0: 39 BA 04 00 00 01 05 D1 39 24 04 00 00 01 05 D2  // 9.......9$......
    9DB0: 39 A2 08 00 00 01 05 D3 39 FE 01 00 00 01 05 D4  // 9.......9.......
    9DC0: 39 1E 05 00 00 01 05 D5 39 BA 04 00 00 01 05 D6  // 9.......9.......
    9DD0: 39 24 04 00 00 01 05 D7 39 A2 08 00 00 01 05 D8  // 9$......9.......
    9DE0: 39 FE 01 00 00 01 05 D9 39 1E 05 00 00 01 05 DA  // 9.......9.......
    9DF0: 39 BA 04 00 00 01 05 DB 39 24 04 00 00 01 05 DC  // 9.......9$......
    9E00: 39 A2 08 00 00 0D 25 C8 39 02 55 00 01 66 FF 2D  // 9.....%.9.U..f.-
    9E10: 0D 42 DA 06 03 0C 48 00 00 0D 25 DA 41 01 20 0D  // .B....H...%.A. .
    9E20: 01 1B 00 03 0A 48 40 01 21 33 47 01 01 21 31 47  // .....H@.!3G..!1G
    9E30: 01 01 21 32 47 01 20 0D 01 04 00 03 0A 48 40 01  // ..!2G. ......H@.
    9E40: 21 45 48 01 20 0D 01 10 00 03 0A 48 40 03 0D 40  // !EH. ......H@..@
    9E50: 00 F0 0F 61 40 01 01 6A 8B 4F 40 2C 0D 01 01 00  // ...a@..j.O@,....
    9E60: 2D 0D 42 02 00 3D 25 01 05 45 60 04 56 08 48 55  // -.B..=%..E`.V.HU
    9E70: 00 01 52 17 2C 25 01 01 3D 25 01 05 45 BE 04 02  // ..R.,%..=%..E...
    9E80: 05 01 05 02 00 00 52 29 66 08 03 0C 41 0C 00 3E  // ......R)f...A..>
    9E90: 0D 41 00 00 44 02 05 01 A5 15 01 03 01 05 13 01  // .A..D...........
    9EA0: 10 27 00 00 01 01 14 01 01 0D 25 15 01 01 4A 65  // .'........%...Je
    9EB0: 15 01 02 44 FA 04 01 01 42 01 01 01 01 46 01 01  // ...D....B....F..
    9EC0: 01 01 4A 01 01 01 01 4E 01 01 01 01 52 01 01 55  // ..J....N....R..U
    9ED0: 00 01 52 4E 5C 05 DD 5D 00 F0 FF FF AA 0A 00 00  // ..RN\..]........
    9EE0: 5C 05 63 53 FF FF FF 00 00 00 00 30 5C 05 65 53  // \.cS.......0\.eS
    9EF0: FF FF FF 00 00 00 00 30 5C 05 67 53 FF FF FF 00  // .......0\.gS....
    9F00: 00 00 00 30 5C 05 69 53 FF FF FF 00 00 00 00 30  // ...0\.iS.......0
    9F10: 5C 05 6B 53 FF FF FF 00 00 00 00 30 5C 05 6D 53  // \.kS.......0\.mS
    9F20: FF FF FF 00 00 00 00 30 5C 05 31 55 EE FF C0 FF  // .......0\.1U....
    9F30: 11 00 01 00 5C 05 31 56 EE FF C0 FF 11 00 01 00  // ....\.1V........
    9F40: 5C 05 31 57 EE FF C0 FF 11 00 01 00 5C 05 31 59  // \.1W........\.1Y
    9F50: EE FF C0 FF 11 00 01 00 5C 05 31 5A EE FF C0 FF  // ........\.1Z....
    9F60: 11 00 01 00 01 05 9A 55 01 00 00 00 01 05 9A 56  // .......U.......V
    9F70: 01 00 00 00 01 05 9A 57 01 00 00 00 01 05 9A 59  // .......W.......Y
    9F80: 01 00 00 00 01 05 9A 5A 01 00 00 00 02 25 01 07  // .......Z.....%..
    9F90: 52 33 02 05 01 00 07 00 00 55 00 02 52 4D 2C 25  // R3.......U..RM,%
    9FA0: 01 01 3D 25 01 06 45 E8 05 66 16 03 A4 00 06 00  // ..=%..E..f......
    9FB0: 2D 0D 42 08 00 03 0A 00 42 3E A5 00 00 44 79 06  // -.B.....B>...Dy.
    9FC0: 03 0A 42 00 03 0C 01 04 00 3E 0D 01 21 21 44 25  // ..B......>..!!D%
    9FD0: 06 3E 0D 01 21 22 49 6D 06 03 0C 40 08 00 66 16  // .>..!"Im...@..f.
    9FE0: 2D 0A 42 40 03 24 40 00 00 3E 25 40 FF 44 6D 06  // -.B@.$@..>%@.Dm.
    9FF0: 3E 25 40 14 49 65 06 03 04 40 02 00 4C 05 40 00  // >%@.Ie...@..L.@.
    A000: 01 00 00 44 6D 06 3E 0D 01 21 22 44 62 06 01 A5  // ...Dm.>..!"Db...
    A010: 59 61 01 43 6D 06 43 6D 06 2D 0C 42 01 00 43 30  // Ya.Cm.Cm.-.B..C0
    A020: 06 2D 0D 00 10 00 33 A5 00 01 43 05 06 66 16 03  // .-....3...C..f..
    A030: 0C 41 04 00 4C 0D 41 02 00 44 8D 06 0D A5 4C 00  // .A..L.A..D....L.
    A040: 02 52 16 01 01 53 39 02 01 01 54 39 03 01 05 55  // .R...S9...T9...U
    A050: 39 00 00 00 00 03 01 41 01 15 05 41 18 01 02 C4  // 9......A...A....
    A060: 00 41 03 01 41 01 1B 05 41 08 01 02 C9 00 41 03  // .A..A...A.....A.
    A070: 00 41 55 39 01 02 59 39 41 03 01 40 03 33 01 40  // .AU9..Y9A..@.3.@
    A080: 02 2D 02 40 41 01 02 5A 39 40 5B 7A 0A 00 00 00  // .-.@A..Z9@[z....
    A090: 6B 01 D6 02 41 04 0B 29 BC 00 02 01 00 04 66 FF  // k...A..)......f.
    A0A0: 56 08 47 2D 0D 42 74 00 03 21 47 00 09 25 47 F0  // V.G-.Bt..!G..%G.
    A0B0: 42 22 47 63 00 5B 00 63 60 56 00 63 20 36 00 63  // B"Gc.[.c`V.c 6.c
    A0C0: 90 4E 00 63 A0 3E 00 63 B0 46 00 5A 5A 5B 2D 0D  // .N.c.>.c.F.ZZ[-.
    A0D0: 42 30 00 43 5B 00 2D 0D 42 24 00 43 5B 00 2D 0D  // B0.C[.-.B$.C[.-.
    A0E0: 42 3C 00 43 5B 00 2D 0D 42 18 00 43 5B 00 2D 0D  // B<.C[.-.B..C[.-.
    A0F0: 42 0C 00 03 21 47 00 09 25 47 07 2D 0A 42 47 2D  // B...!G..%G.-.BG-
    A100: 0A 42 47 03 0C 48 00 00 5B 7A BC 00 00 00 80 00  // .BG..H..[z......
    A110: 00 01 80 01 00 02 80 02 00 00 00 01 00 02 00 03  // ................
    A120: 00 04 00 05 00 00 DC 00 B8 01 94 02 70 03 4C 04  // ............p.L.
    A130: 00 00 6B 01 D6 02 41 04 0B 29 76 2A 00 00 D8 00  // ..k...A..)v*....
    A140: B0 01 88 02 60 03 38 04 00 00 5A 00 B4 00 0E 01  // ....`.8...Z.....
    A150: 68 01 C2 01 72 00 01 01 00 00 37 00 00 56 00 40  // h...r.....7..V.@
    A160: 03 21 40 00 21 0D 40 6B 01 03 02 48 40 01 25 AC  // .!@.!.@k...H@.%.
    A170: 41 01 3D 65 00 02 49 4C 00 01 0D BD 41 01 00 54  // A.=e..IL....A..T
    A180: 00 BB 41 0D 25 AE 41 01 01 05 AD 41 11 00 00 00  // ..A.%.A....A....
    A190: 07 A5 AC 41 FE 01 05 AF 41 11 01 11 01 43 6E 00  // ...A....A....Cn.
    A1A0: 01 05 B1 41 00 00 00 01 01 05 B5 41 00 00 00 01  // ...A.......A....
    A1B0: 01 05 AF 41 11 01 11 01 54 00 AD 41 01 0D BD 41  // ...A....T..A...A
    A1C0: 00 01 3A 00 00 5B 73 00 01 01 00 00 37 00 00 52  // ..:..[s.....7..R
    A1D0: 14 03 00 41 C0 41 33 1A 41 41 03 8A 40 41 03 00  // ...A.A3.AA..@A..
    A1E0: 41 C1 41 33 1A 41 41 03 0A 40 41 3E 05 40 00 00  // A.A3.AA..@A>.@..
    A1F0: 00 00 49 36 00 03 05 40 70 08 00 0F 0E 25 00 B0  // ..I6...@p....%..
    A200: 52 14 3D 65 00 00 44 6D 00 01 02 16 4D 40 01 05  // R.=e..Dm....M@..
    A210: 17 4D 00 00 00 00 01 05 18 4D 00 00 00 00 01 05  // .M.......M......
    A220: 19 4D 00 00 00 00 5C 05 14 4D 8F FF 0F FF 31 00  // .M....\..M....1.
    A230: 00 00 5B 07 25 14 4D FE 5B 00 43 00 01 01 00 00  // ..[.%.M.[.C.....
    A240: 37 00 00 52 14 3D 65 00 01 44 3A 00 0D 65 01 50  // 7..R.=e..D:..e.P
    A250: 03 54 20 01 50 4A A5 01 50 01 49 1B 00 54 20 0F  // .T .PJ..P.I..T .
    A260: 50 56 00 40 20 25 00 01 03 0A 48 40 07 E5 E8 39  // PV.@ %....H@...9
    A270: 7F 43 3F 00 0D 25 01 50 01 3A 00 00 5B 00 CF 00  // .C?..%.P.:..[...
    A280: 02 01 00 00 37 00 00 42 29 00 63 00 1B 00 63 01  // ....7..B).c...c.
    A290: 1B 00 63 02 AA 00 5A 5A 5B 66 FF 56 08 40 2D 0D  // ..c...ZZ[f.V.@-.
    A2A0: 42 C3 00 03 21 40 00 15 25 40 01 2D 0A 42 40 03  // B...!@..%@.-.B@.
    A2B0: 0C 48 00 00 3D 65 00 00 44 72 00 0D 25 CC 00 01  // .H..=e..Dr..%...
    A2C0: 3A 00 00 01 8D C0 00 00 02 51 02 01 05 C6 00 00  // :........Q......
    A2D0: 00 10 00 01 05 C8 00 00 00 50 00 01 0D C3 00 02  // .........P......
    A2E0: 00 54 20 CA 00 01 05 C2 00 00 01 00 00 43 1A 00  // .T ..........C..
    A2F0: 07 25 CC 00 FE 3A 00 00 0D 25 CA 00 01 01 25 C2  // .%...:...%....%.
    A300: 00 01 07 A5 C1 00 FE 0D 25 D5 00 01 0D 65 D5 00  // ........%....e..
    A310: 01 4A 65 D5 00 01 44 93 00 54 08 D5 00 54 00 C6  // .Je...D..T...T..
    A320: 00 54 00 C8 00 43 1A 00 5C 65 D4 00 FC 02 01 A1  // .T...C..\e......
    A330: C0 00 00 2B A5 C0 00 01 0D A5 C1 00 01 5B 7A 0C  // ...+.........[z.
    A340: 00 00 00 02 00 2C 00 2D 00 2E 00 2F 00 00 D5 01  // .....,.-.../....
    A350: 03 01 04 00 37 00 00 66 08 03 05 46 10 27 00 00  // ....7..f...F.'..
    A360: 3D A5 00 02 49 1E 00 02 02 00 46 5B 03 05 40 0C  // =...I.....F[..@.
    A370: 00 00 00 21 21 40 00 66 FF 2D 0D 42 81 01 2D 0A  // ...!!@.f.-.B..-.
    A380: 42 40 03 04 40 00 00 03 04 41 04 00 03 04 00 08  // B@..@....A......
    A390: 00 01 02 00 00 40 03 88 40 01 00 03 18 40 01 00  // .....@..@....@..
    A3A0: 09 8D 40 FF 01 3E 8D 40 00 00 49 99 00 01 02 00  // ..@..>.@..I.....
    A3B0: 00 41 03 00 40 01 00 09 05 40 FF 01 00 00 3E 0D  // .A..@....@....>.
    A3C0: 40 00 00 49 82 00 03 05 46 00 71 02 00 43 BC 00  // @..I....F.q..C..
    A3D0: 21 02 40 46 03 00 41 01 00 09 05 41 00 1E 00 00  // !.@F..A....A....
    A3E0: 1B 05 41 09 43 B4 00 7C 02 40 46 7E 05 40 00 00  // ..A.C..|.@F~.@..
    A3F0: 01 00 03 00 41 01 00 09 05 41 00 F0 00 00 1B 05  // ....A....A......
    A400: 41 0C 75 02 40 41 03 02 46 40 3D A5 00 01 49 C8  // A.u.@A..F@=...I.
    A410: 00 02 02 00 46 5B 3D E5 00 00 49 0B 01 56 00 40  // ....F[=...I..V.@
    A420: 03 29 40 00 21 0D 40 0A 00 03 02 41 00 2D 02 40  // .)@.!.@....A.-.@
    A430: 41 01 02 00 00 40 03 00 41 01 00 09 05 41 00 00  // A....@..A....A..
    A440: F0 07 1B 05 41 14 02 E2 00 41 3D E5 00 00 49 0B  // ....A....A=...I.
    A450: 01 02 05 00 10 27 00 00 5B 56 00 40 03 39 40 00  // .....'..[V.@.9@.
    A460: 55 38 00 66 FF 2D 0D 42 59 01 3E 0C 40 02 00 47  // U8.f.-.BY.>.@..G
    A470: 2C 01 2D 0D 42 08 00 43 1C 01 33 0C 40 04 00 21  // ,.-.B..C..3.@..!
    A480: 0C 40 06 00 2D 0C 40 00 00 03 09 42 00 55 00 00  // .@..-.@....B.U..
    A490: 02 0A 00 40 7C 05 46 40 42 0F 00 7E 01 40 00 02  // ...@|.F@B..~.@..
    A4A0: 02 00 40 5B 7A 7C 00 FF FF 07 00 00 00 00 00 C8  // ..@[z|..........
    A4B0: 00 3F 00 08 00 19 00 40 06 5F 00 40 00 32 00 80  // .?.....@._.@.2..
    A4C0: 0C 7E 00 60 00 64 00 00 32 7F 00 7F 00 64 00 11  // .~.`.d..2....d..
    A4D0: 6C 01 00 00 6C 01 00 4C 6C 01 00 0D 6E 01 00 00  // l...l..Ll...n...
    A4E0: 6E 01 00 48 6E 01 00 0D 70 01 00 00 70 01 00 48  // n..Hn...p...p..H
    A4F0: 70 01 00 0D 6E 01 00 00 6E 01 00 48 6E 01 00 0D  // p...n...n..Hn...
    A500: 7E 01 00 00 7E 01 00 48 7E 01 00 0E 72 01 00 00  // ~...~..H~...r...
    A510: 72 01 00 49 72 01 00 0E B0 01 00 00 B0 01 00 49  // r..Ir..........I
    A520: B0 01 00 00 BF 00 02 03 04 00 37 00 00 56 00 46  // ..........7..V.F
    A530: 56 00 00 03 21 00 00 55 20 00 3D 65 00 03 44 2C  // V...!..U .=e..D,
    A540: 00 3D 65 00 0D 46 B4 00 02 29 00 00 32 25 00 08  // .=e..F...)..2%..
    A550: 0E 25 00 60 52 14 5C 22 28 55 F8 00 02 22 00 00  // .%.`R.\"(U..."..
    A560: 03 0D 41 01 00 66 FF 2D 0D 42 BB 00 2D 0A 42 41  // ..A..f.-.B..-.BA
    A570: 03 24 00 00 00 3D E2 00 00 48 A0 00 3E 25 00 04  // .$...=...H..>%..
    A580: 44 6F 00 03 22 46 00 33 25 46 01 15 25 46 04 0F  // Do.."F.3%F..%F..
    A590: 25 46 01 33 39 00 00 3E 25 00 01 44 8C 00 3E 25  // %F.39..>%..D..>%
    A5A0: 00 02 44 85 00 03 25 46 21 03 65 00 2F 43 90 00  // ..D...%F!.e./C..
    A5B0: 03 65 00 13 03 79 46 00 33 65 46 01 15 2D 46 03  // .e...yF.3eF..-F.
    A5C0: 0F 65 46 01 52 14 01 02 01 4D 46 01 52 00 4D 00  // .eF.R....MF.R.M.
    A5D0: 54 00 05 4D 54 00 FF 4C 3A 00 00 5B 7A 04 00 03  // T..MT..L:..[z...
    A5E0: 02 01 04 00 5E 01 01 04 04 08 37 00 00 3D 65 02  // ....^.....7..=e.
    A5F0: 01 49 27 01 4B A5 02 03 49 2A 00 52 25 02 05 00  // .I'.K...I*.R%...
    A600: 00 00 00 00 02 05 01 00 05 02 00 43 2F 00 55 28  // ...........C/.U(
    A610: 02 52 25 03 38 00 C4 00 03 48 00 C9 00 0E 25 02  // .R%.8....H....%.
    A620: 90 52 14 08 25 02 07 0D 05 B4 3A 11 11 01 00 5C  // .R..%.....:....\
    A630: 25 B3 3A 0B 01 03 21 41 02 15 25 41 04 0D 22 B3  // %.:...!A..%A..".
    A640: 3A 41 0D 65 B6 3A 01 5C 25 DB 3A FD 01 03 02 41  // :A.e.:.\%.:....A
    A650: 00 1B 05 41 08 01 0A CB 3A 41 01 0A CF 3A 41 15  // ...A....:A...:A.
    A660: 05 00 18 01 02 CA 3A 00 01 02 CE 3A 00 4B A5 02  // ......:....:.K..
    A670: 03 49 A0 00 2B 05 CA 3A 00 00 10 00 2B 05 CE 3A  // .I..+..:....+..:
    A680: 00 00 50 00 01 0D A7 3A 80 00 01 0D B1 3A 00 03  // ..P....:.....:..
    A690: 01 0D 0C 3B 01 03 01 05 0A 3B 00 00 08 28 01 05  // ...;.....;...(..
    A6A0: 0B 3B 00 00 08 00 01 E5 EF 3A 08 01 E5 EE 3A E0  // .;.......:....:.
    A6B0: 54 00 A9 3A 01 19 AA 3A 00 01 89 AA 3A 00 01 19  // T..:...:....:...
    A6C0: AE 3A 00 01 89 AE 3A 00 07 0D A5 3A FF F8 66 FF  // .:....:....:..f.
    A6D0: 2D 0D 42 4F 01 03 0C 40 00 00 3E 0D 40 FF FF 44  // -.BO...@..>.@..D
    A6E0: 0E 01 3D 8C 01 00 00 44 0E 01 2D 0D 42 03 00 43  // ..=....D..-.B..C
    A6F0: F1 00 01 24 A5 3A 02 00 01 09 C7 3A 01 07 25 B3  // ...$.:.....:..%.
    A700: 3A FE 07 25 DB 3A FE 3A 00 00 5B 0E 25 02 90 52  // :..%.:.:..[.%..R
    A710: 14 3D 65 02 00 49 3C 01 0D 25 B3 3A 01 43 48 01  // .=e..I<..%.:.CH.
    A720: 3D 65 02 10 44 48 01 01 09 C7 3A 01 3A 00 00 5B  // =e..DH....:.:..[
    A730: 7A 0F 00 01 00 01 01 01 03 01 05 02 02 00 08 FF  // z...............
    A740: FF 08 42 00 01 01 00 00 37 00 00 52 14 3D 65 00  // ..B.....7..R.=e.
    A750: 01 44 21 00 54 20 4B 50 4A 65 4B 50 01 49 16 00  // .D!.T KPJeKP.I..
    A760: 43 3E 00 5C 4D 1B 50 FE FF 00 01 4A A5 01 50 01  // C>.\M.P....J..P.
    A770: 44 3E 00 0D 25 4B 50 01 4A 65 4B 50 01 44 36 00  // D>..%KP.JeKP.D6.
    A780: 3A 00 00 5B 13 00 01 03 00 00 37 00 00 0E 25 00  // :..[......7...%.
    A790: A0 52 14 3A 00 00 5B 00 C6 01 01 01 00 18 56 00  // .R.:..[.......V.
    A7A0: 40 03 21 40 05 21 0D 40 80 00 03 0A 48 40 37 00  // @.!@.!.@....H@7.
    A7B0: 00 01 0D 47 50 0D 00 3D 8D 01 0D 00 46 2C 00 01  // ...GP..=....F,..
    A7C0: 19 47 50 01 01 8D 48 50 40 01 01 0D 49 50 2C 01  // .GP...HP@...IP,.
    A7D0: 03 09 41 00 2D 19 41 00 03 8A 41 41 2D 8D 41 01  // ..A.-.A...AA-.A.
    A7E0: 00 1B 1D 41 02 01 1A 48 50 41 33 0D 41 01 00 01  // ...A...HPA3.A...
    A7F0: 0A EA 4F 41 54 08 EC 4F 01 99 EC 4F 02 03 19 41  // ..OAT..O...O...A
    A800: 00 33 09 41 02 56 18 41 03 B1 41 04 33 1A 41 41  // .3.A.V.A..A.3.AA
    A810: 01 8A EB 4F 41 03 19 41 00 33 09 41 02 2D 1A 41  // ...OA..A.3.A.-.A
    A820: 41 2D 09 41 00 4B 25 04 10 44 98 00 2D 09 41 00  // A-.A.K%..D..-.A.
    A830: 01 0A EB 4F 41 03 21 41 04 09 25 41 02 1B 25 41  // ...OA.!A..%A..%A
    A840: 01 01 22 ED 4F 41 03 09 41 01 2D 19 41 01 33 0D  // ..".OA..A.-.A.3.
    A850: 41 01 00 01 0A EF 4F 41 54 08 F7 4F 01 99 F7 4F  // A.....OAT..O...O
    A860: 03 03 19 41 01 33 09 41 03 56 18 41 03 B9 41 04  // ...A.3.A.V.A..A.
    A870: 33 1A 41 41 01 8A F6 4F 41 03 19 41 01 33 09 41  // 3.AA...OA..A.3.A
    A880: 03 2D 1A 41 41 2D 09 41 01 4B 25 04 20 44 FC 00  // .-.AA-.A.K%. D..
    A890: 2D 09 41 01 01 0A F6 4F 41 03 21 41 04 09 25 41  // -.A....OA.!A..%A
    A8A0: 04 1B 25 41 02 01 22 F8 4F 41 3D 65 05 00 44 21  // ..%A..".OA=e..D!
    A8B0: 01 07 65 01 50 EF 43 26 01 0D 65 01 50 10 03 00  // ..e.P.C&..e.P...
    A8C0: 46 EB 4F 02 00 02 F6 4F 56 00 40 03 21 40 05 21  // F.O....OV.@.!@.!
    A8D0: 0D 40 01 00 03 0A 48 40 56 00 40 03 09 40 02 3D  // .@....H@V.@..@.=
    A8E0: 65 05 00 49 53 01 33 0D 40 02 00 15 05 40 0F 56  // e..IS.3.@....@.V
    A8F0: 00 41 3D 8D 02 0D 00 48 6B 01 03 0D 41 0D 00 33  // .A=....Hk...A..3
    A900: 19 41 02 0F 02 40 41 0F E5 40 80 01 02 E8 39 40  // .A...@A..@....9@
    A910: 56 00 40 03 21 40 05 21 0D 40 6B 01 03 0A 48 40  // V.@.!@.!.@k...H@
    A920: 01 09 C3 41 00 01 89 C3 41 01 01 09 C4 41 00 01  // ...A....A....A..
    A930: 89 C4 41 01 01 02 C0 41 46 01 01 C1 41 02 54 00  // ..A....AF...A.T.
    A940: BE 41 01 31 BE 41 04 01 B1 BE 41 04 54 00 BF 41  // .A.1.A....A.T..A
    A950: 01 39 BF 41 04 01 B9 BF 41 04 3A 00 00 5B D8 01  // .9.A....A.:..[..
    A960: 01 01 00 00 37 00 00 56 00 41 03 39 41 01 09 25  // ....7..V.A.9A..%
    A970: 41 0F 3E 25 41 07 49 1C 00 5B 56 00 40 03 62 40  // A.>%A.I..[V.@.b@
    A980: 41 01 02 58 53 40 03 0A 46 42 66 FF 2D 0D 42 C0  // A..XS@..FBf.-.B.
    A990: 01 15 25 41 02 2D 0A 42 41 03 0C 48 00 00 07 05  // ..%A.-.BA..H....
    A9A0: 90 5D 00 00 01 00 03 0C 48 02 00 03 05 40 50 C3  // .]......H....@P.
    A9B0: 00 00 56 00 41 03 21 41 00 27 02 40 41 15 05 40  // ..V.A.!A.'.@A..@
    A9C0: 10 03 25 40 02 01 02 62 53 40 01 05 63 53 40 00  // ..%@...bS@..cS@.
    A9D0: 00 30 03 0A 42 46 56 08 48 0D 25 5A 53 01 54 00  // .0..BFV.H.%ZS.T.
    A9E0: 59 53 56 00 41 03 71 41 01 0F E5 41 80 01 02 72  // YSV.A.qA...A...r
    A9F0: 53 41 03 69 41 00 03 A5 41 01 01 02 72 53 41 4B  // SA.iA...A...rSAK
    AA00: 25 01 01 44 D5 00 03 71 41 00 03 A5 41 02 01 02  // %..D...qA...A...
    AA10: 72 53 41 03 79 41 00 03 A5 41 03 01 02 72 53 41  // rSA.yA...A...rSA
    AA20: 03 05 40 00 31 01 00 2D A9 40 01 01 02 6E 53 40  // ..@.1..-.@...nS@
    AA30: 43 08 01 03 71 41 01 0F 65 41 01 03 A5 41 02 01  // C...qA..eA...A..
    AA40: 02 72 53 41 03 05 40 00 11 01 00 01 02 6E 53 40  // .rSA..@......nS@
    AA50: 03 05 40 01 30 00 00 03 A9 40 01 01 02 6F 53 40  // ..@.0....@...oS@
    AA60: 5C A5 58 53 CF 10 0D 25 58 53 01 02 65 00 02 56  // \.XS...%XS..e..V
    AA70: 00 40 03 29 40 01 2D 25 40 04 21 05 40 C8 00 00  // .@.)@.-%@.!.@...
    AA80: 00 56 00 41 03 21 41 00 27 02 40 41 03 0A 41 40  // .V.A.!A.'.@A..A@
    AA90: 33 0D 41 01 00 3E 0D 41 00 00 44 AC 01 51 64 4A  // 3.A..>.A..D..QdJ
    AAA0: 25 5B 53 04 44 32 01 4A 65 5B 53 31 49 AC 01 02  // %[S.D2.Je[S1I...
    AAB0: 65 00 01 4B 25 01 01 49 AC 01 01 05 72 53 01 00  // e..K%..I....rS..
    AAC0: 03 80 3D 65 01 01 49 73 01 02 A8 00 72 53 43 AC  // ..=e..Is....rSC.
    AAD0: 01 56 00 41 03 19 41 00 56 00 40 03 0A 40 41 3B  // .V.A..A.V.@..@A;
    AAE0: 02 40 03 28 40 72 53 03 68 40 72 53 03 A8 40 72  // .@.(@rS.h@rS..@r
    AAF0: 53 03 E8 40 72 53 04 02 00 40 2D A5 41 04 2D 0D  // S..@rS...@-.A.-.
    AB00: 41 04 00 3E A9 41 01 45 7A 01 0D 25 5A 53 02 01  // A..>.A.Ez..%ZS..
    AB10: 25 58 53 02 51 01 54 00 58 53 5B 7A 18 00 00 00  // %XS.Q.T.XS[z....
    AB20: 00 00 04 00 02 00 08 00 04 00 0C 00 06 00 10 00  // ................
    AB30: 08 00 14 00 0A 00 46 00 02 02 00 04 37 00 00 55  // ......F.....7..U
    AB40: 30 00 32 25 00 01 20 25 00 08 56 08 48 03 22 48  // 0.2%.. %..V.H."H
    AB50: 40 0D A5 D5 53 01 02 A0 00 D4 53 08 A5 00 03 4A  // @...S.....S....J
    AB60: 25 D4 53 02 44 3C 00 5C 0D D5 53 FF FE 01 00 43  // %.S.D<.\..S....C
    AB70: 42 00 0D 0D D5 53 01 01 3A 00 00 5B 14 03 01 05  // B....S..:..[....
    AB80: 00 00 37 00 00 0E 25 00 60 52 14 08 25 00 0F 42  // ..7...%.`R..%..B
    AB90: 29 00 63 0F 53 00 63 11 09 02 63 12 66 02 63 01  // ).c.S.c...c.f.c.
    ABA0: CC 02 63 00 F5 02 63 08 D8 01 63 09 B9 01 63 0A  // ..c...c...c...c.
    ABB0: C0 01 63 13 C8 01 63 14 D0 01 63 0B E0 01 63 0C  // ..c...c...c...c.
    ABC0: BC 02 63 0D E8 01 63 10 01 02 5A 5A 43 B5 01 54  // ..c...c...ZZC..T
    ABD0: 00 9A 55 01 0D 2B 55 1F 00 3D A5 00 00 44 72 00  // ..U..+U..=...Dr.
    ABE0: 3D A5 00 02 44 A2 01 3D A5 00 05 49 A2 01 54 00  // =...D..=...I..T.
    ABF0: C9 55 3D 25 02 00 49 81 00 02 25 02 02 32 25 02  // .U=%..I...%..2%.
    AC00: 01 01 E1 C9 55 02 4A 25 CC 55 01 49 B5 01 7B 05  // ....U.J%.U.I..{.
    AC10: 01 00 80 00 00 7E 05 40 8C 0A 00 00 56 00 46 03  // .....~.@....V.F.
    AC20: 29 46 02 27 02 40 46 07 65 D0 55 FE 01 05 D1 55  // )F.'.@F.e.U....U
    AC30: 00 80 00 00 01 02 D2 55 40 0D E5 D3 55 10 0D 65  // .......U@...U..e
    AC40: 28 55 04 51 01 07 65 28 55 FB 51 01 03 21 40 02  // (U.Q..e(U.Q..!@.
    AC50: 15 25 40 05 01 E2 CA 55 40 54 20 CE 55 02 A0 02  // .%@....U@T .U...
    AC60: 28 55 03 0A 46 48 08 A5 02 07 56 00 40 03 31 40  // (U..FH....V.@.1@
    AC70: 02 21 0D 40 80 00 03 8A 46 40 03 0A 48 40 03 88  // .!.@....F@..H@..
    AC80: 40 EA 4F 03 08 40 EF 4F 2D 05 40 01 00 01 00 03  // @.O..@.O-.@.....
    AC90: 98 41 EB 4F 03 18 41 F6 4F 03 0A 48 46 01 02 0C  // .A.O..A.O..HF...
    ACA0: 56 40 01 02 0D 56 41 03 1A 48 46 03 00 40 EB 4F  // V@...VA..HF..@.O
    ACB0: 33 1A 40 40 33 08 40 BE 41 33 08 40 BE 41 03 00  // 3.@@3.@.A3.@.A..
    ACC0: 41 F6 4F 33 1A 41 41 33 08 41 BF 41 33 08 41 BF  // A.O3.AA3.A.A3.A.
    ACD0: 41 03 0A 48 46 01 0A 0F 56 41 01 8A 0F 56 40 03  // A..HF...VA...V@.
    ACE0: 1A 48 46 03 00 40 EC 4F 33 8A 40 40 03 00 41 F7  // .HF..@.O3.@@..A.
    ACF0: 4F 33 8A 41 41 4A 25 ED 4F 01 44 85 01 0F E5 40  // O3.AAJ%.O.D....@
    AD00: 80 4A 25 F8 4F 01 44 91 01 0F E5 41 80 03 0A 48  // .J%.O.D....A...H
    AD10: 46 01 1A 0E 56 41 01 9A 0E 56 40 43 B5 01 07 E5  // F...VA...V@C....
    AD20: 28 55 2F 0D 65 28 55 04 51 01 07 65 28 55 FB 51  // (U/.e(U.Q..e(U.Q
    AD30: 01 3A 00 00 5B 54 20 D8 55 43 B5 01 01 25 D8 55  // .:..[T .UC...%.U
    AD40: 01 43 B5 01 01 25 D8 55 02 43 B5 01 01 25 D8 55  // .C...%.U.C...%.U
    AD50: 03 43 B5 01 07 25 C8 55 EF 43 B5 01 0D 25 C8 55  // .C...%.U.C...%.U
    AD60: 10 43 B5 01 0D 65 D0 55 01 51 0A 07 25 CD 55 FE  // .C...e.U.Q..%.U.
    AD70: 51 0A 01 0D CC 55 01 02 51 C8 43 B5 01 0D 25 DE  // Q....U..Q.C...%.
    AD80: 55 10 43 B5 01 01 69 6F 55 02 3D A5 00 03 49 25  // U.C...ioU.=...I%
    AD90: 02 4A 25 35 55 10 49 25 02 01 A5 6F 55 02 43 2A  // .J%5U.I%...oU.C*
    ADA0: 02 01 B1 6F 55 00 3D 25 02 00 44 3F 02 32 25 02  // ...oU.=%..D?.2%.
    ADB0: 01 14 25 02 04 5C E1 6F 55 8F 02 3D A5 00 05 44  // ..%..\.oU..=...D
    ADC0: 4D 02 3D A5 00 00 49 5E 02 02 A5 00 00 03 39 40  // M.=...I^......9@
    ADD0: 00 33 25 40 01 01 22 CB 55 40 02 E0 02 70 55 43  // .3%@..".U@...pUC
    ADE0: B5 01 02 E0 02 70 55 4B E5 02 01 44 B5 01 02 B0  // .....pUK...D....
    ADF0: 00 6F 55 3D A5 00 00 44 8C 02 3D A5 00 05 44 8C  // .oU=...D..=...D.
    AE00: 02 02 E5 00 04 43 95 02 02 E0 00 CB 55 2C E5 00  // .....C......U,..
    AE10: 01 3D A5 00 02 44 A3 02 3D A5 00 03 49 AC 02 54  // .=...D..=...I..T
    AE20: 00 70 55 50 02 43 B5 01 02 A5 00 00 03 31 43 00  // .pUP.C.......1C.
    AE30: 4A 62 6F 55 44 44 B5 01 54 08 CC 55 51 C8 0D 25  // JboUDD..T..UQ..%
    AE40: CD 55 01 51 32 43 B5 01 0D 25 70 55 01 3D A5 00  // .U.Q2C...%pU.=..
    AE50: 00 44 E1 02 01 0D A1 55 0F 01 43 B5 01 03 39 43  // .D.....U..C...9C
    AE60: 00 03 02 40 44 33 25 40 01 01 0A A1 55 40 43 B5  // ...@D3%@....U@C.
    AE70: 01 54 00 A1 55 07 25 70 55 FE 07 0D 6F 55 FF 80  // .T..U.%pU...oU..
    AE80: 07 25 35 55 EF 54 20 C8 55 54 20 D8 55 43 B5 01  // .%5U.T .UT .UC..
    AE90: 0C 01 01 06 04 00 37 00 00 42 29 00 63 07 EA 00  // ......7..B).c...
    AEA0: 63 01 25 00 63 00 C0 00 63 0B ED 00 63 04 F2 00  // c.%.c...c...c...
    AEB0: 5A 5A 43 05 01 02 65 00 10 52 4D 3D 65 00 00 44  // ZZC...e..RM=e..D
    AEC0: E6 00 02 65 00 11 52 04 4B E5 02 01 49 E6 00 3D  // ...e..R.K...I..=
    AED0: A5 00 00 49 57 00 03 01 00 00 02 65 00 0F 55 38  // ...IW......e..U8
    AEE0: 00 52 4D 02 02 00 00 02 65 00 0A 55 08 02 52 4D  // .RM.....e..U..RM
    AEF0: 3D A5 00 00 49 70 00 02 65 00 0B 52 4D 43 79 00  // =...Ip..e..RMCy.
    AF00: 02 65 00 0E 52 4D 43 AD 00 20 05 01 64 00 00 00  // .e..RMC.. ..d...
    AF10: 02 05 01 14 1E 00 02 2C 21 01 00 03 01 00 00 02  // .......,!.......
    AF20: 02 00 40 52 0C 26 05 00 64 00 00 00 02 02 01 40  // ..@R.&..d......@
    AF30: 02 02 00 00 02 65 00 01 55 08 02 52 4D 51 05 02  // .....e..U..RMQ..
    AF40: 65 00 01 52 04 51 0A 02 65 00 09 52 4D 43 E6 00  // e..R.Q..e..RMC..
    AF50: 02 65 00 12 52 04 4B E5 02 01 44 E6 00 02 65 00  // .e..R.K...D...e.
    AF60: 08 52 4D 02 65 00 00 52 04 3D A5 00 00 49 E6 00  // .RM.e..R.=...I..
    AF70: 02 65 00 00 52 4D 3A 00 00 5B 43 E6 00 52 4D 43  // .e..RM:..[C..RMC
    AF80: E6 00 66 06 02 29 00 00 02 68 00 4E 00 02 8C 00  // ..f..)...h.N....
    AF90: 20 00 52 33 5B 02 29 00 00 52 33 5B 35 0B 02 02  //  .R3[.)..R3[5...
    AFA0: 08 00 37 00 00 3D 25 00 03 44 22 0B 66 FF 2D 0D  // ..7..=%..D".f.-.
    AFB0: 42 29 0B 56 00 40 03 21 40 00 15 25 40 01 2D 0A  // B).V.@.!@..%@.-.
    AFC0: 42 40 03 0C 48 00 00 3D 65 00 10 49 74 00 02 65  // B@..H..=e..It..e
    AFD0: 00 01 3D 25 00 04 45 22 0B 4A A5 F9 5D 01 44 22  // ..=%..E".J..].D"
    AFE0: 0B 02 65 00 00 4A A5 15 5E 02 49 22 0B 0D 25 16  // ..e..J..^.I"..%.
    AFF0: 5E 01 07 05 15 5E FF FF FB FF 3D E5 00 04 45 6D  // ^....^....=...Em
    B000: 00 4A A5 15 5E 01 44 22 0B 02 65 00 01 43 22 0B  // .J..^.D"..e..C".
    B010: 3D 25 00 04 48 85 00 03 05 00 01 01 01 01 43 C5  // =%..H.........C.
    B020: 00 4A A5 F9 5D 01 44 7B 00 4A A5 15 5E 02 49 22  // .J..].D{.J..^.I"
    B030: 0B 0D 25 16 5E 01 07 05 15 5E FF FF FB FF 03 05  // ..%.^....^......
    B040: 00 01 01 00 00 3D E5 00 01 44 C5 00 03 05 00 01  // .....=...D......
    B050: 01 00 00 3D E5 00 02 44 C5 00 03 05 00 01 01 01  // ...=...D........
    B060: 01 42 29 00 63 07 EF 00 63 0A DD 04 63 01 4D 05  // .B).c...c...c.M.
    B070: 63 00 DA 06 63 09 7C 08 63 08 EC 09 63 0B 9F 0A  // c...c.|.c...c...
    B080: 63 0E 4D 0A 63 0F 0E 01 5A 5A 5B 01 05 FD 5D 00  // c.M.c...ZZ[...].
    B090: 00 00 00 01 05 EE 5D 00 40 00 00 5C 05 F0 5D FF  // ......].@..\..].
    B0A0: FF 0F FF 00 00 40 00 43 22 0B 4A A5 F9 5D 01 49  // .....@.C".J..].I
    B0B0: 22 0B 4A 25 00 5E 01 49 42 01 3C 25 F9 5D 00 49  // ".J%.^.IB.<%.].I
    B0C0: 42 01 3C 71 F9 5D 00 49 42 01 08 E5 00 01 03 00  // B.<q.].IB.......
    B0D0: 40 F1 5D 09 25 40 01 3E 39 40 00 44 22 0B 54 20  // @.].%@.>9@.D".T 
    B0E0: F9 5D 07 4D F1 5D DF FE 4A 65 F1 5D 40 49 4C 01  // .].M.]..Je.]@IL.
    B0F0: 0D 05 03 5E 01 01 01 01 0D 25 00 5E 01 0D A5 00  // ...^.....%.^....
    B100: 5E 20 0D 25 00 5E 01 0D 05 03 5E 01 01 01 01 03  // ^ .%.^....^.....
    B110: 39 40 00 09 25 40 01 5C 22 F1 5D FE 40 5C 65 00  // 9@..%@.\".].@\e.
    B120: 5E C1 06 0D 25 02 5E 08 0D E5 00 5E A0 5C 05 06  // ^...%.^....^.\..
    B130: 5E BB BB FF FF 33 33 00 00 5C 05 03 5E F7 F7 F7  // ^....33..\..^...
    B140: F7 02 02 02 02 66 07 2D 0C 42 0A 00 56 00 40 20  // .....f.-.B..V.@ 
    B150: 25 00 0C 2D 0A 42 40 03 24 40 09 00 03 62 40 40  // %..-.B@.$@...b@@
    B160: 03 8A 40 40 5C 02 04 5E F8 F8 F8 F8 40 03 21 43  // ..@@\..^....@.!C
    B170: 00 03 A2 46 44 3D A5 00 00 44 15 02 03 05 40 04  // ...FD=...D....@.
    B180: 00 00 00 66 07 2D 0C 42 04 00 03 04 41 00 00 3E  // ...f.-.B....A..>
    B190: 05 41 00 00 00 00 44 4C 02 4C A4 46 06 00 49 0D  // .A....DL.L.F..I.
    B1A0: 02 2D 0D 42 0C 00 43 EE 01 03 24 40 07 00 43 4C  // .-.B..C...$@..CL
    B1B0: 02 03 05 40 05 00 00 00 66 07 2D 0C 42 08 00 03  // ...@....f.-.B...
    B1C0: 04 41 00 00 3E 05 41 00 00 00 00 44 4C 02 4C A4  // .A..>.A....DL.L.
    B1D0: 46 04 00 49 42 02 2D 0D 42 44 00 43 23 02 2D 0D  // F..IB.-.BD.C#.-.
    B1E0: 42 08 00 03 24 40 05 00 15 05 40 0E 5C 02 00 5E  // B...$@....@.\..^
    B1F0: FF 3F FE FF 40 07 65 00 5E FE 3D A5 00 00 49 00  // .?..@.e.^.=...I.
    B200: 03 5C 05 0B 5E FF FF 8F FF 00 00 20 00 0D 05 0C  // .\..^...... ....
    B210: 5E 01 01 00 00 5C 05 0B 5E 0F 00 FF FF 40 16 00  // ^....\..^....@..
    B220: 00 0D 05 0E 5E 00 00 00 01 01 05 07 5E 05 00 66  // ....^.......^..f
    B230: 66 01 05 0A 5E 02 00 00 00 01 05 09 5E F3 20 01  // f...^.......^. .
    B240: 00 01 05 08 5E F3 DF 00 00 01 05 0D 5E 00 00 00  // ....^.......^...
    B250: 00 5C 05 0B 5E FF FF F8 FF 00 00 00 00 5C 05 0C  // .\..^........\..
    B260: 5E 8F FF FF FF 20 00 00 00 0D 05 0E 5E 00 00 00  // ^.... ......^...
    B270: 10 07 05 0C 5E FB FF FF FF 01 05 0F 5E 3E 00 08  // ....^.......^>..
    B280: 00 01 05 10 5E 3E 00 18 24 01 05 11 5E 3E 00 00  // ....^>..$...^>..
    B290: 00 01 05 12 5E 3E 00 34 00 43 90 03 5C 05 0B 5E  // ....^>.4.C..\..^
    B2A0: FF FF 8F FF 00 00 10 00 0D 05 0C 5E 01 01 00 00  // ...........^....
    B2B0: 5C 05 0B 5E 0F 00 FF FF 60 0A 00 00 0D 05 0E 5E  // \..^....`......^
    B2C0: 00 00 00 01 01 05 07 5E 01 00 52 F8 54 00 0A 5E  // .......^..R.T..^
    B2D0: 01 05 09 5E E9 09 00 00 01 05 08 5E 5C 0F 00 00  // ...^.......^\...
    B2E0: 01 05 0D 5E 00 00 00 00 5C 05 0B 5E FF FF F8 FF  // ...^....\..^....
    B2F0: 00 00 04 00 07 05 0C 5E 8F FF FF FF 0D 05 0E 5E  // .......^.......^
    B300: 00 00 00 10 0D 05 0C 5E 04 00 00 00 01 05 0F 5E  // .......^.......^
    B310: 3E 00 0C 00 01 05 10 5E 3E 00 80 88 01 05 11 5E  // >......^>......^
    B320: 3E 00 00 00 01 05 12 5E 3E 00 34 00 0D A5 06 5E  // >......^>.4....^
    B330: 08 0D 25 F3 5D 01 0D 65 F1 5D 20 4A 65 F1 5D 40  // ..%.]..e.] Je.]@
    B340: 49 9F 03 0D A5 F1 5D 01 07 25 00 5E FE 07 05 03  // I.....]..%.^....
    B350: 5E FE FE FE FE 4A E5 00 5E 10 44 B9 03 66 07 2D  // ^....J..^.D..f.-
    B360: 0C 42 0C 00 03 04 40 00 00 3E 05 40 FF FF FF FF  // .B....@..>.@....
    B370: 44 EB 03 01 04 F4 5D 00 00 01 04 F5 5D 04 00 2D  // D.....].....]..-
    B380: 0D 42 08 00 43 C8 03 01 05 F4 5D 38 20 00 00 01  // .B..C.....]8 ...
    B390: 05 F5 5D 0C 00 00 00 56 00 01 4A 05 03 5E 20 20  // ..]....V..J..^  
    B3A0: 20 20 44 24 04 51 02 2D 05 01 01 00 00 00 3E 05  //   D$.Q.-......>.
    B3B0: 01 A0 86 01 00 49 FE 03 01 25 F9 5D 03 43 22 0B  // .....I...%.].C".
    B3C0: 0D 05 00 5E 00 01 00 00 03 00 40 04 5E 09 05 40  // ...^......@.^..@
    B3D0: 07 00 00 00 21 05 40 03 00 00 00 03 05 41 21 20  // ....!.@......A! 
    B3E0: 00 00 2D 02 41 40 01 02 F4 5D 41 03 00 41 F5 5D  // ..-.A@...]A..A.]
    B3F0: 01 05 F4 5D 84 00 00 00 01 02 F5 5D 41 03 05 41  // ...].......]A..A
    B400: 22 20 00 00 2D 02 41 40 01 02 F4 5D 41 03 00 41  // " ..-.A@...]A..A
    B410: F5 5D 01 05 F4 5D 85 00 00 00 01 02 F5 5D 41 3D  // .]...].......]A=
    B420: 25 00 04 45 C0 04 03 00 40 00 5E 09 05 40 00 C0  // %..E....@.^..@..
    B430: 01 00 1B 05 40 0A 01 05 F4 5D 21 00 00 00 03 00  // ....@....]!.....
    B440: 41 F5 5D 09 25 41 0F 0F 22 41 40 0F 25 41 80 01  // A.].%A.."A@.%A..
    B450: 05 F4 5D 21 00 00 00 01 02 F5 5D 41 56 00 41 3D  // ..]!......]AV.A=
    B460: A5 00 00 44 CF 04 03 0D 41 01 01 5C A2 0B 5E F8  // ...D....A..\..^.
    B470: 41 0D 65 00 5E 01 43 22 0B 03 0A 46 48 66 07 2D  // A.e.^.C"...FHf.-
    B480: 0C 42 0A 00 56 00 40 20 25 00 0C 2D 0A 42 40 20  // .B..V.@ %..-.B@ 
    B490: 25 00 02 03 0A 48 40 01 04 2E 5D 00 00 07 E5 2D  // %....H@...]....-
    B4A0: 5D FC 03 0A 48 46 03 05 40 01 01 01 01 3D 25 00  // ]...HF..@....=%.
    B4B0: 04 45 2F 05 4A A5 F9 5D 01 44 2F 05 4A A5 06 5E  // .E/.J..].D/.J..^
    B4C0: 01 49 2F 05 09 05 40 FF FF FE FE 0D 02 03 5E 40  // .I/...@.......^@
    B4D0: 51 05 03 02 40 00 69 05 40 FF FF FF FF 07 02 03  // Q...@.i.@.......
    B4E0: 5E 40 51 C8 51 C8 43 22 0B 4A 25 FC 5D 01 49 22  // ^@Q.Q.C".J%.].I"
    B4F0: 0B 3C 25 F9 5D 00 49 22 0B 4C 25 00 01 44 6C 05  // .<%.].I".L%..Dl.
    B500: 0D 05 06 5E 04 00 00 00 4C 65 00 01 44 7B 05 0D  // ...^....Le..D{..
    B510: 05 06 5E 40 00 00 00 4C A5 00 01 44 8A 05 0D 05  // ..^@...L...D....
    B520: 06 5E 00 04 00 00 4C E5 00 01 44 99 05 0D 05 06  // .^....L...D.....
    B530: 5E 00 40 00 00 03 02 40 00 15 05 40 04 0D 02 03  // ^.@....@...@....
    B540: 5E 40 56 00 01 4A 25 FC 5D 01 49 22 0B 03 02 40  // ^@V..J%.].I"...@
    B550: 00 15 05 40 05 03 00 41 03 5E 09 02 41 40 09 05  // ...@...A.^..A@..
    B560: 40 20 20 20 20 3E 02 41 40 44 EB 05 51 02 2D 05  // @    >.A@D..Q.-.
    B570: 01 01 00 00 00 3E 05 01 A0 86 01 00 49 A9 05 01  // .....>......I...
    B580: 25 F9 5D 04 43 22 0B 03 02 40 00 15 05 40 04 69  // %.].C"...@...@.i
    B590: 05 40 FF FF FF FF 07 02 03 5E 40 56 00 01 4A 25  // .@.......^@V..J%
    B5A0: FC 5D 01 49 22 0B 03 02 40 00 15 05 40 05 03 00  // .].I"...@...@...
    B5B0: 41 03 5E 09 02 41 40 3E 05 41 00 00 00 00 44 40  // A.^..A@>.A....D@
    B5C0: 06 51 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01  // .Q.-......>.....
    B5D0: 00 49 02 06 01 25 F9 5D 05 43 22 0B 56 00 01 4A  // .I...%.].C".V..J
    B5E0: 25 FC 5D 01 49 22 0B 4A 25 0C 5E 80 49 6E 06 51  // %.].I".J%.^.In.Q
    B5F0: 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01 00 49  // .-......>......I
    B600: 43 06 01 25 F9 5D 06 43 22 0B 03 0A 41 48 56 00  // C..%.].C"...AHV.
    B610: 40 03 21 40 00 03 0A 48 40 0D 25 60 01 01 51 0A  // @.!@...H@.%`..Q.
    B620: 03 0A 48 41 0D 25 E8 5D 03 4A 25 E8 5D 04 44 8D  // ..HA.%.].J%.].D.
    B630: 06 0D 65 F1 5D 12 4A 65 F1 5D 04 44 9A 06 4C 25  // ..e.].Je.].D..L%
    B640: 00 01 44 AE 06 0D 65 F0 5D 10 4C 65 00 01 44 BA  // ..D...e.].Le..D.
    B650: 06 0D 65 F0 5D 20 4C A5 00 01 44 C6 06 0D 65 F0  // ..e.] L...D...e.
    B660: 5D 40 4C E5 00 01 44 D2 06 0D 65 F0 5D 80 01 71  // ]@L...D...e.]..q
    B670: F9 5D 00 43 22 0B 4A 05 06 5E 44 44 00 00 44 22  // .].C".J..^DD..D"
    B680: 0B 07 65 F1 5D FD 07 25 E8 5D FD 03 0A 41 48 56  // ..e.]..%.]...AHV
    B690: 00 40 03 21 40 00 03 0A 48 40 07 25 60 01 FE 03  // .@.!@...H@.%`...
    B6A0: 0A 48 41 4C 25 00 01 44 16 07 07 05 06 5E FB FF  // .HAL%..D.....^..
    B6B0: FF FF 4C 65 00 01 44 25 07 07 05 06 5E BF FF FF  // ..Le..D%....^...
    B6C0: FF 4C A5 00 01 44 34 07 07 05 06 5E FF FB FF FF  // .L...D4....^....
    B6D0: 4C E5 00 01 44 43 07 07 05 06 5E FF BF FF FF 07  // L...DC....^.....
    B6E0: 65 0C 5E FE 54 00 08 5E 54 00 09 5E 03 00 40 06  // e.^.T..^T..^..@.
    B6F0: 5E 4C 25 00 01 44 67 07 5E 05 40 FC FF FF FF 03  // ^L%..Dg.^.@.....
    B700: 00 00 00 4C 65 00 01 44 79 07 5E 05 40 CF FF FF  // ...Le..Dy.^.@...
    B710: FF 30 00 00 00 4C A5 00 01 44 8B 07 5E 05 40 FF  // .0...L...D..^.@.
    B720: FC FF FF 00 03 00 00 4C E5 00 01 44 9D 07 5E 05  // .......L...D..^.
    B730: 40 FF CF FF FF 00 30 00 00 3C 02 06 5E 40 44 51  // @.....0..<..^@DQ
    B740: 08 01 02 06 5E 40 03 02 40 00 15 05 40 04 0D 02  // ....^@..@...@...
    B750: 03 5E 40 56 00 01 4A 25 FC 5D 01 49 FC 07 03 02  // .^@V..J%.].I....
    B760: 40 00 15 05 40 05 03 00 41 03 5E 09 02 41 40 09  // @...@...A.^..A@.
    B770: 05 40 20 20 20 20 3E 02 41 40 44 FC 07 51 02 2D  // .@    >.A@D..Q.-
    B780: 05 01 01 00 00 00 3E 05 01 A0 86 01 00 49 BA 07  // ......>......I..
    B790: 01 25 F9 5D 07 43 22 0B 03 02 40 00 15 05 40 04  // .%.].C"...@...@.
    B7A0: 69 05 40 FF FF FF FF 07 02 03 5E 40 56 00 01 4A  // i.@.......^@V..J
    B7B0: 25 FC 5D 01 49 51 08 03 02 40 00 15 05 40 05 03  // %.].IQ...@...@..
    B7C0: 00 41 03 5E 09 02 41 40 3E 05 41 00 00 00 00 44  // .A.^..A@>.A....D
    B7D0: 51 08 51 02 2D 05 01 01 00 00 00 3E 05 01 A0 86  // Q.Q.-......>....
    B7E0: 01 00 49 13 08 01 25 F9 5D 08 43 22 0B 03 02 40  // ..I...%.].C"...@
    B7F0: 00 15 05 40 02 69 05 40 FF FF FF FF 07 02 03 5E  // ...@.i.@.......^
    B800: 40 03 02 40 00 15 05 40 01 09 05 40 02 02 02 02  // @..@...@...@....
    B810: 0D 02 03 5E 40 43 22 0B 4A 25 FC 5D 01 49 22 0B  // ...^@C".J%.].I".
    B820: 56 00 40 20 25 00 02 03 0A 41 48 03 02 48 40 0D  // V.@ %....AH..H@.
    B830: E5 2E 5D 10 03 0A 48 41 3D A5 00 00 44 A8 08 0D  // ..]...HA=...D...
    B840: 65 F0 5D F0 0D A5 F0 5D 01 0D A5 E9 5D 01 3D A5  // e.]....]....].=.
    B850: 00 00 44 C4 08 4A 05 06 5E 33 33 00 00 44 D5 09  // ..D..J..^33..D..
    B860: 03 02 40 00 15 05 40 01 69 05 40 FF FF FF FF 07  // ..@...@.i.@.....
    B870: 02 03 5E 40 03 02 40 00 15 05 40 02 09 05 40 04  // ..^@..@...@...@.
    B880: 04 04 04 0D 02 03 5E 40 03 00 40 06 5E 4C 25 00  // ......^@..@.^L%.
    B890: 01 44 FF 08 09 05 40 FC FF FF FF 4C 65 00 01 44  // .D....@....Le..D
    B8A0: 0D 09 09 05 40 CF FF FF FF 4C A5 00 01 44 1B 09  // ....@....L...D..
    B8B0: 09 05 40 FF FC FF FF 4C E5 00 01 44 29 09 09 05  // ..@....L...D)...
    B8C0: 40 FF CF FF FF 01 02 06 5E 40 03 02 40 00 15 05  // @.......^@..@...
    B8D0: 40 04 0D 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49  // @....^@V..J%.].I
    B8E0: 22 0B 03 02 40 00 15 05 40 05 03 00 41 03 5E 09  // "...@...@...A.^.
    B8F0: 02 41 40 09 05 40 20 20 20 20 3E 02 41 40 44 80  // .A@..@    >.A@D.
    B900: 09 51 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01  // .Q.-......>.....
    B910: 00 49 3E 09 01 25 F9 5D 09 43 22 0B 03 02 40 00  // .I>..%.].C"...@.
    B920: 15 05 40 04 69 05 40 FF FF FF FF 07 02 03 5E 40  // ..@.i.@.......^@
    B930: 56 00 01 4A 25 FC 5D 01 49 22 0B 03 02 40 00 15  // V..J%.].I"...@..
    B940: 05 40 05 03 00 41 03 5E 09 02 41 40 3E 05 41 00  // .@...A.^..A@>.A.
    B950: 00 00 00 44 D5 09 51 02 2D 05 01 01 00 00 00 3E  // ...D..Q.-......>
    B960: 05 01 A0 86 01 00 49 97 09 01 25 F9 5D 0A 43 22  // ......I...%.].C"
    B970: 0B 03 02 40 00 15 05 40 03 09 05 40 08 08 08 08  // ...@...@...@....
    B980: 0D 02 03 5E 40 43 22 0B 03 02 40 00 15 05 40 03  // ...^@C"...@...@.
    B990: 69 05 40 FF FF FF FF 07 02 03 5E 40 07 A5 F0 5D  // i.@.......^@...]
    B9A0: FE 4C 25 00 01 44 11 0A 07 65 F0 5D EF 4C 65 00  // .L%..D...e.].Le.
    B9B0: 01 44 1D 0A 07 65 F0 5D DF 4C A5 00 01 44 29 0A  // .D...e.].L...D).
    B9C0: 07 65 F0 5D BF 4C E5 00 01 44 35 0A 07 65 F0 5D  // .e.].L...D5..e.]
    B9D0: 7F 07 A5 E9 5D FE 56 00 40 20 25 00 02 03 0A 48  // ....].V.@ %....H
    B9E0: 40 07 E5 2E 5D EF 43 22 0B 03 21 43 00 03 A2 46  // @...].C"..!C...F
    B9F0: 44 66 07 2D 0C 42 04 00 3D A5 00 03 44 71 0A 66  // Df.-.B..=...Dq.f
    BA00: 07 2D 0C 42 06 00 3D A5 00 02 49 22 0B 03 04 41  // .-.B..=...I"...A
    BA10: 00 00 3E 05 41 00 00 00 00 44 22 0B 3D 02 01 41  // ..>.A....D".=..A
    BA20: 46 8F 0A 4C A4 46 06 00 49 97 0A 2D 0D 42 0C 00  // F..L.F..I..-.B..
    BA30: 43 71 0A 03 04 41 08 00 43 FE 0A 08 A5 00 1B 66  // Cq...A..C......f
    BA40: 07 2D 0C 42 08 00 03 21 43 00 03 A2 46 44 03 04  // .-.B...!C...FD..
    BA50: 41 00 00 3E 05 41 00 00 00 00 44 22 0B 3D 02 01  // A..>.A....D".=..
    BA60: 41 46 D0 0A 4C A4 46 04 00 49 D8 0A 2D 0D 42 44  // AF..L.F..I..-.BD
    BA70: 00 43 B2 0A 2D 0D 42 08 00 3D A4 00 00 00 44 F9  // .C..-.B..=....D.
    BA80: 0A 03 24 41 00 00 3E 25 41 18 44 F9 0A 2D 0D 42  // ..$A..>%A.D..-.B
    BA90: 06 00 43 DD 0A 03 04 41 01 00 5C 02 0F 5E 00 00  // ..C....A..\..^..
    BAA0: FC FF 41 5C 02 10 5E 00 00 FC FF 41 5C 02 11 5E  // ..A\..^....A\..^
    BAB0: 00 00 FC FF 41 5C 02 12 5E 00 00 FC FF 41 3A 00  // ....A\..^....A:.
    BAC0: 00 5B 7A 0C 00 00 00 D8 00 B0 01 88 02 60 03 38  // .[z..........`.8
    BAD0: 04 00 1F 02 01 02 00 00 37 00 00 3D 0D 00 00 00  // ........7..=....
    BAE0: 44 CE 01 56 00 41 03 21 41 01 09 25 41 0F 15 0D  // D..V.A.!A..%A...
    BAF0: 41 02 03 0A 40 42 66 FF 2D 0D 42 07 02 2D 0A 42  // A...@Bf.-.B..-.B
    BB00: 41 03 0C 48 02 00 0D A5 90 5D 01 54 08 90 5D 03  // A..H.....].T..].
    BB10: 0C 48 00 00 03 F9 41 01 15 3D 41 04 5C BA 10 54  // .H....A..=A.\..T
    BB20: 8F 41 03 0A 42 40 4A 25 10 54 01 49 81 00 0D 0D  // .A..B@J%.T.I....
    BB30: 10 54 01 01 0D 25 10 54 10 4A 25 10 54 20 44 67  // .T...%.T.J%.T Dg
    BB40: 00 07 25 10 54 EF 4A 25 10 54 20 49 74 00 0D 25  // ..%.T.J%.T It..%
    BB50: 13 54 40 56 00 41 03 09 41 00 3B 02 41 03 3B 41  // .T@V.A..A.;.A.;A
    BB60: 00 1B 25 41 04 01 A2 11 54 41 03 69 41 01 15 2D  // ..%A....TA.iA..-
    BB70: 41 04 01 2A 11 54 41 56 00 40 0F E5 40 80 03 73  // A..*.TAV.@..@..s
    BB80: 40 00 01 02 16 54 40 56 00 40 03 6B 40 00 01 02  // @....T@V.@.k@...
    BB90: 16 54 40 03 63 40 00 01 02 16 54 40 03 7B 40 00  // .T@.c@....T@.{@.
    BBA0: 09 65 40 0F 01 02 16 54 40 3E 25 41 04 47 10 01  // .e@....T@>%A.G..
    BBB0: 33 25 41 04 2D 05 46 04 00 00 00 03 63 40 00 01  // 3%A.-.F.....c@..
    BBC0: 02 16 54 40 03 6B 40 00 01 02 16 54 40 03 73 40  // ..T@.k@....T@.s@
    BBD0: 00 01 02 16 54 40 03 7B 40 00 01 02 16 54 40 43  // ....T@.{@....T@C
    BBE0: D7 00 0D 25 13 54 02 0D 25 11 54 01 03 29 40 01  // ...%.T..%.T..)@.
    BBF0: 21 25 40 0A 2D 25 40 64 4A 25 14 54 01 49 42 01  // !%@.-%@dJ%.T.IB.
    BC00: 51 14 33 25 40 01 3E 25 40 00 49 26 01 02 65 01  // Q.3%@.>%@.I&..e.
    BC10: 01 43 CA 01 4A 05 14 54 F0 8F FF 00 44 54 01 02  // .C..J..T....DT..
    BC20: 65 01 02 43 CA 01 01 05 16 54 01 00 00 80 03 00  // e..C.....T......
    BC30: 40 16 54 02 6A 01 40 02 B8 01 14 54 08 A5 01 1F  // @.T.j.@....T....
    BC40: 3D A5 01 00 46 7C 01 02 65 01 03 43 CA 01 32 A5  // =...F|..e..C..2.
    BC50: 01 01 3D 8D 00 00 00 44 CA 01 3D A5 01 00 44 CA  // ..=....D..=...D.
    BC60: 01 03 31 41 01 03 19 40 00 56 18 40 3B 02 40 03  // ..1A...@.V.@;.@.
    BC70: 28 40 16 54 03 68 40 16 54 03 A8 40 16 54 03 E8  // (@.T.h@.T..@.T..
    BC80: 40 16 54 04 02 00 40 3E 25 41 04 47 CA 01 33 25  // @.T...@>%A.G..3%
    BC90: 41 04 2D 05 46 04 00 00 00 43 9D 01 3A 00 00 5B  // A.-.F....C..:..[
    BCA0: 66 FF 2D 0D 42 07 02 03 0C 48 00 00 01 8D 18 54  // f.-.B....H.....T
    BCB0: 32 00 01 05 19 54 7A 1C 02 00 01 05 1A 54 10 11  // 2....Tz......T..
    BCC0: 3D 10 2D 0D 42 04 00 2C 25 00 01 3D 25 00 06 49  // =.-.B..,%..=%..I
    BCD0: D5 01 56 08 48 5B 7A 18 00 00 00 00 00 1C 00 04  // ..V.H[z.........
    BCE0: 00 38 00 08 00 54 00 0C 00 70 00 10 00 8C 00 14  // .8...T...p......
    BCF0: 00 00 5C 00 01 02 00 04 02 25 01 04 03 31 41 00  // ..\......%...1A.
    BD00: 09 0D 41 0F 00 15 0D 41 01 66 FF 2D 0D 42 50 00  // ..A....A.f.-.BP.
    BD10: 2D 0A 42 41 03 0C 48 00 00 07 A5 90 5D FE 01 0D  // -.BA..H.....]...
    BD20: 90 5D 11 11 50 02 4A 0D 93 5D 01 00 49 41 00 02  // .]..P.J..]..IA..
    BD30: 25 01 13 54 08 90 5D 54 00 92 5D 3A 00 00 5B 7A  // %..T..]T..]:..[z
    BD40: 0C 00 00 00 04 00 08 00 0C 00 10 00 14 00 5B 01  // ..............[.
    BD50: 02 01 04 04 37 00 00 42 21 00 63 07 29 00 63 03  // ....7..B!.c.).c.
    BD60: 4E 00 63 02 60 00 63 04 84 00 63 0C 12 01 63 0D  // N.c.`.c...c...c.
    BD70: 1B 01 5A 5A 43 5A 01 01 0D 45 5D 9F 0F 66 06 01  // ..ZZCZ...E]..f..
    BD80: 24 47 5D 30 00 01 4C 47 5D 31 00 03 24 46 3B 00  // $G]0..LG]1..$F;.
    BD90: 3E 25 46 00 44 5A 01 54 20 47 5D 5B 0D E5 47 5D  // >%F.DZ.T G][..G]
    BDA0: 01 5C 05 43 5D FF FF FF FD 11 00 03 00 5B 0D E5  // .\.C]........[..
    BDB0: 47 5D 01 4A 25 44 5D 02 44 72 00 0D A5 43 5D 01  // G].J%D].Dr...C].
    BDC0: 0D A5 43 5D 02 5C 05 43 5D EF FF FF FD 01 00 00  // ..C].\.C].......
    BDD0: 00 5B 4A 05 53 00 00 02 00 00 44 94 00 0D 25 4B  // .[J.S.....D...%K
    BDE0: 5D 01 3D 8D 00 00 00 44 11 01 03 05 46 80 F0 FA  // ].=....D....F...
    BDF0: 02 56 00 41 03 19 41 00 21 05 41 FF 0F 00 00 27  // .V.A..A.!.A....'
    BE00: 02 46 40 3E 05 41 00 00 00 00 44 C4 00 2D 0D 40  // .F@>.A....D..-.@
    BE10: 01 00 01 8A 45 5D 40 56 00 41 03 19 41 00 21 02  // ....E]@V.A..A.!.
    BE20: 40 41 27 02 46 40 01 A5 4A 5D 0C 01 0A 4A 5D 40  // @A'.F@..J]...J]@
    BE30: 15 05 40 04 56 00 41 03 29 41 00 2D 0D 41 01 00  // ..@.V.A.)A.-.A..
    BE40: 21 02 40 41 1B 05 40 08 01 0A 48 5D 40 0D E5 48  // !.@A..@...H]@..H
    BE50: 5D C0 07 25 4B 5D FE 4A 65 4B 5D 01 49 09 01 5B  // ]..%K].JeK].I..[
    BE60: 01 05 43 5D 00 00 03 00 5B 0D E5 47 5D 01 4A 05  // ..C]....[..G].J.
    BE70: 43 5D 01 00 00 00 44 41 01 4A 05 43 5D 10 00 00  // C]....DA.J.C]...
    BE80: 00 49 4E 01 4A 05 44 5D 01 00 00 00 49 36 01 5C  // .IN.J.D]....I6.\
    BE90: 05 43 5D FF FF FE FF 00 00 02 00 5B 5C 05 43 5D  // .C]........[\.C]
    BEA0: EF FF FD FD 01 00 00 00 5B 00 D0 00 02 01 00 00  // ........[.......
    BEB0: 01 05 00 C2 00 00 00 E0 01 05 3E 26 43 00 00 00  // ..........>&C...
    BEC0: 5C 05 7E 12 38 FF FF FF 43 00 00 00 5C 05 7E 18  // \.~.8...C...\.~.
    BED0: F8 FF FF FF 03 00 00 00 5C 05 7F 12 F8 FF FF FF  // ........\.......
    BEE0: 03 00 00 00 5C 05 7F 18 F8 FF FF FF 03 00 00 00  // ....\...........
    BEF0: 01 05 17 74 2D 0B 15 00 03 00 40 26 74 3E 05 40  // ...t-.....@&t>.@
    BF00: F9 00 00 00 49 70 00 01 05 0B F0 00 00 12 00 01  // ....Ip..........
    BF10: 05 25 CE 30 21 21 03 43 CF 00 3E 05 40 F6 00 00  // .%.0!!.C..>.@...
    BF20: 00 49 8D 00 01 05 0B F0 00 00 21 00 01 05 25 CE  // .I........!...%.
    BF30: 23 01 10 23 43 CF 00 3E 05 40 F0 00 00 00 49 AA  // #..#C..>.@....I.
    BF40: 00 01 05 0B F0 00 00 33 00 01 05 25 CE 31 20 31  // .......3...%.1 1
    BF50: 20 43 CF 00 3E 05 40 0F 00 00 00 49 C7 00 01 05  //  C..>.@....I....
    BF60: 0B F0 00 00 CC 00 01 05 25 CE 20 31 20 31 43 CF  // ........%. 1 1C.
    BF70: 00 01 05 25 CE 20 31 20 13 5B AF 00 03 02 0C 00  // ...%. 1 .[......
    BF80: 37 00 00 03 01 00 00 03 01 01 01 03 01 02 02 52  // 7..............R
    BF90: 16 03 01 46 00 1B 05 46 08 02 02 00 00 02 02 01  // ...F...F........
    BFA0: 01 02 02 02 02 3D 65 02 00 49 36 00 2C 22 02 46  // .....=e..I6.,".F
    BFB0: 3D E5 02 00 49 41 00 2C A2 02 46 3D 65 02 02 49  // =...IA.,..F=e..I
    BFC0: 48 00 03 01 40 03 09 05 40 00 00 00 FC 3E 05 40  // H...@...@....>.@
    BFD0: 00 00 00 D0 49 6E 00 01 05 63 C0 00 00 00 40 55  // ....In...c....@U
    BFE0: 00 00 55 20 02 43 72 00 54 00 63 C0 01 01 64 C0  // ..U .Cr.T.c...d.
    BFF0: 00 56 00 40 03 21 40 02 01 02 65 C0 40 01 01 66  // .V.@.!@...e.@..f
    C000: C0 01 03 31 40 02 01 02 67 C0 40 01 01 E8 C0 03  // ...1@...g.@.....
    C010: 3D 65 02 01 44 A6 00 3D E5 02 01 44 A6 00 51 02  // =e..D..=...D..Q.
    C020: 4A E5 A0 21 80 49 A6 00 5B 00 B2 01 02 02 00 00  // J..!.I..[.......
    C030: 37 00 00 3D 25 01 01 44 8D 00 3D 25 01 02 44 8E  // 7..=%..D..=%..D.
    C040: 00 3D 25 01 03 44 33 00 3D 25 01 00 49 93 01 3D  // .=%..D3.=%..I..=
    C050: 05 00 00 00 00 00 49 5E 00 3A 00 00 5B 52 3C 03  // ......I^.:..[R<.
    C060: 00 40 24 01 3E F9 40 00 44 5A 00 4A A5 24 01 10  // .@$.>.@.DZ.J.$..
    C070: 44 41 00 03 F9 40 00 01 02 24 01 40 4A A5 24 01  // DA...@...$.@J.$.
    C080: 10 44 52 00 55 38 00 5B 54 20 A4 53 52 3C 03 00  // .DR.U8.[T .SR<..
    C090: 40 24 01 3E 39 40 00 44 89 00 4A A5 24 01 08 44  // @$.>9@.D..J.$..D
    C0A0: 70 00 03 39 40 00 01 02 24 01 40 4A A5 24 01 08  // p..9@...$.@J.$..
    C0B0: 44 81 00 55 38 00 5B 5B 66 FF 2D 0D 42 9A 01 56  // D..U8.[[f.-.B..V
    C0C0: 00 41 03 39 41 01 15 25 41 02 2D 0A 42 41 3D 65  // .A.9A..%A.-.BA=e
    C0D0: 01 0B 49 01 01 20 05 00 64 00 00 00 03 0C 48 02  // ..I.. ..d.....H.
    C0E0: 00 03 00 41 40 01 0F 25 41 10 09 0D 41 DF FF 03  // ...A@..%A...A...
    C0F0: 0C 48 00 00 4A 05 01 50 01 00 00 00 44 EA 00 03  // .H..J..P....D...
    C100: 0C 48 02 00 3C 02 41 01 40 49 EA 00 3C 02 40 01  // .H..<.A.@I..<.@.
    C110: 41 44 93 01 03 0C 48 02 00 07 25 40 01 EF 01 02  // AD....H...%@....
    C120: 41 01 40 01 0A 40 01 41 43 93 01 56 00 40 03 8D  // A.@..@.AC..V.@..
    C130: 40 0C 00 3D 65 01 18 44 24 01 03 8D 40 3E 00 3D  // @..=e..D$...@>.=
    C140: 65 01 19 44 24 01 03 A9 40 01 33 A5 40 14 03 31  // e..D$...@.3.@..1
    C150: 40 01 09 25 40 03 15 25 40 04 0F 0D 40 01 01 56  // @..%@..%@...@..V
    C160: 00 41 03 29 41 01 33 25 41 14 03 0C 48 00 00 4A  // .A.)A.3%A...H..J
    C170: 05 01 50 01 00 00 00 44 71 01 03 0C 48 02 00 4A  // ..P....Dq...H..J
    C180: 25 40 01 10 49 71 01 3C 22 43 01 41 49 71 01 03  // %@..Iq.<"C.AIq..
    C190: 1A 48 40 3C 0A 00 01 40 44 93 01 03 1A 48 40 07  // .H@<...@D....H@.
    C1A0: 25 00 01 FE 03 0C 48 02 00 01 22 43 01 41 07 0D  // %.....H..."C.A..
    C1B0: 40 01 EF FF 03 1A 48 40 01 0A 00 01 40 3A 00 00  // @.....H@....@:..
    C1C0: 5B 7A 18 00 00 00 00 00 80 00 04 00 00 01 08 00  // [z..............
    C1D0: 80 01 0C 00 00 02 10 00 80 02 14 00 E7 00 01 08  // ................
    C1E0: 08 00 03 01 00 00 02 05 00 05 00 01 00 52 29 20  // .............R) 
    C1F0: 05 00 64 00 00 00 03 02 46 40 02 02 00 00 03 01  // ..d.....F@......
    C200: 00 00 55 38 00 03 05 40 00 32 00 00 3D 05 00 00  // ..U8...@.2..=...
    C210: 00 00 00 44 64 00 03 02 40 46 27 01 40 00 3E 05  // ...Dd...@F'.@.>.
    C220: 40 9C 18 00 00 47 53 00 03 05 40 00 32 00 00 3E  // @....GS...@.2..>
    C230: 05 40 C8 00 00 00 46 64 00 03 05 40 C8 00 00 00  // .@....Fd...@....
    C240: 66 FF 2D 0D 42 C7 00 3E 0C 40 02 00 47 7B 00 2D  // f.-.B..>.@..G{.-
    C250: 0D 42 08 00 43 6B 00 33 0C 40 00 00 03 0C 01 06  // .B..Ck.3.@......
    C260: 00 3E 0D 01 19 00 49 9A 00 27 0D 40 32 00 21 0D  // .>....I..'.@2.!.
    C270: 40 02 00 43 9F 00 27 0C 40 06 00 2D 0C 40 04 00  // @..C..'.@..-.@..
    C280: 02 E2 00 40 33 0C 40 04 00 21 0C 40 06 00 2D 0C  // ...@3.@..!.@..-.
    C290: 40 00 00 27 02 46 40 02 0A 00 40 02 B2 00 40 5B  // @..'.F@...@...@[
    C2A0: 7A 20 00 C8 00 40 06 08 00 19 00 40 06 80 0C 40  // z ...@.....@...@
    C2B0: 00 32 00 80 0C 38 18 60 00 64 00 00 32 00 32 7F  // .2...8.`.d..2.2.
    C2C0: 00 64 00 00 CB 00 01 01 00 00 37 00 00 3D 65 00  // .d........7..=e.
    C2D0: 01 44 61 00 56 00 40 20 25 00 10 03 0A 48 40 07  // .Da.V.@ %....H@.
    C2E0: 25 8F 4F FD 4A 25 8F 4F 04 49 20 00 52 14 07 25  // %.O.J%.O.I .R..%
    C2F0: 46 50 FE 4A 65 46 50 01 49 2F 00 03 21 40 00 21  // FP.JeFP.I/..!@.!
    C300: 0D 40 DC 00 03 0A 48 40 07 25 B4 3A FE 56 00 40  // .@....H@.%.:.V.@
    C310: 03 21 40 00 21 0D 40 6B 01 03 0A 48 40 07 25 85  // .!@.!.@k...H@.%.
    C320: 41 EF 43 C7 00 56 00 40 20 25 00 10 03 0A 48 40  // A.C..V.@ %....H@
    C330: 0D 25 8F 4F 02 4A 25 8F 4F 04 44 71 00 52 14 0D  // .%.O.J%.O.Dq.R..
    C340: 25 46 50 01 4A 65 46 50 01 44 80 00 56 00 40 03  // %FP.JeFP.D..V.@.
    C350: 21 40 00 21 0D 40 DC 00 03 0A 48 40 0D 25 B4 3A  // !@.!.@....H@.%.:
    C360: 01 56 00 40 03 21 40 00 21 0D 40 6B 01 03 0A 48  // .V.@.!@.!.@k...H
    C370: 40 0D 25 85 41 10 56 00 40 03 21 40 00 21 0D 40  // @.%.A.V.@.!@.!.@
    C380: 5A 00 03 0A 48 40 0D 25 4C 4D 01 3A 00 00 5B 00  // Z...H@.%LM.:..[.
    C390: 24 00 01 01 00 00 37 00 00 03 00 41 E3 0D 33 05  // $.....7....A..3.
    C3A0: 41 01 00 00 00 1B 05 41 0B 01 02 06 00 41 0D 25  // A......A.....A.%
    C3B0: 1F 0E 03 5B C8 00 02 01 D6 09 80 02 A0 00 E0 01  // ...[............
    C3C0: 2D 00 10 00 60 00 0A 00 02 00 00 00 00 00 08 08  // -...`...........
    C3D0: 06 00 12 3C A0 0F 20 03 00 01 58 02 1C 00 28 00  // ...<.. ...X...(.
    C3E0: 80 00 01 00 04 00 00 00 00 00 00 00 00 00 6A 3C  // ..............j<
    C3F0: 64 19 00 04 40 01 00 03 26 00 18 00 88 00 03 00  // d...@...&.......
    C400: 06 00 00 00 00 00 00 00 06 00 55 3C 30 2A 00 05  // ..........U<0*..
    C410: 08 02 C0 03 28 00 60 00 70 00 01 00 03 00 00 00  // ....(.`.p.......
    C420: 00 00 00 00 00 00 E9 3C 30 2A 00 05 98 01 00 04  // .......<0*......
    C430: 2A 00 30 00 70 00 01 00 03 00 00 00 00 00 00 00  // *.0.p...........
    C440: 00 00 EA 3C 8F 2F 78 05 D0 01 1A 04 27 00 58 00  // ...<./x.....'.X.
    C450: 90 00 03 00 04 00 00 00 00 00 00 00 02 00 EB 3C  // ...............<
    C460: 48 3F 40 06 30 02 B0 04 32 00 40 00 C0 00 01 00  // H?@.0...2.@.....
    C470: 03 00 00 00 00 00 00 00 00 00 EC 3C 34 00 02 01  // ...........<4...
    C480: 00 00 00 00 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A  // .....*.*..***..*
    C490: 00 2A 2A 15 00 2A 2A 2A 15 15 15 15 15 3F 15 3F  // .**..***.....?.?
    C4A0: 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F  // ..???..?.???.???
    C4B0: 5C 00 02 01 00 00 00 00 00 00 00 00 00 00 00 00  // \...............
    C4C0: 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00  // ................
    C4D0: C8 00 00 00 00 00 34 21 00 00 B8 0B 00 00 00 00  // ......4!........
    C4E0: 7D 00 00 01 00 00 00 00 00 FF FF 00 00 00 00 00  // }...............
    C4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C500: 00 00 00 00 00 00 00 00 00 00 00 00 0C 00 02 01  // ................
    C510: 00 00 00 00 00 00 00 00 74 00 01 01 10 01 06 12  // ........t.......
    C520: 11 01 16 12 13 01 06 6A 14 01 16 6A 16 01 06 55  // .......j...j...U
    C530: 17 01 16 55 19 01 06 EA 1A 01 16 EA 65 01 16 E9  // ...U........e...
    C540: 66 01 0A E9 21 01 0A 12 22 01 0A 6A 23 01 0A 55  // f...!..."..j#..U
    C550: 24 01 0A EA 45 01 16 EB 46 01 0A EB 75 01 16 EC  // $...E...F...u...
    C560: 76 01 0A EC D2 01 16 70 D4 01 0A 70 D8 01 16 71  // v......p...p...q
    C570: D9 01 0A 71 E2 01 16 72 E4 01 0A 72 E8 01 16 73  // ...q...r...r...s
    C580: E9 01 0A 73 F5 01 16 74 F6 01 0A 74 14 00 02 01  // ...s...t...t....
    C590: 02 00 08 00 80 00 00 02 00 04 00 08 40 00 FF FF  // ............@...
    C5A0: 88 00 01 04 88 06 04 00 13 31 48 00 20 21 00 00  // .........1H. !..
    C5B0: 6C 00 00 00 08 00 00 00 13 32 51 00 1E 22 00 00  // l........2Q.."..
    C5C0: 73 00 00 00 80 00 00 00 13 33 5A 00 1E 21 00 00  // s........3Z..!..
    C5D0: 7A 00 00 00 00 02 00 00 0C 31 63 00 21 22 00 00  // z........1c.!"..
    C5E0: 81 00 00 00 00 04 00 00 01 04 90 00 02 04 01 00  // ................
    C5F0: FF 01 04 91 00 02 04 02 00 FF 01 04 92 00 02 04  // ................
    C600: 03 00 FF 01 04 93 00 02 04 04 00 FF 14 06 0F 00  // ................
    C610: 00 00 FF 14 06 0F 00 00 00 FF 14 06 0F 00 00 00  // ................
    C620: FF 14 06 0F 00 00 00 FF 05 00 01 01 00 00 38 00  // ..............8.
    C630: 04 03 04 00 00 00 24 F4 00 00 10 27 88 13 00 00  // ......$....'....
    C640: 00 00 00 00 00 00 C2 01 4E 0C 01 01 00 00 55 00  // ........N.....U.
    C650: 00 00 10 27 00 00 00 02 05 01 00 06 06 00 00 00  // ...'............
    C660: 00 00 00 00 00 00 F2 01 05 03 0E 00 36 00 46 00  // ............6.F.
    C670: 5A 01 A2 01 30 75 00 00 0C 00 3F 05 3A 40 00 00  // Z...0u....?.:@..
    C680: 40 9C 00 00 0C 00 3F 05 3E 00 00 00 FF FF FF 00  // @.....?.>.......
    C690: 0C 00 3F 05 F3 80 00 00 00 00 00 00 FF FF FF 00  // ..?.............
    C6A0: 0C 00 3F 05 3E 00 00 00 00 00 00 00 48 3F 00 00  // ..?.>.......H?..
    C6B0: 3F 00 44 00 00 16 00 00 00 04 01 1F 00 00 00 04  // ?.D.............
    C6C0: 02 2C 00 00 00 04 03 3E 00 00 00 04 08 1B 50 00  // .,.....>......P.
    C6D0: 00 04 09 25 60 00 00 04 0A 35 90 00 00 04 10 21  // ...%`....5.....!
    C6E0: B0 00 00 04 11 2F F0 00 00 04 18 2A 40 01 00 04  // ...../.....*@...
    C6F0: 78 69 00 00 3F 00 44 00 00 16 00 00 00 04 01 1F  // xi..?.D.........
    C700: 00 00 00 04 02 2C 00 00 00 04 03 3E 00 00 00 04  // .....,.....>....
    C710: 08 1B 50 00 00 04 09 25 60 00 00 04 0A 35 90 00  // ..P....%`....5..
    C720: 00 04 10 21 B0 00 00 04 11 2F F0 00 00 04 18 2A  // ...!...../.....*
    C730: 40 01 00 04 F0 D2 00 00 3F 00 44 00 00 1E 00 00  // @.......?.D.....
    C740: 00 04 01 26 00 00 00 04 02 30 00 00 00 04 03 3E  // ...&.....0.....>
    C750: 00 00 00 04 08 22 40 00 00 04 09 2C 60 00 00 04  // ....."@....,`...
    C760: 0A 37 70 00 00 04 10 27 90 00 00 04 11 32 C0 00  // .7p....'.....2..
    C770: 00 04 18 2E 00 01 00 04 68 3C 01 00 3F 00 44 00  // ........h<..?.D.
    C780: 00 1E 00 00 00 04 01 26 00 00 00 04 02 30 00 00  // .......&.....0..
    C790: 00 04 03 3E 00 00 00 04 08 22 40 00 00 04 09 2C  // ...>....."@....,
    C7A0: 60 00 00 04 0A 37 70 00 00 04 10 27 90 00 00 04  // `....7p....'....
    C7B0: 11 32 C0 00 00 04 18 2E 00 01 00 04 00 00 00 00  // .2..............
    C7C0: 00 01 02 03 02 03 00 01 00 07 05 00 00 01 02 03  // ................
    C7D0: 02 03 00 01 00 07 05 00 00 01 02 03 02 03 00 01  // ................
    C7E0: 00 07 05 00 00 01 02 03 02 03 00 01 00 07 05 00  // ................
    C7F0: 00 01 02 03 02 03 00 01 00 07 05 00 00 01 02 03  // ................
    C800: 02 03 00 01 00 07 05 00 08 30 00 00 9B 00 00 00  // .........0......
    C810: 07 30 00 00 46 25 00 00 08 31 00 00 9B 00 00 00  // .0..F%...1......
    C820: 07 31 00 00 46 25 00 00 08 32 00 00 9B 00 00 00  // .1..F%...2......
    C830: 07 32 00 00 46 25 00 00 08 33 00 00 9B 00 00 00  // .2..F%...3......
    C840: 07 33 00 00 46 25 00 00 56 00 00 00 05 00 00 00  // .3..F%..V.......
    C850: FF FF FF FF 00 00 00 00 58 00 02 05 01 0A 01 00  // ........X.......
    C860: 0C 02 04 02 64 C0 00 00 65 C0 00 00 66 C0 00 00  // ....d...e...f...
    C870: 67 C0 00 00 E8 C0 00 00 A0 21 00 00 42 EC 00 00  // g........!..B...
    C880: 10 27 00 00 0C 04 00 00 00 00 00 00 00 00 00 00  // .'..............
    C890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C8B0: C4 01 02 05 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C8C0: 00 00 00 00 24 50 53 50 2B 48 49 CC 16 00 00 00  // ....$PSP+HI.....
    C8D0: 00 00 00 00 00 00 00 00 40 04 00 00 00 00 03 00  // ........@.......
    C8E0: 00 00 00 00 01 00 00 00 00 60 00 00 00 30 04 00  // .........`...0..
    C8F0: 00 00 00 00 04 00 00 00 00 E0 00 00 00 00 00 00  // ................
    C900: 00 00 00 00 05 00 00 00 00 01 00 00 00 0A 03 00  // ................
    C910: 00 00 00 00 07 00 00 00 40 04 00 00 40 0B 03 00  // ........@...@...
    C920: 00 00 00 00 09 00 00 00 08 00 00 00 CC C9 00 00  // ................
    C930: 00 00 00 00 11 00 00 00 00 10 01 00 00 10 05 00  // ................
    C940: 00 00 00 00 12 00 00 00 00 50 00 00 00 20 06 00  // .........P... ..
    C950: 00 00 00 00 14 00 00 00 00 30 00 00 00 10 03 00  // .........0......
    C960: 00 00 00 00 21 00 00 00 10 00 00 00 00 0B 03 00  // ....!...........
    C970: 00 00 00 00 23 00 00 00 00 50 00 00 00 00 02 00  // ....#....P......
    C980: 00 00 00 00 2D 00 00 00 00 F0 00 00 00 40 03 00  // ....-........@..
    C990: 00 00 00 00 2E 00 00 00 00 80 00 00 00 90 04 00  // ................
    C9A0: 00 00 00 00 35 00 00 00 38 00 00 00 D4 C9 00 00  // ....5...8.......
    C9B0: 00 00 00 00 36 00 00 00 00 40 00 00 00 70 06 00  // ....6....@...p..
    C9C0: 00 00 00 00 37 00 00 00 00 10 00 00 00 B0 06 00  // ....7...........
    C9D0: 00 00 00 00 38 00 00 00 40 04 00 00 00 05 03 00  // ....8...@.......
    C9E0: 00 00 00 00 3A 00 00 00 00 62 00 00 00 C0 06 00  // ....:....b......
    C9F0: 00 00 00 00 3B 00 00 00 00 03 00 00 00 22 07 00  // ....;........"..
    CA00: 00 00 00 00 3D 00 00 00 00 40 00 00 00 25 07 00  // ....=....@...%..
    CA10: 00 00 00 00 03 00 00 00 00 60 00 00 00 65 07 00  // .........`...e..
    CA20: 00 00 00 00 42 00 00 00 00 08 00 00 00 C5 07 00  // ....B...........
    CA30: 00 00 00 00 01 00 00 00 00 00 00 00 04 01 00 00  // ................
    CA40: 00 00 00 00 00 00 00 00 01 01 2C 00 00 C5 40 73  // ..........,...@s
    CA50: 69 00 56 00 69 00 00 00 90 01 00 00 7C 99 05 00  // i.V.i.......|...
    CA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CA70: 00 00 00 00 6C 00 02 01 B5 5D 00 00 00 00 01 00  // ....l....]......
    CA80: B5 5D 00 00 08 08 02 00 B5 5D 00 00 10 10 03 00  // .].......]......
    CA90: B5 5D 00 00 18 14 04 00 B5 5D 00 00 1A 18 05 00  // .].......]......
    CAA0: B5 5D 00 00 1C 1C 06 00 91 5D 00 00 08 08 90 00  // .].......]......
    CAB0: 95 5D 00 00 08 08 91 00 99 5D 00 00 08 08 92 00  // .].......]......
    CAC0: 9D 5D 00 00 08 08 93 00 A1 5D 00 00 08 08 94 00  // .].......]......
    CAD0: A5 5D 00 00 08 08 95 00 A9 5D 00 00 08 08 97 00  // .].......]......
    CAE0: 8A 06 0C 00 01 E2 01 1D 09 00 00 7E 3A 00 00 7D  // ...........~:..}
    CAF0: 00 08 00 00 00 1B 00 00 00 00 00 00 00 00 00 00  // ................
    CB00: 71 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00  // q...............
    CB10: 00 00 0A 00 00 00 6C 07 00 00 F3 04 00 00 3E 04  // ......l.......>.
    CB20: 00 00 F3 04 00 00 F3 04 00 00 6B 03 00 00 F3 04  // ..........k.....
    CB30: 00 00 04 05 00 00 04 05 00 00 2A 03 00 00 00 00  // ..........*.....
    CB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB50: 00 00 00 00 00 00 2C 01 00 00 30 01 00 00 30 01  // ......,...0...0.
    CB60: 00 00 30 01 00 00 30 01 00 00 64 00 00 00 30 01  // ..0...0...d...0.
    CB70: 00 00 34 01 00 00 2C 01 00 00 2C 01 00 00 00 00  // ..4...,...,.....
    CB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB90: 00 00 00 00 00 00 80 00 00 00 0E 00 00 00 1E 00  // ................
    CBA0: 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01  // ................
    CBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CBC0: 00 00 98 08 00 00 98 08 00 00 98 08 00 00 7E 04  // ..............~.
    CBD0: 00 00 98 08 00 00 7E 04 00 00 98 08 00 00 7E 04  // ......~.......~.
    CBE0: 00 00 A2 03 00 00 14 00 00 00 80 0C 00 00 80 0C  // ................
    CBF0: 00 00 64 00 00 00 69 00 00 00 02 00 00 00 01 00  // ..d...i.........
    CC00: 00 00 01 00 00 00 01 00 00 00 01 00 00 00 64 00  // ..............d.
    CC10: 00 00 64 00 00 00 64 00 00 00 64 00 00 00 64 00  // ..d...d...d...d.
    CC20: 00 00 64 00 00 00 64 00 00 00 64 00 00 00 64 00  // ..d...d...d...d.
    CC30: 00 00 64 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..d.............
    CC40: 00 00 20 03 00 00 20 03 00 00 20 03 00 00 BC 02  // .. ... ... .....
    CC50: 00 00 20 03 00 00 BC 02 00 00 20 03 00 00 BC 02  // .. ....... .....
    CC60: 00 00 71 02 00 00 32 00 00 00 20 03 00 00 20 03  // ..q...2... ... .
    CC70: 00 00 19 00 00 00 32 00 00 00 00 00 00 00 00 00  // ......2.........
    CC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 19 00  // ................
    CC90: 00 00 23 00 00 00 19 00 00 00 23 00 00 00 19 00  // ..#.......#.....
    CCA0: 00 00 23 00 00 00 19 00 00 00 23 00 00 00 19 00  // ..#.......#.....
    CCB0: 00 00 23 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..#.............
    CCC0: 00 00 08 00 00 00 FB EF FF A7 23 06 00 00 87 00  // ..........#.....
    CCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 87 00  // ................
    CCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0F 00  // ................
    CCF0: 00 00 82 00 00 00 6E 00 69 00 69 00 73 00 73 00  // ......n.i.i.s.s.
    CD00: 73 00 73 00 00 00 00 00 00 00 00 00 00 00 00 00  // s.s.............
    CD10: 00 00 FC 70 00 00 FF 01 00 00 4B 00 4B 00 00 00  // ...p......K.K...
    CD20: 00 00 00 00 00 00 A5 0A A5 0A F0 0A F0 0A F8 11  // ................
    CD30: 68 10 80 00 00 00 00 00 02 00 00 00 00 00 00 00  // h...............
    CD40: 00 00 0D E0 4D 3E FC DE A6 BD 74 98 27 3F 00 00  // ....M>....t.'?..
    CD50: 02 00 00 00 80 3F 00 00 00 00 0C E5 24 3E 8C DB  // .....?......$>..
    CD60: 08 3E E1 45 07 3F 01 01 04 00 00 00 80 3F 00 00  // .>.E.?.......?..
    CD70: 00 00 0C E5 24 3E 8C DB 08 3E E1 45 07 3F 01 00  // ....$>...>.E.?..
    CD80: 02 00 22 89 92 3F BD 35 B0 3C F7 75 20 BE 27 31  // .."..?.5.<.u .'1
    CD90: 80 3F 1D 38 E7 3D 01 00 02 00 33 1B 64 3F C8 EF  // .?.8.=....3.d?..
    CDA0: 0D 3E 00 00 00 00 4A 7B 03 3F DA AC BA 3E 01 00  // .>....J{.?...>..
    CDB0: 02 00 BA DA 5A 3F 9C E1 46 3E 76 4F AE 3F E8 6A  // ....Z?..F>vO.?.j
    CDC0: 03 C0 31 99 C2 3F 01 00 02 00 7B A0 5D 3F BB 0F  // ..1..?....{.]?..
    CDD0: 00 3E 39 45 C7 3D 78 0B A4 3E 00 00 C0 3E 02 00  // .>9E.=x..>...>..
    CDE0: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CDF0: 00 00 00 00 00 00 02 00 02 00 00 00 00 00 00 00  // ................
    CE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2C 01  // ..............,.
    CE10: 6C 07 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03  // l...............
    CE20: E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 30 01  // ..............0.
    CE30: F3 04 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 30 01  // ..............0.
    CE40: 3E 04 B0 04 B0 04 B0 04 B0 04 B0 04 B0 04 30 01  // >.............0.
    CE50: F3 04 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 64 00  // ..............d.
    CE60: F4 01 71 02 6B 03 30 01 F3 04 E8 03 E8 03 E8 03  // ..q.k.0.........
    CE70: E8 03 E8 03 E8 03 34 01 04 05 E8 03 E8 03 E8 03  // ......4.........
    CE80: E8 03 E8 03 E8 03 2C 01 04 05 E8 03 E8 03 E8 03  // ......,.........
    CE90: E8 03 E8 03 E8 03 2C 01 2A 03 20 03 20 03 20 03  // ......,.*. . . .
    CEA0: 20 03 20 03 20 03 D0 01 D0 01 D0 01 D0 01 D0 01  //  . . ...........
    CEB0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    CEC0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    CED0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    CEE0: D0 01 D0 01 D0 01 6C 07 F3 04 6B 03 3E 04 F3 04  // ......l...k.>...
    CEF0: F3 04 04 05 04 05 2A 03 D0 01 00 03 03 03 30 01  // ......*.......0.
    CF00: FB 01 F0 0A F0 0A 28 0A 48 0D 48 0D 48 0D 88 13  // ......(.H.H.H...
    CF10: 18 15 18 15 18 15 F4 01 F4 01 F4 01 00 00 00 00  // ................
    CF20: D0 01 00 00 01 02 00 00 5B 00 00 08 00 00 00 03  // ........[.......
    CF30: 04 04 51 00 6B 02 00 00 00 00 00 00 00 00 32 00  // ..Q.k.........2.
    CF40: 3C 00 00 00 90 01 90 01 90 01 90 01 90 01 90 01  // <...............
    CF50: 90 01 90 01 90 01 0F 00 B6 03 FC 08 80 0C 56 00  // ..............V.
    CF60: DC 05 01 00 01 02 00 00 00 00 00 00 00 00 00 00  // ................
    CF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF90: 00 00 00 00 00 00 EC 4C A1 3C 6E C0 E7 3C 81 78  // .......L.<n..<.x
    CFA0: 5D 3D 73 63 7A 3D 58 39 34 BC 13 61 C3 3C 00 00  // ]=scz=X94..a.<..
    CFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CFD0: 00 00 00 00 00 00 0C 01 0C 01 01 01 00 00 00 00  // ................
    CFE0: 00 00 0C 01 0C 01 00 02 00 00 00 00 00 00 00 00  // ................
    CFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D010: 00 00 00 00 00 00 00 00 00 00 01 00 00 00 1E 00  // ................
    D020: 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // F...............
    D030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 CB 00  // ................
    D050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D060: 00 00 19 00 19 00 B6 06 00 00 C9 06 00 00 35 07  // ..............5.
    D070: 00 00 B6 06 00 00 C9 06 00 00 35 07 00 00 00 00  // ..........5.....
    D080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D160: 00 00 00 00 00 00 00 00 00 00 C8 00 04 05 00 00  // ................
    D170: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    D180: 00 00 00 01 02 00 00 00 00 00 00 00 00 00 00 02  // ................
    D190: 03 01 00 00 00 00 00 00 00 00 00 03 04 01 00 00  // ................
    D1A0: 00 00 00 00 00 00 00 04 05 04 00 00 00 00 00 00  // ................
    D1B0: 00 00 00 05 06 04 00 00 00 00 00 00 00 00 00 06  // ................
    D1C0: 07 04 00 00 00 00 00 00 00 00 00 07 00 00 E7 18  // ................
    D1D0: E7 18 00 02 01 03 00 00 00 00 FA 00 00 00 31 00  // ..............1.
    D1E0: 00 00 13 00 00 00 15 00 00 00 FF 00 05 00 05 00  // ................
    D1F0: FF 00 FF FF FF 00 01 20 1F 00 01 20 1F 00 01 14  // ....... ... ....
    D200: 21 00 00 00 00 00 90 01 00 00 00 80 01 00 00 00  // !...............
    D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D230: 00 00 6C 00 03 03 00 00 02 11 30 75 00 00 CC 55  // ..l.......0u...U
    D240: 01 00 01 00 00 00 39 2C 00 00 4C 00 00 00 20 03  // ......9,..L... .
    D250: 52 03 46 05 BC 02 00 00 00 00 80 00 00 00 00 00  // R.F.............
    D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D270: 00 00 DC 05 00 00 84 03 84 03 46 05 84 03 00 00  // ..........F.....
    D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8 09  // ................
    D2A0: 02 04 4C 00 58 00 40 06 20 07 2C 09 00 00 00 00  // ..L.X.@. .,.....
    D2B0: 00 00 01 00 08 04 00 20 00 00 FF 00 00 00 00 00  // ....... ........
    D2C0: 00 00 00 00 00 00 00 00 00 00 34 00 00 70 08 04  // ..........4..p..
    D2D0: 72 00 0F 08 00 00 00 04 0D 00 C0 00 00 00 4D 54  // r.............MT
    D2E0: 36 31 4B 35 31 32 4D 33 32 00 00 00 00 00 FF FF  // 61K512M32.......
    D2F0: FF 00 00 00 00 00 1C 00 00 00 51 4C 01 00 5F 4C  // ..........QL.._L
    D300: 01 00 5E 4C 01 00 60 4C 01 00 61 4C 01 00 81 40  // ..^L..`L..aL...@
    D310: 01 00 82 40 01 00 83 40 01 00 84 40 01 00 85 40  // ...@...@...@...@
    D320: 01 00 86 40 01 00 87 40 01 00 88 40 01 00 89 40  // ...@...@...@...@
    D330: 01 00 8A 40 01 00 8C 40 01 00 8D 40 01 00 8E 40  // ...@...@...@...@
    D340: 01 00 90 40 01 00 91 40 01 00 94 40 01 00 95 40  // ...@...@...@...@
    D350: 01 00 96 40 01 00 97 40 01 00 A3 40 01 00 A4 40  // ...@...@...@...@
    D360: 01 00 98 40 01 00 A1 40 01 00 D4 30 00 00 00 01  // ...@...@...0....
    D370: 00 00 25 00 00 00 00 00 00 00 3A 09 00 00 40 00  // ..%.......:...@.
    D380: 00 00 09 04 03 01 06 00 02 00 02 02 00 02 08 00  // ................
    D390: 00 00 05 03 03 00 04 00 00 00 21 04 05 00 00 00  // ..........!.....
    D3A0: 01 01 01 00 01 01 00 11 18 00 EE 00 00 00 0A 0A  // ................
    D3B0: 00 00 0F 00 00 00 0F 00 00 00 8A 20 16 02 08 00  // ........... ....
    D3C0: 00 00 0A 00 04 0A 08 03 00 01 1F 2A 0C 00 0E 00  // ...........*....
    D3D0: 00 00 C2 F0 13 0F 0E 00 00 00 00 00 00 00 20 4E  // .............. N
    D3E0: 00 00 40 01 00 00 25 00 00 00 00 00 00 00 3A 09  // ..@...%.......:.
    D3F0: 00 00 40 00 00 00 09 05 05 01 09 00 04 00 02 02  // ..@.............
    D400: 00 02 08 00 00 00 05 03 03 00 04 00 00 00 21 04  // ..............!.
    D410: 05 00 00 00 01 01 01 00 01 01 00 11 18 00 7C 01  // ..............|.
    D420: 00 00 0A 0A 00 00 18 00 00 00 18 00 00 00 8A 20  // ............... 
    D430: 1E 02 0A 00 00 00 0A 00 04 0A 08 03 00 01 1F 2A  // ...............*
    D440: 0C 00 16 00 00 00 C2 F0 13 0F 16 00 00 00 00 00  // ................
    D450: 00 00 50 C3 00 00 40 03 00 00 2D 04 00 00 00 00  // ..P...@...-.....
    D460: 00 00 3A 09 00 00 40 00 00 00 0A 0D 09 03 15 00  // ..:...@.........
    D470: 08 00 02 02 00 02 08 00 00 00 05 04 04 00 08 00  // ................
    D480: 00 00 21 06 05 00 00 00 01 01 01 00 01 01 00 12  // ..!.............
    D490: 18 00 B6 03 00 00 0A 0A 00 00 3C 00 00 00 3C 00  // ..........<...<.
    D4A0: 00 00 8A 20 2E 02 19 00 00 00 0A 00 04 0A 09 03  // ... ............
    D4B0: 00 01 1F 2A 0C 00 37 00 00 00 82 F1 13 0F 37 00  // ...*..7.......7.
    D4C0: 00 00 00 00 00 00 F8 24 01 00 C0 04 00 00 45 08  // .......$......E.
    D4D0: 00 00 00 00 00 00 3A 09 00 00 40 00 00 00 0D 13  // ......:...@.....
    D4E0: 0D 07 1F 00 0C 00 04 04 00 02 08 00 00 00 05 05  // ................
    D4F0: 05 00 0C 00 00 00 21 08 05 00 00 00 01 01 01 00  // ......!.........
    D500: 01 01 00 15 18 00 91 05 00 00 0A 0A 00 00 5A 00  // ..............Z.
    D510: 00 00 5A 00 00 00 8A 20 3E 02 26 00 00 00 0A 00  // ..Z.... >.&.....
    D520: 04 0A 0C 03 00 01 1F 2A 0C 00 53 00 00 00 42 F2  // .......*..S...B.
    D530: 13 0F 53 00 00 00 00 00 00 00 CC 55 01 00 80 05  // ..S........U....
    D540: 00 00 4D 0A 00 00 00 00 00 00 3A 09 00 00 40 00  // ..M.......:...@.
    D550: 00 00 0E 16 0F 09 24 00 0E 00 04 04 00 02 08 00  // ......$.........
    D560: 00 00 05 06 06 00 0E 00 00 00 21 08 05 00 00 00  // ..........!.....
    D570: 01 01 01 00 01 01 00 16 18 00 7F 06 00 00 0A 0A  // ................
    D580: 00 00 69 00 00 00 69 00 00 00 8A 20 46 02 2C 00  // ..i...i.... F.,.
    D590: 00 00 0A 00 04 0A 0D 03 00 01 1F 2A 0C 00 61 00  // ...........*..a.
    D5A0: 00 00 82 F2 13 0F 61 00 00 00 00 00 00 00 A0 86  // ......a.........
    D5B0: 01 00 40 06 00 00 5D 0C 00 00 00 00 00 00 4A 09  // ..@...].......J.
    D5C0: 00 00 40 00 00 00 10 19 11 0B 28 00 0F 00 04 04  // ..@.......(.....
    D5D0: 00 02 0C 00 00 00 05 06 06 00 10 00 00 00 21 8A  // ..............!.
    D5E0: 05 00 00 00 01 01 01 00 01 01 00 18 18 00 6C 07  // ..............l.
    D5F0: 00 00 0A 0A 00 00 78 00 00 00 78 00 00 00 8A 20  // ......x...x.... 
    D600: 4C 02 32 00 00 00 0A 00 04 0A 0F 03 00 01 1F 2A  // L.2............*
    D610: 0C 00 6E 00 00 00 C2 F2 13 0F 6E 00 00 00 00 00  // ..n.......n.....
    D620: 00 00 48 E8 01 00 00 08 00 00 6D 00 00 00 00 00  // ..H.......m.....
    D630: 00 00 5A 09 00 00 40 02 00 00 12 20 15 0F 33 00  // ..Z...@.... ..3.
    D640: 13 00 06 06 00 02 0C 00 00 00 05 07 07 00 14 00  // ................
    D650: 00 00 21 0C 06 00 00 00 01 01 01 00 01 01 00 1A  // ..!.............
    D660: 18 00 47 09 00 00 0A 0A 00 00 96 00 00 00 96 00  // ..G.............
    D670: 00 00 8A 20 5C 02 3F 00 00 00 0A 00 04 0A 11 03  // ... \.?.........
    D680: 00 01 1F 2A 0C 00 8A 00 00 00 82 F3 13 0F 8A 00  // ...*............
    D690: 00 00 00 00 00 00 F0 49 02 00 80 09 00 00 7D 04  // .......I......}.
    D6A0: 00 00 00 00 00 00 6A 09 00 00 40 02 00 00 14 26  // ......j...@....&
    D6B0: 19 13 3D 00 17 00 06 06 00 02 10 00 00 00 05 08  // ..=.............
    D6C0: 08 00 18 00 00 00 21 8E 06 00 00 00 01 01 01 00  // ......!.........
    D6D0: 01 01 00 1C 18 00 22 0B 00 00 0A 0A 00 00 B4 00  // ......".........
    D6E0: 00 00 B4 00 00 00 8A 20 6C 02 4B 00 00 00 0A 00  // ....... l.K.....
    D6F0: 04 0A 13 03 00 01 1F 2A 0C 00 A5 00 00 00 02 F4  // .......*........
    D700: 13 0F A5 00 00 00 00 00 00 00 98 AB 02 00 00 0B  // ................
    D710: 00 00 15 08 00 00 00 00 00 00 FA 09 00 00 40 03  // ..............@.
    D720: 00 00 17 2C 1D 17 47 00 1B 00 08 08 00 02 10 00  // ...,..G.........
    D730: 00 00 05 09 09 00 1C 00 00 00 31 10 07 00 00 00  // ..........1.....
    D740: 01 01 01 00 01 01 00 1F 18 00 FD 0C 00 00 0A 0A  // ................
    D750: 00 00 D2 00 00 00 D2 00 00 00 8A 20 7C 02 58 00  // ........... |.X.
    D760: 00 00 0A 00 04 0A 16 03 00 01 1F 2A 0C 00 C1 00  // ...........*....
    D770: 00 00 C2 F4 13 0F C1 00 00 00 00 00 00 00 20 BF  // .............. .
    D780: 02 00 00 0B 00 00 15 08 00 00 00 00 00 00 FA 09  // ................
    D790: 00 00 40 03 00 00 17 2C 1D 17 47 00 1B 00 08 08  // ..@....,..G.....
    D7A0: 00 02 10 00 00 00 05 09 09 00 1C 00 00 00 31 10  // ..............1.
    D7B0: 07 00 00 00 01 01 01 00 01 01 00 1F 18 00 5C 0D  // ..............\.
    D7C0: 00 00 0A 0A 00 00 D2 00 00 00 D2 00 00 00 8A 20  // ............... 
    D7D0: 7C 02 58 00 00 00 0A 00 04 0A 16 03 00 01 1F 2A  // |.X............*
    D7E0: 0C 00 C1 00 00 00 C2 F4 13 0F C1 00 00 00 00 00  // ................
    D7F0: 00 00 6C DC 02 00 C0 0B 00 00 1D 0A 00 00 00 00  // ..l.............
    D800: 00 00 FA 09 00 00 40 03 00 00 18 2F 1F 19 4C 00  // ......@..../..L.
    D810: 1D 00 08 08 00 02 14 00 00 00 05 0A 0A 00 1E 00  // ................
    D820: 00 00 31 12 07 00 00 00 01 01 01 00 01 01 00 20  // ..1............ 
    D830: 18 00 EB 0D 00 00 0A 0A 00 00 E1 00 00 00 E1 00  // ................
    D840: 00 00 8A 20 84 02 5E 00 00 00 0A 00 04 0A 17 03  // ... ..^.........
    D850: 00 01 1F 2A 0C 00 CF 00 00 00 02 F5 13 0F CF 00  // ...*............
    D860: 00 00 00 00 00 00 40 0D 03 00 80 0C 00 00 1D 0C  // ......@.........
    D870: 00 00 00 00 00 00 FA 09 00 00 40 03 00 00 18 32  // ..........@....2
    D880: 21 1B 50 00 1E 00 08 08 00 02 14 00 00 00 05 0A  // !.P.............
    D890: 0A 00 20 00 00 00 31 12 07 00 00 00 01 01 01 00  // .. ...1.........
    D8A0: 01 01 00 20 18 00 D8 0E 00 00 0A 0A 00 00 F0 00  // ... ............
    D8B0: 00 00 F0 00 00 00 8A 20 8A 02 64 00 00 00 0A 00  // ....... ..d.....
    D8C0: 04 0A 17 03 00 01 1F 2A 0C 00 DC 00 00 00 42 F5  // .......*......B.
    D8D0: 13 0F DC 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    D8E0: 00 00 55 4C 01 00 7C FE 00 01 80 FE 00 01 84 FE  // ..UL..|.........
    D8F0: 00 01 88 FE 00 01 A0 FE 00 01 A4 FE 00 01 09 1C  // ................
    D900: 00 03 C9 1A 00 03 09 1B 00 03 FF FF FF 00 00 28  // ...............(
    D910: 00 00 A8 49 88 60 00 00 04 C0 80 02 00 00 00 00  // ...I.`..........
    D920: 04 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00 00 80 00  // ................
    D930: 00 00 80 00 00 00 FF FF FF 01 00 28 00 00 A8 49  // ...........(...I
    D940: 88 60 00 00 04 C0 80 02 00 00 00 00 04 01 C0 C0  // .`..............
    D950: C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00  // ................
    D960: 00 00 FF FF FF 02 00 28 00 00 A8 49 88 60 00 00  // .......(...I.`..
    D970: 04 C0 80 02 00 00 00 00 04 01 C0 C0 C0 C0 C0 C0  // ................
    D980: C0 C0 D0 00 00 00 80 00 00 00 90 00 00 00 FF FF  // ................
    D990: FF 03 00 28 00 00 A8 49 88 60 00 00 04 C0 80 02  // ...(...I.`......
    D9A0: 00 00 00 00 04 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00  // ................
    D9B0: 00 00 80 00 00 00 80 00 00 00 00 00 00 00 40 00  // ..............@.
    D9C0: 00 00 4F 4C 01 00 50 4C 01 00 51 4C 01 00 52 4C  // ..OL..PL..QL..RL
    D9D0: 01 00 53 4C 01 00 54 4C 01 00 56 4C 01 00 57 4C  // ..SL..TL..VL..WL
    D9E0: 01 00 58 4C 01 00 5E 4C 01 00 60 4C 01 00 00 FE  // ..XL..^L..`L....
    D9F0: 00 01 04 FE 00 01 08 FE 00 01 0C FE 00 01 10 FE  // ................
    DA00: 00 01 14 FE 00 01 18 FE 00 01 1C FE 00 01 20 FE  // .............. .
    DA10: 00 01 24 FE 00 01 28 FE 00 01 2C FE 00 01 30 FE  // ..$...(...,...0.
    DA20: 00 01 34 FE 00 01 38 FE 00 01 3C FE 00 01 40 FE  // ..4...8...<...@.
    DA30: 00 01 44 FE 00 01 48 FE 00 01 4C FE 00 01 50 FE  // ..D...H...L...P.
    DA40: 00 01 54 FE 00 01 58 FE 00 01 78 FE 00 01 8C FE  // ..T...X...x.....
    DA50: 00 01 90 FE 00 01 98 FE 00 01 9C FE 00 01 A8 FE  // ................
    DA60: 00 01 B4 FE 00 01 B8 FE 00 01 BC FE 00 01 84 FF  // ................
    DA70: 00 01 88 FF 00 01 8C FF 00 01 90 FF 00 01 94 FF  // ................
    DA80: 00 01 98 FF 00 01 9C FF 00 01 A0 FF 00 01 A4 FF  // ................
    DA90: 00 01 A8 FF 00 01 AC FF 00 01 EC FF 00 01 F0 FF  // ................
    DAA0: 00 01 F4 FF 00 01 F8 FF 00 01 02 1D 00 03 03 1D  // ................
    DAB0: 00 03 8C 1C 00 03 A1 04 00 05 18 04 00 05 55 02  // ..............U.
    DAC0: 00 05 FF FF FF 00 1A A7 20 00 B5 00 DB 00 00 00  // ........ .......
    DAD0: 2A 00 00 00 0A 0A 00 04 00 00 F4 25 E5 0F 00 00  // *..........%....
    DAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DAF0: 00 00 0E 00 85 F0 00 00 81 04 00 00 81 05 00 00  // ................
    DB00: 00 00 9C 0C 04 08 48 04 48 04 00 00 08 00 00 00  // ......H.H.......
    DB10: 08 00 17 10 00 00 0F 30 00 00 22 0A 4C 56 50 05  // .......0..".LVP.
    DB20: 01 00 08 0F DE 00 20 40 04 00 10 42 00 00 00 00  // ...... @...B....
    DB30: 00 00 00 00 00 00 00 00 00 00 38 38 30 49 0A 0A  // ..........880I..
    DB40: 10 6B AA 00 00 1B 2A 8F 48 00 4B 49 48 20 C0 E0  // .k....*.H.KIH ..
    DB50: 38 86 00 02 18 00 03 00 00 00 00 14 2F 2F 22 22  // 8...........//""
    DB60: 2B 2B 00 40 00 00 00 00 00 00 00 00 00 00 00 00  // ++.@............
    DB70: 00 00 1C 03 8E 03 AA 02 8E 03 E3 00 AA 02 E3 00  // ................
    DB80: 71 00 E3 00 71 00 55 01 71 00 1C 03 55 01 1C 03  // q...q.U.q...U...
    DB90: 8E 03 CF 00 30 FF FF 0C 00 F3 00 80 01 90 00 08  // ....0...........
    DBA0: 80 01 05 00 00 00 0E 10 00 40 3F FF 3F 0F 2B 00  // .........@?.?.+.
    DBB0: 00 00 22 00 00 00 10 00 00 00 12 00 00 00 00 00  // ..".............
    DBC0: 00 00 14 00 00 00 00 00 00 00 18 00 00 00 24 40  // ..............$@
    DBD0: 01 00 25 40 01 00 26 40 01 00 24 48 01 00 25 48  // ..%@..&@..$H..%H
    DBE0: 01 00 26 48 01 00 24 40 05 00 25 40 05 00 26 40  // ..&H..$@..%@..&@
    DBF0: 05 00 24 48 05 00 25 48 05 00 26 48 05 00 24 40  // ..$H..%H..&H..$@
    DC00: 09 00 25 40 09 00 26 40 09 00 24 48 09 00 25 48  // ..%@..&@..$H..%H
    DC10: 09 00 26 48 09 00 24 40 0D 00 25 40 0D 00 26 40  // ..&H..$@..%@..&@
    DC20: 0D 00 24 48 0D 00 25 48 0D 00 26 48 0D 00 FF FF  // ..$H..%H..&H....
    DC30: FF 00 10 00 00 00 67 54 13 02 20 31 45 76 10 00  // ......gT.. 1Ev..
    DC40: 00 00 10 23 75 46 64 57 32 01 10 00 00 00 10 23  // ...#uFdW2......#
    DC50: 75 46 64 57 32 01 10 00 00 00 67 54 13 02 20 31  // uFdW2.....gT.. 1
    DC60: 45 76 01 00 00 00 10 23 75 46 64 57 32 01 01 00  // Ev.....#uFdW2...
    DC70: 00 00 67 54 13 02 20 31 45 76 01 00 00 00 67 54  // ..gT.. 1Ev....gT
    DC80: 13 02 20 31 45 76 01 00 00 00 10 23 75 46 64 57  // .. 1Ev.....#uFdW
    DC90: 32 01 00 00 00 00 50 00 03 03 00 00 00 00 00 10  // 2.....P.........
    DCA0: 05 00 00 02 01 00 00 00 00 00 7D 00 E4 0C 00 08  // ..........}.....
    DCB0: 70 00 10 27 00 00 CC 55 01 00 24 F4 00 00 50 C3  // p..'...U..$...P.
    DCC0: 00 00 10 27 00 00 00 00 00 00 6B 00 00 00 80 00  // ...'......k.....
    DCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DCE0: 00 00 00 00 00 00 84 00 04 02 05 03 1A 00 1A 06  // ................
    DCF0: 60 00 00 00 00 00 43 00 20 00 44 00 1A 00 45 00  // `.....C. .D...E.
    DD00: 2C 00 FF 00 05 07 0C 00 0E 00 00 00 00 00 00 00  // ,...............
    DD10: 01 03 1A 00 1A 06 60 00 00 00 00 00 43 00 20 00  // ......`.....C. .
    DD20: 44 00 1A 00 45 00 2C 00 FF 00 01 07 0C 00 0E 00  // D...E.,.........
    DD30: 02 02 00 00 00 00 04 03 0E 00 10 06 44 00 00 00  // ............D...
    DD40: 00 00 FF 00 04 07 0C 00 0E 00 00 03 00 00 00 00  // ................
    DD50: 02 03 0E 00 10 06 44 00 00 00 00 00 FF 00 02 07  // ......D.........
    DD60: 0C 00 0E 00 00 01 00 00 00 00 14 00 02 02 00 00  // ................
    DD70: 00 00 00 00 00 00 00 00 10 00 00 00 00 00 20 00  // .............. .
    DD80: 02 01 14 00 1A 00 00 00 00 00 08 00 00 00 04 00  // ................
    DD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F4 00  // ................
    DDA0: 03 04 01 0B 00 00 D0 07 4E 0C 00 00 4E 0C 10 27  // ........N...N..'
    DDB0: 00 00 FF 00 05 00 FF 00 00 01 FF 00 00 00 60 CC  // ..............`.
    DDC0: 05 00 70 C6 00 00 18 73 01 00 70 C6 00 00 B0 CC  // ..p....s..p.....
    DDD0: 00 00 CC F1 00 00 0E D4 00 00 A4 00 00 00 E8 DF  // ................
    DDE0: 05 00 20 30 05 00 00 00 00 00 00 00 00 00 02 00  // .. 0............
    DDF0: 00 00 00 00 F0 00 70 11 01 00 D0 84 00 00 00 00  // ......p.........
    DE00: 00 00 33 33 81 01 7D 1A 09 96 30 14 C9 02 60 00  // ..33..}...0...`.
    DE10: 60 00 47 88 73 00 00 00 00 00 00 00 00 00 00 00  // `.G.s...........
    DE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DE90: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DEA0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DEB0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DEC0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DED0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DEE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DEF0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF00: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF10: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF20: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF30: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF40: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF50: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF60: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF70: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF80: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DF90: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFA0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFB0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFC0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFD0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    DFF0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E000: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E010: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E020: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E030: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E040: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E050: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    E060: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    E070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E080: 00 00 00 00                                      // ....


WPBT
----
[000h 0000   4]                    Signature : "WPBT"    [Windows Platform Binary Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 49
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "ASUS"
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   4]                 Handoff Size : 000DC0D0
[028h 0040   8]              Handoff Address : 00000000CAA23000
[030h 0048   1]                       Layout : 01
[031h 0049   1]                         Type : 01
[032h 0050   2]             Arguments Length : 0000

Raw Table Data: Length 60 (0x3C)

    0000: 57 50 42 54 3C 00 00 00 01 49 41 4C 41 53 4B 41  // WPBT<....IALASKA
    0010: 41 20 4D 20 49 00 00 00 01 00 00 00 41 53 55 53  // A M I.......ASUS
    0020: 01 00 00 00 D0 C0 0D 00 00 30 A2 CA 00 00 00 00  // .........0......
    0030: 01 01 00 00 00 00 00 00 00 00 00 00              // ............


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 65
[00Ah 0010   6]                       Oem ID : "ALASKA"
[010h 0016   8]                 Oem Table ID : "A M I "
[018h 0024   4]                 Oem Revision : 01072009
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 65 41 4C 41 53 4B 41  // WSMT(....eALASKA
    0010: 41 20 4D 20 49 20 00 00 09 20 07 01 41 4D 49 20  // A M I ... ..AMI 
    0020: 13 00 01 00 07 00 00 00                          // ........


