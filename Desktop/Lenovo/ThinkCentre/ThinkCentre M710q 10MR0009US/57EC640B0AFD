
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20220331
Copyright (c) 2000 - 2022 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  LUFT  0x000349E2  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 02)  SSDT  0x00000C59  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 03)  MCFG  0x0000003C  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x00000097
 04)  ASF!  0x000000A0  0x20  "LENOVO"  "TC-M1A  "  0x00001180  "TFSM"   0x000F4240
 05)  APIC  0x00000084  0x03  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 06)  SLIC  0x00000176  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 07)  SSDT  0x00003159  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 08)  TPM2  0x00000034  0x03  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00000000
 09)  UEFI  0x00000042  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "    "   0x01000013
 10)  DSDT  0x0002E1EC  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 11)  SSDT  0x00003002  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 12)  WSMT  0x00000028  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x0000005F
 13)  LPIT  0x00000094  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x0000005F
 14)  SSDT  0x00000EDE  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 15)  DBG2  0x00000054  0x00  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x0000005F
 16)  SSDT  0x000026E8  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 17)  DMAR  0x000000A8  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x00000001
 18)  FACP  0x00000114  0x06  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 19)  FPDT  0x00000044  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 20)  SSDT  0x000003BC  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 21)  MSDM  0x00000055  0x03  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 22)  SSDT  0x00000630  0x02  "PmRef "  "Cpu0Ist "  0x00003000  "INTL"   0x20160422
 23)  DBGP  0x00000034  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x0000005F
 24)  HPET  0x00000038  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "MSFT"   0x0000005F
 25)  SSDT  0x0000029F  0x02  "LENOVO"  "TC-M1A  "  0x00001180  "INTL"   0x20160422
 26)  FIDT  0x0000009C  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 27)  FACS  0x00000040  0x02
 28)  BGRT  0x00000038  0x01  "LENOVO"  "TC-M1A  "  0x00001180  "AMI "   0x00010013
 29)  SSDT  0x000003FF  0x02  "PmRef "  "Cpu0Cst "  0x00003001  "INTL"   0x20160422
 30)  SSDT  0x0000018A  0x02  "PmRef "  "ApCst   "  0x00003000  "INTL"   0x20160422
 31)  SSDT  0x0000065C  0x02  "PmRef "  "ApIst   "  0x00003000  "INTL"   0x20160422
 32)  SSDT  0x00000197  0x02  "PmRef "  "ApHwp   "  0x00003000  "INTL"   0x20160422

Found 32 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000084
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : C1
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 01
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 04 [Local APIC NMI]
[035h 0053   1]                       Length : 06
[036h 0054   1]                 Processor ID : 01
[037h 0055   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[039h 0057   1]         Interrupt Input LINT : 01

[03Ah 0058   1]                Subtable Type : 00 [Processor Local APIC]
[03Bh 0059   1]                       Length : 08
[03Ch 0060   1]                 Processor ID : 02
[03Dh 0061   1]                Local Apic ID : 02
[03Eh 0062   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[042h 0066   1]                Subtable Type : 04 [Local APIC NMI]
[043h 0067   1]                       Length : 06
[044h 0068   1]                 Processor ID : 02
[045h 0069   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[047h 0071   1]         Interrupt Input LINT : 01

[048h 0072   1]                Subtable Type : 00 [Processor Local APIC]
[049h 0073   1]                       Length : 08
[04Ah 0074   1]                 Processor ID : 03
[04Bh 0075   1]                Local Apic ID : 04
[04Ch 0076   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[050h 0080   1]                Subtable Type : 04 [Local APIC NMI]
[051h 0081   1]                       Length : 06
[052h 0082   1]                 Processor ID : 03
[053h 0083   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[055h 0085   1]         Interrupt Input LINT : 01

[056h 0086   1]                Subtable Type : 00 [Processor Local APIC]
[057h 0087   1]                       Length : 08
[058h 0088   1]                 Processor ID : 04
[059h 0089   1]                Local Apic ID : 06
[05Ah 0090   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Eh 0094   1]                Subtable Type : 04 [Local APIC NMI]
[05Fh 0095   1]                       Length : 06
[060h 0096   1]                 Processor ID : 04
[061h 0097   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[063h 0099   1]         Interrupt Input LINT : 01

[064h 0100   1]                Subtable Type : 01 [I/O APIC]
[065h 0101   1]                       Length : 0C
[066h 0102   1]                  I/O Apic ID : 02
[067h 0103   1]                     Reserved : 00
[068h 0104   4]                      Address : FEC00000
[06Ch 0108   4]                    Interrupt : 00000000

[070h 0112   1]                Subtable Type : 02 [Interrupt Source Override]
[071h 0113   1]                       Length : 0A
[072h 0114   1]                          Bus : 00
[073h 0115   1]                       Source : 00
[074h 0116   4]                    Interrupt : 00000002
[078h 0120   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[07Ah 0122   1]                Subtable Type : 02 [Interrupt Source Override]
[07Bh 0123   1]                       Length : 0A
[07Ch 0124   1]                          Bus : 00
[07Dh 0125   1]                       Source : 09
[07Eh 0126   4]                    Interrupt : 00000009
[082h 0130   2]        Flags (decoded below) : 000D
                                    Polarity : 1
                                Trigger Mode : 3

Raw Table Data: Length 132 (0x84)

    0000: 41 50 49 43 84 00 00 00 03 C1 4C 45 4E 4F 56 4F  // APIC......LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 00 00 E0 FE 01 00 00 00 00 08 01 00  // ................
    0030: 01 00 00 00 04 06 01 05 00 01 00 08 02 02 01 00  // ................
    0040: 00 00 04 06 02 05 00 01 00 08 03 04 01 00 00 00  // ................
    0050: 04 06 03 05 00 01 00 08 04 06 01 00 00 00 04 06  // ................
    0060: 04 05 00 01 01 0C 02 00 00 00 C0 FE 00 00 00 00  // ................
    0070: 02 0A 00 00 02 00 00 00 00 00 02 0A 00 09 09 00  // ................
    0080: 00 00 0D 00                                      // ....


ASF!
----
[000h 0000   4]                    Signature : "ASF!"    [Alert Standard Format Table]
[004h 0004   4]                 Table Length : 000000A0
[008h 0008   1]                     Revision : 20
[009h 0009   1]                     Checksum : C6
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "TFSM"
[020h 0032   4]        Asl Compiler Revision : 000F4240

[024h 0036   1]                Subtable Type : 00 [ASF Information]
[025h 0037   1]                     Reserved : 00
[026h 0038   2]                       Length : 0010
[028h 0040   1]          Minimum Reset Value : FF
[029h 0041   1]     Minimum Polling Interval : FF
[02Ah 0042   2]                    System ID : 17AA
[02Ch 0044   4]              Manufacturer ID : 57010000
[030h 0048   1]                        Flags : 00
[031h 0049   3]                     Reserved : 000000

[034h 0052   1]                Subtable Type : 01 [ASF Alerts]
[035h 0053   1]                     Reserved : 00
[036h 0054   2]                       Length : 002C
[038h 0056   1]                   AssertMask : 00
[039h 0057   1]                 DeassertMask : 00
[03Ah 0058   1]                  Alert Count : 03
[03Bh 0059   1]            Alert Data Length : 0C

[03Ch 0060   1]                      Address : 89
[03Dh 0061   1]                      Command : 04
[03Eh 0062   1]                         Mask : 01
[03Fh 0063   1]                        Value : 01
[040h 0064   1]                   SensorType : 05
[041h 0065   1]                         Type : 6F
[042h 0066   1]                       Offset : 00
[043h 0067   1]                   SourceType : 68
[044h 0068   1]                     Severity : 08
[045h 0069   1]                 SensorNumber : 88
[046h 0070   1]                       Entity : 17
[047h 0071   1]                     Instance : 00

[048h 0072   1]                      Address : 89
[049h 0073   1]                      Command : 04
[04Ah 0074   1]                         Mask : 04
[04Bh 0075   1]                        Value : 04
[04Ch 0076   1]                   SensorType : 07
[04Dh 0077   1]                         Type : 6F
[04Eh 0078   1]                       Offset : 00
[04Fh 0079   1]                   SourceType : 68
[050h 0080   1]                     Severity : 20
[051h 0081   1]                 SensorNumber : 88
[052h 0082   1]                       Entity : 03
[053h 0083   1]                     Instance : 00

[054h 0084   1]                      Address : 89
[055h 0085   1]                      Command : 05
[056h 0086   1]                         Mask : 01
[057h 0087   1]                        Value : 01
[058h 0088   1]                   SensorType : 19
[059h 0089   1]                         Type : 6F
[05Ah 0090   1]                       Offset : 00
[05Bh 0091   1]                   SourceType : 68
[05Ch 0092   1]                     Severity : 20
[05Dh 0093   1]                 SensorNumber : 88
[05Eh 0094   1]                       Entity : 22
[05Fh 0095   1]                     Instance : 00

[060h 0096   1]                Subtable Type : 02 [ASF Remote Control]
[061h 0097   1]                     Reserved : 00
[062h 0098   2]                       Length : 0018
[064h 0100   1]                Control Count : 04
[065h 0101   1]          Control Data Length : 04
[066h 0102   2]                     Reserved : 0000

[068h 0104   1]                     Function : 00
[069h 0105   1]                      Address : 88
[06Ah 0106   1]                      Command : 00
[06Bh 0107   1]                        Value : 03

[06Ch 0108   1]                     Function : 01
[06Dh 0109   1]                      Address : 88
[06Eh 0110   1]                      Command : 00
[06Fh 0111   1]                        Value : 02

[070h 0112   1]                     Function : 02
[071h 0113   1]                      Address : 88
[072h 0114   1]                      Command : 00
[073h 0115   1]                        Value : 01

[074h 0116   1]                     Function : 03
[075h 0117   1]                      Address : 88
[076h 0118   1]                      Command : 00
[077h 0119   1]                        Value : 04

[078h 0120   1]                Subtable Type : 03 [ASF RMCP Boot Options]
[079h 0121   1]                     Reserved : 00
[07Ah 0122   2]                       Length : 0017
[07Ch 0124   7]                 Capabilities : 20 18 00 00 00 13 F0
[083h 0131   1]              Completion Code : 00
[084h 0132   4]                Enterprise ID : 57010000
[088h 0136   1]                      Command : 00
[089h 0137   2]                    Parameter : 0000
[08Bh 0139   2]                 Boot Options : 0100
[08Dh 0141   2]               Oem Parameters : 0000

[08Fh 0143   1]                Subtable Type : 84 [ASF Address]
[090h 0144   1]                     Reserved : 00
[091h 0145   2]                       Length : 0011
[093h 0147   1]                Eprom Address : 00
[094h 0148   1]                 Device Count : 0B
[095h 0149   1]                    Addresses : 5C 68 88 C2 D2 DC A0 A2 A4 A6 C8 


Raw Table Data: Length 160 (0xA0)

    0000: 41 53 46 21 A0 00 00 00 20 C6 4C 45 4E 4F 56 4F  // ASF!.... .LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 54 46 53 4D  // TC-M1A  ....TFSM
    0020: 40 42 0F 00 00 00 10 00 FF FF AA 17 00 00 01 57  // @B.............W
    0030: 00 00 00 00 01 00 2C 00 00 00 03 0C 89 04 01 01  // ......,.........
    0040: 05 6F 00 68 08 88 17 00 89 04 04 04 07 6F 00 68  // .o.h.........o.h
    0050: 20 88 03 00 89 05 01 01 19 6F 00 68 20 88 22 00  //  ........o.h .".
    0060: 02 00 18 00 04 04 00 00 00 88 00 03 01 88 00 02  // ................
    0070: 02 88 00 01 03 88 00 04 03 00 17 00 20 18 00 00  // ............ ...
    0080: 00 13 F0 00 00 00 01 57 00 00 00 00 01 00 00 84  // .......W........
    0090: 00 11 00 00 0B 5C 68 88 C2 D2 DC A0 A2 A4 A6 C8  // .....\h.........


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 15
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 01
                                   Displayed : 1
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000CDC09018
[030h 0048   4]                Image OffsetX : 000002F3
[034h 0052   4]                Image OffsetY : 00000124

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 15 4C 45 4E 4F 56 4F  // BGRT8.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 01 00 01 00 18 90 C0 CD 00 00 00 00  // ................
    0030: F3 02 00 00 24 01 00 00                          // ....$...


DBG2
----
[000h 0000   4]                    Signature : "DBG2"    [Debug Port Table type 2]
[004h 0004   4]                 Table Length : 00000054
[008h 0008   1]                     Revision : 00
[009h 0009   1]                     Checksum : 79
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                  Info Offset : 0000002C
[028h 0040   4]                   Info Count : 00000001

[02Ch 0044   1]                     Revision : 00
[02Dh 0045   2]                       Length : 0028
[02Fh 0047   1]               Register Count : 01
[030h 0048   2]              Namepath Length : 0002
[032h 0050   2]              Namepath Offset : 0026
[034h 0052   2]              OEM Data Length : 0000 [Optional field not present]
[036h 0054   2]              OEM Data Offset : 0000 [Optional field not present]
[038h 0056   2]                    Port Type : 8000
[03Ah 0058   2]                 Port Subtype : 0000
[03Ch 0060   2]                     Reserved : 0000
[03Eh 0062   2]          Base Address Offset : 0016
[040h 0064   2]          Address Size Offset : 0022

[042h 0066  12]        Base Address Register : [Generic Address Structure]
[042h 0066   1]                     Space ID : 01 [SystemIO]
[043h 0067   1]                    Bit Width : 08
[044h 0068   1]                   Bit Offset : 00
[045h 0069   1]         Encoded Access Width : 00 [Undefined/Legacy]
[046h 0070   8]                      Address : 00000000000003F8

[04Eh 0078   4]                 Address Size : 0000000C

[052h 0082   2]                     Namepath : "."

Raw Table Data: Length 84 (0x54)

    0000: 44 42 47 32 54 00 00 00 00 79 4C 45 4E 4F 56 4F  // DBG2T....yLENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 5F 00 00 00 2C 00 00 00 01 00 00 00 00 28 00 01  // _...,........(..
    0030: 02 00 26 00 00 00 00 00 00 80 00 00 00 00 16 00  // ..&.............
    0040: 22 00 01 08 00 00 F8 03 00 00 00 00 00 00 0C 00  // "...............
    0050: 00 00 2E 00                                      // ....


DBGP
----
[000h 0000   4]                    Signature : "DBGP"    [Debug Port Table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : EA
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   1]               Interface Type : 00
[025h 0037   3]                     Reserved : 000000

[028h 0040  12]          Debug Port Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 01 [SystemIO]
[029h 0041   1]                    Bit Width : 08
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000000003F8


Raw Table Data: Length 52 (0x34)

    0000: 44 42 47 50 34 00 00 00 01 EA 4C 45 4E 4F 56 4F  // DBGP4.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 5F 00 00 00 00 00 00 00 01 08 00 00 F8 03 00 00  // _...............
    0030: 00 00 00 00                                      // ....


DMAR
----
[000h 0000   4]                    Signature : "DMAR"    [DMA Remapping Table]
[004h 0004   4]                 Table Length : 000000A8
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : CF
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "INTL"
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   1]           Host Address Width : 26
[025h 0037   1]                        Flags : 01
[026h 0038  10]                     Reserved : 00 00 00 00 00 00 00 00 00 00

[030h 0048   2]                Subtable Type : 0000 [Hardware Unit Definition]
[032h 0050   2]                       Length : 0018

[034h 0052   1]                        Flags : 00
[035h 0053   1]                     Reserved : 00
[036h 0054   2]           PCI Segment Number : 0000
[038h 0056   8]        Register Base Address : 00000000FED90000

[040h 0064   1]            Device Scope Type : 01 [PCI Endpoint Device]
[041h 0065   1]                 Entry Length : 08
[042h 0066   2]                     Reserved : 0000
[044h 0068   1]               Enumeration ID : 00
[045h 0069   1]               PCI Bus Number : 00

[046h 0070   2]                     PCI Path : 02,00


[048h 0072   2]                Subtable Type : 0000 [Hardware Unit Definition]
[04Ah 0074   2]                       Length : 0020

[04Ch 0076   1]                        Flags : 01
[04Dh 0077   1]                     Reserved : 00
[04Eh 0078   2]           PCI Segment Number : 0000
[050h 0080   8]        Register Base Address : 00000000FED91000

[058h 0088   1]            Device Scope Type : 03 [IOAPIC Device]
[059h 0089   1]                 Entry Length : 08
[05Ah 0090   2]                     Reserved : 0000
[05Ch 0092   1]               Enumeration ID : 02
[05Dh 0093   1]               PCI Bus Number : F0

[05Eh 0094   2]                     PCI Path : 1F,00


[060h 0096   1]            Device Scope Type : 04 [Message-capable HPET Device]
[061h 0097   1]                 Entry Length : 08
[062h 0098   2]                     Reserved : 0000
[064h 0100   1]               Enumeration ID : 00
[065h 0101   1]               PCI Bus Number : 00

[066h 0102   2]                     PCI Path : 1F,00


[068h 0104   2]                Subtable Type : 0001 [Reserved Memory Region]
[06Ah 0106   2]                       Length : 0020

[06Ch 0108   2]                     Reserved : 0000
[06Eh 0110   2]           PCI Segment Number : 0000
[070h 0112   8]                 Base Address : 00000000D15DD000
[078h 0120   8]          End Address (limit) : 00000000D15FCFFF

[080h 0128   1]            Device Scope Type : 01 [PCI Endpoint Device]
[081h 0129   1]                 Entry Length : 08
[082h 0130   2]                     Reserved : 0000
[084h 0132   1]               Enumeration ID : 00
[085h 0133   1]               PCI Bus Number : 00

[086h 0134   2]                     PCI Path : 14,00


[088h 0136   2]                Subtable Type : 0001 [Reserved Memory Region]
[08Ah 0138   2]                       Length : 0020

[08Ch 0140   2]                     Reserved : 0000
[08Eh 0142   2]           PCI Segment Number : 0000
[090h 0144   8]                 Base Address : 00000000D3800000
[098h 0152   8]          End Address (limit) : 00000000DFFFFFFF

[0A0h 0160   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0A1h 0161   1]                 Entry Length : 08
[0A2h 0162   2]                     Reserved : 0000
[0A4h 0164   1]               Enumeration ID : 00
[0A5h 0165   1]               PCI Bus Number : 00

[0A6h 0166   2]                     PCI Path : 02,00


Raw Table Data: Length 168 (0xA8)

    0000: 44 4D 41 52 A8 00 00 00 01 CF 4C 45 4E 4F 56 4F  // DMAR......LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 49 4E 54 4C  // TC-M1A  ....INTL
    0020: 01 00 00 00 26 01 00 00 00 00 00 00 00 00 00 00  // ....&...........
    0030: 00 00 18 00 00 00 00 00 00 00 D9 FE 00 00 00 00  // ................
    0040: 01 08 00 00 00 00 02 00 00 00 20 00 01 00 00 00  // .......... .....
    0050: 00 10 D9 FE 00 00 00 00 03 08 00 00 02 F0 1F 00  // ................
    0060: 04 08 00 00 00 00 1F 00 01 00 20 00 00 00 00 00  // .......... .....
    0070: 00 D0 5D D1 00 00 00 00 FF CF 5F D1 00 00 00 00  // ..]......._.....
    0080: 01 08 00 00 00 00 14 00 01 00 20 00 00 00 00 00  // .......... .....
    0090: 00 00 80 D3 00 00 00 00 FF FF FF DF 00 00 00 00  // ................
    00A0: 01 08 00 00 00 00 02 00                          // ........


DSDT
----
DefinitionBlock ("", "DSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_GPE.AL6F, MethodObj)    // 0 Arguments
    External (_GPE.HLVT, MethodObj)    // 0 Arguments
    External (_GPE.P0L6, MethodObj)    // 0 Arguments
    External (_GPE.P1L6, MethodObj)    // 0 Arguments
    External (_GPE.P2L6, MethodObj)    // 0 Arguments
    External (_PR_.BGIA, UnknownObj)
    External (_PR_.BGMA, UnknownObj)
    External (_PR_.BGMS, UnknownObj)
    External (_PR_.CFGD, UnknownObj)
    External (_PR_.CPPC, IntObj)
    External (_PR_.CPU0.LPSS, PkgObj)
    External (_PR_.CPU0.TPSS, PkgObj)
    External (_PR_.DSAE, UnknownObj)
    External (_PR_.DTS1, UnknownObj)
    External (_PR_.DTS2, UnknownObj)
    External (_PR_.DTS3, UnknownObj)
    External (_PR_.DTS4, UnknownObj)
    External (_PR_.DTSE, UnknownObj)
    External (_PR_.DTSF, UnknownObj)
    External (_PR_.DTSI, IntObj)
    External (_PR_.ELNG, UnknownObj)
    External (_PR_.EMNA, UnknownObj)
    External (_PR_.EPCS, UnknownObj)
    External (_PR_.HWPI, IntObj)
    External (_PR_.PDTS, UnknownObj)
    External (_PR_.PKGA, UnknownObj)
    External (_PR_.POWS, UnknownObj)
    External (_PR_.TRPD, UnknownObj)
    External (_PR_.TRPF, UnknownObj)
    External (_SB_.IETM, DeviceObj)
    External (_SB_.PCI0.GFX0.ALSI, UnknownObj)
    External (_SB_.PCI0.GFX0.CBLV, UnknownObj)
    External (_SB_.PCI0.GFX0.CDCK, UnknownObj)
    External (_SB_.PCI0.GFX0.CLID, UnknownObj)
    External (_SB_.PCI0.GFX0.DD01, DeviceObj)
    External (_SB_.PCI0.GFX0.DD02, DeviceObj)
    External (_SB_.PCI0.GFX0.DD03, DeviceObj)
    External (_SB_.PCI0.GFX0.DD04, DeviceObj)
    External (_SB_.PCI0.GFX0.DD05, DeviceObj)
    External (_SB_.PCI0.GFX0.DD06, DeviceObj)
    External (_SB_.PCI0.GFX0.DD07, DeviceObj)
    External (_SB_.PCI0.GFX0.DD08, DeviceObj)
    External (_SB_.PCI0.GFX0.DD1F, DeviceObj)
    External (_SB_.PCI0.GFX0.GSCI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GFX0.GSSE, UnknownObj)
    External (_SB_.PCI0.GFX0.IUEH, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GFX0.STAT, UnknownObj)
    External (_SB_.PCI0.GFX0.TCHE, UnknownObj)
    External (_SB_.PCI0.HDAS.PPMS, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.HDAS.PS0X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.HDAS.PS3X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.LPCB.H_EC.CHRG, DeviceObj)
    External (_SB_.PCI0.LPCB.H_EC.XDAT, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PAUD.PUAM, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG0.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG1.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.RP05.PWRG, UnknownObj)
    External (_SB_.PCI0.RP05.RSTG, UnknownObj)
    External (_SB_.PCI0.RP05.SCLK, UnknownObj)
    External (_SB_.PCI0.RP09.PWRG, UnknownObj)
    External (_SB_.PCI0.RP09.RSTG, UnknownObj)
    External (_SB_.PCI0.RP09.SCLK, UnknownObj)
    External (_SB_.PCI0.RP13.PWRG, UnknownObj)
    External (_SB_.PCI0.RP13.RSTG, UnknownObj)
    External (_SB_.PCI0.RP13.SCLK, UnknownObj)
    External (_SB_.PCI0.RP17.PWRG, UnknownObj)
    External (_SB_.PCI0.RP17.RSTG, UnknownObj)
    External (_SB_.PCI0.RP17.SCLK, UnknownObj)
    External (_SB_.PCI0.SAT0.SDSM, MethodObj)    // 4 Arguments
    External (_SB_.PCI0.XHC_.DUAM, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.PS0X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.PS3X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.RHUB.INIR, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.RHUB.PS0X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.RHUB.PS2X, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC_.RHUB.PS3X, MethodObj)    // 0 Arguments
    External (_SB_.TPM_.PTS_, MethodObj)    // 1 Arguments
    External (_TZ_.ETMD, IntObj)
    External (_TZ_.TZ00, DeviceObj)
    External (_TZ_.TZ01, DeviceObj)
    External (ALSE, UnknownObj)
    External (BNUM, UnknownObj)    // Conflicts with a later declaration
    External (BRTL, UnknownObj)
    External (CRBI, UnknownObj)
    External (DIDX, UnknownObj)
    External (FFTB, MethodObj)    // 0 Arguments
    External (GSMI, UnknownObj)
    External (IGDS, UnknownObj)
    External (LHIH, UnknownObj)
    External (LIDS, UnknownObj)
    External (LLOW, UnknownObj)
    External (M32B, UnknownObj)
    External (M32L, UnknownObj)
    External (M64B, UnknownObj)
    External (M64L, UnknownObj)
    External (MDBG, MethodObj)    // 1 Arguments
    External (MMRP, MethodObj)    // 0 Arguments
    External (MMTB, MethodObj)    // 0 Arguments
    External (P0WK, UnknownObj)
    External (P1GP, UnknownObj)
    External (P1WK, UnknownObj)
    External (P2GP, UnknownObj)
    External (P2WK, UnknownObj)
    External (PDC0, IntObj)
    External (PDC1, UnknownObj)
    External (PDC2, UnknownObj)
    External (PDC3, UnknownObj)
    External (PDC4, UnknownObj)
    External (PDC5, UnknownObj)
    External (PDC6, UnknownObj)
    External (PDC7, UnknownObj)
    External (RP05.PWRG, UnknownObj)
    External (RP05.RSTG, UnknownObj)
    External (RP05.SCLK, UnknownObj)
    External (RP09.PWRG, UnknownObj)
    External (RP09.RSTG, UnknownObj)
    External (RP09.SCLK, UnknownObj)
    External (RP13.PWRG, UnknownObj)
    External (RP13.RSTG, UnknownObj)
    External (RP13.SCLK, UnknownObj)
    External (RP17.PWRG, UnknownObj)
    External (RP17.RSTG, UnknownObj)
    External (RP17.SCLK, UnknownObj)
    External (SAT0.NVM1.VLPM, UnknownObj)
    External (SAT0.NVM2.VLPM, UnknownObj)
    External (SAT0.NVM3.VLPM, UnknownObj)
    External (SGGP, UnknownObj)
    External (SGMD, UnknownObj)
    External (TBTD, MethodObj)    // 1 Arguments
    External (TBTF, MethodObj)    // 1 Arguments

    Name (ENTK, 0x87)
    Name (EXTK, 0xAA)
    Name (IO1B, 0x0A00)
    Name (IO1L, 0x10)
    Name (IO2B, 0x0A10)
    Name (IO2L, 0x10)
    Name (IO3B, 0x0A20)
    Name (IO3L, 0x10)
    Name (SP1O, 0x2E)
    Name (IOES, Zero)
    Name (MCHB, 0xFED10000)
    Name (MCHL, 0x8000)
    Name (EGPB, 0xFED19000)
    Name (EGPL, 0x1000)
    Name (DMIB, 0xFED18000)
    Name (DMIL, 0x1000)
    Name (VTBS, 0xFED90000)
    Name (VTLN, 0x4000)
    Name (CPVD, Zero)
    Name (SMIP, 0xB2)
    Name (PMBA, 0x1800)
    Name (SMCR, 0x1830)
    Name (TCBR, 0xFED08000)
    Name (TCLT, 0x1000)
    Name (SMBL, 0x20)
    Name (APCB, 0xFEC00000)
    Name (APCL, 0x1000)
    Name (FMBL, One)
    Name (FDTP, 0x02)
    Name (FUPS, 0x04)
    Name (FUWS, 0x03)
    Name (FEMD, 0x04)
    Name (PFTU, 0xB2)
    Name (TBUS, 0xFF)
    Name (TBSW, 0xBC)
    Name (TBEF, 0x15)
    Name (TBDM, 0x17)
    Name (TBDB, 0x16)
    Name (ASSB, Zero)
    Name (AOTB, Zero)
    Name (AAXB, Zero)
    Name (PEHP, Zero)
    Name (SHPC, One)
    Name (PEPM, Zero)
    Name (PEER, Zero)
    Name (PECS, Zero)
    Name (ITKE, Zero)
    Name (MBEC, 0xFFFF)
    Name (CSMI, 0x61)
    Name (DSSP, Zero)
    Name (FHPP, Zero)
    Name (SMIA, 0xB2)
    Name (SMIB, 0xB3)
    Name (OFST, 0x35)
    Name (TRST, 0x02)
    Name (TCMF, Zero)
    Name (TMF1, Zero)
    Name (TMF2, Zero)
    Name (TMF3, Zero)
    Name (TTPF, One)
    Name (DTPT, Zero)
    Name (TTDP, One)
    Name (TPMB, 0xFFFFFFFF)
    Name (TPMC, 0xFFFFFFFF)
    Name (TPMM, 0xFED40000)
    Name (FTPM, 0xFFFFFFFF)
    Name (PPIM, 0xD2A90F18)
    Name (PPIL, 0x1C)
    Name (AMDT, Zero)
    Name (TPMF, One)
    Name (PPIV, One)
    Name (VDFG, Zero)
    Name (DFAV, 0xE4)
    Name (B2PV, 0xB2)
    Name (WVAL, 0xE5)
    Name (IOB2, 0xB2)
    Name (WMSZ, 0x0900)
    Name (SKWB, 0xD2A90358)
    Name (BDID, 0x33)
    Name (CRDT, 0x00)
    Name (BTDT, 0x03)
    Name (APSS, One)
    Name (VKBC, Zero)
    Name (THEM, 0xD2A8EFD8)
    Name (TMAX, 0x50)
    Name (ERRO, 0xD2A90F98)
    Name (BRDT, One)
    Name (CABL, Zero)
    Name (LSMB, 0xB2)
    Name (SS1, Zero)
    Name (SS2, Zero)
    Name (SS3, One)
    Name (SS4, One)
    Name (IOST, 0x0000)
    Name (TOPM, 0x00000000)
    Name (ROMS, 0xFFE00000)
    Name (VGAF, One)
    OperationRegion (GNVS, SystemMemory, 0xD2A8A000, 0x06E4)
    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x1E), 
        BNUM,   8, 
        Offset (0x20), 
        Offset (0x21), 
        Offset (0x22), 
        Offset (0x23), 
        Offset (0x24), 
        Offset (0x25), 
        REVN,   8, 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        MEFE,   8, 
        DSTS,   8, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        IDEM,   8, 
        PLID,   8, 
        BTYP,   8, 
        OSCC,   8, 
        NEXP,   8, 
        SBV1,   8, 
        SBV2,   8, 
        ECON,   8, 
        DSEN,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        VFN2,   8, 
        VFN3,   8, 
        VFN4,   8, 
        VFN5,   8, 
        VFN6,   8, 
        VFN7,   8, 
        VFN8,   8, 
        VFN9,   8, 
        ATMC,   8, 
        PTMC,   8, 
        PNHM,   32, 
        TBAL,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        PFLV,   8, 
        BREV,   8, 
        PDTS,   8, 
        PKGA,   8, 
        PAMT,   8, 
        AC0F,   8, 
        AC1F,   8, 
        DTS3,   8, 
        DTS4,   8, 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        LTR9,   8, 
        LTRA,   8, 
        LTRB,   8, 
        LTRC,   8, 
        LTRD,   8, 
        LTRE,   8, 
        LTRF,   8, 
        LTRG,   8, 
        LTRH,   8, 
        LTRI,   8, 
        LTRJ,   8, 
        LTRK,   8, 
        LTRL,   8, 
        LTRM,   8, 
        LTRN,   8, 
        LTRO,   8, 
        OBF1,   8, 
        OBF2,   8, 
        OBF3,   8, 
        OBF4,   8, 
        OBF5,   8, 
        OBF6,   8, 
        OBF7,   8, 
        OBF8,   8, 
        OBF9,   8, 
        OBFA,   8, 
        OBFB,   8, 
        OBFC,   8, 
        OBFD,   8, 
        OBFE,   8, 
        OBFF,   8, 
        OBFG,   8, 
        OBFH,   8, 
        OBFI,   8, 
        OBFJ,   8, 
        OBFK,   8, 
        OBFL,   8, 
        OBFM,   8, 
        OBFN,   8, 
        OBFO,   8, 
        XTUB,   32, 
        XTUS,   32, 
        XMPB,   32, 
        DDRF,   8, 
        RTD3,   8, 
        PEP0,   8, 
        PEP3,   8, 
        DPTF,   8, 
        DCFE,   16, 
        SADE,   8, 
        SACR,   8, 
        SAHT,   8, 
        CPUS,   8, 
        CTDP,   8, 
        LPMP,   8, 
        LPMV,   8, 
        ECEU,   8, 
        TGFG,   16, 
        MEMD,   8, 
        ATRA,   8, 
        PTRA,   8, 
        MEMC,   8, 
        MEMH,   8, 
        FND1,   8, 
        FND2,   8, 
        AMBD,   8, 
        AMAT,   8, 
        AMPT,   8, 
        AMCT,   8, 
        AMHT,   8, 
        SKDE,   8, 
        SKAT,   8, 
        SKPT,   8, 
        SKCT,   8, 
        SKHT,   8, 
        EFDE,   8, 
        EFAT,   8, 
        EFPT,   8, 
        EFCT,   8, 
        EFHT,   8, 
        VRDE,   8, 
        VRAT,   8, 
        VRPT,   8, 
        VRCT,   8, 
        VRHT,   8, 
        DPAP,   8, 
        DPPP,   8, 
        DPCP,   8, 
        DCMP,   8, 
        TRTV,   8, 
        LPOE,   8, 
        LPOP,   8, 
        LPOS,   8, 
        LPOW,   8, 
        LPER,   8, 
        PPSZ,   32, 
        DISE,   8, 
        BGMA,   64, 
        BGMS,   8, 
        BGIA,   16, 
        IRMC,   8, 
        NFCE,   8, 
        CHEN,   8, 
        S0ID,   8, 
        CTDB,   8, 
        DKSM,   8, 
        SIO1,   16, 
        SIO2,   16, 
        SPBA,   16, 
        SEC0,   32, 
        SEC1,   32, 
        SEC2,   32, 
        SEC3,   32, 
        SEC4,   32, 
        SEC5,   32, 
        SEC6,   32, 
        SEC7,   32, 
        SEC8,   32, 
        Offset (0x1F4), 
        WIFD,   8, 
        WFAT,   8, 
        WFPT,   8, 
        WFCT,   8, 
        WFHT,   8, 
        PWRE,   8, 
        Offset (0x1FC), 
        PPPR,   16, 
        PBPE,   8, 
        VSPE,   8, 
        Offset (0x203), 
        XHPR,   8, 
        RIC0,   8, 
        GBSX,   8, 
        IUBE,   8, 
        IUCE,   8, 
        IUDE,   8, 
        ECNO,   8, 
        AUDD,   16, 
        IC0D,   16, 
        IC1D,   16, 
        IC1S,   16, 
        VRRD,   16, 
        PSCP,   8, 
        I20D,   16, 
        I21D,   16, 
        RCG0,   16, 
        RCG1,   16, 
        ECDB,   8, 
        P2ME,   8, 
        P2MK,   8, 
        SSH0,   16, 
        SSL0,   16, 
        SSD0,   16, 
        FMH0,   16, 
        FML0,   16, 
        FMD0,   16, 
        FPH0,   16, 
        FPL0,   16, 
        FPD0,   16, 
        SSH1,   16, 
        SSL1,   16, 
        SSD1,   16, 
        FMH1,   16, 
        FML1,   16, 
        FMD1,   16, 
        FPH1,   16, 
        FPL1,   16, 
        FPD1,   16, 
        M0C0,   16, 
        M1C0,   16, 
        M2C0,   16, 
        M0C1,   16, 
        M1C1,   16, 
        M2C1,   16, 
        M0C2,   16, 
        M1C2,   16, 
        M0C3,   16, 
        M1C3,   16, 
        M0C4,   16, 
        M1C4,   16, 
        M0C5,   16, 
        M1C5,   16, 
        TBSF,   8, 
        GIRQ,   32, 
        DMTP,   8, 
        DMTD,   8, 
        DMSH,   8, 
        SHSB,   8, 
        PLCS,   8, 
        PLVL,   16, 
        GN1E,   8, 
        G1AT,   8, 
        G1PT,   8, 
        G1CT,   8, 
        G1HT,   8, 
        GN2E,   8, 
        G2AT,   8, 
        G2PT,   8, 
        G2CT,   8, 
        G2HT,   8, 
        WWSD,   8, 
        CVSD,   8, 
        SSDD,   8, 
        INLD,   8, 
        IFAT,   8, 
        IFPT,   8, 
        IFCT,   8, 
        IFHT,   8, 
        SDWE,   8, 
        USBH,   8, 
        BCV4,   8, 
        WTV0,   8, 
        WTV1,   8, 
        APFU,   8, 
        SOHP,   8, 
        GP5F,   8, 
        NOHP,   8, 
        TBSE,   8, 
        WKFN,   8, 
        PEPC,   32, 
        VRSD,   16, 
        PB1E,   8, 
        GNID,   8, 
        WAND,   8, 
        WWAT,   8, 
        WWPT,   8, 
        WWCT,   8, 
        WWHT,   8, 
        Offset (0x2A3), 
        MPL0,   16, 
        CHGE,   8, 
        SAC3,   8, 
        MEM3,   8, 
        AMC3,   8, 
        SKC3,   8, 
        EFC3,   8, 
        VRC3,   8, 
        WFC3,   8, 
        G1C3,   8, 
        G2C3,   8, 
        IFC3,   8, 
        WWC3,   8, 
        WGC3,   8, 
        SPST,   8, 
        PERE,   8, 
        PEAT,   8, 
        PEPV,   8, 
        PECR,   8, 
        PEC3,   8, 
        PEHT,   8, 
        GN3E,   8, 
        G3AT,   8, 
        G3PT,   8, 
        G3CT,   8, 
        G3HT,   8, 
        GN4E,   8, 
        G4AT,   8, 
        G4PT,   8, 
        G4CT,   8, 
        G4HT,   8, 
        GN5E,   8, 
        G5AT,   8, 
        G5PT,   8, 
        G5CT,   8, 
        G5HT,   8, 
        GN6E,   8, 
        G6AT,   8, 
        G6PT,   8, 
        G6CT,   8, 
        G6HT,   8, 
        ECLP,   8, 
        G3C3,   8, 
        G4C3,   8, 
        G5C3,   8, 
        G6C3,   8, 
        TSP1,   8, 
        TSP2,   8, 
        TSP3,   8, 
        TSP4,   8, 
        TSP5,   8, 
        TSP6,   8, 
        TSP7,   8, 
        TSP8,   8, 
        SSP1,   8, 
        SSP2,   8, 
        SSP3,   8, 
        SSP4,   8, 
        SSP5,   8, 
        SSP6,   8, 
        SSP7,   8, 
        SSP8,   8, 
        MEMS,   8, 
        STGE,   8, 
        STAT,   8, 
        STPT,   8, 
        STCT,   8, 
        STC3,   8, 
        STHT,   8, 
        VSP1,   8, 
        V1AT,   8, 
        V1PV,   8, 
        V1CR,   8, 
        V1C3,   8, 
        V1HT,   8, 
        VSP2,   8, 
        V2AT,   8, 
        V2PV,   8, 
        V2CR,   8, 
        V2C3,   8, 
        V2HT,   8, 
        S1DE,   8, 
        S1AT,   8, 
        S1PT,   8, 
        S1CT,   8, 
        S1HT,   8, 
        S2DE,   8, 
        S2AT,   8, 
        S2PT,   8, 
        S2CT,   8, 
        S2HT,   8, 
        S3DE,   8, 
        S3AT,   8, 
        S3PT,   8, 
        S3CT,   8, 
        S3HT,   8, 
        S4DE,   8, 
        S4AT,   8, 
        S4PT,   8, 
        S4CT,   8, 
        S4HT,   8, 
        S5DE,   8, 
        S5AT,   8, 
        S5PT,   8, 
        S5CT,   8, 
        S5HT,   8, 
        S6DE,   8, 
        S6AT,   8, 
        S6PT,   8, 
        S6CT,   8, 
        S6HT,   8, 
        S7DE,   8, 
        S7AT,   8, 
        S7PT,   8, 
        S7CT,   8, 
        S7HT,   8, 
        S1S3,   8, 
        S2S3,   8, 
        S3S3,   8, 
        S4S3,   8, 
        S5S3,   8, 
        S6S3,   8, 
        S7S3,   8, 
        ICAE,   8, 
        PSME,   8, 
        PDT1,   8, 
        PLM1,   32, 
        PTW1,   32, 
        PDT2,   8, 
        PLM2,   32, 
        PTW2,   32, 
        DDT1,   8, 
        DDP1,   8, 
        DLI1,   16, 
        DPL1,   16, 
        DTW1,   32, 
        DMI1,   16, 
        DMA1,   16, 
        DMT1,   16, 
        DDT2,   8, 
        DDP2,   8, 
        DLI2,   16, 
        DPL2,   16, 
        DTW2,   32, 
        DMI2,   16, 
        DMA2,   16, 
        DMT2,   16, 
        WIFE,   8, 
        DOM1,   8, 
        LIM1,   16, 
        TIM1,   32, 
        DOM2,   8, 
        LIM2,   16, 
        TIM2,   32, 
        DOM3,   8, 
        LIM3,   16, 
        TIM3,   32, 
        TRD0,   8, 
        TRL0,   8, 
        TRD1,   8, 
        TRL1,   8, 
        WDM1,   8, 
        CID1,   16, 
        WDM2,   8, 
        CID2,   16, 
        Offset (0x378), 
        APPE,   8, 
        MPL1,   16, 
        MPL2,   16, 
        SDS0,   8, 
        SDS1,   8, 
        SDS2,   8, 
        SDS3,   8, 
        SDS4,   8, 
        SDS5,   8, 
        SDS6,   8, 
        SDS7,   8, 
        SDS8,   8, 
        SDS9,   8, 
        SDSA,   8, 
        TPLB,   8, 
        TPLH,   16, 
        WTVX,   8, 
        WITX,   8, 
        GPTD,   8, 
        GDBT,   16, 
        UTKX,   8, 
        SPTD,   8, 
        GEXN,   8, 
        TBTS,   8, 
        TBWS,   8, 
        AICS,   8, 
        TARS,   8, 
        FPAT,   8, 
        FPEN,   8, 
        FPGN,   32, 
        FPLV,   8, 
        CPAD,   16, 
        CPAB,   8, 
        TNAT,   8, 
        CPGN,   32, 
        CF2T,   8, 
        TDGS,   8, 
        DCSC,   8, 
        DCKE,   8, 
        UDCK,   8, 
        SUDK,   8, 
        OHPN,   8, 
        GHPN,   8, 
        EGPC,   32, 
        EGPV,   8, 
        TBDT,   32, 
        ATLB,   32, 
        SDM0,   8, 
        SDM1,   8, 
        SDM2,   8, 
        SDM3,   8, 
        SDM4,   8, 
        SDM5,   8, 
        SDM6,   8, 
        SDM7,   8, 
        SDM8,   8, 
        SDM9,   8, 
        SDMA,   8, 
        USTP,   8, 
        SSHI,   16, 
        SSLI,   16, 
        SSDI,   16, 
        FMHI,   16, 
        FMLI,   16, 
        FMDI,   16, 
        FPHI,   16, 
        FPLI,   16, 
        FPDI,   16, 
        M0CI,   16, 
        M1CI,   16, 
        M0CS,   16, 
        M1CS,   16, 
        M0CU,   16, 
        M1CU,   16, 
        CAMT,   8, 
        IVDF,   8, 
        IFWG,   64, 
        IVWS,   8, 
        IVPR,   8, 
        DIVO,   16, 
        DIVF,   16, 
        IVAD,   8, 
        IVRS,   8, 
        IVDG,   64, 
        DSPR,   8, 
        DDSO,   16, 
        DDSF,   16, 
        DSAD,   8, 
        DSRS,   8, 
        DVDG,   64, 
        EIDF,   8, 
        GFPS,   32, 
        GFPI,   32, 
        GNSM,   8, 
        GNSC,   8, 
        GGNR,   32, 
        GBTW,   32, 
        GBTK,   32, 
        GBTI,   32, 
        GPDI,   32, 
        GPLI,   32, 
        CL00,   8, 
        CL01,   8, 
        CL02,   8, 
        CL03,   8, 
        L0EN,   8, 
        L1EN,   8, 
        L2EN,   8, 
        L3EN,   8, 
        CDIV,   8, 
        C0TP,   8, 
        C0CV,   8, 
        C0GP,   8, 
        C0IB,   8, 
        C0IA,   16, 
        C0P0,   8, 
        C0P1,   8, 
        C0P2,   8, 
        C0P3,   8, 
        C0G0,   8, 
        C0G1,   8, 
        C0G2,   8, 
        C0G3,   8, 
        C0F0,   8, 
        C0F1,   8, 
        C0F2,   8, 
        C0F3,   8, 
        C0A0,   8, 
        C0A1,   8, 
        C0A2,   8, 
        C0A3,   8, 
        C0I0,   8, 
        C0I1,   8, 
        C0I2,   8, 
        C0I3,   8, 
        C0PL,   8, 
        C1TP,   8, 
        C1CV,   8, 
        C1GP,   8, 
        C1IB,   8, 
        C1IA,   16, 
        C1P0,   8, 
        C1P1,   8, 
        C1P2,   8, 
        C1P3,   8, 
        C1G0,   8, 
        C1G1,   8, 
        C1G2,   8, 
        C1G3,   8, 
        C1F0,   8, 
        C1F1,   8, 
        C1F2,   8, 
        C1F3,   8, 
        C1A0,   8, 
        C1A1,   8, 
        C1A2,   8, 
        C1A3,   8, 
        C1I0,   8, 
        C1I1,   8, 
        C1I2,   8, 
        C1I3,   8, 
        C1PL,   8, 
        C2TP,   8, 
        C2CV,   8, 
        C2GP,   8, 
        C2IB,   8, 
        C2IA,   16, 
        C2P0,   8, 
        C2P1,   8, 
        C2P2,   8, 
        C2P3,   8, 
        C2G0,   8, 
        C2G1,   8, 
        C2G2,   8, 
        C2G3,   8, 
        C2F0,   8, 
        C2F1,   8, 
        C2F2,   8, 
        C2F3,   8, 
        C2A0,   8, 
        C2A1,   8, 
        C2A2,   8, 
        C2A3,   8, 
        C2I0,   8, 
        C2I1,   8, 
        C2I2,   8, 
        C2I3,   8, 
        C2PL,   8, 
        C3TP,   8, 
        C3CV,   8, 
        C3GP,   8, 
        C3IB,   8, 
        C3IA,   16, 
        C3P0,   8, 
        C3P1,   8, 
        C3P2,   8, 
        C3P3,   8, 
        C3G0,   8, 
        C3G1,   8, 
        C3G2,   8, 
        C3G3,   8, 
        C3F0,   8, 
        C3F1,   8, 
        C3F2,   8, 
        C3F3,   8, 
        C3A0,   8, 
        C3A1,   8, 
        C3A2,   8, 
        C3A3,   8, 
        C3I0,   8, 
        C3I1,   8, 
        C3I2,   8, 
        C3I3,   8, 
        C3PL,   8, 
        L0SM,   8, 
        L0H0,   8, 
        L0H1,   8, 
        L0H2,   8, 
        L0H3,   8, 
        L0H4,   8, 
        L0H5,   8, 
        L0H6,   8, 
        L0H7,   8, 
        L0H8,   8, 
        L0PL,   8, 
        L0M0,   8, 
        L0M1,   8, 
        L0M2,   8, 
        L0M3,   8, 
        L0M4,   8, 
        L0M5,   8, 
        L0M6,   8, 
        L0M7,   8, 
        L0M8,   8, 
        L0M9,   8, 
        L0MA,   8, 
        L0MB,   8, 
        L0MC,   8, 
        L0MD,   8, 
        L0ME,   8, 
        L0MF,   8, 
        L0DI,   8, 
        L0BS,   8, 
        L0A0,   16, 
        L0A1,   16, 
        L0A2,   16, 
        L0A3,   16, 
        L0A4,   16, 
        L0A5,   16, 
        L0A6,   16, 
        L0A7,   16, 
        L0A8,   16, 
        L0A9,   16, 
        L0AA,   16, 
        L0AB,   16, 
        L0D0,   8, 
        L0D1,   8, 
        L0D2,   8, 
        L0D3,   8, 
        L0D4,   8, 
        L0D5,   8, 
        L0D6,   8, 
        L0D7,   8, 
        L0D8,   8, 
        L0D9,   8, 
        L0DA,   8, 
        L0DB,   8, 
        L0DV,   8, 
        L0CV,   8, 
        L0LU,   8, 
        L0NL,   8, 
        L0EE,   8, 
        L0VC,   8, 
        L0FS,   8, 
        L0DG,   8, 
        L0C0,   8, 
        L0C1,   8, 
        L0C2,   8, 
        L0C3,   8, 
        L0CK,   32, 
        L0CL,   8, 
        L1SM,   8, 
        L1H0,   8, 
        L1H1,   8, 
        L1H2,   8, 
        L1H3,   8, 
        L1H4,   8, 
        L1H5,   8, 
        L1H6,   8, 
        L1H7,   8, 
        L1H8,   8, 
        L1PL,   8, 
        L1M0,   8, 
        L1M1,   8, 
        L1M2,   8, 
        L1M3,   8, 
        L1M4,   8, 
        L1M5,   8, 
        L1M6,   8, 
        L1M7,   8, 
        L1M8,   8, 
        L1M9,   8, 
        L1MA,   8, 
        L1MB,   8, 
        L1MC,   8, 
        L1MD,   8, 
        L1ME,   8, 
        L1MF,   8, 
        L1DI,   8, 
        L1BS,   8, 
        L1A0,   16, 
        L1A1,   16, 
        L1A2,   16, 
        L1A3,   16, 
        L1A4,   16, 
        L1A5,   16, 
        L1A6,   16, 
        L1A7,   16, 
        L1A8,   16, 
        L1A9,   16, 
        L1AA,   16, 
        L1AB,   16, 
        L1D0,   8, 
        L1D1,   8, 
        L1D2,   8, 
        L1D3,   8, 
        L1D4,   8, 
        L1D5,   8, 
        L1D6,   8, 
        L1D7,   8, 
        L1D8,   8, 
        L1D9,   8, 
        L1DA,   8, 
        L1DB,   8, 
        L1DV,   8, 
        L1CV,   8, 
        L1LU,   8, 
        L1NL,   8, 
        L1EE,   8, 
        L1VC,   8, 
        L1FS,   8, 
        L1DG,   8, 
        L1C0,   8, 
        L1C1,   8, 
        L1C2,   8, 
        L1C3,   8, 
        L1CK,   32, 
        L1CL,   8, 
        L2SM,   8, 
        L2H0,   8, 
        L2H1,   8, 
        L2H2,   8, 
        L2H3,   8, 
        L2H4,   8, 
        L2H5,   8, 
        L2H6,   8, 
        L2H7,   8, 
        L2H8,   8, 
        L2PL,   8, 
        L2M0,   8, 
        L2M1,   8, 
        L2M2,   8, 
        L2M3,   8, 
        L2M4,   8, 
        L2M5,   8, 
        L2M6,   8, 
        L2M7,   8, 
        L2M8,   8, 
        L2M9,   8, 
        L2MA,   8, 
        L2MB,   8, 
        L2MC,   8, 
        L2MD,   8, 
        L2ME,   8, 
        L2MF,   8, 
        L2DI,   8, 
        L2BS,   8, 
        L2A0,   16, 
        L2A1,   16, 
        L2A2,   16, 
        L2A3,   16, 
        L2A4,   16, 
        L2A5,   16, 
        L2A6,   16, 
        L2A7,   16, 
        L2A8,   16, 
        L2A9,   16, 
        L2AA,   16, 
        L2AB,   16, 
        L2D0,   8, 
        L2D1,   8, 
        L2D2,   8, 
        L2D3,   8, 
        L2D4,   8, 
        L2D5,   8, 
        L2D6,   8, 
        L2D7,   8, 
        L2D8,   8, 
        L2D9,   8, 
        L2DA,   8, 
        L2DB,   8, 
        L2DV,   8, 
        L2CV,   8, 
        L2LU,   8, 
        L2NL,   8, 
        L2EE,   8, 
        L2VC,   8, 
        L2FS,   8, 
        L2DG,   8, 
        L2C0,   8, 
        L2C1,   8, 
        L2C2,   8, 
        L2C3,   8, 
        L2CK,   32, 
        L2CL,   8, 
        L3SM,   8, 
        L3H0,   8, 
        L3H1,   8, 
        L3H2,   8, 
        L3H3,   8, 
        L3H4,   8, 
        L3H5,   8, 
        L3H6,   8, 
        L3H7,   8, 
        L3H8,   8, 
        L3PL,   8, 
        L3M0,   8, 
        L3M1,   8, 
        L3M2,   8, 
        L3M3,   8, 
        L3M4,   8, 
        L3M5,   8, 
        L3M6,   8, 
        L3M7,   8, 
        L3M8,   8, 
        L3M9,   8, 
        L3MA,   8, 
        L3MB,   8, 
        L3MC,   8, 
        L3MD,   8, 
        L3ME,   8, 
        L3MF,   8, 
        L3DI,   8, 
        L3BS,   8, 
        L3A0,   16, 
        L3A1,   16, 
        L3A2,   16, 
        L3A3,   16, 
        L3A4,   16, 
        L3A5,   16, 
        L3A6,   16, 
        L3A7,   16, 
        L3A8,   16, 
        L3A9,   16, 
        L3AA,   16, 
        L3AB,   16, 
        L3D0,   8, 
        L3D1,   8, 
        L3D2,   8, 
        L3D3,   8, 
        L3D4,   8, 
        L3D5,   8, 
        L3D6,   8, 
        L3D7,   8, 
        L3D8,   8, 
        L3D9,   8, 
        L3DA,   8, 
        L3DB,   8, 
        L3DV,   8, 
        L3CV,   8, 
        L3LU,   8, 
        L3NL,   8, 
        L3EE,   8, 
        L3VC,   8, 
        L3FS,   8, 
        L3DG,   8, 
        L3C0,   8, 
        L3C1,   8, 
        L3C2,   8, 
        L3C3,   8, 
        L3CK,   32, 
        L3CL,   8, 
        ECR1,   8, 
        Offset (0x60E), 
        I2SC,   8, 
        ODV0,   8, 
        ODV1,   8, 
        ODV2,   8, 
        ODV3,   8, 
        ODV4,   8, 
        ODV5,   8, 
        UBCB,   32, 
        EMOD,   8, 
        WIFC,   8, 
        Offset (0x622), 
        TPLS,   8, 
        TPDB,   8, 
        TPDH,   16, 
        TPDS,   8, 
        ADPM,   32, 
        AG1L,   64, 
        AG1H,   64, 
        AG2L,   64, 
        AG2H,   64, 
        AG3L,   64, 
        AG3H,   64, 
        HEFE,   8, 
        XDCE,   8, 
        STXE,   8, 
        STX0,   8, 
        STX1,   8, 
        STX2,   8, 
        STX3,   8, 
        STX4,   8, 
        STX5,   8, 
        STX6,   8, 
        STX7,   8, 
        STX8,   8, 
        STX9,   8, 
        RTVM,   8, 
        USTC,   8, 
        BATP,   8, 
        TSDB,   8, 
        DEPC,   8, 
        PDFC,   8, 
        IVCM,   8, 
        HEB1,   32, 
        RBY1,   8, 
        RBY2,   8, 
        SCSS,   8, 
        HAID,   8, 
        NCTC,   8, 
        NCTI,   8, 
        NCTH,   8, 
        HSIO,   8, 
        TPPT,   8, 
        SHAP,   8, 
        EIAP,   8, 
        ZPOD,   8, 
        SRSP,   32, 
        CEDS,   8, 
        EHK3,   8, 
        EHK4,   8, 
        EHK5,   8, 
        EHK6,   8, 
        EHK7,   8, 
        EHK8,   8, 
        VBVP,   8, 
        VBVD,   8, 
        VBHB,   8, 
        VBRL,   8, 
        SMSS,   8, 
        VBST,   8, 
        ADAS,   8, 
        PPBG,   32, 
        AEAB,   8, 
        AHDB,   8, 
        PBSD,   8, 
        DPLL,   8, 
        DPHL,   8, 
        PWIG,   8, 
        MESE,   8, 
        ICAT,   8, 
        ICPV,   8, 
        ICCR,   8, 
        ICC3,   8, 
        ICHT,   8, 
        XSMI,   32, 
        PAPE,   32, 
        PSTW,   32, 
        MWLR,   32, 
        UP8P,   32, 
        MS2R,   32, 
        MS2P,   32, 
        UCSI,   8, 
        UCG1,   32, 
        UCG2,   32, 
        WGUR,   32, 
        WRFE,   8, 
        WRC1,   8, 
        WRC2,   8, 
        WRC3,   8, 
        WRC4,   8, 
        AWVI,   32, 
        Offset (0x6E0), 
        WTSP,   8, 
        WGWS,   8, 
        PIDE,   8, 
        AES3,   8
    }

    Device (PSM)
    {
        Name (_HID, EisaId ("INT3420") /* Intel Bluetooth RF Kill */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_STR, Unicode ("Power Sharing Manager"))  // _STR: Description String
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((PSME == One))
            {
                Return (0x0F)
            }
            Else
            {
                Return (Zero)
            }
        }

        Name (SPLX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = PDT1 /* \PDT1 */
            DerefOf (SPLX [One]) [One] = PLM1 /* \PLM1 */
            DerefOf (SPLX [One]) [0x02] = PTW1 /* \PTW1 */
            DerefOf (SPLX [0x02]) [Zero] = PDT2 /* \PDT2 */
            DerefOf (SPLX [0x02]) [One] = PLM2 /* \PLM2 */
            DerefOf (SPLX [0x02]) [0x02] = PTW2 /* \PTW2 */
            Return (SPLX) /* \PSM_.SPLX */
        }

        Name (DPLX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                Package (0x06)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                Package (0x06)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            }
        })
        Method (DPLC, 0, Serialized)
        {
            DerefOf (DPLX [One]) [Zero] = DDT1 /* \DDT1 */
            DerefOf (DPLX [One]) [One] = DDP1 /* \DDP1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [Zero]
                 = DLI1 /* \DLI1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [One]
                 = DPL1 /* \DPL1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [0x02]
                 = DTW1 /* \DTW1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [0x03]
                 = DMI1 /* \DMI1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [0x04]
                 = DMA1 /* \DMA1 */
            DerefOf (DerefOf (DPLX [One]) [0x02]) [0x05]
                 = DMT1 /* \DMT1 */
            DerefOf (DPLX [0x02]) [Zero] = DDT2 /* \DDT2 */
            DerefOf (DPLX [0x02]) [One] = DDP2 /* \DDP2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [Zero]
                 = DLI2 /* \DLI2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [One]
                 = DPL2 /* \DPL2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [0x02]
                 = DTW2 /* \DTW2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [0x03]
                 = DMI2 /* \DMI2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [0x04]
                 = DMA2 /* \DMA2 */
            DerefOf (DerefOf (DPLX [0x02]) [0x02]) [0x05]
                 = DMT2 /* \DMT2 */
            Return (DPLX) /* \PSM_.DPLX */
        }
    }

    Scope (_SB)
    {
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,10,11,12,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Name (PR00, Package (0x2A)
        {
            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })
        Name (AR00, Package (0x2A)
        {
            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })
        Name (PR01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR01, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR03, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR0D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR10, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR15, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR15, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR16, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR16, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR17, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR17, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR18, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR18, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR19, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR19, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR1A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR1A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR1B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR1B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR11, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR13, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR13, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
    }

    Scope (_SB)
    {
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00) /* \_SB_.AR00 */
                }

                Return (PR00) /* \_SB_.PR00 */
            }

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)
            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                D1F2,   1, 
                D1F1,   1, 
                D1F0,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                PMLK,   1, 
                    ,   3, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }

            Name (BUF0, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y00)
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xDFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xE0000000,         // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0F, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFD000000,         // Range Minimum
                    0xFE7FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x01800000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
            })
            Name (EP_B, Zero)
            Name (MH_B, Zero)
            Name (PC_B, Zero)
            Name (PC_L, Zero)
            Name (DM_B, Zero)
            Method (GEPB, 0, Serialized)
            {
                If ((EP_B == Zero))
                {
                    EP_B = (EPBR << 0x0C)
                }

                Return (EP_B) /* \_SB_.PCI0.EP_B */
            }

            Method (GMHB, 0, Serialized)
            {
                If ((MH_B == Zero))
                {
                    MH_B = (MHBR << 0x0F)
                }

                Return (MH_B) /* \_SB_.PCI0.MH_B */
            }

            Method (GPCB, 0, Serialized)
            {
                If ((PC_B == Zero))
                {
                    PC_B = (PXBR << 0x1A)
                }

                Return (PC_B) /* \_SB_.PCI0.PC_B */
            }

            Method (GPCL, 0, Serialized)
            {
                If ((PC_L == Zero))
                {
                    PC_L = (0x10000000 >> PXSZ) /* \_SB_.PCI0.PXSZ */
                }

                Return (PC_L) /* \_SB_.PCI0.PC_L */
            }

            Method (GDMB, 0, Serialized)
            {
                If ((DM_B == Zero))
                {
                    DM_B = (DIBR << 0x0C)
                }

                Return (DM_B) /* \_SB_.PCI0.DM_B */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Local0 = GPCL ()
                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
                PBMX = ((Local0 >> 0x14) - 0x02)
                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
                PBLN = ((Local0 >> 0x14) - One)
                If (PM1L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length
                    C0LN = Zero
                }

                If ((PM1L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status
                    C0RW = Zero
                }

                If (PM1H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length
                    C4LN = Zero
                }

                If ((PM1H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status
                    C4RW = Zero
                }

                If (PM2L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length
                    C8LN = Zero
                }

                If ((PM2L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status
                    C8RW = Zero
                }

                If (PM2H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length
                    CCLN = Zero
                }

                If ((PM2H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status
                    CCRW = Zero
                }

                If (PM3L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length
                    D0LN = Zero
                }

                If ((PM3L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status
                    D0RW = Zero
                }

                If (PM3H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length
                    D4LN = Zero
                }

                If ((PM3H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status
                    D4RW = Zero
                }

                If (PM4L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length
                    D8LN = Zero
                }

                If ((PM4L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status
                    D8RW = Zero
                }

                If (PM4H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length
                    DCLN = Zero
                }

                If ((PM4H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status
                    DCRW = Zero
                }

                If (PM5L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length
                    E0LN = Zero
                }

                If ((PM5L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status
                    E0RW = Zero
                }

                If (PM5H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length
                    E4LN = Zero
                }

                If ((PM5H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status
                    E4RW = Zero
                }

                If (PM6L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length
                    E8LN = Zero
                }

                If ((PM6L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status
                    E8RW = Zero
                }

                If (PM6H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length
                    ECLN = Zero
                }

                If ((PM6H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status
                    ECRW = Zero
                }

                If (PM0H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length
                    F0LN = Zero
                }

                If ((PM0H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status
                    F0RW = Zero
                }

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
                M1LN = M32L /* External reference */
                M1MN = M32B /* External reference */
                M1MX = ((M1MN + M1LN) - One)
                If ((M64L == Zero))
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, MSLN)  // _LEN: Length
                    MSLN = Zero
                }
                Else
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)  // _LEN: Length
                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)  // _MAX: Maximum Base Address
                    M2LN = M64L /* External reference */
                    M2MN = M64B /* External reference */
                    M2MX = ((M2MN + M2LN) - One)
                }

                Return (BUF0) /* \_SB_.PCI0.BUF0 */
            }

            Name (GUID, ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Name (XCNT, Zero)
            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Local0 = Arg3
                CreateDWordField (Local0, Zero, CDW1)
                CreateDWordField (Local0, 0x04, CDW2)
                CreateDWordField (Local0, 0x08, CDW3)
                If ((Arg0 == GUID))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (!NEXP)
                    {
                        CTRL &= 0xFFFFFFF8
                    }

                    If (((TBTS == One) && (TNAT == One)))
                    {
                        CTRL &= 0xFFFFFFF7
                    }

                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One))
                        {
                            NHPG ()
                        }

                        If ((CTRL & 0x04))
                        {
                            NPME ()
                        }
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    OSCC = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Local0)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Local0)
                }
            }

            Scope (\_SB.PCI0)
            {
                Device (GFX0)
                {
                    Name (_ADR, 0x00020000)  // _ADR: Address
                }

                Device (B0D4)
                {
                    Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                    {
                        If (PCIC (Arg0))
                        {
                            Return (PCID (Arg0, Arg1, Arg2, Arg3))
                        }

                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Name (_ADR, 0x00040000)  // _ADR: Address
                }
            }

            Scope (\_SB.PCI0)
            {
                Name (PALK, Zero)
                Name (PA0H, Zero)
                Name (PA1H, Zero)
                Name (PA1L, Zero)
                Name (PA2H, Zero)
                Name (PA2L, Zero)
                Name (PA3H, Zero)
                Name (PA3L, Zero)
                Name (PA4H, Zero)
                Name (PA4L, Zero)
                Name (PA5H, Zero)
                Name (PA5L, Zero)
                Name (PA6H, Zero)
                Name (PA6L, Zero)
                Method (NPTS, 1, NotSerialized)
                {
                    PA0H = PM0H /* \_SB_.PCI0.PM0H */
                    PALK = PMLK /* \_SB_.PCI0.PMLK */
                    PA1H = PM1H /* \_SB_.PCI0.PM1H */
                    PA1L = PM1L /* \_SB_.PCI0.PM1L */
                    PA2H = PM2H /* \_SB_.PCI0.PM2H */
                    PA2L = PM2L /* \_SB_.PCI0.PM2L */
                    PA3H = PM3H /* \_SB_.PCI0.PM3H */
                    PA3L = PM3L /* \_SB_.PCI0.PM3L */
                    PA4H = PM4H /* \_SB_.PCI0.PM4H */
                    PA4L = PM4L /* \_SB_.PCI0.PM4L */
                    PA5H = PM5H /* \_SB_.PCI0.PM5H */
                    PA5L = PM5L /* \_SB_.PCI0.PM5L */
                    PA6H = PM6H /* \_SB_.PCI0.PM6H */
                    PA6L = PM6L /* \_SB_.PCI0.PM6L */
                }

                Method (NWAK, 1, NotSerialized)
                {
                    PM0H = PA0H /* \_SB_.PCI0.PA0H */
                    PM1H = PA1H /* \_SB_.PCI0.PA1H */
                    PM1L = PA1L /* \_SB_.PCI0.PA1L */
                    PM2H = PA2H /* \_SB_.PCI0.PA2H */
                    PM2L = PA2L /* \_SB_.PCI0.PA2L */
                    PM3H = PA3H /* \_SB_.PCI0.PA3H */
                    PM3L = PA3L /* \_SB_.PCI0.PA3L */
                    PM4H = PA4H /* \_SB_.PCI0.PA4H */
                    PM4L = PA4L /* \_SB_.PCI0.PA4L */
                    PM5H = PA5H /* \_SB_.PCI0.PA5H */
                    PM5L = PA5L /* \_SB_.PCI0.PA5L */
                    PM6H = PA6H /* \_SB_.PCI0.PA6H */
                    PM6L = PA6L /* \_SB_.PCI0.PA6L */
                    PMLK = PALK /* \_SB_.PCI0.PALK */
                }
            }

            Device (PEG0)
            {
                Name (_ADR, 0x00010000)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR01) /* \_SB_.AR01 */
                    }

                    Return (PR01) /* \_SB_.PR01 */
                }

                Device (PEGP)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (PEG1)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR02) /* \_SB_.AR02 */
                    }

                    Return (PR02) /* \_SB_.PR02 */
                }

                Device (PEGP)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (PEG2)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR03) /* \_SB_.AR03 */
                    }

                    Return (PR03) /* \_SB_.PR03 */
                }

                Device (PEGP)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Device (LPCB)
            {
                Name (_ADR, 0x001F0000)  // _ADR: Address
                Scope (\_SB.PCI0.LPCB)
                {
                }

                Method (SPTS, 1, NotSerialized)
                {
                    SLPX = One
                    SLPE = One
                    If ((Arg0 == 0x03))
                    {
                        AES3 = One
                    }
                }

                Method (SWAK, 1, NotSerialized)
                {
                    SLPE = Zero
                    AES3 = Zero
                    If (RTCS){}
                    Else
                    {
                        Notify (PWRB, 0x02) // Device Wake
                    }
                }

                OperationRegion (SMIE, SystemIO, PMBA, 0x04)
                Field (SMIE, ByteAcc, NoLock, Preserve)
                {
                        ,   10, 
                    RTCS,   1, 
                        ,   3, 
                    PEXS,   1, 
                    WAKS,   1, 
                    Offset (0x03), 
                    PWBT,   1, 
                    Offset (0x04)
                }

                OperationRegion (SLPR, SystemIO, SMCR, 0x08)
                Field (SLPR, ByteAcc, NoLock, Preserve)
                {
                        ,   4, 
                    SLPE,   1, 
                        ,   31, 
                    SLPX,   1, 
                    Offset (0x08)
                }

                OperationRegion (CPSB, SystemMemory, 0xD2220F98, 0x10)
                Field (CPSB, AnyAcc, NoLock, Preserve)
                {
                    RTCX,   1, 
                    SBB0,   7, 
                    SBB1,   8, 
                    SBB2,   8, 
                    SBB3,   8, 
                    SBB4,   8, 
                    SBB5,   8, 
                    SBB6,   8, 
                    SBB7,   8, 
                    SBB8,   8, 
                    SBB9,   8, 
                    SBBA,   8, 
                    SBBB,   8, 
                    SBBC,   8, 
                    SBBD,   8, 
                    SBBE,   8, 
                    SBBF,   8
                }

                Device (SIO1)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y10)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y11)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y12)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y13)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (((SP1O < 0x03F0) && (SP1O > 0xF0)))
                        {
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y10._MIN, GPI0)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y10._MAX, GPI1)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.LPCB.SIO1._Y10._LEN, GPIL)  // _LEN: Length
                            GPI0 = SP1O /* \SP1O */
                            GPI1 = SP1O /* \SP1O */
                            GPIL = 0x02
                        }

                        If (IO1B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y11._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y11._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.LPCB.SIO1._Y11._LEN, GPL1)  // _LEN: Length
                            GP10 = IO1B /* \IO1B */
                            GP11 = IO1B /* \IO1B */
                            GPL1 = IO1L /* \IO1L */
                        }

                        If (IO2B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y12._MIN, GP20)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y12._MAX, GP21)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.LPCB.SIO1._Y12._LEN, GPL2)  // _LEN: Length
                            GP20 = IO2B /* \IO2B */
                            GP21 = IO2B /* \IO2B */
                            GPL2 = IO2L /* \IO2L */
                        }

                        If (IO3B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y13._MIN, GP30)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.LPCB.SIO1._Y13._MAX, GP31)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.LPCB.SIO1._Y13._LEN, GPL3)  // _LEN: Length
                            GP30 = IO3B /* \IO3B */
                            GP31 = IO3B /* \IO3B */
                            GPL3 = IO3L /* \IO3L */
                        }

                        Return (CRS) /* \_SB_.PCI0.LPCB.SIO1.CRS_ */
                    }

                    Name (DCAT, Package (0x15)
                    {
                        0x02, 
                        0x03, 
                        One, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0x05, 
                        0xFF, 
                        0x06, 
                        0xFF, 
                        0xFF, 
                        0xFF, 
                        0xFF
                    })
                    Mutex (MUT0, 0x00)
                    Method (ENFG, 1, NotSerialized)
                    {
                        Acquire (MUT0, 0x0FFF)
                        INDX = ENTK /* \ENTK */
                        INDX = ENTK /* \ENTK */
                        LDN = Arg0
                    }

                    Method (EXFG, 0, NotSerialized)
                    {
                        INDX = EXTK /* \EXTK */
                        Release (MUT0)
                    }

                    Method (LPTM, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT0 & 0x02)
                        EXFG ()
                        Return (Local0)
                    }

                    Method (UHID, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT1 & 0x10)
                        EXFG ()
                        If (Local0)
                        {
                            Return (0x1005D041)
                        }
                        Else
                        {
                            Return (0x0105D041)
                        }
                    }

                    OperationRegion (IOID, SystemIO, SP1O, 0x02)
                    Field (IOID, ByteAcc, NoLock, Preserve)
                    {
                        INDX,   8, 
                        DATA,   8
                    }

                    IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x07), 
                        LDN,    8, 
                        Offset (0x1B), 
                        CR1B,   8, 
                        Offset (0x21), 
                        SCF1,   8, 
                        SCF2,   8, 
                        SCF3,   8, 
                        SCF4,   8, 
                        SCF5,   8, 
                        SCF6,   8, 
                        Offset (0x29), 
                        CKCF,   8, 
                        Offset (0x2D), 
                        CR2D,   8, 
                        Offset (0x30), 
                        ACTR,   8, 
                        Offset (0x60), 
                        IOAH,   8, 
                        IOAL,   8, 
                        IOH2,   8, 
                        IOL2,   8, 
                        Offset (0x70), 
                        INTR,   4, 
                        INTT,   4, 
                        Offset (0x74), 
                        DMCH,   8, 
                        Offset (0xE0), 
                        RGE0,   8, 
                        RGE1,   8, 
                        RGE2,   8, 
                        RGE3,   8, 
                        RGE4,   8, 
                        RGE5,   8, 
                        RGE6,   8, 
                        RGE7,   8, 
                        RGE8,   8, 
                        RGE9,   8, 
                        Offset (0xF0), 
                        OPT0,   8, 
                        OPT1,   8, 
                        OPT2,   8, 
                        OPT3,   8, 
                        OPT4,   8, 
                        OPT5,   8, 
                        OPT6,   8, 
                        OPT7,   8, 
                        OPT8,   8, 
                        OPT9,   8, 
                        OPTA,   8, 
                        OPTB,   8, 
                        OPTC,   8
                    }

                    Method (CGLD, 1, NotSerialized)
                    {
                        Return (DerefOf (DCAT [Arg0]))
                    }

                    Method (DSTA, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = ACTR /* \_SB_.PCI0.LPCB.SIO1.ACTR */
                        EXFG ()
                        If ((Local0 == 0xFF))
                        {
                            Return (Zero)
                        }

                        Local0 &= One
                        If ((Arg0 < 0x10))
                        {
                            IOST |= (Local0 << Arg0)
                        }

                        If (Local0)
                        {
                            Return (0x0F)
                        }
                        ElseIf ((Arg0 < 0x10))
                        {
                            If (((One << Arg0) & IOST))
                            {
                                Return (0x0D)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (ESTA, 1, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = ACTR /* \_SB_.PCI0.LPCB.SIO1.ACTR */
                        EXFG ()
                        If ((Local0 == 0xFF))
                        {
                            Return (Zero)
                        }

                        Local0 &= One
                        If ((Arg0 > 0x0F))
                        {
                            IOES |= (Local0 << (Arg0 & 0x0F))
                        }

                        If (Local0)
                        {
                            Return (0x0F)
                        }
                        ElseIf ((Arg0 > 0x0F))
                        {
                            If (((One << (Arg0 & 0x0F)) & IOES))
                            {
                                Return (0x0D)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (DCNT, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        If (((DMCH < 0x04) && ((Local1 = (DMCH & 0x03)) != Zero)))
                        {
                            RDMA (Arg0, Arg1, Local1++)
                        }

                        ACTR = Arg1
                        Local1 = (IOAH << 0x08)
                        Local1 |= IOAL
                        RRIO (Arg0, Arg1, Local1, 0x08)
                        EXFG ()
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y16)
                        IRQNoFlags (_Y14)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y15)
                            {}
                    })
                    CreateWordField (CRS1, \_SB.PCI0.LPCB.SIO1._Y14._INT, IRQM)  // _INT: Interrupts
                    CreateByteField (CRS1, \_SB.PCI0.LPCB.SIO1._Y15._DMA, DMAM)  // _DMA: Direct Memory Access
                    CreateWordField (CRS1, \_SB.PCI0.LPCB.SIO1._Y16._MIN, IO11)  // _MIN: Minimum Base Address
                    CreateWordField (CRS1, \_SB.PCI0.LPCB.SIO1._Y16._MAX, IO12)  // _MAX: Maximum Base Address
                    CreateByteField (CRS1, \_SB.PCI0.LPCB.SIO1._Y16._LEN, LEN1)  // _LEN: Length
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y19)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y1A)
                        IRQNoFlags (_Y17)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y18)
                            {}
                    })
                    CreateWordField (CRS2, \_SB.PCI0.LPCB.SIO1._Y17._INT, IRQE)  // _INT: Interrupts
                    CreateByteField (CRS2, \_SB.PCI0.LPCB.SIO1._Y18._DMA, DMAE)  // _DMA: Direct Memory Access
                    CreateWordField (CRS2, \_SB.PCI0.LPCB.SIO1._Y19._MIN, IO21)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.LPCB.SIO1._Y19._MAX, IO22)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.LPCB.SIO1._Y19._LEN, LEN2)  // _LEN: Length
                    CreateWordField (CRS2, \_SB.PCI0.LPCB.SIO1._Y1A._MIN, IO31)  // _MIN: Minimum Base Address
                    CreateWordField (CRS2, \_SB.PCI0.LPCB.SIO1._Y1A._MAX, IO32)  // _MAX: Maximum Base Address
                    CreateByteField (CRS2, \_SB.PCI0.LPCB.SIO1._Y1A._LEN, LEN3)  // _LEN: Length
                    Name (CRS3, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x00,               // Length
                            _Y1D)
                        IRQ (Level, ActiveLow, Shared, _Y1B)
                            {}
                        DMA (Compatibility, NotBusMaster, Transfer8, _Y1C)
                            {}
                    })
                    CreateWordField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1B._INT, IRQT)  // _INT: Interrupts
                    CreateByteField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1B._HE, IRQS)  // _HE_: High-Edge
                    CreateByteField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1C._DMA, DMAT)  // _DMA: Direct Memory Access
                    CreateWordField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1D._MIN, IO41)  // _MIN: Minimum Base Address
                    CreateWordField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1D._MAX, IO42)  // _MAX: Maximum Base Address
                    CreateByteField (CRS3, \_SB.PCI0.LPCB.SIO1._Y1D._LEN, LEN4)  // _LEN: Length
                    Method (DCRS, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO11 = (IOAH << 0x08)
                        IO11 |= IOAL /* \_SB_.PCI0.LPCB.SIO1.IO11 */
                        IO12 = IO11 /* \_SB_.PCI0.LPCB.SIO1.IO11 */
                        LEN1 = 0x08
                        If (INTR)
                        {
                            IRQM = (One << INTR) /* \_SB_.PCI0.LPCB.SIO1.INTR */
                        }
                        Else
                        {
                            IRQM = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAM = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAM = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS1) /* \_SB_.PCI0.LPCB.SIO1.CRS1 */
                    }

                    Method (DCR2, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO21 = (IOAH << 0x08)
                        IO21 |= IOAL /* \_SB_.PCI0.LPCB.SIO1.IO21 */
                        IO22 = IO21 /* \_SB_.PCI0.LPCB.SIO1.IO21 */
                        LEN2 = 0x08
                        IO31 = (IOH2 << 0x08)
                        IO31 |= IOL2 /* \_SB_.PCI0.LPCB.SIO1.IO31 */
                        IO32 = IO31 /* \_SB_.PCI0.LPCB.SIO1.IO31 */
                        LEN3 = 0x08
                        If (INTR)
                        {
                            IRQE = (One << INTR) /* \_SB_.PCI0.LPCB.SIO1.INTR */
                        }
                        Else
                        {
                            IRQE = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAE = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAE = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS2) /* \_SB_.PCI0.LPCB.SIO1.CRS2 */
                    }

                    Method (DCR3, 2, NotSerialized)
                    {
                        ENFG (CGLD (Arg0))
                        IO41 = (IOAH << 0x08)
                        IO41 |= IOAL /* \_SB_.PCI0.LPCB.SIO1.IO41 */
                        IO42 = IO41 /* \_SB_.PCI0.LPCB.SIO1.IO41 */
                        LEN4 = 0x08
                        If (INTR)
                        {
                            IRQT = (One << INTR) /* \_SB_.PCI0.LPCB.SIO1.INTR */
                        }
                        Else
                        {
                            IRQT = Zero
                        }

                        If (((DMCH > 0x03) || (Arg1 == Zero)))
                        {
                            DMAT = Zero
                        }
                        Else
                        {
                            Local1 = (DMCH & 0x03)
                            DMAT = (One << Local1)
                        }

                        EXFG ()
                        Return (CRS3) /* \_SB_.PCI0.LPCB.SIO1.CRS3 */
                    }

                    Method (DSRS, 2, NotSerialized)
                    {
                        If (((Arg1 == 0x02) & LPTM (Arg1)))
                        {
                            DSR2 (Arg0, Arg1)
                        }
                        Else
                        {
                            CreateWordField (Arg0, 0x09, IRQM)
                            CreateByteField (Arg0, 0x0C, DMAM)
                            CreateWordField (Arg0, 0x02, IO11)
                            ENFG (CGLD (Arg1))
                            IOAL = (IO11 & 0xFF)
                            IOAH = (IO11 >> 0x08)
                            If (IRQM)
                            {
                                FindSetRightBit (IRQM, Local0)
                                INTR = (Local0 - One)
                            }
                            Else
                            {
                                INTR = Zero
                            }

                            If (DMAM)
                            {
                                FindSetRightBit (DMAM, Local0)
                                DMCH = (Local0 - One)
                            }
                            Else
                            {
                                DMCH = 0x04
                            }

                            EXFG ()
                            DCNT (Arg1, One)
                        }
                    }

                    Method (DSR2, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x11, IRQE)
                        CreateByteField (Arg0, 0x14, DMAE)
                        CreateWordField (Arg0, 0x02, IO21)
                        CreateWordField (Arg0, 0x0A, IO31)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO21 & 0xFF)
                        IOAH = (IO21 >> 0x08)
                        IOL2 = (IO31 & 0xFF)
                        IOH2 = (IO31 >> 0x08)
                        If (IRQE)
                        {
                            FindSetRightBit (IRQE, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAE)
                        {
                            FindSetRightBit (DMAE, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                    }

                    Method (DSR3, 2, NotSerialized)
                    {
                        CreateWordField (Arg0, 0x02, IO41)
                        CreateWordField (Arg0, 0x09, IRQT)
                        CreateByteField (Arg0, 0x0B, IRQS)
                        CreateByteField (Arg0, 0x0D, DMAT)
                        ENFG (CGLD (Arg1))
                        IOAL = (IO41 & 0xFF)
                        IOAH = (IO41 >> 0x08)
                        If (IRQT)
                        {
                            FindSetRightBit (IRQT, Local0)
                            INTR = (Local0 - One)
                        }
                        Else
                        {
                            INTR = Zero
                        }

                        If (DMAT)
                        {
                            FindSetRightBit (DMAT, Local0)
                            DMCH = (Local0 - One)
                        }
                        Else
                        {
                            DMCH = 0x04
                        }

                        EXFG ()
                        DCNT (Arg1, One)
                    }

                    Name (PMFG, Zero)
                    Method (SIOS, 1, NotSerialized)
                    {
                        Debug = "SIOS"
                        If ((0x05 != Arg0))
                        {
                            ENFG (0x0A)
                            If (KBFG)
                            {
                                OPTB |= 0x02
                                RGE4 |= 0x40
                            }
                            Else
                            {
                                OPTB &= 0xFD
                                RGE4 &= 0xBF
                            }

                            If (MSFG)
                            {
                                OPTB |= One
                                RGE4 |= 0x80
                            }
                            Else
                            {
                                OPTB &= 0xFE
                                RGE4 &= 0x7F
                            }

                            OPT9 = 0xFF
                            OPTA = 0xFF
                            CR1B |= 0x04
                            EXFG ()
                        }
                    }

                    Method (SIOW, 1, NotSerialized)
                    {
                        Debug = "SIOW"
                        ENFG (0x0A)
                        PMFG = OPT9 /* \_SB_.PCI0.LPCB.SIO1.OPT9 */
                        OPT9 &= 0xFF
                        CR1B &= 0xFB
                        OPTB &= Zero
                        OPTC &= Zero
                        EXFG ()
                    }

                    Method (SIOH, 0, NotSerialized)
                    {
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x1D, 0x03))
                    }
                }

                Device (LPTE)
                {
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, One)
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        If (^^SIO1.LPTM (0x02))
                        {
                            Return (0x0104D041)
                        }
                        Else
                        {
                            Return (0x0004D041)
                        }
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (^^SIO1.DSTA (0x02))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        ^^SIO1.DCNT (0x02, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        ^^SIO1.DCRS (0x02, One)
                        If ((^^SIO1.IO11 & 0x04))
                        {
                            ^^SIO1.LEN1 = 0x04
                        }

                        If (^^SIO1.LPTM (0x02))
                        {
                            ^^SIO1.IRQE = ^^SIO1.IRQM /* \_SB_.PCI0.LPCB.SIO1.IRQM */
                            ^^SIO1.DMAE = ^^SIO1.DMAM /* \_SB_.PCI0.LPCB.SIO1.DMAM */
                            ^^SIO1.IO21 = ^^SIO1.IO11 /* \_SB_.PCI0.LPCB.SIO1.IO11 */
                            ^^SIO1.IO22 = ^^SIO1.IO12 /* \_SB_.PCI0.LPCB.SIO1.IO12 */
                            ^^SIO1.LEN2 = ^^SIO1.LEN1 /* \_SB_.PCI0.LPCB.SIO1.LEN1 */
                            ^^SIO1.IO31 = (^^SIO1.IO21 + 0x0400)
                            ^^SIO1.IO32 = ^^SIO1.IO31 /* \_SB_.PCI0.LPCB.SIO1.IO31 */
                            ^^SIO1.LEN3 = ^^SIO1.LEN2 /* \_SB_.PCI0.LPCB.SIO1.LEN2 */
                            Return (^^SIO1.CRS2) /* \_SB_.PCI0.LPCB.SIO1.CRS2 */
                        }
                        Else
                        {
                            Return (^^SIO1.CRS1) /* \_SB_.PCI0.LPCB.SIO1.CRS1 */
                        }
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        ^^SIO1.DSRS (Arg0, 0x02)
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        If (^^SIO1.LPTM (0x02))
                        {
                            Return (EPPR) /* \_SB_.PCI0.LPCB.LPTE.EPPR */
                        }
                        Else
                        {
                            Return (LPPR) /* \_SB_.PCI0.LPCB.LPTE.LPPR */
                        }
                    }

                    Name (LPPR, ResourceTemplate ()
                    {
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x03BC,             // Range Maximum
                                0x01,               // Alignment
                                0x03,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x03BC,             // Range Maximum
                                0x01,               // Alignment
                                0x03,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                        }
                        EndDependentFn ()
                    })
                    Name (EPPR, ResourceTemplate ()
                    {
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0778,             // Range Minimum
                                0x0778,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0778,             // Range Minimum
                                0x0778,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0778,             // Range Minimum
                                0x0778,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0378,             // Range Minimum
                                0x0378,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0778,             // Range Minimum
                                0x0778,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0678,             // Range Minimum
                                0x0678,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0678,             // Range Minimum
                                0x0678,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0678,             // Range Minimum
                                0x0678,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0278,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IO (Decode16,
                                0x0678,             // Range Minimum
                                0x0678,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x03BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IO (Decode16,
                                0x07BC,             // Range Minimum
                                0x07BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x03BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IO (Decode16,
                                0x07BC,             // Range Minimum
                                0x07BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x03BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IO (Decode16,
                                0x07BC,             // Range Minimum
                                0x07BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {1}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03BC,             // Range Minimum
                                0x0278,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IO (Decode16,
                                0x07BC,             // Range Minimum
                                0x07BC,             // Range Maximum
                                0x01,               // Alignment
                                0x04,               // Length
                                )
                            IRQNoFlags ()
                                {7}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {3}
                        }
                        EndDependentFn ()
                    })
                }

                Device (PS2K)
                {
                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (0x0F)
                        }
                        ElseIf ((VKBC == Zero))
                        {
                            Return (Zero)
                        }
                        ElseIf ((^^^XHC.XOSP () == One))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (0x0F)
                        }
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x0060,             // Range Minimum
                                0x0060,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IO (Decode16,
                                0x0064,             // Range Minimum
                                0x0064,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IRQNoFlags ()
                                {1}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        KBFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (KBFG, One)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x1D, 0x03))
                    }
                }

                Device (PS2M)
                {
                    Name (_HID, EisaId ("PNP0F03") /* Microsoft PS/2-style Mouse */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x05)
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((IOST & 0x4000))
                        {
                            Return (0x0F)
                        }
                        ElseIf ((VKBC == Zero))
                        {
                            Return (Zero)
                        }
                        ElseIf ((^^^XHC.XOSP () == One))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (0x0F)
                        }
                    }

                    Name (CRS1, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {12}
                    })
                    Name (CRS2, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {12}
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If ((IOST & 0x0400))
                        {
                            Return (CRS1) /* \_SB_.PCI0.LPCB.PS2M.CRS1 */
                        }
                        Else
                        {
                            Return (CRS2) /* \_SB_.PCI0.LPCB.PS2M.CRS2 */
                        }
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        MSFG = Arg0
                    }

                    Scope (\)
                    {
                        Name (MSFG, One)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x1D, 0x03))
                    }
                }

                Device (UAR1)
                {
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x03)
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        Return (^^SIO1.UHID (One))
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (^^SIO1.DSTA (One))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        ^^SIO1.DCNT (One, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (^^SIO1.DCRS (One, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        ^^SIO1.DSRS (Arg0, One)
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (UAR2)
                {
                    Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (LDN, 0x02)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (^^SIO1.DSTA (Zero))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        ^^SIO1.DCNT (Zero, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (^^SIO1.DCRS (Zero, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        ^^SIO1.DSRS (Arg0, Zero)
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (PMED)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (LDN, 0x0A)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (HHMD)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (LDN, 0x0B)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }

                Device (SGPI)
                {
                    Name (_HID, EisaId ("PNP0C08") /* ACPI Core Hardware */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Name (LDN, 0x0E)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (RP09)
            {
                Name (_ADR, 0x001D0000)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP09._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP09.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP09.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0C) /* \_SB_.AR0C */
                    }

                    Return (PR0C) /* \_SB_.PR0C */
                }
            }

            Device (RP10)
            {
                Name (_ADR, 0x001D0001)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP10._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP10.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP10.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0D) /* \_SB_.AR0D */
                    }

                    Return (PR0D) /* \_SB_.PR0D */
                }
            }

            Device (RP11)
            {
                Name (_ADR, 0x001D0002)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP11._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP11.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP11.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0E) /* \_SB_.AR0E */
                    }

                    Return (PR0E) /* \_SB_.PR0E */
                }
            }

            Device (RP12)
            {
                Name (_ADR, 0x001D0003)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP12._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP12.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP12.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0F) /* \_SB_.AR0F */
                    }

                    Return (PR0F) /* \_SB_.PR0F */
                }
            }

            Device (RP13)
            {
                Name (_ADR, 0x001D0004)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP13._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP13.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP13.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR10) /* \_SB_.AR10 */
                    }

                    Return (PR10) /* \_SB_.PR10 */
                }
            }

            Device (RP01)
            {
                Name (_ADR, 0x001C0000)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP01._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP01.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP01.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04) /* \_SB_.AR04 */
                    }

                    Return (PR04) /* \_SB_.PR04 */
                }
            }

            Device (RP02)
            {
                Name (_ADR, 0x001C0001)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP02._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP02.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP02.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR05) /* \_SB_.AR05 */
                    }

                    Return (PR05) /* \_SB_.PR05 */
                }
            }

            Device (RP03)
            {
                Name (_ADR, 0x001C0002)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP03._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP03.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP03.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR06) /* \_SB_.AR06 */
                    }

                    Return (PR06) /* \_SB_.PR06 */
                }
            }

            Device (RP04)
            {
                Name (_ADR, 0x001C0003)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP04._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP04.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP04.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR07) /* \_SB_.AR07 */
                    }

                    Return (PR07) /* \_SB_.PR07 */
                }
            }

            Device (RP05)
            {
                Name (_ADR, 0x001C0004)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP05._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP05.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP05.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR08) /* \_SB_.AR08 */
                    }

                    Return (PR08) /* \_SB_.PR08 */
                }
            }

            Device (RP06)
            {
                Name (_ADR, 0x001C0005)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP06._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP06.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP06.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR09) /* \_SB_.AR09 */
                    }

                    Return (PR09) /* \_SB_.PR09 */
                }
            }

            Device (RP07)
            {
                Name (_ADR, 0x001C0006)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP07._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP07.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP07.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0A) /* \_SB_.AR0A */
                    }

                    Return (PR0A) /* \_SB_.PR0A */
                }
            }

            Device (RP08)
            {
                Name (_ADR, 0x001C0007)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP08._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP08.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP08.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0B) /* \_SB_.AR0B */
                    }

                    Return (PR0B) /* \_SB_.PR0B */
                }
            }

            Device (RP17)
            {
                Name (_ADR, 0x001B0004)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP17._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP17.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP17.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR14) /* \_SB_.AR14 */
                    }

                    Return (PR14) /* \_SB_.PR14 */
                }
            }

            Device (RP18)
            {
                Name (_ADR, 0x001B0001)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP18._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP18.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP18.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR15) /* \_SB_.AR15 */
                    }

                    Return (PR15) /* \_SB_.PR15 */
                }
            }

            Device (RP19)
            {
                Name (_ADR, 0x001B0002)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP19._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP19.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP19.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR16) /* \_SB_.AR16 */
                    }

                    Return (PR16) /* \_SB_.PR16 */
                }
            }

            Device (RP20)
            {
                Name (_ADR, 0x001B0003)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP20._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP20.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP20.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR17) /* \_SB_.AR17 */
                    }

                    Return (PR17) /* \_SB_.PR17 */
                }
            }

            Device (RP21)
            {
                Name (_ADR, 0x001B0004)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP21._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP21.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP21.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR18) /* \_SB_.AR18 */
                    }

                    Return (PR18) /* \_SB_.PR18 */
                }
            }

            Device (RP22)
            {
                Name (_ADR, 0x001B0005)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP22._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP22.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP22.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR19) /* \_SB_.AR19 */
                    }

                    Return (PR19) /* \_SB_.PR19 */
                }
            }

            Device (RP23)
            {
                Name (_ADR, 0x001B0006)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP23._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP23.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP23.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR1A) /* \_SB_.AR1A */
                    }

                    Return (PR1A) /* \_SB_.PR1A */
                }
            }

            Device (RP24)
            {
                Name (_ADR, 0x001B0007)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP24._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP24.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP24.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR1B) /* \_SB_.AR1B */
                    }

                    Return (PR1B) /* \_SB_.PR1B */
                }
            }

            Device (RP14)
            {
                Name (_ADR, 0x001D0005)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP14._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP14.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP14.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR11) /* \_SB_.AR11 */
                    }

                    Return (PR11) /* \_SB_.PR11 */
                }
            }

            Device (RP15)
            {
                Name (_ADR, 0x001D0006)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP15._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP15.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP15.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR12) /* \_SB_.AR12 */
                    }

                    Return (PR12) /* \_SB_.PR12 */
                }
            }

            Device (RP16)
            {
                Name (_ADR, 0x001D0007)  // _ADR: Address
                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)
                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }

                Name (LTRV, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Name (OPTS, Buffer (0x02)
                                {
                                     0x00, 0x00                                       // ..
                                })
                                CreateBitField (OPTS, Zero, FUN0)
                                CreateBitField (OPTS, 0x04, FUN4)
                                CreateBitField (OPTS, 0x06, FUN6)
                                CreateBitField (OPTS, 0x08, FUN8)
                                CreateBitField (OPTS, 0x09, FUN9)
                                If ((Arg1 >= 0x02))
                                {
                                    FUN0 = One
                                    If (LTRE)
                                    {
                                        FUN6 = One
                                    }

                                    If (OBFF)
                                    {
                                        FUN4 = One
                                    }

                                    If ((ECR1 == One))
                                    {
                                        If ((Arg1 >= 0x03))
                                        {
                                            FUN8 = One
                                            FUN9 = One
                                        }
                                    }
                                }

                                Return (OPTS) /* \_SB_.PCI0.RP16._DSM.OPTS */
                            }
                            Case (0x04)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (OBFZ)
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }
                            Case (0x06)
                            {
                                If ((Arg1 >= 0x02))
                                {
                                    If (LTRZ)
                                    {
                                        If (((LMSL == Zero) || (LNSL == Zero)))
                                        {
                                            If ((PCHS == SPTH))
                                            {
                                                LMSL = 0x0846
                                                LNSL = 0x0846
                                            }
                                            ElseIf ((PCHS == SPTL))
                                            {
                                                LMSL = 0x1003
                                                LNSL = 0x1003
                                            }
                                        }

                                        LTRV [Zero] = ((LMSL >> 0x0A) & 0x07)
                                        LTRV [One] = (LMSL & 0x03FF)
                                        LTRV [0x02] = ((LNSL >> 0x0A) & 0x07)
                                        LTRV [0x03] = (LNSL & 0x03FF)
                                        Return (LTRV) /* \_SB_.PCI0.RP16.LTRV */
                                    }
                                    Else
                                    {
                                        Return (Zero)
                                    }
                                }
                            }
                            Case (0x08)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (One)
                                    }
                                }
                            }
                            Case (0x09)
                            {
                                If ((ECR1 == One))
                                {
                                    If ((Arg1 >= 0x03))
                                    {
                                        Return (Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }

                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x69, 0x04))
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        If (((TBTS == One) && (SBNR == TBUS)))
                        {
                            Return (TARS) /* \TARS */
                        }
                        Else
                        {
                            Return (HPCE) /* \_SB_.PCI0.RP16.HPCE */
                        }
                    }
                }

                Method (HPME, 0, Serialized)
                {
                    If (((VDID != 0xFFFFFFFF) && (PMSX == One)))
                    {
                        Notify (PXSX, 0x02) // Device Wake
                        PMSX = One
                        PSPX = One
                    }
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    LTRZ = LTR1 /* \LTR1 */
                    LMSL = PML1 /* \PML1 */
                    LNSL = PNL1 /* \PNL1 */
                    OBFZ = OBF1 /* \OBF1 */
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x69, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR13) /* \_SB_.AR13 */
                    }

                    Return (PR13) /* \_SB_.PR13 */
                }
            }
        }
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S3, Package (0x04)  // _S3_: S3 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x06, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })
    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        If (Arg0)
        {
            RPOP (Arg0)
            \_SB.TPM.TPTS (Arg0)
            \_SB.PCI0.LPCB.SIO1.SIOS (Arg0)
            \_SB.PCI0.LPCB.SPTS (Arg0)
            \_SB.PCI0.NPTS (Arg0)
            RPTS (Arg0)
        }
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        RWAK (Arg0)
        \_SB.PCI0.NWAK (Arg0)
        \_SB.PCI0.LPCB.SWAK (Arg0)
        \_SB.PCI0.LPCB.SIO1.SIOW (Arg0)
        DFOR (Arg0)
        Return (WAKP) /* \WAKP */
    }

    Scope (_PR)
    {
        Processor (CPU0, 0x01, 0x00001810, 0x06){}
        Processor (CPU1, 0x02, 0x00001810, 0x06){}
        Processor (CPU2, 0x03, 0x00001810, 0x06){}
        Processor (CPU3, 0x04, 0x00001810, 0x06){}
        Processor (CPU4, 0x05, 0x00001810, 0x06){}
        Processor (CPU5, 0x06, 0x00001810, 0x06){}
        Processor (CPU6, 0x07, 0x00001810, 0x06){}
        Processor (CPU7, 0x08, 0x00001810, 0x06){}
    }

    Scope (_PR.CPU0)
    {
        Name (CPC2, Package (0x15)
        {
            0x15, 
            0x02, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000000000CE, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }, 

            One, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x0A,               // Bit Width
                    0x20,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            Zero
        })
        Name (CPOC, Package (0x15)
        {
            0x15, 
            0x02, 
            0xFF, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000000000CE, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }, 

            One, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x0A,               // Bit Width
                    0x20,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            Zero
        })
    }

    Scope (_SB)
    {
        Device (PAGD)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (_OSI ("Processor Aggregator Device"))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_PUR, Package (0x02)  // _PUR: Processor Utilization Request
            {
                One, 
                Zero
            })
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PDRC)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (BUF0, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y1E)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y1F)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y20)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y21)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y22)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y23)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1E._BAS, MBR0)  // _BAS: Base Address
                MBR0 = GMHB ()
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1F._BAS, DBR0)  // _BAS: Base Address
                DBR0 = GDMB ()
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y20._BAS, EBR0)  // _BAS: Base Address
                EBR0 = GEPB ()
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y21._BAS, XBR0)  // _BAS: Base Address
                XBR0 = GPCB ()
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y21._LEN, XSZ0)  // _LEN: Length
                XSZ0 = GPCL ()
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y22._BAS, SXRA)  // _BAS: Base Address
                SXRA = SXRB /* \SXRB */
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y22._LEN, SXRL)  // _LEN: Length
                SXRL = SXRS /* \SXRS */
                If (!HPTE)
                {
                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y23._BAS, HBAS)  // _BAS: Base Address
                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y23._LEN, HLEN)  // _LEN: Length
                    HBAS = HPTB /* \HPTB */
                    HLEN = 0x0400
                }

                Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
            }
        }
    }

    Method (BRTN, 1, Serialized)
    {
        If (((DIDX & 0x0F00) == 0x0400))
        {
            Notify (\_SB.PCI0.GFX0.DD1F, Arg0)
        }
    }

    Name (PNVB, 0xD2A90018)
    Name (PNVL, 0x022F)
    If ((ECR1 == One))
    {
        Scope (_SB.PCI0)
        {
            Name (PCIG, ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */)
            Method (PCID, 4, Serialized)
            {
                If ((Arg0 == PCIG))
                {
                    If ((Arg1 >= 0x03))
                    {
                        If ((Arg2 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0x01, 0x03                                       // ..
                            })
                        }

                        If ((Arg2 == 0x08))
                        {
                            Return (One)
                        }

                        If ((Arg2 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xC350, 
                                Ones, 
                                Ones, 
                                0xC350, 
                                Ones
                            })
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Method (PCIC, 1, Serialized)
        {
            If ((ECR1 == One))
            {
                If ((Arg0 == PCIG))
                {
                    Return (One)
                }
            }

            Return (Zero)
        }
    }

    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)
    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        PCHS,   16, 
        PCHG,   16, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        RPA8,   32, 
        RPA9,   32, 
        RPAA,   32, 
        RPAB,   32, 
        RPAC,   32, 
        RPAD,   32, 
        RPAE,   32, 
        RPAF,   32, 
        RPAG,   32, 
        RPAH,   32, 
        RPAI,   32, 
        RPAJ,   32, 
        RPAK,   32, 
        RPAL,   32, 
        RPAM,   32, 
        RPAN,   32, 
        RPAO,   32, 
        NHLA,   64, 
        NHLL,   32, 
        ADFM,   32, 
        SBRG,   32, 
        GPEM,   32, 
        G2L0,   32, 
        G2L1,   32, 
        G2L2,   32, 
        G2L3,   32, 
        G2L4,   32, 
        G2L5,   32, 
        G2L6,   32, 
        G2L7,   32, 
        G2L8,   32, 
        G2L9,   32, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PML9,   16, 
        PMLA,   16, 
        PMLB,   16, 
        PMLC,   16, 
        PMLD,   16, 
        PMLE,   16, 
        PMLF,   16, 
        PMLG,   16, 
        PMLH,   16, 
        PMLI,   16, 
        PMLJ,   16, 
        PMLK,   16, 
        PMLL,   16, 
        PMLM,   16, 
        PMLN,   16, 
        PMLO,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        PNL9,   16, 
        PNLA,   16, 
        PNLB,   16, 
        PNLC,   16, 
        PNLD,   16, 
        PNLE,   16, 
        PNLF,   16, 
        PNLG,   16, 
        PNLH,   16, 
        PNLI,   16, 
        PNLJ,   16, 
        PNLK,   16, 
        PNLL,   16, 
        PNLM,   16, 
        PNLN,   16, 
        PNLO,   16, 
        U0C0,   32, 
        U1C0,   32, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        HPTB,   32, 
        HPTE,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SMD8,   8, 
        SMD9,   8, 
        SMDA,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SIR8,   8, 
        SIR9,   8, 
        SIRA,   8, 
        SB00,   32, 
        SB01,   32, 
        SB02,   32, 
        SB03,   32, 
        SB04,   32, 
        SB05,   32, 
        SB06,   32, 
        SB07,   32, 
        SB08,   32, 
        SB09,   32, 
        SB0A,   32, 
        SB10,   32, 
        SB11,   32, 
        SB12,   32, 
        SB13,   32, 
        SB14,   32, 
        SB15,   32, 
        SB16,   32, 
        SB17,   32, 
        SB18,   32, 
        SB19,   32, 
        SB1A,   32, 
        GPEN,   8, 
        SGIR,   8, 
        NIT1,   8, 
        NIT2,   8, 
        NIT3,   8, 
        NPM1,   8, 
        NPM2,   8, 
        NPM3,   8, 
        NPC1,   8, 
        NPC2,   8, 
        NPC3,   8, 
        NL11,   16, 
        NL12,   16, 
        NL13,   16, 
        ND21,   8, 
        ND22,   8, 
        ND23,   8, 
        ND11,   32, 
        ND12,   32, 
        ND13,   32, 
        NLR1,   16, 
        NLR2,   16, 
        NLR3,   16, 
        NLD1,   32, 
        NLD2,   32, 
        NLD3,   32, 
        NEA1,   16, 
        NEA2,   16, 
        NEA3,   16, 
        NEB1,   16, 
        NEB2,   16, 
        NEB3,   16, 
        NEC1,   16, 
        NEC2,   16, 
        NEC3,   16, 
        NRA1,   16, 
        NRA2,   16, 
        NRA3,   16, 
        NMB1,   32, 
        NMB2,   32, 
        NMB3,   32, 
        NMV1,   32, 
        NMV2,   32, 
        NMV3,   32, 
        NPB1,   32, 
        NPB2,   32, 
        NPB3,   32, 
        NPV1,   32, 
        NPV2,   32, 
        NPV3,   32, 
        NRP1,   32, 
        NRP2,   32, 
        NRP3,   32, 
        Offset (0x20A), 
        SXRB,   32, 
        SXRS,   32, 
        CIOE,   8, 
        CIOI,   8, 
        TAEN,   8, 
        TIRQ,   8, 
        XWMB,   32, 
        EMH4,   8, 
        EMDS,   8, 
        CSKU,   8, 
        ITA0,   16, 
        ITA1,   16, 
        ITA2,   16, 
        ITA3,   16, 
        ITS0,   8, 
        ITS1,   8, 
        ITS2,   8, 
        ITS3,   8, 
        PMBS,   16, 
        PWRM,   32
    }

    Scope (_SB)
    {
        Name (GPCL, Package (0x08)
        {
            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0580, 
                0xD8, 
                0x40, 
                0x0148
            }, 

            Package (0x06)
            {
                0x00AC0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AC0000, 
                0x08, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 

            Package (0x06)
            {
                0x00AD0000, 
                0x0C, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }
        })
        Name (GPCH, Package (0x0A)
        {
            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x2C, 
                0x0144
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x2C, 
                0x0144
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x0D, 
                0x0580, 
                0xD8, 
                0x38, 
                0x0148
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x05E8, 
                0xDC, 
                0x40, 
                0x014C
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x06A8, 
                0xE0, 
                0x4C, 
                0x0150
            }, 

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0768, 
                0xE4, 
                0x58, 
                0x0154
            }, 

            Package (0x06)
            {
                0x00AC0000, 
                0x0B, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 

            Package (0x06)
            {
                0x00AD0000, 
                0x0C, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }
        })
        Name (RXEV, Package (0x0A)
        {
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x18){}, 
            Buffer (0x0B){}, 
            Buffer (0x0C){}
        })
    }

    Scope (_SB)
    {
        Method (GINF, 2, NotSerialized)
        {
            If ((PCHS == SPTL))
            {
                Return (DerefOf (DerefOf (GPCL [Arg0]) [Arg1]))
            }
            Else
            {
                Return (DerefOf (DerefOf (GPCH [Arg0]) [Arg1]))
            }
        }

        Method (GMXG, 0, NotSerialized)
        {
            If ((PCHS == SPTL))
            {
                Return (0x08)
            }
            Else
            {
                Return (0x0A)
            }
        }

        Method (GADR, 2, NotSerialized)
        {
            Local0 = (GINF (Arg0, Zero) + SBRG)
            Local1 = GINF (Arg0, Arg1)
            Return ((Local0 + Local1))
        }

        Method (GNUM, 1, NotSerialized)
        {
            Local0 = GNMB (Arg0)
            Local1 = GGRP (Arg0)
            Return ((Local0 + (Local1 * 0x18)))
        }

        Method (INUM, 1, NotSerialized)
        {
            Local1 = GNMB (Arg0)
            Local2 = GGRP (Arg0)
            Local3 = Zero
            While ((Local3 < Local2))
            {
                Local1 += GINF (Local3, One)
                Local3++
            }

            Return ((0x18 + (Local1 % 0x60)))
        }

        Method (GGRP, 1, Serialized)
        {
            Local0 = ((Arg0 & 0x00FF0000) >> 0x10)
            Return (Local0)
        }

        Method (GNMB, 1, Serialized)
        {
            Return ((Arg0 & 0xFFFF))
        }

        Method (GGPE, 1, NotSerialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            If ((((GPEM >> (Local0 * 0x02)) & 0x03) == 
                Zero))
            {
                Return (0x6F)
            }
            Else
            {
                Local2 = ((GPEM >> (Local0 * 0x02)) & 0x03)
                Return ((((Local2 - One) * 0x20) + Local1))
            }
        }

        Method (GPC0, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC0.TEMP */
        }

        Method (SPC0, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (GPC1, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC1.TEMP */
        }

        Method (SPC1, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (SRXO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GGIV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGIV.TEMP */
        }

        Method (GGOV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGOV.TEMP */
        }

        Method (SGOV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GGII, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGII.TEMP */
        }

        Method (SGII, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GPMV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GPMV.TEMP */
        }

        Method (SPMV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GHPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local3 = (GADR (Local0, 0x03) + ((Local1 >> 0x05) * 0x04))
            Local4 = (Local1 & 0x1F)
            OperationRegion (PREG, SystemMemory, Local3, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> Local4) & One))
        }

        Method (SHPO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local3 = (GADR (Local0, 0x03) + ((Local1 >> 0x05) * 0x04))
            Local4 = (Local1 & 0x1F)
            OperationRegion (PREG, SystemMemory, Local3, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            If (Arg1)
            {
                TEMP |= (One << Local4)
            }
            Else
            {
                TEMP &= ~(One << Local4)
            }
        }

        Method (GGPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x04) + ((Local1 >> 0x03) * 0x04
                ))
            OperationRegion (PREG, SystemMemory, Local2, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> ((Local1 & 0x07) * 0x04)) & 
                0x03))
        }

        Method (SGRA, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   20, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGWP, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x08)) + 
                0x04)
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   4, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (UGPS, 0, Serialized)
        {
        }

        Method (CGPS, 0, Serialized)
        {
        }

        Method (CGLS, 0, Serialized)
        {
        }

        Method (CAGS, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local4 = ((Local1 >> 0x05) * 0x04)
            If ((((GPEM >> (Local0 * 0x02)) & 0x03) == 
                Zero))
            {
                OperationRegion (GPPX, SystemMemory, (GADR (Local0, 0x05) + Local4), 0x04)
                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }

                Local2 = (One << (Local1 % 0x20))
                STSX = Local2
            }
        }

        Method (ISME, 1, NotSerialized)
        {
            If ((((GPEM >> (Arg0 * 0x02)) & 0x03
                ) != Zero))
            {
                Return (Zero)
            }

            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x05) + ((Local1 >> 0x05) * 0x04))
            Local3 = (Local1 & 0x1F)
            OperationRegion (GPPX, SystemMemory, Local2, 0x24)
            Field (GPPX, AnyAcc, NoLock, Preserve)
            {
                STSX,   32, 
                Offset (0x20), 
                GENX,   32
            }

            Return ((((STSX & GENX) >> Local3) & One))
        }

        Method (DIPI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            If ((RCFG != 0x02))
            {
                DerefOf (RXEV [Local0]) [Local1] = RCFG /* \_SB_.DIPI.RCFG */
                RCFG = 0x02
                RDIS = One
            }
        }

        Method (UIPI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x08))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            Local3 = DerefOf (DerefOf (RXEV [Local0]) [Local1])
            If ((Local3 != 0x02))
            {
                RDIS = Zero
                RCFG = Local3
            }
        }
    }

    Scope (\)
    {
        Method (THEN, 0, Serialized)
        {
            OperationRegion (THBA, SystemMemory, 0xFE200000, 0x10)
            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32
            }

            Return ((DO00 != 0xFFFFFFFF))
        }

        Method (THDA, 2, Serialized)
        {
            Local0 = 0xFE200000
            Local0 += (0x40 * (0x80 * (Arg0 - 0x20)))
            Local0 += (0x40 * Arg1)
            Return (Local0)
        }

        Method (STRD, 3, Serialized)
        {
            If (((Arg1 + Arg2) > SizeOf (Arg0)))
            {
                Return (Zero)
            }

            ToBuffer (Arg0, Local3)
            Local0 = Zero
            Local1 = Zero
            While ((Local1 < Arg2))
            {
                Local2 = DerefOf (Local3 [(Arg1 + Local1)])
                Local0 += (Local2 << (0x08 * Local1))
                Local1++
            }

            Return (Local0)
        }

        Method (THDS, 1, Serialized)
        {
            If (!THEN ())
            {
                Return (Zero)
            }

            Local0 = SizeOf (Arg0)
            Local1 = THDA (0x20, 0x16)
            OperationRegion (THBA, SystemMemory, Local1, 0x40)
            Field (THBA, QWordAcc, NoLock, Preserve)
            {
                QO00,   64
            }

            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32, 
                Offset (0x10), 
                DO10,   32, 
                Offset (0x30), 
                DO30,   32
            }

            Field (THBA, WordAcc, NoLock, Preserve)
            {
                WO00,   16
            }

            Field (THBA, ByteAcc, NoLock, Preserve)
            {
                BO00,   8
            }

            DO10 = 0x01000242
            WO00 = Local0
            Local6 = Zero
            Local7 = Local0
            While ((Local7 >= 0x08))
            {
                QO00 = STRD (Arg0, Local6, 0x08)
                Local6 += 0x08
                Local7 -= 0x08
            }

            If ((Local7 >= 0x04))
            {
                DO00 = STRD (Arg0, Local6, 0x04)
                Local6 += 0x04
                Local7 -= 0x04
            }

            If ((Local7 >= 0x02))
            {
                WO00 = STRD (Arg0, Local6, 0x02)
                Local6 += 0x02
                Local7 -= 0x02
            }

            If ((Local7 >= One))
            {
                BO00 = STRD (Arg0, Local6, One)
                Local6 += One
                Local7 -= One
            }

            DO30 = Zero
        }

        Method (THDH, 1, Serialized)
        {
            THDS (ToHexString (Arg0))
        }

        Method (THDD, 1, Serialized)
        {
            THDS (ToDecimalString (Arg0))
        }
    }

    Name (SPTH, One)
    Name (SPTL, 0x02)
    Method (PCHV, 0, NotSerialized)
    {
        If ((PCHS == One))
        {
            Return (SPTH) /* \SPTH */
        }

        If ((PCHS == 0x02))
        {
            Return (SPTL) /* \SPTL */
        }

        Return (Zero)
    }

    Scope (_GPE)
    {
        Method (_L6D, 0, Serialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.PCI0.XHC.GPEH ()
            \_SB.PCI0.HDAS.GPEH ()
            \_SB.PCI0.GLAN.GPEH ()
            \_SB.PCI0.XDCI.GPEH ()
        }
    }

    Scope (_SB.PCI0)
    {
        Name (TEMP, Zero)
        Device (PRRE)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, "PCHRESV")  // _UID: Unique ID
            Name (_STA, 0x03)  // _STA: Status
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFD000000,         // Address Base
                        0x00AC0000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDAD0000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDB00000,         // Address Base
                        0x00500000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE000000,         // Address Base
                        0x00020000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE036000,         // Address Base
                        0x00006000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE03D000,         // Address Base
                        0x003C3000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE410000,         // Address Base
                        0x003F0000,         // Address Length
                        )
                })
                Return (BUF0) /* \_SB_.PCI0.PRRE._CRS.BUF0 */
            }
        }

        Device (IOTR)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, "IoTraps")  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y24)
                })
                Name (BUF1, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y25)
                })
                Name (BUF2, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y26)
                })
                Name (BUF3, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y27)
                })
                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y24._MIN, AMI0)  // _MIN: Minimum Base Address
                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y24._MAX, AMA0)  // _MAX: Maximum Base Address
                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y25._MIN, AMI1)  // _MIN: Minimum Base Address
                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y25._MAX, AMA1)  // _MAX: Maximum Base Address
                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y26._MIN, AMI2)  // _MIN: Minimum Base Address
                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y26._MAX, AMA2)  // _MAX: Maximum Base Address
                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y27._MIN, AMI3)  // _MIN: Minimum Base Address
                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y27._MAX, AMA3)  // _MAX: Maximum Base Address
                AMI0 = ITA0 /* \ITA0 */
                AMA0 = ITA0 /* \ITA0 */
                AMI1 = ITA1 /* \ITA1 */
                AMA1 = ITA1 /* \ITA1 */
                AMI2 = ITA2 /* \ITA2 */
                AMA2 = ITA2 /* \ITA2 */
                AMI3 = ITA3 /* \ITA3 */
                AMA3 = ITA3 /* \ITA3 */
                If ((ITS0 == One))
                {
                    ConcatenateResTemplate (Local0, BUF0, Local1)
                    Local0 = Local1
                }

                If ((ITS1 == One))
                {
                    ConcatenateResTemplate (Local0, BUF1, Local1)
                    Local0 = Local1
                }

                If ((ITS2 == One))
                {
                    ConcatenateResTemplate (Local0, BUF2, Local1)
                    Local0 = Local1
                }

                If ((ITS3 == One))
                {
                    ConcatenateResTemplate (Local0, BUF3, Local1)
                    Local0 = Local1
                }

                Return (Local0)
            }
        }
    }

    Scope (_SB.PCI0.LPCB)
    {
        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        OperationRegion (LPC, PCI_Config, Zero, 0x0100)
        Field (LPC, AnyAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            CDID,   16, 
            Offset (0x08), 
            CRID,   8, 
            Offset (0x80), 
            IOD0,   8, 
            IOD1,   8, 
            Offset (0xA0), 
                ,   9, 
            PRBL,   1, 
            Offset (0xDC), 
                ,   2, 
            ESPI,   1
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PPMC)
        {
            Name (_ADR, 0x001F0002)  // _ADR: Address
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (SBUS)
        {
            Name (_ADR, 0x001F0004)  // _ADR: Address
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB)
    {
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PARC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSA) /* \_SB_.PRSA */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLA, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLA, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PARC & 0x0F))
                Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PARC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PARC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PBRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSB) /* \_SB_.PRSB */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLB, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLB, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PBRC & 0x0F))
                Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PBRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PBRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PCRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSC) /* \_SB_.PRSC */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLC, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLC, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PCRC & 0x0F))
                Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PCRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PCRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PDRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSD) /* \_SB_.PRSD */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLD, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLD, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PDRC & 0x0F))
                Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PDRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PDRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PERC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSE) /* \_SB_.PRSE */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLE, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLE, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PERC & 0x0F))
                Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PERC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PERC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PFRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSF) /* \_SB_.PRSF */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLF, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLF, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PFRC & 0x0F))
                Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PFRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PFRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PGRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSG) /* \_SB_.PRSG */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLG, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLG, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PGRC & 0x0F))
                Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PGRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PGRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {
                PHRC |= 0x80
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSH) /* \_SB_.PRSH */
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RTLH, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })
                CreateWordField (RTLH, One, IRQ0)
                IRQ0 = Zero
                IRQ0 = (One << (PHRC & 0x0F))
                Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Local0--
                PHRC = Local0
            }

            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If ((PHRC & 0x80))
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }
    }

    Scope (\)
    {
        Method (PCRR, 2, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            Return (DAT0) /* \PCRR.DAT0 */
        }

        Method (PCRW, 3, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            DAT0 = Arg2
            Local0 = PCRR (0xC7, 0x3418)
        }

        Method (PCRO, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 | Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCRA, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 & Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCAO, 4, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = ((Local0 & Arg2) | Arg3)
            PCRW (Arg0, Arg1, Local1)
        }

        Name (TCBV, Zero)
        Method (TCBS, 0, NotSerialized)
        {
            If ((TCBV == Zero))
            {
                Local0 = PCRR (0xEF, 0x2778)
                TCBV = (Local0 & 0xFFE0)
            }

            Return (TCBV) /* \TCBV */
        }

        OperationRegion (PMIO, SystemIO, PMBS, 0x60)
        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            Offset (0x01), 
            PBSS,   1, 
            Offset (0x40), 
                ,   17, 
            GPEC,   1
        }

        OperationRegion (TCBA, SystemIO, TCBS (), 0x10)
        Field (TCBA, ByteAcc, NoLock, Preserve)
        {
            Offset (0x04), 
                ,   9, 
            CPSC,   1
        }

        OperationRegion (PWMR, SystemMemory, PWRM, 0x0800)
        Field (PWMR, AnyAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            Offset (0xE2), 
            DWLE,   1, 
            HWLE,   1, 
            Offset (0x31C), 
                ,   13, 
            SLS0,   1, 
                ,   8, 
            XSQD,   1
        }

        OperationRegion (PMST, SystemMemory, PWRM, 0x80)
        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x18), 
                ,   25, 
            USBP,   1, 
            Offset (0x1C), 
            Offset (0x1F), 
            PMFS,   1, 
            Offset (0x20), 
            MPMC,   32, 
                ,   20, 
            UWAB,   1
        }
    }

    Scope (_SB.PCI0)
    {
        Name (LTRZ, Zero)
        Name (OBFZ, Zero)
        Name (LMSL, Zero)
        Name (LNSL, Zero)
        Device (GLAN)
        {
            Name (_ADR, 0x001F0006)  // _ADR: Address
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            OperationRegion (GLBA, PCI_Config, Zero, 0x0100)
            Field (GLBA, AnyAcc, NoLock, Preserve)
            {
                DVID,   16
            }

            Field (GLBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0xCC), 
                Offset (0xCD), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x6D, 0x04))
            }

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
                PMEE = Arg0
            }

            Method (GPEH, 0, NotSerialized)
            {
                If ((DVID == 0xFFFF))
                {
                    Return (Zero)
                }

                If ((PMEE && PMES))
                {
                    PMES = One
                    Notify (GLAN, 0x02) // Device Wake
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (XHC)
        {
            Name (_ADR, 0x00140000)  // _ADR: Address
            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)
            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x10), 
                XADL,   32, 
                XADH,   32, 
                Offset (0x50), 
                    ,   2, 
                STGE,   1, 
                Offset (0xA2), 
                    ,   2, 
                D3HE,   1
            }

            Field (XPRT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }

            Name (XFLT, Zero)
            Method (XOSP, 0, NotSerialized)
            {
                Local0 = (XADH << 0x20)
                Local0 |= XADL /* \_SB_.PCI0.XHC_.XADL */
                Local0 &= 0xFFFFFFFFFFFF0000
                Local0 += 0x8400
                OperationRegion (XMEM, SystemMemory, Local0, 0x0100)
                Field (XMEM, AnyAcc, Lock, Preserve)
                {
                    Offset (0x6C), 
                    Offset (0x6F), 
                    HCOC,   1
                }

                Return (HCOC) /* \_SB_.PCI0.XHC_.XOSP.HCOC */
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                ADBG ("_DSM")
                Local0 = (XADH << 0x20)
                Local0 |= XADL /* \_SB_.PCI0.XHC_.XADL */
                Local0 &= 0xFFFFFFFFFFFFFFF0
                OperationRegion (XMIO, SystemMemory, Local0, 0x9000)
                Field (XMIO, AnyAcc, Lock, Preserve)
                {
                    Offset (0x550), 
                    PCCS,   1, 
                        ,   4, 
                    PPLS,   4, 
                    PTPP,   1, 
                    Offset (0x8420), 
                    PRTM,   2
                }

                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("ac340cb7-e901-45bf-b7e6-2b34ec931e23") /* Unknown UUID */))
                {
                    If ((Arg1 == 0x03))
                    {
                        XFLT = Arg1
                    }

                    If (((PRTM > Zero) && ((Arg1 == 0x05) || (Arg1 == 0x06))))
                    {
                        ADBG ("SSIC")
                        If ((((PCCS == Zero) || (PTPP == Zero)) || ((
                            PPLS >= 0x04) && (PPLS <= 0x0F))))
                        {
                            If ((PPLS == 0x08))
                            {
                                D3HE = One
                            }
                            Else
                            {
                                D3HE = Zero
                            }
                        }
                        Else
                        {
                            D3HE = One
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {
                Return (0x03)
            }

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {
                Return (0x03)
            }

            Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
            {
                Return (0x03)
            }

            Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
            {
                Return (0x03)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((XFLT == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x03)
                }
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x6D, 0x03))
            }

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
                PMEE = Arg0
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (CondRefOf (\_SB.PCI0.XHC.RHUB.INIR))
                {
                    ^RHUB.INIR ()
                }
            }

            Method (GPEH, 0, NotSerialized)
            {
                If ((DVID == 0xFFFF))
                {
                    Return (Zero)
                }

                Local0 = PMES /* \_SB_.PCI0.XHC_.PMES */
                PMES = One
                If ((PMEE && Local0))
                {
                    Notify (XHC, 0x02) // Device Wake
                }
            }

            OperationRegion (XHCP, SystemMemory, (GPCB () + 0x000A0000), 0x0100)
            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }

            Method (USRA, 0, Serialized)
            {
                If ((PCHV () == SPTH))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (SSPA, 0, Serialized)
            {
                If ((PCHV () == SPTH))
                {
                    Return (0x11)
                }
                Else
                {
                    Return (0x0D)
                }
            }

            Name (XRST, Zero)
            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If ((DVID == 0xFFFF))
                {
                    Return (Zero)
                }

                Local2 = MEMB /* \_SB_.PCI0.XHC_.MEMB */
                Local1 = PDBM /* \_SB_.PCI0.XHC_.PDBM */
                PDBM &= 0xFFFFFFFFFFFFFFF9
                D3HE = Zero
                STGE = Zero
                D0D3 = Zero
                MEMB = XWMB /* \XWMB */
                PDBM = (Local1 | 0x02)
                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)
                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                UPSW = Zero
                PDBM &= 0xFFFFFFFFFFFFFFFD
                MEMB = Local2
                PDBM = Local1
                If (CondRefOf (\_SB.PCI0.XHC.PS0X))
                {
                    PS0X ()
                }

                If ((UWAB && ((D0D3 == Zero) || (^^XDCI.D0I3 == Zero))))
                {
                    MPMC = One
                    While (PMFS)
                    {
                        Sleep (0x0A)
                    }
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If ((DVID == 0xFFFF))
                {
                    Return (Zero)
                }

                Local2 = MEMB /* \_SB_.PCI0.XHC_.MEMB */
                Local1 = PDBM /* \_SB_.PCI0.XHC_.PDBM */
                PDBM &= 0xFFFFFFFFFFFFFFF9
                D0D3 = Zero
                MEMB = XWMB /* \XWMB */
                PDBM = (Local1 | 0x02)
                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)
                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                UPSW = 0x03
                PDBM &= 0xFFFFFFFFFFFFFFFD
                D3HE = One
                STGE = One
                D0D3 = 0x03
                MEMB = Local2
                PDBM = Local1
                If (CondRefOf (\_SB.PCI0.XHC.PS3X))
                {
                    PS3X ()
                }

                If ((UWAB && ((D0D3 == 0x03) && ((^^XDCI.D0I3 == 0x03) || (
                    ^^XDCI.DVID == 0xFFFF)))))
                {
                    MPMC = 0x03
                    While (PMFS)
                    {
                        Sleep (0x0A)
                    }
                }
            }

            Method (CUID, 1, Serialized)
            {
                If ((Arg0 == ToUUID ("7c9512a9-1705-4cb4-af7d-506a2423ab71") /* Unknown UUID */))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If ((DVID == 0xFFFF))
                    {
                        Return (Zero)
                    }

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS0X))
                    {
                        PS0X ()
                    }
                }

                Method (_PS2, 0, Serialized)  // _PS2: Power State 2
                {
                    If ((DVID == 0xFFFF))
                    {
                        Return (Zero)
                    }

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS2X))
                    {
                        PS2X ()
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If ((DVID == 0xFFFF))
                    {
                        Return (Zero)
                    }

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS3X))
                    {
                        PS3X ()
                    }
                }

                Device (HS01)
                {
                    Name (_ADR, One)  // _ADR: Address
                }

                Device (HS02)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (HS03)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                }

                Device (HS04)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                }

                Device (HS05)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                }

                Device (HS06)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                }

                Device (HS07)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                }

                Device (HS08)
                {
                    Name (_ADR, 0x08)  // _ADR: Address
                }

                Device (HS09)
                {
                    Name (_ADR, 0x09)  // _ADR: Address
                }

                Device (HS10)
                {
                    Name (_ADR, 0x0A)  // _ADR: Address
                }

                Device (USR1)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((USRA () + Zero))
                    }
                }

                Device (USR2)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((USRA () + One))
                    }
                }

                Device (SS01)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + Zero))
                    }
                }

                Device (SS02)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + One))
                    }
                }

                Device (SS03)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + 0x02))
                    }
                }

                Device (SS04)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + 0x03))
                    }
                }

                Device (SS05)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + 0x04))
                    }
                }

                Device (SS06)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return ((SSPA () + 0x05))
                    }
                }
            }
        }
    }

    If ((PCHV () == SPTH))
    {
        Scope (_SB.PCI0.XHC.RHUB)
        {
            Device (HS11)
            {
                Name (_ADR, 0x0B)  // _ADR: Address
            }

            Device (HS12)
            {
                Name (_ADR, 0x0C)  // _ADR: Address
            }

            Device (HS13)
            {
                Name (_ADR, 0x0D)  // _ADR: Address
            }

            Device (HS14)
            {
                Name (_ADR, 0x0E)  // _ADR: Address
            }

            Device (SS07)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return ((SSPA () + 0x06))
                }
            }

            Device (SS08)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return ((SSPA () + 0x07))
                }
            }

            Device (SS09)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return ((SSPA () + 0x08))
                }
            }

            Device (SS10)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return ((SSPA () + 0x09))
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (XDCI)
        {
            Name (_ADR, 0x00140001)  // _ADR: Address
            OperationRegion (OTGD, PCI_Config, Zero, 0x0100)
            Field (OTGD, DWordAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x10), 
                XDCB,   64
            }

            Field (OTGD, ByteAcc, NoLock, Preserve)
            {
                Offset (0x84), 
                D0I3,   2, 
                Offset (0x85), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }

            Method (XDBA, 0, NotSerialized)
            {
                Return ((XDCB & 0xFFFFFFFFFFFFFF00))
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("732b85d5-b7a7-4a1b-9ba0-4bbd00ffd511") /* Unknown UUID */))
                {
                    If ((Arg1 == One))
                    {
                        Method (SPPS, 2, Serialized)
                        {
                            OperationRegion (XDBW, SystemMemory, XDBA (), 0x00110000)
                            Field (XDBW, WordAcc, NoLock, Preserve)
                            {
                                Offset (0x10F810), 
                                Offset (0x10F811), 
                                U2CP,   2, 
                                U3CP,   2, 
                                Offset (0x10F818), 
                                PUPS,   2, 
                                    ,   1, 
                                PURC,   1, 
                                Offset (0x10F81A), 
                                Offset (0x10F81C), 
                                    ,   3, 
                                UXPE,   2, 
                                Offset (0x10F81E)
                            }

                            Local1 = Arg0
                            Local2 = Arg1
                            If ((Local1 == Zero))
                            {
                                UXPE = Zero
                                Local0 = Zero
                                While ((Local0 < 0x0A))
                                {
                                    Stall (0x64)
                                    Local0++
                                }

                                PUPS = Zero
                                Local0 = Zero
                                While ((Local0 < 0x07D0))
                                {
                                    Stall (0x64)
                                    If (((U2CP == Zero) && (U3CP == Zero)))
                                    {
                                        Break
                                    }

                                    Local0++
                                }

                                If ((U2CP != Zero)){}
                                If ((U3CP != Zero)){}
                                Return (Zero)
                            }

                            If ((Local1 == 0x03))
                            {
                                If ((U2CP != Zero)){}
                                If ((U3CP != Zero)){}
                                PUPS = 0x03
                                Local0 = Zero
                                While ((Local0 < 0x07D0))
                                {
                                    Stall (0x64)
                                    If (((U2CP == 0x03) && (U3CP == 0x03)))
                                    {
                                        Break
                                    }

                                    Local0++
                                }

                                If ((U2CP != 0x03)){}
                                If ((U3CP != 0x03)){}
                                UXPE = Local2
                                Return (Zero)
                            }

                            Return (Zero)
                        }

                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Return (Buffer (One)
                                {
                                     0xF3                                             // .
                                })
                            }
                            Case (One)
                            {
                                Return (One)
                            }
                            Case (0x04)
                            {
                                Local1 = DerefOf (Arg3 [Zero])
                                SPPS (Local1, Zero)
                            }
                            Case (0x05)
                            {
                                If (CondRefOf (\_SB.PCI0.LPCB.H_EC.XDAT))
                                {
                                    If ((^^LPCB.H_EC.XDAT () == One))
                                    {
                                        Notify (XDCI, 0x80) // Status Change
                                    }
                                    Else
                                    {
                                        Notify (XDCI, 0x81) // Information Change
                                    }
                                }

                                Return (Zero)
                            }
                            Case (0x06)
                            {
                                OperationRegion (XDBD, SystemMemory, XDBA (), 0x00110000)
                                Field (XDBD, DWordAcc, NoLock, Preserve)
                                {
                                    Offset (0xC704), 
                                        ,   30, 
                                    CSFR,   1, 
                                    Offset (0xC708)
                                }

                                OperationRegion (XDW2, SystemMemory, XDBA (), 0x00110000)
                                Field (XDW2, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F820), 
                                        ,   13, 
                                    OTHC,   1
                                }

                                If ((OTHC == Zero))
                                {
                                    CSFR = One
                                    Local0 = Zero
                                    While ((Local0 < 0x64))
                                    {
                                        If ((CSFR == Zero))
                                        {
                                            Break
                                        }

                                        Sleep (One)
                                    }
                                }

                                Return (Zero)
                            }
                            Case (0x07)
                            {
                                OperationRegion (XD22, SystemMemory, XDBA (), 0x00110000)
                                Field (XD22, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F818), 
                                    P2PS,   2, 
                                    Offset (0x10F81A)
                                }

                                Local0 = P2PS /* \_SB_.PCI0.XDCI._DSM.P2PS */
                                Return (Local0)
                            }

                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Name (_DDN, "SPT XHCI controller")  // _DDN: DOS Device Name
            Name (_STR, Unicode ("SPT XHCI controller"))  // _STR: Description String
            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                Return (0x03)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((DVID != 0xFFFFFFFF))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x6D, 0x04))
            }

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
                PMEE = Arg0
            }

            Method (GPEH, 0, NotSerialized)
            {
                If ((DVID == 0xFFFF))
                {
                    Return (Zero)
                }

                Local0 = PMES /* \_SB_.PCI0.XDCI.PMES */
                PMES = One
                If ((PMEE && Local0))
                {
                    Notify (XDCI, 0x02) // Device Wake
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (HDAS)
        {
            Name (_ADR, 0x001F0003)  // _ADR: Address
            OperationRegion (HDAR, PCI_Config, Zero, 0x0100)
            Field (HDAR, WordAcc, NoLock, Preserve)
            {
                VDID,   32
            }

            Field (HDAR, ByteAcc, NoLock, Preserve)
            {
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
                PMEE = Arg0
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x6D, 0x04))
            }

            Method (GPEH, 0, NotSerialized)
            {
                If ((VDID == 0xFFFFFFFF))
                {
                    Return (Zero)
                }

                If ((PMEE && PMES))
                {
                    ADBG ("HDAS GPEH")
                    PMES = One
                    Notify (HDAS, 0x02) // Device Wake
                }
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If ((VDID != 0xFFFFFFFF))
                {
                    VMMH (Zero, One)
                }

                If (CondRefOf (\_SB.PCI0.HDAS.PS0X))
                {
                    PS0X ()
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If ((VDID != 0xFFFFFFFF))
                {
                    VMMH (Zero, Zero)
                }

                If (CondRefOf (\_SB.PCI0.HDAS.PS3X))
                {
                    PS3X ()
                }
            }

            Name (NBUF, ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadOnly,
                    0x0000000000000001, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y28, AddressRangeACPI, TypeStatic)
            })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                ADBG ("HDAS _INI")
                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y28._MIN, NBAS)  // _MIN: Minimum Base Address
                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y28._MAX, NMAS)  // _MAX: Maximum Base Address
                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y28._LEN, NLEN)  // _LEN: Length
                NBAS = NHLA /* \NHLA */
                NMAS = (NHLA + (NHLL - One))
                NLEN = NHLL /* \NHLL */
                If ((VDID != 0xFFFFFFFF))
                {
                    VMMH (Zero, One)
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                ADBG ("HDAS _DSM")
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("a69f886e-6ceb-4594-a41f-7b5dce24c553") /* Unknown UUID */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (Zero)
                        {
                            Return (Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }
                        Case (One)
                        {
                            ADBG ("_DSM Fun 1 NHLT")
                            Return (NBUF) /* \_SB_.PCI0.HDAS.NBUF */
                        }
                        Case (0x02)
                        {
                            ADBG ("_DSM Fun 2 FMSK")
                            Return (ADFM) /* \ADFM */
                        }
                        Case (0x03)
                        {
                            ADBG ("_DSM Fun 3 PPMS")
                            If (CondRefOf (\_SB.PCI0.HDAS.PPMS))
                            {
                                Return (PPMS (Arg3))
                            }

                            Return (Zero)
                        }
                        Default
                        {
                            ADBG ("_DSM Fun NOK")
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                    }
                }

                ADBG ("_DSM UUID NOK")
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (SAT0)
        {
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If (CondRefOf (\_SB.PCI0.SAT0.SDSM))
                {
                    Return (SDSM (Arg0, Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Device (PRT0)
            {
                Name (_ADR, 0xFFFF)  // _ADR: Address
            }

            Device (PRT1)
            {
                Name (_ADR, 0x0001FFFF)  // _ADR: Address
            }

            Device (PRT2)
            {
                Name (_ADR, 0x0002FFFF)  // _ADR: Address
            }

            Device (PRT3)
            {
                Name (_ADR, 0x0003FFFF)  // _ADR: Address
            }

            Device (PRT4)
            {
                Name (_ADR, 0x0004FFFF)  // _ADR: Address
            }

            Device (PRT5)
            {
                Name (_ADR, 0x0005FFFF)  // _ADR: Address
            }

            Method (RDCA, 5, Serialized)
            {
                OperationRegion (RPAL, SystemMemory, (GPCB () + (0x000B8100 + Arg1)), 0x04)
                Field (RPAL, DWordAcc, Lock, Preserve)
                {
                    RPCD,   32
                }

                OperationRegion (EPAC, SystemMemory, (GPCB () + 0x000B8308), 0x08)
                Field (EPAC, DWordAcc, Lock, Preserve)
                {
                    CAIR,   32, 
                    CADR,   32
                }

                OperationRegion (NCRG, SystemMemory, (GPCB () + 0x000B8FC0), 0x04)
                Field (NCRG, DWordAcc, Lock, Preserve)
                {
                    CRGC,   32
                }

                If ((Arg0 > 0x02))
                {
                    Return (Zero)
                }
                Else
                {
                    CRGC = Arg0
                }

                Switch (ToInteger (Arg4))
                {
                    Case (Zero)
                    {
                        Return (RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                    }
                    Case (0x02)
                    {
                        CAIR = Arg1
                        Return (CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                    }
                    Case (One)
                    {
                        Local0 = (Arg2 & RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                        Local0 |= Arg3
                        RPCD = Local0
                    }
                    Case (0x03)
                    {
                        CAIR = Arg1
                        Local0 = (Arg2 & CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                        Local0 |= Arg3
                        CADR = Local0
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }

                Return (Zero)
            }

            Method (ARPC, 4, Serialized)
            {
                ADBG (Concatenate ("NRPN: ", ToHexString (Arg0)))
                Switch (ToInteger (Arg0))
                {
                    Case (0x04)
                    {
                        If (CondRefOf (\_SB.PCI0.RP05.PWRG))
                        {
                            CopyObject (^^RP05.PWRG, Arg1)
                        }

                        If (CondRefOf (\_SB.PCI0.RP05.RSTG))
                        {
                            CopyObject (^^RP05.RSTG, Arg2)
                        }

                        If (CondRefOf (\_SB.PCI0.RP05.SCLK))
                        {
                            CopyObject (^^RP05.SCLK, Arg3)
                        }
                    }
                    Case (0x08)
                    {
                        If (CondRefOf (\_SB.PCI0.RP09.PWRG))
                        {
                            CopyObject (^^RP09.PWRG, Arg1)
                        }

                        If (CondRefOf (\_SB.PCI0.RP09.RSTG))
                        {
                            CopyObject (^^RP09.RSTG, Arg2)
                        }

                        If (CondRefOf (\_SB.PCI0.RP09.SCLK))
                        {
                            CopyObject (^^RP09.SCLK, Arg3)
                        }
                    }
                    Case (0x0C)
                    {
                        If (CondRefOf (\_SB.PCI0.RP13.PWRG))
                        {
                            CopyObject (^^RP13.PWRG, Arg1)
                        }

                        If (CondRefOf (\_SB.PCI0.RP13.RSTG))
                        {
                            CopyObject (^^RP13.RSTG, Arg2)
                        }

                        If (CondRefOf (\_SB.PCI0.RP13.SCLK))
                        {
                            CopyObject (^^RP13.SCLK, Arg3)
                        }
                    }
                    Case (0x10)
                    {
                        If (CondRefOf (\_SB.PCI0.RP17.PWRG))
                        {
                            CopyObject (^^RP17.PWRG, Arg1)
                        }

                        If (CondRefOf (\_SB.PCI0.RP17.RSTG))
                        {
                            CopyObject (^^RP17.RSTG, Arg2)
                        }

                        If (CondRefOf (\_SB.PCI0.RP17.SCLK))
                        {
                            CopyObject (^^RP17.SCLK, Arg3)
                        }
                    }
                    Default
                    {
                        ADBG (Concatenate ("ERR!NRPN: ", ToHexString (Arg0)))
                    }

                }
            }

            Device (NVM1)
            {
                Name (_ADR, 0x00C1FFFF)  // _ADR: Address
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    NITV = NIT1 /* \NIT1 */
                    NPMV = NPM1 /* \NPM1 */
                    NPCV = NPC1 /* \NPC1 */
                    NL1V = NL11 /* \NL11 */
                    ND2V = ND21 /* \ND21 */
                    ND1V = ND11 /* \ND11 */
                    NLRV = NLR1 /* \NLR1 */
                    NLDV = NLD1 /* \NLD1 */
                    NEAV = NEA1 /* \NEA1 */
                    NEBV = NEB1 /* \NEB1 */
                    NECV = NEC1 /* \NEC1 */
                    NRAV = NRA1 /* \NRA1 */
                    NMBV = NMB1 /* \NMB1 */
                    NMVV = NMV1 /* \NMV1 */
                    NPBV = NPB1 /* \NPB1 */
                    NPVV = NPV1 /* \NPV1 */
                    NRPN = NRP1 /* \NRP1 */
                    NCRN = Zero
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), RefOf (SCLK))
                }

                Name (PRBI, Zero)
                Name (PRBD, Zero)
                Name (PCMD, Zero)
                Name (RSTG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (PWRG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (SCLK, Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (NCRN, Zero)
                Name (NITV, Zero)
                Name (NPMV, Zero)
                Name (NPCV, Zero)
                Name (NL1V, Zero)
                Name (ND2V, Zero)
                Name (ND1V, Zero)
                Name (NLRV, Zero)
                Name (NLDV, Zero)
                Name (NEAV, Zero)
                Name (NEBV, Zero)
                Name (NECV, Zero)
                Name (NRAV, Zero)
                Name (NMBV, Zero)
                Name (NMVV, Zero)
                Name (NPBV, Zero)
                Name (NPVV, Zero)
                Name (NRPN, Zero)
                Name (MXIE, Zero)
                Name (ISD3, Zero)
                Method (RPON, 0, Serialized)
                {
                    If ((ISD3 == Zero))
                    {
                        Return (Zero)
                    }

                    ISD3 = Zero
                    ADBG (Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRA (0xDC, 0x100C, ~DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x08))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Local0 = Zero
                    While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                    {
                        If ((Local0 > 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (Concatenate ("RPONe: ", ToHexString (NRPN)))
                }

                Method (RPOF, 0, Serialized)
                {
                    If ((NVD3 () == Zero))
                    {
                        Return (Zero)
                    }

                    ADBG (Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x04))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRO (0xDC, 0x100C, DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)
                    ISD3 = 0x03
                }

                Method (NVD3, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    PCMD = RDCA (NCRN, 0x04, Zero, Zero, 0x02)
                    If ((NITV == One))
                    {
                        PRBI = 0x24
                        PRBD = RDCA (NCRN, 0x24, Zero, Zero, 0x02)
                    }
                    ElseIf ((NITV == 0x02))
                    {
                        PRBI = 0x10
                        PRBD = RDCA (NCRN, 0x10, Zero, Zero, 0x02)
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        MXIE = RDCA (NCRN, TCSO, Zero, Zero, 0x02)
                    }

                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)
                    Return (One)
                }

                Method (NVD0, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()
                    If ((NITV == 0x02))
                    {
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, (MXIE & 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }
                    Else
                    {
                    }

                    Return (One)
                }

                Method (CNRS, 0, Serialized)
                {
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |start"
                    ADBG (Concatenate ("CNRSs ", ToDecimalString (Timer)))
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    If ((NL1V != Zero))
                    {
                        RDCA (NCRN, (NL1V + 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0x0F, (ND1V & 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }

                    If ((NLRV != Zero))
                    {
                        RDCA (NCRN, (NLRV + 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFEBF, (NEAV & 0xFFFC), 0x03)
                    RDCA (NCRN, (NPCV + 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, (NPCV + 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)
                    If (((NEAV & 0x40) == 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (Concatenate ("CNRSw ", ToDecimalString (Timer)))
                        While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                        {
                            Stall (0x0A)
                        }
                    }

                    ADBG (Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFFFC, (NEAV & 0x03), 0x03)
                    If ((NMVV != Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }

                    If ((NPVV != Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (Concatenate ("CNRSe ", ToDecimalString (Timer)))
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |complete"
                }
            }

            Device (NVM2)
            {
                Name (_ADR, 0x00C2FFFF)  // _ADR: Address
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    NITV = NIT2 /* \NIT2 */
                    NPMV = NPM2 /* \NPM2 */
                    NPCV = NPC2 /* \NPC2 */
                    NL1V = NL12 /* \NL12 */
                    ND2V = ND22 /* \ND22 */
                    ND1V = ND12 /* \ND12 */
                    NLRV = NLR2 /* \NLR2 */
                    NLDV = NLD2 /* \NLD2 */
                    NEAV = NEA2 /* \NEA2 */
                    NEBV = NEB2 /* \NEB2 */
                    NECV = NEC2 /* \NEC2 */
                    NRAV = NRA2 /* \NRA2 */
                    NMBV = NMB2 /* \NMB2 */
                    NMVV = NMV2 /* \NMV2 */
                    NPBV = NPB2 /* \NPB2 */
                    NPVV = NPV2 /* \NPV2 */
                    NRPN = NRP2 /* \NRP2 */
                    NCRN = One
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), RefOf (SCLK))
                }

                Name (PRBI, Zero)
                Name (PRBD, Zero)
                Name (PCMD, Zero)
                Name (RSTG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (PWRG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (SCLK, Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (NCRN, Zero)
                Name (NITV, Zero)
                Name (NPMV, Zero)
                Name (NPCV, Zero)
                Name (NL1V, Zero)
                Name (ND2V, Zero)
                Name (ND1V, Zero)
                Name (NLRV, Zero)
                Name (NLDV, Zero)
                Name (NEAV, Zero)
                Name (NEBV, Zero)
                Name (NECV, Zero)
                Name (NRAV, Zero)
                Name (NMBV, Zero)
                Name (NMVV, Zero)
                Name (NPBV, Zero)
                Name (NPVV, Zero)
                Name (NRPN, Zero)
                Name (MXIE, Zero)
                Name (ISD3, Zero)
                Method (RPON, 0, Serialized)
                {
                    If ((ISD3 == Zero))
                    {
                        Return (Zero)
                    }

                    ISD3 = Zero
                    ADBG (Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRA (0xDC, 0x100C, ~DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x08))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Local0 = Zero
                    While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                    {
                        If ((Local0 > 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (Concatenate ("RPONe: ", ToHexString (NRPN)))
                }

                Method (RPOF, 0, Serialized)
                {
                    If ((NVD3 () == Zero))
                    {
                        Return (Zero)
                    }

                    ADBG (Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x04))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRO (0xDC, 0x100C, DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)
                    ISD3 = 0x03
                }

                Method (NVD3, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    PCMD = RDCA (NCRN, 0x04, Zero, Zero, 0x02)
                    If ((NITV == One))
                    {
                        PRBI = 0x24
                        PRBD = RDCA (NCRN, 0x24, Zero, Zero, 0x02)
                    }
                    ElseIf ((NITV == 0x02))
                    {
                        PRBI = 0x10
                        PRBD = RDCA (NCRN, 0x10, Zero, Zero, 0x02)
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        MXIE = RDCA (NCRN, TCSO, Zero, Zero, 0x02)
                    }

                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)
                    Return (One)
                }

                Method (NVD0, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()
                    If ((NITV == 0x02))
                    {
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, (MXIE & 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }
                    Else
                    {
                    }

                    Return (One)
                }

                Method (CNRS, 0, Serialized)
                {
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |start"
                    ADBG (Concatenate ("CNRSs ", ToDecimalString (Timer)))
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    If ((NL1V != Zero))
                    {
                        RDCA (NCRN, (NL1V + 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0x0F, (ND1V & 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }

                    If ((NLRV != Zero))
                    {
                        RDCA (NCRN, (NLRV + 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFEBF, (NEAV & 0xFFFC), 0x03)
                    RDCA (NCRN, (NPCV + 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, (NPCV + 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)
                    If (((NEAV & 0x40) == 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (Concatenate ("CNRSw ", ToDecimalString (Timer)))
                        While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                        {
                            Stall (0x0A)
                        }
                    }

                    ADBG (Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFFFC, (NEAV & 0x03), 0x03)
                    If ((NMVV != Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }

                    If ((NPVV != Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (Concatenate ("CNRSe ", ToDecimalString (Timer)))
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |complete"
                }
            }

            Device (NVM3)
            {
                Name (_ADR, 0x00C3FFFF)  // _ADR: Address
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    NITV = NIT3 /* \NIT3 */
                    NPMV = NPM3 /* \NPM3 */
                    NPCV = NPC3 /* \NPC3 */
                    NL1V = NL13 /* \NL13 */
                    ND2V = ND23 /* \ND23 */
                    ND1V = ND13 /* \ND13 */
                    NLRV = NLR3 /* \NLR3 */
                    NLDV = NLD3 /* \NLD3 */
                    NEAV = NEA3 /* \NEA3 */
                    NEBV = NEB3 /* \NEB3 */
                    NECV = NEC3 /* \NEC3 */
                    NRAV = NRA3 /* \NRA3 */
                    NMBV = NMB3 /* \NMB3 */
                    NMVV = NMV3 /* \NMV3 */
                    NPBV = NPB3 /* \NPB3 */
                    NPVV = NPV3 /* \NPV3 */
                    NRPN = NRP3 /* \NRP3 */
                    NCRN = 0x02
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), RefOf (SCLK))
                }

                Name (PRBI, Zero)
                Name (PRBD, Zero)
                Name (PCMD, Zero)
                Name (RSTG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (PWRG, Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (SCLK, Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })
                Name (NCRN, Zero)
                Name (NITV, Zero)
                Name (NPMV, Zero)
                Name (NPCV, Zero)
                Name (NL1V, Zero)
                Name (ND2V, Zero)
                Name (ND1V, Zero)
                Name (NLRV, Zero)
                Name (NLDV, Zero)
                Name (NEAV, Zero)
                Name (NEBV, Zero)
                Name (NECV, Zero)
                Name (NRAV, Zero)
                Name (NMBV, Zero)
                Name (NMVV, Zero)
                Name (NPBV, Zero)
                Name (NPVV, Zero)
                Name (NRPN, Zero)
                Name (MXIE, Zero)
                Name (ISD3, Zero)
                Method (RPON, 0, Serialized)
                {
                    If ((ISD3 == Zero))
                    {
                        Return (Zero)
                    }

                    ISD3 = Zero
                    ADBG (Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRA (0xDC, 0x100C, ~DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x08))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Local0 = Zero
                    While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                    {
                        If ((Local0 > 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (Concatenate ("RPONe: ", ToHexString (NRPN)))
                }

                Method (RPOF, 0, Serialized)
                {
                    If ((NVD3 () == Zero))
                    {
                        Return (Zero)
                    }

                    ADBG (Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Local0 = Zero
                    While ((RDCA (NCRN, 0xE2, Zero, Zero, Zero) & 0x04))
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)
                    If ((DerefOf (SCLK [Zero]) != Zero))
                    {
                        PCRO (0xDC, 0x100C, DerefOf (SCLK [One]))
                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)
                    ISD3 = 0x03
                }

                Method (NVD3, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    PCMD = RDCA (NCRN, 0x04, Zero, Zero, 0x02)
                    If ((NITV == One))
                    {
                        PRBI = 0x24
                        PRBD = RDCA (NCRN, 0x24, Zero, Zero, 0x02)
                    }
                    ElseIf ((NITV == 0x02))
                    {
                        PRBI = 0x10
                        PRBD = RDCA (NCRN, 0x10, Zero, Zero, 0x02)
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        MXIE = RDCA (NCRN, TCSO, Zero, Zero, 0x02)
                    }

                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)
                    Return (One)
                }

                Method (NVD0, 0, Serialized)
                {
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, (NPMV + 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()
                    If ((NITV == 0x02))
                    {
                        OperationRegion (MCRC, SystemMemory, (GPCB () + 0x000B833C), 0x04)
                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, (MXIE & 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }
                    Else
                    {
                    }

                    Return (One)
                }

                Method (CNRS, 0, Serialized)
                {
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |start"
                    ADBG (Concatenate ("CNRSs ", ToDecimalString (Timer)))
                    If ((NITV == Zero))
                    {
                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                    If ((NL1V != Zero))
                    {
                        RDCA (NCRN, (NL1V + 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0x0F, (ND1V & 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, (NL1V + 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }

                    If ((NLRV != Zero))
                    {
                        RDCA (NCRN, (NLRV + 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFEBF, (NEAV & 0xFFFC), 0x03)
                    RDCA (NCRN, (NPCV + 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, (NPCV + 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)
                    If (((NEAV & 0x40) == 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (Concatenate ("CNRSw ", ToDecimalString (Timer)))
                        While (((RDCA (NCRN, 0x52, Zero, Zero, Zero) & 0x2000) == Zero))
                        {
                            Stall (0x0A)
                        }
                    }

                    ADBG (Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, (NPCV + 0x10), 0xFFFFFFFC, (NEAV & 0x03), 0x03)
                    If ((NMVV != Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }

                    If ((NPVV != Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (Concatenate ("CNRSe ", ToDecimalString (Timer)))
                    Debug = "[ACPI RST] Restore Remapped Device and Hidden RP context |complete"
                }
            }

            Method (PSTA, 1, Serialized)
            {
                If ((DerefOf (Arg0 [Zero]) == Zero))
                {
                    Return (One)
                }

                If ((DerefOf (Arg0 [Zero]) == One))
                {
                    If ((GGOV (DerefOf (Arg0 [0x02])) == DerefOf (Arg0 [0x03]
                        )))
                    {
                        Return (One)
                    }

                    Return (Zero)
                }

                If ((DerefOf (Arg0 [Zero]) == 0x02))
                {
                    If ((^^GEXP.GEPS (DerefOf (Arg0 [One]), DerefOf (Arg0 [0x02]
                        )) == DerefOf (Arg0 [0x03])))
                    {
                        Return (One)
                    }

                    Return (Zero)
                }

                Return (Zero)
            }

            Method (PON, 1, Serialized)
            {
                If ((DerefOf (Arg0 [Zero]) != Zero))
                {
                    If ((DerefOf (Arg0 [Zero]) == One))
                    {
                        ADBG (Concatenate ("PON GPIO=", ToHexString (DerefOf (Arg0 [0x02]))))
                        SGOV (DerefOf (Arg0 [0x02]), DerefOf (Arg0 [0x03]))
                    }

                    If ((DerefOf (Arg0 [Zero]) == 0x02))
                    {
                        ADBG (Concatenate ("PON IOEX=", ToHexString (DerefOf (Arg0 [0x02]))))
                        ^^GEXP.SGEP (DerefOf (Arg0 [One]), DerefOf (Arg0 [0x02]), DerefOf (
                            Arg0 [0x03]))
                    }
                }
            }

            Method (POFF, 1, Serialized)
            {
                If ((DerefOf (Arg0 [Zero]) != Zero))
                {
                    If ((DerefOf (Arg0 [Zero]) == One))
                    {
                        ADBG (Concatenate ("POFF GPIO=", ToHexString (DerefOf (Arg0 [0x02]))))
                        SGOV (DerefOf (Arg0 [0x02]), (DerefOf (Arg0 [0x03]) ^ 
                            One))
                    }

                    If ((DerefOf (Arg0 [Zero]) == 0x02))
                    {
                        ADBG (Concatenate ("POFF IOEX=", ToHexString (DerefOf (Arg0 [0x02]))))
                        ^^GEXP.SGEP (DerefOf (Arg0 [One]), DerefOf (Arg0 [0x02]), (
                            DerefOf (Arg0 [0x03]) ^ One))
                    }
                }
            }
        }

        Device (CIO2)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((CIOE == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_HID, "INT343E")  // _HID: Hardware ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (CBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y29)
                    {
                        0x00000010,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFE400000,         // Address Base
                        0x00010000,         // Address Length
                        )
                })
                CreateDWordField (CBUF, \_SB.PCI0.CIO2._CRS._Y29._INT, CIOV)  // _INT: Interrupts
                CIOV = CIOI /* \CIOI */
                Return (CBUF) /* \_SB_.PCI0.CIO2._CRS.CBUF */
            }
        }

        Device (TERM)
        {
            Name (_HID, "INT343D")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFE03C000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y2A)
                    {
                        0x00000012,
                    }
                })
                CreateDWordField (RBUF, \_SB.PCI0.TERM._CRS._Y2A._INT, IRQN)  // _INT: Interrupts
                IRQN = TIRQ /* \TIRQ */
                Return (RBUF) /* \_SB_.PCI0.TERM._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TAEN == Zero))
                {
                    Return (Zero)
                }

                If ((TIRQ == Zero))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }
        }
    }

    Scope (_SB)
    {
        Name (HDAA, Zero)
        Name (DISA, One)
        Method (DION, 0, NotSerialized)
        {
            VMMH (One, One)
        }

        Method (DIOF, 0, NotSerialized)
        {
            VMMH (One, Zero)
        }

        Method (VMMH, 2, Serialized)
        {
            If ((!CondRefOf (\_SB.VMON) || !CondRefOf (\_SB.VMOF)))
            {
                Return (Zero)
            }

            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    HDAA = Arg1
                }
                Case (One)
                {
                    DISA = Arg1
                }
                Default
                {
                    Return (Zero)
                }

            }

            If (!HDAA)
            {
                SLS0 = One
                XSQD = Zero
                VMON ()
            }
            Else
            {
                VMOF ()
                SLS0 = DISA /* \_SB_.DISA */
                If (!DISA)
                {
                    XSQD = One
                }
                Else
                {
                    XSQD = Zero
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Method (LPD3, 1, Serialized)
        {
            OperationRegion (ICB1, SystemMemory, (Arg0 + 0x84), 0x04)
            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }

            PMEC = 0x03
            TEMP = PMEC /* \_SB_.PCI0.LPD3.PMEC */
        }

        Method (LPD0, 1, Serialized)
        {
            OperationRegion (ICB1, SystemMemory, (Arg0 + 0x84), 0x04)
            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }

            PMEC &= 0xFFFF7FFC
            TEMP = PMEC /* \_SB_.PCI0.LPD0.PMEC */
        }

        Method (LHRV, 1, Serialized)
        {
            OperationRegion (ICB1, SystemMemory, (Arg0 + 0x08), 0x04)
            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                HRV,    8
            }

            Return (HRV) /* \_SB_.PCI0.LHRV.HRV_ */
        }

        Method (GETD, 1, Serialized)
        {
            OperationRegion (ICB1, SystemMemory, (Arg0 + 0x84), 0x04)
            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }

            Return ((PMEC & 0x03))
        }

        Method (LCRS, 3, Serialized)
        {
            Name (RBUF, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y2B)
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y2C)
                {
                    0x00000014,
                }
            })
            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y2B._BAS, BVAL)  // _BAS: Base Address
            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y2B._LEN, BLEN)  // _LEN: Length
            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y2C._INT, IRQN)  // _INT: Interrupts
            BVAL = Arg1
            IRQN = Arg2
            If ((Arg0 == 0x04))
            {
                BLEN = 0x08
            }

            Return (RBUF) /* \_SB_.PCI0.LCRS.RBUF */
        }

        Method (LSTA, 1, Serialized)
        {
            If (((Arg0 == Zero) || (Arg0 == 0x03)))
            {
                Return (Zero)
            }

            If ((OSYS < 0x07DC))
            {
                Return (Zero)
            }

            Return (0x0F)
        }

        Method (GIRQ, 1, Serialized)
        {
            Return ((0x18 + (Arg0 % 0x60)))
        }
    }

    Scope (_SB.PCI0)
    {
        Device (SIRC)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_STA, 0x03)  // _STA: Status
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (ADDB, 3, Serialized)
            {
                Name (BUFF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y2D)
                })
                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y2D._BAS, ADDR)  // _BAS: Base Address
                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y2D._LEN, LENG)  // _LEN: Length
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((((Arg0 == One) || (Arg0 == 0x03)) || (Arg0 == 0x04)))
                {
                    ADDR = Arg2
                    ConcatenateResTemplate (Local0, BUFF, Local1)
                    Local0 = Local1
                }

                If ((Arg0 == 0x03))
                {
                    ADDR = Arg1
                    ConcatenateResTemplate (Local0, BUFF, Local1)
                    Local0 = Local1
                }

                If ((Arg0 == 0x04))
                {
                    ADDR = (0x08 + Arg1)
                    LENG = 0x0FF8
                    ConcatenateResTemplate (Local0, BUFF, Local1)
                    Local0 = Local1
                }

                Return (Local0)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                ConcatenateResTemplate (Local0, ADDB (SMD0, SB00, SB10), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD1, SB01, SB11), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD2, SB02, SB12), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD3, SB03, SB13), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD4, SB04, SB14), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD5, SB05, SB15), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD6, SB06, SB16), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD7, SB07, SB17), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD8, SB08, SB18), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMD9, SB09, SB19), Local1)
                Local0 = Local1
                ConcatenateResTemplate (Local0, ADDB (SMDA, SB0A, SB1A), Local1)
                Local0 = Local1
                If ((^^GPI0._STA () == Zero))
                {
                    ConcatenateResTemplate (Local0, ^^GPI0._CRS (), Local1)
                    Local0 = Local1
                }

                Return (Local0)
            }
        }

        Device (GPI0)
        {
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                If ((PCHV () == SPTH))
                {
                    If ((PCHG == 0x02))
                    {
                        Return ("INT3451")
                    }

                    Return ("INT345D")
                }

                Return ("INT344B")
            }

            Name (LINK, "\\_SB.PCI0.GPI0")
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y2E)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y2F)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y31)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y30)
                    {
                        0x0000000E,
                    }
                })
                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y2E._BAS, COM0)  // _BAS: Base Address
                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y2F._BAS, COM1)  // _BAS: Base Address
                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y30._INT, IRQN)  // _INT: Interrupts
                COM0 = (SBRG + 0x00AF0000)
                COM1 = (SBRG + 0x00AE0000)
                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y31._BAS, COM3)  // _BAS: Base Address
                COM3 = (SBRG + 0x00AC0000)
                IRQN = SGIR /* \SGIR */
                Return (RBUF) /* \_SB_.PCI0.GPI0._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SBRG == Zero))
                {
                    Return (Zero)
                }

                If ((GPEN == Zero))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C0)
        {
            Name (LINK, "\\_SB.PCI0.I2C0")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB10))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB10)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB10)
            }

            If ((SMD0 != 0x02))
            {
                Name (_HID, "INT3442")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB10))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD0, SB00, SIR0))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD0))
                }
            }

            If ((SMD0 == 0x02))
            {
                Name (_ADR, 0x00150000)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C1)
        {
            Name (LINK, "\\_SB.PCI0.I2C1")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB11))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB11)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB11)
            }

            If ((SMD1 != 0x02))
            {
                Name (_HID, "INT3443")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB11))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD1, SB01, SIR1))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD1))
                }
            }

            If ((SMD1 == 0x02))
            {
                Name (_ADR, 0x00150001)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C2)
        {
            Name (LINK, "\\_SB.PCI0.I2C2")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB12))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB12)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB12)
            }

            If ((SMD2 != 0x02))
            {
                Name (_HID, "INT3444")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB12))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD2, SB02, SIR2))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD2))
                }
            }

            If ((SMD2 == 0x02))
            {
                Name (_ADR, 0x00150002)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C3)
        {
            Name (LINK, "\\_SB.PCI0.I2C3")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB13))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB13)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB13)
            }

            If ((SMD3 != 0x02))
            {
                Name (_HID, "INT3445")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB13))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD3, SB03, SIR3))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD3))
                }
            }

            If ((SMD3 == 0x02))
            {
                Name (_ADR, 0x00150003)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C4)
        {
            Name (LINK, "\\_SB.PCI0.I2C4")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB14))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB14)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB14)
            }

            If ((SMD4 != 0x02))
            {
                Name (_HID, "INT3446")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB14))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD4, SB04, SIR4))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD4))
                }
            }

            If ((SMD4 == 0x02))
            {
                Name (_ADR, 0x00190002)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (I2C5)
        {
            Name (LINK, "\\_SB.PCI0.I2C5")
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB15))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB15)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB15)
            }

            If ((SMD5 != 0x02))
            {
                Name (_HID, "INT3447")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB15))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD5, SB05, SIR5))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD5))
                }
            }

            If ((SMD5 == 0x02))
            {
                Name (_ADR, 0x00190001)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (SPI0)
        {
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB16))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB16)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB16)
            }

            If ((SMD6 != 0x02))
            {
                Name (_HID, "INT3440")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB16))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD6, SB06, SIR6))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD6))
                }
            }

            If ((SMD6 == 0x02))
            {
                Name (_ADR, 0x001E0002)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (SPI1)
        {
            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (GETD (SB17))
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB17)
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB17)
            }

            If ((SMD7 != 0x02))
            {
                Name (_HID, "INT3441")  // _HID: Hardware ID
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB17))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD7, SB07, SIR7))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD7))
                }
            }

            If ((SMD7 == 0x02))
            {
                Name (_ADR, 0x001E0003)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UA00)
        {
            If ((SMD8 != 0x02))
            {
                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {
                    If ((SMD8 == 0x04))
                    {
                        Return (0x020CD041)
                    }
                    Else
                    {
                        Return ("INT3448")
                    }
                }

                Name (_UID, "SerialIoUart0")  // _UID: Unique ID
                Name (_DDN, "SerialIoUart0")  // _DDN: DOS Device Name
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB18))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD8, SB08, SIR8))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD8))
                }
            }

            If ((SMD8 == 0x02))
            {
                Name (_ADR, 0x001E0000)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            If ((SMD8 != 0x04))
            {
                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {
                    Return (GETD (SB18))
                }

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB18)
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB18)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UA01)
        {
            If ((SMD9 != 0x02))
            {
                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {
                    If ((SMD9 == 0x04))
                    {
                        Return (0x020CD041)
                    }
                    Else
                    {
                        Return ("INT3449")
                    }
                }

                Name (_UID, "SerialIoUart1")  // _UID: Unique ID
                Name (_DDN, "SerialIoUart1")  // _DDN: DOS Device Name
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB19))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMD9, SB09, SIR9))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMD9))
                }
            }

            If ((SMD9 == 0x02))
            {
                Name (_ADR, 0x001E0001)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            If ((SMD9 != 0x04))
            {
                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {
                    Return (GETD (SB19))
                }

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB19)
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB19)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UA02)
        {
            If ((SMDA != 0x02))
            {
                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {
                    If ((SMDA == 0x04))
                    {
                        Return (0x020CD041)
                    }
                    Else
                    {
                        Return ("INT344A")
                    }
                }

                Name (_UID, "SerialIoUart2")  // _UID: Unique ID
                Name (_DDN, "SerialIoUart2")  // _DDN: DOS Device Name
                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {
                    Return (LHRV (SB1A))
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (LCRS (SMDA, SB0A, SIRA))
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (LSTA (SMDA))
                }
            }

            If ((SMDA == 0x02))
            {
                Name (_ADR, 0x00190000)  // _ADR: Address
                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            If ((SMDA != 0x04))
            {
                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {
                    Return (GETD (SB1A))
                }

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB1A)
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB1A)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Name (HIDG, ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */)
        Name (TP7G, ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b") /* Unknown UUID */)
        Method (HIDD, 5, Serialized)
        {
            If ((Arg0 == HIDG))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == One))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Return (Arg4)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Method (TP7D, 6, Serialized)
        {
            If ((Arg0 == TP7G))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == One))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Return (ConcatenateResTemplate (Arg4, Arg5))
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (_SB.PCI0.I2C0)
    {
        Device (TPD0)
        {
            Name (HID2, Zero)
            Name (SBFB, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0020, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                    0x00, ResourceConsumer, _Y32, Exclusive,
                    )
            })
            Name (SBFI, ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y33)
                {
                    0x00000000,
                }
            })
            Name (SBFG, ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })
            CreateWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y32._ADR, BADR)  // _ADR: Address
            CreateDWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y32._SPE, SPED)  // _SPE: Speed
            CreateWordField (SBFG, 0x17, INT1)
            CreateDWordField (SBFI, \_SB.PCI0.I2C0.TPD0._Y33._INT, INT2)  // _INT: Interrupts
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((OSYS < 0x07DC))
                {
                    SRXO (GPDI, One)
                }

                INT1 = GNUM (GPDI)
                INT2 = INUM (GPDI)
                If ((SDM0 == Zero))
                {
                    SHPO (GPDI, One)
                }

                If ((SDS0 == One))
                {
                    _HID = "SYNA2393"
                    HID2 = 0x20
                    Return (Zero)
                }

                If ((SDS0 == 0x02))
                {
                    _HID = "06CB2846"
                    HID2 = 0x20
                    Return (Zero)
                }

                If ((SDS0 == 0x05))
                {
                    _HID = "CUST0001"
                    HID2 = TPDH /* \TPDH */
                    BADR = TPDB /* \TPDB */
                    If ((TPDS == Zero))
                    {
                        SPED = 0x000186A0
                    }

                    If ((TPDS == One))
                    {
                        SPED = 0x00061A80
                    }

                    If ((TPDS == 0x02))
                    {
                        SPED = 0x000F4240
                    }

                    Return (Zero)
                }
            }

            Name (_HID, "XXXX0000")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == HIDG))
                {
                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }

                If ((Arg0 == TP7G))
                {
                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((SDS0 == 0x05) || ((SDS0 == One) || (SDS0 == 0x02))))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((OSYS < 0x07DC))
                {
                    Return (SBFI) /* \_SB_.PCI0.I2C0.TPD0.SBFI */
                }

                If ((SDM0 == Zero))
                {
                    Return (ConcatenateResTemplate (SBFB, SBFG))
                }

                Return (ConcatenateResTemplate (SBFB, SBFI))
            }
        }

        Device (HDAC)
        {
            Name (_HID, "INT0000")  // _HID: Hardware ID
            Name (_CID, "INT0000")  // _CID: Compatible ID
            Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec")  // _DDN: DOS Device Name
            Name (_UID, One)  // _UID: Unique ID
            Name (CADR, Zero)
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (((I2SC == One) || (I2SC == 0x02)))
                {
                    _HID = "INT343A"
                    _CID = "INT343A"
                    CADR = 0x1C
                    Return (Zero)
                }

                If ((I2SC == 0x03))
                {
                    _HID = "INT343B"
                    _CID = "INT343B"
                    CADR = 0x34
                    Return (Zero)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFB, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, _Y34, Exclusive,
                        )
                })
                Name (SBFI, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y35)
                    {
                        0x00000000,
                    }
                })
                CreateWordField (SBFB, \_SB.PCI0.I2C0.HDAC._CRS._Y34._ADR, ADR)  // _ADR: Address
                ADR = CADR /* \_SB_.PCI0.I2C0.HDAC.CADR */
                CreateDWordField (SBFI, \_SB.PCI0.I2C0.HDAC._CRS._Y35._INT, AINT)  // _INT: Interrupts
                AINT = INUM (0x02040016)
                If ((HAID == One))
                {
                    Return (SBFB) /* \_SB_.PCI0.I2C0.HDAC._CRS.SBFB */
                }

                Return (ConcatenateResTemplate (SBFB, SBFI))
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((I2SC != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
        }

        Device (UCM1)
        {
            Name (_HID, "INT3515")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFB, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0038, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Name (SBFI, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y36)
                    {
                        0x00000000,
                    }
                })
                CreateDWordField (SBFI, \_SB.PCI0.I2C0.UCM1._CRS._Y36._INT, GINT)  // _INT: Interrupts
                GINT = INUM (UCG1)
                Return (ConcatenateResTemplate (SBFB, SBFI))
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((UCSI == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (UCM2)
        {
            Name (_HID, "INT3515")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFB, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x003F, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Name (SBFI, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y37)
                    {
                        0x00000000,
                    }
                })
                CreateDWordField (SBFI, \_SB.PCI0.I2C0.UCM2._CRS._Y37._INT, GINT)  // _INT: Interrupts
                GINT = INUM (UCG2)
                Return (ConcatenateResTemplate (SBFB, SBFI))
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((UCSI == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0.I2C1)
    {
        Device (TPL1)
        {
            Name (HID2, Zero)
            Name (SBFB, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                    0x00, ResourceConsumer, _Y38, Exclusive,
                    )
            })
            Name (SBFG, ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, Exclusive, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })
            Name (SBFI, ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y39)
                {
                    0x00000000,
                }
            })
            CreateWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y38._ADR, BADR)  // _ADR: Address
            CreateDWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y38._SPE, SPED)  // _SPE: Speed
            CreateDWordField (SBFI, \_SB.PCI0.I2C1.TPL1._Y39._INT, INT2)  // _INT: Interrupts
            CreateWordField (SBFG, 0x17, INT1)
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((OSYS < 0x07DC))
                {
                    SRXO (GPLI, One)
                }

                INT1 = GNUM (GPLI)
                INT2 = INUM (GPLI)
                If ((SDM1 == Zero))
                {
                    SHPO (GPLI, One)
                }

                If ((SDS1 == One))
                {
                    _HID = "ATML3432"
                    HID2 = Zero
                    BADR = 0x4C
                    SPED = 0x00061A80
                    Return (Zero)
                }

                If ((SDS1 == 0x02))
                {
                    _HID = "ATML2952"
                    HID2 = Zero
                    BADR = 0x4A
                    SPED = 0x00061A80
                    Return (Zero)
                }

                If ((SDS1 == 0x03))
                {
                    _HID = "ELAN2097"
                    HID2 = One
                    BADR = 0x10
                    SPED = 0x00061A80
                    Return (Zero)
                }

                If ((SDS1 == 0x04))
                {
                    _HID = "NTRG0001"
                    HID2 = One
                    BADR = 0x07
                    SPED = 0x00061A80
                    Return (Zero)
                }

                If ((SDS1 == 0x05))
                {
                    _HID = "NTRG0002"
                    HID2 = One
                    BADR = 0x64
                    SPED = 0x00061A80
                    Return (Zero)
                }

                If ((SDS1 == 0x06))
                {
                    _HID = "WCOM508E"
                    HID2 = One
                    BADR = 0x0A
                    If ((TPLS == Zero))
                    {
                        SPED = 0x00061A80
                    }

                    If ((TPLS == One))
                    {
                        SPED = 0x000F4240
                    }

                    Return (Zero)
                }

                If ((SDS1 == 0x07))
                {
                    _HID = "CUST0000"
                    HID2 = TPLH /* \TPLH */
                    BADR = TPLB /* \TPLB */
                    If ((TPLS == Zero))
                    {
                        SPED = 0x000186A0
                    }

                    If ((TPLS == One))
                    {
                        SPED = 0x00061A80
                    }

                    If ((TPLS == 0x02))
                    {
                        SPED = 0x000F4240
                    }

                    Return (Zero)
                }
            }

            Name (_HID, "XXXX0000")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == HIDG))
                {
                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }

                If ((Arg0 == TP7G))
                {
                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SDS1 != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((OSYS < 0x07DC))
                {
                    Return (SBFI) /* \_SB_.PCI0.I2C1.TPL1.SBFI */
                }

                If ((SDM1 == Zero))
                {
                    Return (ConcatenateResTemplate (SBFB, SBFG))
                }

                Return (ConcatenateResTemplate (SBFB, SBFI))
            }
        }

        Device (IMP3)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "IMPJ0003")  // _HID: Hardware ID
            Name (_CID, "IMPJ0003")  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((HAID == One))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x006E, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (SBUF) /* \_SB_.PCI0.I2C1.IMP3._CRS.SBUF */
            }
        }
    }

    Scope (_SB.PCI0.SPI1)
    {
        Device (FPNT)
        {
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                If ((SDS7 == One))
                {
                    Return ("FPC1011")
                }

                If ((SDS7 == 0x02))
                {
                    Return ("FPC1020")
                }

                If ((SDS7 == 0x03))
                {
                    Return ("VFSI6101")
                }

                If ((SDS7 == 0x04))
                {
                    Return ("VFSI7500")
                }

                If ((SDS7 == 0x05))
                {
                    Return ("EGIS0300")
                }

                If ((SDS7 == 0x06))
                {
                    Return ("FPC1021")
                }

                Return ("FPNT_DIS")
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GFPI, One)
                SHPO (GFPS, One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SDS7 != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (BBUF, ResourceTemplate ()
                {
                    SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                        ControllerInitiated, 0x00989680, ClockPolarityLow,
                        ClockPhaseFirst, "\\_SB.PCI0.SPI1",
                        0x00, ResourceConsumer, _Y3A, Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0008
                        }
                })
                Name (IBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y3B)
                    {
                        0x00000000,
                    }
                })
                Name (GBUF, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, _Y3C,
                        )
                        {   // Pin list
                            0x0000
                        }
                })
                Name (UBUF, ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })
                CreateDWordField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3A._SPE, SPEX)  // _SPE: Speed
                CreateByteField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3A._PHA, PHAX)  // _PHA: Clock Phase
                CreateWordField (BBUF, 0x3B, SPIN)
                CreateWordField (GBUF, 0x17, GPIN)
                CreateDWordField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3B._INT, IPIN)  // _INT: Interrupts
                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3B._LL, ILVL)  // _LL_: Low Level
                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3B._HE, ITRG)  // _HE_: High-Edge
                CreateField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3C._POL, 0x02, GLVL)  // _POL: Polarity
                CreateBitField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3C._MOD, GTRG)  // _MOD: Mode
                CreateBitField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y3A._DPL, SCSP)  // _DPL: Device Selection Polarity
                CreateWordField (UBUF, 0x17, UPIN)
                SPIN = GNUM (GFPS)
                GPIN = GNUM (GFPI)
                IPIN = INUM (GFPI)
                UPIN = GNUM (GFPI)
                If (((SDS7 == 0x02) || (SDS7 == 0x06)))
                {
                    ILVL = Zero
                    ITRG = One
                    GLVL = Zero
                    GTRG = One
                }

                If ((SDS7 == 0x04))
                {
                    ILVL = Zero
                    ITRG = One
                }

                Switch (ToInteger (SDS7))
                {
                    Case (One)
                    {
                        SPEX = 0x00989680
                        PHAX = Zero
                    }
                    Case (0x02)
                    {
                        SPEX = 0x002DC6C0
                        PHAX = Zero
                    }
                    Case (0x03)
                    {
                        SPEX = 0x007A1200
                        PHAX = One
                    }
                    Case (0x04)
                    {
                        SPEX = 0x007A1200
                        PHAX = Zero
                    }
                    Case (0x05)
                    {
                        SPEX = 0x00F42400
                        PHAX = Zero
                    }
                    Case (0x06)
                    {
                        SPEX = 0x002DC6C0
                        PHAX = Zero
                    }
                    Default
                    {
                    }

                }

                If ((SDS7 == One))
                {
                    Return (BBUF) /* \_SB_.PCI0.SPI1.FPNT._CRS.BBUF */
                }

                If (((SDS7 == 0x04) && (SDM7 == Zero)))
                {
                    Return (ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, GBUF)))
                }

                If (((SDS7 == 0x04) && (SDM7 != Zero)))
                {
                    Return (ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, IBUF)))
                }

                If ((SDM7 == Zero))
                {
                    Return (ConcatenateResTemplate (BBUF, GBUF))
                }

                Return (ConcatenateResTemplate (BBUF, IBUF))
            }
        }
    }

    Scope (_SB.PCI0.UA00)
    {
        Device (BTH0)
        {
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                If ((SDS8 == One))
                {
                    Return ("INT33E1")
                }

                If ((SDS8 == 0x02))
                {
                    Return ("BCM2E40")
                }

                Return ("INT33E1")
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GBTI, One)
                SHPO (GBTW, One)
                SHPO (GBTK, One)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFG, ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })
                CreateWordField (SBFG, 0x8C, INT3)
                CreateWordField (SBFG, 0x3C, WAK3)
                CreateWordField (SBFG, 0x64, KIL3)
                INT3 = GNUM (GBTI)
                WAK3 = GNUM (GBTW)
                KIL3 = GNUM (GBTK)
                Name (SBFI, ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    Interrupt (ResourceConsumer, Edge, ActiveLow, ExclusiveAndWake, ,, _Y3D)
                    {
                        0x00000000,
                    }
                })
                CreateDWordField (SBFI, \_SB.PCI0.UA00.BTH0._CRS._Y3D._INT, INT4)  // _INT: Interrupts
                CreateWordField (SBFI, 0x3C, WAK4)
                CreateWordField (SBFI, 0x64, KIL4)
                INT4 = INUM (GBTI)
                WAK4 = GNUM (GBTW)
                KIL4 = GNUM (GBTK)
                If ((SDM8 == Zero))
                {
                    Return (SBFG) /* \_SB_.PCI0.UA00.BTH0._CRS.SBFG */
                }
                Else
                {
                    Return (SBFI) /* \_SB_.PCI0.UA00.BTH0._CRS.SBFI */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SDS8 != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
        }
    }

    Scope (_SB.PCI0)
    {
        Device (GNSS)
        {
            Name (_HID, "INT33A2")  // _HID: Hardware ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF1, ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0040, 0x0040, "\\_SB.PCI0.UA01",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Name (BUF2, ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })
                CreateWordField (BUF2, 0x17, RPIN)
                RPIN = GNUM (GGNR)
                If ((GNSC == One))
                {
                    Return (ConcatenateResTemplate (BUF1, BUF2))
                }
                Else
                {
                    Return (BUF2) /* \_SB_.PCI0.GNSS._CRS.BUF2 */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((GNSC == Zero))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (GEXP)
        {
            Name (_ADR, One)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
            OperationRegion (BAR0, SystemMemory, SB04, 0x0208)
            Field (BAR0, DWordAcc, NoLock, Preserve)
            {
                ICON,   32, 
                TAR,    32, 
                Offset (0x10), 
                DATA,   32, 
                HCNT,   32, 
                LCNT,   32, 
                Offset (0x2C), 
                    ,   5, 
                ABRT,   1, 
                Offset (0x40), 
                RBCK,   32, 
                Offset (0x54), 
                CLR,    32, 
                Offset (0x6C), 
                ENB,    1, 
                Offset (0x70), 
                ACTV,   1, 
                TFNF,   1, 
                    ,   1, 
                RFNE,   1, 
                Offset (0x7C), 
                HOLD,   32, 
                Offset (0x9C), 
                ENSB,   1, 
                Offset (0x204), 
                RST,    32
            }

            Method (SGEP, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, Zero)
            }

            Method (SGED, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, One)
            }

            Method (GEPS, 2, Serialized)
            {
                Return (CSER (GEXN, Arg0, Arg1, Zero, 0x02))
            }

            Method (SGEI, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, 0x03)
            }

            Method (INVC, 0, NotSerialized)
            {
                Local0 = Zero
                While ((Local0 < 0x10))
                {
                    If ((R3DC (Zero, Local0, Zero) == 0x02))
                    {
                        W3DC (Zero, Local0, Zero, One)
                    }

                    If ((R3DC (One, Local0, Zero) == 0x02))
                    {
                        W3DC (One, Local0, Zero, One)
                    }

                    Local0 += One
                }
            }

            Name (PPR, 0x08)
            Name (INR, Package (0x03)
            {
                Zero, 
                One, 
                0x02
            })
            Name (OUTR, Package (0x03)
            {
                0x04, 
                0x05, 
                0x06
            })
            Name (CFGR, Package (0x03)
            {
                0x0C, 
                0x0D, 
                0x0E
            })
            Name (POLR, Package (0x03)
            {
                0x08, 
                0x09, 
                0x0A
            })
            Name (EXPA, 0x22)
            Name (UCCH, One)
            Name (END, 0x0200)
            Name (READ, 0x0100)
            Name (TEMP, Zero)
            Name (CACH, Package (0x02)
            {
                Package (0x10)
                {
                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }, 

                Package (0x10)
                {
                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }
            })
            Method (W3DC, 4, NotSerialized)
            {
                DerefOf (DerefOf (CACH [Arg0]) [Arg1]) [Arg2]
                     = Arg3
            }

            Method (R3DC, 3, NotSerialized)
            {
                Return (DerefOf (DerefOf (DerefOf (CACH [Arg0]) [Arg1]) [
                    Arg2]))
            }

            Method (WREG, 4, Serialized)
            {
                Local1 = (Timer + 0xC350)
                RST = 0x07
                ENB = Zero
                TEMP = RBCK /* \_SB_.PCI0.GEXP.RBCK */
                TEMP = CLR /* \_SB_.PCI0.GEXP.CLR_ */
                HOLD = 0x001C001C
                HCNT = 0x0210
                LCNT = 0x0280
                TAR = (EXPA + Arg1)
                ICON = 0x65
                ENB = One
                While ((ENSB != One))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                DATA = Arg2
                DATA = (END + Arg3)
                While ((ACTV != Zero))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                ENB = Zero
                While ((ENSB != Zero))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                W3DC (Arg1, Arg2, One, Arg3)
                If ((R3DC (Arg1, Arg2, Zero) == One))
                {
                    W3DC (Arg1, Arg2, Zero, 0x02)
                }

                Return (Zero)
            }

            Method (RREG, 3, Serialized)
            {
                If ((UCCH == One))
                {
                    If ((R3DC (Arg1, Arg2, Zero) == 0x02))
                    {
                        Return (R3DC (Arg1, Arg2, One))
                    }
                }

                Local1 = (Timer + 0xC350)
                RST = 0x07
                ENB = Zero
                TEMP = RBCK /* \_SB_.PCI0.GEXP.RBCK */
                TEMP = CLR /* \_SB_.PCI0.GEXP.CLR_ */
                HOLD = 0x001C001C
                HCNT = 0x0210
                LCNT = 0x0280
                TAR = (EXPA + Arg1)
                ICON = 0x65
                ENB = One
                While ((ENSB != One))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                DATA = Arg2
                DATA = (END + READ)
                While ((ACTV != Zero))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                Local0 = DATA /* \_SB_.PCI0.GEXP.DATA */
                ENB = Zero
                While ((ENSB != Zero))
                {
                    If ((Timer > Local1))
                    {
                        Return (Zero)
                    }
                }

                Return (Local0)
            }

            Method (PS0, 1, Serialized)
            {
                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)
                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                D0D3 = Zero
                TEMP = D0D3 /* \_SB_.PCI0.GEXP.PS0_.D0D3 */
            }

            Method (PS3, 1, Serialized)
            {
                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)
                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                D0D3 = 0x03
                TEMP = D0D3 /* \_SB_.PCI0.GEXP.PS3_.D0D3 */
            }

            Method (CSER, 5, Serialized)
            {
                Name (SB1X, Zero)
                Name (SB0X, Zero)
                Name (SMDX, Zero)
                Name (PINN, Zero)
                Name (REGN, Zero)
                Name (REGA, Zero)
                Name (OLDV, Zero)
                Name (NEWV, Zero)
                Name (RETV, Zero)
                If ((Arg0 > 0x05))
                {
                    Return (Zero)
                }

                If ((Arg0 == Zero))
                {
                    SB1X = SB10 /* \SB10 */
                    SB0X = SB00 /* \SB00 */
                    SMDX = SMD0 /* \SMD0 */
                }

                If ((Arg0 == One))
                {
                    SB1X = SB11 /* \SB11 */
                    SB0X = SB01 /* \SB01 */
                    SMDX = SMD1 /* \SMD1 */
                }

                If ((Arg0 == 0x02))
                {
                    SB1X = SB12 /* \SB12 */
                    SB0X = SB02 /* \SB02 */
                    SMDX = SMD2 /* \SMD2 */
                }

                If ((Arg0 == 0x03))
                {
                    SB1X = SB13 /* \SB13 */
                    SB0X = SB03 /* \SB03 */
                    SMDX = SMD3 /* \SMD3 */
                }

                If ((Arg0 == 0x04))
                {
                    SB1X = SB14 /* \SB14 */
                    SB0X = SB04 /* \SB04 */
                    SMDX = SMD4 /* \SMD4 */
                }

                If ((Arg0 == 0x05))
                {
                    SB1X = SB15 /* \SB15 */
                    SB0X = SB05 /* \SB05 */
                    SMDX = SMD5 /* \SMD5 */
                }

                If ((Arg0 > 0x05))
                {
                    Return (Zero)
                }

                If ((Arg1 > One))
                {
                    Return (Zero)
                }

                If ((Arg2 > 0x17))
                {
                    Return (Zero)
                }

                If ((Arg3 > One))
                {
                    Return (Zero)
                }

                If ((Arg4 > 0x02))
                {
                    Return (Zero)
                }

                If ((SMDX != 0x03))
                {
                    Return (Zero)
                }

                If ((Arg4 == Zero))
                {
                    Local0 = OUTR /* \_SB_.PCI0.GEXP.OUTR */
                }

                If ((Arg4 == One))
                {
                    Local0 = CFGR /* \_SB_.PCI0.GEXP.CFGR */
                }

                If ((Arg4 == 0x02))
                {
                    Local0 = INR /* \_SB_.PCI0.GEXP.INR_ */
                }

                If ((Arg4 == 0x03))
                {
                    Local0 = POLR /* \_SB_.PCI0.GEXP.POLR */
                }

                PS0 (SB1X)
                Divide (Arg2, PPR, PINN, REGN) /* \_SB_.PCI0.GEXP.CSER.REGN */
                REGA = DerefOf (Local0 [REGN])
                OLDV = RREG (SB0X, Arg1, REGA)
                If ((Arg4 == 0x02))
                {
                    RETV = (One & (OLDV >> PINN))
                }
                Else
                {
                    NEWV = (OLDV & ~(One << PINN))
                    NEWV |= (Arg3 << PINN) /* \_SB_.PCI0.GEXP.CSER.NEWV */
                    If ((NEWV != OLDV))
                    {
                        WREG (SB0X, Arg1, REGA, NEWV)
                    }
                }

                PS3 (SB1X)
                Return (RETV) /* \_SB_.PCI0.GEXP.CSER.RETV */
            }
        }
    }

    If ((PCHV () == SPTL))
    {
        Scope (_SB.PCI0)
        {
            Device (PEMC)
            {
                Name (_ADR, 0x001E0004)  // _ADR: Address
                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)
                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    PGEN = Zero
                    PCRA (0xC0, 0x0600, 0x7FFFFFBA)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x80000045)
                    PSTA &= 0xFFFFFFFC
                    TEMP = PSTA /* \_SB_.PCI0.PEMC.PSTA */
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    PGEN = One
                    PSTA |= 0x03
                    TEMP = PSTA /* \_SB_.PCI0.PEMC.PSTA */
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    ADBG (Concatenate ("EMH4=", ToDecimalString (EMH4)))
                    If ((Arg0 == ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61") /* Unknown UUID */))
                    {
                        If ((Arg1 >= Zero))
                        {
                            Switch (ToInteger (Arg2))
                            {
                                Case (Zero)
                                {
                                    If ((EMH4 == One))
                                    {
                                        Return (Buffer (0x02)
                                        {
                                             0x61, 0x02                                       // a.
                                        })
                                    }

                                    Return (Buffer (0x02)
                                    {
                                         0x21, 0x02                                       // !.
                                    })
                                }
                                Case (0x05)
                                {
                                    Return (Buffer (One)
                                    {
                                         0x03                                             // .
                                    })
                                }
                                Case (0x06)
                                {
                                    Return (Buffer (One)
                                    {
                                         0x05                                             // .
                                    })
                                }
                                Case (0x09)
                                {
                                    Return (ToBuffer (EMDS))
                                }

                            }
                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Device (CARD)
                {
                    Name (_ADR, 0x08)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (PSDC)
            {
                Name (_ADR, 0x001E0006)  // _ADR: Address
                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)
                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    PGEN = Zero
                    PCRA (0xC0, 0x0600, 0xFFFFFE7A)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x0185)
                    PSTA &= 0xFFFFFFFC
                    TEMP = PSTA /* \_SB_.PCI0.PSDC.PSTA */
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    PGEN = One
                    PSTA |= 0x03
                    TEMP = PSTA /* \_SB_.PCI0.PSDC.PSTA */
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If (PCIC (Arg0))
                    {
                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    If ((Arg0 == ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61") /* Unknown UUID */))
                    {
                        If ((Arg1 >= Zero))
                        {
                            Switch (ToInteger (Arg2))
                            {
                                Case (Zero)
                                {
                                    Return (Buffer (One)
                                    {
                                         0x19                                             // .
                                    })
                                }
                                Case (0x03)
                                {
                                    Sleep (0x64)
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }
                                Case (0x04)
                                {
                                    Sleep (0x64)
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }

                            }
                        }
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (ISHD)
        {
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (HECI)
        {
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Switch (ToInteger (DerefOf (Arg3 [Zero])))
                        {
                            Case (Zero)
                            {
                            }
                            Case (One)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x80) // Status Change
                                    P8XH (Zero, 0x5D)
                                }
                            }
                            Case (0x02)
                            {
                            }
                            Case (0x03)
                            {
                            }

                        }

                        Return (Zero)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Name (ECUP, One)
    Mutex (EHLD, 0x00)
    Method (TBTD, 1, Serialized)
    {
        ADBG ("TBTD")
        Switch (ToInteger (Arg0))
        {
            Case (Package (0x08)
                {
                    One, 
                    0x02, 
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07, 
                    0x08
                }

)
            {
                Local0 = 0x1C
            }
            Case (Package (0x08)
                {
                    0x09, 
                    0x0A, 
                    0x0B, 
                    0x0C, 
                    0x0D, 
                    0x0E, 
                    0x0F, 
                    0x10
                }

)
            {
                Local0 = 0x1D
            }
            Case (Package (0x08)
                {
                    0x11, 
                    0x12, 
                    0x13, 
                    0x14, 
                    0x15, 
                    0x16, 
                    0x17, 
                    0x18
                }

)
            {
                Local0 = 0x1B
            }
            Case (Package (0x03)
                {
                    0x19, 
                    0x1A, 
                    0x1B
                }

)
            {
                Local0 = One
            }

        }

        ADBG ("Device no")
        ADBG (Local0)
        Return (Local0)
    }

    Method (TBTF, 1, Serialized)
    {
        ADBG ("TBTF")
        Switch (ToInteger (Arg0))
        {
            Case (One)
            {
                Local0 = (RPA1 & 0x0F)
            }
            Case (0x02)
            {
                Local0 = (RPA2 & 0x0F)
            }
            Case (0x03)
            {
                Local0 = (RPA3 & 0x0F)
            }
            Case (0x04)
            {
                Local0 = (RPA4 & 0x0F)
            }
            Case (0x05)
            {
                Local0 = (RPA5 & 0x0F)
            }
            Case (0x06)
            {
                Local0 = (RPA6 & 0x0F)
            }
            Case (0x07)
            {
                Local0 = (RPA7 & 0x0F)
            }
            Case (0x08)
            {
                Local0 = (RPA8 & 0x0F)
            }
            Case (0x09)
            {
                Local0 = (RPA9 & 0x0F)
            }
            Case (0x0A)
            {
                Local0 = (RPAA & 0x0F)
            }
            Case (0x0B)
            {
                Local0 = (RPAB & 0x0F)
            }
            Case (0x0C)
            {
                Local0 = (RPAC & 0x0F)
            }
            Case (0x0D)
            {
                Local0 = (RPAD & 0x0F)
            }
            Case (0x0E)
            {
                Local0 = (RPAE & 0x0F)
            }
            Case (0x0F)
            {
                Local0 = (RPAF & 0x0F)
            }
            Case (0x10)
            {
                Local0 = (RPAG & 0x0F)
            }
            Case (0x11)
            {
                Local0 = (RPAH & 0x0F)
            }
            Case (0x12)
            {
                Local0 = (RPAI & 0x0F)
            }
            Case (0x13)
            {
                Local0 = (RPAJ & 0x0F)
            }
            Case (0x14)
            {
                Local0 = (RPAK & 0x0F)
            }
            Case (0x15)
            {
                Local0 = (RPAL & 0x0F)
            }
            Case (0x16)
            {
                Local0 = (RPAM & 0x0F)
            }
            Case (0x17)
            {
                Local0 = (RPAN & 0x0F)
            }
            Case (0x18)
            {
                Local0 = (RPAO & 0x0F)
            }
            Case (0x19)
            {
                Local0 = Zero
            }
            Case (0x1A)
            {
                Local0 = One
            }
            Case (0x1B)
            {
                Local0 = 0x02
            }

        }

        ADBG ("Function no")
        ADBG (Local0)
        Return (Local0)
    }

    Method (MMRP, 0, NotSerialized)
    {
        Local0 = \_SB.PCI0.GPCB ()
        Local0 += (TBTD (TBSE) << 0x0F)
        Local0 += (TBTF (TBSE) << 0x0C)
        Return (Local0)
    }

    Method (MMTB, 0, Serialized)
    {
        ADBG ("MMTB")
        Local0 = \_SB.PCI0.GPCB ()
        Local0 += (TBTD (TBSE) << 0x0F)
        Local0 += (TBTF (TBSE) << 0x0C)
        OperationRegion (MMMM, SystemMemory, Local0, 0x1A)
        Field (MMMM, AnyAcc, NoLock, Preserve)
        {
            Offset (0x19), 
            SBUS,   8
        }

        Local2 = SBUS /* \MMTB.SBUS */
        Local0 = \_SB.PCI0.GPCB ()
        Local2 *= 0x00100000
        Local0 += Local2
        ADBG ("TBT-US-ADR")
        ADBG (Local0)
        Return (Local0)
    }

    Method (FFTB, 0, NotSerialized)
    {
        ADBG ("FFTB")
        Local0 = (MMTB () + 0x0548)
        OperationRegion (PXVD, SystemMemory, Local0, 0x08)
        Field (PXVD, DWordAcc, NoLock, Preserve)
        {
            TB2P,   32, 
            P2TB,   32
        }

        Local1 = TB2P /* \FFTB.TB2P */
        If ((Local1 == 0xFFFFFFFF))
        {
            ADBG ("FFTb 1")
            Return (One)
        }
        Else
        {
            ADBG ("FFTb 0")
            Return (Zero)
        }
    }

    Method (SXTB, 0, NotSerialized)
    {
        ADBG ("SXTB")
        Local0 = (MMTB () + 0x0548)
        OperationRegion (PXVD, SystemMemory, Local0, 0x08)
        Field (PXVD, DWordAcc, NoLock, Preserve)
        {
            TB2P,   32, 
            P2TB,   32
        }

        If ((TBWS == Zero))
        {
            ADBG ("sending GO2SX_NO_WAKE")
            P2TB = 0x07
        }
        Else
        {
            ADBG ("sending GO2SX")
            P2TB = 0x05
        }
    }

    Scope (\)
    {
        Device (CHUB)
        {
            Name (_HID, EisaId ("INT339B"))  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((CHEN == One))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {
                    If ((ToInteger (Arg1) >= Zero))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            Case (One)
                            {
                                Switch (ToInteger (DerefOf (Arg3 [Zero])))
                                {
                                    Case (Zero)
                                    {
                                    }

                                }
                            }

                        }

                        Return (Zero)
                    }

                    Return (Zero)
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB)
    {
        OperationRegion (ITSS, SystemMemory, 0xFDC43100, 0x0208)
        Field (ITSS, ByteAcc, NoLock, Preserve)
        {
            PARC,   8, 
            PBRC,   8, 
            PCRC,   8, 
            PDRC,   8, 
            PERC,   8, 
            PFRC,   8, 
            PGRC,   8, 
            PHRC,   8, 
            Offset (0x200), 
                ,   1, 
                ,   1, 
            SCGE,   1
        }
    }

    Mutex (MUTX, 0x00)
    Mutex (OSUM, 0x00)
    Event (WFEV)
    OperationRegion (PRT0, SystemIO, 0x80, 0x04)
    Field (PRT0, DWordAcc, Lock, Preserve)
    {
        P80H,   32
    }

    Method (D8XH, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            P80D = ((P80D & 0xFFFFFF00) | Arg1)
        }

        If ((Arg0 == One))
        {
            P80D = ((P80D & 0xFFFF00FF) | (Arg1 << 0x08))
        }

        If ((Arg0 == 0x02))
        {
            P80D = ((P80D & 0xFF00FFFF) | (Arg1 << 0x10))
        }

        If ((Arg0 == 0x03))
        {
            P80D = ((P80D & 0x00FFFFFF) | (Arg1 << 0x18))
        }

        P80H = P80D /* \P80D */
    }

    Method (P8XH, 2, Serialized)
    {
        If (CondRefOf (MDBG))
        {
            D8XH (Arg0, Arg1)
        }
    }

    Method (ADBG, 1, Serialized)
    {
        If (CondRefOf (MDBG))
        {
            Return (MDBG (Arg0))
        }

        Return (Zero)
    }

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
    Field (SPRT, ByteAcc, Lock, Preserve)
    {
        SSMP,   8
    }

    Name (WAKP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        GPIC = Arg0
        PICM = Arg0
    }

    Method (RPTS, 1, NotSerialized)
    {
        P80D = Zero
        D8XH (Zero, Arg0)
        ADBG (Concatenate ("_PTS=", ToHexString (Arg0)))
        If ((TBTS == One))
        {
            Reset (WFEV)
        }

        If ((Arg0 == 0x03))
        {
            If (CondRefOf (\_PR.DTSE))
            {
                If ((\_PR.DTSE && (TCNT > One)))
                {
                    TRAP (0x02, 0x1E)
                }
            }
        }

        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((CondRefOf (\_SB.PCI0.LPCB.H_EC.PB10) && ECON))
            {
                If (\_SB.PCI0.LPCB.H_EC.ECAV)
                {
                    If (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PB10)))
                    {
                        PB1E |= 0x80
                    }
                    Else
                    {
                        PB1E &= 0x7F
                    }
                }
            }
        }

        If ((IVCM == One))
        {
            \_SB.SGOV (0x02040000, Zero)
            \_SB.SGOV (0x02010002, Zero)
        }

        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }

        If ((((Arg0 == 0x03) || (Arg0 == 0x04)) || (Arg0 == 0x05)))
        {
            If ((PFLV == 0x02))
            {
                \_SB.SGOV (0x02010003, One)
            }
        }
    }

    Method (RWAK, 1, Serialized)
    {
        D8XH (One, 0xAB)
        If ((Arg0 == 0x03))
        {
            P80D = Zero
            D8XH (Zero, 0x30)
        }

        If ((Arg0 == 0x04))
        {
            P80D = Zero
            D8XH (Zero, 0x40)
        }

        ADBG ("_WAK")
        \_SB.PCI0.GEXP.INVC ()
        If ((S0ID == One))
        {
            \_SB.SCGE = One
        }

        If (NEXP)
        {
            If ((OSCC & 0x02))
            {
                \_SB.PCI0.NHPG ()
            }

            If ((OSCC & 0x04))
            {
                \_SB.PCI0.NPME ()
            }
        }

        If ((Arg0 == 0x03))
        {
            If ((Zero == ACTT))
            {
                If ((ECON == One))
                {
                    \_SB.PCI0.LPCB.H_EC.ECWT (Zero, RefOf (\_SB.PCI0.LPCB.H_EC.CFAN))
                }
            }
        }

        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((CondRefOf (\_SB.PCI0.LPCB.H_EC.PB10) && ECON))
            {
                If ((PB1E & 0x80))
                {
                    \_SB.PCI0.LPCB.H_EC.ECWT (One, RefOf (\_SB.PCI0.LPCB.H_EC.PB10))
                }
            }

            If ((GBSX & 0x40))
            {
                \_SB.PCI0.GFX0.IUEH (0x06)
            }

            If ((GBSX & 0x80))
            {
                \_SB.PCI0.GFX0.IUEH (0x07)
            }

            If (CondRefOf (\_PR.DTSE))
            {
                If ((\_PR.DTSE && (TCNT > One)))
                {
                    TRAP (0x02, 0x14)
                }
            }

            If ((TBTS == One))
            {
                Acquire (OSUM, 0xFFFF)
                \_GPE.TINI ()
                Release (OSUM)
            }

            If ((\_SB.PCI0.RP01.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP01, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP02.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP02, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP03.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP03, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP04.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP04, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP05.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP05, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP06.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP06, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP07.VDID != 0xFFFFFFFF))
            {
                If ((DSTS == Zero))
                {
                    Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                }
            }

            If ((\_SB.PCI0.RP08.VDID != 0xFFFFFFFF))
            {
                If ((DSTS == Zero))
                {
                    Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                }
            }

            If ((\_SB.PCI0.RP09.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP09, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP10.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP10, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP11.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP11, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP12.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP12, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP13.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP13, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP14.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP14, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP15.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP15, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP16.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP16, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP17.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP17, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP18.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP18, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP19.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP19, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP20.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP20, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP21.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP21, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP22.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP22, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP23.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP23, Zero) // Bus Check
            }

            If ((\_SB.PCI0.RP24.VDID != 0xFFFFFFFF))
            {
                Notify (\_SB.PCI0.RP24, Zero) // Bus Check
            }

            If (CondRefOf (\_SB.VMEN))
            {
                \_SB.VMEN = 0xFF
            }
        }

        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((\_SB.PWRB.PBST == One))
            {
                If (PBSS)
                {
                    Notify (\_SB.PWRB, 0x02) // Device Wake
                    PBSS = One
                }
            }
        }

        If ((TBTS == One))
        {
            Signal (WFEV)
        }

        Return (Package (0x02)
        {
            Zero, 
            Zero
        })
    }

    Method (GETB, 3, Serialized)
    {
        Local0 = (Arg0 * 0x08)
        Local1 = (Arg1 * 0x08)
        CreateField (Arg2, Local0, Local1, TBF3)
        Return (TBF3) /* \GETB.TBF3 */
    }

    Method (PNOT, 0, Serialized)
    {
        If ((TCNT > One))
        {
            If ((PDC0 & 0x08))
            {
                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
            }

            If ((PDC1 & 0x08))
            {
                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
            }

            If ((PDC2 & 0x08))
            {
                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
            }

            If ((PDC3 & 0x08))
            {
                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
            }

            If ((PDC4 & 0x08))
            {
                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
            }

            If ((PDC5 & 0x08))
            {
                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
            }

            If ((PDC6 & 0x08))
            {
                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
            }

            If ((PDC7 & 0x08))
            {
                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
            }
        }
        Else
        {
            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
        }

        If ((TCNT > One))
        {
            If (((PDC0 & 0x08) && (PDC0 & 0x10)))
            {
                Notify (\_PR.CPU0, 0x81) // C-State Change
            }

            If (((PDC1 & 0x08) && (PDC1 & 0x10)))
            {
                Notify (\_PR.CPU1, 0x81) // C-State Change
            }

            If (((PDC2 & 0x08) && (PDC2 & 0x10)))
            {
                Notify (\_PR.CPU2, 0x81) // C-State Change
            }

            If (((PDC3 & 0x08) && (PDC3 & 0x10)))
            {
                Notify (\_PR.CPU3, 0x81) // C-State Change
            }

            If (((PDC4 & 0x08) && (PDC4 & 0x10)))
            {
                Notify (\_PR.CPU4, 0x81) // C-State Change
            }

            If (((PDC5 & 0x08) && (PDC5 & 0x10)))
            {
                Notify (\_PR.CPU5, 0x81) // C-State Change
            }

            If (((PDC6 & 0x08) && (PDC6 & 0x10)))
            {
                Notify (\_PR.CPU6, 0x81) // C-State Change
            }

            If (((PDC7 & 0x08) && (PDC7 & 0x10)))
            {
                Notify (\_PR.CPU7, 0x81) // C-State Change
            }
        }
        Else
        {
            Notify (\_PR.CPU0, 0x81) // C-State Change
        }

        If ((ECON == One))
        {
            Notify (\_SB.PCI0.LPCB.H_EC.BAT0, 0x81) // Information Change
            Notify (\_SB.PCI0.LPCB.H_EC.BAT1, 0x81) // Information Change
            Notify (\_SB.PCI0.LPCB.H_EC.BAT2, 0x81) // Information Change
        }

        If ((DPTF == One))
        {
            Notify (\_SB.IETM, 0x86) // Device-Specific
            If ((CHGE == One))
            {
                Notify (\_SB.PCI0.LPCB.H_EC.CHRG, 0x80) // Status Change
            }
        }
    }

    OperationRegion (MBAR, SystemMemory, (\_SB.PCI0.GMHB () + 0x5000), 0x1000)
    Field (MBAR, ByteAcc, NoLock, Preserve)
    {
        Offset (0x938), 
        PWRU,   4, 
        Offset (0x9A0), 
        PPL1,   15, 
        PL1E,   1, 
        CLP1,   1
    }

    Name (CLMP, Zero)
    Name (PLEN, Zero)
    Name (PLSV, 0x8000)
    Name (CSEM, Zero)
    Method (SPL1, 0, Serialized)
    {
        Name (PPUU, Zero)
        If ((CSEM == One))
        {
            Return (Zero)
        }

        CSEM = One
        PLSV = PPL1 /* \PPL1 */
        PLEN = PL1E /* \PL1E */
        CLMP = CLP1 /* \CLP1 */
        If ((PWRU == Zero))
        {
            PPUU = One
        }
        Else
        {
            PPUU = (PWRU-- << 0x02)
        }

        Local0 = (PLVL * PPUU) /* \SPL1.PPUU */
        Local1 = (Local0 / 0x03E8)
        PPL1 = Local1
        PL1E = One
        CLP1 = One
    }

    Method (RPL1, 0, Serialized)
    {
        PPL1 = PLSV /* \PLSV */
        PL1E = PLEN /* \PLEN */
        CLP1 = CLMP /* \CLMP */
        CSEM = Zero
    }

    Name (UAMS, Zero)
    Name (GLCK, Zero)
    Method (GUAM, 1, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                If ((GLCK == One))
                {
                    GLCK = Zero
                    P8XH (Zero, 0xE1)
                    P8XH (One, 0xAB)
                    ADBG ("Exit Resiliency")
                    \_SB.DION ()
                    If ((OSYS < 0x07DF))
                    {
                        \_SB.PCI0.LPCB.H_EC.ECNT (Zero)
                    }

                    If (PSCP)
                    {
                        If (CondRefOf (\_PR.CPU0._PPC))
                        {
                            \_PR.CPPC = Zero
                            PNOT ()
                        }
                    }

                    If (PLCS)
                    {
                        RPL1 ()
                    }
                }
            }
            Case (One)
            {
                If ((GLCK == Zero))
                {
                    GLCK = One
                    P8XH (Zero, 0xE0)
                    P8XH (One, Zero)
                    ADBG ("Enter Resiliency")
                    \_SB.DIOF ()
                    If ((OSYS < 0x07DF))
                    {
                        \_SB.PCI0.LPCB.H_EC.ECNT (One)
                    }

                    If (PSCP)
                    {
                        If ((CondRefOf (\_PR.CPU0._PSS) && CondRefOf (\_PR.CPU0._PPC)))
                        {
                            If ((PDC0 & 0x0400))
                            {
                                \_PR.CPPC = (SizeOf (\_PR.CPU0.TPSS) - One)
                            }
                            Else
                            {
                                \_PR.CPPC = (SizeOf (\_PR.CPU0.LPSS) - One)
                            }

                            PNOT ()
                        }
                    }

                    If (PLCS)
                    {
                        SPL1 ()
                    }
                }
            }
            Default
            {
                Return (Zero)
            }

        }

        UAMS = (Arg0 && !PWRS)
        P_CS ()
    }

    Method (P_CS, 0, Serialized)
    {
        If (CondRefOf (\_SB.PCI0.PAUD.PUAM))
        {
            \_SB.PCI0.PAUD.PUAM ()
        }

        If ((OSYS == 0x07DC))
        {
            If (CondRefOf (\_SB.PCI0.XHC.DUAM))
            {
                \_SB.PCI0.XHC.DUAM ()
            }
        }
    }

    Scope (\)
    {
        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)
        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }
    }

    Method (TRAP, 2, Serialized)
    {
        SMIF = Arg1
        If ((Arg0 == 0x02))
        {
            \_PR.DTSF = Arg1
            \_PR.TRPD = Zero
            Return (\_PR.DTSF) /* External reference */
        }

        If ((Arg0 == 0x03))
        {
            TRPH = Zero
        }

        If ((Arg0 == 0x04))
        {
            \_PR.TRPF = Zero
        }

        Return (SMIF) /* \SMIF */
    }

    Scope (_SB.PCI0)
    {
        Method (PTMA, 0, NotSerialized)
        {
            Return (\_PR.BGMA) /* External reference */
        }

        Method (PTMS, 0, NotSerialized)
        {
            Return (\_PR.BGMS) /* External reference */
        }

        Method (PTIA, 0, NotSerialized)
        {
            Return (\_PR.BGIA) /* External reference */
        }

        Method (_INI, 0, Serialized)  // _INI: Initialize
        {
            OSYS = 0x07D0
            If (CondRefOf (\_OSI))
            {
                If (_OSI ("Linux"))
                {
                    OSYS = 0x03E8
                }

                If (_OSI ("Windows 2001"))
                {
                    OSYS = 0x07D1
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSYS = 0x07D1
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSYS = 0x07D2
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSYS = 0x07D3
                }

                If (_OSI ("Windows 2006"))
                {
                    OSYS = 0x07D6
                }

                If (_OSI ("Windows 2009"))
                {
                    OSYS = 0x07D9
                }

                If (_OSI ("Windows 2012"))
                {
                    OSYS = 0x07DC
                }

                If (_OSI ("Windows 2013"))
                {
                    OSYS = 0x07DD
                }

                If (_OSI ("Windows 2015"))
                {
                    OSYS = 0x07DF
                }
            }

            If (CondRefOf (\_PR.DTSE))
            {
                If ((\_PR.DTSE >= One))
                {
                    \_PR.DSAE = One
                }
            }

            If ((TBTS == One))
            {
                Acquire (OSUM, 0xFFFF)
                P8XH (Zero, 0x51)
                \_GPE.TINI ()
                Release (OSUM)
                Signal (WFEV)
            }
        }

        Method (NHPG, 0, Serialized)
        {
            ^RP01.HPEX = Zero
            ^RP02.HPEX = Zero
            ^RP03.HPEX = Zero
            ^RP04.HPEX = Zero
            ^RP05.HPEX = Zero
            ^RP06.HPEX = Zero
            ^RP07.HPEX = Zero
            ^RP08.HPEX = Zero
            ^RP09.HPEX = Zero
            ^RP10.HPEX = Zero
            ^RP11.HPEX = Zero
            ^RP12.HPEX = Zero
            ^RP13.HPEX = Zero
            ^RP14.HPEX = Zero
            ^RP15.HPEX = Zero
            ^RP16.HPEX = Zero
            ^RP17.HPEX = Zero
            ^RP18.HPEX = Zero
            ^RP19.HPEX = Zero
            ^RP20.HPEX = Zero
            ^RP01.HPSX = One
            ^RP02.HPSX = One
            ^RP03.HPSX = One
            ^RP04.HPSX = One
            ^RP05.HPSX = One
            ^RP06.HPSX = One
            ^RP07.HPSX = One
            ^RP08.HPSX = One
            ^RP09.HPSX = One
            ^RP10.HPSX = One
            ^RP11.HPSX = One
            ^RP12.HPSX = One
            ^RP13.HPSX = One
            ^RP14.HPSX = One
            ^RP15.HPSX = One
            ^RP16.HPSX = One
            ^RP17.HPSX = One
            ^RP18.HPSX = One
            ^RP19.HPSX = One
            ^RP20.HPSX = One
            ^RP21.HPSX = One
            ^RP22.HPSX = One
            ^RP23.HPSX = One
            ^RP24.HPSX = One
        }

        Method (NPME, 0, Serialized)
        {
            ^RP01.PMEX = Zero
            ^RP02.PMEX = Zero
            ^RP03.PMEX = Zero
            ^RP04.PMEX = Zero
            ^RP05.PMEX = Zero
            ^RP06.PMEX = Zero
            ^RP07.PMEX = Zero
            ^RP08.PMEX = Zero
            ^RP09.PMEX = Zero
            ^RP10.PMEX = Zero
            ^RP11.PMEX = Zero
            ^RP12.PMEX = Zero
            ^RP13.PMEX = Zero
            ^RP14.PMEX = Zero
            ^RP15.PMEX = Zero
            ^RP16.PMEX = Zero
            ^RP17.PMEX = Zero
            ^RP18.PMEX = Zero
            ^RP19.PMEX = Zero
            ^RP20.PMEX = Zero
            ^RP01.PMSX = One
            ^RP02.PMSX = One
            ^RP03.PMSX = One
            ^RP04.PMSX = One
            ^RP05.PMSX = One
            ^RP06.PMSX = One
            ^RP07.PMSX = One
            ^RP08.PMSX = One
            ^RP09.PMSX = One
            ^RP10.PMSX = One
            ^RP11.PMSX = One
            ^RP12.PMSX = One
            ^RP13.PMSX = One
            ^RP14.PMSX = One
            ^RP15.PMSX = One
            ^RP16.PMSX = One
            ^RP17.PMSX = One
            ^RP18.PMSX = One
            ^RP19.PMSX = One
            ^RP20.PMSX = One
            ^RP21.PMSX = One
            ^RP22.PMSX = One
            ^RP23.PMSX = One
            ^RP24.PMSX = One
        }
    }

    Scope (\)
    {
        Name (PICM, Zero)
        Name (PRWP, Package (0x02)
        {
            Zero, 
            Zero
        })
        Method (GPRW, 2, NotSerialized)
        {
            PRWP [Zero] = Arg0
            Local0 = (SS1 << One)
            Local0 |= (SS2 << 0x02)
            Local0 |= (SS3 << 0x03)
            Local0 |= (SS4 << 0x04)
            If (((One << Arg1) & Local0))
            {
                PRWP [One] = Arg1
            }
            Else
            {
                Local0 >>= One
                FindSetLeftBit (Local0, PRWP [One])
            }

            Return (PRWP) /* \PRWP */
        }
    }

    Scope (_SB)
    {
        Name (OSCI, Zero)
        Name (OSCO, Zero)
        Name (OSCP, Zero)
        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, Zero, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            If ((S0ID == One))
            {
                SCGE = One
            }

            If ((Arg0 == ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {
                If ((Arg1 == One))
                {
                    OSCP = CAP0 /* \_SB_._OSC.CAP0 */
                    If ((CAP0 & 0x04))
                    {
                        OSCO = 0x04
                        If (((SGMD & 0x0F) != 0x02))
                        {
                            If ((RTD3 == Zero))
                            {
                                CAP0 &= 0x3B
                                STS0 |= 0x10
                            }
                        }
                    }
                }
                Else
                {
                    STS0 &= 0xFFFFFF00
                    STS0 |= 0x0A
                }
            }
            Else
            {
                STS0 &= 0xFFFFFF00
                STS0 |= 0x06
            }

            Return (Arg3)
        }

        Device (EPC)
        {
            Name (_HID, EisaId ("INT0E0C"))  // _HID: Hardware ID
            Name (_STR, Unicode ("Enclave Page Cache 1.0"))  // _STR: Description String
            Name (_MLS, Package (0x01)  // _MLS: Multiple Language String
            {
                Package (0x02)
                {
                    "en", 
                    Unicode ("Enclave Page Cache 1.0")
                }
            })
            Name (RBUF, ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000001, // Length
                    ,, _Y3E, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateQWordField (RBUF, \_SB.EPC._Y3E._MIN, EMIN)  // _MIN: Minimum Base Address
                CreateQWordField (RBUF, \_SB.EPC._Y3E._MAX, EMAX)  // _MAX: Maximum Base Address
                CreateQWordField (RBUF, \_SB.EPC._Y3E._LEN, ELEN)  // _LEN: Length
                EMIN = \_PR.EMNA /* External reference */
                ELEN = \_PR.ELNG /* External reference */
                EMAX = ((\_PR.EMNA + \_PR.ELNG) - One)
                Return (RBUF) /* \_SB_.EPC_.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_PR.EPCS != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
        }
    }

    Scope (_SB)
    {
        Device (BTKL)
        {
            Name (_HID, "INT3420" /* Intel Bluetooth RF Kill */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
            }

            Method (PSTS, 0, NotSerialized)
            {
            }
        }
    }

    Scope (_SB)
    {
        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    If ((RTVM == One))
    {
        Scope (_SB)
        {
            Name (VMEN, 0xFF)
            Method (VMON, 0, Serialized)
            {
                If ((VMEN == One))
                {
                    Return (Zero)
                }

                ^PCI0.LPCB.H_EC.ECWT (0x7A, RefOf (^PCI0.LPCB.H_EC.PVOL))
                ^PCI0.LPCB.H_EC.ECMD (0x1C)
                VMEN = One
            }

            Method (VMOF, 0, Serialized)
            {
                If ((VMEN == Zero))
                {
                    Return (Zero)
                }

                ^PCI0.LPCB.H_EC.ECWT (0x3A, RefOf (^PCI0.LPCB.H_EC.PVOL))
                ^PCI0.LPCB.H_EC.ECMD (0x1C)
                VMEN = Zero
            }
        }
    }

    Name (TDMA, 0x80000000)
    Name (TDPG, 0x80000000)
    Name (TDTI, 0x80000000)
    Scope (_GPE)
    {
        Method (OSUP, 1, Serialized)
        {
            ADBG ("OSUP")
            Local0 = (Arg0 + 0x0548)
            OperationRegion (PXVD, SystemMemory, Local0, 0x08)
            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                TB2P,   32, 
                P2TB,   32
            }

            Local1 = 0x64
            P2TB = 0x0D
            While ((Local1 > Zero))
            {
                Local1 = (Local1 - One)
                Local2 = TB2P /* \_GPE.OSUP.TB2P */
                If ((Local2 == 0xFFFFFFFF))
                {
                    ADBG ("Dev gone")
                    Return (0x02)
                }

                If ((Local2 & One))
                {
                    ADBG ("Cmd acknowledged")
                    Break
                }

                Sleep (0x32)
            }

            P2TB = Zero
            ADBG ("End-of-OSUP")
            Return (One)
        }

        Method (PGWA, 0, Serialized)
        {
            ADBG ("PGWA")
            If ((TBSE >= 0x19))
            {
                Local0 = \_SB.PCI0.GPCB ()
                Local0 += (TBTD (TBSE) << 0x0F)
                Local0 += (TBTF (TBSE) << 0x0C)
                ADBG (Local0)
                OperationRegion (ABCD, SystemMemory, Local0, 0x1000)
                Field (ABCD, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PWRS,   2, 
                    Offset (0xB0), 
                        ,   4, 
                    LNKD,   1, 
                    Offset (0x11A), 
                        ,   1, 
                    VCNP,   1, 
                    Offset (0x508), 
                    TREN,   1
                }

                If ((PWRS != Zero))
                {
                    ADBG ("Force D0")
                    PWRS = Zero
                    \_PR.POWS = Zero
                    Sleep (0x10)
                }

                If ((LNKD != Zero))
                {
                    ADBG ("Link Enable")
                    LNKD = Zero
                    TREN = One
                    Local6 = Zero
                    Local7 = 0x64
                    While ((Local6 < Local7))
                    {
                        If ((VCNP == Zero))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local6 += 0x10
                    }
                }
            }
        }

        Method (TBFF, 0, Serialized)
        {
            ADBG ("TBFF")
            Local0 = MMTB ()
            OperationRegion (PXVD, SystemMemory, Local0, 0x04)
            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                VEDI,   32
            }

            Local1 = VEDI /* \_GPE.TBFF.VEDI */
            If ((Local1 == 0xFFFFFFFF))
            {
                Return (OSUP (Local0))
            }
            Else
            {
                ADBG ("Dev Present")
                Return (Zero)
            }
        }

        Method (TSUB, 0, Serialized)
        {
            ADBG ("TSUB")
            Local0 = \_SB.PCI0.GPCB ()
            Local0 += (TBTD (TBSE) << 0x0F)
            Local0 += (TBTF (TBSE) << 0x0C)
            ADBG ("ADR")
            ADBG (Local0)
            OperationRegion (MMMM, SystemMemory, Local0, 0x1A)
            Field (MMMM, AnyAcc, NoLock, Preserve)
            {
                Offset (0x19), 
                SBUS,   8
            }

            ADBG ("Sec Bus")
            ADBG (SBUS)
            Return (SBUS) /* \_GPE.TSUB.SBUS */
        }

        Method (WSUB, 0, NotSerialized)
        {
            ADBG ("WSUB")
            Local0 = Zero
            Local1 = Zero
            While (One)
            {
                Local1 = TSUB ()
                If (Local1)
                {
                    ADBG ("WSUB-Finished")
                    Break
                }
                Else
                {
                    Local0 += One
                    If ((Local0 > 0x03E8))
                    {
                        Sleep (0x03E8)
                        ADBG ("WSUB-Deadlock")
                    }
                    Else
                    {
                        Sleep (0x10)
                    }
                }
            }
        }

        Method (WWAK, 0, NotSerialized)
        {
            ADBG ("WWAK")
            Wait (WFEV, 0xFFFF)
            Signal (WFEV)
        }

        Method (NTFY, 0, Serialized)
        {
            ADBG ("NTFY")
            If ((NOHP == One))
            {
                Switch (ToInteger (TBSE))
                {
                    Case (One)
                    {
                        ADBG ("Notify RP01")
                        Notify (\_SB.PCI0.RP01, Zero) // Bus Check
                    }
                    Case (0x02)
                    {
                        ADBG ("Notify RP02")
                        Notify (\_SB.PCI0.RP02, Zero) // Bus Check
                    }
                    Case (0x03)
                    {
                        ADBG ("Notify RP03")
                        Notify (\_SB.PCI0.RP03, Zero) // Bus Check
                    }
                    Case (0x04)
                    {
                        ADBG ("Notify RP04")
                        Notify (\_SB.PCI0.RP04, Zero) // Bus Check
                    }
                    Case (0x05)
                    {
                        ADBG ("Notify RP05")
                        Notify (\_SB.PCI0.RP05, Zero) // Bus Check
                    }
                    Case (0x06)
                    {
                        ADBG ("Notify RP06")
                        Notify (\_SB.PCI0.RP06, Zero) // Bus Check
                    }
                    Case (0x07)
                    {
                        ADBG ("Notify RP07")
                        Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                    }
                    Case (0x08)
                    {
                        ADBG ("Notify RP08")
                        Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                    }
                    Case (0x09)
                    {
                        ADBG ("Notify RP09")
                        Notify (\_SB.PCI0.RP09, Zero) // Bus Check
                    }
                    Case (0x0A)
                    {
                        ADBG ("Notify RP10")
                        Notify (\_SB.PCI0.RP10, Zero) // Bus Check
                    }
                    Case (0x0B)
                    {
                        ADBG ("Notify RP11")
                        Notify (\_SB.PCI0.RP11, Zero) // Bus Check
                    }
                    Case (0x0C)
                    {
                        ADBG ("Notify RP12")
                        Notify (\_SB.PCI0.RP12, Zero) // Bus Check
                    }
                    Case (0x0D)
                    {
                        ADBG ("Notify RP13")
                        Notify (\_SB.PCI0.RP13, Zero) // Bus Check
                    }
                    Case (0x0E)
                    {
                        ADBG ("Notify RP14")
                        Notify (\_SB.PCI0.RP14, Zero) // Bus Check
                    }
                    Case (0x0F)
                    {
                        ADBG ("Notify RP15")
                        Notify (\_SB.PCI0.RP15, Zero) // Bus Check
                    }
                    Case (0x10)
                    {
                        ADBG ("Notify RP16")
                        Notify (\_SB.PCI0.RP16, Zero) // Bus Check
                    }
                    Case (0x11)
                    {
                        ADBG ("Notify RP17")
                        Notify (\_SB.PCI0.RP17, Zero) // Bus Check
                    }
                    Case (0x12)
                    {
                        ADBG ("Notify RP18")
                        Notify (\_SB.PCI0.RP18, Zero) // Bus Check
                    }
                    Case (0x13)
                    {
                        ADBG ("Notify RP19")
                        Notify (\_SB.PCI0.RP19, Zero) // Bus Check
                    }
                    Case (0x14)
                    {
                        ADBG ("Notify RP20")
                        Notify (\_SB.PCI0.RP20, Zero) // Bus Check
                    }
                    Case (0x15)
                    {
                        ADBG ("Notify RP21")
                        Notify (\_SB.PCI0.RP21, Zero) // Bus Check
                    }
                    Case (0x16)
                    {
                        ADBG ("Notify RP22")
                        Notify (\_SB.PCI0.RP22, Zero) // Bus Check
                    }
                    Case (0x17)
                    {
                        ADBG ("Notify RP23")
                        Notify (\_SB.PCI0.RP23, Zero) // Bus Check
                    }
                    Case (0x18)
                    {
                        ADBG ("Notify RP24")
                        Notify (\_SB.PCI0.RP24, Zero) // Bus Check
                    }
                    Case (0x19)
                    {
                        ADBG ("Notify PEG0")
                        Notify (\_SB.PCI0.PEG0, Zero) // Bus Check
                    }
                    Case (0x1A)
                    {
                        ADBG ("Notify PEG1")
                        Notify (\_SB.PCI0.PEG1, Zero) // Bus Check
                    }
                    Case (0x1B)
                    {
                        ADBG ("Notify PEG2")
                        Notify (\_SB.PCI0.PEG2, Zero) // Bus Check
                    }

                }
            }
        }

        Method (NFYG, 0, NotSerialized)
        {
            ADBG ("NFYG")
            If ((TDGS == One))
            {
                If ((DCKE == One))
                {
                    ADBG ("NFYG.DCKE")
                    Notify (\_SB.PCI0.GFX0, 0x81) // Information Change
                }
                ElseIf ((SUDK == One))
                {
                    ADBG ("NFYG.SUDK")
                    Notify (\_SB.PCI0.GFX0, 0x81) // Information Change
                }
            }
        }

        Method (TFPS, 0, NotSerialized)
        {
            ADBG ("TFPS")
            Local0 = \_SB.CGRD (FPAT, FPEN, FPGN, Zero)
            If (Local0)
            {
                ADBG ("ExtFrcPwr1")
            }
            Else
            {
                ADBG ("ExtFrcPwr0")
            }

            Return (Local0)
        }

        Method (CNCT, 0, NotSerialized)
        {
            ADBG ("CNCT")
            ADBG ("Read")
            ADBG ("ACPI_GPE_STS")
            Local7 = CPAD /* \CPAD */
            Local6 = CPAB /* \CPAB */
            While ((Local6 > 0x08))
            {
                Local7 += One
                Local6 -= 0x08
            }

            OperationRegion (GPE0, SystemIO, Local7, One)
            Field (GPE0, ByteAcc, Lock, Preserve)
            {
                TEMP,   8
            }

            Local0 = TEMP /* \_GPE.CNCT.TEMP */
            Local0 >>= Local6
            Local0 &= One
            Return (Local0)
        }

        Method (CLNE, 0, NotSerialized)
        {
            ADBG ("CLNE")
            ADBG ("Clear")
            ADBG ("ACPI_GPE_STS")
            Local7 = CPAD /* \CPAD */
            Local6 = CPAB /* \CPAB */
            While ((Local6 > 0x08))
            {
                Local7 += One
                Local6 -= 0x08
            }

            OperationRegion (GPE0, SystemIO, Local7, One)
            Field (GPE0, ByteAcc, Lock, Preserve)
            {
                TEMP,   8
            }

            Local6 = (One << Local6)
            TEMP |= Local6
        }

        Method (DRPM, 0, NotSerialized)
        {
            ADBG ("DRPM")
            Local7 = \_SB.STDC (\_SB.PCI0.GPCB (), Zero, TBTD (TBSE), TBTF (TBSE), 0x05)
            Local6 = MMRP ()
            Local0 = (Local7 + Local6)
            OperationRegion (MMMS, SystemMemory, Local0, 0x02)
            Field (MMMS, WordAcc, NoLock, Preserve)
            {
                MSIC,   1
            }

            MSIC = Zero
        }

        Method (DMSI, 0, NotSerialized)
        {
            ADBG ("DMSI")
            Local0 = (MMTB () + 0x0548)
            OperationRegion (PXVD, SystemMemory, Local0, 0x08)
            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                TB2P,   32, 
                P2TB,   32
            }

            OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
            Field (SPRT, ByteAcc, Lock, Preserve)
            {
                SSMP,   8
            }

            Local1 = TB2P /* \_GPE.DMSI.TB2P */
            If ((Local1 == 0x25))
            {
                TBSF = TBDM /* \TBDM */
                SSMP = TBSW /* \TBSW */
                ADBG ("0x25->P2TB")
                P2TB = 0x25
                Local2 = 0x64
                While ((Local2 > Zero))
                {
                    Local2 = (Local2 - One)
                    Local1 = TB2P /* \_GPE.DMSI.TB2P */
                    If ((Local1 == 0xFFFFFFFF))
                    {
                        ADBG ("DMSiF")
                        Return (Zero)
                    }

                    If ((Local1 == 0x24))
                    {
                        Break
                    }

                    Sleep (0x32)
                }

                P2TB = Zero
                ADBG ("DMSi 1")
                Return (One)
            }

            ADBG ("DMSi 0")
            Return (Zero)
        }

        Method (RSMI, 0, NotSerialized)
        {
            ADBG ("RSMI")
            Local0 = TFPS ()
            Local1 = (MMTB () + Zero)
            OperationRegion (PXVD, SystemMemory, Local1, 0x0550)
            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                VIDI,   32, 
                Offset (0x548), 
                TB2P,   32, 
                P2TB,   32
            }

            Local2 = TB2P /* \_GPE.RSMI.TB2P */
            If ((Local2 != 0xFFFFFFFF))
            {
                ADBG ("RSMi 1")
                Return (One)
            }

            If (!CNCT ())
            {
                ADBG ("RSMi 2")
                Return (0x02)
            }

            DRPM ()
            If (Local0)
            {
                \_SB.TBFP (Zero)
            }
            Else
            {
                \_SB.TBFP (One)
            }

            Local3 = Zero
            While ((FFTB () || CNCT ()))
            {
                Sleep (0x05)
                CLNE ()
                Local3 += One
                If ((Local3 > 0x14))
                {
                    Sleep (0x03E8)
                    ADBG ("RSMi PCIe down")
                }

                If ((Local3 > 0x19))
                {
                    ADBG ("RSMi Oops")
                    If (Local0)
                    {
                        \_SB.TBFP (One)
                    }
                    Else
                    {
                        \_SB.TBFP (Zero)
                    }

                    Return (Zero)
                }
            }

            If (Local0)
            {
                \_SB.TBFP (One)
            }
            Else
            {
                \_SB.TBFP (Zero)
            }

            ADBG ("RSMi 0")
            Return (Zero)
        }

        Method (GNIS, 0, NotSerialized)
        {
            ADBG ("GNIS")
            If ((GP5F == Zero))
            {
                ADBG ("GNIS_Dis=0")
                Return (Zero)
            }

            Local0 = (MMTB () + 0x0544)
            OperationRegion (PXVD, SystemMemory, Local0, 0x08)
            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                HPFI,   1, 
                Offset (0x04), 
                TB2P,   32
            }

            Local1 = TB2P /* \_GPE.GNIS.TB2P */
            ADBG (Concatenate ("TB2P=", ToHexString (Local1)))
            If ((Local1 == 0xFFFFFFFF))
            {
                ADBG ("GNIS=0")
                Return (Zero)
            }

            Local2 = HPFI /* \_GPE.GNIS.HPFI */
            ADBG (Concatenate ("HPFI=", ToHexString (Local2)))
            If ((Local2 == One))
            {
                HPFI = Zero
                ADBG ("GNIS=0")
                Return (Zero)
            }

            ADBG ("GNIS=1")
            Return (One)
        }

        Method (XTBT, 0, NotSerialized)
        {
            ADBG ("XTBT")
            If ((CF2T == One))
            {
                ADBG ("Clear")
                ADBG ("GPI_GPE_STS")
                \_SB.CAGS (CPGN)
            }

            WWAK ()
            WSUB ()
            If ((TNAT == One))
            {
                Local0 = RSMI ()
                If (!Local0)
                {
                    Return (Zero)
                }

                If (DMSI ())
                {
                    Return (Zero)
                }
            }

            If (GNIS ())
            {
                Return (Zero)
            }

            OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
            Field (SPRT, ByteAcc, Lock, Preserve)
            {
                SSMP,   8
            }

            ADBG ("TBT-HP-Handler")
            ADBG ("PEG WorkAround")
            PGWA ()
            Acquire (OSUM, 0xFFFF)
            Local1 = TBFF ()
            If ((Local1 == One))
            {
                Sleep (0x10)
                Release (OSUM)
                ADBG ("OS_Up_Received")
                Return (Zero)
            }

            If ((Local1 == 0x02))
            {
                ADBG ("Disconnect")
                If ((OHPN == One))
                {
                    NTFY ()
                }

                If ((GHPN == One))
                {
                    NFYG ()
                }

                Sleep (0x10)
                Release (OSUM)
                P8XH (Zero, 0x7D)
                ADBG ("Disconnect")
                Return (Zero)
            }

            If ((SOHP == One))
            {
                ADBG ("TBT SW SMI")
                TBSF = TBEF /* \TBEF */
                SSMP = TBSW /* \TBSW */
            }

            If ((OHPN == One))
            {
                NTFY ()
            }

            If ((GHPN == One))
            {
                NFYG ()
            }

            Sleep (0x10)
            Release (OSUM)
            ADBG ("End-of-XTBT")
        }

        Method (TINI, 0, NotSerialized)
        {
            ADBG ("TINI")
            Local0 = MMRP ()
            OperationRegion (RP_X, SystemMemory, Local0, 0x20)
            Field (RP_X, DWordAcc, NoLock, Preserve)
            {
                REG0,   32, 
                REG1,   32, 
                REG2,   32, 
                REG3,   32, 
                REG4,   32, 
                REG5,   32, 
                REG6,   32, 
                REG7,   32
            }

            Local1 = REG6 /* \_GPE.TINI.REG6 */
            REG6 = 0x003F3F00
            Local2 = MMTB ()
            OSUP (Local2)
            REG6 = Local1
            ADBG ("End-of-TINI")
        }
    }

    Scope (_SB)
    {
        Method (THDR, 0, Serialized)
        {
            ADBG ("THDR")
            \_GPE.XTBT ()
        }
    }

    Scope (_SB)
    {
        Method (CGWR, 4, Serialized)
        {
            If ((Arg0 == One))
            {
                If (CondRefOf (\_SB.SGOV))
                {
                    SGOV (Arg2, Arg3)
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If (CondRefOf (\_SB.PCI0.GEXP.SGEP))
                {
                    ^PCI0.GEXP.SGEP (Arg1, Arg2, Arg3)
                }
            }
        }

        Method (CGRD, 4, Serialized)
        {
            Local0 = One
            If ((Arg0 == One))
            {
                If ((Arg3 == Zero))
                {
                    If (CondRefOf (\_SB.GGOV))
                    {
                        Local0 = GGOV (Arg2)
                    }
                }
                ElseIf ((Arg3 == One))
                {
                    If (CondRefOf (\_SB.GGIV))
                    {
                        Local0 = GGIV (Arg2)
                    }
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If (CondRefOf (\_SB.PCI0.GEXP.GEPS))
                {
                    Local0 = ^PCI0.GEXP.GEPS (Arg1, Arg2)
                }
            }

            Return (Local0)
        }

        Method (WRGP, 2, Serialized)
        {
            Local0 = Arg0
            Local1 = Arg0
            Local0 &= 0xFFFFFFFF
            Local1 >>= 0x20
            If (((Local0 & 0xFF) == One))
            {
                CGWR ((Local0 & 0xFF), (Local1 >> 0x18), Local1, Arg1)
            }
            ElseIf (((Local0 & 0xFF) == 0x02))
            {
                CGWR ((Local0 & 0xFF), (Local1 >> 0x18), ((Local1 << 
                    0x08) >> 0x18), Arg1)
            }
        }

        Method (RDGP, 2, Serialized)
        {
            Local7 = One
            Local0 = Arg0
            Local1 = Arg0
            Local0 &= 0xFFFFFFFF
            Local1 >>= 0x20
            If (((Local0 & 0xFF) == One))
            {
                Local7 = CGRD ((Local0 & 0xFF), (Local1 >> 0x18), Local1, 
                    Arg1)
            }
            ElseIf (((Local0 & 0xFF) == 0x02))
            {
                Local7 = CGRD ((Local0 & 0xFF), (Local1 >> 0x18), (
                    (Local1 << 0x08) >> 0x18), Arg1)
            }

            Return (Local7)
        }
    }

    Scope (_SB)
    {
        Method (TBFP, 1, NotSerialized)
        {
            If (Arg0)
            {
                CGWR (FPAT, FPEN, FPGN, FPLV)
            }
            Else
            {
                CGWR (FPAT, FPEN, FPGN, !FPLV)
            }
        }

        Device (WTBT)
        {
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "TBFP")  // _UID: Unique ID
            Name (_WDG, Buffer (0x14)
            {
                /* 0000 */  0x48, 0xFD, 0xCC, 0x86, 0x5E, 0x20, 0x77, 0x4A,  // H...^ wJ
                /* 0008 */  0x9C, 0x48, 0x20, 0x21, 0xCB, 0xED, 0xE3, 0x41,  // .H !...A
                /* 0010 */  0x54, 0x46, 0x01, 0x02                           // TF..
            })
            Method (WMTF, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, FP)
                If (FP)
                {
                    TBFP (One)
                }
                Else
                {
                    TBFP (Zero)
                }
            }
        }
    }

    Scope (_SB)
    {
        Method (R008, 1, Serialized)
        {
            ADBG ("R008")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, One)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            Return (TEMP) /* \_SB_.R008.TEMP */
        }

        Method (W008, 2, Serialized)
        {
            ADBG ("W008")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, One)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            TEMP = Arg1
        }

        Method (R016, 1, Serialized)
        {
            ADBG ("R016")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, 0x02)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            Return (TEMP) /* \_SB_.R016.TEMP */
        }

        Method (W016, 2, Serialized)
        {
            ADBG ("W016")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, 0x02)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            TEMP = Arg1
        }

        Method (R032, 1, Serialized)
        {
            ADBG ("R032")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, 0x04)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.R032.TEMP */
        }

        Method (W032, 2, Serialized)
        {
            ADBG ("W032")
            Local7 = Arg0
            OperationRegion (MEM0, SystemMemory, Local7, 0x04)
            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (PERB, 5, Serialized)
        {
            ADBG ("PERB")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, One)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            Return (TEMP) /* \_SB_.PERB.TEMP */
        }

        Method (PEWB, 6, Serialized)
        {
            ADBG ("PEWB")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, One)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            TEMP = Arg5
        }

        Method (PERW, 5, Serialized)
        {
            ADBG ("PERW")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x02)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            Return (TEMP) /* \_SB_.PERW.TEMP */
        }

        Method (PEWW, 6, Serialized)
        {
            ADBG ("PEWW")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x02)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            TEMP = Arg5
        }

        Method (PERD, 5, Serialized)
        {
            ADBG ("PERD")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x04)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.PERD.TEMP */
        }

        Method (PEWD, 6, Serialized)
        {
            ADBG ("PEWD")
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x04)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg5
        }

        Method (STDC, 5, Serialized)
        {
            ADBG ("STDC")
            Local7 = PERW (Arg0, Arg1, Arg2, Arg3, Zero)
            If ((Local7 == 0xFFFF))
            {
                ADBG ("Referenced device is not present")
                Return (Zero)
            }

            Local0 = PERW (Arg0, Arg1, Arg2, Arg3, 0x06)
            If (((Local0 & 0x10) == Zero))
            {
                ADBG ("No Capabilities linked list is available")
                Return (Zero)
            }

            Local2 = PERB (Arg0, Arg1, Arg2, Arg3, 0x34)
            While (One)
            {
                Local2 &= 0xFC
                If ((Local2 == Zero))
                {
                    ADBG ("Capability ID is not found")
                    Return (Zero)
                }

                Local1 = PERB (Arg0, Arg1, Arg2, Arg3, Local2)
                If ((Arg4 == Local1))
                {
                    ADBG ("Capability ID is found")
                    ADBG ("Capability Offset : ")
                    ADBG (Local2)
                    Return (Local2)
                }

                Local2 = PERB (Arg0, Arg1, Arg2, Arg3, (Local2 + One))
                Return (Zero)
            }
        }
    }

    Method (RDCM, 1, Serialized)
    {
        ADBG ("RDCM")
        ADBG ("CMOS Offset")
        ADBG (Arg0)
        OperationRegion (CMOS, SystemIO, 0x70, 0x04)
        Field (CMOS, AnyAcc, NoLock, Preserve)
        {
            LIND,   8, 
            LDAT,   8, 
            HIND,   8, 
            HDAT,   8
        }

        If ((Arg0 <= 0x7F))
        {
            LIND = Arg0
            Local0 = LDAT /* \RDCM.LDAT */
        }
        ElseIf ((Arg0 <= 0xFF))
        {
            HIND = Arg0
            Local0 = HDAT /* \RDCM.HDAT */
        }

        ADBG ("CMOS Data")
        ADBG (Local0)
        Return (Local0)
    }

    Method (WRCM, 2, Serialized)
    {
        ADBG ("WRCM")
        ADBG ("CMOS Offset")
        ADBG (Arg0)
        ADBG ("CMOS Data")
        ADBG (Arg1)
        OperationRegion (CMOS, SystemIO, 0x70, 0x04)
        Field (CMOS, AnyAcc, NoLock, Preserve)
        {
            LIND,   8, 
            LDAT,   8, 
            HIND,   8, 
            HDAT,   8
        }

        If ((Arg0 <= 0x7F))
        {
            LIND = Arg0
            LDAT = Arg1
        }
        ElseIf ((Arg0 <= 0xFF))
        {
            HIND = Arg0
            HDAT = Arg1
        }
    }

    OperationRegion (_SB.PCI0.LPCB.LPCR, PCI_Config, 0x80, 0x04)
    Field (\_SB.PCI0.LPCB.LPCR, ByteAcc, NoLock, Preserve)
    {
        CARN,   3, 
            ,   1, 
        CBDR,   3, 
        Offset (0x01), 
        LTDR,   2, 
            ,   2, 
        FDDR,   1, 
        Offset (0x02), 
        CALE,   1, 
        CBLE,   1, 
        LTLE,   1, 
        FDLE,   1, 
        Offset (0x03), 
        GLLE,   1, 
        GHLE,   1, 
        KCLE,   1, 
        MCLE,   1, 
        C1LE,   1, 
        C2LE,   1, 
        Offset (0x04)
    }

    Method (UXDV, 1, Serialized)
    {
        Local0 = 0xFF
        Switch ((Arg0 + Zero))
        {
            Case (0x03F8)
            {
                Local0 = Zero
            }
            Case (0x02F8)
            {
                Local0 = One
            }
            Case (0x0220)
            {
                Local0 = 0x02
            }
            Case (0x0228)
            {
                Local0 = 0x03
            }
            Case (0x0238)
            {
                Local0 = 0x04
            }
            Case (0x02E8)
            {
                Local0 = 0x05
            }
            Case (0x0338)
            {
                Local0 = 0x06
            }
            Case (0x03E8)
            {
                Local0 = 0x07
            }

        }

        Return (Local0)
    }

    Method (RRIO, 4, Serialized)
    {
        Switch ((Arg0 + Zero))
        {
            Case (Zero)
            {
                CALE = Zero
                Local0 = UXDV (Arg2)
                If ((Local0 != 0xFF))
                {
                    CARN = Local0
                }

                If (Arg1)
                {
                    CALE = One
                }
            }
            Case (One)
            {
                CBLE = Zero
                Local0 = UXDV (Arg2)
                If ((Local0 != 0xFF))
                {
                    CBDR = Local0
                }

                If (Arg1)
                {
                    CBLE = One
                }
            }
            Case (0x02)
            {
                LTLE = Zero
                If ((Arg2 == 0x0378))
                {
                    LTDR = Zero
                }

                If ((Arg2 == 0x0278))
                {
                    LTDR = One
                }

                If ((Arg2 == 0x03BC))
                {
                    LTDR = 0x02
                }

                If (Arg1)
                {
                    LTLE = One
                }
            }
            Case (0x03)
            {
                FDLE = Zero
                If ((Arg2 == 0x03F0))
                {
                    FDDR = Zero
                }

                If ((Arg2 == 0x0370))
                {
                    FDDR = One
                }

                If (Arg1)
                {
                    FDLE = One
                }
            }
            Case (0x08)
            {
                If ((Arg2 == 0x0200))
                {
                    If (Arg1)
                    {
                        GLLE = One
                    }
                    Else
                    {
                        GLLE = Zero
                    }
                }

                If ((Arg2 == 0x0208))
                {
                    If (Arg1)
                    {
                        GHLE = One
                    }
                    Else
                    {
                        GHLE = Zero
                    }
                }
            }
            Case (0x09)
            {
                If ((Arg2 == 0x0200))
                {
                    If (Arg1)
                    {
                        GLLE = One
                    }
                    Else
                    {
                        GLLE = Zero
                    }
                }

                If ((Arg2 == 0x0208))
                {
                    If (Arg1)
                    {
                        GHLE = One
                    }
                    Else
                    {
                        GHLE = Zero
                    }
                }
            }
            Case (0x0A)
            {
                If (((Arg2 == 0x60) || (Arg2 == 0x64)))
                {
                    If (Arg1)
                    {
                        KCLE = One
                    }
                    Else
                    {
                        KCLE = Zero
                    }
                }
            }
            Case (0x0B)
            {
                If (((Arg2 == 0x62) || (Arg2 == 0x66)))
                {
                    If (Arg1)
                    {
                        MCLE = One
                    }
                    Else
                    {
                        MCLE = Zero
                    }
                }
            }
            Case (0x0C)
            {
                If ((Arg2 == 0x2E))
                {
                    If (Arg1)
                    {
                        C1LE = One
                    }
                    Else
                    {
                        C1LE = Zero
                    }
                }

                If ((Arg2 == 0x4E))
                {
                    If (Arg1)
                    {
                        C2LE = One
                    }
                    Else
                    {
                        C2LE = Zero
                    }
                }
            }
            Case (0x0D)
            {
                If ((Arg2 == 0x2E))
                {
                    If (Arg1)
                    {
                        C1LE = One
                    }
                    Else
                    {
                        C1LE = Zero
                    }
                }

                If ((Arg2 == 0x4E))
                {
                    If (Arg1)
                    {
                        C2LE = One
                    }
                    Else
                    {
                        C2LE = Zero
                    }
                }
            }

        }
    }

    Method (RDMA, 3, NotSerialized)
    {
    }

    Scope (_GPE)
    {
        Method (_L69, 0, Serialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.PCI0.RP01.HPME ()
            \_SB.PCI0.RP02.HPME ()
            \_SB.PCI0.RP03.HPME ()
            \_SB.PCI0.RP04.HPME ()
            \_SB.PCI0.RP05.HPME ()
            \_SB.PCI0.RP06.HPME ()
            \_SB.PCI0.RP07.HPME ()
            \_SB.PCI0.RP08.HPME ()
            \_SB.PCI0.RP09.HPME ()
            \_SB.PCI0.RP10.HPME ()
            \_SB.PCI0.RP11.HPME ()
            \_SB.PCI0.RP12.HPME ()
            \_SB.PCI0.RP13.HPME ()
            \_SB.PCI0.RP14.HPME ()
            \_SB.PCI0.RP15.HPME ()
            \_SB.PCI0.RP16.HPME ()
            \_SB.PCI0.RP17.HPME ()
            \_SB.PCI0.RP18.HPME ()
            \_SB.PCI0.RP19.HPME ()
            \_SB.PCI0.RP20.HPME ()
            \_SB.PCI0.RP21.HPME ()
            \_SB.PCI0.RP22.HPME ()
            \_SB.PCI0.RP23.HPME ()
            \_SB.PCI0.RP24.HPME ()
            If ((\_SB.PCI0.D1F0 == One))
            {
                \_SB.PCI0.PEG0.HPME ()
                Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake
                Notify (\_SB.PCI0.PEG0.PEGP, 0x02) // Device Wake
            }

            If ((\_SB.PCI0.D1F1 == One))
            {
                \_SB.PCI0.PEG1.HPME ()
                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
            }

            If ((\_SB.PCI0.D1F2 == One))
            {
                \_SB.PCI0.PEG2.HPME ()
                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
            }
        }

        Method (_L61, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            L01C += One
            P8XH (One, L01C)
            If (((\_SB.PCI0.RP01.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP01.HPSX))
            {
                If (((TBTS != One) || (TBSE != One)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP01.PDCX)
                {
                    \_SB.PCI0.RP01.PDCX = One
                    \_SB.PCI0.RP01.HPSX = One
                    If (!\_SB.PCI0.RP01.PDSX)
                    {
                        \_SB.PCI0.RP01.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != One)))
                    {
                        Notify (\_SB.PCI0.RP01, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP01.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP02.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP02.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x02)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP02.PDCX)
                {
                    \_SB.PCI0.RP02.PDCX = One
                    \_SB.PCI0.RP02.HPSX = One
                    If (!\_SB.PCI0.RP02.PDSX)
                    {
                        \_SB.PCI0.RP02.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x02)))
                    {
                        Notify (\_SB.PCI0.RP02, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP02.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP03.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP03.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x03)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP03.PDCX)
                {
                    \_SB.PCI0.RP03.PDCX = One
                    \_SB.PCI0.RP03.HPSX = One
                    If (!\_SB.PCI0.RP03.PDSX)
                    {
                        \_SB.PCI0.RP03.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x03)))
                    {
                        Notify (\_SB.PCI0.RP03, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP03.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP04.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP04.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x04)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP04.PDCX)
                {
                    \_SB.PCI0.RP04.PDCX = One
                    \_SB.PCI0.RP04.HPSX = One
                    If (!\_SB.PCI0.RP04.PDSX)
                    {
                        \_SB.PCI0.RP04.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x04)))
                    {
                        Notify (\_SB.PCI0.RP04, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP04.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP05.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP05.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x05)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP05.PDCX)
                {
                    \_SB.PCI0.RP05.PDCX = One
                    \_SB.PCI0.RP05.HPSX = One
                    If (!\_SB.PCI0.RP05.PDSX)
                    {
                        \_SB.PCI0.RP05.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x05)))
                    {
                        Notify (\_SB.PCI0.RP05, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP05.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP06.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP06.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x06)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP06.PDCX)
                {
                    \_SB.PCI0.RP06.PDCX = One
                    \_SB.PCI0.RP06.HPSX = One
                    If (!\_SB.PCI0.RP06.PDSX)
                    {
                        \_SB.PCI0.RP06.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x06)))
                    {
                        Notify (\_SB.PCI0.RP06, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP06.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP07.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP07.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x07)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP07.PDCX)
                {
                    \_SB.PCI0.RP07.PDCX = One
                    \_SB.PCI0.RP07.HPSX = One
                    If (!\_SB.PCI0.RP07.PDSX)
                    {
                        \_SB.PCI0.RP07.L0SE = Zero
                    }

                    If ((PFLV == 0x02))
                    {
                        If (((TBTS != One) || (TBSE != 0x07)))
                        {
                            Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                        }
                    }
                    ElseIf (ECON)
                    {
                        If ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.DOCK)) == Zero))
                        {
                            If (((TBTS != One) || (TBSE != 0x07)))
                            {
                                Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                            }
                        }
                    }
                }
                Else
                {
                    \_SB.PCI0.RP07.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP08.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP08.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x08)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP08.PDCX)
                {
                    \_SB.PCI0.RP08.PDCX = One
                    \_SB.PCI0.RP08.HPSX = One
                    If (!\_SB.PCI0.RP08.PDSX)
                    {
                        \_SB.PCI0.RP08.L0SE = Zero
                    }

                    If ((PFLV == 0x02))
                    {
                        If (((TBTS != One) || (TBSE != 0x08)))
                        {
                            Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                        }
                    }
                    ElseIf (ECON)
                    {
                        If ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.DOCK)) == Zero))
                        {
                            If (((TBTS != One) || (TBSE != 0x08)))
                            {
                                Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                            }
                        }
                    }
                }
                Else
                {
                    \_SB.PCI0.RP08.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP09.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP09.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x09)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP09.PDCX)
                {
                    \_SB.PCI0.RP09.PDCX = One
                    \_SB.PCI0.RP09.HPSX = One
                    If (!\_SB.PCI0.RP09.PDSX)
                    {
                        \_SB.PCI0.RP09.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x09)))
                    {
                        Notify (\_SB.PCI0.RP09, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP09.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP10.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP10.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0A)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP10.PDCX)
                {
                    \_SB.PCI0.RP10.PDCX = One
                    \_SB.PCI0.RP10.HPSX = One
                    If (!\_SB.PCI0.RP10.PDSX)
                    {
                        \_SB.PCI0.RP10.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0A)))
                    {
                        Notify (\_SB.PCI0.RP10, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP10.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP11.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP11.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0B)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP11.PDCX)
                {
                    \_SB.PCI0.RP11.PDCX = One
                    \_SB.PCI0.RP11.HPSX = One
                    If (!\_SB.PCI0.RP11.PDSX)
                    {
                        \_SB.PCI0.RP11.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0B)))
                    {
                        Notify (\_SB.PCI0.RP11, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP11.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP12.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP12.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0C)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP12.PDCX)
                {
                    \_SB.PCI0.RP12.PDCX = One
                    \_SB.PCI0.RP12.HPSX = One
                    If (!\_SB.PCI0.RP12.PDSX)
                    {
                        \_SB.PCI0.RP12.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0C)))
                    {
                        Notify (\_SB.PCI0.RP12, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP12.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP13.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP13.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0D)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP13.PDCX)
                {
                    \_SB.PCI0.RP13.PDCX = One
                    \_SB.PCI0.RP13.HPSX = One
                    If (!\_SB.PCI0.RP13.PDSX)
                    {
                        \_SB.PCI0.RP13.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0D)))
                    {
                        Notify (\_SB.PCI0.RP13, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP13.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP14.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP14.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0E)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP14.PDCX)
                {
                    \_SB.PCI0.RP14.PDCX = One
                    \_SB.PCI0.RP14.HPSX = One
                    If (!\_SB.PCI0.RP14.PDSX)
                    {
                        \_SB.PCI0.RP14.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0E)))
                    {
                        Notify (\_SB.PCI0.RP14, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP14.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP15.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP15.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x0F)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP15.PDCX)
                {
                    \_SB.PCI0.RP15.PDCX = One
                    \_SB.PCI0.RP15.HPSX = One
                    If (!\_SB.PCI0.RP15.PDSX)
                    {
                        \_SB.PCI0.RP15.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x0F)))
                    {
                        Notify (\_SB.PCI0.RP15, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP15.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP16.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP16.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x10)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP16.PDCX)
                {
                    \_SB.PCI0.RP16.PDCX = One
                    \_SB.PCI0.RP16.HPSX = One
                    If (!\_SB.PCI0.RP16.PDSX)
                    {
                        \_SB.PCI0.RP16.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x10)))
                    {
                        Notify (\_SB.PCI0.RP16, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP16.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP17.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP17.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x11)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP17.PDCX)
                {
                    \_SB.PCI0.RP17.PDCX = One
                    \_SB.PCI0.RP17.HPSX = One
                    If (!\_SB.PCI0.RP17.PDSX)
                    {
                        \_SB.PCI0.RP17.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x11)))
                    {
                        Notify (\_SB.PCI0.RP17, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP17.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP18.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP18.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x12)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP18.PDCX)
                {
                    \_SB.PCI0.RP18.PDCX = One
                    \_SB.PCI0.RP18.HPSX = One
                    If (!\_SB.PCI0.RP18.PDSX)
                    {
                        \_SB.PCI0.RP18.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x12)))
                    {
                        Notify (\_SB.PCI0.RP18, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP18.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP19.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP19.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x13)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP19.PDCX)
                {
                    \_SB.PCI0.RP19.PDCX = One
                    \_SB.PCI0.RP19.HPSX = One
                    If (!\_SB.PCI0.RP19.PDSX)
                    {
                        \_SB.PCI0.RP19.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x13)))
                    {
                        Notify (\_SB.PCI0.RP19, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP19.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP20.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP20.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x14)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP20.PDCX)
                {
                    \_SB.PCI0.RP20.PDCX = One
                    \_SB.PCI0.RP20.HPSX = One
                    If (!\_SB.PCI0.RP20.PDSX)
                    {
                        \_SB.PCI0.RP20.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x14)))
                    {
                        Notify (\_SB.PCI0.RP20, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP20.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP21.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP21.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x15)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP21.PDCX)
                {
                    \_SB.PCI0.RP21.PDCX = One
                    \_SB.PCI0.RP21.HPSX = One
                    If (!\_SB.PCI0.RP21.PDSX)
                    {
                        \_SB.PCI0.RP21.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x15)))
                    {
                        Notify (\_SB.PCI0.RP21, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP21.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP22.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP22.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x16)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP22.PDCX)
                {
                    \_SB.PCI0.RP22.PDCX = One
                    \_SB.PCI0.RP22.HPSX = One
                    If (!\_SB.PCI0.RP22.PDSX)
                    {
                        \_SB.PCI0.RP22.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x16)))
                    {
                        Notify (\_SB.PCI0.RP22, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP22.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP23.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP23.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x17)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP23.PDCX)
                {
                    \_SB.PCI0.RP23.PDCX = One
                    \_SB.PCI0.RP23.HPSX = One
                    If (!\_SB.PCI0.RP23.PDSX)
                    {
                        \_SB.PCI0.RP23.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x17)))
                    {
                        Notify (\_SB.PCI0.RP23, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP23.HPSX = One
                }
            }

            If (((\_SB.PCI0.RP24.VDID != 0xFFFFFFFF) && \_SB.PCI0.RP24.HPSX))
            {
                If (((TBTS != One) || (TBSE != 0x18)))
                {
                    Sleep (0x64)
                }

                If (\_SB.PCI0.RP24.PDCX)
                {
                    \_SB.PCI0.RP24.PDCX = One
                    \_SB.PCI0.RP24.HPSX = One
                    If (!\_SB.PCI0.RP24.PDSX)
                    {
                        \_SB.PCI0.RP24.L0SE = Zero
                    }

                    If (((TBTS != One) || (TBSE != 0x18)))
                    {
                        Notify (\_SB.PCI0.RP24, Zero) // Bus Check
                    }
                }
                Else
                {
                    \_SB.PCI0.RP24.HPSX = One
                }
            }
        }

        Method (_L62, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            GPEC = Zero
            If (CondRefOf (\_PR.DTSE))
            {
                If ((\_PR.DTSE >= One))
                {
                    If ((\_PR.DTSI == One))
                    {
                        Notify (\_TZ.TZ00, 0x80) // Status Change
                        Notify (\_TZ.TZ01, 0x80) // Status Change
                        \_PR.DTSI = Zero
                    }
                }
            }

            If ((\_PR.HWPI == One))
            {
                If (CondRefOf (\_GPE.HLVT))
                {
                    HLVT ()
                }

                \_PR.HWPI = Zero
            }
        }

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            If ((\_SB.PCI0.GFX0.GSSE && !GSMI))
            {
                \_SB.PCI0.GFX0.GSCI ()
            }
        }

        Name (PRES, One)
        Method (_L6F, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            If ((RTD3 == One))
            {
                If (CondRefOf (\_GPE.AL6F))
                {
                    AL6F ()
                }
            }

            If ((SGGP == One))
            {
                If (CondRefOf (\_GPE.P0L6))
                {
                    P0L6 ()
                }
            }

            If ((P1GP == One))
            {
                If (CondRefOf (\_GPE.P1L6))
                {
                    P1L6 ()
                }
            }

            If ((P2GP == One))
            {
                If (CondRefOf (\_GPE.P2L6))
                {
                    P2L6 ()
                }
            }

            If ((TBTS == One))
            {
                If (\_SB.ISME (CPGN))
                {
                    \_SB.THDR ()
                }
            }
        }
    }

    If ((CAMT == One))
    {
        Scope (_SB)
        {
            Device (ICAM)
            {
                Name (_HID, "INT33A3")  // _HID: Hardware ID
                Name (IDFU, Zero)
                Name (IPWR, Zero)
                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    If ((IVDF == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("f5cf0ff7-5d60-4842-82c0-fa1a61d873f2") /* Unknown UUID */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                If ((ToInteger (Arg1) == Zero))
                                {
                                    Return (Buffer (One)
                                    {
                                         0x07                                             // .
                                    })
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            Case (One)
                            {
                                If ((DerefOf (Arg3 [Zero]) == Zero))
                                {
                                    WRGP (IFWG, Zero)
                                    IDFU = Zero
                                }
                                Else
                                {
                                    WRGP (IFWG, One)
                                    IDFU = One
                                }

                                Return (Zero)
                            }
                            Case (0x02)
                            {
                                If ((DerefOf (Arg3 [Zero]) == Zero))
                                {
                                    WRGP (IVDG, Zero)
                                    IPWR = Zero
                                }
                                Else
                                {
                                    WRGP (IVDG, One)
                                    IPWR = One
                                }

                                Return (Zero)
                            }
                            Default
                            {
                                Return (Zero)
                            }

                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }
            }
        }
    }

    If ((PCHV () == SPTL))
    {
        If ((SDWE != Zero))
        {
            Scope (_SB.PCI0.PSDC)
            {
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    If ((OSYS < 0x07DC))
                    {
                        Return (Buffer (0x02)
                        {
                             0x79, 0x00                                       // y.
                        })
                    }

                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveBoth, SharedAndWake, PullNone, 0x2710,
                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0000
                            }
                        GpioIo (Shared, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0000
                            }
                    })
                    CreateWordField (RBUF, 0x17, SDIP)
                    CreateWordField (RBUF, 0x3F, SDGP)
                    If ((SDWE == One))
                    {
                        SDIP = GNUM (0x02010011)
                        SDGP = GNUM (0x02010011)
                    }

                    If ((SDWE == 0x02))
                    {
                        SDIP = GNUM (0x0203000A)
                        SDGP = GNUM (0x0203000A)
                    }

                    Return (RBUF) /* \_SB_.PCI0.PSDC._CRS.RBUF */
                }
            }
        }
    }

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {
        Scope (_SB.PCI0.RP01.PXSX)
        {
            OperationRegion (RPXX, PCI_Config, Zero, 0x10)
            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }

            Name (SPLX, Package (0x04)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (SPLC, 0, Serialized)
            {
                DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
                DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
                DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
                DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
                DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
                DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
                DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
                DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
                DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
                Return (SPLX) /* \_SB_.PCI0.RP01.PXSX.SPLX */
            }

            PowerResource (WRST, 0x05, 0x0000)
            {
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                    Return (One)
                }

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")
                    If ((DCAP & 0x10000000))
                    {
                        Local0 = DCTR /* \_SB_.PCI0.RP01.PXSX.DCTR */
                        Local0 |= 0x8000
                        DCTR = Local0
                    }
                }
            }

            Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })
            Name (WANX, Package (0x03)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (WAND, 0, Serialized)
            {
                DerefOf (WANX [One]) [Zero] = Zero
                DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
                DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
                DerefOf (WANX [0x02]) [Zero] = One
                DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
                DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
                Return (WANX) /* \_SB_.PCI0.RP01.PXSX.WANX */
            }

            Name (WRDX, Package (0x03)
            {
                Zero, 
                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })
            Method (WRDD, 0, Serialized)
            {
                DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
                DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
                DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
                DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
                Return (WRDX) /* \_SB_.PCI0.RP01.PXSX.WRDX */
            }

            Name (WRDY, Package (0x03)
            {
                Zero, 
                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })
            Method (WRDS, 0, Serialized)
            {
                DerefOf (WRDY [One]) [One] = STXE /* \STXE */
                DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
                DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
                DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
                DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
                DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
                DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
                DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
                DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
                DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
                DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
                DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
                DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
                DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
                DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
                DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
                Return (WRDY) /* \_SB_.PCI0.RP01.PXSX.WRDY */
            }

            Method (AWVC, 0, Serialized)
            {
                Return (AWVI) /* \AWVI */
            }

            Method (WOWG, 0, Serialized)
            {
                Return (WGWS) /* \WGWS */
            }

            Method (WIST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x095A8086)
                        {
                            Return (One)
                        }
                        Case (0x095B8086)
                        {
                            Return (One)
                        }
                        Case (0x31658086)
                        {
                            Return (One)
                        }
                        Case (0x31668086)
                        {
                            Return (One)
                        }
                        Case (0x08B18086)
                        {
                            Return (One)
                        }
                        Case (0x08B28086)
                        {
                            Return (One)
                        }
                        Case (0x08B38086)
                        {
                            Return (One)
                        }
                        Case (0x08B48086)
                        {
                            Return (One)
                        }
                        Case (0x24F38086)
                        {
                            Return (One)
                        }
                        Case (0x24F48086)
                        {
                            Return (One)
                        }
                        Case (0x24F58086)
                        {
                            Return (One)
                        }
                        Case (0x24F68086)
                        {
                            Return (One)
                        }
                        Case (0x24FD8086)
                        {
                            Return (One)
                        }
                        Case (0x24FB8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Switch (ToInteger (DerefOf (Arg3 [Zero])))
                        {
                            Case (Zero)
                            {
                            }
                            Case (One)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }
                            Case (0x02)
                            {
                            }
                            Case (0x03)
                            {
                            }
                            Case (0x04)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }

                        }
                    }

                    Return (Zero)
                }
                ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (Zero)
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }
                        Case (One)
                        {
                            Return (WHIT ())
                        }
                        Case (0x02)
                        {
                            Return (SELF ())
                        }
                        Default
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            Method (WGST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x093C8086)
                        {
                            Return (One)
                        }
                        Case (0x097C8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0.RP02.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP02.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP02.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP02.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP02.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP02.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP03.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP03.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP03.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP03.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP03.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP03.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP04.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP04.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP04.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP04.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP04.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP04.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {
        Scope (_SB.PCI0.RP05.PXSX)
        {
            OperationRegion (RPXX, PCI_Config, Zero, 0x10)
            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }

            Name (SPLX, Package (0x04)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (SPLC, 0, Serialized)
            {
                DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
                DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
                DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
                DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
                DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
                DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
                DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
                DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
                DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
                Return (SPLX) /* \_SB_.PCI0.RP05.PXSX.SPLX */
            }

            PowerResource (WRST, 0x05, 0x0000)
            {
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                    Return (One)
                }

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")
                    If ((DCAP & 0x10000000))
                    {
                        Local0 = DCTR /* \_SB_.PCI0.RP05.PXSX.DCTR */
                        Local0 |= 0x8000
                        DCTR = Local0
                    }
                }
            }

            Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })
            Name (WANX, Package (0x03)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (WAND, 0, Serialized)
            {
                DerefOf (WANX [One]) [Zero] = Zero
                DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
                DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
                DerefOf (WANX [0x02]) [Zero] = One
                DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
                DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
                Return (WANX) /* \_SB_.PCI0.RP05.PXSX.WANX */
            }

            Name (WRDX, Package (0x03)
            {
                Zero, 
                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })
            Method (WRDD, 0, Serialized)
            {
                DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
                DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
                DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
                DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
                Return (WRDX) /* \_SB_.PCI0.RP05.PXSX.WRDX */
            }

            Name (WRDY, Package (0x03)
            {
                Zero, 
                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })
            Method (WRDS, 0, Serialized)
            {
                DerefOf (WRDY [One]) [One] = STXE /* \STXE */
                DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
                DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
                DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
                DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
                DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
                DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
                DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
                DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
                DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
                DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
                DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
                DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
                DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
                DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
                DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
                Return (WRDY) /* \_SB_.PCI0.RP05.PXSX.WRDY */
            }

            Method (AWVC, 0, Serialized)
            {
                Return (AWVI) /* \AWVI */
            }

            Method (WOWG, 0, Serialized)
            {
                Return (WGWS) /* \WGWS */
            }

            Method (WIST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x095A8086)
                        {
                            Return (One)
                        }
                        Case (0x095B8086)
                        {
                            Return (One)
                        }
                        Case (0x31658086)
                        {
                            Return (One)
                        }
                        Case (0x31668086)
                        {
                            Return (One)
                        }
                        Case (0x08B18086)
                        {
                            Return (One)
                        }
                        Case (0x08B28086)
                        {
                            Return (One)
                        }
                        Case (0x08B38086)
                        {
                            Return (One)
                        }
                        Case (0x08B48086)
                        {
                            Return (One)
                        }
                        Case (0x24F38086)
                        {
                            Return (One)
                        }
                        Case (0x24F48086)
                        {
                            Return (One)
                        }
                        Case (0x24F58086)
                        {
                            Return (One)
                        }
                        Case (0x24F68086)
                        {
                            Return (One)
                        }
                        Case (0x24FD8086)
                        {
                            Return (One)
                        }
                        Case (0x24FB8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Switch (ToInteger (DerefOf (Arg3 [Zero])))
                        {
                            Case (Zero)
                            {
                            }
                            Case (One)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }
                            Case (0x02)
                            {
                            }
                            Case (0x03)
                            {
                            }
                            Case (0x04)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }

                        }
                    }

                    Return (Zero)
                }
                ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (Zero)
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }
                        Case (One)
                        {
                            Return (WHIT ())
                        }
                        Case (0x02)
                        {
                            Return (SELF ())
                        }
                        Default
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            Method (WGST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x093C8086)
                        {
                            Return (One)
                        }
                        Case (0x097C8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0.RP06.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP06.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP06.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP06.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP06.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP06.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP07.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP07.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP07.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP07.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP07.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP07.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP08.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP08.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP08.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP08.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP08.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP08.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {
        Scope (_SB.PCI0.RP09.PXSX)
        {
            OperationRegion (RPXX, PCI_Config, Zero, 0x10)
            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32
            }

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }

            Name (SPLX, Package (0x04)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (SPLC, 0, Serialized)
            {
                DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
                DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
                DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
                DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
                DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
                DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
                DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
                DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
                DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
                Return (SPLX) /* \_SB_.PCI0.RP09.PXSX.SPLX */
            }

            PowerResource (WRST, 0x05, 0x0000)
            {
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")
                    Return (One)
                }

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")
                    If ((DCAP & 0x10000000))
                    {
                        Local0 = DCTR /* \_SB_.PCI0.RP09.PXSX.DCTR */
                        Local0 |= 0x8000
                        DCTR = Local0
                    }
                }
            }

            Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })
            Name (WANX, Package (0x03)
            {
                Zero, 
                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })
            Method (WAND, 0, Serialized)
            {
                DerefOf (WANX [One]) [Zero] = Zero
                DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
                DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
                DerefOf (WANX [0x02]) [Zero] = One
                DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
                DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
                Return (WANX) /* \_SB_.PCI0.RP09.PXSX.WANX */
            }

            Name (WRDX, Package (0x03)
            {
                Zero, 
                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })
            Method (WRDD, 0, Serialized)
            {
                DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
                DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
                DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
                DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
                Return (WRDX) /* \_SB_.PCI0.RP09.PXSX.WRDX */
            }

            Name (WRDY, Package (0x03)
            {
                Zero, 
                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })
            Method (WRDS, 0, Serialized)
            {
                DerefOf (WRDY [One]) [One] = STXE /* \STXE */
                DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
                DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
                DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
                DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
                DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
                DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
                DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
                DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
                DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
                DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
                DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
                DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
                DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
                DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
                DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
                Return (WRDY) /* \_SB_.PCI0.RP09.PXSX.WRDY */
            }

            Method (AWVC, 0, Serialized)
            {
                Return (AWVI) /* \AWVI */
            }

            Method (WOWG, 0, Serialized)
            {
                Return (WGWS) /* \WGWS */
            }

            Method (WIST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x095A8086)
                        {
                            Return (One)
                        }
                        Case (0x095B8086)
                        {
                            Return (One)
                        }
                        Case (0x31658086)
                        {
                            Return (One)
                        }
                        Case (0x31668086)
                        {
                            Return (One)
                        }
                        Case (0x08B18086)
                        {
                            Return (One)
                        }
                        Case (0x08B28086)
                        {
                            Return (One)
                        }
                        Case (0x08B38086)
                        {
                            Return (One)
                        }
                        Case (0x08B48086)
                        {
                            Return (One)
                        }
                        Case (0x24F38086)
                        {
                            Return (One)
                        }
                        Case (0x24F48086)
                        {
                            Return (One)
                        }
                        Case (0x24F58086)
                        {
                            Return (One)
                        }
                        Case (0x24F68086)
                        {
                            Return (One)
                        }
                        Case (0x24FD8086)
                        {
                            Return (One)
                        }
                        Case (0x24FB8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If (PCIC (Arg0))
                {
                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Switch (ToInteger (DerefOf (Arg3 [Zero])))
                        {
                            Case (Zero)
                            {
                            }
                            Case (One)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x80) // Status Change
                                }
                            }
                            Case (0x02)
                            {
                            }
                            Case (0x03)
                            {
                            }
                            Case (0x04)
                            {
                                If (CondRefOf (\_SB.SLPB))
                                {
                                    Notify (SLPB, 0x02) // Device Wake
                                }
                            }

                        }
                    }

                    Return (Zero)
                }
                ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (Zero)
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x07                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                        }
                        Case (One)
                        {
                            Return (WHIT ())
                        }
                        Case (0x02)
                        {
                            Return (SELF ())
                        }
                        Default
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            Method (WGST, 0, Serialized)
            {
                If (CondRefOf (VDID))
                {
                    Switch (ToInteger (VDID))
                    {
                        Case (0x093C8086)
                        {
                            Return (One)
                        }
                        Case (0x097C8086)
                        {
                            Return (One)
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0.RP10.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP10.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP10.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP10.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP10.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP10.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP11.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP11.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP11.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP11.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP11.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP11.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP12.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP12.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP12.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP12.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP12.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP12.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP13.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP13.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP13.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP13.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP13.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP13.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP14.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP14.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP14.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP14.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP14.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP14.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP15.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP15.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP15.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP15.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP15.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP15.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP16.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP16.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP16.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP16.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP16.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP16.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP17.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP17.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP17.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP17.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP17.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP17.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP18.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP18.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP18.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP18.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP18.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP18.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP19.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP19.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP19.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP19.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP19.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP19.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP20.PXSX)
    {
        OperationRegion (RPXX, PCI_Config, Zero, 0x10)
        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }

        Name (SPLX, Package (0x04)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (SPLC, 0, Serialized)
        {
            DerefOf (SPLX [One]) [Zero] = DOM1 /* \DOM1 */
            DerefOf (SPLX [One]) [One] = LIM1 /* \LIM1 */
            DerefOf (SPLX [One]) [0x02] = TIM1 /* \TIM1 */
            DerefOf (SPLX [0x02]) [Zero] = DOM2 /* \DOM2 */
            DerefOf (SPLX [0x02]) [One] = LIM2 /* \LIM2 */
            DerefOf (SPLX [0x02]) [0x02] = TIM2 /* \TIM2 */
            DerefOf (SPLX [0x03]) [Zero] = DOM3 /* \DOM3 */
            DerefOf (SPLX [0x03]) [One] = LIM3 /* \LIM3 */
            DerefOf (SPLX [0x03]) [0x02] = TIM3 /* \TIM3 */
            Return (SPLX) /* \_SB_.PCI0.RP20.PXSX.SPLX */
        }

        PowerResource (WRST, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")
                If ((DCAP & 0x10000000))
                {
                    Local0 = DCTR /* \_SB_.PCI0.RP20.PXSX.DCTR */
                    Local0 |= 0x8000
                    DCTR = Local0
                }
            }
        }

        Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })
        Name (WANX, Package (0x03)
        {
            Zero, 
            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })
        Method (WAND, 0, Serialized)
        {
            DerefOf (WANX [One]) [Zero] = Zero
            DerefOf (WANX [One]) [One] = TRD0 /* \TRD0 */
            DerefOf (WANX [One]) [0x02] = TRL0 /* \TRL0 */
            DerefOf (WANX [0x02]) [Zero] = One
            DerefOf (WANX [0x02]) [One] = TRD1 /* \TRD1 */
            DerefOf (WANX [0x02]) [0x02] = TRL1 /* \TRL1 */
            Return (WANX) /* \_SB_.PCI0.RP20.PXSX.WANX */
        }

        Name (WRDX, Package (0x03)
        {
            Zero, 
            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })
        Method (WRDD, 0, Serialized)
        {
            DerefOf (WRDX [One]) [Zero] = WDM1 /* \WDM1 */
            DerefOf (WRDX [One]) [One] = CID1 /* \CID1 */
            DerefOf (WRDX [0x02]) [Zero] = WDM2 /* \WDM2 */
            DerefOf (WRDX [0x02]) [One] = CID2 /* \CID2 */
            Return (WRDX) /* \_SB_.PCI0.RP20.PXSX.WRDX */
        }

        Name (WRDY, Package (0x03)
        {
            Zero, 
            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })
        Method (WRDS, 0, Serialized)
        {
            DerefOf (WRDY [One]) [One] = STXE /* \STXE */
            DerefOf (WRDY [One]) [0x02] = STX0 /* \STX0 */
            DerefOf (WRDY [One]) [0x03] = STX1 /* \STX1 */
            DerefOf (WRDY [One]) [0x04] = STX2 /* \STX2 */
            DerefOf (WRDY [One]) [0x05] = STX3 /* \STX3 */
            DerefOf (WRDY [One]) [0x06] = STX4 /* \STX4 */
            DerefOf (WRDY [One]) [0x07] = STX5 /* \STX5 */
            DerefOf (WRDY [One]) [0x08] = STX6 /* \STX6 */
            DerefOf (WRDY [One]) [0x09] = STX7 /* \STX7 */
            DerefOf (WRDY [One]) [0x0A] = STX8 /* \STX8 */
            DerefOf (WRDY [One]) [0x0B] = STX9 /* \STX9 */
            DerefOf (WRDY [0x02]) [One] = WRFE /* \WRFE */
            DerefOf (WRDY [0x02]) [0x02] = WRC1 /* \WRC1 */
            DerefOf (WRDY [0x02]) [0x03] = WRC2 /* \WRC2 */
            DerefOf (WRDY [0x02]) [0x04] = WRC3 /* \WRC3 */
            DerefOf (WRDY [0x02]) [0x05] = WRC4 /* \WRC4 */
            Return (WRDY) /* \_SB_.PCI0.RP20.PXSX.WRDY */
        }

        Method (AWVC, 0, Serialized)
        {
            Return (AWVI) /* \AWVI */
        }

        Method (WOWG, 0, Serialized)
        {
            Return (WGWS) /* \WGWS */
        }

        Method (WIST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x095A8086)
                    {
                        Return (One)
                    }
                    Case (0x095B8086)
                    {
                        Return (One)
                    }
                    Case (0x31658086)
                    {
                        Return (One)
                    }
                    Case (0x31668086)
                    {
                        Return (One)
                    }
                    Case (0x08B18086)
                    {
                        Return (One)
                    }
                    Case (0x08B28086)
                    {
                        Return (One)
                    }
                    Case (0x08B38086)
                    {
                        Return (One)
                    }
                    Case (0x08B48086)
                    {
                        Return (One)
                    }
                    Case (0x24F38086)
                    {
                        Return (One)
                    }
                    Case (0x24F48086)
                    {
                        Return (One)
                    }
                    Case (0x24F58086)
                    {
                        Return (One)
                    }
                    Case (0x24F68086)
                    {
                        Return (One)
                    }
                    Case (0x24FD8086)
                    {
                        Return (One)
                    }
                    Case (0x24FB8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If (PCIC (Arg0))
            {
                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }

                If ((Arg2 == One))
                {
                    Switch (ToInteger (DerefOf (Arg3 [Zero])))
                    {
                        Case (Zero)
                        {
                        }
                        Case (One)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x80) // Status Change
                            }
                        }
                        Case (0x02)
                        {
                        }
                        Case (0x03)
                        {
                        }
                        Case (0x04)
                        {
                            If (CondRefOf (\_SB.SLPB))
                            {
                                Notify (SLPB, 0x02) // Device Wake
                            }
                        }

                    }
                }

                Return (Zero)
            }
            ElseIf ((Arg0 == ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }
                    Case (One)
                    {
                        Return (WHIT ())
                    }
                    Case (0x02)
                    {
                        Return (SELF ())
                    }
                    Default
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                }
            }
            Else
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Method (WGST, 0, Serialized)
        {
            If (CondRefOf (VDID))
            {
                Switch (ToInteger (VDID))
                {
                    Case (0x093C8086)
                    {
                        Return (One)
                    }
                    Case (0x097C8086)
                    {
                        Return (One)
                    }
                    Default
                    {
                        Return (Zero)
                    }

                }
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Method (WHIT, 0, NotSerialized)
        {
            Return (Package (0x01)
            {
                Package (0x05)
                {
                    "DockOemId", 
                    "DockSkuId", 
                    Zero, 
                    0x02, 
                    0x02
                }
            })
        }

        Method (SELF, 0, NotSerialized)
        {
            Return (Package (0x02)
            {
                "PcOemId", 
                "PcSkuId"
            })
        }
    }

    Scope (_SB.PCI0.GFX0)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_SB.PCI0.SAT0)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((((S0ID == One) || (OSYS >= 0x07DF)) && (
                (PEPC & 0x03) != Zero)))
            {
                Return (Package (0x01)
                {
                    PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    If (((S0ID == One) || (OSYS >= 0x07DF)))
    {
        Scope (_SB.PCI0.I2C0)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.I2C1)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.I2C2)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.I2C3)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.I2C4)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.I2C5)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.SPI0)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.SPI1)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.UA00)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.UA01)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }

        Scope (_SB.PCI0.UA02)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }
    }

    Scope (_SB.PCI0.XHC)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {
        Scope (_SB.PCI0.RP01.PXSX)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If ((PAHC () || PNVM ()))
                {
                    If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                        (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                    {
                        Return (Package (0x01)
                        {
                            PEPD
                        })
                    }
                }

                Return (Package (0x00){})
            }

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }

            Method (PAHC, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x06))
                    {
                        If ((PIXX == One))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (PNVM, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x08))
                    {
                        If ((PIXX == 0x02))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP02.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP03.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP04.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {
        Scope (_SB.PCI0.RP05.PXSX)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If ((PAHC () || PNVM ()))
                {
                    If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                        (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                    {
                        Return (Package (0x01)
                        {
                            PEPD
                        })
                    }
                }

                Return (Package (0x00){})
            }

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }

            Method (PAHC, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x06))
                    {
                        If ((PIXX == One))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (PNVM, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x08))
                    {
                        If ((PIXX == 0x02))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP06.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP07.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP08.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {
        Scope (_SB.PCI0.RP09.PXSX)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If ((PAHC () || PNVM ()))
                {
                    If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                        (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                    {
                        Return (Package (0x01)
                        {
                            PEPD
                        })
                    }
                }

                Return (Package (0x00){})
            }

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }

            Method (PAHC, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x06))
                    {
                        If ((PIXX == One))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (PNVM, 0, Serialized)
            {
                If ((BCCX == One))
                {
                    If ((SCCX == 0x08))
                    {
                        If ((PIXX == 0x02))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }
        }
    }

    Scope (_SB.PCI0.RP10.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP11.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP12.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP13.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP14.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP15.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP16.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP17.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP18.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP19.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.RP20.PXSX)
    {
        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {
            If ((PAHC () || PNVM ()))
            {
                If ((((S0ID == One) || (OSYS >= 0x07DF)) && ((
                    (PEPC & 0x0400) == 0x0400) || ((PEPC & 0x0800) == 0x0800))))
                {
                    Return (Package (0x01)
                    {
                        PEPD
                    })
                }
            }

            Return (Package (0x00){})
        }

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)
        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }

        Method (PAHC, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x06))
                {
                    If ((PIXX == One))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }

        Method (PNVM, 0, Serialized)
        {
            If ((BCCX == One))
            {
                If ((SCCX == 0x08))
                {
                    If ((PIXX == 0x02))
                    {
                        Return (One)
                    }
                }
            }

            Return (Zero)
        }
    }

    Scope (_PR.CPU0)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU1)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU2)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU3)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU4)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU5)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU6)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_PR.CPU7)
    {
        Method (XDEP, 0, NotSerialized)
        {
            If (((S0ID == One) || (OSYS >= 0x07DF)))
            {
                Return (Package (0x01)
                {
                    \_SB.PEPD
                })
            }
            Else
            {
                Return (Package (0x00){})
            }
        }
    }

    Scope (_SB)
    {
        Device (PEPD)
        {
            Name (_HID, "INT33A1" /* Intel Power Engine */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0D80") /* Windows-compatible System Power Management Controller */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (DEVY, Package (0x2E)
            {
                Package (0x03)
                {
                    "\\_PR.CPU0", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU1", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU2", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU3", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU4", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU5", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU6", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_PR.CPU7", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.GFX0", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.UA00", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.UA01", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C0", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C1", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.XHC", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "INTELAUDIO\\FUNC_01&VEN_10EC*", 
                    One, 
                    Package (0x03)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            Zero, 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            One, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.PEMC", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.PSDC", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C2", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C3", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C4", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C5", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.UA02", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI0", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI1", 
                    One, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP01.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP02.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP03.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP04.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP05.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP06.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP07.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP08.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP09.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP10.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP11.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP12.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP13.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP14.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP15.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP16.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP17.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP18.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP19.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.RP20.PXSX", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.VOL0", 
                    Zero, 
                    Package (0x02)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }
            })
            Name (BCCD, Package (0x19)
            {
                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP01.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP02.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP03.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP04.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP05.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP06.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP07.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP08.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP09.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP10.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP11.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP12.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP13.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP14.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP15.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP16.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP17.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP18.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP19.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 

                Package (0x02)
                {
                    "\\_SB.PCI0.RP20.PXSX", 
                    Package (0x01)
                    {
                        Package (0x03)
                        {
                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((OSYS >= 0x07DF) || ((OSYS >= 0x07DC) && (
                    S0ID == One))))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("c4eb40a0-6cd2-11e2-bcfd-0800200c9a66") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x7F                                             // .
                        })
                    }

                    If ((Arg2 == One))
                    {
                        If ((S0ID == Zero))
                        {
                            Return (Package (0x00){})
                        }

                        If (((PEPC & 0x03) == One))
                        {
                            DerefOf (DEVY [0x09]) [One] = One
                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {
                                If ((^^PCI0.RP01.PXSX.PAHC () || ^^PCI0.RP01.PXSX.PNVM ()))
                                {
                                    DerefOf (DEVY [0x19]) [One] = One
                                }
                            }

                            If ((^^PCI0.RP02.PXSX.PAHC () || ^^PCI0.RP02.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x1A]) [One] = One
                            }

                            If ((^^PCI0.RP03.PXSX.PAHC () || ^^PCI0.RP03.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x1B]) [One] = One
                            }

                            If ((^^PCI0.RP04.PXSX.PAHC () || ^^PCI0.RP04.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x1C]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {
                                If ((^^PCI0.RP05.PXSX.PAHC () || ^^PCI0.RP05.PXSX.PNVM ()))
                                {
                                    DerefOf (DEVY [0x1D]) [One] = One
                                }
                            }

                            If ((^^PCI0.RP06.PXSX.PAHC () || ^^PCI0.RP06.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x1E]) [One] = One
                            }

                            If ((^^PCI0.RP07.PXSX.PAHC () || ^^PCI0.RP07.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x1F]) [One] = One
                            }

                            If ((^^PCI0.RP08.PXSX.PAHC () || ^^PCI0.RP08.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x20]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {
                                If ((^^PCI0.RP09.PXSX.PAHC () || ^^PCI0.RP09.PXSX.PNVM ()))
                                {
                                    DerefOf (DEVY [0x21]) [One] = One
                                }
                            }

                            If ((^^PCI0.RP10.PXSX.PAHC () || ^^PCI0.RP10.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x22]) [One] = One
                            }

                            If ((^^PCI0.RP11.PXSX.PAHC () || ^^PCI0.RP11.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x23]) [One] = One
                            }

                            If ((^^PCI0.RP12.PXSX.PAHC () || ^^PCI0.RP12.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x24]) [One] = One
                            }

                            If ((^^PCI0.RP13.PXSX.PAHC () || ^^PCI0.RP13.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x25]) [One] = One
                            }

                            If ((^^PCI0.RP14.PXSX.PAHC () || ^^PCI0.RP14.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x26]) [One] = One
                            }

                            If ((^^PCI0.RP15.PXSX.PAHC () || ^^PCI0.RP15.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x27]) [One] = One
                            }

                            If ((^^PCI0.RP16.PXSX.PAHC () || ^^PCI0.RP16.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x28]) [One] = One
                            }

                            If ((^^PCI0.RP17.PXSX.PAHC () || ^^PCI0.RP17.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x29]) [One] = One
                            }

                            If ((^^PCI0.RP18.PXSX.PAHC () || ^^PCI0.RP18.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x2A]) [One] = One
                            }

                            If ((^^PCI0.RP19.PXSX.PAHC () || ^^PCI0.RP19.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x2B]) [One] = One
                            }

                            If ((^^PCI0.RP20.PXSX.PAHC () || ^^PCI0.RP20.PXSX.PNVM ()))
                            {
                                DerefOf (DEVY [0x2C]) [One] = One
                            }
                        }
                        ElseIf (((PEPC & 0x03) == 0x02))
                        {
                            DerefOf (DEVY [0x2D]) [One] = One
                        }

                        If (((PEPC & 0x04) == Zero))
                        {
                            DerefOf (DEVY [0x0A]) [One] = Zero
                        }

                        If (((PEPC & 0x08) == Zero))
                        {
                            DerefOf (DEVY [0x0B]) [One] = Zero
                        }

                        If (((PEPC & 0x10) == Zero)){}
                        If (((PEPC & 0x20) == Zero))
                        {
                            DerefOf (DEVY [0x0C]) [One] = Zero
                        }

                        If (((PEPC & 0x40) == Zero))
                        {
                            DerefOf (DEVY [0x0D]) [One] = Zero
                        }

                        If (((PEPC & 0x80) == Zero))
                        {
                            DerefOf (DEVY [0x0E]) [One] = Zero
                        }

                        If (((PEPC & 0x0100) == Zero))
                        {
                            DerefOf (DEVY [0x0F]) [One] = Zero
                        }

                        If (((PEPC & 0x0200) == Zero))
                        {
                            DerefOf (DEVY [0x08]) [One] = Zero
                        }

                        If ((TCNT >= One))
                        {
                            DerefOf (DEVY [Zero]) [One] = One
                        }

                        If ((TCNT >= 0x02))
                        {
                            DerefOf (DEVY [One]) [One] = One
                        }

                        If ((TCNT >= 0x03))
                        {
                            DerefOf (DEVY [0x02]) [One] = One
                        }

                        If ((TCNT >= 0x04))
                        {
                            DerefOf (DEVY [0x03]) [One] = One
                        }

                        If ((TCNT >= 0x05))
                        {
                            DerefOf (DEVY [0x04]) [One] = One
                        }

                        If ((TCNT >= 0x06))
                        {
                            DerefOf (DEVY [0x05]) [One] = One
                        }

                        If ((TCNT >= 0x07))
                        {
                            DerefOf (DEVY [0x06]) [One] = One
                        }

                        If ((TCNT >= 0x08))
                        {
                            DerefOf (DEVY [0x07]) [One] = One
                        }

                        If (((PEPC & 0x0400) == Zero))
                        {
                            DerefOf (DEVY [Zero]) [One] = Zero
                            DerefOf (DEVY [One]) [One] = Zero
                            DerefOf (DEVY [0x02]) [One] = Zero
                            DerefOf (DEVY [0x03]) [One] = Zero
                            DerefOf (DEVY [0x04]) [One] = Zero
                            DerefOf (DEVY [0x05]) [One] = Zero
                            DerefOf (DEVY [0x06]) [One] = Zero
                            DerefOf (DEVY [0x07]) [One] = Zero
                        }

                        If (((PEPC & 0x0800) == Zero))
                        {
                            DerefOf (DEVY [0x10]) [One] = Zero
                        }

                        If (((PEPC & 0x1000) == Zero))
                        {
                            DerefOf (DEVY [0x11]) [One] = Zero
                        }

                        If (((PEPC & 0x2000) == Zero))
                        {
                            DerefOf (DEVY [0x12]) [One] = Zero
                        }

                        If (((PEPC & 0x4000) == Zero))
                        {
                            DerefOf (DEVY [0x13]) [One] = Zero
                        }

                        If (((PEPC & 0x8000) == Zero))
                        {
                            DerefOf (DEVY [0x14]) [One] = Zero
                        }

                        If (((PEPC & 0x00010000) == Zero))
                        {
                            DerefOf (DEVY [0x15]) [One] = Zero
                        }

                        If (((PEPC & 0x00020000) == Zero))
                        {
                            DerefOf (DEVY [0x16]) [One] = Zero
                        }

                        If (((PEPC & 0x00040000) == Zero))
                        {
                            DerefOf (DEVY [0x17]) [One] = Zero
                        }

                        If (((PEPC & 0x00080000) == Zero))
                        {
                            DerefOf (DEVY [0x18]) [One] = Zero
                        }

                        If ((OSYS >= 0x07DF))
                        {
                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {
                                If (^^PCI0.RP01.PXSX.WIST ())
                                {
                                    DerefOf (DerefOf (DerefOf (DEVY [0x19]) [0x02]
                                        ) [One]) [One] = 0x03
                                    DerefOf (DerefOf (DerefOf (DEVY [0x19]) [0x02]
                                        ) [One]) [0x02] = Zero
                                    DerefOf (DEVY [0x19]) [One] = One
                                }
                            }

                            If (^^PCI0.RP02.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x1A]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x1A]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x1A]) [One] = One
                            }

                            If (^^PCI0.RP03.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x1B]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x1B]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x1B]) [One] = One
                            }

                            If (^^PCI0.RP04.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x1C]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x1C]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x1C]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {
                                If (^^PCI0.RP05.PXSX.WIST ())
                                {
                                    DerefOf (DerefOf (DerefOf (DEVY [0x1D]) [0x02]
                                        ) [One]) [One] = 0x03
                                    DerefOf (DerefOf (DerefOf (DEVY [0x1D]) [0x02]
                                        ) [One]) [0x02] = Zero
                                    DerefOf (DEVY [0x1D]) [One] = One
                                }
                            }

                            If (^^PCI0.RP06.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x1E]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x1E]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x1E]) [One] = One
                            }

                            If (^^PCI0.RP07.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x1F]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x1F]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x1F]) [One] = One
                            }

                            If (^^PCI0.RP08.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x20]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x20]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x20]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {
                                If (^^PCI0.RP09.PXSX.WIST ())
                                {
                                    DerefOf (DerefOf (DerefOf (DEVY [0x21]) [0x02]
                                        ) [One]) [One] = 0x03
                                    DerefOf (DerefOf (DerefOf (DEVY [0x21]) [0x02]
                                        ) [One]) [0x02] = Zero
                                    DerefOf (DEVY [0x21]) [One] = One
                                }
                            }

                            If (^^PCI0.RP10.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x22]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x22]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x22]) [One] = One
                            }

                            If (^^PCI0.RP11.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x23]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x23]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x23]) [One] = One
                            }

                            If (^^PCI0.RP12.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x24]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x24]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x24]) [One] = One
                            }

                            If (^^PCI0.RP13.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x25]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x25]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x25]) [One] = One
                            }

                            If (^^PCI0.RP14.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x26]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x26]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x26]) [One] = One
                            }

                            If (^^PCI0.RP15.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x27]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x27]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x27]) [One] = One
                            }

                            If (^^PCI0.RP16.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x28]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x28]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x28]) [One] = One
                            }

                            If (^^PCI0.RP17.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x29]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x29]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x29]) [One] = One
                            }

                            If (^^PCI0.RP18.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x2A]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x2A]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x2A]) [One] = One
                            }

                            If (^^PCI0.RP19.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x2B]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x2B]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x2B]) [One] = One
                            }

                            If (^^PCI0.RP20.PXSX.WIST ())
                            {
                                DerefOf (DerefOf (DerefOf (DEVY [0x2C]) [0x02]
                                    ) [One]) [One] = 0x03
                                DerefOf (DerefOf (DerefOf (DEVY [0x2C]) [0x02]
                                    ) [One]) [0x02] = Zero
                                DerefOf (DEVY [0x2C]) [One] = One
                            }
                        }

                        If (((OSYS >= 0x07DF) && (PWIG == One)))
                        {
                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {
                                If (^^PCI0.RP01.PXSX.WGST ())
                                {
                                    DerefOf (DEVY [0x19]) [One] = One
                                }
                            }

                            If (^^PCI0.RP02.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x1A]) [One] = One
                            }

                            If (^^PCI0.RP03.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x1B]) [One] = One
                            }

                            If (^^PCI0.RP04.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x1C]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {
                                If (^^PCI0.RP05.PXSX.WGST ())
                                {
                                    DerefOf (DEVY [0x1D]) [One] = One
                                }
                            }

                            If (^^PCI0.RP06.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x1E]) [One] = One
                            }

                            If (^^PCI0.RP07.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x1F]) [One] = One
                            }

                            If (^^PCI0.RP08.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x20]) [One] = One
                            }

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {
                                If (^^PCI0.RP09.PXSX.WGST ())
                                {
                                    DerefOf (DEVY [0x21]) [One] = One
                                }
                            }

                            If (^^PCI0.RP10.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x22]) [One] = One
                            }

                            If (^^PCI0.RP11.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x23]) [One] = One
                            }

                            If (^^PCI0.RP12.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x24]) [One] = One
                            }

                            If (^^PCI0.RP13.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x25]) [One] = One
                            }

                            If (^^PCI0.RP14.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x26]) [One] = One
                            }

                            If (^^PCI0.RP15.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x27]) [One] = One
                            }

                            If (^^PCI0.RP16.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x28]) [One] = One
                            }

                            If (^^PCI0.RP17.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x29]) [One] = One
                            }

                            If (^^PCI0.RP18.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x2A]) [One] = One
                            }

                            If (^^PCI0.RP19.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x2B]) [One] = One
                            }

                            If (^^PCI0.RP20.PXSX.WGST ())
                            {
                                DerefOf (DEVY [0x2C]) [One] = One
                            }
                        }

                        Return (DEVY) /* \_SB_.PEPD.DEVY */
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (BCCD) /* \_SB_.PEPD.BCCD */
                    }

                    If ((Arg2 == 0x03))
                    {
                        If ((S0ID == One))
                        {
                            ^^PCI0.LPCB.H_EC.ECNT (One)
                        }
                    }

                    If ((Arg2 == 0x04))
                    {
                        If ((S0ID == One))
                        {
                            ^^PCI0.LPCB.H_EC.ECNT (Zero)
                        }
                    }

                    If ((Arg2 == 0x05))
                    {
                        If ((S0ID == One))
                        {
                            GUAM (One)
                        }

                        ^^PCI0.LPCB.H_EC.ECNT (0x03)
                    }

                    If ((Arg2 == 0x06))
                    {
                        If ((S0ID == One))
                        {
                            GUAM (Zero)
                        }

                        ^^PCI0.LPCB.H_EC.ECNT (0x02)
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Method (IICB, 2, Serialized)
        {
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Name (IIC0, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                            0x00, ResourceConsumer, _Y3F, Exclusive,
                            )
                    })
                    CreateWordField (IIC0, \_SB.PCI0.IICB._Y3F._ADR, DAD0)  // _ADR: Address
                    DAD0 = Arg0
                    Return (IIC0) /* \_SB_.PCI0.IICB.IIC0 */
                }
                Case (One)
                {
                    Name (IIC1, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, _Y40, Exclusive,
                            )
                    })
                    CreateWordField (IIC1, \_SB.PCI0.IICB._Y40._ADR, DAD1)  // _ADR: Address
                    DAD1 = Arg0
                    Return (IIC1) /* \_SB_.PCI0.IICB.IIC1 */
                }
                Case (0x02)
                {
                    Name (IIC2, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                            0x00, ResourceConsumer, _Y41, Exclusive,
                            )
                    })
                    CreateWordField (IIC2, \_SB.PCI0.IICB._Y41._ADR, DAD2)  // _ADR: Address
                    DAD2 = Arg0
                    Return (IIC2) /* \_SB_.PCI0.IICB.IIC2 */
                }
                Case (0x03)
                {
                    Name (IIC3, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C3",
                            0x00, ResourceConsumer, _Y42, Exclusive,
                            )
                    })
                    CreateWordField (IIC3, \_SB.PCI0.IICB._Y42._ADR, DAD3)  // _ADR: Address
                    DAD3 = Arg0
                    Return (IIC3) /* \_SB_.PCI0.IICB.IIC3 */
                }
                Case (0x04)
                {
                    Name (IIC4, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C4",
                            0x00, ResourceConsumer, _Y43, Exclusive,
                            )
                    })
                    CreateWordField (IIC4, \_SB.PCI0.IICB._Y43._ADR, DAD4)  // _ADR: Address
                    DAD4 = Arg0
                    Return (IIC4) /* \_SB_.PCI0.IICB.IIC4 */
                }
                Default
                {
                    Name (IIC5, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C5",
                            0x00, ResourceConsumer, _Y44, Exclusive,
                            )
                    })
                    CreateWordField (IIC5, \_SB.PCI0.IICB._Y44._ADR, DAD5)  // _ADR: Address
                    DAD5 = Arg0
                    Return (IIC5) /* \_SB_.PCI0.IICB.IIC5 */
                }

            }
        }

        Method (PINR, 2, Serialized)
        {
            Name (GPIR, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0xFFFF
                    }
            })
            CreateWordField (GPIR, 0x17, PINF)
            PINF = ((0x18 * Arg1) + Arg0)
            Return (GPIR) /* \_SB_.PCI0.PINR.GPIR */
        }

        Method (DSMI, 4, Serialized)
        {
            Local3 = (Arg3 << 0x18)
            Local2 = (Arg2 << 0x10)
            Local1 = (Arg1 << 0x08)
            Local0 = (Local1 | Arg0)
            Local0 |= Local2
            Local0 |= Local3
            Return (Local0)
        }

        Method (GPPI, 4, Serialized)
        {
            Local3 = (Arg3 << 0x18)
            Local2 = (Arg2 << 0x10)
            Local1 = (Arg1 << 0x08)
            Local0 = (Local1 | Arg0)
            Local0 |= Local2
            Local0 |= Local3
            Return (Local0)
        }

        Method (GRID, 1, Serialized)
        {
            Name (BUF, Buffer (0x09){})
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    BUF [Zero] = L0H0 /* \L0H0 */
                    BUF [One] = L0H1 /* \L0H1 */
                    BUF [0x02] = L0H2 /* \L0H2 */
                    BUF [0x03] = L0H3 /* \L0H3 */
                    BUF [0x04] = L0H4 /* \L0H4 */
                    BUF [0x05] = L0H5 /* \L0H5 */
                    BUF [0x06] = L0H6 /* \L0H6 */
                    BUF [0x07] = L0H7 /* \L0H7 */
                    BUF [0x08] = L0H8 /* \L0H8 */
                }
                Case (One)
                {
                    BUF [Zero] = L1H0 /* \L1H0 */
                    BUF [One] = L1H1 /* \L1H1 */
                    BUF [0x02] = L1H2 /* \L1H2 */
                    BUF [0x03] = L1H3 /* \L1H3 */
                    BUF [0x04] = L1H4 /* \L1H4 */
                    BUF [0x05] = L1H5 /* \L1H5 */
                    BUF [0x06] = L1H6 /* \L1H6 */
                    BUF [0x07] = L1H7 /* \L1H7 */
                    BUF [0x08] = L1H8 /* \L1H8 */
                }
                Case (0x02)
                {
                    BUF [Zero] = L2H0 /* \L2H0 */
                    BUF [One] = L2H1 /* \L2H1 */
                    BUF [0x02] = L2H2 /* \L2H2 */
                    BUF [0x03] = L2H3 /* \L2H3 */
                    BUF [0x04] = L2H4 /* \L2H4 */
                    BUF [0x05] = L2H5 /* \L2H5 */
                    BUF [0x06] = L2H6 /* \L2H6 */
                    BUF [0x07] = L2H7 /* \L2H7 */
                    BUF [0x08] = L2H8 /* \L2H8 */
                }
                Default
                {
                    BUF [Zero] = L3H0 /* \L3H0 */
                    BUF [One] = L3H1 /* \L3H1 */
                    BUF [0x02] = L3H2 /* \L3H2 */
                    BUF [0x03] = L3H3 /* \L3H3 */
                    BUF [0x04] = L3H4 /* \L3H4 */
                    BUF [0x05] = L3H5 /* \L3H5 */
                    BUF [0x06] = L3H6 /* \L3H6 */
                    BUF [0x07] = L3H7 /* \L3H7 */
                    BUF [0x08] = L3H8 /* \L3H8 */
                }

            }

            Return (ToString (BUF, Ones))
        }

        Method (HCID, 1, Serialized)
        {
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    Local0 = L0SM /* \L0SM */
                }
                Case (One)
                {
                    Local0 = L1SM /* \L1SM */
                }
                Case (0x02)
                {
                    Local0 = L2SM /* \L2SM */
                }
                Default
                {
                    Local0 = L3SM /* \L3SM */
                }

            }

            Switch (ToInteger (Local0))
            {
                Case (Zero)
                {
                    Return ("INT3471")
                }
                Case (One)
                {
                    Return ("INT33BE")
                }
                Case (0x02)
                {
                    Return ("INT3476")
                }
                Case (0x03)
                {
                    Return ("INT3477")
                }
                Case (0x04)
                {
                    Return ("INT3474")
                }
                Case (0x05)
                {
                    Return ("INT3473")
                }
                Case (0x06)
                {
                    Return ("INT3475")
                }
                Case (0x07)
                {
                    Return ("INT3478")
                }
                Case (0x08)
                {
                    Return ("INT3479")
                }
                Case (0x09)
                {
                    Return ("INT347A")
                }
                Case (0x0A)
                {
                    Return ("INT347B")
                }
                Default
                {
                    Return (GRID (Arg0))
                }

            }
        }

        Method (CDEP, 1, Serialized)
        {
            If ((Arg0 == Zero))
            {
                If ((C0TP == One))
                {
                    Switch (ToInteger (L0BS))
                    {
                        Case (Zero)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C0
                            })
                        }
                        Case (One)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C1
                            })
                        }
                        Case (0x02)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C2
                            })
                        }
                        Case (0x03)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C3
                            })
                        }
                        Case (0x04)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C4
                            })
                        }
                        Case (0x05)
                        {
                            Return (Package (0x02)
                            {
                                DSC0, 
                                I2C5
                            })
                        }
                        Default
                        {
                            Return (Package (0x01)
                            {
                                DSC0
                            })
                        }

                    }
                }

                If ((C0TP > One))
                {
                    Return (Package (0x01)
                    {
                        CLP0
                    })
                }
            }

            If ((Arg0 == One))
            {
                If ((C1TP == One))
                {
                    Switch (ToInteger (L1BS))
                    {
                        Case (Zero)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C0
                            })
                        }
                        Case (One)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C1
                            })
                        }
                        Case (0x02)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C2
                            })
                        }
                        Case (0x03)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C3
                            })
                        }
                        Case (0x04)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C4
                            })
                        }
                        Case (0x05)
                        {
                            Return (Package (0x02)
                            {
                                DSC1, 
                                I2C5
                            })
                        }
                        Default
                        {
                            Return (Package (0x01)
                            {
                                DSC1
                            })
                        }

                    }
                }

                If ((C1TP > One))
                {
                    Return (Package (0x01)
                    {
                        CLP1
                    })
                }
            }

            If ((Arg0 == 0x02))
            {
                If ((C2TP == One))
                {
                    Switch (ToInteger (L2BS))
                    {
                        Case (Zero)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C0
                            })
                        }
                        Case (One)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C1
                            })
                        }
                        Case (0x02)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C2
                            })
                        }
                        Case (0x03)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C3
                            })
                        }
                        Case (0x04)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C4
                            })
                        }
                        Case (0x05)
                        {
                            Return (Package (0x02)
                            {
                                DSC2, 
                                I2C5
                            })
                        }
                        Default
                        {
                            Return (Package (0x01)
                            {
                                DSC2
                            })
                        }

                    }
                }

                If ((C2TP > One))
                {
                    Return (Package (0x01)
                    {
                        CLP2
                    })
                }
            }

            If ((Arg0 == 0x03))
            {
                If ((C3TP == One))
                {
                    Switch (ToInteger (L3BS))
                    {
                        Case (Zero)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C0
                            })
                        }
                        Case (One)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C1
                            })
                        }
                        Case (0x02)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C2
                            })
                        }
                        Case (0x03)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C3
                            })
                        }
                        Case (0x04)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C4
                            })
                        }
                        Case (0x05)
                        {
                            Return (Package (0x02)
                            {
                                DSC3, 
                                I2C5
                            })
                        }
                        Default
                        {
                            Return (Package (0x01)
                            {
                                DSC3
                            })
                        }

                    }
                }

                If ((C3TP > One))
                {
                    Return (Package (0x01)
                    {
                        CLP3
                    })
                }
            }

            Return (Package (0x01)
            {
                PCI0
            })
        }

        Method (CDEG, 1, Serialized)
        {
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    Return (Zero)
                }
                Case (One)
                {
                    Return (0x2D)
                }
                Case (0x02)
                {
                    Return (0x5A)
                }
                Case (0x03)
                {
                    Return (0x87)
                }
                Case (0x04)
                {
                    Return (0xB4)
                }
                Case (0x05)
                {
                    Return (0xE1)
                }
                Case (0x06)
                {
                    Return (0x010E)
                }
                Case (0x07)
                {
                    Return (0x013B)
                }
                Default
                {
                    Return (Zero)
                }

            }
        }

        Device (DSC0)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((C0GP > Zero))
                {
                    Local1 = PINR (C0P0, C0G0)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C0GP > One))
                {
                    Local1 = PINR (C0P1, C0G1)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C0GP > 0x02))
                {
                    Local1 = PINR (C0P2, C0G2)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C0GP > 0x03))
                {
                    Local1 = PINR (C0P3, C0G3)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL00)
                {
                    If ((C0TP == One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C0TP /* \C0TP */
                PAR [0x03] = C0CV /* \C0CV */
                Return (PAR) /* \_SB_.PCI0.DSC0.CLDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("79234640-9e10-4fea-a5c1-b5aa8b19756f") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x3F                                             // ?
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (C0GP) /* \C0GP */
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (GPPI (C0F0, ((0x18 * C0G0) + C0P0), C0I0, C0A0))
                    }

                    If ((Arg2 == 0x03))
                    {
                        Return (GPPI (C0F1, ((0x18 * C0G1) + C0P1), C0I1, C0A1))
                    }

                    If ((Arg2 == 0x04))
                    {
                        Return (GPPI (C0F2, ((0x18 * C0G2) + C0P2), C0I2, C0A2))
                    }

                    If ((Arg2 == 0x05))
                    {
                        Return (GPPI (C0F3, ((0x18 * C0G3) + C0P3), C0I3, C0A3))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (DSC1)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((C1GP > Zero))
                {
                    Local1 = PINR (C1P0, C1G0)
                    ConcatenateResTemplate (Local0, Local1, Local0)
                }

                If ((C1GP > One))
                {
                    Local1 = PINR (C1P1, C1G1)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C1GP > 0x02))
                {
                    Local1 = PINR (C1P2, C1G2)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C1GP > 0x03))
                {
                    Local1 = PINR (C1P3, C1G3)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL01)
                {
                    If ((C1TP == One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C1TP /* \C1TP */
                PAR [0x03] = C1CV /* \C1CV */
                Return (PAR) /* \_SB_.PCI0.DSC1.CLDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("79234640-9e10-4fea-a5c1-b5aa8b19756f") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x3F                                             // ?
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (C1GP) /* \C1GP */
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (GPPI (C1F0, ((0x18 * C1G0) + C1P0), C1I0, C1A0))
                    }

                    If ((Arg2 == 0x03))
                    {
                        Return (GPPI (C1F1, ((0x18 * C1G1) + C1P1), C1I1, C1A1))
                    }

                    If ((Arg2 == 0x04))
                    {
                        Return (GPPI (C1F2, ((0x18 * C1G2) + C1P2), C1I2, C1A2))
                    }

                    If ((Arg2 == 0x05))
                    {
                        Return (GPPI (C1F3, ((0x18 * C1G3) + C1P3), C1I3, C1A3))
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (DSC2)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((C2GP > Zero))
                {
                    Local1 = PINR (C2P0, C2G0)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C2GP > One))
                {
                    Local1 = PINR (C2P1, C2G1)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C2GP > 0x02))
                {
                    Local1 = PINR (C2P2, C2G2)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C2GP > 0x03))
                {
                    Local1 = PINR (C2P3, C2G3)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL02)
                {
                    If ((C2TP == One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C2TP /* \C2TP */
                PAR [0x03] = C2CV /* \C2CV */
                Return (PAR) /* \_SB_.PCI0.DSC2.CLDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("79234640-9e10-4fea-a5c1-b5aa8b19756f") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x3F                                             // ?
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (C2GP) /* \C2GP */
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (GPPI (C2F0, ((0x18 * C2G0) + C2P0), C2I0, C2A0))
                    }

                    If ((Arg2 == 0x03))
                    {
                        Return (GPPI (C2F1, ((0x18 * C2G1) + C2P1), C2I1, C2A1))
                    }

                    If ((Arg2 == 0x04))
                    {
                        Return (GPPI (C2F2, ((0x18 * C2G2) + C2P2), C2I2, C2A2))
                    }

                    If ((Arg2 == 0x05))
                    {
                        Return (GPPI (C2F3, ((0x18 * C2G3) + C2P3), C2I3, C2A3))
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (DSC3)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((C3GP > Zero))
                {
                    Local1 = PINR (C3P0, C3G0)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C3GP > One))
                {
                    Local1 = PINR (C3P1, C3G1)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C3GP > 0x02))
                {
                    Local1 = PINR (C3P2, C3G2)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((C3GP > 0x03))
                {
                    Local1 = PINR (C3P3, C3G3)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL03)
                {
                    If ((C3TP == One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C3TP /* \C3TP */
                PAR [0x03] = C3CV /* \C3CV */
                Return (PAR) /* \_SB_.PCI0.DSC3.CLDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("79234640-9e10-4fea-a5c1-b5aa8b19756f") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x3F                                             // ?
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (C3GP) /* \C3GP */
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (GPPI (C3F0, ((0x18 * C3G0) + C3P0), C3I0, C3A0))
                    }

                    If ((Arg2 == 0x03))
                    {
                        Return (GPPI (C3F1, ((0x18 * C3G1) + C3P1), C3I1, C3A1))
                    }

                    If ((Arg2 == 0x04))
                    {
                        Return (GPPI (C3F2, ((0x18 * C3G2) + C3P2), C3I2, C3A2))
                    }

                    If ((Arg2 == 0x05))
                    {
                        Return (GPPI (C3F3, ((0x18 * C3G3) + C3P3), C3I3, C3A3))
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (CLP0)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (CL00)
                {
                    If ((C0IB == 0x02))
                    {
                        Return (Package (0x01)
                        {
                            I2C2
                        })
                    }

                    If ((C0IB == 0x03))
                    {
                        Return (Package (0x01)
                        {
                            I2C3
                        })
                    }
                }

                Return (Package (0x01)
                {
                    PCI0
                })
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                ConcatenateResTemplate (Local0, IICB (C0IA, C0IB), Local2)
                Local0 = Local2
                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL00)
                {
                    If ((C0TP > One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C0TP /* \C0TP */
                PAR [0x03] = C0CV /* \C0CV */
                Return (PAR) /* \_SB_.PCI0.CLP0.CLDB.PAR_ */
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x29, 0x0D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ).......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                BPOS = C0PL /* \C0PL */
                Return (PLDB) /* \_SB_.PCI0.CLP0._PLD.PLDB */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (DSMI (0x0B, C0IA, Zero, C0IB))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        I2CC = One
                        DEV0 = DSMI (0x0B, C0IA, Zero, C0IB)
                        Return (DSMB) /* \_SB_.PCI0.CLP0._DSM.DSMB */
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (CLP1)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (CL01)
                {
                    If ((C1IB == 0x02))
                    {
                        Return (Package (0x01)
                        {
                            I2C2
                        })
                    }

                    If ((C1IB == 0x03))
                    {
                        Return (Package (0x01)
                        {
                            I2C3
                        })
                    }
                }

                Return (Package (0x01)
                {
                    PCI0
                })
            }

            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, One)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                ConcatenateResTemplate (Local0, IICB (C1IA, C1IB), Local2)
                Local0 = Local2
                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL01)
                {
                    If ((C1TP > One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C1TP /* \C1TP */
                PAR [0x03] = C1CV /* \C1CV */
                Return (PAR) /* \_SB_.PCI0.CLP1.CLDB.PAR_ */
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x29, 0x0D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ).......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                BPOS = C1PL /* \C1PL */
                Return (PLDB) /* \_SB_.PCI0.CLP1._PLD.PLDB */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (DSMI (0x0B, C1IA, Zero, C1IB))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        I2CC = One
                        DEV0 = DSMI (0x0B, C1IA, Zero, C1IB)
                        Return (DSMB) /* \_SB_.PCI0.CLP1._DSM.DSMB */
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (CLP2)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (CL02)
                {
                    If ((C2IB == 0x02))
                    {
                        Return (Package (0x01)
                        {
                            I2C2
                        })
                    }

                    If ((C2IB == 0x03))
                    {
                        Return (Package (0x01)
                        {
                            I2C3
                        })
                    }
                }

                Return (Package (0x01)
                {
                    PCI0
                })
            }

            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                ConcatenateResTemplate (Local0, IICB (C2IA, C2IB), Local2)
                Local0 = Local2
                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL02)
                {
                    If ((C2TP > One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C2TP /* \C2TP */
                PAR [0x03] = C2CV /* \C2CV */
                Return (PAR) /* \_SB_.PCI0.CLP2.CLDB.PAR_ */
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x29, 0x0D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ).......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                BPOS = C2PL /* \C2PL */
                Return (PLDB) /* \_SB_.PCI0.CLP2._PLD.PLDB */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (DSMI (0x0B, C2IA, Zero, C2IB))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        I2CC = One
                        DEV0 = DSMI (0x0B, C2IA, Zero, C2IB)
                        Return (DSMB) /* \_SB_.PCI0.CLP2._DSM.DSMB */
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (CLP3)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (CL03)
                {
                    If ((C3IB == 0x02))
                    {
                        Return (Package (0x01)
                        {
                            I2C2
                        })
                    }

                    If ((C3IB == 0x03))
                    {
                        Return (Package (0x01)
                        {
                            I2C3
                        })
                    }
                }

                Return (Package (0x01)
                {
                    PCI0
                })
            }

            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG")  // _DDN: DOS Device Name
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                ConcatenateResTemplate (Local0, IICB (C3IA, C3IB), Local2)
                Local0 = Local2
                Return (Local0)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (CL03)
                {
                    If ((C3TP > One))
                    {
                        Return (0x0F)
                    }
                }

                Return (Zero)
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                PAR [One] = C3TP /* \C3TP */
                PAR [0x03] = C3CV /* \C3CV */
                Return (PAR) /* \_SB_.PCI0.CLP3.CLDB.PAR_ */
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x29, 0x0D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ).......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                BPOS = C3PL /* \C3PL */
                Return (PLDB) /* \_SB_.PCI0.CLP3._PLD.PLDB */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x07                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (DSMI (0x0B, C3IA, Zero, C3IB))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        I2CC = One
                        DEV0 = DSMI (0x0B, C3IA, Zero, C3IB)
                        Return (DSMB) /* \_SB_.PCI0.CLP3._DSM.DSMB */
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (LNK0)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (L0EN)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (L0EN)
                {
                    Return (CDEP (L0CL))
                }
                Else
                {
                    Return (Package (0x01)
                    {
                        PCI0
                    })
                }
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                Return (HCID (Zero))
            }

            Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
            {
                Return (HCID (Zero))
            }

            Method (_DDN, 0, NotSerialized)  // _DDN: DOS Device Name
            {
                Name (BUF, Buffer (0x10){})
                BUF [Zero] = L0M0 /* \L0M0 */
                BUF [One] = L0M1 /* \L0M1 */
                BUF [0x02] = L0M2 /* \L0M2 */
                BUF [0x03] = L0M3 /* \L0M3 */
                BUF [0x04] = L0M4 /* \L0M4 */
                BUF [0x05] = L0M5 /* \L0M5 */
                BUF [0x06] = L0M6 /* \L0M6 */
                BUF [0x07] = L0M7 /* \L0M7 */
                BUF [0x08] = L0M8 /* \L0M8 */
                BUF [0x09] = L0M9 /* \L0M9 */
                BUF [0x0A] = L0MA /* \L0MA */
                BUF [0x0B] = L0MB /* \L0MB */
                BUF [0x0C] = L0MC /* \L0MC */
                BUF [0x0D] = L0MD /* \L0MD */
                BUF [0x0E] = L0ME /* \L0ME */
                BUF [0x0F] = L0MF /* \L0MF */
                Return (ToString (BUF, Ones))
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x69, 0x0E, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // i.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                CreateField (DerefOf (PLDB [Zero]), 0x73, 0x04, RPOS)
                BPOS = L0PL /* \L0PL */
                RPOS = L0DG /* \L0DG */
                Return (PLDB) /* \_SB_.PCI0.LNK0._PLD.PLDB */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((L0DI > Zero))
                {
                    Local1 = IICB (L0A0, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > One))
                {
                    Local1 = IICB (L0A1, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x02))
                {
                    Local1 = IICB (L0A2, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x03))
                {
                    Local1 = IICB (L0A3, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x04))
                {
                    Local1 = IICB (L0A4, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x05))
                {
                    Local1 = IICB (L0A5, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x06))
                {
                    Local1 = IICB (L0A6, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x07))
                {
                    Local1 = IICB (L0A7, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x08))
                {
                    Local1 = IICB (L0A8, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x09))
                {
                    Local1 = IICB (L0A9, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x0A))
                {
                    Local1 = IICB (L0AA, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L0DI > 0x0B))
                {
                    Local1 = IICB (L0AB, L0BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x00, 0x69, 0x56, 0x39, 0x8A, 0xF7, 0x11,  // ..iV9...
                    /* 0008 */  0xA9, 0x4E, 0x9C, 0x7D, 0x20, 0xEE, 0x0A, 0xB5,  // .N.} ...
                    /* 0010 */  0xCA, 0x40, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x00,  // .@......
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0050 */  0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,  // ........
                    /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                PAR [Zero] = L0DV /* \L0DV */
                PAR [One] = L0CV /* \L0CV */
                PAR [0x18] = CDIV /* \CDIV */
                PAR [0x1C] = L0LU /* \L0LU */
                PAR [0x1D] = L0NL /* \L0NL */
                PAR [0x4E] = L0EE /* \L0EE */
                PAR [0x4F] = L0VC /* \L0VC */
                PAR [0x52] = L0FS /* \L0FS */
                PAR [0x54] = CDEG (L0DG)
                CreateDWordField (PAR, 0x56, DAT)
                DAT = L0CK /* \L0CK */
                PAR [0x5A] = L0CL /* \L0CL */
                Return (PAR) /* \_SB_.PCI0.LNK0.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (BUF, Buffer (0x10){})
                        BUF [Zero] = L0M0 /* \L0M0 */
                        BUF [One] = L0M1 /* \L0M1 */
                        BUF [0x02] = L0M2 /* \L0M2 */
                        BUF [0x03] = L0M3 /* \L0M3 */
                        BUF [0x04] = L0M4 /* \L0M4 */
                        BUF [0x05] = L0M5 /* \L0M5 */
                        BUF [0x06] = L0M6 /* \L0M6 */
                        BUF [0x07] = L0M7 /* \L0M7 */
                        BUF [0x08] = L0M8 /* \L0M8 */
                        BUF [0x09] = L0M9 /* \L0M9 */
                        BUF [0x0A] = L0MA /* \L0MA */
                        BUF [0x0B] = L0MB /* \L0MB */
                        BUF [0x0C] = L0MC /* \L0MC */
                        BUF [0x0D] = L0MD /* \L0MD */
                        BUF [0x0E] = L0ME /* \L0ME */
                        BUF [0x0F] = L0MF /* \L0MF */
                        Return (ToString (BUF, Ones))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        CreateDWordField (DSMB, 0x08, DEV1)
                        CreateDWordField (DSMB, 0x0C, DEV2)
                        CreateDWordField (DSMB, 0x10, DEV3)
                        CreateDWordField (DSMB, 0x14, DEV4)
                        CreateDWordField (DSMB, 0x18, DEV5)
                        CreateDWordField (DSMB, 0x1C, DEV6)
                        CreateDWordField (DSMB, 0x20, DEV7)
                        CreateDWordField (DSMB, 0x24, DEV8)
                        CreateDWordField (DSMB, 0x28, DEV9)
                        CreateDWordField (DSMB, 0x2C, DEVA)
                        CreateDWordField (DSMB, 0x30, DEVB)
                        I2CC = L0DI /* \L0DI */
                        DEV0 = DSMI (L0D0, L0A0, Zero, L0BS)
                        DEV1 = DSMI (L0D1, L0A1, Zero, L0BS)
                        DEV2 = DSMI (L0D2, L0A2, Zero, L0BS)
                        DEV3 = DSMI (L0D3, L0A3, Zero, L0BS)
                        DEV4 = DSMI (L0D4, L0A4, Zero, L0BS)
                        DEV5 = DSMI (L0D5, L0A5, Zero, L0BS)
                        DEV6 = DSMI (L0D6, L0A6, Zero, L0BS)
                        DEV7 = DSMI (L0D7, L0A7, Zero, L0BS)
                        DEV8 = DSMI (L0D8, L0A8, Zero, L0BS)
                        DEV9 = DSMI (L0D9, L0A9, Zero, L0BS)
                        DEVA = DSMI (L0DA, L0AA, Zero, L0BS)
                        DEVB = DSMI (L0DB, L0AB, Zero, L0BS)
                        Return (DSMB) /* \_SB_.PCI0.LNK0._DSM.DSMB */
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x1F                                       // ..
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (L0DI) /* \L0DI */
                    }

                    If ((Arg2 == 0x02))
                    {
                        If ((L0DI > Zero))
                        {
                            Return (DSMI (L0D0, L0A0, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x03))
                    {
                        If ((L0DI > One))
                        {
                            Return (DSMI (L0D1, L0A1, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x04))
                    {
                        If ((L0DI > 0x02))
                        {
                            Return (DSMI (L0D2, L0A2, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x05))
                    {
                        If ((L0DI > 0x03))
                        {
                            Return (DSMI (L0D3, L0A3, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x06))
                    {
                        If ((L0DI > 0x04))
                        {
                            Return (DSMI (L0D4, L0A4, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x07))
                    {
                        If ((L0DI > 0x05))
                        {
                            Return (DSMI (L0D5, L0A5, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L0DI > 0x06))
                        {
                            Return (DSMI (L0D6, L0A6, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L0DI > 0x07))
                        {
                            Return (DSMI (L0D7, L0A7, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x09))
                    {
                        If ((L0DI > 0x08))
                        {
                            Return (DSMI (L0D8, L0A8, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0A))
                    {
                        If ((L0DI > 0x09))
                        {
                            Return (DSMI (L0D9, L0A9, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0B))
                    {
                        If ((L0DI > 0x0A))
                        {
                            Return (DSMI (L0DA, L0AA, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0C))
                    {
                        If ((L0DI > 0x0B))
                        {
                            Return (DSMI (L0DB, L0AB, Zero, L0BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (LNK1)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (L1EN)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (L1EN)
                {
                    Return (CDEP (L1CL))
                }
                Else
                {
                    Return (Package (0x01)
                    {
                        PCI0
                    })
                }
            }

            Name (_UID, One)  // _UID: Unique ID
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                Return (HCID (One))
            }

            Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
            {
                Return (HCID (One))
            }

            Method (_DDN, 0, NotSerialized)  // _DDN: DOS Device Name
            {
                Name (BUF, Buffer (0x10){})
                BUF [Zero] = L1M0 /* \L1M0 */
                BUF [One] = L1M1 /* \L1M1 */
                BUF [0x02] = L1M2 /* \L1M2 */
                BUF [0x03] = L1M3 /* \L1M3 */
                BUF [0x04] = L1M4 /* \L1M4 */
                BUF [0x05] = L1M5 /* \L1M5 */
                BUF [0x06] = L1M6 /* \L1M6 */
                BUF [0x07] = L1M7 /* \L1M7 */
                BUF [0x08] = L1M8 /* \L1M8 */
                BUF [0x09] = L1M9 /* \L1M9 */
                BUF [0x0A] = L1MA /* \L1MA */
                BUF [0x0B] = L1MB /* \L1MB */
                BUF [0x0C] = L1MC /* \L1MC */
                BUF [0x0D] = L1MD /* \L1MD */
                BUF [0x0E] = L1ME /* \L1ME */
                BUF [0x0F] = L1MF /* \L1MF */
                Return (ToString (BUF, Ones))
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x69, 0x0E, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // i.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                CreateField (DerefOf (PLDB [Zero]), 0x73, 0x04, RPOS)
                RPOS = L1DG /* \L1DG */
                BPOS = L1PL /* \L1PL */
                Return (PLDB) /* \_SB_.PCI0.LNK1._PLD.PLDB */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((L1DI > Zero))
                {
                    Local1 = IICB (L1A0, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > One))
                {
                    Local1 = IICB (L1A1, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x02))
                {
                    Local1 = IICB (L1A2, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x03))
                {
                    Local1 = IICB (L1A3, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x04))
                {
                    Local1 = IICB (L1A4, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x05))
                {
                    Local1 = IICB (L1A5, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x06))
                {
                    Local1 = IICB (L1A6, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x07))
                {
                    Local1 = IICB (L1A7, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x08))
                {
                    Local1 = IICB (L1A8, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x09))
                {
                    Local1 = IICB (L1A9, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x0A))
                {
                    Local1 = IICB (L1AA, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L1DI > 0x0B))
                {
                    Local1 = IICB (L1AB, L1BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x00, 0x69, 0x56, 0x39, 0x8A, 0xF7, 0x11,  // ..iV9...
                    /* 0008 */  0xA9, 0x4E, 0x9C, 0x7D, 0x20, 0xEE, 0x0A, 0xB5,  // .N.} ...
                    /* 0010 */  0xCA, 0x40, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x00,  // .@......
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0050 */  0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,  // ........
                    /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                PAR [Zero] = L1DV /* \L1DV */
                PAR [One] = L1CV /* \L1CV */
                PAR [0x18] = CDIV /* \CDIV */
                PAR [0x1C] = L1LU /* \L1LU */
                PAR [0x1D] = L1NL /* \L1NL */
                PAR [0x4E] = L1EE /* \L1EE */
                PAR [0x4F] = L1VC /* \L1VC */
                PAR [0x52] = L1FS /* \L1FS */
                PAR [0x54] = CDEG (L1DG)
                CreateDWordField (PAR, 0x56, DAT)
                DAT = L1CK /* \L1CK */
                PAR [0x5A] = L1CL /* \L1CL */
                Return (PAR) /* \_SB_.PCI0.LNK1.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (BUF, Buffer (0x10){})
                        BUF [Zero] = L1M0 /* \L1M0 */
                        BUF [One] = L1M1 /* \L1M1 */
                        BUF [0x02] = L1M2 /* \L1M2 */
                        BUF [0x03] = L1M3 /* \L1M3 */
                        BUF [0x04] = L1M4 /* \L1M4 */
                        BUF [0x05] = L1M5 /* \L1M5 */
                        BUF [0x06] = L1M6 /* \L1M6 */
                        BUF [0x07] = L1M7 /* \L1M7 */
                        BUF [0x08] = L1M8 /* \L1M8 */
                        BUF [0x09] = L1M9 /* \L1M9 */
                        BUF [0x0A] = L1MA /* \L1MA */
                        BUF [0x0B] = L1MB /* \L1MB */
                        BUF [0x0C] = L1MC /* \L1MC */
                        BUF [0x0D] = L1MD /* \L1MD */
                        BUF [0x0E] = L1ME /* \L1ME */
                        BUF [0x0F] = L1MF /* \L1MF */
                        Return (ToString (BUF, Ones))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        CreateDWordField (DSMB, 0x08, DEV1)
                        CreateDWordField (DSMB, 0x0C, DEV2)
                        CreateDWordField (DSMB, 0x10, DEV3)
                        CreateDWordField (DSMB, 0x14, DEV4)
                        CreateDWordField (DSMB, 0x18, DEV5)
                        CreateDWordField (DSMB, 0x1C, DEV6)
                        CreateDWordField (DSMB, 0x20, DEV7)
                        CreateDWordField (DSMB, 0x24, DEV8)
                        CreateDWordField (DSMB, 0x28, DEV9)
                        CreateDWordField (DSMB, 0x2C, DEVA)
                        CreateDWordField (DSMB, 0x30, DEVB)
                        I2CC = L1DI /* \L1DI */
                        DEV0 = DSMI (L1D0, L1A0, Zero, L1BS)
                        DEV1 = DSMI (L1D1, L1A1, Zero, L1BS)
                        DEV2 = DSMI (L1D2, L1A2, Zero, L1BS)
                        DEV3 = DSMI (L1D3, L1A3, Zero, L1BS)
                        DEV4 = DSMI (L1D4, L1A4, Zero, L1BS)
                        DEV5 = DSMI (L1D5, L1A5, Zero, L1BS)
                        DEV6 = DSMI (L1D6, L1A6, Zero, L1BS)
                        DEV7 = DSMI (L1D7, L1A7, Zero, L1BS)
                        DEV8 = DSMI (L1D8, L1A8, Zero, L1BS)
                        DEV9 = DSMI (L1D9, L1A9, Zero, L1BS)
                        DEVA = DSMI (L1DA, L1AA, Zero, L1BS)
                        DEVB = DSMI (L1DB, L1AB, Zero, L1BS)
                        Return (DSMB) /* \_SB_.PCI0.LNK1._DSM.DSMB */
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x1F                                       // ..
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (L1DI) /* \L1DI */
                    }

                    If ((Arg2 == 0x02))
                    {
                        If ((L1DI > Zero))
                        {
                            Return (DSMI (L1D0, L1A0, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x03))
                    {
                        If ((L1DI > One))
                        {
                            Return (DSMI (L1D1, L1A1, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x04))
                    {
                        If ((L1DI > 0x02))
                        {
                            Return (DSMI (L1D2, L1A2, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x05))
                    {
                        If ((L1DI > 0x03))
                        {
                            Return (DSMI (L1D3, L1A3, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x06))
                    {
                        If ((L1DI > 0x04))
                        {
                            Return (DSMI (L1D4, L1A4, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x07))
                    {
                        If ((L1DI > 0x05))
                        {
                            Return (DSMI (L1D5, L1A5, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L1DI > 0x06))
                        {
                            Return (DSMI (L1D6, L1A6, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L1DI > 0x07))
                        {
                            Return (DSMI (L1D7, L1A7, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x09))
                    {
                        If ((L1DI > 0x08))
                        {
                            Return (DSMI (L1D8, L1A8, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0A))
                    {
                        If ((L1DI > 0x09))
                        {
                            Return (DSMI (L1D9, L1A9, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0B))
                    {
                        If ((L1DI > 0x0A))
                        {
                            Return (DSMI (L1DA, L1AA, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0C))
                    {
                        If ((L1DI > 0x0B))
                        {
                            Return (DSMI (L1DB, L1AB, Zero, L1BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (LNK2)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (L2EN)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (L2EN)
                {
                    Return (CDEP (L2CL))
                }
                Else
                {
                    Return (Package (0x01)
                    {
                        PCI0
                    })
                }
            }

            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                Return (HCID (0x02))
            }

            Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
            {
                Return (HCID (0x02))
            }

            Method (_DDN, 0, NotSerialized)  // _DDN: DOS Device Name
            {
                Name (BUF, Buffer (0x10){})
                BUF [Zero] = L2M0 /* \L2M0 */
                BUF [One] = L2M1 /* \L2M1 */
                BUF [0x02] = L2M2 /* \L2M2 */
                BUF [0x03] = L2M3 /* \L2M3 */
                BUF [0x04] = L2M4 /* \L2M4 */
                BUF [0x05] = L2M5 /* \L2M5 */
                BUF [0x06] = L2M6 /* \L2M6 */
                BUF [0x07] = L2M7 /* \L2M7 */
                BUF [0x08] = L2M8 /* \L2M8 */
                BUF [0x09] = L2M9 /* \L2M9 */
                BUF [0x0A] = L2MA /* \L2MA */
                BUF [0x0B] = L2MB /* \L2MB */
                BUF [0x0C] = L2MC /* \L2MC */
                BUF [0x0D] = L2MD /* \L2MD */
                BUF [0x0E] = L2ME /* \L2ME */
                BUF [0x0F] = L2MF /* \L2MF */
                Return (ToString (BUF, Ones))
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x69, 0x0E, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // i.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                CreateField (DerefOf (PLDB [Zero]), 0x73, 0x04, RPOS)
                BPOS = L2PL /* \L2PL */
                RPOS = L2DG /* \L2DG */
                Return (PLDB) /* \_SB_.PCI0.LNK2._PLD.PLDB */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((L2DI > Zero))
                {
                    Local1 = IICB (L2A0, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > One))
                {
                    Local1 = IICB (L2A1, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x02))
                {
                    Local1 = IICB (L2A2, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x03))
                {
                    Local1 = IICB (L2A3, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x04))
                {
                    Local1 = IICB (L2A4, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x05))
                {
                    Local1 = IICB (L2A5, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x06))
                {
                    Local1 = IICB (L2A6, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x07))
                {
                    Local1 = IICB (L2A7, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x08))
                {
                    Local1 = IICB (L2A8, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x09))
                {
                    Local1 = IICB (L2A9, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x0A))
                {
                    Local1 = IICB (L2AA, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L2DI > 0x0B))
                {
                    Local1 = IICB (L2AB, L2BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x00, 0x69, 0x56, 0x39, 0x8A, 0xF7, 0x11,  // ..iV9...
                    /* 0008 */  0xA9, 0x4E, 0x9C, 0x7D, 0x20, 0xEE, 0x0A, 0xB5,  // .N.} ...
                    /* 0010 */  0xCA, 0x40, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x00,  // .@......
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0050 */  0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,  // ........
                    /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                PAR [Zero] = L2DV /* \L2DV */
                PAR [One] = L2CV /* \L2CV */
                PAR [0x18] = CDIV /* \CDIV */
                PAR [0x1C] = L2LU /* \L2LU */
                PAR [0x1D] = L2NL /* \L2NL */
                PAR [0x4E] = L2EE /* \L2EE */
                PAR [0x4F] = L2VC /* \L2VC */
                PAR [0x52] = L2FS /* \L2FS */
                PAR [0x54] = CDEG (L2DG)
                CreateDWordField (PAR, 0x56, DAT)
                DAT = L2CK /* \L2CK */
                PAR [0x5A] = L2CL /* \L2CL */
                Return (PAR) /* \_SB_.PCI0.LNK2.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (BUF, Buffer (0x10){})
                        BUF [Zero] = L2M0 /* \L2M0 */
                        BUF [One] = L2M1 /* \L2M1 */
                        BUF [0x02] = L2M2 /* \L2M2 */
                        BUF [0x03] = L2M3 /* \L2M3 */
                        BUF [0x04] = L2M4 /* \L2M4 */
                        BUF [0x05] = L2M5 /* \L2M5 */
                        BUF [0x06] = L2M6 /* \L2M6 */
                        BUF [0x07] = L2M7 /* \L2M7 */
                        BUF [0x08] = L2M8 /* \L2M8 */
                        BUF [0x09] = L2M9 /* \L2M9 */
                        BUF [0x0A] = L2MA /* \L2MA */
                        BUF [0x0B] = L2MB /* \L2MB */
                        BUF [0x0C] = L2MC /* \L2MC */
                        BUF [0x0D] = L2MD /* \L2MD */
                        BUF [0x0E] = L2ME /* \L2ME */
                        BUF [0x0F] = L2MF /* \L2MF */
                        Return (ToString (BUF, Ones))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        CreateDWordField (DSMB, 0x08, DEV1)
                        CreateDWordField (DSMB, 0x0C, DEV2)
                        CreateDWordField (DSMB, 0x10, DEV3)
                        CreateDWordField (DSMB, 0x14, DEV4)
                        CreateDWordField (DSMB, 0x18, DEV5)
                        CreateDWordField (DSMB, 0x1C, DEV6)
                        CreateDWordField (DSMB, 0x20, DEV7)
                        CreateDWordField (DSMB, 0x24, DEV8)
                        CreateDWordField (DSMB, 0x28, DEV9)
                        CreateDWordField (DSMB, 0x2C, DEVA)
                        CreateDWordField (DSMB, 0x30, DEVB)
                        I2CC = L2DI /* \L2DI */
                        DEV0 = DSMI (L2D0, L2A0, Zero, L2BS)
                        DEV1 = DSMI (L2D1, L2A1, Zero, L2BS)
                        DEV2 = DSMI (L2D2, L2A2, Zero, L2BS)
                        DEV3 = DSMI (L2D3, L2A3, Zero, L2BS)
                        DEV4 = DSMI (L2D4, L2A4, Zero, L2BS)
                        DEV5 = DSMI (L2D5, L2A5, Zero, L2BS)
                        DEV6 = DSMI (L2D6, L2A6, Zero, L2BS)
                        DEV7 = DSMI (L2D7, L2A7, Zero, L2BS)
                        DEV8 = DSMI (L2D8, L2A8, Zero, L2BS)
                        DEV9 = DSMI (L2D9, L2A9, Zero, L2BS)
                        DEVA = DSMI (L2DA, L2AA, Zero, L2BS)
                        DEVB = DSMI (L2DB, L2AB, Zero, L2BS)
                        Return (DSMB) /* \_SB_.PCI0.LNK2._DSM.DSMB */
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x1F                                       // ..
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (L2DI) /* \L2DI */
                    }

                    If ((Arg2 == 0x02))
                    {
                        If ((L2DI > Zero))
                        {
                            Return (DSMI (L2D0, L2A0, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x03))
                    {
                        If ((L2DI > One))
                        {
                            Return (DSMI (L2D1, L2A1, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x04))
                    {
                        If ((L2DI > 0x02))
                        {
                            Return (DSMI (L2D2, L2A2, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x05))
                    {
                        If ((L2DI > 0x03))
                        {
                            Return (DSMI (L2D3, L2A3, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x06))
                    {
                        If ((L2DI > 0x04))
                        {
                            Return (DSMI (L2D4, L2A4, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x07))
                    {
                        If ((L2DI > 0x05))
                        {
                            Return (DSMI (L2D5, L2A5, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L2DI > 0x06))
                        {
                            Return (DSMI (L2D6, L2A6, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L2DI > 0x07))
                        {
                            Return (DSMI (L2D7, L2A7, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x09))
                    {
                        If ((L2DI > 0x08))
                        {
                            Return (DSMI (L2D8, L2A8, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0A))
                    {
                        If ((L2DI > 0x09))
                        {
                            Return (DSMI (L2D9, L2A9, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0B))
                    {
                        If ((L2DI > 0x0A))
                        {
                            Return (DSMI (L2DA, L2AA, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0C))
                    {
                        If ((L2DI > 0x0B))
                        {
                            Return (DSMI (L2DB, L2AB, Zero, L2BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }

        Device (LNK3)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (L3EN)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If (L3EN)
                {
                    Return (CDEP (L3CL))
                }
                Else
                {
                    Return (Package (0x01)
                    {
                        PCI0
                    })
                }
            }

            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                Return (HCID (0x03))
            }

            Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
            {
                Return (HCID (0x03))
            }

            Method (_DDN, 0, NotSerialized)  // _DDN: DOS Device Name
            {
                Name (BUF, Buffer (0x10){})
                BUF [Zero] = L3M0 /* \L3M0 */
                BUF [One] = L3M1 /* \L3M1 */
                BUF [0x02] = L3M2 /* \L3M2 */
                BUF [0x03] = L3M3 /* \L3M3 */
                BUF [0x04] = L3M4 /* \L3M4 */
                BUF [0x05] = L3M5 /* \L3M5 */
                BUF [0x06] = L3M6 /* \L3M6 */
                BUF [0x07] = L3M7 /* \L3M7 */
                BUF [0x08] = L3M8 /* \L3M8 */
                BUF [0x09] = L3M9 /* \L3M9 */
                BUF [0x0A] = L3MA /* \L3MA */
                BUF [0x0B] = L3MB /* \L3MB */
                BUF [0x0C] = L3MC /* \L3MC */
                BUF [0x0D] = L3MD /* \L3MD */
                BUF [0x0E] = L3ME /* \L3ME */
                BUF [0x0F] = L3MF /* \L3MF */
                Return (ToString (BUF, Ones))
            }

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {
                Name (PLDB, Package (0x01)
                {
                    Buffer (0x14)
                    {
                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                        /* 0008 */  0x69, 0x0E, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // i.......
                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                    }
                })
                CreateByteField (DerefOf (PLDB [Zero]), 0x08, BPOS)
                CreateField (DerefOf (PLDB [Zero]), 0x73, 0x04, RPOS)
                BPOS = L3PL /* \L3PL */
                RPOS = L3DG /* \L3DG */
                Return (PLDB) /* \_SB_.PCI0.LNK3._PLD.PLDB */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }
                If ((L3DI > Zero))
                {
                    Local1 = IICB (L3A0, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > One))
                {
                    Local1 = IICB (L3A1, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x02))
                {
                    Local1 = IICB (L3A2, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x03))
                {
                    Local1 = IICB (L3A3, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x04))
                {
                    Local1 = IICB (L3A4, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x05))
                {
                    Local1 = IICB (L3A5, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x06))
                {
                    Local1 = IICB (L3A6, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x07))
                {
                    Local1 = IICB (L3A7, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x08))
                {
                    Local1 = IICB (L3A8, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x09))
                {
                    Local1 = IICB (L3A9, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x0A))
                {
                    Local1 = IICB (L3AA, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                If ((L3DI > 0x0B))
                {
                    Local1 = IICB (L3AB, L3BS)
                    ConcatenateResTemplate (Local0, Local1, Local2)
                    Local0 = Local2
                }

                Return (Local0)
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x00, 0x69, 0x56, 0x39, 0x8A, 0xF7, 0x11,  // ..iV9...
                    /* 0008 */  0xA9, 0x4E, 0x9C, 0x7D, 0x20, 0xEE, 0x0A, 0xB5,  // .N.} ...
                    /* 0010 */  0xCA, 0x40, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x00,  // .@......
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0050 */  0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,  // ........
                    /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                PAR [Zero] = L3DV /* \L3DV */
                PAR [One] = L3CV /* \L3CV */
                PAR [0x18] = CDIV /* \CDIV */
                PAR [0x1C] = L3LU /* \L3LU */
                PAR [0x1D] = L3NL /* \L3NL */
                PAR [0x4E] = L3EE /* \L3EE */
                PAR [0x4F] = L3VC /* \L3VC */
                PAR [0x52] = L3FS /* \L3FS */
                PAR [0x54] = CDEG (L3DG)
                CreateDWordField (PAR, 0x56, DAT)
                DAT = L3CK /* \L3CK */
                PAR [0x5A] = L3CL /* \L3CL */
                Return (PAR) /* \_SB_.PCI0.LNK3.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (BUF, Buffer (0x10){})
                        BUF [Zero] = L3M0 /* \L3M0 */
                        BUF [One] = L3M1 /* \L3M1 */
                        BUF [0x02] = L3M2 /* \L3M2 */
                        BUF [0x03] = L3M3 /* \L3M3 */
                        BUF [0x04] = L3M4 /* \L3M4 */
                        BUF [0x05] = L3M5 /* \L3M5 */
                        BUF [0x06] = L3M6 /* \L3M6 */
                        BUF [0x07] = L3M7 /* \L3M7 */
                        BUF [0x08] = L3M8 /* \L3M8 */
                        BUF [0x09] = L3M9 /* \L3M9 */
                        BUF [0x0A] = L3MA /* \L3MA */
                        BUF [0x0B] = L3MB /* \L3MB */
                        BUF [0x0C] = L3MC /* \L3MC */
                        BUF [0x0D] = L3MD /* \L3MD */
                        BUF [0x0E] = L3ME /* \L3ME */
                        BUF [0x0F] = L3MF /* \L3MF */
                        Return (ToString (BUF, Ones))
                    }
                }

                If ((Arg0 == ToUUID ("5815c5c8-c47d-477b-9a8d-76173176414b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x01                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Name (DSMB, Buffer (0x34){})
                        CreateDWordField (DSMB, Zero, I2CC)
                        CreateDWordField (DSMB, 0x04, DEV0)
                        CreateDWordField (DSMB, 0x08, DEV1)
                        CreateDWordField (DSMB, 0x0C, DEV2)
                        CreateDWordField (DSMB, 0x10, DEV3)
                        CreateDWordField (DSMB, 0x14, DEV4)
                        CreateDWordField (DSMB, 0x18, DEV5)
                        CreateDWordField (DSMB, 0x1C, DEV6)
                        CreateDWordField (DSMB, 0x20, DEV7)
                        CreateDWordField (DSMB, 0x24, DEV8)
                        CreateDWordField (DSMB, 0x28, DEV9)
                        CreateDWordField (DSMB, 0x2C, DEVA)
                        CreateDWordField (DSMB, 0x30, DEVB)
                        I2CC = L3DI /* \L3DI */
                        DEV0 = DSMI (L3D0, L3A0, Zero, L3BS)
                        DEV1 = DSMI (L3D1, L3A1, Zero, L3BS)
                        DEV2 = DSMI (L3D2, L3A2, Zero, L3BS)
                        DEV3 = DSMI (L3D3, L3A3, Zero, L3BS)
                        DEV4 = DSMI (L3D4, L3A4, Zero, L3BS)
                        DEV5 = DSMI (L3D5, L3A5, Zero, L3BS)
                        DEV6 = DSMI (L3D6, L3A6, Zero, L3BS)
                        DEV7 = DSMI (L3D7, L3A7, Zero, L3BS)
                        DEV8 = DSMI (L3D8, L3A8, Zero, L3BS)
                        DEV9 = DSMI (L3D9, L3A9, Zero, L3BS)
                        DEVA = DSMI (L3DA, L3AA, Zero, L3BS)
                        DEVB = DSMI (L3DB, L3AB, Zero, L3BS)
                        Return (DSMB) /* \_SB_.PCI0.LNK3._DSM.DSMB */
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x1F                                       // ..
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (L3DI) /* \L3DI */
                    }

                    If ((Arg2 == 0x02))
                    {
                        If ((L3DI > Zero))
                        {
                            Return (DSMI (L3D0, L3A0, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x03))
                    {
                        If ((L3DI > One))
                        {
                            Return (DSMI (L3D1, L3A1, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x04))
                    {
                        If ((L3DI > 0x02))
                        {
                            Return (DSMI (L3D2, L3A2, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x05))
                    {
                        If ((L3DI > 0x03))
                        {
                            Return (DSMI (L3D3, L3A3, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x06))
                    {
                        If ((L3DI > 0x04))
                        {
                            Return (DSMI (L3D4, L3A4, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x07))
                    {
                        If ((L3DI > 0x05))
                        {
                            Return (DSMI (L3D5, L3A5, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L3DI > 0x06))
                        {
                            Return (DSMI (L3D6, L3A6, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x08))
                    {
                        If ((L3DI > 0x07))
                        {
                            Return (DSMI (L3D7, L3A7, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x09))
                    {
                        If ((L3DI > 0x08))
                        {
                            Return (DSMI (L3D8, L3A8, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0A))
                    {
                        If ((L3DI > 0x09))
                        {
                            Return (DSMI (L3D9, L3A9, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0B))
                    {
                        If ((L3DI > 0x0A))
                        {
                            Return (DSMI (L3DA, L3AA, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    If ((Arg2 == 0x0C))
                    {
                        If ((L3DI > 0x0B))
                        {
                            Return (DSMI (L3DB, L3AB, Zero, L3BS))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0.I2C2)
    {
        Device (CAM0)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3471")  // _HID: Hardware ID
            Name (_CID, "INT3471")  // _CID: Compatible ID
            Name (_DDN, "IMX135-CRDG2")  // _DDN: DOS Device Name
            Name (_UID, "0")  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                PMIC
            })
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x1,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x0,
                    PLD_Panel              = "BACK",
                    PLD_VerticalPosition   = "CENTER",
                    PLD_HorizontalPosition = "RIGHT",
                    PLD_Shape              = "VERTICALRECTANGLE",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x1,
                    PLD_EjectRequired      = 0x1,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0010, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x000E, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x0050, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x0051, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x0052, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x0053, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (SBUF) /* \_SB_.PCI0.I2C2.CAM0._CRS.SBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SCSS == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .P......
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x03,  // ........
                    /* 0050 */  0x09, 0x00, 0x02, 0x01, 0x00, 0x01, 0x00, 0x36,  // .......6
                    /* 0058 */  0x6E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // n.......
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                Return (PAR) /* \_SB_.PCI0.I2C2.CAM0.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    Return ("13P2BAD33")
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == One))
                    {
                        Return (0x06)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (0x02001000)
                    }

                    If ((Arg2 == 0x03))
                    {
                        Return (0x02000E01)
                    }

                    If ((Arg2 == 0x04))
                    {
                        Return (0x02005002)
                    }

                    If ((Arg2 == 0x05))
                    {
                        Return (0x02005103)
                    }

                    If ((Arg2 == 0x06))
                    {
                        Return (0x02005204)
                    }

                    If ((Arg2 == 0x07))
                    {
                        Return (0x02005305)
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0.I2C4)
    {
        Device (CAM1)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3474")  // _HID: Hardware ID
            Name (_CID, "INT3474")  // _CID: Compatible ID
            Name (_DDN, "OV2740-CRDG2")  // _DDN: DOS Device Name
            Name (_UID, "0")  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^^I2C2.PMIC
            })
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x1,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x0,
                    PLD_Panel              = "FRONT",
                    PLD_VerticalPosition   = "CENTER",
                    PLD_HorizontalPosition = "RIGHT",
                    PLD_Shape              = "VERTICALRECTANGLE",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x1,
                    PLD_EjectRequired      = 0x1,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0036, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C4",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (SBUF) /* \_SB_.PCI0.I2C4.CAM1._CRS.SBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SCSS == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (SSDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x6C)
                {
                    /* 0000 */  0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .P......
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00,  // ........
                    /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0050 */  0x09, 0x00, 0x02, 0x01, 0x00, 0x01, 0x00, 0xF8,  // ........
                    /* 0058 */  0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // $.......
                    /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0068 */  0x00, 0x00, 0x00, 0x00                           // ....
                })
                Return (PAR) /* \_SB_.PCI0.I2C4.CAM1.SSDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("822ace8f-2814-4174-a56b-5f029fe079ee") /* Unknown UUID */))
                {
                    Return ("4SF259T2")
                }

                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (0x04003600)
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.PCI0.I2C2)
    {
        Device (PMIC)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, "INT3472")  // _HID: Hardware ID
            Name (_CID, "INT3472")  // _CID: Compatible ID
            Name (_DDN, "PMIC-CRDG2")  // _DDN: DOS Device Name
            Name (_UID, "0")  // _UID: Unique ID
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x1,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x0,
                    PLD_Panel              = "FRONT",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "CENTER",
                    PLD_Shape              = "VERTICALRECTANGLE",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x1,
                    PLD_EjectRequired      = 0x1,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Return (SBUF) /* \_SB_.PCI0.I2C2.PMIC._CRS.SBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SCSS == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (CLDB, 0, NotSerialized)
            {
                Name (PAR, Buffer (0x20)
                {
                    /* 0000 */  0x00, 0x02, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00,  // ...P....
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                Return (PAR) /* \_SB_.PCI0.I2C2.PMIC.CLDB.PAR_ */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("26257549-9271-4ca4-bb43-c4899d5a4881") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (0x07)
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (0x02004C0B)
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB)
    {
        Device (WCT0)
        {
            Name (_HID, EisaId ("IWC0001"))  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((WIFC == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (PCMD, 1, NotSerialized)
            {
                If (^^PCI0.LPCB.H_EC.ECAV)
                {
                    ^^PCI0.LPCB.H_EC.IWCW = Arg0
                    ^^PCI0.LPCB.H_EC.ECMD (0xE1)
                }
            }

            Method (ITPW, 1, NotSerialized)
            {
                If (^^PCI0.LPCB.H_EC.ECAV)
                {
                    ^^PCI0.LPCB.H_EC.IWCW = Arg0
                    ^^PCI0.LPCB.H_EC.ECMD (0xE1)
                }
            }

            Method (ITPR, 0, NotSerialized)
            {
                If (^^PCI0.LPCB.H_EC.ECAV)
                {
                    Return (^^PCI0.LPCB.H_EC.IWCR) /* \_SB_.PCI0.LPCB.H_EC.IWCR */
                }

                Return (Package (0x00){})
            }

            Method (PSRC, 0, NotSerialized)
            {
                Return (^^PCI0.LPCB.H_EC.ECRD (RefOf (^^PCI0.LPCB.H_EC.PWRT)))
            }
        }
    }

    Scope (_SB.PCI0.HDAS)
    {
        Method (PPMS, 1, Serialized)
        {
            If ((Arg0 == ToUUID ("7c708106-3aff-40fe-88be-8c999b3f7445") /* Unknown UUID */))
            {
                Return ((ADPM & 0x04))
            }

            If ((Arg0 == ToUUID ("ec774fa9-28d3-424a-90e4-69f984f1eeb7") /* Unknown UUID */))
            {
                Return ((ADPM & 0x0100))
            }

            If ((Arg0 == ACCG (AG1L, AG1H)))
            {
                Return ((ADPM & 0x20000000))
            }

            If ((Arg0 == ACCG (AG2L, AG2H)))
            {
                Return ((ADPM & 0x40000000))
            }

            If ((Arg0 == ACCG (AG3L, AG3H)))
            {
                Return ((ADPM & 0x80000000))
            }

            Return (Zero)
        }

        Method (ACCG, 2, NotSerialized)
        {
            Name (GBUF, Buffer (0x10){})
            Concatenate (Arg0, Arg1, GBUF) /* \_SB_.PCI0.HDAS.ACCG.GBUF */
            Return (GBUF) /* \_SB_.PCI0.HDAS.ACCG.GBUF */
        }
    }

    Scope (_SB.PCI0.LPCB)
    {
        Device (FWHD)
        {
            Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
            })
        }

        Device (HPET)
        {
            Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (BUF0, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    _Y45)
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (HPTE)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (HPTE)
                {
                    CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y45._BAS, HPT0)  // _BAS: Base Address
                    HPT0 = HPTB /* \HPTB */
                }

                Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
            }
        }

        Device (IPIC)
        {
            Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0020,             // Range Minimum
                    0x0020,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0024,             // Range Minimum
                    0x0024,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0028,             // Range Minimum
                    0x0028,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x002C,             // Range Minimum
                    0x002C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0030,             // Range Minimum
                    0x0030,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0034,             // Range Minimum
                    0x0034,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0038,             // Range Minimum
                    0x0038,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x003C,             // Range Minimum
                    0x003C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A0,             // Range Minimum
                    0x00A0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A4,             // Range Minimum
                    0x00A4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A8,             // Range Minimum
                    0x00A8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00AC,             // Range Minimum
                    0x00AC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B0,             // Range Minimum
                    0x00B0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B4,             // Range Minimum
                    0x00B4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B8,             // Range Minimum
                    0x00B8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00BC,             // Range Minimum
                    0x00BC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x04D0,             // Range Minimum
                    0x04D0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IRQNoFlags ()
                    {2}
            })
        }

        Device (MATH)
        {
            Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x00F0,             // Range Minimum
                    0x00F0,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQNoFlags ()
                    {13}
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PCHV () == SPTH))
                {
                    Return (0x1F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (LDRC)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x002E,             // Range Minimum
                    0x002E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x004E,             // Range Minimum
                    0x004E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0061,             // Range Minimum
                    0x0061,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0063,             // Range Minimum
                    0x0063,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0065,             // Range Minimum
                    0x0065,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0067,             // Range Minimum
                    0x0067,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0080,             // Range Minimum
                    0x0080,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0092,             // Range Minimum
                    0x0092,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x00B2,             // Range Minimum
                    0x00B2,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0680,             // Range Minimum
                    0x0680,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x1800,             // Range Minimum
                    0x1800,             // Range Maximum
                    0x01,               // Alignment
                    0xFF,               // Length
                    )
                IO (Decode16,
                    0x164E,             // Range Minimum
                    0x164E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
            })
        }

        Device (LDR2)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, "LPC_DEV")  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0800,             // Range Minimum
                    0x0800,             // Range Maximum
                    0x01,               // Alignment
                    0x80,               // Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PCHV () == SPTH))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (RTC)
        {
            Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                IRQNoFlags ()
                    {8}
            })
        }

        Device (TIMR)
        {
            Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0040,             // Range Minimum
                    0x0040,             // Range Maximum
                    0x01,               // Alignment
                    0x04,               // Length
                    )
                IO (Decode16,
                    0x0050,             // Range Minimum
                    0x0050,             // Range Maximum
                    0x10,               // Alignment
                    0x04,               // Length
                    )
                IRQNoFlags ()
                    {0}
            })
        }

        Device (CWDT)
        {
            Name (_HID, EisaId ("INT3F0D") /* ACPI Motherboard Resources */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID
            Name (BUF0, ResourceTemplate ()
            {
                IO (Decode16,
                    0x1854,             // Range Minimum
                    0x1854,             // Range Maximum
                    0x04,               // Alignment
                    0x04,               // Length
                    )
            })
            Method (_STA, 0, Serialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Return (BUF0) /* \_SB_.PCI0.LPCB.CWDT.BUF0 */
            }
        }
    }

    Device (ALSD)
    {
        Name (_HID, "ACPI0008" /* Ambient Light Sensor Device */)  // _HID: Hardware ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((ALSE == 0x02))
            {
                Return (0x0B)
            }

            Return (Zero)
        }

        Method (_ALI, 0, NotSerialized)  // _ALI: Ambient Light Illuminance
        {
            Return (((LHIH << 0x08) | LLOW))
        }

        Name (_ALR, Package (0x05)  // _ALR: Ambient Light Response
        {
            Package (0x02)
            {
                0x46, 
                Zero
            }, 

            Package (0x02)
            {
                0x49, 
                0x0A
            }, 

            Package (0x02)
            {
                0x55, 
                0x50
            }, 

            Package (0x02)
            {
                0x64, 
                0x012C
            }, 

            Package (0x02)
            {
                0x96, 
                0x03E8
            }
        })
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Name (PBST, One)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }
    }

    Scope (_SB.PCI0.LPCB)
    {
        Device (H_EC)
        {
            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ^^^GFX0.CLID = 0x03
                Return (Zero)
            }

            Name (ECAV, Zero)
            Name (B1ST, 0x32)
            Name (B2ST, 0x36)
            Name (CFAN, 0x03)
            Name (CMDR, 0x3A)
            Name (DOCK, 0x30)
            Name (PLMX, One)
            Name (PECH, 0x83)
            Name (PECL, 0x82)
            Name (PENV, 0x44)
            Name (PINV, 0x43)
            Name (PPSH, 0x42)
            Name (PPSL, 0x41)
            Name (PSTP, 0x45)
            Name (RPWR, 0x03)
            Name (LSTE, 0x03)
            Name (VPWR, 0x30)
            Name (WTMS, 0xC4)
            Name (AWT2, 0xC5)
            Name (AWT1, 0xC6)
            Name (AWT0, 0xC7)
            Name (DLED, 0x78)
            Name (SPT2, 0xC8)
            Name (PB10, 0x78)
            Name (IWCW, 0xA0)
            Name (IWCR, 0xA0)
            Name (PVOL, 0xE8)
            Name (PWRT, 0x79)
            Method (ECRD, 1, Serialized)
            {
                Local0 = DerefOf (Arg0)
                Switch (ToInteger (Local0))
                {
                    Case (0x32)
                    {
                        Return (Zero)
                    }
                    Case (0x36)
                    {
                        Return (Zero)
                    }
                    Case (0x03)
                    {
                        Return (Zero)
                    }
                    Case (0x3A)
                    {
                        Return (Zero)
                    }
                    Case (0x30)
                    {
                        Return (Zero)
                    }
                    Case (One)
                    {
                        Return (Zero)
                    }
                    Case (0x83)
                    {
                        Return (Zero)
                    }
                    Case (0x82)
                    {
                        Return (Zero)
                    }
                    Case (0x44)
                    {
                        Return (Zero)
                    }
                    Case (0x43)
                    {
                        Return (Zero)
                    }
                    Case (0x42)
                    {
                        Return (Zero)
                    }
                    Case (0x41)
                    {
                        Return (Zero)
                    }
                    Case (0x45)
                    {
                        Return (Zero)
                    }
                    Case (0x03)
                    {
                        Return (Zero)
                    }
                    Case (0x03)
                    {
                        Return (Zero)
                    }
                    Case (0x30)
                    {
                        Return (Zero)
                    }
                    Case (0xC4)
                    {
                        Return (Zero)
                    }
                    Case (0xC5)
                    {
                        Return (Zero)
                    }
                    Case (0xC6)
                    {
                        Return (Zero)
                    }
                    Case (0xC7)
                    {
                        Return (Zero)
                    }
                    Case (0x78)
                    {
                        Return (Zero)
                    }
                    Case (0xC8)
                    {
                        Return (Zero)
                    }
                    Case (0x78)
                    {
                        Return (Zero)
                    }
                    Case (0xA0)
                    {
                        Return (Zero)
                    }
                    Case (0xA0)
                    {
                        Return (Zero)
                    }
                    Case (0xE8)
                    {
                        Return (Zero)
                    }
                    Case (0x79)
                    {
                        Return (Zero)
                    }

                }

                Return (Zero)
            }

            Method (ECWT, 2, Serialized)
            {
                Local0 = DerefOf (Arg0)
                Switch (ToInteger (Local0))
                {
                    Case (0x32)
                    {
                    }
                    Case (0x36)
                    {
                    }
                    Case (0x03)
                    {
                    }
                    Case (0x3A)
                    {
                    }
                    Case (0x30)
                    {
                    }
                    Case (One)
                    {
                    }
                    Case (0x83)
                    {
                    }
                    Case (0x82)
                    {
                    }
                    Case (0x44)
                    {
                    }
                    Case (0x43)
                    {
                    }
                    Case (0x42)
                    {
                    }
                    Case (0x41)
                    {
                    }
                    Case (0x45)
                    {
                    }
                    Case (0x03)
                    {
                    }
                    Case (0x03)
                    {
                    }
                    Case (0x30)
                    {
                    }
                    Case (0xC4)
                    {
                    }
                    Case (0xC5)
                    {
                    }
                    Case (0xC6)
                    {
                    }
                    Case (0xC7)
                    {
                    }
                    Case (0x78)
                    {
                    }
                    Case (0xC8)
                    {
                    }
                    Case (0x78)
                    {
                    }
                    Case (0xA0)
                    {
                    }
                    Case (0xA0)
                    {
                    }
                    Case (0xE8)
                    {
                    }
                    Case (0x79)
                    {
                    }

                }
            }

            Method (ECMD, 1, Serialized)
            {
            }

            Method (ECNT, 1, Serialized)
            {
            }

            Device (BAT0)
            {
                Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                Name (_UID, Zero)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (Zero)
                }
            }

            Device (BAT1)
            {
                Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                Name (_UID, One)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (Zero)
                }

                Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                {
                    Return (BST1 ())
                }
            }

            Device (BAT2)
            {
                Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                Name (_UID, 0x02)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (Zero)
                }

                Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                {
                    Return (BST2 ())
                }
            }
        }
    }

    Scope (\)
    {
        Field (GNVS, AnyAcc, Lock, Preserve)
        {
            Offset (0x20), 
            B1SC,   8, 
            Offset (0x23), 
            B1SS,   8
        }
    }

    Scope (\)
    {
        Field (GNVS, AnyAcc, Lock, Preserve)
        {
            Offset (0x21), 
            B2SC,   8, 
            Offset (0x24), 
            B2SS,   8
        }
    }

    Device (_SB.PCI0.DOCK)
    {
        Name (_HID, "ABCD0000")  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0C15") /* Docking Station */)  // _CID: Compatible ID
        Name (_UID, 0x02)  // _UID: Unique ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            Return (Zero)
        }
    }

    Scope (_SB)
    {
        Method (PWPR, 0, Serialized)
        {
        }

        Method (PWRR, 0, Serialized)
        {
        }

        Device (LID0)
        {
            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Return (One)
            }
        }
    }

    Scope (_SB.PCI0.LPCB.H_EC)
    {
        Method (BST1, 0, NotSerialized)
        {
            Name (PKG1, Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })
            Return (PKG1) /* \_SB_.PCI0.LPCB.H_EC.BST1.PKG1 */
        }

        Method (BST2, 0, NotSerialized)
        {
            Name (PKG2, Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })
            Return (PKG2) /* \_SB_.PCI0.LPCB.H_EC.BST2.PKG2 */
        }
    }

    OperationRegion (ABNV, SystemMemory, 0xFFFF0000, 0xAA55)
    Field (ABNV, AnyAcc, Lock, Preserve)
    {
        ABMA,   64, 
        ABMS,   8, 
        ABIA,   16, 
        ABIL,   16, 
        ABRA,   32, 
        ABRS,   16
    }

    Device (_SB.TPM)
    {
        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {
            If (TCMF)
            {
                Return (0x01022369)
            }
            ElseIf ((TTDP == Zero))
            {
                Return (0x310CD041)
            }
            Else
            {
                Return ("MSFT0101")
            }
        }

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {
            If ((TTDP == Zero))
            {
                Return (Unicode ("TPM 1.2 Device"))
            }
            Else
            {
                Return (Unicode ("TPM 2.0 Device"))
            }
        }

        Name (_UID, One)  // _UID: Unique ID
        Name (CRST, ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0x00000000,         // Address Base
                0x00001000,         // Address Length
                _Y46)
            Memory32Fixed (ReadOnly,
                0xFED70000,         // Address Base
                0x00001000,         // Address Length
                _Y47)
        })
        Name (CRSD, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y48)
        })
        Name (CRSI, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y49)
        })
        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {
            If ((AMDT == One))
            {
                CreateDWordField (CRST, \_SB.TPM._Y46._BAS, MTFB)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y46._LEN, LTFB)  // _LEN: Length
                MTFB = TPMB /* \TPMB */
                LTFB = 0x1000
                CreateDWordField (CRST, \_SB.TPM._Y47._BAS, MTFC)  // _BAS: Base Address
                CreateDWordField (CRST, \_SB.TPM._Y47._LEN, LTFC)  // _LEN: Length
                MTFC = TPMC /* \TPMC */
                LTFC = 0x1000
                Return (CRST) /* \_SB_.TPM_.CRST */
            }
            Else
            {
                If ((DTPT == One))
                {
                    CreateDWordField (CRSD, \_SB.TPM._Y48._BAS, MTFE)  // _BAS: Base Address
                    CreateDWordField (CRSD, \_SB.TPM._Y48._LEN, LTFE)  // _LEN: Length
                    MTFE = 0xFED40000
                    LTFE = 0x0880
                    Return (CRSD) /* \_SB_.TPM_.CRSD */
                }
                ElseIf ((TTPF == One))
                {
                    CreateDWordField (CRSI, \_SB.TPM._Y49._BAS, MTFD)  // _BAS: Base Address
                    CreateDWordField (CRSI, \_SB.TPM._Y49._LEN, LTFD)  // _LEN: Length
                    MTFD = 0xFED40000
                    LTFD = 0x5000
                    Return (CRSI) /* \_SB_.TPM_.CRSI */
                }
                ElseIf ((TTPF == Zero))
                {
                    CreateDWordField (CRSI, \_SB.TPM._Y49._BAS, MTFF)  // _BAS: Base Address
                    MTFF = TPMM /* \TPMM */
                    Return (CRSI) /* \_SB_.TPM_.CRSI */
                }

                MTFE = Zero
                LTFE = Zero
                Return (CRSI) /* \_SB_.TPM_.CRSI */
            }

            Return (CRSI) /* \_SB_.TPM_.CRSI */
        }

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)
        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            Offset (0x04), 
            LCST,   32, 
            Offset (0x40), 
            CREQ,   32, 
            CSTS,   32, 
            Offset (0x4C), 
            SCMD,   32
        }

        OperationRegion (CRBD, SystemMemory, TPMM, 0x48)
        Field (CRBD, AnyAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            HERR,   32, 
            Offset (0x40), 
            HCMD,   32, 
            HSTS,   32
        }

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If ((TTDP == Zero))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
            ElseIf ((TTDP == One))
            {
                If (TPMF)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Return (Zero)
        }

        Method (STRT, 3, Serialized)
        {
            OperationRegion (TPMR, SystemMemory, FTPM, 0x1000)
            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }

            Name (TIMR, Zero)
            If ((ToInteger (Arg0) != Zero)){}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    TIMR = Zero
                    If ((AMDT == One))
                    {
                        While (((BEGN == One) && (TIMR < 0x0200)))
                        {
                            If ((BEGN == One))
                            {
                                Sleep (One)
                                TIMR++
                            }
                        }
                    }
                    ElseIf ((((HSTS & 0x02) | (HSTS & One)
                        ) == 0x03))
                    {
                        HCMD = One
                    }
                    Else
                    {
                        FERR = One
                        BEGN = Zero
                    }

                    Return (Zero)
                }

            }

            Return (One)
        }

        Method (CRYF, 3, Serialized)
        {
            If ((ToInteger (Arg0) != One)){}
            Switch (ToInteger (Arg1))
            {
                Case (Zero)
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                Case (One)
                {
                    Name (TPMV, Package (0x02)
                    {
                        One, 
                        Package (0x02)
                        {
                            One, 
                            0x20
                        }
                    })
                    If ((_STA () == Zero))
                    {
                        Return (Package (0x01)
                        {
                            Zero
                        })
                    }

                    Return (TPMV) /* \_SB_.TPM_.CRYF.TPMV */
                }

            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (_SB.TPM)
    {
        OperationRegion (TSMI, SystemIO, SMIA, 0x02)
        Field (TSMI, WordAcc, NoLock, Preserve)
        {
            SMI,    16
        }

        OperationRegion (ATNV, SystemMemory, PPIM, PPIL)
        Field (ATNV, AnyAcc, NoLock, Preserve)
        {
            RQST,   32, 
            RCNT,   32, 
            ERRO,   32, 
            FLAG,   32, 
            MISC,   32, 
            OPTN,   32, 
            SRSP,   32
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        If ((PPIV == Zero))
                        {
                            Return ("1.2")
                        }
                        Else
                        {
                            Return ("1.3")
                        }
                    }
                    Case (0x02)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        SRSP = Zero
                        FLAG = 0x02
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x03)
                    {
                        Name (PPI1, Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        PPI1 [One] = RQST /* \_SB_.TPM_.RQST */
                        Return (PPI1) /* \_SB_.TPM_._DSM.PPI1 */
                    }
                    Case (0x04)
                    {
                        Return (TRST) /* \TRST */
                    }
                    Case (0x05)
                    {
                        Name (PPI2, Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        SRSP = Zero
                        FLAG = 0x05
                        SMI = OFST /* \OFST */
                        PPI2 [One] = RCNT /* \_SB_.TPM_.RCNT */
                        PPI2 [0x02] = ERRO /* \_SB_.TPM_.ERRO */
                        Return (PPI2) /* \_SB_.TPM_._DSM.PPI2 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x07
                        OPTN = Zero
                        If ((RQST == 0x17))
                        {
                            ToInteger (DerefOf (Arg3 [One]), OPTN) /* \_SB_.TPM_.OPTN */
                        }

                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Case (0x08)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x08
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }
            ElseIf ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        RQST = DerefOf (Arg3 [Zero])
                        FLAG = 0x09
                        TMF1 = OFST /* \OFST */
                        SRSP = Zero
                        SMI = TMF1 /* \TMF1 */
                        Return (SRSP) /* \_SB_.TPM_.SRSP */
                    }
                    Default
                    {
                    }

                }
            }

            If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
            {
                Return (CRYF (Arg1, Arg2, Arg3))
            }

            If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4") /* Unknown UUID */))
            {
                Return (STRT (Arg1, Arg2, Arg3))
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Method (TPTS, 1, Serialized)
        {
            Switch (ToInteger (Arg0))
            {
                Case (0x04)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }
                Case (0x05)
                {
                    RQST = Zero
                    FLAG = 0x09
                    SRSP = Zero
                    SMI = OFST /* \OFST */
                }

            }
        }
    }

    Device (VIRD)
    {
        Name (_HID, "LBAI0100")  // _HID: Hardware ID
        Name (_UID, One)  // _UID: Unique ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If (VDFG)
            {
                Return (0x0F)
            }

            Return (Zero)
        }
    }

    OperationRegion (DFB2, SystemIO, B2PV, One)
    Field (DFB2, ByteAcc, NoLock, Preserve)
    {
        DFAP,   8
    }

    Method (DFOR, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            DFAP = DFAV /* \DFAV */
        }
    }

    Method (RPOP, 1, NotSerialized)
    {
        If ((Arg0 == 0x05))
        {
            SMIR = WVAL /* \WVAL */
        }
    }

    OperationRegion (APMP, SystemIO, IOB2, One)
    Field (APMP, ByteAcc, NoLock, Preserve)
    {
        SMIR,   8
    }

    Device (WMI1)
    {
        Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
        Name (_UID, One)  // _UID: Unique ID
        Name (WMIO, 0xD2A8E018)
        OperationRegion (SMI1, SystemIO, LSMB, 0x04)
        Field (SMI1, DWordAcc, NoLock, Preserve)
        {
            APM2,   32
        }

        OperationRegion (WMIN, SystemMemory, WMIO, 0x0A)
        Field (WMIN, AnyAcc, NoLock, Preserve)
        {
            CMD7,   8, 
            STUS,   8, 
            DATA,   64
        }

        OperationRegion (CMOS, SystemIO, 0x70, 0x02)
        Field (CMOS, ByteAcc, NoLock, Preserve)
        {
            CMSX,   8, 
            CMSD,   8
        }

        Method (CMSW, 2, NotSerialized)
        {
            CMSX = Arg0
            CMSD = Arg1
        }

        OperationRegion (IO80, SystemIO, 0x80, One)
        Field (IO80, ByteAcc, NoLock, Preserve)
        {
            DBGP,   8
        }

        OperationRegion (SMI0, SystemIO, LSMB, One)
        Field (SMI0, ByteAcc, NoLock, Preserve)
        {
            APMC,   8
        }

        OperationRegion (WMIM, SystemMemory, WMIO, WMSZ)
        Field (WMIM, AnyAcc, NoLock, Preserve)
        {
            CMD,    8, 
            ERR,    32, 
            PAR0,   32, 
            PAR1,   32, 
            PAR2,   32, 
            PAR3,   32
        }

        Field (WMIM, ByteAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            WITM,   8, 
            WSEL,   8, 
            WENC,   8, 
            WKBD,   8, 
            WPTY,   8, 
            OPTY,   8, 
            UMTY,   8, 
            WPAS,   1032, 
            WPNW,   1032, 
            WPAP,   1032, 
            BTST,   1032, 
            UMOP,   1032, 
            UMNP,   1032, 
            WSPM,   8, 
            WSPS,   8, 
            WSMN,   8, 
            WSMX,   8, 
            WSEN,   8, 
            WSKB,   8, 
            HDP0,   8, 
            HDP1,   8, 
            HDP2,   8, 
            HDP3,   8, 
            HDP4,   8, 
            HDP5,   8, 
            HDP6,   8, 
            HDP7,   8, 
            HDP8,   8, 
            HDP9,   8, 
            BSTL,   1032, 
            BID,    8, 
            RTC0,   8, 
            RTC1,   8, 
            RTC2,   8, 
            RTC3,   8, 
            RTC4,   8, 
            RTC5,   8, 
            RTC6,   8, 
            RTC7,   8, 
            RTC8,   8, 
            TMCG,   8, 
            DTCG,   8, 
            UMCG,   8
        }

        Mutex (MSMI, 0x07)
        Mutex (RSMI, 0x07)
        Method (SMIK, 0, NotSerialized)
        {
            Acquire (RSMI, 0xFFFF)
            APM2 = 0x534D01EF
            Release (RSMI)
        }

        Method (SMI, 5, NotSerialized)
        {
            Acquire (MSMI, 0xFFFF)
            CMD = Arg0
            PAR0 = Arg1
            PAR1 = Arg2
            PAR2 = Arg3
            PAR3 = Arg4
            APMC = 0x2F
            While ((ERR == One))
            {
                Sleep (0x64)
                APMC = 0x2F
            }

            Local0 = PAR0 /* \WMI1.PAR0 */
            Release (MSMI)
            Return (Local0)
        }

        Method (WMIS, 2, NotSerialized)
        {
            Return (SMI (0x10, Arg0, Arg1, Zero, Zero))
        }

        Method (PMON, 3, NotSerialized)
        {
            Return (SMI (0x11, Arg1, Arg2, Zero, Zero))
        }

        Name (_WDG, Buffer (0xF0)
        {
            /* 0000 */  0x0E, 0x23, 0xF5, 0x51, 0x77, 0x96, 0xCD, 0x46,  // .#.Qw..F
            /* 0008 */  0xA1, 0xCF, 0xC0, 0xB2, 0x3E, 0xE3, 0x4D, 0xB7,  // ....>.M.
            /* 0010 */  0x41, 0x30, 0xFF, 0x05, 0x76, 0x37, 0xA0, 0xC3,  // A0..v7..
            /* 0018 */  0xAC, 0x51, 0xAA, 0x49, 0xAD, 0x0F, 0xF2, 0xF7,  // .Q.I....
            /* 0020 */  0xD6, 0x2C, 0x3F, 0x3C, 0x41, 0x44, 0x06, 0x05,  // .,?<AD..
            /* 0028 */  0x64, 0x9A, 0x47, 0x98, 0xF5, 0x33, 0x33, 0x4E,  // d.G..33N
            /* 0030 */  0xA7, 0x07, 0x8E, 0x25, 0x1E, 0xBB, 0xC3, 0xA1,  // ...%....
            /* 0038 */  0x41, 0x31, 0x01, 0x06, 0xEF, 0x54, 0x4B, 0x6A,  // A1...TKj
            /* 0040 */  0xED, 0xA5, 0x33, 0x4D, 0x94, 0x55, 0xB0, 0xD9,  // ..3M.U..
            /* 0048 */  0xB4, 0x8D, 0xF4, 0xB3, 0x41, 0x32, 0x01, 0x06,  // ....A2..
            /* 0050 */  0xB6, 0xEB, 0xF1, 0x74, 0x7A, 0x92, 0x7D, 0x4C,  // ...tz.}L
            /* 0058 */  0x95, 0xDF, 0x69, 0x8E, 0x21, 0xE8, 0x0E, 0xB5,  // ..i.!...
            /* 0060 */  0x41, 0x33, 0x01, 0x06, 0xFF, 0x04, 0xEF, 0x7E,  // A3.....~
            /* 0068 */  0x28, 0x43, 0x7C, 0x44, 0xB5, 0xBB, 0xD4, 0x49,  // (C|D...I
            /* 0070 */  0x92, 0x5D, 0x53, 0x8D, 0x41, 0x34, 0x01, 0x06,  // .]S.A4..
            /* 0078 */  0x9E, 0x15, 0xDB, 0x8A, 0x32, 0x1E, 0x5C, 0x45,  // ....2.\E
            /* 0080 */  0xBC, 0x93, 0x30, 0x8A, 0x7E, 0xD9, 0x82, 0x46,  // ..0.~..F
            /* 0088 */  0x41, 0x35, 0x01, 0x01, 0xFD, 0xD9, 0x51, 0x26,  // A5....Q&
            /* 0090 */  0x1C, 0x91, 0x69, 0x4B, 0xB9, 0x4E, 0xD0, 0xDE,  // ..iK.N..
            /* 0098 */  0xD5, 0x96, 0x3B, 0xD7, 0x41, 0x36, 0x01, 0x06,  // ..;.A6..
            /* 00A0 */  0x2C, 0xEF, 0xDD, 0xDF, 0xD4, 0x57, 0xCE, 0x48,  // ,....W.H
            /* 00A8 */  0xB1, 0x96, 0x0F, 0xB7, 0x87, 0xD9, 0x08, 0x36,  // .......6
            /* 00B0 */  0x41, 0x37, 0x01, 0x06, 0xF8, 0x44, 0xAE, 0x7B,  // A7...D.{
            /* 00B8 */  0x53, 0x38, 0x2B, 0x4D, 0xB9, 0x8B, 0xF8, 0x40,  // S8+M...@
            /* 00C0 */  0xD7, 0xAC, 0x26, 0xB6, 0x43, 0x30, 0x01, 0x01,  // ..&.C0..
            /* 00C8 */  0xF8, 0x44, 0xAE, 0x8B, 0x53, 0x38, 0x2B, 0x4D,  // .D..S8+M
            /* 00D0 */  0xB9, 0x8B, 0xF8, 0x40, 0xD7, 0xAC, 0x26, 0xB6,  // ...@..&.
            /* 00D8 */  0x43, 0x31, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // C1..!...
            /* 00E0 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
            /* 00E8 */  0xC9, 0x06, 0x29, 0x10, 0x43, 0x41, 0x01, 0x00   // ..).CA..
        })
        Name (RETN, Package (0x0B)
        {
            "Success", 
            "Not Supported", 
            "Invalid Parameter", 
            "Access Denied", 
            "System Busy", 
            "Item is show only, inaccessible.", 
            "Allocate Pool Failed", 
            "MFGDone Set but Password not input or error", 
            "Invalid Parameter", 
            "Boot Sequence Total Number Changed", 
            "Invalid Parameter"
        })
        Name (ITEM, Package (0x77)
        {
            Package (0x03)
            {
                0x1D, 
                "Serial Port1 Address", 
                Zero
            }, 

            Package (0x03)
            {
                0x28, 
                "Serial Port2 Address", 
                One
            }, 

            Package (0x03)
            {
                0x1E, 
                "Parallel Port Address", 
                0x02
            }, 

            Package (0x03)
            {
                0x1F, 
                "Parallel Port Mode", 
                0x03
            }, 

            Package (0x03)
            {
                0x20, 
                "EPP Version", 
                0x04
            }, 

            Package (0x03)
            {
                0x21, 
                "ECP Mode DMA Channel", 
                0x05
            }, 

            Package (0x03)
            {
                0x22, 
                "Parallel Port IRQ", 
                0x06
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Support", 
                0x07
            }, 

            Package (0x03)
            {
                One, 
                "USB Legacy Support", 
                0x08
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Virtual KBC Support", 
                0x09
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Enumeration Delay", 
                0x0A
            }, 

            Package (0x03)
            {
                Zero, 
                "Front USB Ports", 
                0x0B
            }, 

            Package (0x03)
            {
                Zero, 
                "Rear USB Ports", 
                0x0C
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 1", 
                0x0D
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 2", 
                0x0E
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 3", 
                0x0F
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 4", 
                0x10
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 5", 
                0x11
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 6", 
                0x12
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 7", 
                0x13
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 8", 
                0x14
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 9", 
                0x15
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 10", 
                0x16
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 11", 
                0x17
            }, 

            Package (0x03)
            {
                Zero, 
                "USB Port 12", 
                0x18
            }, 

            Package (0x03)
            {
                Zero, 
                "Cable USB", 
                0x18
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Controller", 
                0x19
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Drive 1", 
                0x1A
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Drive 2", 
                0x1B
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Drive 3", 
                0x1C
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Drive 4", 
                0x1D
            }, 

            Package (0x03)
            {
                Zero, 
                "SATA Drive 4 Hot-Plug Support", 
                0x1E
            }, 

            Package (0x03)
            {
                0x12, 
                "Configure SATA as", 
                0x1F
            }, 

            Package (0x03)
            {
                0x26, 
                "Configure SATA as ", 
                0x20
            }, 

            Package (0x03)
            {
                0x0B, 
                "Hard Disk Pre-delay", 
                0x21
            }, 

            Package (0x03)
            {
                0x14, 
                "Select Active Video", 
                0x22
            }, 

            Package (0x03)
            {
                0x15, 
                "Pre-Allocated Memory Size", 
                0x23
            }, 

            Package (0x03)
            {
                0x16, 
                "Total Graphics Memory", 
                0x24
            }, 

            Package (0x03)
            {
                Zero, 
                "Multi-Monitor Support", 
                0x25
            }, 

            Package (0x03)
            {
                Zero, 
                "Onboard Audio Controller", 
                0x26
            }, 

            Package (0x03)
            {
                One, 
                "Internal Speaker", 
                0x27
            }, 

            Package (0x03)
            {
                Zero, 
                "Onboard Ethernet Controller", 
                0x28
            }, 

            Package (0x03)
            {
                0x17, 
                "Boot Agent", 
                0x29
            }, 

            Package (0x03)
            {
                Zero, 
                "PXE IPV4 Network Stack", 
                0x2A
            }, 

            Package (0x03)
            {
                Zero, 
                "PXE IPV6 Network Stack", 
                0x2B
            }, 

            Package (0x03)
            {
                Zero, 
                "Wireless LAN", 
                0x2C
            }, 

            Package (0x03)
            {
                0x27, 
                "PCIe 16x Slot Speed", 
                0x2D
            }, 

            Package (0x03)
            {
                0x27, 
                "PCIe 4x Slot Speed", 
                0x2E
            }, 

            Package (0x03)
            {
                0x27, 
                "PCIe 1x Slot 1 Speed", 
                0x2F
            }, 

            Package (0x03)
            {
                Zero, 
                "EIST Support", 
                0x30
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) Hyper-Threading Technology", 
                0x31
            }, 

            Package (0x03)
            {
                One, 
                "Core Multi-Processing", 
                0x32
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) Virtualization Technology", 
                0x33
            }, 

            Package (0x03)
            {
                Zero, 
                "VT-d", 
                0x34
            }, 

            Package (0x03)
            {
                Zero, 
                "TxT", 
                0x35
            }, 

            Package (0x03)
            {
                Zero, 
                "C1E Support", 
                0x36
            }, 

            Package (0x03)
            {
                0x18, 
                "C State Support", 
                0x37
            }, 

            Package (0x03)
            {
                Zero, 
                "Turbo Mode", 
                0x38
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) Manageability Control", 
                0x39
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) Manageability Reset", 
                0x3A
            }, 

            Package (0x03)
            {
                Zero, 
                "Press <Ctrl-P> to Enter MEBx", 
                0x3B
            }, 

            Package (0x03)
            {
                0x19, 
                "Console Type", 
                0x3C
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) Software Guard Extensions", 
                0x3D
            }, 

            Package (0x03)
            {
                Zero, 
                "Intel(R) SIPP Support", 
                0x3E
            }, 

            Package (0x03)
            {
                Zero, 
                "CPU CRID Support", 
                0x3F
            }, 

            Package (0x03)
            {
                Zero, 
                "Chipset CRID Support", 
                0x40
            }, 

            Package (0x03)
            {
                Zero, 
                "Dust Shield Alert", 
                0x41
            }, 

            Package (0x03)
            {
                0x1A, 
                "After Power Loss", 
                0x42
            }, 

            Package (0x03)
            {
                0x29, 
                "Enhanced Power Saving Mode", 
                0x43
            }, 

            Package (0x03)
            {
                Zero, 
                "Smart Power On", 
                0x44
            }, 

            Package (0x03)
            {
                0x1B, 
                "ICE Performance Modes", 
                0x45
            }, 

            Package (0x03)
            {
                Zero, 
                "ICE Thermal Alert", 
                0x46
            }, 

            Package (0x03)
            {
                0x10, 
                "Wake on LAN", 
                0x47
            }, 

            Package (0x03)
            {
                0x10, 
                "Wake from Serial Port Ring", 
                0x48
            }, 

            Package (0x03)
            {
                0x0C, 
                "Wake Up on Alarm", 
                0x49
            }, 

            Package (0x03)
            {
                0x0D, 
                "Startup Sequence", 
                0x4A
            }, 

            Package (0x03)
            {
                0x65, 
                "Alarm Time(HH:MM:SS)", 
                0x4B
            }, 

            Package (0x03)
            {
                0x66, 
                "Alarm Date(MM/DD/YYYY)", 
                0x4C
            }, 

            Package (0x03)
            {
                0x0E, 
                "Alarm Day of Week", 
                0x4D
            }, 

            Package (0x03)
            {
                Zero, 
                "Sunday", 
                0x4E
            }, 

            Package (0x03)
            {
                Zero, 
                "Monday", 
                0x4F
            }, 

            Package (0x03)
            {
                Zero, 
                "Tuesday", 
                0x50
            }, 

            Package (0x03)
            {
                Zero, 
                "Wednesday", 
                0x51
            }, 

            Package (0x03)
            {
                Zero, 
                "Thursday", 
                0x52
            }, 

            Package (0x03)
            {
                Zero, 
                "Friday", 
                0x53
            }, 

            Package (0x03)
            {
                Zero, 
                "Saturday", 
                0x54
            }, 

            Package (0x03)
            {
                0x67, 
                "User Defined Alarm Time", 
                0x55
            }, 

            Package (0x03)
            {
                0x06, 
                "Allow Flashing BIOS to a Previous Version", 
                0x56
            }, 

            Package (0x03)
            {
                0x06, 
                "Require Admin. Pass. when Flashing", 
                0x57
            }, 

            Package (0x03)
            {
                Zero, 
                "Windows UEFI Firmware Update", 
                0x58
            }, 

            Package (0x03)
            {
                0x06, 
                "Require POP on System Boot", 
                0x59
            }, 

            Package (0x03)
            {
                0x06, 
                "Require POP on Restart", 
                0x5A
            }, 

            Package (0x03)
            {
                0x06, 
                "POP Changeable by User", 
                0x5B
            }, 

            Package (0x03)
            {
                0x06, 
                "Require Admin. Pass. For F12 Boot", 
                0x5C
            }, 

            Package (0x03)
            {
                0x25, 
                "Smart USB Protection", 
                0x5D
            }, 

            Package (0x03)
            {
                Zero, 
                "Device Guard", 
                0x5E
            }, 

            Package (0x03)
            {
                Zero, 
                "Credential Guard", 
                0x5F
            }, 

            Package (0x03)
            {
                Zero, 
                "Preboot Authentication", 
                0x60
            }, 

            Package (0x03)
            {
                Zero, 
                "Security Chip", 
                0x61
            }, 

            Package (0x03)
            {
                0x09, 
                "Security Chip ", 
                0x62
            }, 

            Package (0x03)
            {
                Zero, 
                "Physical Presence for Provisioning", 
                0x63
            }, 

            Package (0x03)
            {
                Zero, 
                "Physical Presnce for Clear ", 
                0x64
            }, 

            Package (0x03)
            {
                Zero, 
                "Secure Boot", 
                0x65
            }, 

            Package (0x03)
            {
                Zero, 
                "Network Offline Locker", 
                0x66
            }, 

            Package (0x03)
            {
                Zero, 
                "Chassis Intrusion Detection", 
                0x67
            }, 

            Package (0x03)
            {
                Zero, 
                "Configuration Change Detection", 
                0x68
            }, 

            Package (0x03)
            {
                Zero, 
                "Password Count Exceeded Error", 
                0x69
            }, 

            Package (0x03)
            {
                Zero, 
                "CSM", 
                0x6A
            }, 

            Package (0x03)
            {
                0x11, 
                "Boot Mode", 
                0x6B
            }, 

            Package (0x03)
            {
                0x24, 
                "Boot Priority", 
                0x6C
            }, 

            Package (0x03)
            {
                0x08, 
                "Boot Up Num-Lock Status", 
                0x6D
            }, 

            Package (0x03)
            {
                Zero, 
                "Option Keys Display", 
                0x6E
            }, 

            Package (0x03)
            {
                0x0A, 
                "Option Keys Display Style", 
                0x6F
            }, 

            Package (0x03)
            {
                Zero, 
                "Startup Device Menu Prompt", 
                0x70
            }, 

            Package (0x03)
            {
                Zero, 
                "OS Optimized Defaults", 
                0x71
            }, 

            Package (0x03)
            {
                0x64, 
                "Primary Boot Sequence", 
                0x72
            }, 

            Package (0x03)
            {
                0x64, 
                "Error Boot Sequence", 
                0x73
            }, 

            Package (0x03)
            {
                0x64, 
                "Automatic Boot Sequence", 
                0x74
            }, 

            Package (0x03)
            {
                0x64, 
                "Manufacturing Boot Sequence", 
                0x75
            }
        })
        Name (BTIF, Package (0x06)
        {
            Package (0x03)
            {
                Zero, 
                "BAT0 BatMaker", 
                Zero
            }, 

            Package (0x03)
            {
                Zero, 
                "BAT0 HwId", 
                One
            }, 

            Package (0x03)
            {
                Zero, 
                "BAT0 MfgDate", 
                0x02
            }, 

            Package (0x03)
            {
                Zero, 
                "BAT1 BatMaker", 
                0x03
            }, 

            Package (0x03)
            {
                Zero, 
                "BAT1 HwId", 
                0x04
            }, 

            Package (0x03)
            {
                Zero, 
                "BAT1 MfgDate", 
                0x05
            }
        })
        Name (VSEL, Package (0x2A)
        {
            Package (0x02)
            {
                "Disabled", 
                "Enabled"
            }, 

            Package (0x02)
            {
                "Enabled", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "", 
                "Enabled", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "Enabled", 
                "Disabled", 
                "Auto"
            }, 

            Package (0x04)
            {
                "Disabled", 
                "Enabled", 
                "", 
                "Auto"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Enabled", 
                "Registered"
            }, 

            Package (0x02)
            {
                "No", 
                "Yes"
            }, 

            Package (0x06)
            {
                "No", 
                "", 
                "", 
                "", 
                "", 
                "Yes"
            }, 

            Package (0x02)
            {
                "Off", 
                "On"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Active", 
                "Inactive"
            }, 

            Package (0x02)
            {
                "Normal", 
                "Legacy"
            }, 

            Package (0x1F)
            {
                "Disabled", 
                "", 
                "", 
                "3 Seconds", 
                "", 
                "", 
                "6 Seconds", 
                "", 
                "", 
                "9 Seconds", 
                "", 
                "", 
                "12 Seconds", 
                "", 
                "", 
                "15 Seconds", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "21 Seconds", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "30 Seconds"
            }, 

            Package (0x05)
            {
                "Single Event", 
                "Daily Event", 
                "Weekly Event", 
                "Disabled", 
                "User Defined"
            }, 

            Package (0x02)
            {
                "Primary", 
                "Automatic"
            }, 

            Package (0x07)
            {
                "Sunday", 
                "Monday", 
                "Tuesday", 
                "Wednesday", 
                "Thursday", 
                "Friday", 
                "Saturday"
            }, 

            Package (0x04)
            {
                "Legacy Style", 
                "MTM&SN-1", 
                "MTM&SN-2", 
                "1S-MTM-SN"
            }, 

            Package (0x03)
            {
                "Primary", 
                "Automatic", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "Auto", 
                "UEFI Only", 
                "Legacy Only"
            }, 

            Package (0x02)
            {
                "AHCI", 
                "Intel(R) RST with Intel(R) Optane"
            }, 

            Package (0x07)
            {
                "", 
                "3F8/IRQ4", 
                "2F8/IRQ3", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "", 
                "Disabled"
            }, 

            Package (0x04)
            {
                "IGD", 
                "PEG", 
                "", 
                "Auto"
            }, 

            Package (0x07)
            {
                "", 
                "32MB", 
                "64MB", 
                "128MB", 
                "256MB", 
                "512MB", 
                "1024MB"
            }, 

            Package (0x04)
            {
                "", 
                "128MB", 
                "256MB", 
                "Maximum"
            }, 

            Package (0x03)
            {
                "", 
                "Disabled", 
                "PXE"
            }, 

            Package (0x07)
            {
                "C1", 
                "", 
                "C1C3", 
                "C1C3C6", 
                "", 
                "C1C3C6C7", 
                "C1C3C6C7C8"
            }, 

            Package (0x07)
            {
                "VT100", 
                "VT100-8bit", 
                "PC-ANSI-7bit", 
                "PC-ANSI", 
                "VT100+", 
                "VT-UTF8", 
                "ASCII"
            }, 

            Package (0x03)
            {
                "Power On", 
                "Power Off", 
                "Last State"
            }, 

            Package (0x03)
            {
                "Better Acoustic Performance", 
                "Better Thermal Performance", 
                "Full Speed"
            }, 

            Package (0x04)
            {
                "Legacy Style", 
                "MTM&SN-1", 
                "MTM&SN-2", 
                "1S-MTM-SN"
            }, 

            Package (0x07)
            {
                "", 
                "3F8/IRQ4", 
                "", 
                "2F8/IRQ3", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "Disabled"
            }, 

            Package (0x07)
            {
                "378", 
                "278", 
                "", 
                "", 
                "", 
                "", 
                "Disabled"
            }, 

            Package (0x04)
            {
                "", 
                "EPP", 
                "ECP", 
                "ECP+EPP"
            }, 

            Package (0x02)
            {
                "1.9", 
                "1.7"
            }, 

            Package (0x02)
            {
                "DMA1", 
                "DMA3"
            }, 

            Package (0x02)
            {
                "IRQ5", 
                "IRQ7"
            }, 

            Package (0x09)
            {
                "Immediately", 
                "1 minute", 
                "2 minutes", 
                "5 minutes", 
                "10 minutes", 
                "15 minutes", 
                "30 minutes", 
                "1 hour", 
                "2 hours"
            }, 

            Package (0x02)
            {
                "UEFI First", 
                "Legacy First"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Read Only", 
                "No Access"
            }, 

            Package (0x03)
            {
                "AHCI", 
                "RAID", 
                "Intel(R) RST with Intel(R) Optane"
            }, 

            Package (0x04)
            {
                "Auto", 
                "Gen1", 
                "Gen2", 
                "Gen3"
            }, 

            Package (0x07)
            {
                "", 
                "2F8/IRQ3", 
                "3F8/IRQ4", 
                "", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "Disabled"
            }, 

            Package (0x05)
            {
                "Disabled", 
                "", 
                "", 
                "", 
                "Enabled"
            }
        })
        Name (VSLF, Package (0x2A)
        {
            Package (0x02)
            {
                "Disabled", 
                "Enabled"
            }, 

            Package (0x02)
            {
                "Enabled", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "", 
                "Enabled", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "Enabled", 
                "Disabled", 
                "Auto"
            }, 

            Package (0x04)
            {
                "Disabled", 
                "Enabled", 
                "", 
                "Auto"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Enabled", 
                "Registered"
            }, 

            Package (0x02)
            {
                "No", 
                "Yes"
            }, 

            Package (0x06)
            {
                "No", 
                "", 
                "", 
                "", 
                "", 
                "Yes"
            }, 

            Package (0x02)
            {
                "Off", 
                "On"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Active", 
                "Inactive"
            }, 

            Package (0x02)
            {
                "Normal", 
                "Legacy"
            }, 

            Package (0x1F)
            {
                "Disabled", 
                "", 
                "", 
                "3 Seconds", 
                "", 
                "", 
                "6 Seconds", 
                "", 
                "", 
                "9 Seconds", 
                "", 
                "", 
                "12 Seconds", 
                "", 
                "", 
                "15 Seconds", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "21 Seconds", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "30 Seconds"
            }, 

            Package (0x05)
            {
                "Single Event", 
                "Daily Event", 
                "Weekly Event", 
                "Disabled", 
                "User Defined"
            }, 

            Package (0x02)
            {
                "Primary", 
                "Automatic"
            }, 

            Package (0x07)
            {
                "Sunday", 
                "Monday", 
                "Tuesday", 
                "Wednesday", 
                "Thursday", 
                "Friday", 
                "Saturday"
            }, 

            Package (0x04)
            {
                "Legacy Style", 
                "MTM&SN-1", 
                "MTM&SN-2", 
                "1S-MTM-SN"
            }, 

            Package (0x03)
            {
                "Primary", 
                "Automatic", 
                "Disabled"
            }, 

            Package (0x03)
            {
                "Auto", 
                "UEFI Only", 
                "Legacy Only"
            }, 

            Package (0x02)
            {
                "AHCI", 
                "Intel(R) RST with Intel(R) Optane"
            }, 

            Package (0x07)
            {
                "", 
                "3F8/IRQ4", 
                "2F8/IRQ3", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "", 
                "Disabled"
            }, 

            Package (0x04)
            {
                "IGD", 
                "", 
                "", 
                "Auto"
            }, 

            Package (0x07)
            {
                "", 
                "32MB", 
                "64MB", 
                "128MB", 
                "256MB", 
                "512MB", 
                "1024MB"
            }, 

            Package (0x04)
            {
                "", 
                "128MB", 
                "256MB", 
                "Maximum"
            }, 

            Package (0x03)
            {
                "", 
                "Disabled", 
                "PXE"
            }, 

            Package (0x07)
            {
                "C1", 
                "", 
                "C1C3", 
                "C1C3C6", 
                "", 
                "C1C3C6C7", 
                "C1C3C6C7C8"
            }, 

            Package (0x07)
            {
                "VT100", 
                "VT100-8bit", 
                "PC-ANSI-7bit", 
                "PC-ANSI", 
                "VT100+", 
                "VT-UTF8", 
                "ASCII"
            }, 

            Package (0x03)
            {
                "Power On", 
                "Power Off", 
                "Last State"
            }, 

            Package (0x03)
            {
                "Better Acoustic Performance", 
                "Better Thermal Performance", 
                "Full Speed"
            }, 

            Package (0x04)
            {
                "Legacy Style", 
                "MTM&SN-1", 
                "MTM&SN-2", 
                "1S-MTM-SN"
            }, 

            Package (0x07)
            {
                "", 
                "3F8/IRQ4", 
                "", 
                "2F8/IRQ3", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "Disabled"
            }, 

            Package (0x07)
            {
                "378", 
                "278", 
                "3BC", 
                "", 
                "", 
                "", 
                "Disabled"
            }, 

            Package (0x04)
            {
                "", 
                "EPP", 
                "ECP", 
                "ECP+EPP"
            }, 

            Package (0x02)
            {
                "1.9", 
                "1.7"
            }, 

            Package (0x02)
            {
                "DMA1", 
                "DMA3"
            }, 

            Package (0x02)
            {
                "IRQ5", 
                "IRQ7"
            }, 

            Package (0x09)
            {
                "Immediately", 
                "1 minute", 
                "2 minutes", 
                "5 minutes", 
                "10 minutes", 
                "15 minutes", 
                "30 minutes", 
                "1 hour", 
                "2 hours"
            }, 

            Package (0x02)
            {
                "UEFI First", 
                "Legacy First"
            }, 

            Package (0x03)
            {
                "Disabled", 
                "Read Only", 
                "No Access"
            }, 

            Package (0x03)
            {
                "AHCI", 
                "RAID", 
                "Intel(R) RST with Intel(R) Optane"
            }, 

            Package (0x04)
            {
                "Auto", 
                "Gen1", 
                "Gen2", 
                "Gen3"
            }, 

            Package (0x07)
            {
                "", 
                "2F8/IRQ3", 
                "3F8/IRQ4", 
                "", 
                "3E8/IRQ4", 
                "2E8/IRQ3", 
                "Disabled"
            }, 

            Package (0x05)
            {
                "Disabled", 
                "", 
                "", 
                "", 
                "Enabled"
            }
        })
        Name (VLST, Package (0x60)
        {
            "Excluded from boot order", 
            "DISKETTE", 
            "HDD", 
            "CDROM", 
            "PCMCIA", 
            "USB", 
            "NETWORK", 
            "HDD LOCKED", 
            "USB FLOPPY", 
            "Other Device", 
            "LEGACY BOOT", 
            "OTHERS", 
            "VLST Type 0C", 
            "VLST Type 0D", 
            "VLST Type 0E", 
            "VLST Type 0F", 
            "USB KEY", 
            "USB FDD", 
            "USB HDD", 
            "USB CDROM", 
            "VLST Type 14", 
            "VLST Type 15", 
            "VLST Type 16", 
            "VLST Type 17", 
            "VLST Type 18", 
            "VLST Type 19", 
            "VLST Type 1A", 
            "VLST Type 1B", 
            "VLST Type 1C", 
            "VLST Type 1D", 
            "VLST Type 1E", 
            "VLST Type 1F", 
            "Network 1", 
            "Network 2", 
            "Network 3", 
            "Network 4", 
            "Network 5", 
            "Network 6", 
            "Network 7", 
            "Network 8", 
            "Network 9", 
            "Network 10", 
            "Network 11", 
            "Network 12", 
            "Network 13", 
            "Network 14", 
            "Network 15", 
            "Network 16", 
            "SATA 0", 
            "SATA 1", 
            "SATA 2", 
            "SATA 3", 
            "SATA 4", 
            "M.2 SATA Device", 
            "SATA 6", 
            "SATA 7", 
            "SATA 8", 
            "SATA 9", 
            "SATA 10", 
            "SATA 11", 
            "SATA 12", 
            "SATA 13", 
            "SATA 14", 
            "SATA 15", 
            "PCIE SLOT 0", 
            "M.2 Drive 1", 
            "M.2 Drive 2", 
            "PCIe Drive 1", 
            "PCIE4X_1 Drive", 
            "PCIE16X_1 Drive", 
            "PCIE SLOT 6", 
            "PCIE SLOT 7", 
            "PCIE SLOT 8", 
            "PCIE SLOT 9", 
            "PCIE SLOT 10", 
            "PCIE SLOT 11", 
            "PCIE SLOT 12", 
            "PCIE SLOT 13", 
            "PCIE SLOT 14", 
            "PCIE SLOT 15", 
            "VMD 1", 
            "VMD 2", 
            "VMD 3", 
            "VMD 4", 
            "VMD 5", 
            "VMD 6", 
            "VMD 7", 
            "VMD 8", 
            "VMD 9", 
            "VMD 10", 
            "VMD 11", 
            "VMD 12", 
            "VMD 13", 
            "VMD 14", 
            "VMD 15", 
            "VMD 16"
        })
        Name (VR01, Package (0x5F)
        {
            "2005", 
            "2006", 
            "2007", 
            "2008", 
            "2009", 
            "2010", 
            "2011", 
            "2012", 
            "2013", 
            "2014", 
            "2015", 
            "2016", 
            "2017", 
            "2018", 
            "2019", 
            "2020", 
            "2021", 
            "2022", 
            "2023", 
            "2024", 
            "2025", 
            "2026", 
            "2027", 
            "2028", 
            "2029", 
            "2030", 
            "2031", 
            "2032", 
            "2033", 
            "2034", 
            "2035", 
            "2036", 
            "2037", 
            "2038", 
            "2039", 
            "2040", 
            "2041", 
            "2042", 
            "2043", 
            "2044", 
            "2045", 
            "2046", 
            "2047", 
            "2048", 
            "2049", 
            "2050", 
            "2051", 
            "2052", 
            "2053", 
            "2054", 
            "2055", 
            "2056", 
            "2057", 
            "2058", 
            "2059", 
            "2060", 
            "2061", 
            "2062", 
            "2063", 
            "2064", 
            "2065", 
            "2066", 
            "2067", 
            "2068", 
            "2069", 
            "2070", 
            "2071", 
            "2072", 
            "2073", 
            "2074", 
            "2075", 
            "2076", 
            "2077", 
            "2078", 
            "2079", 
            "2080", 
            "2081", 
            "2082", 
            "2083", 
            "2084", 
            "2085", 
            "2086", 
            "2087", 
            "2088", 
            "2089", 
            "2090", 
            "2091", 
            "2092", 
            "2093", 
            "2094", 
            "2095", 
            "2096", 
            "2097", 
            "2098", 
            "2099"
        })
        Name (VR02, Package (0x0D)
        {
            "00", 
            "01", 
            "02", 
            "03", 
            "04", 
            "05", 
            "06", 
            "07", 
            "08", 
            "09", 
            "10", 
            "11", 
            "12"
        })
        Name (VR03, Package (0x20)
        {
            "00", 
            "01", 
            "02", 
            "03", 
            "04", 
            "05", 
            "06", 
            "07", 
            "08", 
            "09", 
            "10", 
            "11", 
            "12", 
            "13", 
            "14", 
            "15", 
            "16", 
            "17", 
            "18", 
            "19", 
            "20", 
            "21", 
            "22", 
            "23", 
            "24", 
            "25", 
            "26", 
            "27", 
            "28", 
            "29", 
            "30", 
            "31"
        })
        Name (VR04, Package (0x18)
        {
            "00", 
            "01", 
            "02", 
            "03", 
            "04", 
            "05", 
            "06", 
            "07", 
            "08", 
            "09", 
            "10", 
            "11", 
            "12", 
            "13", 
            "14", 
            "15", 
            "16", 
            "17", 
            "18", 
            "19", 
            "20", 
            "21", 
            "22", 
            "23"
        })
        Name (VR05, Package (0x3C)
        {
            "00", 
            "01", 
            "02", 
            "03", 
            "04", 
            "05", 
            "06", 
            "07", 
            "08", 
            "09", 
            "10", 
            "11", 
            "12", 
            "13", 
            "14", 
            "15", 
            "16", 
            "17", 
            "18", 
            "19", 
            "20", 
            "21", 
            "22", 
            "23", 
            "24", 
            "25", 
            "26", 
            "27", 
            "28", 
            "29", 
            "30", 
            "31", 
            "32", 
            "33", 
            "34", 
            "35", 
            "36", 
            "37", 
            "38", 
            "39", 
            "40", 
            "41", 
            "42", 
            "43", 
            "44", 
            "45", 
            "46", 
            "47", 
            "48", 
            "49", 
            "50", 
            "51", 
            "52", 
            "53", 
            "54", 
            "55", 
            "56", 
            "57", 
            "58", 
            "59"
        })
        Name (PENC, Package (0x01)
        {
            "ascii"
        })
        Name (PKBD, Package (0x03)
        {
            "us", 
            "fr", 
            "gr"
        })
        Name (PTYP, Package (0x3E)
        {
            "pap", 
            "pop", 
            "uhdp0", 
            "mhdp0", 
            "uhdp1", 
            "mhdp1", 
            "uhdp2", 
            "mhdp2", 
            "uhdp3", 
            "mhdp3", 
            "uhdp4", 
            "mhdp4", 
            "uhdp5", 
            "mhdp5", 
            "uhdp6", 
            "mhdp6", 
            "uhdp7", 
            "mhdp7", 
            "uhdp8", 
            "mhdp8", 
            "uhdp9", 
            "mhdp9", 
            "uhdp10", 
            "mhdp10", 
            "uhdp11", 
            "mhdp11", 
            "uhdp12", 
            "mhdp12", 
            "uhdp13", 
            "mhdp13", 
            "uhdp14", 
            "mhdp14", 
            "uhdp15", 
            "mhdp15", 
            "uhdp16", 
            "mhdp16", 
            "uhdp17", 
            "mhdp17", 
            "uhdp18", 
            "mhdp18", 
            "uhdp19", 
            "mhdp19", 
            "unvp0", 
            "mnvp0", 
            "unvp1", 
            "mnvp1", 
            "unvp2", 
            "mnvp2", 
            "unvp3", 
            "mnvp3", 
            "unvp4", 
            "mnvp4", 
            "unvp5", 
            "mnvp5", 
            "unvp6", 
            "mnvp6", 
            "unvp7", 
            "mnvp7", 
            "unvp8", 
            "mnvp8", 
            "unvp9", 
            "mnvp9"
        })
        Name (OPCD, Package (0x0C)
        {
            "WmiOpcodePasswordType", 
            "WmiOpcodePasswordCurrent01", 
            "WmiOpcodePasswordCurrent02", 
            "WmiOpcodePasswordCurrent03", 
            "WmiOpcodePasswordCurrent04", 
            "WmiOpcodePasswordNew01", 
            "WmiOpcodePasswordNew02", 
            "WmiOpcodePasswordNew03", 
            "WmiOpcodePasswordNew04", 
            "WmiOpcodePasswordEncode", 
            "WmiOpcodePasswordSetUpdate", 
            "WmiOpcodePasswordAdmin"
        })
        Name (UMTP, Package (0x1E)
        {
            "muhdp0", 
            "muhdp1", 
            "muhdp2", 
            "muhdp3", 
            "muhdp4", 
            "muhdp5", 
            "muhdp6", 
            "muhdp7", 
            "muhdp8", 
            "muhdp9", 
            "muhdp10", 
            "muhdp11", 
            "muhdp12", 
            "muhdp13", 
            "muhdp14", 
            "muhdp15", 
            "muhdp16", 
            "muhdp17", 
            "muhdp18", 
            "muhdp19", 
            "munvp0", 
            "munvp1", 
            "munvp2", 
            "munvp3", 
            "munvp4", 
            "munvp5", 
            "munvp6", 
            "munvp7", 
            "munvp8", 
            "munvp9"
        })
        Mutex (MWMI, 0x07)
        Name (PCFG, Buffer (0x30){})
        Name (IBUF, Buffer (0x0200){})
        Name (ILEN, Zero)
        Name (PSTR, Buffer (0x81){})
        Method (WQA0, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Name (STR2, Buffer (0x32){})
            BSTL = Zero
            Local4 = WMIS (Zero, Arg0)
            If ((Local4 != 0x05))
            {
                If ((Local4 != Zero))
                {
                    Release (MWMI)
                    Return ("")
                }
            }

            Local0 = DerefOf (ITEM [WITM])
            Local1 = DerefOf (Local0 [Zero])
            Local2 = DerefOf (Local0 [One])
            If ((Local1 < 0x64))
            {
                Concatenate (Local2, ",", Local6)
                If ((BID >= 0x30))
                {
                    Local3 = DerefOf (VSLF [Local1])
                }
                Else
                {
                    Local3 = DerefOf (VSEL [Local1])
                }

                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                Concatenate (Local7, ";[Optional:", Local6)
                Local7 = Zero
                Local0 = Zero
                Local5 = SizeOf (Local3)
                While ((Local7 < Local5))
                {
                    STR2 = DerefOf (Local3 [Local7])
                    Local2 = DerefOf (STR2 [Zero])
                    If ((Local2 != Zero))
                    {
                        If ((Local0 != Zero))
                        {
                            Concatenate (Local6, ",", Local1)
                            Local6 = Local1
                        }

                        Concatenate (Local6, DerefOf (Local3 [Local7]), Local1)
                        Local6 = Local1
                        Local0++
                    }

                    Local7++
                }

                Concatenate (Local6, "]", Local7)
                If ((Local4 == 0x05))
                {
                    Concatenate (Local7, "[Status:ShowOnly]", Local6)
                    Local7 = Local6
                }
            }
            ElseIf ((Local1 == 0x64))
            {
                Local4 = Zero
                Name (STR1, Buffer (0x81)
                {
                     0x00                                             // .
                })
                STR1 = BSTL /* \WMI1.BSTL */
                BSTL = Zero
                While ((Local4 < 0x81))
                {
                    Local5 = DerefOf (STR1 [Local4])
                    If ((Local5 == Zero)){}
                    ElseIf ((Local5 == 0xFB))
                    {
                        Concatenate (Local2, ":", Local7)
                        Local2 = Local7
                    }
                    ElseIf ((Local5 == 0xFC))
                    {
                        Concatenate (Local2, ",", Local7)
                        Local2 = Local7
                    }
                    ElseIf ((Local5 == 0xFD))
                    {
                        Concatenate (Local2, ";", Local7)
                        Local2 = Local7
                    }
                    ElseIf ((Local5 == 0xFE))
                    {
                        Concatenate (Local2, "[Excluded from boot order:", Local7)
                        Local2 = Local7
                    }
                    ElseIf ((Local5 == 0xFF))
                    {
                        Concatenate (Local2, "]", Local7)
                        Local2 = Local7
                    }
                    ElseIf ((Local5 < SizeOf (VLST)))
                    {
                        Concatenate (Local2, DerefOf (VLST [Local5]), Local7)
                        Local2 = Local7
                    }

                    Local4++
                }

                Local7 = Local2
            }
            ElseIf ((Local1 == 0x65))
            {
                Local2 = Zero
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Concatenate (Local6, "[", Local7)
                Concatenate (Local7, DerefOf (VR04 [RTC3]), Local6)
                Concatenate (Local6, ":", Local7)
                Concatenate (Local7, DerefOf (VR05 [RTC4]), Local6)
                Concatenate (Local6, ":", Local7)
                Concatenate (Local7, DerefOf (VR05 [RTC5]), Local6)
                Concatenate (Local6, "]", Local7)
                If ((Local4 == 0x05))
                {
                    Concatenate (Local7, "[Status:ShowOnly]", Local6)
                    Local7 = Local6
                }
            }
            ElseIf ((Local1 == 0x66))
            {
                Local2 = Zero
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Concatenate (Local6, "[", Local7)
                Concatenate (Local7, DerefOf (VR02 [RTC1]), Local6)
                Concatenate (Local6, "/", Local7)
                Concatenate (Local7, DerefOf (VR03 [RTC2]), Local6)
                Concatenate (Local6, "/", Local7)
                Concatenate (Local7, DerefOf (VR01 [RTC0]), Local6)
                Concatenate (Local6, "]", Local7)
                If ((Local4 == 0x05))
                {
                    Concatenate (Local7, "[Status:ShowOnly]", Local6)
                    Local7 = Local6
                }
            }
            ElseIf ((Local1 == 0x67))
            {
                Local2 = Zero
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Concatenate (Local6, "[", Local7)
                Concatenate (Local7, DerefOf (VR04 [RTC6]), Local6)
                Concatenate (Local6, ":", Local7)
                Concatenate (Local7, DerefOf (VR05 [RTC7]), Local6)
                Concatenate (Local6, ":", Local7)
                Concatenate (Local7, DerefOf (VR05 [RTC8]), Local6)
                Concatenate (Local6, "]", Local7)
                If ((Local4 == 0x05))
                {
                    Concatenate (Local7, "[Status:ShowOnly]", Local6)
                    Local7 = Local6
                }
            }

            Release (MWMI)
            Return (Local7)
        }

        Method (WQAD, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            BTST = Zero
            Local4 = WMIS (0x07, Arg0)
            If ((Local4 != Zero))
            {
                Release (MWMI)
                Return (DerefOf (RETN [Local4]))
            }

            Local0 = DerefOf (BTIF [WITM])
            Local2 = DerefOf (Local0 [One])
            Concatenate (Local2, ": ", Local6)
            Concatenate (Local6, ToString (BTST, Ones), Local7)
            Release (MWMI)
            Return (Local7)
        }

        Method (WMA1, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = WSET (Arg2)
            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA2, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = CARG (Arg2)
            If ((Local0 == Zero))
            {
                If ((ILEN != Zero))
                {
                    Local0 = CPAS (IBUF, Zero)
                }

                If ((Local0 == Zero))
                {
                    Local0 = WMIS (0x02, Zero)
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA3, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = 0x02
            If ((SizeOf (Arg2) <= 0x0200))
            {
                IBUF = Arg2
                Local0 = CPAS (IBUF, Zero)
            }

            Local0 = WMIS (0x03, Zero)
            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA4, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = WMIS (0x04, Zero)
            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WQA5, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = WMIS (0x05, Zero)
            PCFG [Zero] = WSPM /* \WMI1.WSPM */
            PCFG [0x04] = WSPS /* \WMI1.WSPS */
            PCFG [0x08] = WSMN /* \WMI1.WSMN */
            PCFG [0x0C] = WSMX /* \WMI1.WSMX */
            PCFG [0x10] = WSEN /* \WMI1.WSEN */
            PCFG [0x14] = WSKB /* \WMI1.WSKB */
            PCFG [0x18] = HDP0 /* \WMI1.HDP0 */
            PCFG [0x1C] = HDP1 /* \WMI1.HDP1 */
            PCFG [0x20] = HDP2 /* \WMI1.HDP2 */
            PCFG [0x24] = HDP3 /* \WMI1.HDP3 */
            PCFG [0x28] = HDP4 /* \WMI1.HDP4 */
            PCFG [0x2C] = HDP5 /* \WMI1.HDP5 */
            Release (MWMI)
            Return (PCFG) /* \WMI1.PCFG */
        }

        Method (WMA6, 3, NotSerialized)
        {
            CMSW (0xE0, One)
            Acquire (MWMI, 0xFFFF)
            If ((SizeOf (Arg2) == Zero))
            {
                Local0 = 0x02
            }
            Else
            {
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = SPAS (IBUF)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x06, Zero)
                    }
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA7, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            OPTY = 0xFF
            Local0 = 0x02
            Local5 = SizeOf (Arg2)
            Local5--
            Local7 = Ones
            If ((SizeOf (Arg2) != Zero))
            {
                IBUF = Arg2
                Local6 = GSEL (OPCD, IBUF, Zero)
                If ((Local6 != Ones))
                {
                    Local4 = DerefOf (OPCD [Local6])
                    Local2 = SizeOf (Local4)
                    Local3 = DerefOf (IBUF [Local2])
                    If (((Local3 == 0x2C) || (Local3 == 0x3A)))
                    {
                        Local2++
                    }

                    If ((Local6 == Zero))
                    {
                        Local7 = GSEL (PTYP, IBUF, Local2)
                        If ((Local7 != Ones))
                        {
                            WPTY = Local7
                            Local0 = Zero
                        }
                        Else
                        {
                            Local7 = GSEL (UMTP, IBUF, Local2)
                            If ((Local7 != Ones))
                            {
                                WPTY = 0xFE
                                UMTY = Local7
                                Local0 = Zero
                            }
                        }
                    }
                    ElseIf ((Local6 == One))
                    {
                        Local1 = Zero
                        PSTR = Zero
                        While ((Local2 < Local5))
                        {
                            PSTR [Local1] = DerefOf (IBUF [Local2])
                            Local2++
                            Local1++
                        }

                        WPAS = PSTR /* \WMI1.PSTR */
                        Local0 = Zero
                    }
                    ElseIf ((Local6 == 0x02))
                    {
                        Local1 = Zero
                        PSTR = Zero
                        While ((Local2 < Local5))
                        {
                            PSTR [Local1] = DerefOf (IBUF [Local2])
                            Local2++
                            Local1++
                        }

                        UMOP = PSTR /* \WMI1.PSTR */
                        Local0 = Zero
                    }
                    ElseIf ((Local6 == 0x03)){}
                    ElseIf ((Local6 == 0x04)){}
                    ElseIf ((Local6 == 0x05))
                    {
                        Local1 = Zero
                        PSTR = Zero
                        While ((Local2 < Local5))
                        {
                            PSTR [Local1] = DerefOf (IBUF [Local2])
                            Local2++
                            Local1++
                        }

                        WPNW = PSTR /* \WMI1.PSTR */
                        Local0 = Zero
                    }
                    ElseIf ((Local6 == 0x06))
                    {
                        Local1 = Zero
                        PSTR = Zero
                        While ((Local2 < Local5))
                        {
                            PSTR [Local1] = DerefOf (IBUF [Local2])
                            Local2++
                            Local1++
                        }

                        UMNP = PSTR /* \WMI1.PSTR */
                        Local0 = Zero
                    }
                    ElseIf ((Local6 == 0x07)){}
                    ElseIf ((Local6 == 0x08)){}
                    ElseIf ((Local6 == 0x09))
                    {
                        Local7 = GSEL (PENC, IBUF, Local2)
                        If ((Local7 != Ones))
                        {
                            WENC = Local7
                            Local4 = DerefOf (PENC [Local7])
                            Local2 += SizeOf (Local4)
                            Local3 = DerefOf (IBUF [Local2])
                            If ((Local3 == 0x2C))
                            {
                                Local2++
                            }

                            Local7 = GSEL (PKBD, IBUF, Local2)
                            If ((Local7 != Ones))
                            {
                                WKBD = Local7
                                Local0 = Zero
                            }
                        }
                    }
                    ElseIf ((Local6 == 0x0A))
                    {
                        Local0 = Zero
                    }
                    ElseIf ((Local6 == 0x0B))
                    {
                        Local1 = Zero
                        PSTR = Zero
                        While ((Local2 < Local5))
                        {
                            PSTR [Local1] = DerefOf (IBUF [Local2])
                            Local2++
                            Local1++
                        }

                        WPAP = PSTR /* \WMI1.PSTR */
                        Local0 = Zero
                    }
                    Else
                    {
                    }

                    If ((Local0 == Zero))
                    {
                        OPTY = Local6
                        Local0 = WMIS (0xCD, Zero)
                    }
                }

                IBUF = Zero
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Name (RE64, Buffer (0x40){})
        Method (WQC0, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            CMD7 = 0xB0
            DATA = Zero
            STUS = Zero
            SMIK ()
            RE64 = DATA /* \WMI1.DATA */
            Release (MWMI)
            Return (RE64) /* \WMI1.RE64 */
        }

        Method (WMC1, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            CMD7 = 0xB1
            DATA = Arg2
            STUS = Zero
            SMIK ()
            Release (MWMI)
            Return (DATA) /* \WMI1.DATA */
        }

        Method (CARG, 1, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            If ((Local0 == Zero))
            {
                IBUF = Zero
                ILEN = Zero
                Return (Zero)
            }

            If ((ObjectType (Arg0) != 0x02))
            {
                Return (0x02)
            }

            If ((Local0 >= 0x0200))
            {
                Return (0x02)
            }

            IBUF = Arg0
            Local0--
            Local1 = DerefOf (IBUF [Local0])
            If (((Local1 == 0x3B) || (Local1 == 0x2A)))
            {
                IBUF [Local0] = Zero
                ILEN = Local0
            }
            Else
            {
                ILEN = SizeOf (Arg0)
            }

            Return (Zero)
        }

        Method (SCMP, 3, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            If ((Local0 == Zero))
            {
                Return (Zero)
            }

            Local0++
            Name (STR1, Buffer (Local0){})
            STR1 = Arg0
            Local0--
            Local1 = Zero
            Local2 = Arg2
            While ((Local1 < Local0))
            {
                Local3 = DerefOf (STR1 [Local1])
                If ((Local3 >= 0x41))
                {
                    If ((Local3 <= 0x5A))
                    {
                        Local3 += 0x20
                    }
                }

                Local4 = DerefOf (Arg1 [Local2])
                If ((Local4 >= 0x41))
                {
                    If ((Local4 <= 0x5A))
                    {
                        Local4 += 0x20
                    }
                }

                If ((Local3 != Local4))
                {
                    Return (Zero)
                }

                Local1++
                Local2++
            }

            Local4 = DerefOf (Arg1 [Local2])
            If ((Local4 == Zero))
            {
                Return (One)
            }

            If (((Local4 == 0x2C) || ((Local4 == 0x3A) || ((Local4 == 
                0x2F) || (Local4 == 0x3B)))))
            {
                Return (One)
            }

            If (((Local4 == 0x5B) || ((Local4 == 0x5D) || ((Local4 == 
                0x2F) || (Local4 == 0x3B)))))
            {
                Return (One)
            }

            Return (Zero)
        }

        Method (GITM, 1, NotSerialized)
        {
            Local0 = Zero
            Local1 = SizeOf (ITEM)
            While ((Local0 < Local1))
            {
                Local3 = DerefOf (DerefOf (ITEM [Local0]) [One])
                If (SCMP (Local3, Arg0, Zero))
                {
                    Return (Local0)
                }

                Local0++
            }

            Return (Ones)
        }

        Method (GSEL, 3, NotSerialized)
        {
            Local0 = Zero
            Local1 = SizeOf (Arg0)
            While ((Local0 < Local1))
            {
                Local2 = DerefOf (Arg0 [Local0])
                If (SCMP (Local2, Arg1, Arg2))
                {
                    Return (Local0)
                }

                Local0++
            }

            Return (Ones)
        }

        Method (SLEN, 2, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [Arg1])
            Return (SizeOf (Local0))
        }

        Method (CLRP, 0, NotSerialized)
        {
            WPAS = Zero
            WPNW = Zero
            WPAP = Zero
            UMOP = Zero
            UMNP = Zero
        }

        Method (GPAS, 2, NotSerialized)
        {
            Local0 = Arg1
            Local1 = Zero
            While ((Local1 <= 0x80))
            {
                Local2 = DerefOf (Arg0 [Local0])
                If (((Local2 == 0x2C) || (Local2 == Zero)))
                {
                    PSTR [Local1] = Zero
                    Return (Local1)
                }

                PSTR [Local1] = Local2
                Local0++
                Local1++
            }

            PSTR [Local1] = Zero
            Return (Ones)
        }

        Method (CPAS, 2, NotSerialized)
        {
            Local0 = Arg1
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == Zero))
            {
                Return (0x02)
            }

            WPAS = PSTR /* \WMI1.PSTR */
            Local0 += Local1
            Local0++
            Local6 = GSEL (PENC, Arg0, Local0)
            If ((Local6 == Ones))
            {
                Return (0x02)
            }

            WENC = Local6
            If ((Local6 == Zero))
            {
                Local0 += SLEN (PENC, Zero)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = GSEL (PKBD, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WKBD = Local6
            }

            Return (Zero)
        }

        Method (SPAS, 1, NotSerialized)
        {
            CMSW (0xE1, 0x02)
            Local7 = Ones
            Local6 = GSEL (PTYP, Arg0, Zero)
            If ((Local6 == Ones))
            {
                WPTY = 0xFE
                Local7 = GSEL (UMTP, Arg0, Zero)
                UMTY = Local7
                If ((Local7 == Ones))
                {
                    Return (0x02)
                }
            }

            If ((Local6 != Ones))
            {
                WPTY = Local6
                Local0 = SLEN (PTYP, Local6)
            }

            If ((Local7 != Ones))
            {
                Local0 = SLEN (UMTP, Local7)
            }

            If ((DerefOf (Arg0 [Local0]) != 0x2C))
            {
                Return (0x02)
            }

            Local0++
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == Zero))
            {
                PSTR = Zero
            }

            WPAS = PSTR /* \WMI1.PSTR */
            Local0 += Local1
            If ((DerefOf (Arg0 [Local0]) != 0x2C))
            {
                Return (0x02)
            }

            If ((Local7 != Ones))
            {
                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    PSTR = Zero
                }

                UMOP = PSTR /* \WMI1.PSTR */
                Local0 += Local1
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }
            }

            Local0++
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == Zero))
            {
                PSTR = Zero
            }

            WPNW = PSTR /* \WMI1.PSTR */
            If ((Local7 != Ones))
            {
                Local0 += Local1
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    PSTR = Zero
                }

                UMNP = PSTR /* \WMI1.PSTR */
            }

            Local0 += Local1
            Local0++
            Local6 = GSEL (PENC, Arg0, Local0)
            If ((Local6 == Ones))
            {
                Return (0x02)
            }

            WENC = Local6
            If ((Local6 == Zero))
            {
                Local0 += SLEN (PENC, Zero)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = GSEL (PKBD, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WKBD = Local6
            }

            Local0 += SLEN (PKBD, Zero)
            If ((DerefOf (Arg0 [Local0]) != 0x2C))
            {
                PSTR = Zero
                WPAP = PSTR /* \WMI1.PSTR */
                Return (Zero)
            }

            Local0++
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == Zero))
            {
                PSTR = Zero
            }

            WPAP = PSTR /* \WMI1.PSTR */
            Return (Zero)
        }

        Method (WSET, 1, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            If (((Local0 == Zero) || (Local0 > 0x0200)))
            {
                Return (0x02)
            }

            Local0++
            IBUF = Arg0
            Local1 = GITM (IBUF)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            WITM = Local1
            Local3 = DerefOf (ITEM [Local1])
            Local4 = DerefOf (Local3 [One])
            Local2 = SizeOf (Local4)
            Local2++
            Local4 = DerefOf (Local3 [Zero])
            If ((Local4 < 0x64))
            {
                If ((BID >= 0x30))
                {
                    Local5 = DerefOf (VSLF [Local4])
                }
                Else
                {
                    Local5 = DerefOf (VSEL [Local4])
                }

                Local6 = GSEL (Local5, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WSEL = Local6
                Local2 += SLEN (Local5, Local6)
                Local2++
                Local4 = DerefOf (IBUF [Local2])
            }
            ElseIf ((Local4 == 0x64))
            {
                Name (STR1, Buffer (0x81)
                {
                     0x00                                             // .
                })
                Local7 = Zero
                BSTL = Zero
                While ((Local2 < Local0))
                {
                    Local4 = DerefOf (IBUF [Local2])
                    If (((Local4 == 0x5B) || ((Local4 == 0x5D) || ((Local4 == 
                        0x3A) || (Local4 == 0x3B)))))
                    {
                        Local2++
                    }
                    ElseIf ((Local4 == 0x2C))
                    {
                        Break
                    }
                    Else
                    {
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            STR1 [Local7] = DerefOf (IBUF [Local2])
                            Break
                        }
                        Else
                        {
                            If ((Local6 == Zero))
                            {
                                STR1 [Local7] = 0xFE
                            }
                            Else
                            {
                                STR1 [Local7] = Local6
                            }

                            Local7++
                            Local2 += SLEN (VLST, Local6)
                        }
                    }
                }

                BSTL = STR1 /* \WMI1.WSET.STR1 */
            }
            ElseIf ((Local4 == 0x65))
            {
                RTC3 = Zero
                RTC4 = Zero
                RTC5 = Zero
                TMCG = Zero
                Local6 = GSEL (VR04, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                If (((Local6 < Zero) || (Local6 >= 0x18)))
                {
                    Return (0x02)
                }

                RTC3 = Local6
                Local2 += SLEN (VR04, Local6)
                Local4 = DerefOf (IBUF [Local2])
                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VR05, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    If (((Local6 < Zero) || (Local6 >= 0x3C)))
                    {
                        Return (0x02)
                    }

                    RTC4 = Local6
                    Local2 += SLEN (VR05, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VR05, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    If (((Local6 < Zero) || (Local6 >= 0x3C)))
                    {
                        Return (0x02)
                    }

                    RTC5 = Local6
                    Local2 += SLEN (VR05, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                TMCG = One
            }
            ElseIf ((Local4 == 0x66))
            {
                RTC0 = Zero
                RTC1 = Zero
                RTC2 = Zero
                DTCG = Zero
                Local6 = GSEL (VR02, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                If (((Local6 < One) || (Local6 > 0x0C)))
                {
                    Return (0x02)
                }

                RTC1 = Local6
                Local2 += SLEN (VR02, Local6)
                Local4 = DerefOf (IBUF [Local2])
                If (((Local2 < Local0) && (Local4 == 0x2F)))
                {
                    Local2++
                    Local6 = GSEL (VR03, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    If ((Local6 < One))
                    {
                        Return (0x02)
                    }

                    If (((RTC1 == One) || ((RTC1 == 0x03) || ((RTC1 == 
                        0x05) || ((RTC1 == 0x07) || ((RTC1 == 0x08) || ((RTC1 == 0x0A) || 
                        (RTC1 == 0x0C))))))))
                    {
                        If ((Local6 > 0x1F))
                        {
                            Return (0x02)
                        }
                    }

                    If (((RTC1 == 0x04) || ((RTC1 == 0x06) || ((RTC1 == 
                        0x09) || (RTC1 == 0x0B)))))
                    {
                        If ((Local6 > 0x1E))
                        {
                            Return (0x02)
                        }
                    }

                    RTC2 = Local6
                    Local2 += SLEN (VR03, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x2F)))
                {
                    Local2++
                    Local6 = GSEL (VR01, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    RTC0 = Local6
                    If (((Local6 < Zero) || (Local6 >= 0x65)))
                    {
                        Return (0x02)
                    }

                    Local2 += SLEN (VR01, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                Local6 = Zero
                Local6 = (0x07D5 + RTC0) /* \WMI1.RTC0 */
                If ((RTC1 == 0x02))
                {
                    If ((((Local6 % 0x04) == Zero) || (((Local6 % 
                        0x64) == Zero) || ((Local6 % 0x0190) == Zero))))
                    {
                        If ((RTC2 > 0x1D))
                        {
                            Return (0x02)
                        }
                    }
                    ElseIf ((RTC2 > 0x1C))
                    {
                        Return (0x02)
                    }
                }

                DTCG = One
            }
            ElseIf ((Local4 == 0x67))
            {
                RTC6 = Zero
                RTC7 = Zero
                RTC8 = Zero
                UMCG = Zero
                Local6 = GSEL (VR04, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                If (((Local6 < Zero) || (Local6 >= 0x18)))
                {
                    Return (0x02)
                }

                RTC6 = Local6
                Local2 += SLEN (VR04, Local6)
                Local4 = DerefOf (IBUF [Local2])
                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VR05, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    If (((Local6 < Zero) || (Local6 >= 0x3C)))
                    {
                        Return (0x02)
                    }

                    RTC7 = Local6
                    Local2 += SLEN (VR05, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VR05, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    If (((Local6 < Zero) || (Local6 >= 0x3C)))
                    {
                        Return (0x02)
                    }

                    RTC8 = Local6
                    Local2 += SLEN (VR05, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                UMCG = One
            }

            If (((Local4 == 0x2C) && (Local2 < Local0)))
            {
                Local2++
                Local0 = CPAS (IBUF, Local2)
                If ((Local0 != Zero))
                {
                    Return (Local0)
                }
            }

            Local0 = WMIS (One, Zero)
            Return (Local0)
        }

        Name (WQCA, Buffer (0x0B77)
        {
            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
            /* 0008 */  0x67, 0x0B, 0x00, 0x00, 0x90, 0x4B, 0x00, 0x00,  // g....K..
            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
            /* 0018 */  0x28, 0xCB, 0xA4, 0x00, 0x01, 0x06, 0x18, 0x42,  // (......B
            /* 0020 */  0x10, 0x19, 0x10, 0x0A, 0x0C, 0x21, 0x02, 0x0B,  // .....!..
            /* 0028 */  0x83, 0x50, 0x44, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PD...EA
            /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
            /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
            /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
            /* 0048 */  0x31, 0x0A, 0x88, 0x14, 0x40, 0x48, 0x26, 0x84,  // 1...@H&.
            /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
            /* 0058 */  0x01, 0x08, 0x1D, 0xA2, 0xC9, 0xA0, 0x00, 0xA7,  // ........
            /* 0060 */  0x08, 0x82, 0xB4, 0x65, 0x01, 0xBA, 0x05, 0xF8,  // ...e....
            /* 0068 */  0x16, 0xA0, 0x1D, 0x42, 0x68, 0x15, 0x0A, 0xD8,  // ...Bh...
            /* 0070 */  0x53, 0x9F, 0x60, 0xB2, 0x28, 0x40, 0x36, 0x98,  // S.`.(@6.
            /* 0078 */  0x6C, 0xC3, 0x91, 0x61, 0x30, 0x81, 0x63, 0x40,  // l..a0.c@
            /* 0080 */  0x89, 0x19, 0x03, 0x4A, 0xE7, 0x14, 0x64, 0x13,  // ...J..d.
            /* 0088 */  0x58, 0xD0, 0x85, 0xA2, 0x68, 0x1A, 0x51, 0x12,  // X...h.Q.
            /* 0090 */  0x1C, 0xD4, 0x31, 0x44, 0x08, 0x5E, 0xAE, 0x00,  // ..1D.^..
            /* 0098 */  0xEF, 0x23, 0x90, 0x69, 0x68, 0x02, 0xCF, 0x63,  // .#.ih..c
            /* 00A0 */  0x48, 0x00, 0xA1, 0x8B, 0x94, 0x70, 0x18, 0x94,  // H....p..
            /* 00A8 */  0x07, 0x10, 0xC9, 0x19, 0x28, 0x0A, 0xD8, 0x5E,  // ....(..^
            /* 00B0 */  0xA7, 0xA1, 0x7D, 0x6B, 0x94, 0x44, 0x12, 0x1C,  // ..}k.D..
            /* 00B8 */  0x6A, 0x8C, 0x96, 0x28, 0xC0, 0xFC, 0xB8, 0x34,  // j..(...4
            /* 00C0 */  0xDC, 0x03, 0xF1, 0x78, 0x43, 0x32, 0x69, 0x43,  // ...xC2iC
            /* 00C8 */  0x41, 0x0D, 0xDC, 0x93, 0x3A, 0x25, 0x4F, 0x33,  // A...:%O3
            /* 00D0 */  0x62, 0xC9, 0x53, 0x14, 0x4C, 0x02, 0x8F, 0x82,  // b.S.L...
            /* 00D8 */  0xA1, 0x71, 0x82, 0xB2, 0x20, 0xE4, 0x60, 0x98,  // .q.. .`.
            /* 00E0 */  0x28, 0xC0, 0x93, 0xF0, 0x0C, 0x8B, 0x9F, 0xD7,  // (.......
            /* 00E8 */  0xF9, 0x92, 0x83, 0x40, 0x8C, 0x04, 0x3E, 0x10,  // ...@..>.
            /* 00F0 */  0x78, 0x34, 0x47, 0x8C, 0x05, 0x0A, 0x17, 0xF0,  // x4G.....
            /* 00F8 */  0x7C, 0x8E, 0x21, 0x72, 0xDC, 0x83, 0x8D, 0x71,  // |.!r...q
            /* 0100 */  0x14, 0x91, 0x13, 0xBC, 0x01, 0x44, 0x31, 0x5A,  // .....D1Z
            /* 0108 */  0x41, 0xB3, 0x16, 0x62, 0xB0, 0x68, 0x06, 0xEB,  // A..b.h..
            /* 0110 */  0x19, 0x9C, 0x1C, 0x03, 0x8E, 0x00, 0xF3, 0xFF,  // ........
            /* 0118 */  0x3F, 0x2C, 0xD8, 0xA3, 0x00, 0xAB, 0x83, 0xD2,  // ?,......
            /* 0120 */  0x34, 0x4C, 0xD0, 0xBD, 0x00, 0x6B, 0x02, 0x8C,  // 4L...k..
            /* 0128 */  0x09, 0xD0, 0x88, 0x21, 0x65, 0x02, 0x9C, 0xDD,  // ...!e...
            /* 0130 */  0x16, 0x34, 0xA3, 0xB6, 0x04, 0x98, 0x13, 0xA0,  // .4......
            /* 0138 */  0x4D, 0x80, 0x37, 0x04, 0xA1, 0x9C, 0x67, 0x94,  // M.7...g.
            /* 0140 */  0x63, 0x39, 0xC5, 0x28, 0x8F, 0x02, 0x31, 0x5F,  // c9.(..1_
            /* 0148 */  0x05, 0x82, 0x46, 0x89, 0x11, 0xF3, 0x5C, 0xE2,  // ..F...\.
            /* 0150 */  0x1A, 0x36, 0x42, 0x8C, 0x90, 0xA7, 0x10, 0x28,  // .6B....(
            /* 0158 */  0x6E, 0xFB, 0x83, 0x20, 0x83, 0xC6, 0x8D, 0xDE,  // n.. ....
            /* 0160 */  0x67, 0x85, 0xB3, 0x3A, 0x81, 0xA3, 0x7F, 0x4E,  // g..:...N
            /* 0168 */  0x30, 0x81, 0xA7, 0x7C, 0x60, 0x4F, 0x06, 0x27,  // 0..|`O.'
            /* 0170 */  0x70, 0xAC, 0x51, 0x63, 0x9C, 0x4A, 0x02, 0x47,  // p.Qc.J.G
            /* 0178 */  0x7E, 0x3E, 0x48, 0x03, 0x88, 0x22, 0xC1, 0xA3,  // ~>H.."..
            /* 0180 */  0xCE, 0x0A, 0x3E, 0x17, 0x78, 0x68, 0x07, 0xED,  // ..>.xh..
            /* 0188 */  0x39, 0x9E, 0x40, 0x90, 0x43, 0x38, 0x82, 0xE7,  // 9.@.C8..
            /* 0190 */  0x85, 0x07, 0x02, 0x8F, 0x81, 0xDD, 0x1C, 0x7C,  // .......|
            /* 0198 */  0x04, 0xF0, 0x09, 0x01, 0xEF, 0x1A, 0x50, 0x57,  // ......PW
            /* 01A0 */  0x83, 0x07, 0x03, 0x36, 0xE8, 0x70, 0x98, 0xF1,  // ...6.p..
            /* 01A8 */  0x7A, 0xF8, 0xE1, 0x4E, 0xE0, 0x24, 0x1F, 0x2F,  // z..N.$./
            /* 01B0 */  0xF8, 0x51, 0xC3, 0x83, 0xC3, 0xCD, 0xF3, 0x64,  // .Q.....d
            /* 01B8 */  0x8E, 0xAC, 0x54, 0x01, 0x66, 0x0F, 0x07, 0x3A,  // ..T.f..:
            /* 01C0 */  0x46, 0xF8, 0xAC, 0xC1, 0xCE, 0x00, 0x18, 0xF9,  // F.......
            /* 01C8 */  0x83, 0x40, 0x8D, 0xCC, 0xD0, 0x1E, 0xF7, 0x2B,  // .@.....+
            /* 01D0 */  0x87, 0x21, 0x9F, 0x13, 0x0E, 0x8B, 0x89, 0x3D,  // .!.....=
            /* 01D8 */  0x73, 0xD0, 0xF1, 0x80, 0xFF, 0x2A, 0xF2, 0x94,  // s....*..
            /* 01E0 */  0xE1, 0xE9, 0x7B, 0xBE, 0x26, 0x18, 0x76, 0xE0,  // ..{.&.v.
            /* 01E8 */  0xE8, 0x81, 0x18, 0xBA, 0xF5, 0x61, 0x68, 0x1A,  // .....ah.
            /* 01F0 */  0xBE, 0x7D, 0xF8, 0xBC, 0x00, 0xE3, 0x14, 0xE0,  // .}......
            /* 01F8 */  0x91, 0xFB, 0x88, 0x62, 0x10, 0xFF, 0xFF, 0x8F,  // ...b....
            /* 0200 */  0x16, 0xFC, 0x34, 0xC1, 0xAE, 0x07, 0xA7, 0xF1,  // ..4.....
            /* 0208 */  0x1C, 0xE0, 0xE1, 0x9C, 0x95, 0x0F, 0x13, 0x60,  // .......`
            /* 0210 */  0xBB, 0x9D, 0xB0, 0x11, 0xBD, 0x5B, 0x78, 0x34,  // .....[x4
            /* 0218 */  0xD8, 0x53, 0x00, 0xF8, 0x4E, 0x2F, 0xE0, 0xBC,  // .S..N/..
            /* 0220 */  0x6B, 0xB0, 0xC1, 0xC2, 0x38, 0xBD, 0x80, 0xFF,  // k...8...
            /* 0228 */  0x7C, 0xE0, 0x01, 0xF0, 0x63, 0x84, 0x07, 0xC0,  // |...c...
            /* 0230 */  0xC1, 0x9F, 0x3E, 0xCE, 0xCF, 0x4A, 0x67, 0x85,  // ..>..Jg.
            /* 0238 */  0x1C, 0x16, 0xBC, 0x33, 0x0E, 0x8C, 0x51, 0xF0,  // ...3..Q.
            /* 0240 */  0x60, 0x07, 0x1A, 0x1A, 0xE6, 0x2D, 0xA0, 0x28,  // `....-.(
            /* 0248 */  0x30, 0xA8, 0x33, 0x0D, 0xF0, 0xFC, 0xFF, 0x9F,  // 0.3.....
            /* 0250 */  0x69, 0xC0, 0x8D, 0xFD, 0xDC, 0x00, 0x9E, 0x5B,  // i......[
            /* 0258 */  0x84, 0x11, 0x8E, 0xC6, 0x33, 0x7B, 0x71, 0x78,  // ....3{qx
            /* 0260 */  0x42, 0xB1, 0x66, 0x38, 0xE1, 0x1C, 0x47, 0x34,  // B.f8..G4
            /* 0268 */  0x83, 0xF2, 0x63, 0x0D, 0xEC, 0xA3, 0xC0, 0x73,  // ..c....s
            /* 0270 */  0xCC, 0xA3, 0xC0, 0x33, 0x44, 0x8C, 0x67, 0x1A,  // ...3D.g.
            /* 0278 */  0x1F, 0x69, 0x5E, 0x67, 0x5E, 0x6D, 0x7C, 0x3E,  // .i^g^m|>
            /* 0280 */  0xF0, 0xB1, 0xC6, 0xD7, 0x97, 0x28, 0x11, 0x1E,  // .....(..
            /* 0288 */  0x6B, 0x0C, 0x1C, 0xF2, 0xB1, 0xC6, 0x10, 0x4F,  // k......O
            /* 0290 */  0x35, 0x21, 0xA2, 0x06, 0x0A, 0x1B, 0x25, 0xBE,  // 5!....%.
            /* 0298 */  0x71, 0x42, 0x04, 0x79, 0xAC, 0x01, 0x73, 0xFC,  // qB.y..s.
            /* 02A0 */  0x63, 0x0D, 0xA0, 0xF4, 0xFF, 0x7F, 0xAC, 0x01,  // c.......
            /* 02A8 */  0x4E, 0x91, 0x8F, 0x35, 0xA0, 0x0C, 0x76, 0xAC,  // N..5..v.
            /* 02B0 */  0x01, 0xDD, 0x79, 0x02, 0xF8, 0x1C, 0x04, 0xC0,  // ..y.....
            /* 02B8 */  0x77, 0x6C, 0xC1, 0x9D, 0x6C, 0xC0, 0x33, 0x25,  // wl..l.3%
            /* 02C0 */  0xDC, 0x90, 0xE0, 0x1D, 0x6E, 0x80, 0xEF, 0xFF,  // ....n...
            /* 02C8 */  0xFF, 0x70, 0x03, 0xBE, 0x2C, 0x0F, 0x0E, 0x13,  // .p..,...
            /* 02D0 */  0x28, 0xC8, 0x8B, 0x40, 0x81, 0x9E, 0x06, 0x14,  // (..@....
            /* 02D8 */  0xC6, 0x87, 0x1B, 0xC0, 0xD1, 0x31, 0x0A, 0x77,  // .....1.w
            /* 02E0 */  0x7A, 0x80, 0x7B, 0xAF, 0x60, 0x67, 0x87, 0x27,  // z.{.`g.'
            /* 02E8 */  0x40, 0xB8, 0xA2, 0xCF, 0x36, 0x50, 0xEF, 0x2E,  // @...6P..
            /* 02F0 */  0xC5, 0x8D, 0x51, 0xD7, 0x99, 0xA7, 0x1A, 0x9F,  // ..Q.....
            /* 02F8 */  0x67, 0xA2, 0x3C, 0xD3, 0x3C, 0xCE, 0xBC, 0xCF,  // g.<.<...
            /* 0300 */  0xF8, 0x70, 0xF3, 0x6A, 0xE3, 0x29, 0xC4, 0xF1,  // .p.j.)..
            /* 0308 */  0xD5, 0xC6, 0x88, 0x6F, 0x13, 0x6F, 0x81, 0xC6,  // ...o.o..
            /* 0310 */  0x3D, 0xB8, 0x17, 0x9B, 0x77, 0x1C, 0x83, 0x1C,  // =...w...
            /* 0318 */  0x4D, 0x84, 0x57, 0x1D, 0x86, 0xF3, 0x68, 0x03,  // M.W...h.
            /* 0320 */  0x5E, 0x21, 0xAF, 0x14, 0x59, 0x38, 0xDA, 0x80,  // ^!..Y8..
            /* 0328 */  0xE6, 0xFF, 0x7F, 0xB4, 0x01, 0xDC, 0x9F, 0x60,  // .......`
            /* 0330 */  0x70, 0x27, 0x14, 0xB0, 0x1C, 0x19, 0xD8, 0x5D,  // p'.....]
            /* 0338 */  0x0E, 0xDE, 0xF9, 0x04, 0xF0, 0x92, 0x78, 0xFD,  // ......x.
            /* 0340 */  0x3A, 0x70, 0x38, 0x2D, 0x88, 0x6C, 0xBC, 0x00,  // :p8-.l..
            /* 0348 */  0x7C, 0x06, 0xA0, 0x6A, 0x80, 0xF4, 0xFF, 0x9F,  // |..j....
            /* 0350 */  0x24, 0x6C, 0x82, 0xE9, 0xC9, 0x05, 0xEF, 0x03,  // $l......
            /* 0358 */  0x81, 0x73, 0x93, 0x28, 0xF9, 0xB0, 0x28, 0x9C,  // .s.(..(.
            /* 0360 */  0xB3, 0x1E, 0x43, 0x28, 0x88, 0x01, 0x1D, 0xE4,  // ..C(....
            /* 0368 */  0x30, 0x81, 0x3E, 0xA1, 0xF8, 0x18, 0xF2, 0x2C,  // 0.>....,
            /* 0370 */  0xF0, 0xDC, 0xEC, 0x41, 0xF9, 0xBC, 0xC3, 0xCE,  // ...A....
            /* 0378 */  0x1F, 0xEC, 0x28, 0xE1, 0x91, 0xFB, 0x90, 0xC0,  // ..(.....
            /* 0380 */  0x7F, 0x31, 0x9E, 0x8D, 0xD1, 0xAD, 0xE6, 0x94,  // .1......
            /* 0388 */  0x82, 0x02, 0xF3, 0x31, 0x84, 0x13, 0xD4, 0x75,  // ...1...u
            /* 0390 */  0x8F, 0x00, 0x99, 0xBE, 0x83, 0x02, 0x28, 0x80,  // ......(.
            /* 0398 */  0x7C, 0x2B, 0xF0, 0x39, 0xE0, 0xC9, 0x80, 0x8D,  // |+.9....
            /* 03A0 */  0xE1, 0x51, 0xC0, 0x68, 0x46, 0xE7, 0xE1, 0x27,  // .Q.hF..'
            /* 03A8 */  0x8B, 0x8A, 0x3B, 0x59, 0x0A, 0xE2, 0xC9, 0xFA,  // ..;Y....
            /* 03B0 */  0xA6, 0xED, 0xC9, 0xE2, 0x66, 0xE2, 0x5B, 0x85,  // ....f.[.
            /* 03B8 */  0x67, 0xF4, 0xAE, 0xE5, 0x39, 0x7A, 0xC2, 0xBE,  // g...9z..
            /* 03C0 */  0x85, 0xC0, 0x3A, 0x0C, 0x84, 0x7C, 0x30, 0xF0,  // ..:..|0.
            /* 03C8 */  0x34, 0x0C, 0xE7, 0xC9, 0x72, 0x38, 0x4F, 0x96,  // 4...r8O.
            /* 03D0 */  0x8F, 0xC5, 0x97, 0x10, 0xF0, 0xDD, 0x28, 0x70,  // ......(p
            /* 03D8 */  0xB3, 0x05, 0xC3, 0xFF, 0x7F, 0xB6, 0x78, 0x78,  // ......xx
            /* 03E0 */  0x4C, 0xAC, 0x51, 0xD1, 0x8B, 0x90, 0x87, 0xC7,  // L.Q.....
            /* 03E8 */  0x2F, 0x07, 0x9E, 0xCF, 0x33, 0xC2, 0x51, 0x3E,  // /...3.Q>
            /* 03F0 */  0x49, 0xE0, 0x30, 0x9E, 0x48, 0x3C, 0x44, 0xDF,  // I.0.H<D.
            /* 03F8 */  0x89, 0x60, 0x4D, 0xE4, 0xA4, 0x7D, 0x5B, 0x38,  // .`M..}[8
            /* 0400 */  0xD9, 0xA0, 0x2F, 0x68, 0x98, 0x3B, 0x11, 0x18,  // ../h.;..
            /* 0408 */  0x2F, 0xB2, 0x30, 0xF3, 0xDC, 0xAA, 0x50, 0x91,  // /.0...P.
            /* 0410 */  0x6E, 0x55, 0x80, 0xD8, 0x61, 0xBD, 0xF4, 0xF8,  // nU..a...
            /* 0418 */  0x58, 0x05, 0xF7, 0x56, 0x05, 0xF7, 0x4A, 0xF5,  // X..V..J.
            /* 0420 */  0xAC, 0x70, 0x8C, 0xE1, 0x1F, 0xA5, 0x62, 0x9C,  // .p....b.
            /* 0428 */  0xD2, 0x8B, 0xA7, 0x81, 0xC2, 0xFC, 0xFF, 0xA3,  // ........
            /* 0430 */  0xC4, 0x7B, 0xAB, 0xF2, 0x18, 0xDF, 0xAA, 0xD8,  // .{......
            /* 0438 */  0x05, 0x2A, 0x4C, 0xAC, 0x57, 0x2B, 0xA3, 0xBE,  // .*L.W+..
            /* 0440 */  0x4E, 0x84, 0x0B, 0x14, 0x24, 0xD2, 0x8B, 0x55,  // N...$..U
            /* 0448 */  0x94, 0xC8, 0xF1, 0x0D, 0xF9, 0x56, 0x05, 0x5E,  // .....V.^
            /* 0450 */  0x29, 0xB7, 0x2A, 0x80, 0x26, 0x68, 0x6F, 0x55,  // ).*.&hoU
            /* 0458 */  0x60, 0xBC, 0x36, 0xB0, 0x1B, 0x12, 0x2C, 0xA0,  // `.6...,.
            /* 0460 */  0xD7, 0x2A, 0xB8, 0xFF, 0xFF, 0x6B, 0x15, 0xB0,  // .*...k..
            /* 0468 */  0xCF, 0x7C, 0xAD, 0xA2, 0x79, 0xAF, 0x55, 0xA8,  // .|..y.U.
            /* 0470 */  0x53, 0x89, 0xF5, 0x5C, 0xAB, 0xC8, 0x2C, 0xE1,  // S..\..,.
            /* 0478 */  0xDF, 0xAB, 0x00, 0x0E, 0xFD, 0xFF, 0xEF, 0x55,  // .......U
            /* 0480 */  0x00, 0x83, 0x6E, 0x45, 0x98, 0x83, 0x15, 0xBC,  // ..nE....
            /* 0488 */  0x84, 0xF7, 0x2A, 0x1A, 0x67, 0x19, 0x0A, 0xB7,  // ..*.g...
            /* 0490 */  0x20, 0x0A, 0xE3, 0x7B, 0x15, 0xE0, 0xE0, 0xFF,  //  ..{....
            /* 0498 */  0x7F, 0xAF, 0x82, 0x7F, 0x5D, 0xC1, 0x0D, 0x19,  // ....]...
            /* 04A0 */  0x2E, 0x58, 0x94, 0x60, 0x3E, 0x84, 0x78, 0x3A,  // .X.`>.x:
            /* 04A8 */  0x47, 0xFC, 0x90, 0xF0, 0x12, 0xF0, 0x90, 0xE3,  // G.......
            /* 04B0 */  0x01, 0x3F, 0x10, 0xF8, 0x6A, 0x05, 0xB6, 0x53,  // .?..j..S
            /* 04B8 */  0xEF, 0x59, 0xBE, 0x4B, 0xBD, 0xF3, 0xF2, 0xE3,  // .Y.K....
            /* 04C0 */  0xD5, 0x5B, 0x95, 0x0F, 0xBE, 0xB1, 0xDE, 0x19,  // .[......
            /* 04C8 */  0x5E, 0xAD, 0x3C, 0x92, 0x28, 0x27, 0x11, 0xCA,  // ^.<.('..
            /* 04D0 */  0x37, 0xAB, 0xB7, 0x2A, 0xA3, 0x44, 0x7C, 0x19,  // 7..*.D|.
            /* 04D8 */  0xF6, 0x09, 0xD8, 0xD0, 0x46, 0x79, 0xAA, 0x88,  // ....Fy..
            /* 04E0 */  0x6E, 0xBC, 0x57, 0x2B, 0xF0, 0xCA, 0xB9, 0x5A,  // n.W+...Z
            /* 04E8 */  0x01, 0xAA, 0xFF, 0xFF, 0x57, 0x2B, 0x70, 0x0F,  // ....W+p.
            /* 04F0 */  0xFF, 0xD5, 0x0A, 0x7C, 0x37, 0x07, 0xEC, 0x35,  // ...|7..5
            /* 04F8 */  0x09, 0xEE, 0xE5, 0x0A, 0xF0, 0x92, 0xFD, 0x72,  // .......r
            /* 0500 */  0x45, 0x73, 0x5F, 0xAE, 0x50, 0xA2, 0x20, 0xA4,  // Es_.P. .
            /* 0508 */  0x08, 0x48, 0xF3, 0x04, 0xCF, 0xED, 0x0A, 0x70,  // .H.....p
            /* 0510 */  0xF1, 0xFF, 0xBF, 0x5D, 0x01, 0x6C, 0x0B, 0x77,  // ...].l.w
            /* 0518 */  0xBB, 0x02, 0x7A, 0x77, 0x23, 0x30, 0xFE, 0xFF,  // ..zw#0..
            /* 0520 */  0xEF, 0x46, 0x0C, 0xE5, 0xDD, 0x08, 0x7B, 0xC1,  // .F....{.
            /* 0528 */  0xC2, 0xE7, 0xBB, 0x60, 0xD1, 0x30, 0x2B, 0x51,  // ...`.0+Q
            /* 0530 */  0xB4, 0x35, 0x51, 0x18, 0x5F, 0xB0, 0x00, 0x47,  // .5Q._..G
            /* 0538 */  0x87, 0x50, 0xDC, 0xA8, 0xE1, 0x5E, 0x9B, 0x7C,  // .P...^.|
            /* 0540 */  0xE7, 0xF1, 0x7C, 0x23, 0x5A, 0x33, 0x8C, 0xCE,  // ..|#Z3..
            /* 0548 */  0x10, 0x2F, 0x05, 0xAF, 0xD3, 0xBE, 0xF5, 0xC3,  // ./......
            /* 0550 */  0xB8, 0x5F, 0xC1, 0x1E, 0xD2, 0x83, 0xB0, 0x4F,  // ._.....O
            /* 0558 */  0x12, 0x6F, 0x58, 0x3E, 0x58, 0x19, 0xE4, 0xED,  // .oX>X...
            /* 0560 */  0xF7, 0xB9, 0xEA, 0xB1, 0x2A, 0x8A, 0x11, 0x02,  // ....*...
            /* 0568 */  0x1E, 0xCF, 0x7B, 0xB0, 0x0F, 0x56, 0xEF, 0x59,  // ..{..V.Y
            /* 0570 */  0x46, 0x89, 0x1D, 0xCB, 0xD7, 0xA9, 0x27, 0x2D,  // F.....'-
            /* 0578 */  0x5F, 0xB2, 0x0C, 0x11, 0xF7, 0x61, 0xD8, 0xF7,  // _....a..
            /* 0580 */  0x2B, 0x60, 0xF9, 0xFF, 0xBF, 0x5F, 0x01, 0x5C,  // +`..._.\
            /* 0588 */  0xB9, 0x38, 0xF0, 0x83, 0x03, 0xF6, 0x7E, 0x05,  // .8....~.
            /* 0590 */  0xD8, 0xFB, 0xFF, 0xDF, 0xAF, 0x30, 0xF3, 0x04,  // .....0..
            /* 0598 */  0xCF, 0xFD, 0x0A, 0x60, 0xF3, 0xFF, 0xFF, 0x7E,  // ...`...~
            /* 05A0 */  0x05, 0x38, 0xBC, 0x5B, 0x61, 0xEF, 0x58, 0x58,  // .8.[a.XX
            /* 05A8 */  0x02, 0xC7, 0xFC, 0xBB, 0x98, 0x40, 0xA1, 0x56,  // .....@.V
            /* 05B0 */  0xA2, 0x60, 0x30, 0xA8, 0xFB, 0x15, 0xE0, 0x68,  // .`0....h
            /* 05B8 */  0xDC, 0x1E, 0x35, 0x38, 0xCE, 0x06, 0x4F, 0x12,  // ..58..O.
            /* 05C0 */  0x98, 0x33, 0x35, 0x6E, 0x36, 0x07, 0x17, 0x38,  // .35n6..8
            /* 05C8 */  0xC2, 0x73, 0x4C, 0xD0, 0x73, 0x67, 0x97, 0x14,  // .sL.sg..
            /* 05D0 */  0xEC, 0xFF, 0xFF, 0x92, 0xE2, 0x3B, 0x16, 0xDC,  // .....;..
            /* 05D8 */  0x2B, 0xD5, 0x43, 0x43, 0x94, 0x83, 0x78, 0x0D,  // +.CC..x.
            /* 05E0 */  0x7E, 0xAC, 0x7A, 0x90, 0x3A, 0xB2, 0x87, 0xAB,  // ~.z.:...
            /* 05E8 */  0x27, 0x61, 0x1F, 0xB2, 0x7C, 0xC7, 0x32, 0x54,  // 'a..|.2T
            /* 05F0 */  0x84, 0x77, 0x2C, 0x76, 0x86, 0x88, 0x17, 0x2B,  // .w,v...+
            /* 05F8 */  0x4A, 0x88, 0xF7, 0x8A, 0xD0, 0xBE, 0x71, 0x19,  // J.....q.
            /* 0600 */  0xFC, 0xB1, 0xD8, 0xA8, 0x41, 0x5F, 0x8C, 0xDF,  // ....A_..
            /* 0608 */  0xB1, 0xC0, 0x2B, 0xE2, 0x41, 0x20, 0x23, 0x77,  // ..+.A #w
            /* 0610 */  0x2C, 0x80, 0x22, 0xC1, 0x20, 0xE4, 0x64, 0xE0,  // ,.". .d.
            /* 0618 */  0xE8, 0xF3, 0x02, 0x7E, 0x00, 0x0F, 0x23, 0x1E,  // ...~..#.
            /* 0620 */  0x12, 0x0B, 0x30, 0x70, 0xFA, 0xFF, 0xBF, 0x2F,  // ..0p.../
            /* 0628 */  0xF9, 0x4C, 0xC1, 0x0F, 0x18, 0x3E, 0x53, 0xB0,  // .L...>S.
            /* 0630 */  0xEB, 0x41, 0xF4, 0xC7, 0x00, 0x9F, 0x4B, 0x30,  // .A....K0
            /* 0638 */  0x83, 0x03, 0xFF, 0xB5, 0xE2, 0xD0, 0x3D, 0x8A,  // ......=.
            /* 0640 */  0xD7, 0x07, 0x13, 0x78, 0x70, 0xE0, 0xB8, 0x33,  // ...xp..3
            /* 0648 */  0x1C, 0x91, 0xEF, 0x30, 0x1E, 0x1C, 0xD8, 0x0E,  // ...0....
            /* 0650 */  0x02, 0xC0, 0x61, 0x70, 0xF8, 0x50, 0x83, 0x43,  // ..ap.P.C
            /* 0658 */  0x8F, 0xC7, 0xC0, 0x21, 0x7D, 0x1E, 0x63, 0x17,  // ...!}.c.
            /* 0660 */  0x86, 0x87, 0x1C, 0x0F, 0x0D, 0x6C, 0x80, 0x1E,  // .....l..
            /* 0668 */  0x1A, 0xB0, 0x9C, 0xC4, 0x53, 0xC8, 0xA1, 0xC1,  // ....S...
            /* 0670 */  0xFA, 0xFF, 0x0F, 0x0D, 0x1C, 0x12, 0x86, 0x06,  // ........
            /* 0678 */  0x94, 0xE2, 0x0D, 0x0D, 0x3D, 0x24, 0x1F, 0x16,  // ....=$..
            /* 0680 */  0x62, 0x3E, 0xE5, 0x44, 0x78, 0x5F, 0xF0, 0x09,  // b>.Dx_..
            /* 0688 */  0x8A, 0xA1, 0xBF, 0xA6, 0xF8, 0x76, 0xE1, 0x7B,  // .....v.{
            /* 0690 */  0x20, 0x6E, 0x7C, 0xE0, 0xBA, 0x72, 0x7A, 0x7C,  //  n|..rz|
            /* 0698 */  0xC0, 0xE7, 0xC8, 0xE5, 0xF1, 0xE1, 0x8E, 0x4E,  // .......N
            /* 06A0 */  0x1E, 0x1F, 0x0C, 0x97, 0x57, 0x19, 0x72, 0x34,  // ....W.r4
            /* 06A8 */  0xF1, 0xD1, 0x8A, 0x0D, 0x0F, 0x6C, 0x37, 0x3D,  // .....l7=
            /* 06B0 */  0x0F, 0x0F, 0xF8, 0xC4, 0x1C, 0x1E, 0xFA, 0x5C,  // .......\
            /* 06B8 */  0x94, 0xE0, 0xFF, 0x1F, 0xF5, 0xE4, 0xD8, 0x18,  // ........
            /* 06C0 */  0x8A, 0x1C, 0x1A, 0xBD, 0x87, 0xB1, 0xA3, 0xCF,  // ........
            /* 06C8 */  0x3B, 0x09, 0xDC, 0x31, 0x82, 0xED, 0x28, 0xE6,  // ;..1..(.
            /* 06D0 */  0x31, 0x02, 0xD7, 0x8B, 0xD5, 0x31, 0x02, 0xB3,  // 1....1..
            /* 06D8 */  0x91, 0x79, 0x8C, 0xC0, 0x15, 0xF1, 0x18, 0x81,  // .y......
            /* 06E0 */  0x99, 0x09, 0x08, 0xFD, 0xFF, 0xC7, 0x08, 0x5C,  // .......\
            /* 06E8 */  0x21, 0x8F, 0x11, 0x98, 0xA9, 0x18, 0x23, 0xD0,  // !.....#.
            /* 06F0 */  0xBD, 0xD8, 0x1D, 0x23, 0x30, 0x1B, 0xA1, 0xC7,  // ...#0...
            /* 06F8 */  0x08, 0x3C, 0xFF, 0xFF, 0x63, 0xF4, 0x09, 0xF1,  // .<..c...
            /* 0700 */  0x18, 0x81, 0xD9, 0xF8, 0x3C, 0x46, 0xE0, 0x73,  // ....<F.s
            /* 0708 */  0x3D, 0x07, 0xE3, 0xA5, 0x9B, 0x0F, 0x13, 0xC6,  // =.......
            /* 0710 */  0x99, 0x13, 0x7F, 0x3D, 0x07, 0xBC, 0x8C, 0x82,  // ...=....
            /* 0718 */  0xEB, 0x7C, 0x36, 0xF9, 0x1A, 0xEE, 0x57, 0xA1,  // .|6...W.
            /* 0720 */  0x22, 0xBD, 0x07, 0x28, 0x8C, 0xCF, 0xB8, 0xE0,  // "..(....
            /* 0728 */  0xFD, 0xFF, 0x9F, 0x71, 0x81, 0xEB, 0x58, 0x9F,  // ...q..X.
            /* 0730 */  0x71, 0xC1, 0x72, 0x2B, 0x60, 0x37, 0x5C, 0xB8,  // q.r+`7\.
            /* 0738 */  0xA7, 0x5B, 0xD8, 0x37, 0x87, 0x87, 0xD9, 0xA7,  // .[.7....
            /* 0740 */  0x8C, 0x37, 0xA6, 0x07, 0x5A, 0x6B, 0xC4, 0xD0,  // .7..Zk..
            /* 0748 */  0xAD, 0x36, 0x48, 0x9C, 0x08, 0xAF, 0x03, 0x4F,  // .6H....O
            /* 0750 */  0xB7, 0xBE, 0x94, 0xC5, 0x0B, 0xF4, 0x74, 0x6B,  // ......tk
            /* 0758 */  0x8C, 0x38, 0x2F, 0xB9, 0x46, 0x7C, 0xA1, 0x08,  // .8/.F|..
            /* 0760 */  0xF1, 0x70, 0xEB, 0x93, 0xAE, 0xF1, 0x1E, 0x25,  // .p.....%
            /* 0768 */  0xC2, 0x85, 0x79, 0xC1, 0x7D, 0xBA, 0x05, 0xAF,  // ..y.}...
            /* 0770 */  0x94, 0x07, 0xA5, 0x8E, 0x73, 0x3E, 0xDD, 0x02,  // ....s>..
            /* 0778 */  0x8E, 0xFE, 0xFF, 0xA7, 0x5B, 0xE0, 0x8E, 0xF6,  // ....[...
            /* 0780 */  0x88, 0x02, 0xBE, 0x6B, 0x03, 0xBB, 0xA3, 0xC0,  // ...k....
            /* 0788 */  0x3B, 0xEB, 0xE3, 0x0F, 0x28, 0x80, 0x8B, 0x2C,  // ;...(..,
            /* 0790 */  0x0F, 0x00, 0x9D, 0x38, 0x9C, 0x03, 0x44, 0x36,  // ...8..D6
            /* 0798 */  0x9E, 0x00, 0x3E, 0x04, 0x50, 0x35, 0x40, 0x9A,  // ..>.P5@.
            /* 07A0 */  0x25, 0xFC, 0xF4, 0xE4, 0x82, 0xF7, 0x89, 0xC0,  // %.......
            /* 07A8 */  0xB9, 0x49, 0x94, 0x7C, 0x58, 0x74, 0x04, 0xCE,  // .I.|Xt..
            /* 07B0 */  0x7A, 0x0E, 0xA1, 0x20, 0x06, 0x74, 0x90, 0xD3,  // z.. .t..
            /* 07B8 */  0x04, 0xFA, 0x88, 0xC2, 0xEE, 0x49, 0x3E, 0x4A,  // .....I>J
            /* 07C0 */  0xB0, 0x13, 0x92, 0xAF, 0x28, 0x3E, 0x80, 0xF8,  // ....(>..
            /* 07C8 */  0x2C, 0xE1, 0xFF, 0xFF, 0xC8, 0x7D, 0x4A, 0xE0,  // ,....}J.
            /* 07D0 */  0xDF, 0x18, 0x5F, 0x1B, 0x8C, 0x6E, 0x35, 0xC7,  // .._..n5.
            /* 07D8 */  0x14, 0x14, 0x98, 0xCF, 0x21, 0x9C, 0xA0, 0xAE,  // ....!...
            /* 07E0 */  0x8B, 0x04, 0xC8, 0xF4, 0x9D, 0x14, 0x40, 0x01,  // ......@.
            /* 07E8 */  0xE4, 0x5B, 0x81, 0xCF, 0x01, 0x4F, 0x06, 0x6C,  // .[...O.l
            /* 07F0 */  0x0C, 0x8F, 0x02, 0x46, 0x33, 0x3A, 0x0F, 0x3F,  // ...F3:.?
            /* 07F8 */  0x59, 0x54, 0xDC, 0xC9, 0x52, 0x10, 0x4F, 0xD6,  // YT..R.O.
            /* 0800 */  0x51, 0x26, 0x8B, 0x9E, 0x89, 0xEF, 0xFC, 0x38,  // Q&.....8
            /* 0808 */  0x02, 0xDF, 0x63, 0x5E, 0x43, 0x60, 0x5D, 0x04,  // ..c^C`].
            /* 0810 */  0x42, 0x3E, 0x18, 0x78, 0x1A, 0x86, 0xF3, 0x64,  // B>.x...d
            /* 0818 */  0x39, 0x9C, 0x27, 0xCB, 0xC7, 0xE2, 0x5B, 0x08,  // 9.'...[.
            /* 0820 */  0xF8, 0x6E, 0x14, 0xB8, 0xD9, 0x82, 0x11, 0x1E,  // .n......
            /* 0828 */  0x23, 0x78, 0xA4, 0xF4, 0x26, 0x04, 0x0B, 0xFB,  // #x..&...
            /* 0830 */  0x4C, 0x7D, 0x45, 0x78, 0xF0, 0xF5, 0xD5, 0x1C,  // L}Ex....
            /* 0838 */  0x03, 0xEB, 0x91, 0x72, 0x58, 0x83, 0x86, 0x3D,  // ...rX..=
            /* 0840 */  0xE0, 0x87, 0x0A, 0xDC, 0xBD, 0xD6, 0xA3, 0x65,  // .......e
            /* 0848 */  0x8A, 0x35, 0xFC, 0xFF, 0x41, 0x59, 0x18, 0x72,  // .5..AY.r
            /* 0850 */  0x05, 0x5B, 0x08, 0x85, 0xF1, 0x1D, 0x0A, 0x70,  // .[.....p
            /* 0858 */  0x74, 0x7F, 0xC1, 0xDD, 0xA1, 0xE0, 0x8E, 0x80,  // t.......
            /* 0860 */  0x9D, 0x45, 0x5E, 0xA1, 0x62, 0x3D, 0x43, 0x33,  // .E^.b=C3
            /* 0868 */  0xD0, 0x38, 0x8F, 0x44, 0x3E, 0x73, 0x30, 0xCD,  // .8.D>s0.
            /* 0870 */  0xC3, 0xD3, 0x95, 0xC8, 0x04, 0xBE, 0x45, 0xC1,  // ......E.
            /* 0878 */  0xC5, 0x78, 0x86, 0xF2, 0xD1, 0xC9, 0x20, 0x2F,  // .x.... /
            /* 0880 */  0x52, 0xCF, 0x50, 0xBE, 0x3B, 0x3D, 0x39, 0x05,  // R.P.;=9.
            /* 0888 */  0x3A, 0xD4, 0xB7, 0x28, 0x1F, 0x02, 0x8F, 0xC0,  // :..(....
            /* 0890 */  0xB7, 0x28, 0x1F, 0xA5, 0x9E, 0xA0, 0x8C, 0xF2,  // .(......
            /* 0898 */  0xF4, 0x10, 0x34, 0x4E, 0xC4, 0x68, 0x31, 0x0D,  // ..4N.h1.
            /* 08A0 */  0x15, 0x28, 0xCA, 0x6B, 0x54, 0xB4, 0xB7, 0x28,  // .(.kT..(
            /* 08A8 */  0xF0, 0x8A, 0xB9, 0x45, 0x01, 0xA9, 0xFF, 0xFF,  // ...E....
            /* 08B0 */  0x2D, 0x0A, 0x30, 0x7A, 0x41, 0xC2, 0xDD, 0xA2,  // -.0zA...
            /* 08B8 */  0xC0, 0x72, 0x71, 0x60, 0x07, 0x07, 0xDC, 0xBD,  // .rq`....
            /* 08C0 */  0x01, 0xCE, 0x35, 0x0A, 0xF0, 0x92, 0xE7, 0x1A,  // ..5.....
            /* 08C8 */  0x45, 0x2F, 0x52, 0xBE, 0x46, 0xF1, 0x6B, 0xA9,  // E/R.F.k.
            /* 08D0 */  0x15, 0x01, 0x69, 0x9A, 0x60, 0xF8, 0xFF, 0x9F,  // ..i.`...
            /* 08D8 */  0x09, 0xD8, 0x45, 0x0A, 0x60, 0xFE, 0xFF, 0xFF,  // ..E.`...
            /* 08E0 */  0x22, 0x05, 0xFC, 0xE2, 0x49, 0x00, 0x65, 0x81,  // "...I.e.
            /* 08E8 */  0xC8, 0x15, 0x08, 0x06, 0x75, 0x91, 0x02, 0x1C,  // ....u...
            /* 08F0 */  0xDD, 0x8C, 0xC0, 0x79, 0x53, 0xC1, 0xDD, 0xAA,  // ...yS...
            /* 08F8 */  0xE0, 0xDE, 0x53, 0x70, 0x07, 0x5D, 0xDF, 0x76,  // ..Sp.].v
            /* 0900 */  0x3C, 0x8C, 0x30, 0xAF, 0x3B, 0x06, 0x8A, 0xF7,  // <.0.;...
            /* 0908 */  0x8C, 0xE3, 0xAB, 0xC2, 0xF3, 0x43, 0x90, 0x18,  // .....C..
            /* 0910 */  0xE7, 0x62, 0xB8, 0xD7, 0x2A, 0x2C, 0x9C, 0x87,  // .b..*,..
            /* 0918 */  0x6A, 0x02, 0xBB, 0xBF, 0x48, 0xE9, 0xE0, 0xF2,  // j...H...
            /* 0920 */  0xA4, 0x70, 0x86, 0x87, 0x14, 0xE1, 0x6D, 0xEA,  // .p....m.
            /* 0928 */  0x51, 0xEA, 0x7D, 0xEA, 0x55, 0x2A, 0xC6, 0x83,  // Q.}.U*..
            /* 0930 */  0x55, 0x8C, 0xE7, 0x2A, 0x63, 0x3E, 0x5C, 0xBD,  // U..*c>\.
            /* 0938 */  0xF9, 0xBC, 0xEC, 0x32, 0xAC, 0x18, 0x51, 0x42,  // ...2..QB
            /* 0940 */  0x7A, 0x74, 0x9E, 0xD7, 0xFF, 0x3F, 0xFA, 0xD3,  // zt...?..
            /* 0948 */  0x8D, 0x2F, 0xBF, 0x06, 0x0B, 0xD1, 0xFE, 0x42,  // ./.....B
            /* 0950 */  0xD8, 0xC2, 0x75, 0x29, 0xF1, 0x55, 0x0A, 0xE0,  // ..u).U..
            /* 0958 */  0xC3, 0xC4, 0x5F, 0xA5, 0xB0, 0xB1, 0x21, 0x64,  // .._...!d
            /* 0960 */  0x65, 0x3C, 0xA8, 0x81, 0x18, 0xFA, 0xA9, 0xC5,  // e<......
            /* 0968 */  0xD3, 0xF0, 0x91, 0xC3, 0x07, 0x79, 0x2C, 0x81,  // .....y,.
            /* 0970 */  0xC3, 0x9D, 0xFF, 0x41, 0x75, 0xA2, 0xF0, 0x21,  // ...Au..!
            /* 0978 */  0x02, 0x3C, 0x87, 0x1A, 0xDC, 0x01, 0x02, 0xC6,  // .<......
            /* 0980 */  0xFD, 0xC9, 0x78, 0x6F, 0x0B, 0xC7, 0x17, 0xC8,  // ..xo....
            /* 0988 */  0x04, 0x1E, 0x2B, 0xFF, 0xFF, 0x8F, 0x15, 0xDE,  // ..+.....
            /* 0990 */  0x3D, 0xC2, 0x13, 0xF4, 0xA9, 0xE1, 0x8D, 0xC3,  // =.......
            /* 0998 */  0x67, 0x63, 0x70, 0x9E, 0x32, 0xB0, 0x97, 0x0C,  // gcp.2...
            /* 09A0 */  0x18, 0x97, 0x30, 0xC0, 0xCC, 0x50, 0x11, 0xF7,  // ..0..P..
            /* 09A8 */  0x4E, 0x7A, 0xB8, 0x71, 0xB8, 0xB7, 0x01, 0x3D,  // Nz.q...=
            /* 09B0 */  0xDF, 0x00, 0x3E, 0xFF, 0xFF, 0xE7, 0x1B, 0xC0,  // ..>.....
            /* 09B8 */  0xC0, 0xA5, 0xC6, 0xE7, 0x1B, 0x60, 0x72, 0xF3,  // .....`r.
            /* 09C0 */  0x04, 0x78, 0x71, 0xBE, 0xC1, 0x9F, 0x15, 0xF8,  // .xq.....
            /* 09C8 */  0xFF, 0xFF, 0x90, 0x02, 0xA6, 0x33, 0x0E, 0xBB,  // .....3..
            /* 09D0 */  0xA5, 0xC0, 0x3F, 0xA5, 0x00, 0x5E, 0x24, 0xDE,  // ..?..^$.
            /* 09D8 */  0x3C, 0xA9, 0xBC, 0x9B, 0x27, 0xEA, 0xE4, 0x61,  // <...'..a
            /* 09E0 */  0x71, 0x54, 0x1A, 0x2A, 0x38, 0x25, 0x5C, 0x3E,  // qT.*8%\>
            /* 09E8 */  0x29, 0x84, 0xCF, 0x8F, 0x8E, 0x7E, 0x80, 0x44,  // )....~.D
            /* 09F0 */  0x85, 0x05, 0xA3, 0x20, 0xBE, 0x7C, 0xF2, 0xA3,  // ... .|..
            /* 09F8 */  0x13, 0xEE, 0x80, 0xE0, 0xB1, 0x3C, 0x93, 0x78,  // .....<.x
            /* 0A00 */  0x10, 0xC7, 0xE0, 0xF3, 0x23, 0xBC, 0xAB, 0x27,  // ....#..'
            /* 0A08 */  0x3B, 0x3F, 0xC2, 0x3E, 0x23, 0x81, 0xF3, 0x64,  // ;?.>#..d
            /* 0A10 */  0x80, 0xFB, 0xFF, 0x9F, 0x1F, 0xC1, 0x1D, 0x1C,  // ........
            /* 0A18 */  0x42, 0x67, 0x11, 0x9F, 0x1F, 0xC1, 0x8D, 0xF6,  // Bg......
            /* 0A20 */  0xFC, 0x08, 0xF3, 0xB4, 0x01, 0x1F, 0x10, 0x7F,  // ........
            /* 0A28 */  0x83, 0x78, 0x0F, 0xF1, 0x04, 0x0C, 0xC8, 0x06,  // .x......
            /* 0A30 */  0xF8, 0x90, 0x03, 0x96, 0xCB, 0x02, 0xBB, 0x7D,  // .......}
            /* 0A38 */  0x81, 0x41, 0xA1, 0x4D, 0x9F, 0x1A, 0x8D, 0x5A,  // .A.M...Z
            /* 0A40 */  0x35, 0x28, 0x53, 0xA3, 0x4C, 0x83, 0x5A, 0x7D,  // 5(S.L.Z}
            /* 0A48 */  0x2A, 0x35, 0x66, 0x4C, 0xE5, 0x20, 0x7D, 0x64,  // *5fL. }d
            /* 0A50 */  0xA0, 0x42, 0x16, 0xAC, 0x11, 0x3B, 0x06, 0x08,  // .B...;..
            /* 0A58 */  0x95, 0x7C, 0xD6, 0x14, 0x88, 0xC3, 0x2D, 0x5C,  // .|....-\
            /* 0A60 */  0x80, 0x0E, 0xF5, 0x7A, 0x12, 0x90, 0x25, 0x2D,  // ...z..%-
            /* 0A68 */  0x4A, 0x20, 0x16, 0x61, 0x02, 0x84, 0x89, 0x56,  // J .a...V
            /* 0A70 */  0x01, 0xC8, 0x84, 0x2E, 0x50, 0x40, 0x8E, 0x09,  // ....P@..
            /* 0A78 */  0x42, 0xA3, 0xE8, 0x80, 0x68, 0x04, 0x44, 0xB9,  // B...h.D.
            /* 0A80 */  0x40, 0x04, 0xE4, 0x0C, 0x3E, 0x80, 0x58, 0x22,  // @...>.X"
            /* 0A88 */  0x10, 0x01, 0x39, 0xFF, 0xF3, 0x40, 0xE0, 0xCE,  // ..9..@..
            /* 0A90 */  0xAC, 0x04, 0x88, 0x29, 0x76, 0x02, 0xC2, 0x94,  // ...)v...
            /* 0A98 */  0x3D, 0x25, 0x04, 0x6A, 0x99, 0x20, 0x1A, 0x0C,  // =%.j. ..
            /* 0AA0 */  0xD1, 0x02, 0xC4, 0x04, 0x82, 0x08, 0xC8, 0x71,  // .......q
            /* 0AA8 */  0xBC, 0x80, 0xB3, 0x20, 0x66, 0x80, 0xD8, 0xFF,  // ... f...
            /* 0AB0 */  0x5F, 0xC6, 0x8F, 0x58, 0x20, 0x0E, 0xED, 0x06,  // _..X ...
            /* 0AB8 */  0x94, 0x29, 0x78, 0x4A, 0x08, 0xC8, 0x69, 0x41,  // .)xJ..iA
            /* 0AC0 */  0x04, 0xE4, 0xEC, 0x40, 0x54, 0xAF, 0x1E, 0x70,  // ...@T..p
            /* 0AC8 */  0xA6, 0xF3, 0x35, 0x20, 0x20, 0xA7, 0x04, 0xA1,  // ..5  ...
            /* 0AD0 */  0x99, 0x14, 0x81, 0xB2, 0x80, 0x20, 0x02, 0x72,  // ..... .r
            /* 0AD8 */  0x18, 0x47, 0x40, 0x2C, 0x1A, 0x88, 0x4E, 0x19,  // .G@,..N.
            /* 0AE0 */  0xC4, 0x12, 0x38, 0x93, 0xE3, 0x09, 0x90, 0x82,  // ..8.....
            /* 0AE8 */  0x50, 0x91, 0x0F, 0x3E, 0x81, 0x38, 0x3C, 0x08,  // P..>.8<.
            /* 0AF0 */  0x0D, 0x64, 0x0A, 0x8C, 0xAA, 0x02, 0x61, 0x12,  // .d....a.
            /* 0AF8 */  0x5C, 0x81, 0xB0, 0x78, 0x20, 0x34, 0xC4, 0xF3,  // \..x 4..
            /* 0B00 */  0x41, 0x20, 0x96, 0xFA, 0x60, 0x0A, 0x42, 0x04,  // A ..`.B.
            /* 0B08 */  0xBD, 0x9C, 0x05, 0xE2, 0xD8, 0x20, 0x34, 0x9C,  // ..... 4.
            /* 0B10 */  0x2F, 0x10, 0x16, 0xE1, 0xCD, 0xA1, 0x41, 0x12,  // /.....A.
            /* 0B18 */  0x63, 0xC3, 0x61, 0x41, 0x7F, 0x50, 0x81, 0x88,  // c.aA.P..
            /* 0B20 */  0xCC, 0xEF, 0x86, 0xEE, 0xD4, 0xE4, 0xC5, 0x71,  // .......q
            /* 0B28 */  0x60, 0x44, 0x19, 0x88, 0x80, 0xAC, 0xE2, 0x05,  // `D......
            /* 0B30 */  0x15, 0x88, 0x68, 0x02, 0x11, 0x90, 0xB5, 0xBD,  // ..h.....
            /* 0B38 */  0xA3, 0x82, 0x13, 0x4D, 0xEA, 0x80, 0x58, 0x22,  // ...M..X"
            /* 0B40 */  0x10, 0xAA, 0x5E, 0x1E, 0x28, 0x8B, 0x02, 0x22,  // ..^.(.."
            /* 0B48 */  0x20, 0xCB, 0xB6, 0x07, 0xC4, 0x42, 0x80, 0x68,  //  ....B.h
            /* 0B50 */  0x98, 0xE4, 0x47, 0xAD, 0x63, 0x00, 0x79, 0x87,  // ..G.c.y.
            /* 0B58 */  0xE8, 0x18, 0x40, 0x7E, 0x1F, 0x07, 0xCA, 0x40,  // ..@~...@
            /* 0B60 */  0xA8, 0xD4, 0x77, 0x48, 0x40, 0x22, 0xF3, 0x51,  // ..wH@".Q
            /* 0B68 */  0x22, 0x20, 0x87, 0x04, 0xA1, 0xA1, 0x3C, 0x0E,  // " ....<.
            /* 0B70 */  0x81, 0x45, 0x04, 0x11, 0x90, 0xFF, 0xFF         // .E.....
        })
    }

    OperationRegion (SKYR, SystemMemory, SKWB, 0x0400)
    Field (SKYR, ByteAcc, Lock, Preserve)
    {
        SKSG,   32, 
        SKLG,   16, 
        SKVR,   16, 
        SKCR,   16, 
        SKCM,   16, 
        SKRV,   32, 
        SCMD,   16, 
        REVD,   16, 
        ST00,   1, 
        ST01,   1, 
        INTP,   14, 
        DECP,   15, 
        ST31,   1, 
        RT00,   16, 
        RT01,   16, 
        RT02,   16, 
        RT03,   16, 
        RT04,   16, 
        RT05,   16, 
        RT06,   16, 
        RT07,   16, 
        RT08,   16, 
        RT09,   16, 
        BUFF,   7760
    }

    Field (SKYR, ByteAcc, Lock, Preserve)
    {
        Offset (0x14), 
            ,   1, 
            ,   1, 
        ST02,   1, 
        ST03,   1, 
        ST04,   1, 
        ST05,   1, 
        Offset (0x16), 
            ,   4, 
        TMEC,   11
    }

    OperationRegion (TMMA, SystemMemory, THEM, One)
    Field (TMMA, ByteAcc, Lock, Preserve)
    {
        TITM,   8
    }

    OperationRegion (ERRC, SystemMemory, ERRO, 0x02)
    Field (ERRC, ByteAcc, Lock, Preserve)
    {
        CBUF,   8, 
        KBDT,   8
    }

    OperationRegion (TPMP, SystemIO, LSMB, One)
    Field (TPMP, ByteAcc, NoLock, Preserve)
    {
        SMIL,   8
    }

    OperationRegion (HWMB, SystemIO, 0x0A20, 0x03)
    Field (HWMB, ByteAcc, NoLock, Preserve)
    {
        HA20,   8, 
        HA21,   8, 
        HA22,   8
    }

    OperationRegion (DEB0, SystemIO, 0x80, One)
    Field (DEB0, ByteAcc, NoLock, Preserve)
    {
        DBG8,   8
    }

    Method (GTEC, 2, NotSerialized)
    {
        HA20 = 0xFF
        HA20 = Arg0
        HA21 = Arg1
        Local0 = HA22 /* \HA22 */
        HA20 = 0xFF
        Return (Local0)
    }

    Method (STEC, 3, NotSerialized)
    {
        HA20 = 0xFF
        HA20 = Arg0
        HA21 = Arg1
        HA22 = Arg2
        HA20 = 0xFF
    }

    Method (HWM0, 1, NotSerialized)
    {
        HA20 = 0xFF
        HA20 = Zero
        HA21 = Arg0
        Local0 = HA22 /* \HA22 */
        HA20 = 0xFF
        Return (Local0)
    }

    Method (HWR0, 1, NotSerialized)
    {
        HA20 = 0xFF
        HA20 = Zero
        HA21 = Arg0
        HA22 = One
        HA20 = 0xFF
    }

    Device (LBAI)
    {
        Name (_HID, EisaId ("LEN4001"))  // _HID: Hardware ID
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If (CondRefOf (\_OSI, Local0))
            {
                If (_OSI ("Linux"))
                {
                    Return (Zero)
                }
            }

            If ((((BDID >= Zero) && (BDID < 0x20)) || (BDID == 
                0x24)))
            {
                Return (Zero)
            }

            If ((BDID == 0x35))
            {
                Return (Zero)
            }

            Return (0x0F)
        }

        Method (LSMI, 1, NotSerialized)
        {
            Local0 = Arg0
        }

        Method (LNVS, 0, Serialized)
        {
            If ((SKSG != 0x42444D50))
            {
                Local0 = One
            }

            Switch (SKCM)
            {
                Case (One)
                {
                }
                Case (0x02)
                {
                    BTCL (SCMD)
                }
                Case (0x03)
                {
                    ALCL ()
                }
                Case (0x04)
                {
                    MMCL (SCMD)
                }
                Case (0x05)
                {
                    VMCL (SCMD)
                }
                Case (0x06)
                {
                    PMCL (SCMD)
                }
                Case (0x07)
                {
                    TMCL (SCMD)
                }
                Case (0x08)
                {
                    CADS (SCMD)
                }
                Case (0x09)
                {
                    BKIT (SCMD)
                }
                Case (0x10)
                {
                    FSCM (SCMD)
                }
                Case (0x11)
                {
                    PHST (SCMD)
                }
                Case (0x12)
                {
                    USBC (SCMD)
                }
                Default
                {
                    Local0 = 0x02
                }

            }

            Return (Local0)
        }

        Method (LADR, 0, NotSerialized)
        {
            Return (SKWB) /* \SKWB */
        }

        Mutex (MLHK, 0x07)
        Name (EVID, Zero)
        Name (EFLG, Zero)
        Name (EBUF, Zero)
        Method (LHKP, 0, NotSerialized)
        {
            Acquire (MLHK, 0xFFFF)
            Local0 = EVID /* \LBAI.EVID */
            Release (MLHK)
            Return (Local0)
        }

        Method (LHKQ, 1, NotSerialized)
        {
            Acquire (MLHK, 0xFFFF)
            EVID = Arg0
            Release (MLHK)
            Notify (LBAI, 0x80) // Status Change
        }

        Method (WFCL, 1, NotSerialized)
        {
        }

        Method (BTCL, 1, NotSerialized)
        {
        }

        Method (ALCL, 0, NotSerialized)
        {
        }

        Method (MMCL, 1, NotSerialized)
        {
        }

        Method (VMCL, 1, NotSerialized)
        {
        }

        Name (PMTR, Package (0xEC)
        {
            0x5704, 
            0xA016, 
            0xE9AC, 
            0x000133C3, 
            0x00017E56, 
            0x0001C95F, 
            0x000214DB, 
            0x000260C6, 
            0x0002AD1C, 
            0x0002F9DB, 
            0x000346FF, 
            0x00039486, 
            0x0003E26C, 
            0x000430AF, 
            0x00047F4D, 
            0x0004CE43, 
            0x00051D90, 
            0x00056D31, 
            0x0005BD24, 
            0x00060D67, 
            0x00065DF9, 
            0x0006AED8, 
            0x00070003, 
            0x00075177, 
            0x0007A334, 
            0x0007F538, 
            0x00084781, 
            0x00089A0F, 
            0x0008ECDF, 
            0x00093FF2, 
            0x00099346, 
            0x0009E6D9, 
            0x000A3AAA, 
            0x000A8EBA, 
            0x000AE306, 
            0x000B378D, 
            0x000B8C4F, 
            0x000BE14B, 
            0x000C3680, 
            0x000C8BEE, 
            0x000CE192, 
            0x000D376D, 
            0x000D8D7E, 
            0x000DE3C3, 
            0x000E3A3D, 
            0x000E90EB, 
            0x000EE7CB, 
            0x000F3EDE, 
            0x000F9623, 
            0x000FED98, 
            0x0010453D, 
            0x00109D13, 
            0x0010F518, 
            0x00114D4C, 
            0x0011A5AE, 
            0x0011FE3D, 
            0x001256F9, 
            0x0012AFE2, 
            0x001308F7, 
            0x00136238, 
            0x0013BBA4, 
            0x0014153A, 
            0x00146EFB, 
            0x0014C8E5, 
            0x001522F9, 
            0x00157D36, 
            0x0015D79B, 
            0x00163229, 
            0x00168CDE, 
            0x0016E7BB, 
            0x001742BE, 
            0x00179DE8, 
            0x0017F939, 
            0x001854AF, 
            0x0018B04B, 
            0x00190C0C, 
            0x001967F2, 
            0x0019C3FC, 
            0x001A202B, 
            0x001A7C7D, 
            0x001AD8F3, 
            0x001B358D, 
            0x001B9249, 
            0x001BEF28, 
            0x001C4C2A, 
            0x001CA94E, 
            0x001D0693, 
            0x001D63FA, 
            0x001DC183, 
            0x001E1F2C, 
            0x001E7CF7, 
            0x001EDAE1, 
            0x001F38EB, 
            0x001F9718, 
            0x001FF563, 
            0x002053CD, 
            0x0020B257, 
            0x00211100, 
            0x00216FC8, 
            0x0021CEAF, 
            0x00222DB4, 
            0x00228CD7, 
            0x0022EC18, 
            0x00234B78, 
            0x0023AAF4, 
            0x00240A8E, 
            0x00246A45, 
            0x0024CA1A, 
            0x00252A0B, 
            0x00258A18, 
            0x0025EA42, 
            0x00264A89, 
            0x0026AAEB, 
            0x00270B69, 
            0x00276C03, 
            0x0027CCB8, 
            0x00282D89, 
            0x00288E75, 
            0x0028EF7C, 
            0x0029509E, 
            0x0029B1DA, 
            0x002A1331, 
            0x002A74A2, 
            0x002AD62E, 
            0x002B37D3, 
            0x002B9993, 
            0x002BFB6C, 
            0x002C5D5E, 
            0x002CBF6B, 
            0x002D2190, 
            0x002D83CE, 
            0x002DE626, 
            0x002E4896, 
            0x002EAB1F, 
            0x002F0DC1, 
            0x002F707B, 
            0x002FD34E, 
            0x00303638, 
            0x0030993B, 
            0x0030FC55, 
            0x00315F88, 
            0x0031C2D2, 
            0x00322633, 
            0x003289AC, 
            0x0032ED3C, 
            0x003350E4, 
            0x0033B4A2, 
            0x00341878, 
            0x00347C64, 
            0x0034E067, 
            0x00354480, 
            0x0035A8B0, 
            0x00360CF6, 
            0x00367153, 
            0x0036D5C6, 
            0x00373A4E, 
            0x00379EED, 
            0x003803A1, 
            0x0038686B, 
            0x0038CD4B, 
            0x00393241, 
            0x0039974B, 
            0x0039FC6B, 
            0x003A61A0, 
            0x003AC6EB, 
            0x003B2C4A, 
            0x003B91BE, 
            0x003BF747, 
            0x003C5CE5, 
            0x003CC297, 
            0x003D285E, 
            0x003D8E39, 
            0x003DF429, 
            0x003E5A2D, 
            0x003EC045, 
            0x003F2671, 
            0x003F8CB2, 
            0x003FF306, 
            0x0040596E, 
            0x0040BFE9, 
            0x00412678, 
            0x00418D1B, 
            0x0041F3D2, 
            0x00425A9B, 
            0x0042C179, 
            0x00432869, 
            0x00438F6C, 
            0x0043F683, 
            0x00445DAC, 
            0x0044C4E9, 
            0x00452C38, 
            0x0045939A, 
            0x0045FB0F, 
            0x00466297, 
            0x0046CA31, 
            0x004731DD, 
            0x0047999C, 
            0x0048016D, 
            0x00486950, 
            0x0048D146, 
            0x0049394E, 
            0x0049A168, 
            0x004A0993, 
            0x004A71D1, 
            0x004ADA20, 
            0x004B4282, 
            0x004BAAF5, 
            0x004C1379, 
            0x004C7C0F, 
            0x004CE4B7, 
            0x004D4D70, 
            0x004DB63B, 
            0x004E1F16, 
            0x004E8803, 
            0x004EF102, 
            0x004F5A11, 
            0x004FC331, 
            0x00502C63, 
            0x005095A5, 
            0x0050FEF8, 
            0x0051685C, 
            0x0051D1D1, 
            0x00523B56, 
            0x0052A4EC, 
            0x00530E93, 
            0x0053784A, 
            0x0053E212, 
            0x00544BEA, 
            0x0054B5D2, 
            0x00551FCB, 
            0x005589D4, 
            0x0055F3ED, 
            0x00565E17, 
            0x0056C850, 
            0x00573299, 
            0x00579CF3
        })
        Name (PMTT, Package (0xE9)
        {
            0x342C, 
            0x5323, 
            0x7225, 
            0x9131, 
            0xB046, 
            0xCF67, 
            0xEE8E, 
            0x00010DC0, 
            0x00012CF8, 
            0x00014C3A, 
            0x00014C3A, 
            0x245A, 
            0x00018AD5, 
            0x0001AA2E, 
            0x0001C98F, 
            0x0001E8F7, 
            0x00020865, 
            0x000227DA, 
            0x00024757, 
            0x000266D9, 
            0x00028662, 
            0x0002A5F1, 
            0x0002C586, 
            0x0002E521, 
            0x000304C2, 
            0x00032469, 
            0x00034415, 
            0x000363C6, 
            0x0003837D, 
            0x0003A339, 
            0x0003C2FB, 
            0x0003E2C1, 
            0x0004028D, 
            0x0004225D, 
            0x00044232, 
            0x0004620C, 
            0x000481EA, 
            0x0004A1CD, 
            0x0004C1B5, 
            0x0004E1A1, 
            0x00050191, 
            0x00052186, 
            0x0005417E, 
            0x0005617B, 
            0x0005817C, 
            0x0005A181, 
            0x0005C18A, 
            0x0005E197, 
            0x000601A8, 
            0x000621BD, 
            0x000641D5, 
            0x000661F1, 
            0x00068211, 
            0x0006A235, 
            0x0006C25C, 
            0x0006E286, 
            0x000702B4, 
            0x000722E6, 
            0x0007431A, 
            0x00076353, 
            0x0007838E, 
            0x0007A3CD, 
            0x0007C40F, 
            0x0007E454, 
            0x0008049D, 
            0x000824E8, 
            0x00084537, 
            0x00086589, 
            0x000885DD, 
            0x0008A635, 
            0x0008C690, 
            0x0008E6EE, 
            0x0009074E, 
            0x000927B2, 
            0x00094818, 
            0x00096881, 
            0x000988ED, 
            0x0009A95C, 
            0x0009C9CD, 
            0x0009EA41, 
            0x000A0AB8, 
            0x000A2B32, 
            0x000A4BAE, 
            0x000A6C2D, 
            0x000A8CAE, 
            0x000AAD32, 
            0x000ACDB8, 
            0x000AEE41, 
            0x000B0ECD, 
            0x000B2F5B, 
            0x000B4FEB, 
            0x000B707E, 
            0x000B9113, 
            0x000BB1AB, 
            0x000BD245, 
            0x000BF2E1, 
            0x000C1380, 
            0x000C3421, 
            0x000C54C5, 
            0x000C756A, 
            0x000C9612, 
            0x000CB6BC, 
            0x000CD768, 
            0x000CF817, 
            0x000D18C8, 
            0x000D397B, 
            0x000D5A30, 
            0x000D7AE7, 
            0x000D9BA0, 
            0x000DBC5C, 
            0x000DDD19, 
            0x000DFDD9, 
            0x000E1E9B, 
            0x000E3F5E, 
            0x000E6024, 
            0x000E80EC, 
            0x000EA1B6, 
            0x000EC282, 
            0x000EE34F, 
            0x000F041F, 
            0x000F24F1, 
            0x000F45C5, 
            0x000F669A, 
            0x000F8772, 
            0x000FA84B, 
            0x000FC926, 
            0x000FEA03, 
            0x00100AE2, 
            0x00102BC3, 
            0x00104CA6, 
            0x00106D8A, 
            0x00108E71, 
            0x0010AF59, 
            0x0010D043, 
            0x0010F12F, 
            0x0011121C, 
            0x0011330B, 
            0x001153FC, 
            0x001174EF, 
            0x001195E4, 
            0x0011B6DA, 
            0x0011D7D2, 
            0x0011F8CB, 
            0x001219C7, 
            0x00123AC4, 
            0x00125BC2, 
            0x00127CC3, 
            0x00129DC4, 
            0x0012BEC8, 
            0x0012DFCD, 
            0x001300D4, 
            0x001321DD, 
            0x001342E7, 
            0x001363F2, 
            0x00138500, 
            0x0013A60E, 
            0x0013C71F, 
            0x0013E831, 
            0x00140944, 
            0x00142A59, 
            0x00144B70, 
            0x00146C88, 
            0x00148DA2, 
            0x0014AEBD, 
            0x0014CFD9, 
            0x0014F0F7, 
            0x00151217, 
            0x00153338, 
            0x0015545B, 
            0x0015757F, 
            0x001596A4, 
            0x0015B7CB, 
            0x0015D8F4, 
            0x0015FA1D, 
            0x00161B49, 
            0x00163C75, 
            0x00165DA4, 
            0x00167ED3, 
            0x0016A004, 
            0x0016C136, 
            0x0016E26A, 
            0x0017039F, 
            0x001724D5, 
            0x0017460D, 
            0x00176747, 
            0x00178881, 
            0x0017A9BD, 
            0x0017CAFA, 
            0x0017EC39, 
            0x00180D79, 
            0x00182EBA, 
            0x00184FFC, 
            0x00187140, 
            0x00189285, 
            0x0018B3CC, 
            0x0018D514, 
            0x0018F65D, 
            0x001917A7, 
            0x001938F3, 
            0x00195A40, 
            0x00197B8E, 
            0x00199CDD, 
            0x0019BE2E, 
            0x0019DF80, 
            0x001A00D3, 
            0x001A2227, 
            0x001A437D, 
            0x001A64D4, 
            0x001A862C, 
            0x001AA785, 
            0x001AC8E0, 
            0x001AEA3C, 
            0x001B0B99, 
            0x001B2CF7, 
            0x001B4E56, 
            0x001B6FB7, 
            0x001B9118, 
            0x001BB27B, 
            0x001BD3DF, 
            0x001BF544, 
            0x001C16AB, 
            0x001C3812, 
            0x001C597B, 
            0x001C7AE5, 
            0x001C9C50, 
            0x001CBDBC, 
            0x001CDF2A, 
            0x001D0098, 
            0x001D2208, 
            0x001D4378, 
            0x001D64EA, 
            0x001D865D, 
            0x001DA7D1
        })
        Method (PMCL, 1, NotSerialized)
        {
            ST00 = One
            ST01 = Zero
            Local0 = HWMG (0x3E)
            If (((BDID >= 0x30) && (BDID <= 0x36)))
            {
                ST01 = One
            }
            ElseIf ((Local0 < 0x14))
            {
                ST31 = One
                INTP = Zero
                DECP = Zero
            }
            Else
            {
                Local0 -= 0x14
                Local1 = DerefOf (PMTR [Local0])
                Divide (Local1, 0x2710, Local1, Local0)
                INTP = Local0
                DECP = Local1
                ST31 = Zero
            }
        }

        Method (TMCL, 1, NotSerialized)
        {
            Acquire (MLHK, 0xFFFF)
            Local1 = Zero
            ST00 = One
            ST01 = Zero
            ST02 = Zero
            ST03 = Zero
            ST04 = Zero
            ST05 = Zero
            RT06 = GFAN (Zero)
            RT07 = GFAN (One)
            RT08 = GFAN (0x02)
            RT09 = GFAN (0x03)
            RT00 = GTEM (Zero)
            If ((RT00 == Zero)){}
            Else
            {
                ST31 = Zero
            }

            RT01 = GTEM (One)
            If ((RT00 == Zero)){}
            Else
            {
                ST31 = Zero
            }

            RT02 = GTEM (0x02)
            If ((RT00 == Zero)){}
            Else
            {
                ST31 = Zero
            }

            RT03 = GTEM (0x03)
            If ((RT00 == Zero)){}
            Else
            {
                ST31 = Zero
            }

            ST31 = Zero
            If ((EVID == 0x1005))
            {
                TMEC = EBUF /* \LBAI.EBUF */
            }

            Release (MLHK)
        }

        Method (HWMG, 1, NotSerialized)
        {
            HA20 = 0xFF
            HA20 = One
            HA21 = Arg0
            Local0 = HA22 /* \HA22 */
            HA20 = 0xFF
            Return (Local0)
        }

        Method (HWM3, 1, NotSerialized)
        {
            HA20 = 0xFF
            HA20 = 0x03
            HA21 = Arg0
            Local0 = HA22 /* \HA22 */
            HA20 = 0xFF
            Return (Local0)
        }

        Method (GFAN, 1, NotSerialized)
        {
            Local0 = Zero
            Local1 = Zero
            If ((Arg0 == Zero))
            {
                Local1 = HWMG (0x40)
                Local0 = (HWMG (0x41) | (Local1 << 0x08))
            }

            If ((Arg0 == One))
            {
                Local1 = HWMG (0x42)
                Local0 = (HWMG (0x43) | (Local1 << 0x08))
            }

            If ((Arg0 == 0x02))
            {
                Local1 = HWMG (0x44)
                Local0 = (HWMG (0x45) | (Local1 << 0x08))
            }

            If ((Arg0 == 0x03))
            {
                Local1 = HWMG (0x46)
                Local0 = (HWMG (0x47) | (Local1 << 0x08))
            }

            Return (Local0)
        }

        Method (GTEM, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                Local0 = GETT (0x02)
            }

            If ((Arg0 == One))
            {
                Local0 = GETT (Zero)
            }

            If ((Arg0 == 0x02))
            {
                Local0 = GETT (0x04)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = GETT (0x06)
            }

            Return (Local0)
        }

        Method (GETT, 1, NotSerialized)
        {
            Local0 = Zero
            Local1 = Zero
            Local2 = Zero
            Local3 = Zero
            Local4 = Zero
            Local5 = Zero
            Local6 = Zero
            Local2 = Arg0
            Local3 = (Arg0 + One)
            Local4 = HWMG (Local3)
            If ((Local4 == 0x80))
            {
                Local1 = 0x05
                If ((HWMG (Local2) == 0x7F))
                {
                    Return (Zero)
                }
            }

            Local4 = HWMG (Local2)
            If ((Local4 & 0x80))
            {
                Local4 = ~Local4
                Local4 += One
                Local0 = (TMAX - Local4)
            }
            Else
            {
                Local0 = HWMG (Local2)
            }

            Local0 |= (Local1 << 0x08)
            Return (Local0)
        }

        Method (CADS, 1, NotSerialized)
        {
            ST00 = One
            ST01 = Zero
            ST31 = Zero
        }

        Method (BKIT, 1, NotSerialized)
        {
            ST00 = One
            ST01 = One
            If (BRDT)
            {
                If (((HWM0 (0x56) & One) && (GTEC (One, 0x0C) <= 
                    0x3A)))
                {
                    ST02 = One
                    HWR0 (0x56)
                }
                Else
                {
                    ST02 = Zero
                }
            }
            Else
            {
                ST02 = Zero
            }

            ST31 = Zero
        }

        Method (GFSC, 1, Serialized)
        {
            ST00 = One
            SMIL = 0x8E
            Switch (TITM)
            {
                Case (Zero)
                {
                    ST01 = Zero
                    ST02 = Zero
                }
                Case (One)
                {
                    ST01 = One
                    ST02 = Zero
                }
                Case (0x02)
                {
                    ST01 = Zero
                    ST02 = One
                }

            }

            ST31 = Zero
        }

        Method (SFSC, 1, NotSerialized)
        {
            If (ST00)
            {
                If (ST01)
                {
                    TITM = Zero
                }
                Else
                {
                    TITM = One
                }
            }
            ElseIf (ST01)
            {
                TITM = 0x02
            }
            Else
            {
                TITM = Zero
            }

            SMIL = 0x8F
            ST31 = Zero
        }

        Method (FSCM, 1, Serialized)
        {
            Switch (Arg0)
            {
                Case (Zero)
                {
                    GFSC (SCMD)
                }
                Case (One)
                {
                    SFSC (SCMD)
                }

            }
        }

        Method (PHST, 1, NotSerialized)
        {
            ST00 = One
            If ((HWMG (Zero) > HWM3 (0x50)))
            {
                ST01 = Zero
                ST02 = One
            }
            Else
            {
                ST01 = Zero
                ST02 = Zero
            }

            ST31 = Zero
        }

        Method (GUSB, 1, NotSerialized)
        {
            If (BRDT)
            {
                ST00 = One
                HA20 = 0xFF
                HA20 = 0x02
                HA21 = 0x50
                Local0 = (HA22 & 0x04)
                HA20 = 0xFF
                If ((Local0 == Zero))
                {
                    ST01 = Zero
                }
                Else
                {
                    ST01 = One
                }

                ST02 = Zero
                ST03 = One
                ST31 = Zero
            }
        }

        Method (SUSB, 1, Serialized)
        {
            If (BRDT)
            {
                Switch (ST00)
                {
                    Case (Zero)
                    {
                        HA20 = 0xFF
                        HA20 = 0x02
                        HA21 = 0x50
                        Local0 = (HA22 & 0xFB)
                        HA22 = Local0
                        HA20 = 0xFF
                        If ((Local0 == Zero))
                        {
                            ST31 = Zero
                        }
                        Else
                        {
                            ST31 = One
                        }
                    }
                    Case (One)
                    {
                        HA20 = 0xFF
                        HA20 = 0x02
                        HA21 = 0x50
                        Local0 = (HA22 | 0x04)
                        HA22 = Local0
                        HA20 = 0xFF
                        If ((Local0 == Zero))
                        {
                            ST31 = One
                        }
                        Else
                        {
                            ST31 = Zero
                        }
                    }

                }

                Switch (ST01)
                {
                    Case (Zero)
                    {
                        ST31 = One
                    }
                    Case (One)
                    {
                        ST31 = Zero
                    }

                }
            }
        }

        Method (USBC, 1, Serialized)
        {
            If (BRDT)
            {
                Switch (Arg0)
                {
                    Case (Zero)
                    {
                        GUSB (SCMD)
                    }
                    Case (One)
                    {
                        SUSB (SCMD)
                    }

                }
            }
        }
    }

    Scope (_GPE)
    {
        Method (_L13, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Local0 = CBUF /* \CBUF */
            SMIL = 0x8D
            Local1 = CBUF /* \CBUF */
            If (((CBUF != Zero) && (Local0 != Local1)))
            {
                If ((CBUF & 0x02))
                {
                    \LBAI.EBUF = One
                }

                If ((CBUF & 0x04))
                {
                    \LBAI.EBUF = 0x02
                }

                If ((CBUF & 0x10))
                {
                    \LBAI.EBUF = 0x04
                }

                If ((CBUF & 0x20))
                {
                    \LBAI.EBUF = 0x05
                }

                \LBAI.LHKQ (0x1005)
                CBUF = Zero
            }

            If (BRDT)
            {
                If ((HWM0 (0x56) & One))
                {
                    Sleep (0x0320)
                    If ((GTEC (One, 0x0C) <= 0x3A))
                    {
                        \LBAI.LHKQ (0x1041)
                    }
                }
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 00000114
[008h 0008   1]                     Revision : 06
[009h 0009   1]                     Checksum : 39
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036   4]                 FACS Address : D2A90C40
[028h 0040   4]                 DSDT Address : D2278230
[02Ch 0044   1]                        Model : 01
[02Dh 0045   1]                   PM Profile : 01 [Desktop]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00001800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00001804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00001850
[04Ch 0076   4]       PM Timer Block Address : 00001808
[050h 0080   4]           GPE0 Block Address : 00001880
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 20
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 10
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 0039
[064h 0100   2]               CPU Cache Size : 0400
[066h 0102   2]           Cache Flush Stride : 0010
[068h 0104   1]            Duty Cycle Offset : 00
[069h 0105   1]             Duty Cycle Width : 00
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0000
               Legacy Devices Supported (V2) : 0
            8042 Present on ports 60/64 (V2) : 0
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0003C6A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 0
                      Docking Supported (V1) : 1
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 1
                Remote Power-on capable (V4) : 1
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 00 [Undefined/Legacy]
[078h 0120   8]                      Address : 0000000000000CF9

[080h 0128   1]         Value to cause reset : 06
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 01
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000D2278230
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 02 [Word Access:16]
[098h 0152   8]                      Address : 0000000000001800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 02 [Word Access:16]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000001804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 02 [Word Access:16]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000001850

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000001808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 80
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 01 [Byte Access:8]
[0E0h 0224   8]                      Address : 0000000000001880

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 01 [Byte Access:8]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

[10Ch 0268   8]                Hypervisor ID : 0000000000000000

Raw Table Data: Length 276 (0x114)

    0000: 46 41 43 50 14 01 00 00 06 39 4C 45 4E 4F 56 4F  // FACP.....9LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 40 0C A9 D2 30 82 27 D2 01 01 09 00  // ....@...0.'.....
    0030: B2 00 00 00 A0 A1 00 00 00 18 00 00 00 00 00 00  // ................
    0040: 04 18 00 00 00 00 00 00 50 18 00 00 08 18 00 00  // ........P.......
    0050: 80 18 00 00 00 00 00 00 04 02 01 04 20 00 10 00  // ............ ...
    0060: 65 00 39 00 00 04 10 00 00 00 0D 00 32 00 00 00  // e.9.........2...
    0070: A5 C6 03 00 01 08 00 00 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 01 00 00 00 00 00 00 00 00 30 82 27 D2  // ............0.'.
    0090: 00 00 00 00 01 20 00 02 00 18 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 02 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 18 00 00 00 00 00 00 01 00 00 02 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 50 18 00 00 00 00 00 00  // ........P.......
    00D0: 01 20 00 03 08 18 00 00 00 00 00 00 01 80 00 01  // . ..............
    00E0: 80 18 00 00 00 00 00 00 01 00 00 01 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 192E478F
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 8F 47 2E 19 00 00 00 00  // FACS@....G......
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FIDT
----
[000h 0000   4]                    Signature : "FIDT"    
[004h 0004   4]                 Table Length : 0000009C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8A
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013


**** Unknown ACPI table signature [FIDT]


Raw Table Data: Length 156 (0x9C)

    0000: 46 49 44 54 9C 00 00 00 01 8A 4C 45 4E 4F 56 4F  // FIDT......LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 24 46 49 44 04 78 00 31 41 54 51 50  // ....$FID.x.1ATQP
    0030: 30 31 38 00 7C 6E C0 21 27 BD 62 84 02 38 61 C1  // 018.|n.!'.b..8a.
    0040: 3D E6 16 2C 30 35 00 31 32 00 30 30 00 31 38 00  // =..,05.12.00.18.
    0050: E1 07 05 03 0D 19 28 FF FF 4C 45 4E 4F 56 4F 41  // ......(..LENOVOA
    0060: 20 4D 20 49 00 00 00 31 00 00 00 FF FF FF FF FF  //  M I...1........
    0070: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0080: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0090: FF FF FF FF FF FF FF FF FF FF FF FF              // ............


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : D8
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013


[024h 0036   2]                Subtable Type : 0001
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]          S3PT Record Address : 00000000D2E0FE70

[034h 0052   2]                Subtable Type : 0000
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]     FPDT Boot Record Address : 00000000D2E0FE90

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 D8 4C 45 4E 4F 56 4F  // FPDTD.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 01 00 10 01 00 00 00 00 70 FE E0 D2  // ............p...
    0030: 00 00 00 00 00 00 10 01 00 00 00 00 90 FE E0 D2  // ................
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 9F
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]            Hardware Block ID : 8086A201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 40
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 9F 4C 45 4E 4F 56 4F  // HPET8.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 5F 00 00 00 01 A2 86 80 00 40 00 00 00 00 D0 FE  // _........@......
    0030: 00 00 00 00 00 80 00 00                          // ........


LPIT
----
[000h 0000   4]                    Signature : "LPIT"    [Low Power Idle Table]
[004h 0004   4]                 Table Length : 00000094
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E1
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                Subtable Type : 00000000 [Native C-state Idle Structure]
[028h 0040   4]                       Length : 00000038
[02Ch 0044   2]                    Unique ID : 0000
[02Eh 0046   2]                     Reserved : 0000
[030h 0048   4]        Flags (decoded below) : 00000000
                              State Disabled : 0
                                  No Counter : 0

[034h 0052  12]                Entry Trigger : [Generic Address Structure]
[034h 0052   1]                     Space ID : 7F [FunctionalFixedHW]
[035h 0053   1]                    Bit Width : 01
[036h 0054   1]                   Bit Offset : 02
[037h 0055   1]         Encoded Access Width : 00 [Undefined/Legacy]
[038h 0056   8]                      Address : 0000000000000060

[040h 0064   4]                    Residency : 00007530
[044h 0068   4]                      Latency : 00000BB8
[048h 0072  12]            Residency Counter : [Generic Address Structure]
[048h 0072   1]                     Space ID : 7F [FunctionalFixedHW]
[049h 0073   1]                    Bit Width : 40
[04Ah 0074   1]                   Bit Offset : 00
[04Bh 0075   1]         Encoded Access Width : 00 [Undefined/Legacy]
[04Ch 0076   8]                      Address : 0000000000000632

[054h 0084   8]            Counter Frequency : 0000000000000000

[05Ch 0092   4]                Subtable Type : 00000000 [Native C-state Idle Structure]
[060h 0096   4]                       Length : 00000038
[064h 0100   2]                    Unique ID : 0001
[066h 0102   2]                     Reserved : 0000
[068h 0104   4]        Flags (decoded below) : 00000000
                              State Disabled : 0
                                  No Counter : 0

[06Ch 0108  12]                Entry Trigger : [Generic Address Structure]
[06Ch 0108   1]                     Space ID : 7F [FunctionalFixedHW]
[06Dh 0109   1]                    Bit Width : 01
[06Eh 0110   1]                   Bit Offset : 02
[06Fh 0111   1]         Encoded Access Width : 00 [Undefined/Legacy]
[070h 0112   8]                      Address : 0000000000000060

[078h 0120   4]                    Residency : 00007530
[07Ch 0124   4]                      Latency : 00000BB8
[080h 0128  12]            Residency Counter : [Generic Address Structure]
[080h 0128   1]                     Space ID : 00 [SystemMemory]
[081h 0129   1]                    Bit Width : 20
[082h 0130   1]                   Bit Offset : 00
[083h 0131   1]         Encoded Access Width : 03 [DWord Access:32]
[084h 0132   8]                      Address : 00000000FE00013C

[08Ch 0140   8]            Counter Frequency : 0000000000002710


Raw Table Data: Length 148 (0x94)

    0000: 4C 50 49 54 94 00 00 00 01 E1 4C 45 4E 4F 56 4F  // LPIT......LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 5F 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  // _.......8.......
    0030: 00 00 00 00 7F 01 02 00 60 00 00 00 00 00 00 00  // ........`.......
    0040: 30 75 00 00 B8 0B 00 00 7F 40 00 00 32 06 00 00  // 0u.......@..2...
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0060: 38 00 00 00 01 00 00 00 00 00 00 00 7F 01 02 00  // 8...............
    0070: 60 00 00 00 00 00 00 00 30 75 00 00 B8 0B 00 00  // `.......0u......
    0080: 00 20 00 03 3C 01 00 FE 00 00 00 00 10 27 00 00  // . ..<........'..
    0090: 00 00 00 00                                      // ....


LUFT
----
[000h 0000   4]                    Signature : "LUFT"    
[004h 0004   4]                 Table Length : 000349E2
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 92
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013


**** Unknown ACPI table signature [LUFT]


Raw Table Data: Length 215522 (0x349E2)

    0000: 4C 55 46 54 E2 49 03 00 01 92 4C 45 4E 4F 56 4F  // LUFT.I....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 00 00 00 00 02 00 3A 00 00 00 5E 03  // ..........:...^.
    0030: 00 00 82 06 00 00 A6 09 00 00 55 53 42 46 00 00  // ..........USBF..
    0040: 00 00 00 00 00 00 F8 70 00 00 CA 0C 00 00 F8 8C  // .......p........
    0050: 00 00 C2 7D 00 00 7A 00 00 00 54 00 00 00 00 00  // ...}..z...T.....
    0060: 00 00 5C 00 00 00 00 00 00 00 64 00 00 00 00 00  // ..\.......d.....
    0070: 00 00 6C 00 00 00 00 00 00 00 04 00 00 00 8E 00  // ..l.............
    0080: 00 00 42 01 00 00 F6 01 00 00 AA 02 00 00 E2 29  // ..B............)
    0090: 03 00 72 00 00 00 05 00 00 00 B2 00 00 00 CA 00  // ..r.............
    00A0: 00 00 E2 00 00 00 FA 00 00 00 12 01 00 00 2A 01  // ..............*.
    00B0: 00 00 54 2A 03 00 18 00 00 00 01 00 00 00 6C 2A  // ..T*..........l*
    00C0: 03 00 0A 00 00 00 01 00 00 00 76 2A 03 00 0C 00  // ..........v*....
    00D0: 00 00 01 00 00 00 82 2A 03 00 0E 00 00 00 01 00  // .......*........
    00E0: 00 00 90 2A 03 00 0C 00 00 00 04 00 00 00 00 00  // ...*............
    00F0: 00 00 00 00 00 00 01 00 00 00 9C 2A 03 00 0A 00  // ...........*....
    0100: 00 00 04 00 00 00 01 00 00 00 00 00 00 00 01 00  // ................
    0110: 00 00 A6 2A 03 00 08 00 00 00 04 00 00 00 01 00  // ...*............
    0120: 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    0140: 00 00 AE 2A 03 00 C0 00 00 00 01 00 00 00 66 01  // ...*..........f.
    0150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0160: 00 00 00 00 00 00 6E 2B 03 00 1A 00 00 00 07 00  // ......n+........
    0170: 00 00 6C 2A 03 00 0A 00 00 00 03 00 00 00 00 00  // ..l*............
    0180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 88 2B 03 00 C0 00 00 00 01 00  // .......+........
    0200: 00 00 1A 02 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0210: 00 00 00 00 00 00 00 00 00 00 48 2C 03 00 1A 00  // ..........H,....
    0220: 00 00 07 00 00 00 6C 2A 03 00 0A 00 00 00 03 00  // ......l*........
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02A0: 00 00 00 00 00 00 00 00 00 00 62 2C 03 00 C0 00  // ..........b,....
    02B0: 00 00 01 00 00 00 CE 02 00 00 00 00 00 00 00 00  // ................
    02C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 48 2C  // ..............H,
    02D0: 03 00 1A 00 00 00 07 00 00 00 6C 2A 03 00 0A 00  // ..........l*....
    02E0: 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4C 55  // ..............LU
    0360: 46 54 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // FT..............
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0510: 00 00 00 00 00 00 AA 55 AA 55 00 00 00 00 00 00  // .......U.U......
    0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0680: 00 00 4C 55 46 54 00 00 00 00 00 00 00 00 00 00  // ..LUFT..........
    0690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0830: 00 00 00 00 00 00 00 00 00 00 AA 55 AA 55 00 00  // ...........U.U..
    0840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    08F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09A0: 00 00 00 00 00 00 4C 55 46 54 00 00 00 00 00 00  // ......LUFT......
    09B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    09F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA 55  // ...............U
    0B60: AA 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .U..............
    0B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0CC0: 00 00 00 00 00 00 00 00 00 00 4D 5A 90 00 03 00  // ..........MZ....
    0CD0: 00 00 04 00 00 00 FF FF 00 00 B8 00 00 00 00 00  // ................
    0CE0: 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..@.............
    0CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0D00: 00 00 00 00 00 00 58 02 00 00 0E 1F BA 0E 00 B4  // ......X.........
    0D10: 09 CD 21 B8 01 4C CD 21 54 68 69 73 20 70 72 6F  // ..!..L.!This pro
    0D20: 67 72 61 6D 20 63 61 6E 6E 6F 74 20 62 65 20 72  // gram cannot be r
    0D30: 75 6E 20 69 6E 20 44 4F 53 20 6D 6F 64 65 2E 0D  // un in DOS mode..
    0D40: 0D 0A 24 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..$.............
    0D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0EC0: 00 00 00 00 00 00 00 00 00 00 7D 23 26 F6 39 42  // ..........}#&.9B
    0ED0: 48 A5 39 42 48 A5 39 42 48 A5 39 42 49 A5 04 42  // H.9BH.9BH.9BI..B
    0EE0: 48 A5 FA 4D 15 A5 3C 42 48 A5 30 3A DD A5 38 42  // H..M..<BH.0:..8B
    0EF0: 48 A5 30 3A CB A5 33 42 48 A5 30 3A DC A5 38 42  // H.0:..3BH.0:..8B
    0F00: 48 A5 30 3A D9 A5 38 42 48 A5 52 69 63 68 39 42  // H.0:..8BH.Rich9B
    0F10: 48 A5 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // H...............
    0F20: 00 00 50 45 00 00 4C 01 06 00 3C 77 F2 55 00 00  // ..PE..L...<w.U..
    0F30: 00 00 00 00 00 00 E0 00 02 01 0B 01 09 00 80 3F  // ...............?
    0F40: 00 00 00 0A 00 00 00 00 00 00 BE 40 00 00 80 04  // ...........@....
    0F50: 00 00 00 3E 00 00 00 00 01 00 80 00 00 00 80 00  // ...>............
    0F60: 00 00 06 00 01 00 06 00 01 00 05 00 01 00 00 00  // ................
    0F70: 00 00 00 4E 00 00 80 04 00 00 35 32 01 00 01 00  // ...N......52....
    0F80: 00 04 00 00 04 00 00 10 00 00 00 00 10 00 00 10  // ................
    0F90: 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00  // ................
    0FA0: 00 00 D0 40 00 00 3C 00 00 00 80 46 00 00 40 03  // ...@..<....F..@.
    0FB0: 00 00 00 00 00 00 00 00 00 00 00 4E 00 00 F8 22  // ...........N..."
    0FC0: 00 00 00 4A 00 00 B0 02 00 00 E0 3E 00 00 1C 00  // ...J.......>....
    0FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0FF0: 00 00 00 00 00 00 00 00 00 00 00 3E 00 00 DC 00  // ...........>....
    1000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    1010: 00 00 00 00 00 00 00 00 00 00 2E 74 65 78 74 00  // ...........text.
    1020: 00 00 75 39 00 00 80 04 00 00 80 39 00 00 80 04  // ..u9.......9....
    1030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00  // .............. .
    1040: 00 68 2E 72 64 61 74 61 00 00 5F 01 00 00 00 3E  // .h.rdata.._....>
    1050: 00 00 80 01 00 00 00 3E 00 00 00 00 00 00 00 00  // .......>........
    1060: 00 00 00 00 00 00 40 00 00 48 2E 64 61 74 61 00  // ......@..H.data.
    1070: 00 00 FC 00 00 00 80 3F 00 00 00 01 00 00 80 3F  // .......?.......?
    1080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    1090: 00 C8 49 4E 49 54 00 00 00 00 DE 05 00 00 80 40  // ..INIT.........@
    10A0: 00 00 00 06 00 00 80 40 00 00 00 00 00 00 00 00  // .......@........
    10B0: 00 00 00 00 00 00 20 00 00 E2 2E 72 73 72 63 00  // ...... ....rsrc.
    10C0: 00 00 40 03 00 00 80 46 00 00 80 03 00 00 80 46  // ..@....F.......F
    10D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    10E0: 00 42 2E 72 65 6C 6F 63 00 00 AE 03 00 00 00 4A  // .B.reloc.......J
    10F0: 00 00 00 04 00 00 00 4A 00 00 00 00 00 00 00 00  // .......J........
    1100: 00 00 00 00 00 00 40 00 00 42 00 00 00 00 00 00  // ......@..B......
    1110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    1120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    1130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    1140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    1150: 00 00 00 00 00 00 00 00 00 00 55 8B EC 60 8B 7D  // ..........U..`.}
    1160: 08 8B 07 8B 5F 04 8B 4F 08 8B 57 0C 8B 77 10 EE  // ...._..O..W..w..
    1170: E6 EB E6 ED E6 EB E6 ED 8B 7D 08 89 07 89 5F 04  // .........}...._.
    1180: 89 4F 08 89 57 0C 89 77 10 61 C9 C3 CC CC CC CC  // .O..W..w.a......
    1190: CC CC 8B FF 55 8B EC 83 EC 0C 53 56 8B 35 08 3E  // ....U.....SV.5.>
    11A0: 01 00 57 68 F8 38 01 00 8D 45 F4 50 FF D6 8B 3D  // ..Wh.8...E.P...=
    11B0: 7C 3E 01 00 8D 45 F4 50 FF D7 8B D8 85 DB 74 49  // |>...E.P......tI
    11C0: 68 C0 38 01 00 8D 45 F4 50 FF D6 8D 45 F4 50 FF  // h.8...E.P...E.P.
    11D0: D7 8B F0 85 F6 74 32 FF 15 D4 3E 01 00 89 45 FC  // .....t2...>...E.
    11E0: 8D 45 FC 50 FF D3 8B 45 08 85 C0 75 07 83 7D FC  // .E.P...E...u..}.
    11F0: 01 74 01 40 3B 45 FC 74 10 50 FF D6 8B 4D 0C 85  // .t.@;E.t.P...M..
    1200: C9 74 02 89 01 B0 01 EB 02 32 C0 5F 5E 5B C9 C2  // .t.......2._^[..
    1210: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 51 51 68  // ..........U..QQh
    1220: 30 39 01 00 8D 45 F8 50 FF 15 08 3E 01 00 8D 45  // 09...E.P...>...E
    1230: F8 50 FF 15 7C 3E 01 00 85 C0 75 04 32 C0 EB 07  // .P..|>....u.2...
    1240: FF 75 08 FF D0 B0 01 C9 C2 04 00 CC CC CC CC CC  // .u..............
    1250: 8B FF 55 8B EC 83 EC 20 83 65 FC 00 57 6A 06 33  // ..U.... .e..Wj.3
    1260: C0 F6 05 08 40 01 00 03 C6 45 E0 00 59 8D 7D E1  // ....@....E..Y.}.
    1270: F3 AB 66 AB AA 5F 74 58 80 3D 0B 40 01 00 00 74  // ..f.._tX.=.@...t
    1280: 4F 80 3D 0C 40 01 00 00 75 46 53 8D 45 FC 50 6A  // O.=.@...uFS.E.Pj
    1290: 01 E8 FC FE FF FF 8A D8 A1 10 40 01 00 89 45 EC  // ..........@...E.
    12A0: 8D 45 E0 50 C7 45 E0 40 0A 4D 53 C7 45 E4 02 00  // .E.P.E.@.MS.E...
    12B0: 00 00 E8 A3 FE FF FF 59 84 DB 5B 74 08 FF 75 FC  // .......Y..[t..u.
    12C0: E8 53 FF FF FF C6 05 0C 40 01 00 01 B0 01 C9 C3  // .S......@.......
    12D0: 32 C0 C9 C3 CC CC CC CC CC CC 8B FF 55 8B EC 83  // 2...........U...
    12E0: EC 24 53 83 65 F8 00 56 57 6A 06 59 33 C0 C6 45  // .$S.e..VWj.Y3..E
    12F0: DC 00 8D 7D DD F3 AB 66 AB AA 8D 45 F8 33 DB 50  // ...}...f...E.3.P
    1300: 43 53 C6 45 FF 00 E8 87 FE FF FF 83 65 E0 00 88  // CS.E........e...
    1310: 45 FE A1 10 40 01 00 89 45 E8 8D 45 DC BE 40 0A  // E...@...E..E..@.
    1320: 4D 53 50 89 75 DC E8 2F FE FF FF 8B 45 DC 59 A3  // MSP.u../....E.Y.
    1330: 14 40 01 00 85 C0 78 7D 3B C6 74 79 88 1D 0B 40  // .@....x};.ty...@
    1340: 01 00 A8 08 75 09 C6 05 0A 40 01 00 00 EB 19 F6  // ....u....@......
    1350: 45 DC 10 74 06 08 1D 08 40 01 00 F6 45 DC 20 74  // E..t....@...E. t
    1360: 07 80 0D 08 40 01 00 02 A1 10 40 01 00 89 45 E8  // ....@.....@...E.
    1370: 8D 45 DC 50 89 75 DC 89 5D E0 E8 DB FD FF FF A0  // .E.P.u..].......
    1380: 08 40 01 00 59 A8 02 74 09 C7 45 E0 04 00 00 00  // .@..Y..t..E.....
    1390: EB 0B 84 C3 74 1C C7 45 E0 03 00 00 00 A1 10 40  // ....t..E.......@
    13A0: 01 00 89 45 E8 8D 45 DC 50 89 75 DC E8 A9 FD FF  // ...E..E.P.u.....
    13B0: FF 59 88 5D FF 80 7D FE 00 5F 5E 5B 74 08 FF 75  // .Y.]..}.._^[t..u
    13C0: F8 E8 52 FE FF FF 8A 45 FF C9 C3 CC CC CC CC CC  // ..R....E........
    13D0: 8B FF 55 8B EC 81 EC 18 01 00 00 A1 F0 3F 01 00  // ..U..........?..
    13E0: 33 C5 89 45 FC 6A 30 6A 00 68 00 40 01 00 E8 85  // 3..E.j0j.h.@....
    13F0: 31 00 00 83 C4 0C FF 15 10 3E 01 00 8B C8 89 0D  // 1........>......
    1400: 20 40 01 00 85 C9 74 10 B8 80 96 98 00 33 D2 F7  //  @....t......3..
    1410: F1 A3 24 40 01 00 EB 0A C7 05 24 40 01 00 01 00  // ..$@......$@....
    1420: 00 00 68 14 01 00 00 8D 85 E8 FE FF FF 6A 00 50  // ..h..........j.P
    1430: E8 43 31 00 00 83 C4 0C 8D 85 E8 FE FF FF 50 C7  // .C1...........P.
    1440: 85 E8 FE FF FF 14 01 00 00 FF 15 0C 3E 01 00 8B  // ............>...
    1450: 85 EC FE FF FF A3 00 40 01 00 8B 85 F0 FE FF FF  // .......@........
    1460: A3 04 40 01 00 C6 05 08 40 01 00 00 C6 05 0A 40  // ..@.....@......@
    1470: 01 00 0F E8 56 2F 00 00 A3 10 40 01 00 E8 58 FE  // ....V/....@...X.
    1480: FF FF 8B 4D FC 33 CD 33 C0 E8 AA 30 00 00 C9 C2  // ...M.3.3...0....
    1490: 04 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B 55 0C  // ..........U...U.
    14A0: 8B 45 08 8B 40 28 FE 42 23 83 42 60 24 8B 48 04  // .E..@(.B#.B`$.H.
    14B0: FF 15 18 3E 01 00 5D C2 08 00 CC CC CC CC CC CC  // ...>..].........
    14C0: 8B FF 55 8B EC 8B 45 0C 80 78 21 01 75 0D 6A 00  // ..U...E..x!.u.j.
    14D0: 6A 00 FF 75 10 FF 15 1C 3E 01 00 B8 16 00 00 C0  // j..u....>.......
    14E0: 5D C2 0C 00 CC CC CC CC CC CC 8B FF 55 8B EC 83  // ]...........U...
    14F0: EC 10 53 56 57 6A 00 6A 00 8D 45 F0 50 FF 15 24  // ..SVWj.j..E.P..$
    1500: 3E 01 00 8B 45 08 8B 40 28 8B 5D 0C 8B 73 60 89  // >...E..@(.]..s`.
    1510: 45 08 8D 46 DC 8B F8 6A 07 59 F3 A5 C6 40 03 00  // E..F...j.Y...@..
    1520: 8B 43 60 83 E8 24 8D 4D F0 C7 40 1C F6 07 01 00  // .C`..$.M..@.....
    1530: 89 48 20 C6 40 03 E0 8B 45 08 8B 48 04 8B D3 FF  // .H .@...E..H....
    1540: 15 18 3E 01 00 3D 03 01 00 00 75 13 33 C0 50 50  // ..>..=....u.3.PP
    1550: 50 50 8D 45 F0 50 FF 15 20 3E 01 00 8B 43 18 5F  // PP.E.P.. >...C._
    1560: 5E 5B C9 C2 08 00 CC CC CC CC CC CC 8B FF 55 8B  // ^[............U.
    1570: EC 8B 45 08 53 56 8B 75 0C 57 8B 78 28 6A 18 6A  // ..E.SV.u.W.x(j.j
    1580: 01 68 6E 39 01 00 56 8D 5F 0C 53 FF 15 30 3E 01  // .hn9..V._.S..0>.
    1590: 00 89 45 08 85 C0 7D 12 32 D2 8B CE 89 46 18 FF  // ..E...}.2....F..
    15A0: 15 2C 3E 01 00 8B 45 08 EB 20 FE 46 23 83 46 60  // .,>...E.. .F#.F`
    15B0: 24 8B 4F 04 8B D6 FF 15 18 3E 01 00 6A 18 56 53  // $.O......>..j.VS
    15C0: 8B F8 FF 15 28 3E 01 00 8B C7 5F 5E 5B 5D C2 08  // ....(>...._^[]..
    15D0: 00 CC CC CC CC CC 8B FF 55 8B EC 8B 4D 0C 80 79  // ........U...M..y
    15E0: 21 00 74 07 8B 41 60 80 48 03 01 8B 41 18 5D C2  // !.t..A`.H...A.].
    15F0: 0C 00 CC CC CC CC CC CC 8B FF 55 8B EC 51 8B 45  // ..........U..Q.E
    1600: 08 8A 15 08 40 01 00 8B 40 28 53 8B 5D 0C 56 57  // ....@...@(S.].VW
    1610: 89 45 FC 84 D2 74 78 8A 40 43 3C 12 74 10 3C 06  // .E...tx.@C<.t.<.
    1620: 74 0C 3C 08 74 08 3C 07 74 04 3C 60 75 61 8B 73  // t.<.t.<.t.<`ua.s
    1630: 60 8B 4E 04 8B 7E 0C 3C 60 75 1A 83 63 1C 00 BE  // `.N..~.<`u..c...
    1640: 22 00 00 C0 32 D2 8B CB 89 73 18 FF 15 2C 3E 01  // "...2....s...,>.
    1650: 00 8B C6 EB 43 81 FF 03 00 22 00 75 32 3C 08 75  // ....C....".u2<.u
    1660: 10 80 FA 01 75 0B 53 FF 75 08 E8 DB 12 00 00 EB  // ....u.S.u.......
    1670: 27 81 F9 00 00 40 00 72 16 0F B7 41 02 66 83 F8  // '....@.r...A.f..
    1680: 0B 74 1C 66 83 F8 28 74 16 66 83 F8 09 74 AC 53  // .t.f..(t.f...t.S
    1690: FF 75 08 E8 D4 FE FF FF 5F 5E 5B C9 C2 08 00 8D  // .u......_^[.....
    16A0: 46 DC 8B F8 6A 07 59 F3 A5 C6 40 03 00 8B 43 60  // F...j.Y...@...C`
    16B0: 83 60 FC 00 83 E8 24 C7 40 1C 0C 09 01 00 C6 40  // .`....$.@......@
    16C0: 03 E0 8B 45 FC 8B 48 04 8B D3 FF 15 18 3E 01 00  // ...E..H......>..
    16D0: EB C6 CC CC CC CC CC CC 8B FF 55 8B EC 8B 55 0C  // ..........U...U.
    16E0: 80 7A 21 00 56 8B 75 08 8B 4E 28 74 07 8B 42 60  // .z!.V.u..N(t..B`
    16F0: 80 48 03 01 8B 41 04 F7 40 1C 00 20 00 00 75 07  // .H...A..@.. ..u.
    1700: 81 66 1C FF DF FF FF 6A 18 52 83 C1 0C 51 FF 15  // .f.....j.R...Q..
    1710: 28 3E 01 00 33 C0 5E 5D C2 0C 00 CC CC CC CC CC  // (>..3.^]........
    1720: 8B FF 55 8B EC 8B 45 08 56 8B 75 0C 83 7E 18 00  // ..U...E.V.u..~..
    1730: 57 8B 78 28 7C 31 8B 4E 1C 85 C9 74 2A 8B 46 60  // W.x(|1.N...t*.F`
    1740: 8B 40 04 83 F8 01 74 05 83 F8 02 75 1A 83 F8 02  // .@....t....u....
    1750: 75 15 68 70 39 01 00 6A 00 51 E8 71 2B 00 00 85  // u.hp9..j.Q.q+...
    1760: C0 74 04 C6 47 43 12 80 7E 21 00 74 07 8B 46 60  // .t..GC..~!.t..F`
    1770: 80 48 03 01 6A 18 56 83 C7 0C 57 FF 15 28 3E 01  // .H..j.V...W..(>.
    1780: 00 8B 46 18 5F 5E 5D C2 0C 00 CC CC CC CC CC CC  // ..F._^].........
    1790: 8B FF 55 8B EC 8B 45 08 53 56 8B 75 0C 33 DB 39  // ..U...E.SV.u.3.9
    17A0: 5E 18 57 8B 78 28 7C 5F 8B 46 1C 3B C3 74 58 8B  // ^.W.x(|_.F.;.tX.
    17B0: 4E 60 39 59 04 75 50 68 A2 39 01 00 53 50 E8 0D  // N`9Y.uPh.9..SP..
    17C0: 2B 00 00 85 C0 75 3C 68 98 39 01 00 53 FF 76 1C  // +....u<h.9..S.v.
    17D0: E8 FB 2A 00 00 85 C0 75 2A 68 8C 39 01 00 53 FF  // ..*....u*h.9..S.
    17E0: 76 1C E8 E9 2A 00 00 85 C0 75 12 68 7A 39 01 00  // v...*....u.hz9..
    17F0: 53 FF 76 1C E8 D7 2A 00 00 85 C0 74 0A C6 47 43  // S.v...*....t..GC
    1800: 03 EB 04 C6 47 43 60 38 5E 21 74 07 8B 46 60 80  // ....GC`8^!t..F`.
    1810: 48 03 01 6A 18 56 83 C7 0C 57 FF 15 28 3E 01 00  // H..j.V...W..(>..
    1820: 8B 46 18 5F 5E 5B 5D C2 0C 00 CC CC CC CC CC CC  // .F._^[].........
    1830: 8B FF 55 8B EC 51 51 53 56 57 68 55 53 42 46 BE  // ..U..QQSVWhUSBF.
    1840: 00 10 00 00 33 DB 56 53 89 5D FC FF 15 38 3E 01  // ....3.VS.]...8>.
    1850: 00 8B F8 89 7D F8 3B FB 0F 84 E5 00 00 00 56 8B  // ....}.;.......V.
    1860: 75 08 57 FF 76 08 E8 69 2C 00 00 3B C3 89 45 FC  // u.W.v..i,..;..E.
    1870: 0F 8C C1 00 00 00 66 39 1F 0F 84 B1 00 00 00 8B  // ......f9........
    1880: C7 8D 50 02 66 8B 08 40 40 66 85 C9 75 F6 2B C2  // ..P.f..@@f..u.+.
    1890: D1 F8 68 C4 39 01 00 8B D8 53 57 E8 30 2A 00 00  // ..h.9....SW.0*..
    18A0: 85 C0 74 68 83 C0 0C 66 83 38 30 75 6F 40 40 0F  // ..th...f.80uo@@.
    18B0: B7 00 66 83 F8 31 75 06 C6 46 43 01 EB 46 66 83  // ..f..1u..FC..Ff.
    18C0: F8 32 75 06 C6 46 43 02 EB 3A 66 83 F8 33 75 06  // .2u..FC..:f..3u.
    18D0: C6 46 43 03 EB 2E 66 83 F8 36 75 06 C6 46 43 06  // .FC...f..6u..FC.
    18E0: EB 22 66 83 F8 37 75 06 C6 46 43 07 EB 16 66 83  // ."f..7u..FC...f.
    18F0: F8 38 75 06 C6 46 43 08 EB 0A 66 83 F8 39 75 04  // .8u..FC...f..9u.
    1900: C6 46 43 09 80 7E 43 80 72 26 EB 10 68 B0 39 01  // .FC..~C.r&..h.9.
    1910: 00 53 57 E8 B8 29 00 00 85 C0 75 10 8D 7C 5F 02  // .SW..)....u..|_.
    1920: 66 83 3F 00 0F 85 55 FF FF FF EB 04 C6 46 43 10  // f.?...U......FC.
    1930: 8B 7D F8 C6 46 41 01 68 55 53 42 46 57 FF 15 34  // .}..FA.hUSBFW..4
    1940: 3E 01 00 8B 45 FC 5F 5E 5B C9 C2 04 00 CC CC CC  // >...E._^[.......
    1950: CC CC 8B FF 55 8B EC 8B 45 08 FF 70 28 E8 CE FE  // ....U...E..p(...
    1960: FF FF FF 75 0C FF 15 3C 3E 01 00 5D C2 08 00 CC  // ...u...<>..]....
    1970: CC CC CC CC 8B FF 55 8B EC FF 75 08 FF 15 44 3E  // ......U...u...D>
    1980: 01 00 85 C0 74 0F 50 6A 00 68 88 0C 01 00 50 FF  // ....t.Pj.h....P.
    1990: 15 40 3E 01 00 5D C2 04 00 CC CC CC CC CC 8B FF  // .@>..]..........
    19A0: 55 8B EC 53 56 8B 75 0C 57 8B 7D 08 8B 47 28 6A  // U..SV.u.W.}..G(j
    19B0: 18 6A 01 68 6E 39 01 00 56 83 C0 0C 50 FF 15 30  // .j.hn9..V...P..0
    19C0: 3E 01 00 8B D8 85 DB 7D 16 56 89 5E 18 FF 15 4C  // >......}.V.^...L
    19D0: 3E 01 00 32 D2 8B CE FF 15 2C 3E 01 00 EB 4A 83  // >..2.....,>...J.
    19E0: 3D 00 40 01 00 06 72 17 FE 46 23 83 46 60 24 8B  // =.@...r..F#.F`$.
    19F0: 7F 28 8B 4F 04 8B D6 FF 15 18 3E 01 00 EB 1B 56  // .(.O......>....V
    1A00: FF 15 4C 3E 01 00 FE 46 23 83 46 60 24 8B 7F 28  // ..L>...F#.F`$..(
    1A10: 56 FF 77 04 FF 15 48 3E 01 00 6A 18 56 83 C7 0C  // V.w...H>..j.V...
    1A20: 57 8B D8 FF 15 28 3E 01 00 5F 5E 8B C3 5B 5D C2  // W....(>.._^..[].
    1A30: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B 4D 0C  // ..........U...M.
    1A40: 8B 41 60 81 78 0C 00 20 28 A0 75 19 8B 41 0C C7  // .A`.x.. (.u..A..
    1A50: 00 BB 55 00 00 83 61 18 00 32 D2 FF 15 2C 3E 01  // ..U...a..2...,>.
    1A60: 00 33 C0 EB 09 51 FF 75 08 E8 FE FA FF FF 5D C2  // .3...Q.u......].
    1A70: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 56 8B 75  // ..........U..V.u
    1A80: 08 57 33 FF 85 F6 74 2E 8B 46 08 85 C0 74 27 66  // .W3...t..F...t'f
    1A90: 83 78 1C 1E 72 17 6A 0F 68 D2 39 01 00 FF 70 20  // .x..r.j.h.9...p 
    1AA0: FF 15 50 3E 01 00 83 C4 0C 85 C0 74 11 8B 76 10  // ..P>.......t..v.
    1AB0: 47 83 FF 03 7C CE 32 C0 5F 5E 5D C2 04 00 B0 01  // G...|.2._^].....
    1AC0: EB F6 CC CC CC CC CC CC 8B FF 55 8B EC 8B 45 08  // ..........U...E.
    1AD0: EB 0E 8B 48 08 3B 0D 30 40 01 00 74 0B 8B 40 10  // ...H.;.0@..t..@.
    1AE0: 85 C0 75 EE 32 C0 EB 02 B0 01 5D C2 04 00 CC CC  // ..u.2.....].....
    1AF0: CC CC CC CC 8B FF 55 8B EC 83 EC 2C A1 F0 3F 01  // ......U....,..?.
    1B00: 00 33 C5 89 45 FC 8B 45 08 83 65 E4 00 56 8B 75  // .3..E..E..e..V.u
    1B10: 0C 56 89 45 E0 89 75 D8 E8 AB FF FF FF 84 C0 74  // .V.E..u........t
    1B20: 07 33 C0 E9 FA 01 00 00 57 56 FF 15 68 3E 01 00  // .3......WV..h>..
    1B30: 89 45 E4 8B 78 2C 8B C8 89 7D D4 FF 15 64 3E 01  // .E..x,...}...d>.
    1B40: 00 83 FF 07 74 23 83 FF 02 74 1E 83 FF 33 74 19  // ....t#...t...3t.
    1B50: 83 FF 2D 74 14 56 C6 45 EB FF E8 19 FF FF FF 84  // ..-t.V.E........
    1B60: C0 74 26 C6 45 EB 08 EB 20 56 E8 09 FF FF FF 84  // .t&.E... V......
    1B70: C0 75 07 33 C0 E9 A7 01 00 00 83 FF 07 0F 95 C0  // .u.3............
    1B80: FE C8 24 F7 04 11 88 45 EB 53 BB 55 53 42 46 53  // ..$....E.S.USBFS
    1B90: BE 00 10 00 00 56 6A 00 FF 15 38 3E 01 00 89 45  // .....Vj...8>...E
    1BA0: DC 85 C0 0F 84 75 01 00 00 83 7D E0 00 74 6E 80  // .....u....}..tn.
    1BB0: 7D EB FF 75 68 56 50 FF 75 D8 E8 ED 28 00 00 85  // }..uhVP.u...(...
    1BC0: C0 7C 5A 8B 75 DC B8 5D C8 00 00 66 89 45 F0 B8  // .|Z.u..]...f.E..
    1BD0: D1 11 00 00 66 89 45 F2 6A 04 59 8D 7D EC 33 C0  // ....f.E.j.Y.}.3.
    1BE0: C7 45 EC BC EB 7D 9D C6 45 F4 9E C6 45 F5 B4 C6  // .E...}..E...E...
    1BF0: 45 F6 00 C6 45 F7 60 C6 45 F8 08 C6 45 F9 C3 C6  // E...E.`.E...E...
    1C00: 45 FA A1 C6 45 FB 9A F3 A7 74 0F 53 FF 75 DC FF  // E...E....t.S.u..
    1C10: 15 34 3E 01 00 E9 04 01 00 00 8B 7D D4 53 FF 75  // .4>........}.S.u
    1C20: DC FF 15 34 3E 01 00 8B 45 E0 85 C0 75 05 A1 30  // ...4>...E...u..0
    1C30: 40 01 00 8D 4D E4 51 6A 00 68 00 01 00 00 57 6A  // @...M.Qj.h....Wj
    1C40: 00 6A 68 50 FF 15 60 3E 01 00 85 C0 0F 8C CE 00  // .jhP..`>........
    1C50: 00 00 8B 45 E4 8B 70 28 6A 68 6A 00 56 E8 16 29  // ...E..p(jhj.V..)
    1C60: 00 00 83 C4 0C 6A 02 58 83 FF 07 75 08 C7 06 03  // .....j.X...u....
    1C70: 00 00 00 EB 13 3B F8 74 09 83 FF 33 74 04 89 06  // .....;.t...3t...
    1C80: EB 06 C7 06 04 00 00 00 83 7D E0 00 75 02 89 06  // .........}..u...
    1C90: 8A 45 EB 8B 7D D8 57 88 46 43 C6 46 40 00 FF 75  // .E..}.W.FC.F@..u
    1CA0: E4 FF 15 5C 3E 01 00 89 46 04 85 C0 75 10 FF 75  // ...\>...F...u..u
    1CB0: E4 FF 15 58 3E 01 00 B8 0E 00 00 C0 EB 62 89 7E  // ...X>........b.~
    1CC0: 08 8B 40 1C 8B 4D E4 25 14 20 00 00 09 41 1C 8B  // ..@..M.%. ...A..
    1CD0: 46 04 8B 40 2C 8B 4D E4 89 41 2C 8B 46 04 8B 40  // F..@,.M..A,.F..@
    1CE0: 20 8B 4D E4 6A 18 6A 00 6A 00 89 41 20 53 8D 46  //  .M.j.j.j..A S.F
    1CF0: 0C 50 FF 15 54 3E 01 00 6A 01 6A 00 83 C6 24 56  // .P..T>..j.j...$V
    1D00: FF 15 24 3E 01 00 8B 45 E4 81 60 1C 7F FF FF FF  // ..$>...E..`.....
    1D10: 80 7D EB FF 75 08 FF 75 E4 E8 56 FC FF FF 33 C0  // .}..u..u..V...3.
    1D20: 5B 5F 8B 4D FC 33 CD 5E E8 0B 28 00 00 C9 C2 08  // [_.M.3.^..(.....
    1D30: 00 CC CC CC CC CC C2 04 00 CC CC CC CC CC C2 0C  // ................
    1D40: 00 CC CC CC CC CC 8B FF 55 8B EC 8B 45 0C 56 8B  // ........U...E.V.
    1D50: 70 1C 85 F6 74 24 8B 06 85 C0 74 1E 53 33 DB 85  // p...t$....t.S3..
    1D60: C0 76 16 57 8D 7E 04 FF 37 6A 00 E8 84 FD FF FF  // .v.W.~..7j......
    1D70: 43 83 C7 04 3B 1E 72 EF 5F 5B 33 C0 5E 5D C2 08  // C...;.r._[3.^]..
    1D80: 00 CC CC CC CC CC 8B FF 55 8B EC 51 51 53 56 8B  // ........U..QQSV.
    1D90: 75 0C 8B 46 60 57 8B 7D 08 8B 5F 28 6A 18 6A 01  // u..F`W.}.._(j.j.
    1DA0: 68 6E 39 01 00 89 45 F8 8D 43 0C 56 50 89 45 FC  // hn9...E..C.VP.E.
    1DB0: FF 15 30 3E 01 00 33 D2 3B C2 89 45 08 7D 15 32  // ..0>..3.;..E.}.2
    1DC0: D2 8B CE 89 46 18 FF 15 2C 3E 01 00 8B 45 08 E9  // ....F...,>...E..
    1DD0: 8A 00 00 00 8B 45 F8 0F B6 48 01 83 F9 06 0F 8F  // .....E...H......
    1DE0: 59 01 00 00 0F 84 4A 01 00 00 2B CA 0F 84 CA 00  // Y.....J...+.....
    1DF0: 00 00 49 0F 84 B1 00 00 00 49 74 69 49 74 28 49  // ..I......ItiIt(I
    1E00: 74 16 49 0F 85 55 01 00 00 8B 43 38 89 43 3C C7  // t.I..U....C8.C<.
    1E10: 43 38 02 00 00 00 EB 1B 8B 43 38 89 43 3C C7 43  // C8.......C8.C<.C
    1E20: 38 03 00 00 00 EB 0C 83 7B 38 04 75 06 8B 43 3C  // 8.......{8.u..C<
    1E30: 89 43 38 89 55 08 8B 45 08 FE 46 23 83 46 60 24  // .C8.U..E..F#.F`$
    1E40: 89 46 18 8B 4B 04 8B D6 FF 15 18 3E 01 00 6A 18  // .F..K......>..j.
    1E50: 56 FF 75 FC 8B F8 FF 15 28 3E 01 00 8B C7 5F 5E  // V.u.....(>...._^
    1E60: 5B C9 C2 08 00 6A 18 56 FF 75 FC FF 15 70 3E 01  // [....j.V.u...p>.
    1E70: 00 56 57 E8 72 F6 FF FF FF 73 04 89 45 08 8B 43  // .VW.r....s..E..C
    1E80: 38 89 43 3C C7 43 38 06 00 00 00 FF 15 6C 3E 01  // 8.C<.C8......l>.
    1E90: 00 57 FF 15 58 3E 01 00 8B 7D 08 32 D2 8B CE 89  // .W..X>...}.2....
    1EA0: 7E 18 FF 15 2C 3E 01 00 EB B2 8B 43 38 89 43 3C  // ~...,>.....C8.C<
    1EB0: C7 43 38 04 00 00 00 E9 77 FF FF FF 56 57 E8 27  // .C8.....w...VW.'
    1EC0: F6 FF FF 89 45 08 85 C0 7C 17 8B 43 38 8B 4B 04  // ....E...|..C8.K.
    1ED0: 89 43 3C 33 C0 40 89 43 38 84 41 20 74 03 09 47  // .C<3.@.C8.A t..G
    1EE0: 20 80 7B 43 FF 75 10 53 E8 43 F9 FF FF 80 7B 43  //  .{C.u.S.C....{C
    1EF0: FF 75 04 C6 43 43 80 80 3D 08 40 01 00 00 74 13  // .u..CC..=.@...t.
    1F00: 80 7B 40 00 75 0D 80 7B 43 07 75 07 C7 45 08 22  // .{@.u..{C.u..E."
    1F10: 00 00 C0 8B 45 08 32 D2 8B CE 89 46 18 FF 15 2C  // ....E.2....F...,
    1F20: 3E 01 00 6A 18 56 FF 75 FC FF 15 28 3E 01 00 E9  // >..j.V.u...(>...
    1F30: 98 FE FF FF 83 7B 38 02 E9 EE FE FF FF 83 E9 07  // .....{8.........
    1F40: 0F 84 00 01 00 00 6A 05 5A 2B CA 0F 84 B5 00 00  // ......j.Z+......
    1F50: 00 83 E9 07 74 70 83 E9 03 74 20 49 74 0B 8B 46  // ....tp...t It..F
    1F60: 18 89 45 08 E9 CD FE FF FF 8B 43 38 83 65 08 00  // ..E.......C8.e..
    1F70: 89 43 3C 89 53 38 E9 BB FE FF FF 8B 47 10 B9 00  // .C<.S8......G...
    1F80: 20 00 00 85 C0 74 05 85 48 1C 74 03 09 4F 1C 8B  //  ....t..H.t..O..
    1F90: 76 60 8B 55 0C 8D 46 DC 6A 07 8B F8 59 F3 A5 C6  // v`.U..F.j...Y...
    1FA0: 40 03 00 8B 42 60 83 E8 24 C7 40 1C 0E 0A 01 00  // @...B`..$.@.....
    1FB0: 83 60 20 00 C6 40 03 E0 8B 4B 04 FF 15 18 3E 01  // .` ..@...K....>.
    1FC0: 00 E9 98 FE FF FF 8A 53 43 8B 40 04 80 FA 80 73  // .......SC.@....s
    1FD0: 09 80 FA 10 0F 85 5C FE FF FF 83 F8 02 0F 85 53  // ......\........S
    1FE0: FE FF FF 8B 76 60 8B 55 0C 8D 46 DC 6A 07 8B F8  // ....v`.U..F.j...
    1FF0: 59 F3 A5 C6 40 03 00 8B 42 60 83 E8 24 C7 40 1C  // Y...@...B`..$.@.
    2000: 56 0A 01 00 EB AA 8B 48 04 8A 43 43 3C 80 73 08  // V......H..CC<.s.
    2010: 3C 10 0F 85 1E FE FF FF 85 C9 0F 85 16 FE FF FF  // <...............
    2020: 8B 76 60 8B 55 0C 8D 46 DC 6A 07 8B F8 59 F3 A5  // .v`.U..F.j...Y..
    2030: C6 40 03 00 8B 42 60 83 E8 24 C7 40 1C C6 0A 01  // .@...B`..$.@....
    2040: 00 E9 6A FF FF FF 39 50 04 0F 85 E7 FD FF FF 8A  // ..j...9P........
    2050: 43 43 3C 09 74 10 3C 10 74 0C 3C FF 74 08 3C 80  // CC<.t.<.t.<.t.<.
    2060: 0F 85 D0 FD FF FF 56 57 E8 7D F4 FF FF 8B D8 85  // ......VW.}......
    2070: DB 7C 09 56 57 E8 CC FC FF FF 8B D8 32 D2 8B CE  // .|.VW.......2...
    2080: 89 5E 18 FF 15 2C 3E 01 00 6A 18 56 FF 75 FC FF  // .^...,>..j.V.u..
    2090: 15 28 3E 01 00 8B C3 E9 C2 FD FF FF CC CC CC CC  // .(>.............
    20A0: CC CC 8B FF 55 8B EC 8B 4D 0C 8B 41 60 0F B6 00  // ....U...M..A`...
    20B0: 83 E8 0E 51 FF 75 08 74 29 48 74 1F 83 E8 07 74  // ...Q.u.t)Ht....t
    20C0: 13 83 E8 05 74 07 E8 A1 F4 FF FF EB 1A E8 B4 FC  // ....t...........
    20D0: FF FF EB 13 E8 C5 F8 FF FF EB 0C E8 18 F5 FF FF  // ................
    20E0: EB 05 E8 51 F9 FF FF 5D C2 08 00 CC CC CC CC CC  // ...Q...]........
    20F0: 8B FF 55 8B EC 8B 45 08 8B 48 10 8B 50 28 56 85  // ..U...E..H..P(V.
    2100: C9 74 1C 8B 49 2C 8B F1 4E 4E 74 0A 83 EE 05 74  // .t..I,..NNt....t
    2110: 42 83 EE 2C 75 09 89 48 2C C7 02 04 00 00 00 8B  // B..,u..H,.......
    2120: 48 28 8B 09 83 E9 00 74 7C 49 74 62 49 74 54 49  // H(.....t|ItbItTI
    2130: 74 46 49 74 38 49 74 2A 8B 4D 0C 83 61 1C 00 BE  // tFIt8It*.M..a...
    2140: 10 00 00 C0 32 D2 89 71 18 FF 15 2C 3E 01 00 8B  // ....2..q...,>...
    2150: C6 EB 5B C7 40 2C 07 00 00 00 C7 02 03 00 00 00  // ..[.@,..........
    2160: EB BD FF 75 0C 50 E8 ED 13 00 00 EB 41 FF 75 0C  // ...u.P......A.u.
    2170: 50 E8 D8 08 00 00 EB 36 FF 75 0C 50 E8 63 05 00  // P......6.u.P.c..
    2180: 00 EB 2B FF 75 0C 50 E8 16 FF FF FF EB 20 8B 4D  // ..+.u.P...... .M
    2190: 0C 83 61 18 00 83 61 1C 00 32 D2 FF 15 2C 3E 01  // ..a...a..2...,>.
    21A0: 00 33 C0 EB 09 FF 75 0C 50 E8 EA F2 FF FF 5E 5D  // .3....u.P.....^]
    21B0: C2 08 00 CC CC CC CC CC 8B FF 55 8B EC 83 EC 10  // ..........U.....
    21C0: 56 8B 75 08 57 FF 75 0C 89 35 30 40 01 00 E8 FD  // V.u.W.u..50@....
    21D0: F1 FF FF 8B 3D 08 3E 01 00 68 14 3A 01 00 8D 45  // ....=.>..h.:...E
    21E0: F8 50 FF D7 8D 45 08 50 6A 00 6A 00 68 08 96 00  // .P...E.Pj.j.h...
    21F0: 00 8D 45 F8 50 6A 68 56 FF 15 60 3E 01 00 85 C0  // ..E.PjhV..`>....
    2200: 0F 8C 86 00 00 00 8B 45 08 53 8B 58 28 6A 68 6A  // .......E.S.X(jhj
    2210: 00 53 E8 61 23 00 00 C7 03 01 00 00 00 8B 45 08  // .S.a#.........E.
    2220: 81 60 1C 7F FF FF FF 83 C4 0C 68 F2 39 01 00 8D  // .`........h.9...
    2230: 45 F0 50 FF D7 8D 45 F8 50 8D 45 F0 50 FF 15 78  // E.P...E.P.E.P..x
    2240: 3E 01 00 8B D8 85 DB 7D 0B FF 75 08 FF 15 58 3E  // >......}..u...X>
    2250: 01 00 EB 35 6A 1C 59 FF 75 0C B8 26 14 01 00 8D  // ...5j.Y.u..&....
    2260: 7E 38 F3 AB 8B 46 18 C7 40 04 2A 0E 01 00 56 C7  // ~8...F..@.*...V.
    2270: 46 34 6C 10 01 00 E8 8F 13 00 00 6A 00 68 74 10  // F4l........j.ht.
    2280: 01 00 56 FF 15 74 3E 01 00 8B C3 5B 5F 5E C9 C2  // ..V..t>....[_^..
    2290: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 56 8B 75  // ..........U..V.u
    22A0: 0C 8B 46 60 80 38 04 57 8B 7D 08 75 36 8B 47 28  // ..F`.8.W.}.u6.G(
    22B0: 80 78 40 00 75 2D F6 05 08 40 01 00 03 74 24 57  // .x@.u-...@...t$W
    22C0: E8 B7 09 00 00 85 C0 74 1A 83 66 1C 00 BF 22 00  // .......t..f...".
    22D0: 00 C0 32 D2 8B CE 89 7E 18 FF 15 2C 3E 01 00 8B  // ..2....~...,>...
    22E0: C7 EB 07 56 57 E8 AE F1 FF FF 5F 5E 5D C2 08 00  // ...VW....._^]...
    22F0: CC CC CC CC CC CC 8B FF 55 8B EC 8B 45 0C 83 78  // ........U...E..x
    2300: 18 00 7C 12 8B 4D 08 8B 51 28 8B 52 04 8B 52 20  // ..|..M..Q(.R..R 
    2310: 83 E2 07 09 51 20 80 78 21 00 74 07 8B 48 60 80  // ....Q .x!.t..H`.
    2320: 49 03 01 8B 40 18 5D C2 0C 00 CC CC CC CC CC CC  // I...@.].........
    2330: 8B FF 55 8B EC 8B 55 0C 8B 45 08 53 8B 58 28 56  // ..U...U..E.S.X(V
    2340: 8B 72 60 57 8D 46 DC 6A 07 8B F8 59 F3 A5 C6 40  // .r`W.F.j...Y...@
    2350: 03 00 8B 42 60 83 60 FC 00 83 E8 24 C7 40 1C 2C  // ...B`.`....$.@.,
    2360: 16 01 00 C6 40 03 E0 8B 4B 04 FF 15 18 3E 01 00  // ....@...K....>..
    2370: 5F 5E 5B 5D C2 08 00 CC CC CC CC CC 8B FF 55 8B  // _^[]..........U.
    2380: EC 8B 4D 08 8B 41 08 8B 40 04 EB 10 3B C1 74 09  // ..M..A..@...;.t.
    2390: 8B 50 28 80 7A 43 08 74 0D 8B 40 0C 85 C0 75 EC  // .P(.zC.t..@...u.
    23A0: 32 C0 5D C2 04 00 B0 01 EB F8 CC CC CC CC CC CC  // 2.].............
    23B0: 8B FF 55 8B EC 51 51 8B 4D 0C 83 65 FC 00 53 8B  // ..U..QQ.M..e..S.
    23C0: 5D 08 56 8B 73 28 57 8B 79 60 0F B6 47 01 83 E8  // ].V.s(W.y`..G...
    23D0: 00 0F 84 FA 00 00 00 48 48 0F 84 C7 00 00 00 83  // .......HH.......
    23E0: E8 14 75 06 83 7F 08 01 74 0C 51 53 E8 A7 F0 FF  // ..u.....t.QS....
    23F0: FF E9 19 01 00 00 53 E8 80 08 00 00 85 C0 74 1B  // ......S.......t.
    2400: 80 3D 08 40 01 00 00 74 12 80 7E 40 00 75 0C 81  // .=.@...t..~@.u..
    2410: 63 1C FF DF FF FF E9 D6 00 00 00 33 C9 51 51 51  // c..........3.QQQ
    2420: 8D 46 24 51 50 89 45 F8 FF 15 20 3E 01 00 80 7F  // .F$QP.E... >....
    2430: 04 00 C6 45 0B 00 75 1C 83 7E 34 01 75 16 8B 43  // ...E..u..~4.u..C
    2440: 1C A9 00 40 00 00 75 0C 0D 00 20 00 00 89 43 1C  // ...@..u... ...C.
    2450: C6 45 0B 01 FF 75 0C 53 E8 8D F0 FF FF 89 45 FC  // .E...u.S......E.
    2460: 85 C0 7C 26 83 C6 34 80 7F 04 00 8B C6 74 09 33  // ..|&..4......t.3
    2470: C9 41 F0 0F C1 08 EB 07 83 C9 FF F0 0F C1 08 80  // .A..............
    2480: 7F 04 00 74 12 83 3E 01 EB 04 80 7D 0B 01 75 07  // ...t..>....}..u.
    2490: 81 63 1C FF DF FF FF 6A 00 6A 00 FF 75 F8 FF 15  // .c.....j.j..u...
    24A0: 1C 3E 01 00 EB 4B 51 53 E8 3D F0 FF FF FF 76 04  // .>...KQS.=....v.
    24B0: 8B F8 FF 15 6C 3E 01 00 53 FF 15 58 3E 01 00 8B  // ....l>..S..X>...
    24C0: 4D 0C 32 D2 89 79 18 FF 15 2C 3E 01 00 8B C7 EB  // M.2..y...,>.....
    24D0: 3E F6 05 08 40 01 00 02 74 2C 80 7E 40 00 75 26  // >...@...t,.~@.u&
    24E0: 53 E8 96 FE FF FF 84 C0 74 1C C7 45 FC 22 00 00  // S.......t..E."..
    24F0: C0 8B 4D 0C 8B 75 FC 32 D2 89 71 18 FF 15 2C 3E  // ..M..u.2..q...,>
    2500: 01 00 8B C6 EB 09 FF 75 0C 53 E8 21 FE FF FF 5F  // .......u.S.!..._
    2510: 5E 5B C9 C2 08 00 CC CC CC CC CC CC 8B FF 55 8B  // ^[............U.
    2520: EC 56 8B 75 0C 8B 46 60 80 78 01 02 8B 48 0C 75  // .V.u..F`.x...H.u
    2530: 18 83 F9 05 75 07 E8 15 ED FF FF EB 0C 83 F9 01  // ....u...........
    2540: 75 07 C6 05 0C 40 01 00 00 83 3D 00 40 01 00 06  // u....@....=.@...
    2550: 72 1A FE 46 23 83 46 60 24 8B 45 08 8B 40 28 8B  // r..F#.F`$.E..@(.
    2560: 48 04 8B D6 FF 15 18 3E 01 00 EB 1E 56 FF 15 4C  // H......>....V..L
    2570: 3E 01 00 FE 46 23 83 46 60 24 8B 45 08 8B 40 28  // >...F#.F`$.E..@(
    2580: 56 FF 70 04 FF 15 48 3E 01 00 5E 5D C2 08 00 CC  // V.p...H>..^]....
    2590: CC CC CC CC 8B FF 55 8B EC 8B 45 0C 83 78 18 00  // ......U...E..x..
    25A0: 7C 07 8B 48 0C C6 41 06 01 80 78 21 00 74 07 8B  // |..H..A...x!.t..
    25B0: 48 60 80 49 03 01 8B 40 18 5D C2 0C 00 CC CC CC  // H`.I...@.]......
    25C0: CC CC 8B FF 55 8B EC 53 8B 5D 0C 56 8B 73 60 81  // ....U..S.].V.s`.
    25D0: 7E 0C 00 20 28 A0 57 8B 7D 08 8B 4F 28 89 4D 08  // ~.. (.W.}..O(.M.
    25E0: 75 2B 8B 43 0C 33 F6 3B C6 74 0E 81 38 AA 55 00  // u+.C.3.;.t..8.U.
    25F0: 00 75 06 0F B6 49 40 89 08 89 73 18 32 D2 8B CB  // .u...I@...s.2...
    2600: FF 15 2C 3E 01 00 8B C6 E9 CA 00 00 00 80 3D 08  // ..,>..........=.
    2610: 40 01 00 00 0F 84 B6 00 00 00 80 79 40 00 0F 85  // @..........y@...
    2620: AC 00 00 00 57 E8 52 06 00 00 85 C0 0F 84 9E 00  // ....W.R.........
    2630: 00 00 8B 76 0C 81 EE 04 D0 04 00 74 5C 83 EE 04  // ...v.......t\...
    2640: 74 57 83 EE 0C 74 52 83 EE 14 74 4D 81 EE FC 2F  // tW...tR...tM.../
    2650: 02 00 74 3E 81 EE F0 0B 26 00 75 74 8B 73 60 8D  // ..t>....&.ut.s`.
    2660: 46 DC 8B F8 6A 07 59 F3 A5 C6 40 03 00 8B 43 60  // F...j.Y...@...C`
    2670: 83 60 FC 00 83 E8 24 C7 40 1C CA 18 01 00 C6 40  // .`....$.@......@
    2680: 03 E0 8B 45 08 8B 48 04 8B D3 FF 15 18 3E 01 00  // ...E..H......>..
    2690: EB 45 B8 A2 00 00 C0 EB 29 8B 43 0C 83 C0 1C 8A  // .E......).C.....
    26A0: 00 3C 0A 74 18 3C 2A 74 14 3C AA 74 10 3C 8A 74  // .<.t.<*t.<.t.<.t
    26B0: 0C 3C 10 74 08 3C 2E 74 04 3C 04 75 13 B8 22 00  // .<.t.<.t.<.u..".
    26C0: 00 C0 83 63 1C 00 89 43 18 8B F0 E9 2C FF FF FF  // ...c...C....,...
    26D0: 53 57 E8 C1 ED FF FF 5F 5E 5B 5D C2 08 00 CC CC  // SW....._^[].....
    26E0: CC CC CC CC 8B FF 55 8B EC 8B 4D 0C 8B 41 60 8A  // ......U...M..A`.
    26F0: 00 84 C0 74 4B 3C 02 76 3C 3C 04 76 2D 3C 0E 74  // ...tK<.v<<.v-<.t
    2700: 1E 3C 16 74 0F 3C 1B 75 2C 51 FF 75 08 E8 9E FC  // .<.t.<.u,Q.u....
    2710: FF FF EB 3E 51 FF 75 08 E8 FF FD FF FF EB 33 51  // ...>Q.u.......3Q
    2720: FF 75 08 E8 9A FE FF FF EB 28 51 FF 75 08 E8 65  // .u.......(Q.u..e
    2730: FB FF FF EB 1D 51 FF 75 08 E8 5A ED FF FF EB 12  // .....Q.u..Z.....
    2740: 83 61 18 00 83 61 1C 00 32 D2 FF 15 2C 3E 01 00  // .a...a..2...,>..
    2750: 33 C0 5D C2 08 00 CC CC CC CC CC CC 8B FF 55 8B  // 3.]...........U.
    2760: EC 56 8B 75 0C 8B 4E 18 8B 46 60 85 C9 7D 10 81  // .V.u..N..F`..}..
    2770: F9 3C 00 00 C0 74 08 81 F9 05 00 00 80 75 64 80  // .<...t.......ud.
    2780: 38 0F 57 75 0E 8B 40 04 8B 78 10 8D 50 30 8B 40  // 8.Wu..@..x..P0.@
    2790: 18 EB 25 81 78 0C 04 D0 04 00 75 10 8B 4E 0C 8B  // ..%.x.....u..N..
    27A0: 41 14 8B 79 0C 8D 51 1C 03 C1 EB 0C 8B 46 0C 8B  // A..y..Q......F..
    27B0: 78 0C 8D 50 1C 8B 40 14 33 C9 80 3A 1A 0F 95 C1  // x..P..@.3..:....
    27C0: 8D 0C 8D 04 00 00 00 8D 51 18 3B FA 5F 72 14 03  // ........Q.;._r..
    27D0: C1 8A 08 80 E1 3F 80 F9 2A 75 08 80 60 03 C8 80  // .....?..*u..`...
    27E0: 60 05 F3 80 7E 21 00 74 07 8B 46 60 80 48 03 01  // `...~!.t..F`.H..
    27F0: 8B 46 18 5E 5D C2 0C 00 CC CC CC CC CC CC 8B FF  // .F.^]...........
    2800: 55 8B EC 8B 4D 0C 83 79 18 00 7C 1E 8B 41 0C 56  // U...M..y..|..A.V
    2810: 33 F6 39 70 04 76 12 8D 50 24 C7 02 04 00 00 00  // 3.9p.v..P$......
    2820: 83 C2 20 46 3B 70 04 72 F1 5E 80 79 21 00 74 07  // .. F;p.r.^.y!.t.
    2830: 8B 41 60 80 48 03 01 8B 41 18 5D C2 0C 00 CC CC  // .A`.H...A.].....
    2840: CC CC CC CC 8B FF 55 8B EC 80 3D 08 40 01 00 00  // ......U...=.@...
    2850: 8B 55 08 8B 45 0C 53 8B 5A 28 56 57 0F 84 D4 00  // .U..E.S.Z(VW....
    2860: 00 00 80 7B 40 00 0F 85 CA 00 00 00 8B 70 60 8B  // ...{@........p`.
    2870: 4E 0C 81 E9 28 40 02 00 0F 84 9E 00 00 00 81 E9  // N...(@..........
    2880: DC 8F 02 00 74 41 83 E9 10 74 3C 81 E9 F0 3B 28  // ....tA...t<...;(
    2890: 00 0F 85 9F 00 00 00 8D 56 DC 6A 07 59 8B FA F3  // ........V.j.Y...
    28A0: A5 C6 42 03 00 8B 48 60 83 E9 24 C7 41 1C 34 1B  // ..B...H`..$.A.4.
    28B0: 01 00 83 61 20 00 C6 41 03 E0 8B 4B 04 8B D0 FF  // ...a ..A...K....
    28C0: 15 18 3E 01 00 EB 76 8B 78 0C 83 C7 1C 8A 0F 80  // ..>...v.x.......
    28D0: F9 0A 74 48 80 F9 2A 74 43 80 F9 AA 74 3E 80 F9  // ..tH..*tC...t>..
    28E0: 8A 74 39 80 F9 5A 75 4E 8A 4F 02 80 E1 3F 80 F9  // .t9..ZuN.O...?..
    28F0: 05 75 0C B9 10 00 00 C0 89 48 18 8B F1 EB 25 8D  // .u.......H....%.
    2900: 56 DC 6A 07 59 8B FA F3 A5 C6 42 03 00 8B 48 60  // V.j.Y.....B...H`
    2910: 83 E9 24 C7 41 1C 92 1A 01 00 EB 96 BE 22 00 00  // ..$.A........"..
    2920: C0 89 70 18 83 60 1C 00 32 D2 8B C8 FF 15 2C 3E  // ..p..`..2.....,>
    2930: 01 00 8B C6 EB 07 50 52 E8 5B EB FF FF 5F 5E 5B  // ......PR.[..._^[
    2940: 5D C2 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B  // ]...........U...
    2950: 4D 08 8B 41 28 53 8B 5D 0C 33 D2 56 8B 73 60 89  // M..A(S.].3.V.s`.
    2960: 45 08 38 15 08 40 01 00 74 7B 38 50 40 75 76 8B  // E.8..@..t{8P@uv.
    2970: 46 04 3D 00 00 40 00 72 6C 38 50 02 75 67 8A 40  // F.=..@.rl8P.ug.@
    2980: 30 3C 0A 74 47 3C 2A 74 43 3C AA 74 3F 3C 8A 74  // 0<.tG<*tC<.t?<.t
    2990: 3B 3C 1A 74 04 3C 5A 75 4C 57 8D 46 DC 8B F8 6A  // ;<.t.<ZuLW.F...j
    29A0: 07 59 F3 A5 88 50 03 8B 43 60 83 E8 24 89 50 20  // .Y...P..C`..$.P 
    29B0: C7 40 1C 92 1A 01 00 C6 40 03 E0 8B 45 08 8B 48  // .@......@...E..H
    29C0: 04 8B D3 FF 15 18 3E 01 00 5F EB 20 89 53 1C BE  // ......>.._. .S..
    29D0: 22 00 00 C0 32 D2 8B CB 89 73 18 FF 15 2C 3E 01  // "...2....s...,>.
    29E0: 00 8B C6 EB 07 53 51 E8 AC EA FF FF 5E 5B 5D C2  // .....SQ.....^[].
    29F0: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 83 3D 00  // ..........U...=.
    2A00: 40 01 00 06 72 1B 8B 55 0C FE 42 23 83 42 60 24  // @...r..U..B#.B`$
    2A10: 8B 45 08 8B 40 28 8B 48 04 FF 15 18 3E 01 00 EB  // .E..@(.H....>...
    2A20: 23 56 8B 75 0C 56 FF 15 4C 3E 01 00 FE 46 23 83  // #V.u.V..L>...F#.
    2A30: 46 60 24 8B 45 08 8B 40 28 56 FF 70 04 FF 15 48  // F`$.E..@(V.p...H
    2A40: 3E 01 00 5E 5D C2 08 00 CC CC CC CC CC CC 8B FF  // >..^]...........
    2A50: 55 8B EC 8B 4D 0C 8B 41 60 0F B6 00 83 E8 04 56  // U...M..A`......V
    2A60: 8B 75 08 8B 56 28 74 28 83 E8 0A 74 1A 48 74 0E  // .u..V(t(...t.Ht.
    2A70: 83 E8 07 75 41 51 56 E8 7C FF FF FF EB 3F 51 56  // ...uAQV.|....?QV
    2A80: E8 C5 FE FF FF EB 36 51 56 E8 B6 FD FF FF EB 2D  // ......6QV......-
    2A90: 33 C0 38 05 08 40 01 00 74 1C 38 42 40 75 17 BE  // 3.8..@..t.8B@u..
    2AA0: 22 00 00 C0 32 D2 89 71 18 89 41 1C FF 15 2C 3E  // "...2..q..A...,>
    2AB0: 01 00 8B C6 EB 07 51 56 E8 DB E9 FF FF 5E 5D C2  // ......QV.....^].
    2AC0: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 83 EC 10  // ..........U.....
    2AD0: 53 56 57 33 FF 57 57 8D 45 F0 50 FF 15 24 3E 01  // SVW3.WW.E.P..$>.
    2AE0: 00 8B 5D 08 0F B6 43 30 57 50 FF 15 80 3E 01 00  // ..]...C0WP...>..
    2AF0: 8B 4D 14 8B 55 0C 8B F0 8B 46 60 89 48 E4 89 48  // .M..U....F`.H..H
    2B00: E0 89 50 E8 83 E8 24 C6 00 0E 8B 45 10 89 46 0C  // ..P...$....E..F.
    2B10: 89 46 3C 8B 46 60 89 4E 1C 83 E8 24 89 7E 04 8D  // .F<.F`.N...$.~..
    2B20: 4D F0 89 48 20 8B D6 8B CB C7 40 1C F6 07 01 00  // M..H .....@.....
    2B30: C6 40 03 E0 FF 15 18 3E 01 00 8B D8 81 FB 03 01  // .@.....>........
    2B40: 00 00 75 11 57 57 57 57 8D 45 F0 50 FF 15 20 3E  // ..u.WWWW.E.P.. >
    2B50: 01 00 8B 5E 18 56 FF 15 D0 3E 01 00 5F 5E 8B C3  // ...^.V...>.._^..
    2B60: 5B C9 C2 10 00 CC CC CC CC CC 8B FF 55 8B EC 83  // [...........U...
    2B70: EC 18 56 33 F6 39 75 08 75 07 B8 0D 00 00 C0 EB  // ..V3.9u.u.......
    2B80: 5D 57 8D 45 F8 50 8D 45 E8 50 56 6A 08 FF 75 0C  // ]W.E.P.E.PVj..u.
    2B90: 56 56 FF 75 08 68 14 0C 2D 00 FF 15 84 3E 01 00  // VV.u.h..-....>..
    2BA0: 8B F8 3B FE 75 07 B8 9A 00 00 C0 EB 30 56 56 8D  // ..;.u.......0VV.
    2BB0: 45 E8 50 FF 15 24 3E 01 00 8B 4D 08 8B D7 FF 15  // E.P..$>...M.....
    2BC0: 18 3E 01 00 3D 03 01 00 00 75 12 56 56 56 6A 05  // .>..=....u.VVVj.
    2BD0: 8D 45 E8 50 FF 15 20 3E 01 00 8B 45 F8 5F 5E C9  // .E.P.. >...E._^.
    2BE0: C2 08 00 CC CC CC CC CC 8B FF 55 8B EC FF 15 00  // ..........U.....
    2BF0: 3E 01 00 84 C0 74 04 33 C0 EB 78 53 8B 5D 08 85  // >....t.3..xS.]..
    2C00: DB 75 04 33 C0 EB 6B 56 57 BE 55 53 42 46 56 68  // .u.3..kVW.USBFVh
    2C10: 00 10 00 00 6A 00 FF 15 38 3E 01 00 8B F8 57 53  // ....j...8>....WS
    2C20: E8 45 FF FF FF 85 C0 7C 2F 80 7F 05 00 75 06 80  // .E.....|/....u..
    2C30: 7F 06 00 74 23 56 57 FF 15 34 3E 01 00 8B 43 2C  // ...t#VW..4>...C,
    2C40: 83 F8 03 74 0E 83 F8 02 74 09 83 F8 33 74 04 6A  // ...t....t...3t.j
    2C50: 08 EB 02 6A 11 58 EB 18 56 57 FF 15 34 3E 01 00  // ...j.X..VW..4>..
    2C60: 53 E8 12 EE FF FF 0F B6 C0 F7 D8 1B C0 83 E0 08  // S...............
    2C70: 5F 5E 5B 5D C2 04 00 CC CC CC CC CC 8B FF 55 8B  // _^[]..........U.
    2C80: EC 8B 45 08 56 8B 70 28 85 F6 75 04 33 C0 EB 35  // ..E.V.p(..u.3..5
    2C90: 80 7E 43 FF 75 10 8B 46 08 85 C0 74 EF 50 E8 45  // .~C.u..F...t.P.E
    2CA0: FF FF FF 88 46 43 8A 46 43 3C 01 75 05 83 3E 05  // ....FC.FC<.u..>.
    2CB0: 74 10 3C 11 74 0C 3C 12 74 08 3C 07 74 04 3C 08  // t.<.t.<.t.<.t.<.
    2CC0: 75 CA 0F B6 C0 5E 5D C2 04 00 CC CC CC CC CC CC  // u....^].........
    2CD0: 8B FF 55 8B EC 8B 55 0C FE 42 23 83 42 60 24 8B  // ..U...U..B#.B`$.
    2CE0: 45 08 8B 40 28 8B 48 04 FF 15 18 3E 01 00 5D C2  // E..@(.H....>..].
    2CF0: 08 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B 45 08  // ..........U...E.
    2D00: 53 8B 5D 0C 56 57 8B 78 28 8B 43 60 8B 70 04 8B  // S.].VW.x(.C`.p..
    2D10: 4E 08 89 7D 08 F7 C1 00 01 01 40 75 5D F6 C1 02  // N..}......@u]...
    2D20: 75 58 0F B6 48 0B 83 F9 03 74 1C 85 C9 74 18 83  // uX..H....t...t..
    2D30: F9 05 74 13 83 F9 02 74 0E FE 43 23 83 C0 24 89  // ..t....t..C#..$.
    2D40: 43 60 8B 4F 04 EB 29 81 66 08 FF FF FE FF 81 60  // C`.O..).f......`
    2D50: 08 FF EF FF FF C6 40 0B 01 8B 73 60 8D 46 DC 6A  // ......@...s`.F.j
    2D60: 07 8B F8 59 F3 A5 C6 40 03 00 8B 45 08 8B 48 04  // ...Y...@...E..H.
    2D70: 8B D3 FF 15 18 3E 01 00 EB 18 83 63 1C 00 BE 22  // .....>.....c..."
    2D80: 00 00 C0 32 D2 8B CB 89 73 18 FF 15 2C 3E 01 00  // ...2....s...,>..
    2D90: 8B C6 5F 5E 5B 5D C2 08 00 CC CC CC CC CC 8B FF  // .._^[]..........
    2DA0: 55 8B EC 53 56 57 FF 75 08 FF 15 68 3E 01 00 8B  // U..SVW.u...h>...
    2DB0: 3D 64 3E 01 00 8B F0 85 F6 74 11 8B 46 08 3B 05  // =d>......t..F.;.
    2DC0: 30 40 01 00 75 06 83 7E 28 00 75 25 56 FF 15 88  // 0@..u..~(.u%V...
    2DD0: 3E 01 00 8B CE 8B D8 FF D7 8B F3 85 DB 75 D8 8B  // >............u..
    2DE0: 45 0C 85 C0 74 02 21 18 32 C0 5F 5E 5B 5D C2 08  // E...t.!.2._^[]..
    2DF0: 00 8B 45 0C 85 C0 74 02 89 30 8B CE FF D7 B0 01  // ..E...t..0......
    2E00: EB E8 CC CC CC CC CC CC 8B FF 55 8B EC 81 EC 08  // ..........U.....
    2E10: 03 00 00 A1 F0 3F 01 00 33 C5 89 45 FC F6 05 08  // .....?..3..E....
    2E20: 40 01 00 03 56 57 6A 30 59 6A 30 BE 96 3C 01 00  // @...VWj0Yj0..<..
    2E30: 8D BD D0 FD FF FF F3 A5 59 6A 30 BE D6 3B 01 00  // ........Yj0..;..
    2E40: 8D BD 90 FE FF FF F3 A5 59 6A 06 BE 16 3B 01 00  // ........Yj...;..
    2E50: 8D BD 10 FD FF FF F3 A5 59 BE FC 3A 01 00 8D 7D  // ........Y..:...}
    2E60: C4 F3 A5 66 A5 6A 06 59 BE E2 3A 01 00 8D 7D E0  // ...f.j.Y..:...}.
    2E70: F3 A5 66 A5 6A 1C 59 BE 70 3A 01 00 8D BD 50 FF  // ..f.j.Y.p:....P.
    2E80: FF FF F3 A5 66 A5 C6 85 0B FD FF FF 01 75 07 32  // ....f........u.2
    2E90: C0 E9 81 02 00 00 68 55 53 42 46 68 00 10 00 00  // ......hUSBFh....
    2EA0: 33 FF 57 FF 15 38 3E 01 00 89 85 04 FD FF FF 3B  // 3.W..8>........;
    2EB0: C7 75 07 B0 01 E9 5D 02 00 00 89 BD 00 FD FF FF  // .u....].........
    2EC0: 53 39 BD 00 FD FF FF 75 15 F6 05 0A 40 01 00 01  // S9.....u....@...
    2ED0: 0F 84 15 01 00 00 8D 85 D0 FD FF FF EB 34 83 BD  // .............4..
    2EE0: 00 FD FF FF 01 75 18 F6 05 0A 40 01 00 02 0F 84  // .....u....@.....
    2EF0: F7 00 00 00 8D 85 90 FE FF FF 8D 5D C4 EB 16 F6  // ...........]....
    2F00: 05 0A 40 01 00 08 0F 84 DF 00 00 00 8D 85 10 FD  // ..@.............
    2F10: FF FF 8D 5D E0 8D 8D 0C FD FF FF 51 68 1F 00 02  // ...].......Qh...
    2F20: 00 50 E8 91 10 00 00 85 C0 0F 8C BC 00 00 00 8D  // .P..............
    2F30: 85 F8 FC FF FF 50 FF B5 04 FD FF FF C7 85 F8 FC  // .....P..........
    2F40: FF FF 00 08 00 00 53 FF B5 0C FD FF FF E8 9E 11  // ......S.........
    2F50: 00 00 8B F0 3B F7 7C 1A 68 66 3A 01 00 FF B5 F8  // ....;.|.hf:.....
    2F60: FC FF FF FF B5 04 FD FF FF E8 62 13 00 00 85 C0  // ..........b.....
    2F70: 75 6E 3B F7 8B 8D 04 FD FF FF 7C 1E EB 17 8B C1  // un;.......|.....
    2F80: 8D 70 02 66 8B 10 40 40 66 3B D7 75 F6 2B C6 D1  // .p.f..@@f;.u.+..
    2F90: F8 8D 4C 41 02 66 39 39 75 E4 BE 66 3A 01 00 8B  // ..LA.f99u..f:...
    2FA0: F9 A5 A5 8B C1 66 A5 8D 50 02 66 8B 30 40 40 66  // .....f..P.f.0@@f
    2FB0: 85 F6 75 F6 FF B5 04 FD FF FF 2B C2 D1 F8 8D 44  // ..u.......+....D
    2FC0: 41 02 33 C9 66 89 08 53 66 89 48 02 FF B5 0C FD  // A.3.f..Sf.H.....
    2FD0: FF FF E8 BB 11 00 00 C6 85 0B FD FF FF 00 33 FF  // ..............3.
    2FE0: FF B5 0C FD FF FF E8 67 0F 00 00 FF 85 00 FD FF  // .......g........
    2FF0: FF 83 BD 00 FD FF FF 03 0F 82 C3 FE FF FF 8D 85  // ................
    3000: 0C FD FF FF 50 BE 1F 00 02 00 56 8D 85 50 FF FF  // ....P.....V..P..
    3010: FF 50 E8 A1 0F 00 00 3B C7 5B 7D 1C 8D 85 0C FD  // .P.....;.[}.....
    3020: FF FF 50 56 8D 85 50 FF FF FF 50 E8 34 0F 00 00  // ..PV..P...P.4...
    3030: 3B C7 0F 8C C8 00 00 00 68 00 02 00 00 FF B5 04  // ;.......h.......
    3040: FD FF FF BE 5A 3A 01 00 56 FF B5 0C FD FF FF E8  // ....Z:..V.......
    3050: B2 0F 00 00 85 C0 7D 11 68 4C 3A 01 00 56 FF B5  // ......}.hL:..V..
    3060: 0C FD FF FF E8 39 10 00 00 8D 85 FC FC FF FF 50  // .....9.........P
    3070: BE 40 3A 01 00 56 FF B5 0C FD FF FF E8 BD 11 00  // .@:..V..........
    3080: 00 85 C0 7C 08 39 BD FC FC FF FF 74 0D 57 56 FF  // ...|.9.....t.WV.
    3090: B5 0C FD FF FF E8 02 12 00 00 8D 85 FC FC FF FF  // ................
    30A0: 50 BE 36 3A 01 00 56 FF B5 0C FD FF FF E8 8C 11  // P.6:..V.........
    30B0: 00 00 85 C0 7C 09 83 BD FC FC FF FF 01 74 0E 6A  // ....|........t.j
    30C0: 01 56 FF B5 0C FD FF FF E8 CF 11 00 00 8D 85 FC  // .V..............
    30D0: FC FF FF 50 BE 2E 3A 01 00 56 FF B5 0C FD FF FF  // ...P..:..V......
    30E0: E8 59 11 00 00 85 C0 7C 09 83 BD FC FC FF FF 01  // .Y.....|........
    30F0: 74 0E 6A 01 56 FF B5 0C FD FF FF E8 9C 11 00 00  // t.j.V...........
    3100: 68 55 53 42 46 FF B5 04 FD FF FF FF 15 34 3E 01  // hUSBF........4>.
    3110: 00 8A 85 0B FD FF FF 8B 4D FC 5F 33 CD 5E E8 15  // ........M._3.^..
    3120: 14 00 00 C9 C3 CC CC CC CC CC 8B FF 55 8B EC 51  // ............U..Q
    3130: 53 8B 5D 0C 56 57 8B 7B 60 E8 CA FC FF FF 8B 47  // S.].VW.{`......G
    3140: 04 FF 70 0C E8 9F FA FF FF 88 45 0F 84 C0 0F 84  // ..p.......E.....
    3150: 21 01 00 00 6A 04 8D 45 FC 50 8B 47 04 68 00 20  // !...j..E.P.G.h. 
    3160: 28 A0 C7 45 FC AA 55 00 00 FF 70 0C E8 57 F9 FF  // (..E..U...p..W..
    3170: FF 85 C0 7C 0A 83 7D FC 01 75 04 C6 45 0F 00 80  // ...|..}..u..E...
    3180: 3D 08 40 01 00 00 0F 84 E9 00 00 00 80 7D 0F 00  // =.@..........}..
    3190: 0F 84 DF 00 00 00 8B 4D 08 8D 45 0C 50 33 C0 50  // .......M..E.P3.P
    31A0: 50 FF 71 2C 50 6A 68 FF 35 30 40 01 00 FF 15 60  // P.q,Pjh.50@....`
    31B0: 3E 01 00 8B F0 85 F6 7D 18 83 63 1C 00 89 73 18  // >......}..c...s.
    31C0: 32 D2 8B CB FF 15 2C 3E 01 00 8B C6 E9 AD 00 00  // 2.....,>........
    31D0: 00 8B 45 0C 6A 68 6A 00 FF 70 28 E8 98 13 00 00  // ..E.jhj..p(.....
    31E0: 8B 45 0C 8B 70 28 8B 47 04 8B 40 0C 83 C4 0C 53  // .E..p(.G..@....S
    31F0: FF 75 08 89 46 08 C7 06 05 00 00 00 C6 46 43 01  // .u..F........FC.
    3200: E8 E5 E2 FF FF 83 7B 18 00 8B 46 08 8B 78 24 7C  // ......{...F..x$|
    3210: 53 6A 00 FF 77 08 E8 83 FB FF FF 84 C0 75 45 8B  // Sj..w........uE.
    3220: 47 08 F6 40 1C 04 74 07 8B 45 0C 83 48 1C 04 8B  // G..@..t..E..H...
    3230: 47 08 F6 40 1C 10 74 07 8B 45 0C 83 48 1C 10 83  // G..@..t..E..H...
    3240: C6 04 56 FF 77 08 FF 75 0C FF 15 8C 3E 01 00 85  // ..V.w..u....>...
    3250: C0 7C 11 83 3E 00 74 0C 8B 45 0C 81 60 1C 7F FF  // .|..>.t..E..`...
    3260: FF FF EB 09 FF 75 0C FF 15 58 3E 01 00 8B 73 18  // .....u...X>...s.
    3270: E9 4B FF FF FF 53 FF 75 08 E8 52 FA FF FF 5F 5E  // .K...S.u..R..._^
    3280: 5B C9 C2 08 00 CC CC CC CC CC 8B FF 55 8B EC 83  // [...........U...
    3290: EC 14 8B 45 08 8B 40 28 53 56 57 6A 00 89 45 FC  // ...E..@(SVWj..E.
    32A0: 6A 00 8D 45 EC 50 FF 15 24 3E 01 00 8B 5D 0C 8B  // j..E.P..$>...]..
    32B0: 73 60 8D 46 DC 6A 07 8B F8 59 F3 A5 8B 75 FC C6  // s`.F.j...Y...u..
    32C0: 40 03 00 8B 43 60 83 E8 24 8D 4D EC C7 40 1C F6  // @...C`..$.M..@..
    32D0: 07 01 00 89 48 20 C6 40 03 E0 83 C6 04 FF 36 FF  // ....H .@......6.
    32E0: 15 6C 3E 01 00 8B 0E 8B D3 FF 15 18 3E 01 00 3D  // .l>.........>..=
    32F0: 03 01 00 00 75 10 33 C0 50 50 50 50 8D 45 EC 50  // ....u.3.PPPP.E.P
    3300: FF 15 20 3E 01 00 8B 43 18 85 C0 7D 15 3D 0E 01  // .. >...C...}.=..
    3310: 00 C0 74 0E 56 FF 36 FF 75 08 FF 15 8C 3E 01 00  // ..t.V.6.u....>..
    3320: EB 09 FF 75 08 FF 15 58 3E 01 00 8B 73 18 32 D2  // ...u...X>...s.2.
    3330: 8B CB FF 15 2C 3E 01 00 5F 8B C6 5E 5B C9 C2 08  // ....,>.._..^[...
    3340: 00 CC CC CC CC CC 8B FF 55 8B EC 8B 55 0C 8B 42  // ........U...U..B
    3350: 60 8A 48 01 56 57 8B 7D 08 8B 77 28 80 F9 01 75  // `.H.VW.}..w(...u
    3360: 09 52 57 E8 C2 FD FF FF EB 20 80 F9 03 75 09 52  // .RW...... ...u.R
    3370: 57 E8 14 FF FF FF EB 12 FE 42 23 83 C0 24 89 42  // W........B#..$.B
    3380: 60 8B 4E 04 FF 15 18 3E 01 00 5F 5E 5D C2 08 00  // `.N....>.._^]...
    3390: CC CC CC CC CC CC 8B FF 55 8B EC 51 51 80 3D 08  // ........U..QQ.=.
    33A0: 40 01 00 00 53 8B 5D 08 56 8B 35 08 3E 01 00 57  // @...S.].V.5.>..W
    33B0: 8B 3D 90 3E 01 00 75 40 68 9E 3D 01 00 8D 45 F8  // .=.>..u@h.=...E.
    33C0: 50 FF D6 8B 43 08 6A 01 83 C0 1C 50 8D 45 F8 50  // P...C.j....P.E.P
    33D0: FF D7 85 C0 75 04 B0 01 EB 3E 68 7C 3D 01 00 8D  // ....u....>h|=...
    33E0: 45 F8 50 FF D6 8B 43 08 6A 01 83 C0 1C 50 8D 45  // E.P...C.j....P.E
    33F0: F8 50 FF D7 85 C0 74 DE 68 56 3D 01 00 8D 45 F8  // .P....t.hV=...E.
    3400: 50 FF D6 8B 43 08 6A 01 83 C0 1C 50 8D 45 F8 50  // P...C.j....P.E.P
    3410: FF D7 F7 D8 1A C0 FE C0 5F 5E 5B C9 C2 04 00 CC  // ........_^[.....
    3420: CC CC CC CC 8B FF 55 8B EC 57 8B 7D 08 57 E8 63  // ......U..W.}.W.c
    3430: FF FF FF 84 C0 74 07 33 C0 E9 8D 00 00 00 53 56  // .....t.3......SV
    3440: 8D 45 08 50 33 DB 53 53 6A 08 53 6A 68 FF 35 30  // .E.P3.SSj.Sjh.50
    3450: 40 01 00 FF 15 60 3E 01 00 8B F0 3B F3 7C 68 F6  // @....`>....;.|h.
    3460: 47 1C 04 74 07 8B 45 08 83 48 1C 04 F6 47 1C 10  // G..t..E..H...G..
    3470: 74 07 8B 45 08 83 48 1C 10 8B 45 08 8B 70 28 6A  // t..E..H...E..p(j
    3480: 68 53 56 E8 F0 10 00 00 83 C4 0C C7 06 05 00 00  // hSV.............
    3490: 00 88 5E 43 83 7F 2C 03 75 04 C6 46 43 11 83 C6  // ..^C..,.u..FC...
    34A0: 04 56 57 FF 75 08 FF 15 8C 3E 01 00 8B F0 3B F3  // .VW.u....>....;.
    34B0: 7D 0B FF 75 08 FF 15 58 3E 01 00 EB 0A 8B 45 08  // }..u...X>.....E.
    34C0: 81 60 1C 7F FF FF FF 8B C6 5E 5B 5F 5D C2 04 00  // .`.......^[_]...
    34D0: CC CC CC CC CC CC 8B FF 55 8B EC 8B 45 08 56 8B  // ........U...E.V.
    34E0: 70 10 EB 16 8B 4E 08 3B 0D 30 40 01 00 75 06 83  // p....N.;.0@..u..
    34F0: 7E 28 00 75 0B 8B C6 8B 76 10 85 F6 75 E6 EB 14  // ~(.u....v...u...
    3500: 50 FF 15 6C 3E 01 00 83 7E 10 00 75 07 56 FF 15  // P..l>...~..u.V..
    3510: 58 3E 01 00 5E 5D C2 04 00 CC CC CC CC CC 8B FF  // X>..^]..........
    3520: 55 8B EC F6 05 0A 40 01 00 04 74 23 8B 4D 08 8B  // U.....@...t#.M..
    3530: 41 2C 83 F8 08 74 05 83 F8 03 75 13 80 7D 0C 00  // A,...t....u..}..
    3540: 51 74 07 E8 DC FE FF FF EB 05 E8 87 FF FF FF 5D  // Qt.............]
    3550: C2 08 00 CC CC CC CC CC 8B FF 55 8B EC 53 8B 5D  // ..........U..S.]
    3560: 08 8B 4B 28 56 57 8B 7D 0C 8B 77 60 8A 06 84 C0  // ..K(VW.}..w`....
    3570: 74 48 3C 04 74 44 3C 0D 74 37 3C 10 74 2C 3C 16  // tH<.tD<.t7<.t,<.
    3580: 75 1A 80 7E 01 02 8B 46 0C 75 11 83 F8 05 74 1A  // u..~...F.u....t.
    3590: 83 F8 01 75 07 C6 05 0C 40 01 00 00 57 53 E8 2D  // ...u....@...WS.-
    35A0: F7 FF FF 5F 5E 5B 5D C2 08 00 E8 A1 DC FF FF EB  // ..._^[].........
    35B0: EB 57 53 E8 8E FD FF FF EB E9 80 79 40 00 75 DC  // .WS........y@.u.
    35C0: 53 E8 B6 F6 FF FF 84 C0 74 D2 A0 08 40 01 00 A8  // S.......t...@...
    35D0: 02 74 1A 83 67 1C 00 BE 22 00 00 C0 32 D2 8B CF  // .t..g..."...2...
    35E0: 89 77 18 FF 15 2C 3E 01 00 8B C6 EB B6 A8 01 74  // .w...,>........t
    35F0: AB 8A 06 3C 04 74 DC 84 C0 75 A1 57 53 E8 F6 F6  // ...<.t...u.WS...
    3600: FF FF EB 9F CC CC CC CC CC CC 8B FF 55 8B EC 83  // ............U...
    3610: EC 0C 68 40 40 01 00 FF 15 9C 3E 01 00 83 25 78  // ..h@@.....>...%x
    3620: 40 01 00 00 F6 05 0A 40 01 00 04 74 57 8B 45 08  // @......@...tW.E.
    3630: 68 54 28 01 00 50 C7 40 28 80 3F 01 00 FF 15 98  // hT(..P.@(.?.....
    3640: 3E 01 00 85 C0 7C 3F 68 C0 3D 01 00 8D 45 F4 50  // >....|?h.=...E.P
    3650: FF 15 08 3E 01 00 8D 45 08 50 8D 45 FC 50 68 80  // ...>...E.P.E.Ph.
    3660: 00 00 00 8D 45 F4 50 FF 15 94 3E 01 00 85 C0 7C  // ....E.P...>....|
    3670: 13 6A 01 FF 75 08 E8 A3 FE FF FF 8B 4D FC FF 15  // .j..u.......M...
    3680: 64 3E 01 00 33 C0 C9 C2 08 00 CC CC CC CC CC CC  // d>..3...........
    3690: 8B FF 55 8B EC 8B 45 24 85 C0 74 0C 8B 48 28 85  // ..U...E$..t..H(.
    36A0: C9 74 05 83 39 05 75 31 8B 40 28 8B 48 04 8B 41  // .t..9.u1.@(.H..A
    36B0: 08 8B 40 28 85 C0 74 21 8B 40 04 85 C0 74 1A 51  // ..@(..t!.@...t.Q
    36C0: FF 75 20 FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF  // .u .u..u..u..u..
    36D0: 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2 20 00 CC  // u..u.....2.]. ..
    36E0: CC CC CC CC 8B FF 55 8B EC 8B 45 24 85 C0 74 0C  // ......U...E$..t.
    36F0: 8B 48 28 85 C9 74 05 83 39 05 75 31 8B 40 28 8B  // .H(..t..9.u1.@(.
    3700: 48 04 8B 41 08 8B 40 28 85 C0 74 21 8B 40 08 85  // H..A..@(..t!.@..
    3710: C0 74 1A 51 FF 75 20 FF 75 1C FF 75 18 FF 75 14  // .t.Q.u .u..u..u.
    3720: FF 75 10 FF 75 0C FF 75 08 FF D0 EB 02 32 C0 5D  // .u..u..u.....2.]
    3730: C2 20 00 CC CC CC CC CC 8B FF 55 8B EC 56 8B 75  // . ........U..V.u
    3740: 24 85 F6 74 0C 8B 46 28 85 C0 74 05 83 38 05 75  // $..t..F(..t..8.u
    3750: 4D F6 05 08 40 01 00 01 74 13 8B 46 28 80 78 40  // M...@...t..F(.x@
    3760: 00 75 0A 56 E8 13 F5 FF FF 85 C0 75 31 8B 46 28  // .u.V.......u1.F(
    3770: 8B 48 04 8B 41 08 8B 40 28 85 C0 74 21 8B 40 0C  // .H..A..@(..t!.@.
    3780: 85 C0 74 1A 51 FF 75 20 FF 75 1C FF 75 18 FF 75  // ..t.Q.u .u..u..u
    3790: 14 FF 75 10 FF 75 0C FF 75 08 FF D0 EB 02 32 C0  // ..u..u..u.....2.
    37A0: 5E 5D C2 20 00 CC CC CC CC CC 8B FF 55 8B EC 8B  // ^]. ........U...
    37B0: 45 18 85 C0 74 0C 8B 48 28 85 C9 74 05 83 39 05  // E...t..H(..t..9.
    37C0: 75 28 8B 40 28 8B 48 04 8B 41 08 8B 40 28 85 C0  // u(.@(.H..A..@(..
    37D0: 74 18 8B 40 10 85 C0 74 11 51 FF 75 14 FF 75 10  // t..@...t.Q.u..u.
    37E0: FF 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2 14 00  // .u..u.....2.]...
    37F0: CC CC CC CC CC CC 8B FF 55 8B EC 8B 45 18 85 C0  // ........U...E...
    3800: 74 0C 8B 48 28 85 C9 74 05 83 39 05 75 28 8B 40  // t..H(..t..9.u(.@
    3810: 28 8B 48 04 8B 41 08 8B 40 28 85 C0 74 18 8B 40  // (.H..A..@(..t..@
    3820: 14 85 C0 74 11 51 FF 75 14 FF 75 10 FF 75 0C FF  // ...t.Q.u..u..u..
    3830: 75 08 FF D0 EB 02 32 C0 5D C2 14 00 CC CC CC CC  // u.....2.].......
    3840: CC CC 8B FF 55 8B EC 8B 45 28 85 C0 74 0C 8B 48  // ....U...E(..t..H
    3850: 28 85 C9 74 05 83 39 05 75 34 8B 40 28 8B 48 04  // (..t..9.u4.@(.H.
    3860: 8B 41 08 8B 40 28 85 C0 74 24 8B 40 18 85 C0 74  // .A..@(..t$.@...t
    3870: 1D 51 FF 75 24 FF 75 20 FF 75 1C FF 75 18 FF 75  // .Q.u$.u .u..u..u
    3880: 14 FF 75 10 FF 75 0C FF 75 08 FF D0 EB 02 32 C0  // ..u..u..u.....2.
    3890: 5D C2 24 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B  // ].$.........U...
    38A0: 45 20 85 C0 74 0C 8B 48 28 85 C9 74 05 83 39 05  // E ..t..H(..t..9.
    38B0: 75 2E 8B 40 28 8B 48 04 8B 41 08 8B 40 28 85 C0  // u..@(.H..A..@(..
    38C0: 74 1E 8B 40 1C 85 C0 74 17 51 FF 75 1C FF 75 18  // t..@...t.Q.u..u.
    38D0: FF 75 14 FF 75 10 FF 75 0C FF 75 08 FF D0 EB 02  // .u..u..u..u.....
    38E0: 32 C0 5D C2 1C 00 CC CC CC CC CC CC 8B FF 55 8B  // 2.]...........U.
    38F0: EC 8B 45 14 85 C0 74 0C 8B 48 28 85 C9 74 05 83  // ..E...t..H(..t..
    3900: 39 05 75 25 8B 40 28 8B 48 04 8B 41 08 8B 40 28  // 9.u%.@(.H..A..@(
    3910: 85 C0 74 15 8B 40 20 85 C0 74 0E 51 FF 75 10 FF  // ..t..@ ..t.Q.u..
    3920: 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2 10 00 CC  // u..u.....2.]....
    3930: CC CC CC CC 8B FF 55 8B EC 8B 45 18 85 C0 74 0C  // ......U...E...t.
    3940: 8B 48 28 85 C9 74 05 83 39 05 75 28 8B 40 28 8B  // .H(..t..9.u(.@(.
    3950: 48 04 8B 41 08 8B 40 28 85 C0 74 18 8B 40 24 85  // H..A..@(..t..@$.
    3960: C0 74 11 51 FF 75 14 FF 75 10 FF 75 0C FF 75 08  // .t.Q.u..u..u..u.
    3970: FF D0 EB 02 32 C0 5D C2 14 00 CC CC CC CC CC CC  // ....2.].........
    3980: 8B FF 55 8B EC 8B 45 28 85 C0 74 0C 8B 48 28 85  // ..U...E(..t..H(.
    3990: C9 74 05 83 39 05 75 34 8B 40 28 8B 48 04 8B 41  // .t..9.u4.@(.H..A
    39A0: 08 8B 40 28 85 C0 74 24 8B 40 28 85 C0 74 1D 51  // ..@(..t$.@(..t.Q
    39B0: FF 75 24 FF 75 20 FF 75 1C FF 75 18 FF 75 14 FF  // .u$.u .u..u..u..
    39C0: 75 10 FF 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2  // u..u..u.....2.].
    39D0: 24 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B 4D 08  // $.........U...M.
    39E0: 8B 41 04 8B 40 24 8B 40 08 EB 0E 8B 50 08 3B 15  // .A..@$.@....P.;.
    39F0: 30 40 01 00 74 09 8B 40 10 85 C0 75 EE EB 1A 8B  // 0@..t..@...u....
    3A00: 40 28 8B 40 04 8B 40 08 8B 40 28 85 C0 74 0A 8B  // @(.@..@..@(..t..
    3A10: 40 2C 85 C0 74 03 51 FF D0 5D C2 04 00 CC CC CC  // @,..t.Q..]......
    3A20: CC CC 8B FF 55 8B EC 8B 4D 08 8B 41 04 8B 40 24  // ....U...M..A..@$
    3A30: 8B 40 08 EB 0E 8B 50 08 3B 15 30 40 01 00 74 09  // .@....P.;.0@..t.
    3A40: 8B 40 10 85 C0 75 EE EB 1A 8B 40 28 8B 40 04 8B  // .@...u....@(.@..
    3A50: 40 08 8B 40 28 85 C0 74 0A 8B 40 30 85 C0 74 03  // @..@(..t..@0..t.
    3A60: 51 FF D0 5D C2 04 00 CC CC CC CC CC 8B FF 55 8B  // Q..]..........U.
    3A70: EC 56 8B 75 08 8B 46 28 8B 00 83 F8 05 74 05 83  // .V.u..F(.....t..
    3A80: F8 04 75 10 FF 75 0C FF 15 6C 3E 01 00 56 FF 15  // ..u..u...l>..V..
    3A90: 58 3E 01 00 5E 5D C2 08 00 CC CC CC CC CC 8B FF  // X>..^]..........
    3AA0: 55 8B EC 8B 45 18 85 C0 74 0C 8B 48 28 85 C9 74  // U...E...t..H(..t
    3AB0: 05 83 39 05 75 2D 8B 40 28 8B 48 04 8B 41 08 8B  // ..9.u-.@(.H..A..
    3AC0: 40 28 85 C0 74 1D 83 38 38 76 18 8B 40 38 85 C0  // @(..t..88v..@8..
    3AD0: 74 11 51 FF 75 14 FF 75 10 FF 75 0C FF 75 08 FF  // t.Q.u..u..u..u..
    3AE0: D0 EB 02 32 C0 5D C2 14 00 CC CC CC CC CC 8B FF  // ...2.]..........
    3AF0: 55 8B EC 8B 4D 14 85 C9 74 0C 8B 41 28 85 C0 74  // U...M...t..A(..t
    3B00: 05 83 38 05 75 2A 8B 41 28 8B 40 04 8B 40 08 8B  // ..8.u*.A(.@..@..
    3B10: 40 28 85 C0 74 1A 83 38 3C 76 15 8B 40 3C 85 C0  // @(..t..8<v..@<..
    3B20: 74 0E 51 FF 75 10 FF 75 0C FF 75 08 FF D0 EB 05  // t.Q.u..u..u.....
    3B30: B8 02 00 00 C0 5D C2 10 00 CC CC CC CC CC 8B FF  // .....]..........
    3B40: 55 8B EC 8B 45 20 85 C0 74 0C 8B 48 28 85 C9 74  // U...E ..t..H(..t
    3B50: 05 83 39 05 75 33 8B 40 28 8B 48 04 8B 41 08 8B  // ..9.u3.@(.H..A..
    3B60: 40 28 85 C0 74 23 83 38 40 76 1E 8B 40 40 85 C0  // @(..t#.8@v..@@..
    3B70: 74 17 51 FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF  // t.Q.u..u..u..u..
    3B80: 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2 1C 00 CC  // u..u.....2.]....
    3B90: CC CC CC CC 8B FF 55 8B EC 8B 45 10 85 C0 74 0C  // ......U...E...t.
    3BA0: 8B 48 28 85 C9 74 05 83 39 05 75 27 8B 40 28 8B  // .H(..t..9.u'.@(.
    3BB0: 48 04 8B 41 08 8B 40 28 85 C0 74 17 83 38 44 76  // H..A..@(..t..8Dv
    3BC0: 12 8B 40 44 85 C0 74 0B 51 FF 75 0C FF 75 08 FF  // ..@D..t.Q.u..u..
    3BD0: D0 EB 02 32 C0 5D C2 0C 00 CC CC CC CC CC 8B FF  // ...2.]..........
    3BE0: 55 8B EC 8B 45 20 85 C0 74 0C 8B 48 28 85 C9 74  // U...E ..t..H(..t
    3BF0: 05 83 39 05 75 33 8B 40 28 8B 48 04 8B 41 08 8B  // ..9.u3.@(.H..A..
    3C00: 40 28 85 C0 74 23 83 38 48 76 1E 8B 40 48 85 C0  // @(..t#.8Hv..@H..
    3C10: 74 17 51 FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF  // t.Q.u..u..u..u..
    3C20: 75 0C FF 75 08 FF D0 EB 02 32 C0 5D C2 1C 00 CC  // u..u.....2.]....
    3C30: CC CC CC CC 8B FF 55 8B EC 8B 45 14 85 C0 74 0C  // ......U...E...t.
    3C40: 8B 48 28 85 C9 74 05 83 39 05 75 2A 8B 40 28 8B  // .H(..t..9.u*.@(.
    3C50: 48 04 8B 41 08 8B 40 28 85 C0 74 1A 83 38 4C 76  // H..A..@(..t..8Lv
    3C60: 15 8B 40 4C 85 C0 74 0E 51 FF 75 10 FF 75 0C FF  // ..@L..t.Q.u..u..
    3C70: 75 08 FF D0 EB 02 32 C0 5D C2 10 00 CC CC CC CC  // u.....2.].......
    3C80: CC CC 8B FF 55 8B EC 8B 45 2C 85 C0 74 0C 8B 48  // ....U...E,..t..H
    3C90: 28 85 C9 74 05 83 39 05 75 3C 8B 40 28 8B 48 04  // (..t..9.u<.@(.H.
    3CA0: 8B 41 08 8B 40 28 85 C0 74 2C 83 38 50 76 27 8B  // .A..@(..t,.8Pv'.
    3CB0: 40 50 85 C0 74 20 51 FF 75 28 FF 75 24 FF 75 20  // @P..t Q.u(.u$.u 
    3CC0: FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF 75 0C FF  // .u..u..u..u..u..
    3CD0: 75 08 FF D0 EB 02 32 C0 5D C2 28 00 CC CC CC CC  // u.....2.].(.....
    3CE0: CC CC 8B FF 55 8B EC 8B 45 2C 85 C0 74 0C 8B 48  // ....U...E,..t..H
    3CF0: 28 85 C9 74 05 83 39 05 75 3C 8B 40 28 8B 48 04  // (..t..9.u<.@(.H.
    3D00: 8B 41 08 8B 40 28 85 C0 74 2C 83 38 54 76 27 8B  // .A..@(..t,.8Tv'.
    3D10: 40 54 85 C0 74 20 51 FF 75 28 FF 75 24 FF 75 20  // @T..t Q.u(.u$.u 
    3D20: FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF 75 0C FF  // .u..u..u..u..u..
    3D30: 75 08 FF D0 EB 02 32 C0 5D C2 28 00 CC CC CC CC  // u.....2.].(.....
    3D40: CC CC 8B FF 55 8B EC 8B 45 10 85 C0 74 0C 8B 48  // ....U...E...t..H
    3D50: 28 85 C9 74 05 83 39 05 75 27 8B 40 28 8B 48 04  // (..t..9.u'.@(.H.
    3D60: 8B 41 08 8B 40 28 85 C0 74 17 83 38 58 76 12 8B  // .A..@(..t..8Xv..
    3D70: 40 58 85 C0 74 0B 51 FF 75 0C FF 75 08 FF D0 EB  // @X..t.Q.u..u....
    3D80: 02 32 C0 5D C2 0C 00 CC CC CC CC CC 8B FF 55 8B  // .2.]..........U.
    3D90: EC 8B 45 14 85 C0 74 0C 8B 48 28 85 C9 74 05 83  // ..E...t..H(..t..
    3DA0: 39 05 75 2A 8B 40 28 8B 48 04 8B 41 08 8B 40 28  // 9.u*.@(.H..A..@(
    3DB0: 85 C0 74 1A 83 38 5C 76 15 8B 40 5C 85 C0 74 0E  // ..t..8\v..@\..t.
    3DC0: 51 FF 75 10 FF 75 0C FF 75 08 FF D0 EB 02 32 C0  // Q.u..u..u.....2.
    3DD0: 5D C2 10 00 CC CC CC CC CC CC 8B FF 55 8B EC 8B  // ]...........U...
    3DE0: 4D 10 33 D2 3B CA 74 10 8B 41 28 3B C2 74 09 83  // M.3.;.t..A(;.t..
    3DF0: 38 05 74 04 32 C0 EB 6E 8B 41 28 53 56 57 8B 78  // 8.t.2..n.A(SVW.x
    3E00: 04 8B 77 08 8B 5E 28 3B DA 74 56 83 3B 60 76 51  // ..w..^(;.tV.;`vQ
    3E10: 39 53 60 74 4C 8B 75 08 8B 76 60 89 7E 14 38 15  // 9S`tL.u..v`.~.8.
    3E20: 08 40 01 00 74 29 38 50 40 75 24 51 E8 4B EE FF  // .@..t)8P@u$Q.K..
    3E30: FF 85 C0 74 1A F6 05 08 40 01 00 02 75 23 8B 46  // ...t....@...u#.F
    3E40: 04 8B 40 08 A9 00 01 01 40 75 16 A8 02 75 12 57  // ..@.....@u...u.W
    3E50: FF 75 0C FF 75 08 FF 53 60 8B 4D 10 89 4E 14 EB  // .u..u..S`.M..N..
    3E60: 02 32 C0 5F 5E 5B 5D C2 0C 00 CC CC CC CC CC CC  // .2._^[].........
    3E70: 8B FF 55 8B EC 8B 4D 10 85 C9 74 0C 8B 41 28 85  // ..U...M...t..A(.
    3E80: C0 74 05 83 38 05 75 27 8B 41 28 8B 40 04 8B 40  // .t..8.u'.A(.@..@
    3E90: 08 8B 40 28 85 C0 74 17 83 38 64 76 12 8B 40 64  // ..@(..t..8dv..@d
    3EA0: 85 C0 74 0B 51 FF 75 0C FF 75 08 FF D0 EB 05 B8  // ..t.Q.u..u......
    3EB0: 02 00 00 C0 5D C2 0C 00 CC CC CC CC CC CC 8B FF  // ....]...........
    3EC0: 55 8B EC 8B 4D 0C 85 C9 74 0C 8B 41 28 85 C0 74  // U...M...t..A(..t
    3ED0: 05 83 38 05 75 24 8B 41 28 8B 40 04 8B 40 08 8B  // ..8.u$.A(.@..@..
    3EE0: 40 28 85 C0 74 14 83 38 68 76 0F 8B 40 68 85 C0  // @(..t..8hv..@h..
    3EF0: 74 08 51 FF 75 08 FF D0 EB 05 B8 02 00 00 C0 5D  // t.Q.u..........]
    3F00: C2 08 00 CC CC CC CC CC 8B FF 55 8B EC 8B 4D 0C  // ..........U...M.
    3F10: 85 C9 74 0C 8B 41 28 85 C0 74 05 83 38 05 75 24  // ..t..A(..t..8.u$
    3F20: 8B 41 28 8B 40 04 8B 40 08 8B 40 28 85 C0 74 14  // .A(.@..@..@(..t.
    3F30: 83 38 6C 76 0F 8B 40 6C 85 C0 74 08 51 FF 75 08  // .8lv..@l..t.Q.u.
    3F40: FF D0 EB 05 B8 02 00 00 C0 5D C2 08 00 CC CC CC  // .........]......
    3F50: CC CC 8B FF 55 8B EC 5D FF 25 A4 3E 01 00 CC CC  // ....U..].%.>....
    3F60: CC CC CC CC 8B FF 55 8B EC 83 EC 20 FF 75 08 8D  // ......U.... .u..
    3F70: 45 F8 50 FF 15 08 3E 01 00 33 C0 8D 4D F8 89 4D  // E.P...>..3..M..M
    3F80: E8 8D 4D 08 51 50 50 50 89 45 E4 89 45 F0 89 45  // ..M.QPPP.E..E..E
    3F90: F4 8D 45 E0 50 FF 75 0C C7 45 E0 18 00 00 00 FF  // ..E.P.u..E......
    3FA0: 75 10 C7 45 EC 40 02 00 00 FF 15 AC 3E 01 00 C9  // u..E.@......>...
    3FB0: C2 0C 00 CC CC CC CC CC 8B FF 55 8B EC 83 EC 20  // ..........U.... 
    3FC0: FF 75 08 8D 45 F8 50 FF 15 08 3E 01 00 33 C0 89  // .u..E.P...>..3..
    3FD0: 45 E4 89 45 F0 89 45 F4 8D 45 E0 50 FF 75 0C 8D  // E..E..E..E.P.u..
    3FE0: 4D F8 FF 75 10 C7 45 E0 18 00 00 00 C7 45 EC 40  // M..u..E......E.@
    3FF0: 02 00 00 89 4D E8 FF 15 A0 3E 01 00 C9 C2 0C 00  // ....M....>......
    4000: CC CC CC CC CC CC 8B FF 55 8B EC 81 EC 10 08 00  // ........U.......
    4010: 00 A1 F0 3F 01 00 33 C5 89 45 FC 8B 45 0C 53 56  // ...?..3..E..E.SV
    4020: 8B 75 08 57 8B 7D 10 50 8D 85 F4 F7 FF FF 50 FF  // .u.W.}.P......P.
    4030: 15 08 3E 01 00 8D 85 F0 F7 FF FF 50 68 00 02 00  // ..>........Ph...
    4040: 00 8D 85 FC F7 FF FF 50 6A 02 8D 85 F4 F7 FF FF  // .......Pj.......
    4050: 50 56 FF 15 A8 3E 01 00 8B D8 85 DB 7C 2B 8B B5  // PV...>......|+..
    4060: 04 F8 FF FF 3B 75 14 76 07 BB 23 00 00 C0 EB 19  // ....;u.v..#.....
    4070: 56 8D 85 08 F8 FF FF 50 57 E8 06 05 00 00 D1 EE  // V......PW.......
    4080: 83 C4 0C 33 C0 66 89 04 77 8B 4D FC 5F 5E 8B C3  // ...3.f..w.M._^..
    4090: 33 CD 5B E8 A0 04 00 00 C9 C2 10 00 CC CC CC CC  // 3.[.............
    40A0: CC CC 8B FF 55 8B EC 51 51 8B 45 10 8D 50 02 66  // ....U..QQ.E..P.f
    40B0: 8B 08 40 40 66 85 C9 75 F6 2B C2 56 FF 75 0C D1  // ..@@f..u.+.V.u..
    40C0: F8 8B F0 8D 45 F8 50 FF 15 08 3E 01 00 8D 44 36  // ....E.P...>...D6
    40D0: 02 50 FF 75 10 8D 45 F8 6A 01 6A 00 50 FF 75 08  // .P.u..E.j.j.P.u.
    40E0: FF 15 B4 3E 01 00 5E C9 C2 0C 00 CC CC CC CC CC  // ...>..^.........
    40F0: 8B FF 55 8B EC 51 51 56 FF 75 0C 8D 45 F8 50 FF  // ..U..QQV.u..E.P.
    4100: 15 08 3E 01 00 8B 75 10 8D 45 0C 50 8B 45 14 FF  // ..>...u..E.P.E..
    4110: 30 8D 45 F8 56 6A 02 50 FF 75 08 FF 15 A8 3E 01  // 0.E.Vj.P.u....>.
    4120: 00 89 45 08 33 C0 39 45 08 7C 5A 8B 4E 08 89 4D  // ..E.3.9E.|Z.N..M
    4130: 0C 88 44 31 0C 8B 4D 0C 57 88 44 31 0D 8B 7D 0C  // ..D1..M.W.D1..}.
    4140: D1 EF 8D 4E 0C 8B D6 89 45 10 74 1F 53 66 8B 19  // ...N....E.t.Sf..
    4150: 66 89 1A 42 42 66 39 01 75 06 66 39 41 02 74 0A  // f..BBf9.u.f9A.t.
    4160: 41 41 FF 45 10 39 7D 10 72 E3 5B 8B 4D 14 33 C0  // AA.E.9}.r.[.M.3.
    4170: 66 89 02 42 42 8B C2 2B C6 D1 F8 03 C0 89 01 33  // f..BB..+.......3
    4180: C0 66 89 02 5F 8B 45 08 5E C9 C2 10 00 CC CC CC  // .f.._.E.^.......
    4190: CC CC 8B FF 55 8B EC 83 EC 18 A1 F0 3F 01 00 33  // ....U.......?..3
    41A0: C5 89 45 FC 8B 45 08 56 57 8B 7D 10 89 45 F0 8B  // ..E..E.VW.}..E..
    41B0: 45 0C 33 F6 89 45 EC 3B FE 75 0F 33 C0 8D 7D F4  // E.3..E.;.u.3..}.
    41C0: AB 6A 04 AB 8D 7D F4 5E EB 3E 8B CF 66 39 37 74  // .j...}.^.>..f97t
    41D0: 35 53 8B C1 8D 58 02 66 8B 10 40 40 66 85 D2 75  // 5S...X.f..@@f..u
    41E0: F6 2B C3 D1 F8 8D 74 46 02 8B C1 8D 50 02 66 8B  // .+....tF....P.f.
    41F0: 18 40 40 66 85 DB 75 F6 2B C2 D1 F8 8D 4C 41 02  // .@@f..u.+....LA.
    4200: 66 39 19 75 CD 5B 46 46 FF 75 EC 8D 45 E8 50 FF  // f9.u.[FF.u..E.P.
    4210: 15 08 3E 01 00 56 57 6A 07 6A 00 8D 45 E8 50 FF  // ..>..VWj.j..E.P.
    4220: 75 F0 FF 15 B4 3E 01 00 8B 4D FC 5F 33 CD 5E E8  // u....>...M._3.^.
    4230: 04 03 00 00 C9 C2 0C 00 CC CC CC CC CC CC 8B FF  // ................
    4240: 55 8B EC 83 EC 30 A1 F0 3F 01 00 33 C5 89 45 FC  // U....0..?..3..E.
    4250: 8B 45 0C 56 8B 75 08 57 8B 7D 10 50 8D 45 D4 50  // .E.V.u.W.}.P.E.P
    4260: FF 15 08 3E 01 00 8D 45 D0 50 6A 20 8D 45 DC 50  // ...>...E.Pj .E.P
    4270: 6A 02 8D 45 D4 50 56 FF 15 A8 3E 01 00 85 C0 7C  // j..E.PV...>....|
    4280: 05 8B 4D E8 89 0F 8B 4D FC 5F 33 CD 5E E8 A6 02  // ..M....M._3.^...
    4290: 00 00 C9 C2 0C 00 CC CC CC CC CC CC 8B FF 55 8B  // ..............U.
    42A0: EC 51 51 FF 75 0C 8D 45 F8 50 FF 15 08 3E 01 00  // .QQ.u..E.P...>..
    42B0: 6A 04 8D 45 10 50 6A 04 6A 00 8D 45 F8 50 FF 75  // j..E.Pj.j..E.P.u
    42C0: 08 FF 15 B4 3E 01 00 C9 C2 0C 00 CC CC CC CC CC  // ....>...........
    42D0: 8B FF 55 8B EC 51 8B 45 10 8D 50 02 66 8B 08 40  // ..U..Q.E..P.f..@
    42E0: 40 66 85 C9 75 F6 2B C2 57 8B 7D 08 D1 F8 89 45  // @f..u.+.W.}....E
    42F0: FC 85 FF 75 04 33 C0 EB 49 8B 45 0C 85 C0 75 13  // ...u.3..I.E...u.
    4300: 8B C7 8D 50 02 66 8B 08 40 40 66 85 C9 75 F6 2B  // ...P.f..@@f..u.+
    4310: C2 D1 F8 3B 45 FC 72 DD 53 56 8B D8 33 F6 2B 5D  // ...;E.r.SV..3.+]
    4320: FC 78 1B FF 75 FC FF 75 10 57 FF 15 50 3E 01 00  // .x..u..u.W..P>..
    4330: 83 C4 0C 85 C0 74 10 46 47 47 3B F3 7E E5 33 C0  // .....t.FGG;.~.3.
    4340: 5E 5B 5F C9 C2 0C 00 8B 45 08 8D 04 70 EB F1 CC  // ^[_.....E...p...
    4350: CC CC CC CC 8B FF 55 8B EC 8B 45 08 32 D2 85 C0  // ......U...E.2...
    4360: 74 12 8B 4D 0C 85 C9 74 0B 03 C8 EB 03 02 10 40  // t..M...t.......@
    4370: 3B C1 72 F9 0F B6 C2 5D C2 08 00 CC CC CC CC CC  // ;.r....]........
    4380: 8B FF 55 8B EC 56 8B 75 08 57 33 FF 39 7D 0C 76  // ..U..V.u.W3.9}.v
    4390: 2C 6A 08 68 E0 3D 01 00 56 FF 15 B8 3E 01 00 83  // ,j.h.=..V...>...
    43A0: C4 0C 85 C0 75 0C 6A 14 56 E8 A6 FF FF FF 85 C0  // ....u.j.V.......
    43B0: 74 13 83 C7 10 83 C6 10 3B 7D 0C 72 D4 33 C0 5F  // t.......;}.r.3._
    43C0: 5E 5D C2 08 00 8B C6 EB F6 CC CC CC CC CC 8B FF  // ^]..............
    43D0: 55 8B EC 83 EC 14 56 57 8B 3D C0 3E 01 00 33 C0  // U.....VW.=.>..3.
    43E0: 50 BE 00 00 02 00 56 50 C7 45 EC 00 00 0E 00 FF  // P.....VP.E......
    43F0: 75 EC C7 45 F4 B2 00 00 00 C6 45 FF 00 FF D7 89  // u..E......E.....
    4400: 45 F8 85 C0 0F 84 96 00 00 00 53 56 50 E8 6E FF  // E.........SVP.n.
    4410: FF FF 8B D8 85 DB 74 06 8B 43 10 89 45 EC 56 FF  // ......t..C..E.V.
    4420: 75 F8 FF 15 BC 3E 01 00 85 DB 74 73 6A 00 BE 00  // u....>....tsj...
    4430: 02 00 00 56 33 C0 50 FF 75 EC FF D7 8B 1D B8 3E  // ...V3.P.u......>
    4440: 01 00 6A 04 68 F0 3D 01 00 50 89 45 F8 FF D3 83  // ..j.h.=..P.E....
    4450: C4 0C 85 C0 75 0D 8B 45 F8 8B 40 24 89 45 EC C6  // ....u..E..@$.E..
    4460: 45 FF 01 56 FF 75 F8 FF 15 BC 3E 01 00 80 7D FF  // E..V.u....>...}.
    4470: 00 74 2C 6A 00 56 33 C0 50 FF 75 EC FF D7 6A 04  // .t,j.V3.P.u...j.
    4480: 8B F8 68 EA 3D 01 00 57 FF D3 83 C4 0C 85 C0 75  // ..h.=..W.......u
    4490: 06 8B 47 30 89 45 F4 56 57 FF 15 BC 3E 01 00 5B  // ..G0.E.VW...>..[
    44A0: 8B 45 F4 5F 5E C9 C3 CC CC CC CC CC 8B FF 55 8B  // .E._^.........U.
    44B0: EC 51 83 65 FC 00 8D 45 FC 50 FF 75 0C 6A 10 6A  // .Q.e...E.P.u.j.j
    44C0: 0C FF 75 08 FF 15 C4 3E 01 00 C9 C2 0C 00 CC CC  // ..u....>........
    44D0: CC CC CC CC 8B FF 55 8B EC 51 83 65 FC 00 56 FF  // ......U..Q.e..V.
    44E0: 75 10 8B 75 0C 6A 00 56 E8 8B 00 00 00 83 C4 0C  // u..u.j.V........
    44F0: 8D 45 FC 50 56 68 00 04 00 00 6A 02 FF 75 08 FF  // .E.PVh....j..u..
    4500: 15 C4 3E 01 00 85 C0 75 25 8B D6 66 39 06 74 1E  // ..>....u%..f9.t.
    4510: 53 8B CA 8D 59 02 66 8B 31 41 41 66 85 F6 75 F6  // S...Y.f.1AAf..u.
    4520: 2B CB D1 F9 8D 54 4A 02 66 39 32 75 E4 5B 5E C9  // +....TJ.f92u.[^.
    4530: C2 0C 00 CC CC CC CC CC 3B 0D F0 3F 01 00 75 03  // ........;..?..u.
    4540: C2 00 00 E9 05 00 00 00 CC CC CC CC CC 8B FF 55  // ...............U
    4550: 8B EC 51 89 4D FC 6A 00 FF 35 F4 3F 01 00 FF 35  // ..Q.M.j..5.?...5
    4560: F0 3F 01 00 FF 75 FC 68 F7 00 00 00 FF 15 CC 3E  // .?...u.h.......>
    4570: 01 00 CC CC CC CC CC CC FF 25 14 3E 01 00 CC CC  // .........%.>....
    4580: CC CC CC CC FF 25 B0 3E 01 00 4B 00 65 00 53 00  // .....%.>..K.e.S.
    4590: 65 00 74 00 53 00 79 00 73 00 74 00 65 00 6D 00  // e.t.S.y.s.t.e.m.
    45A0: 41 00 66 00 66 00 69 00 6E 00 69 00 74 00 79 00  // A.f.f.i.n.i.t.y.
    45B0: 54 00 68 00 72 00 65 00 61 00 64 00 45 00 78 00  // T.h.r.e.a.d.E.x.
    45C0: 00 00 4B 00 65 00 51 00 75 00 65 00 72 00 79 00  // ..K.e.Q.u.e.r.y.
    45D0: 41 00 63 00 74 00 69 00 76 00 65 00 50 00 72 00  // A.c.t.i.v.e.P.r.
    45E0: 6F 00 63 00 65 00 73 00 73 00 6F 00 72 00 43 00  // o.c.e.s.s.o.r.C.
    45F0: 6F 00 75 00 6E 00 74 00 00 00 4B 00 65 00 52 00  // o.u.n.t...K.e.R.
    4600: 65 00 76 00 65 00 72 00 74 00 54 00 6F 00 55 00  // e.v.e.r.t.T.o.U.
    4610: 73 00 65 00 72 00 41 00 66 00 66 00 69 00 6E 00  // s.e.r.A.f.f.i.n.
    4620: 69 00 74 00 79 00 54 00 68 00 72 00 65 00 61 00  // i.t.y.T.h.r.e.a.
    4630: 64 00 45 00 78 00 00 00 00 CC 5F 00 4D 00 54 00  // d.E.x....._.M.T.
    4640: 50 00 00 00 4B 00 65 00 79 00 62 00 6F 00 61 00  // P...K.e.y.b.o.a.
    4650: 72 00 64 00 00 00 6D 00 6F 00 75 00 73 00 65 00  // r.d...m.o.u.s.e.
    4660: 00 00 69 00 50 00 61 00 64 00 00 00 69 00 50 00  // ..i.P.a.d...i.P.
    4670: 68 00 6F 00 6E 00 65 00 00 00 43 00 4F 00 4D 00  // h.o.n.e...C.O.M.
    4680: 50 00 4F 00 53 00 49 00 54 00 45 00 00 00 43 00  // P.O.S.I.T.E...C.
    4690: 6C 00 61 00 73 00 73 00 5F 00 00 00 5C 00 44 00  // l.a.s.s._...\.D.
    46A0: 72 00 69 00 76 00 65 00 72 00 5C 00 55 00 53 00  // r.i.v.e.r.\.U.S.
    46B0: 42 00 53 00 54 00 4F 00 52 00 00 00 5C 00 44 00  // B.S.T.O.R...\.D.
    46C0: 6F 00 73 00 44 00 65 00 76 00 69 00 63 00 65 00  // o.s.D.e.v.i.c.e.
    46D0: 73 00 5C 00 55 00 53 00 42 00 46 00 00 00 5C 00  // s.\.U.S.B.F...\.
    46E0: 44 00 65 00 76 00 69 00 63 00 65 00 5C 00 55 00  // D.e.v.i.c.e.\.U.
    46F0: 53 00 42 00 46 00 00 00 54 00 61 00 67 00 00 00  // S.B.F...T.a.g...
    4700: 54 00 79 00 70 00 65 00 00 00 53 00 74 00 61 00  // T.y.p.e...S.t.a.
    4710: 72 00 74 00 00 00 46 00 69 00 6C 00 74 00 65 00  // r.t...F.i.l.t.e.
    4720: 72 00 00 00 47 00 72 00 6F 00 75 00 70 00 00 00  // r...G.r.o.u.p...
    4730: 55 00 53 00 42 00 46 00 00 00 5C 00 52 00 65 00  // U.S.B.F...\.R.e.
    4740: 67 00 69 00 73 00 74 00 72 00 79 00 5C 00 4D 00  // g.i.s.t.r.y.\.M.
    4750: 61 00 63 00 68 00 69 00 6E 00 65 00 5C 00 53 00  // a.c.h.i.n.e.\.S.
    4760: 79 00 73 00 74 00 65 00 6D 00 5C 00 43 00 75 00  // y.s.t.e.m.\.C.u.
    4770: 72 00 72 00 65 00 6E 00 74 00 43 00 6F 00 6E 00  // r.r.e.n.t.C.o.n.
    4780: 74 00 72 00 6F 00 6C 00 53 00 65 00 74 00 5C 00  // t.r.o.l.S.e.t.\.
    4790: 53 00 65 00 72 00 76 00 69 00 63 00 65 00 73 00  // S.e.r.v.i.c.e.s.
    47A0: 5C 00 55 00 53 00 42 00 46 00 00 00 4C 00 6F 00  // \.U.S.B.F...L.o.
    47B0: 77 00 65 00 72 00 46 00 69 00 6C 00 74 00 65 00  // w.e.r.F.i.l.t.e.
    47C0: 72 00 73 00 00 00 55 00 70 00 70 00 65 00 72 00  // r.s...U.p.p.e.r.
    47D0: 46 00 69 00 6C 00 74 00 65 00 72 00 73 00 00 00  // F.i.l.t.e.r.s...
    47E0: 5C 00 52 00 65 00 67 00 69 00 73 00 74 00 72 00  // \.R.e.g.i.s.t.r.
    47F0: 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00 6E 00  // y.\.M.a.c.h.i.n.
    4800: 65 00 5C 00 53 00 79 00 73 00 74 00 65 00 6D 00  // e.\.S.y.s.t.e.m.
    4810: 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00 74 00  // \.C.u.r.r.e.n.t.
    4820: 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00 53 00  // C.o.n.t.r.o.l.S.
    4830: 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00 72 00  // e.t.\.C.o.n.t.r.
    4840: 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00 73 00  // o.l.\.C.l.a.s.s.
    4850: 5C 00 7B 00 34 00 44 00 33 00 36 00 45 00 39 00  // \.{.4.D.3.6.E.9.
    4860: 36 00 35 00 2D 00 45 00 33 00 32 00 35 00 2D 00  // 6.5.-.E.3.2.5.-.
    4870: 31 00 31 00 43 00 45 00 2D 00 42 00 46 00 43 00  // 1.1.C.E.-.B.F.C.
    4880: 31 00 2D 00 30 00 38 00 30 00 30 00 32 00 42 00  // 1.-.0.8.0.0.2.B.
    4890: 45 00 31 00 30 00 33 00 31 00 38 00 7D 00 00 00  // E.1.0.3.1.8.}...
    48A0: 5C 00 52 00 65 00 67 00 69 00 73 00 74 00 72 00  // \.R.e.g.i.s.t.r.
    48B0: 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00 6E 00  // y.\.M.a.c.h.i.n.
    48C0: 65 00 5C 00 53 00 79 00 73 00 74 00 65 00 6D 00  // e.\.S.y.s.t.e.m.
    48D0: 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00 74 00  // \.C.u.r.r.e.n.t.
    48E0: 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00 53 00  // C.o.n.t.r.o.l.S.
    48F0: 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00 72 00  // e.t.\.C.o.n.t.r.
    4900: 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00 73 00  // o.l.\.C.l.a.s.s.
    4910: 5C 00 7B 00 34 00 44 00 33 00 36 00 45 00 39 00  // \.{.4.D.3.6.E.9.
    4920: 36 00 37 00 2D 00 45 00 33 00 32 00 35 00 2D 00  // 6.7.-.E.3.2.5.-.
    4930: 31 00 31 00 43 00 45 00 2D 00 42 00 46 00 43 00  // 1.1.C.E.-.B.F.C.
    4940: 31 00 2D 00 30 00 38 00 30 00 30 00 32 00 42 00  // 1.-.0.8.0.0.2.B.
    4950: 45 00 31 00 30 00 33 00 31 00 38 00 7D 00 00 00  // E.1.0.3.1.8.}...
    4960: 5C 00 52 00 65 00 67 00 69 00 73 00 74 00 72 00  // \.R.e.g.i.s.t.r.
    4970: 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00 6E 00  // y.\.M.a.c.h.i.n.
    4980: 65 00 5C 00 53 00 79 00 73 00 74 00 65 00 6D 00  // e.\.S.y.s.t.e.m.
    4990: 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00 74 00  // \.C.u.r.r.e.n.t.
    49A0: 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00 53 00  // C.o.n.t.r.o.l.S.
    49B0: 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00 72 00  // e.t.\.C.o.n.t.r.
    49C0: 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00 73 00  // o.l.\.C.l.a.s.s.
    49D0: 5C 00 7B 00 33 00 36 00 46 00 43 00 39 00 45 00  // \.{.3.6.F.C.9.E.
    49E0: 36 00 30 00 2D 00 43 00 34 00 36 00 35 00 2D 00  // 6.0.-.C.4.6.5.-.
    49F0: 31 00 31 00 43 00 46 00 2D 00 38 00 30 00 35 00  // 1.1.C.F.-.8.0.5.
    4A00: 36 00 2D 00 34 00 34 00 34 00 35 00 35 00 33 00  // 6.-.4.4.4.5.5.3.
    4A10: 35 00 34 00 30 00 30 00 30 00 30 00 7D 00 00 00  // 5.4.0.0.0.0.}...
    4A20: 5C 00 46 00 69 00 6C 00 65 00 53 00 79 00 73 00  // \.F.i.l.e.S.y.s.
    4A30: 74 00 65 00 6D 00 5C 00 46 00 73 00 5F 00 52 00  // t.e.m.\.F.s._.R.
    4A40: 65 00 63 00 00 00 5C 00 46 00 69 00 6C 00 65 00  // e.c...\.F.i.l.e.
    4A50: 53 00 79 00 73 00 74 00 65 00 6D 00 5C 00 63 00  // S.y.s.t.e.m.\.c.
    4A60: 64 00 66 00 73 00 00 00 5C 00 46 00 69 00 6C 00  // d.f.s...\.F.i.l.
    4A70: 65 00 53 00 79 00 73 00 74 00 65 00 6D 00 5C 00  // e.S.y.s.t.e.m.\.
    4A80: 75 00 64 00 66 00 73 00 00 00 5C 00 44 00 65 00  // u.d.f.s...\.D.e.
    4A90: 76 00 69 00 63 00 65 00 5C 00 52 00 61 00 77 00  // v.i.c.e.\.R.a.w.
    4AA0: 44 00 69 00 73 00 6B 00 00 00 52 53 44 20 50 54  // D.i.s.k...RSD PT
    4AB0: 52 20 00 CC 46 41 43 50 00 CC 52 53 44 54 00 00  // R ..FACP..RSDT..
    4AC0: 00 00 00 00 00 00 00 00 00 00 42 46 00 00 00 00  // ..........BF....
    4AD0: 00 00 1E 42 00 00 36 42 00 00 46 42 00 00 5E 42  // ...B..6B..FB..^B
    4AE0: 00 00 68 42 00 00 78 42 00 00 86 42 00 00 9E 42  // ..hB..xB...B...B
    4AF0: 00 00 B2 42 00 00 CA 42 00 00 E0 42 00 00 F8 42  // ...B...B...B...B
    4B00: 00 00 0C 43 00 00 24 43 00 00 36 43 00 00 48 43  // ...C..$C..6C..HC
    4B10: 00 00 5E 43 00 00 6E 43 00 00 84 43 00 00 90 43  // ..^C..nC...C...C
    4B20: 00 00 AC 43 00 00 BE 43 00 00 DC 43 00 00 EE 43  // ...C...C...C...C
    4B30: 00 00 06 44 00 00 26 44 00 00 38 44 00 00 58 44  // ...D..&D..8D..XD
    4B40: 00 00 80 44 00 00 02 42 00 00 A4 44 00 00 B4 44  // ...D...B...D...D
    4B50: 00 00 D4 44 00 00 EE 44 00 00 10 45 00 00 2A 45  // ...D...D...E..*E
    4B60: 00 00 46 45 00 00 68 45 00 00 84 45 00 00 90 45  // ..FE..hE...E...E
    4B70: 00 00 9A 45 00 00 AC 45 00 00 BA 45 00 00 C4 45  // ...E...E...E...E
    4B80: 00 00 D4 45 00 00 DE 45 00 00 F0 45 00 00 00 46  // ...E...E...E...F
    4B90: 00 00 16 46 00 00 24 46 00 00 98 44 00 00 E8 41  // ...F..$F...D...A
    4BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 3C 77  // ..............<w
    4BB0: F2 55 00 00 00 00 02 00 00 00 53 00 00 00 0C 3F  // .U........S....?
    4BC0: 00 00 0C 3F 00 00 19 71 A2 07 33 95 30 4A 83 7D  // ...?...q..3.0J.}
    4BD0: C5 ED 6B 8F F0 AD 52 53 44 53 A3 B9 BD CF 15 03  // ..k...RSDS......
    4BE0: ED 4C B4 FF 99 1C E2 16 0C 90 01 00 00 00 67 3A  // .L............g:
    4BF0: 5C 6C 65 6E 6F 76 6F 5C 75 73 62 66 69 6C 74 65  // \lenovo\usbfilte
    4C00: 72 5C 74 72 75 6E 6B 5C 73 79 73 5C 6F 62 6A 66  // r\trunk\sys\objf
    4C10: 72 65 5F 77 78 70 5F 78 38 36 5C 69 33 38 36 5C  // re_wxp_x86\i386\
    4C20: 55 73 62 46 2E 70 64 62 00 00 00 00 00 00 00 00  // UsbF.pdb........
    4C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4C40: 00 00 00 00 00 00 00 00 00 00 70 00 00 00 C6 29  // ..........p....)
    4C50: 01 00 1A 2A 01 00 6E 2A 01 00 E0 2A 01 00 2C 2B  // ...*..n*...*..,+
    4C60: 01 00 78 2B 01 00 D0 2B 01 00 22 2C 01 00 6A 2C  // ..x+...+..",..j,
    4C70: 01 00 B6 2C 01 00 0E 2D 01 00 58 2D 01 00 A2 2D  // ...,...-..X-...-
    4C80: 01 00 D4 2D 01 00 24 2E 01 00 74 2E 01 00 CA 2E  // ...-..$...t.....
    4C90: 01 00 14 2F 01 00 6A 2F 01 00 B8 2F 01 00 18 30  // .../..j/.../...0
    4CA0: 01 00 78 30 01 00 C2 30 01 00 10 31 01 00 A6 31  // ..x0...0...1...1
    4CB0: 01 00 F4 31 01 00 3E 32 01 00 4E E6 40 BB B1 19  // ...1..>2..N.@...
    4CC0: BF 44 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .D..............
    4CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A1  // ................
    4D50: F0 3F 01 00 B9 4E E6 40 BB 85 C0 74 04 3B C1 75  // .?...N.@...t.;.u
    4D60: 1A A1 C8 3E 01 00 8B 00 35 F0 3F 01 00 A3 F0 3F  // ...>....5.?....?
    4D70: 01 00 75 07 8B C1 A3 F0 3F 01 00 F7 D0 A3 F4 3F  // ..u.....?......?
    4D80: 01 00 C3 CC CC CC CC CC 8B FF 55 8B EC E8 BD FF  // ..........U.....
    4D90: FF FF 5D E9 20 D4 FF FF CC CC 14 41 00 00 00 00  // ..]. ......A....
    4DA0: 00 00 00 00 00 00 34 46 00 00 08 3E 00 00 0C 41  // ......4F...>...A
    4DB0: 00 00 00 00 00 00 00 00 00 00 56 46 00 00 00 3E  // ..........VF...>
    4DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    4DD0: 00 00 00 00 00 00 42 46 00 00 00 00 00 00 1E 42  // ......BF.......B
    4DE0: 00 00 36 42 00 00 46 42 00 00 5E 42 00 00 68 42  // ..6B..FB..^B..hB
    4DF0: 00 00 78 42 00 00 86 42 00 00 9E 42 00 00 B2 42  // ..xB...B...B...B
    4E00: 00 00 CA 42 00 00 E0 42 00 00 F8 42 00 00 0C 43  // ...B...B...B...C
    4E10: 00 00 24 43 00 00 36 43 00 00 48 43 00 00 5E 43  // ..$C..6C..HC..^C
    4E20: 00 00 6E 43 00 00 84 43 00 00 90 43 00 00 AC 43  // ..nC...C...C...C
    4E30: 00 00 BE 43 00 00 DC 43 00 00 EE 43 00 00 06 44  // ...C...C...C...D
    4E40: 00 00 26 44 00 00 38 44 00 00 58 44 00 00 80 44  // ..&D..8D..XD...D
    4E50: 00 00 02 42 00 00 A4 44 00 00 B4 44 00 00 D4 44  // ...B...D...D...D
    4E60: 00 00 EE 44 00 00 10 45 00 00 2A 45 00 00 46 45  // ...D...E..*E..FE
    4E70: 00 00 68 45 00 00 84 45 00 00 90 45 00 00 9A 45  // ..hE...E...E...E
    4E80: 00 00 AC 45 00 00 BA 45 00 00 C4 45 00 00 D4 45  // ...E...E...E...E
    4E90: 00 00 DE 45 00 00 F0 45 00 00 00 46 00 00 16 46  // ...E...E...F...F
    4EA0: 00 00 24 46 00 00 98 44 00 00 E8 41 00 00 00 00  // ..$F...D...A....
    4EB0: 00 00 2F 02 4B 65 51 75 65 72 79 41 63 74 69 76  // ../.KeQueryActiv
    4EC0: 65 50 72 6F 63 65 73 73 6F 72 73 00 A1 02 4D 6D  // eProcessors...Mm
    4ED0: 47 65 74 53 79 73 74 65 6D 52 6F 75 74 69 6E 65  // GetSystemRoutine
    4EE0: 41 64 64 72 65 73 73 00 1D 04 52 74 6C 49 6E 69  // Address...RtlIni
    4EF0: 74 55 6E 69 63 6F 64 65 53 74 72 69 6E 67 00 00  // tUnicodeString..
    4F00: 16 04 52 74 6C 47 65 74 56 65 72 73 69 6F 6E 00  // ..RtlGetVersion.
    4F10: 35 02 4B 65 51 75 65 72 79 54 69 6D 65 49 6E 63  // 5.KeQueryTimeInc
    4F20: 72 65 6D 65 6E 74 00 00 A9 05 6D 65 6D 73 65 74  // rement....memset
    4F30: 00 00 E2 01 49 6F 66 43 61 6C 6C 44 72 69 76 65  // ....IofCallDrive
    4F40: 72 00 56 02 4B 65 53 65 74 45 76 65 6E 74 00 00  // r.V.KeSetEvent..
    4F50: 6D 02 4B 65 57 61 69 74 46 6F 72 53 69 6E 67 6C  // m.KeWaitForSingl
    4F60: 65 4F 62 6A 65 63 74 00 18 02 4B 65 49 6E 69 74  // eObject...KeInit
    4F70: 69 61 6C 69 7A 65 45 76 65 6E 74 00 A3 01 49 6F  // ializeEvent...Io
    4F80: 52 65 6C 65 61 73 65 52 65 6D 6F 76 65 4C 6F 63  // ReleaseRemoveLoc
    4F90: 6B 45 78 00 E3 01 49 6F 66 43 6F 6D 70 6C 65 74  // kEx...IofComplet
    4FA0: 65 52 65 71 75 65 73 74 00 00 1D 01 49 6F 41 63  // eRequest....IoAc
    4FB0: 71 75 69 72 65 52 65 6D 6F 76 65 4C 6F 63 6B 45  // quireRemoveLockE
    4FC0: 78 00 4E 00 45 78 46 72 65 65 50 6F 6F 6C 57 69  // x.N.ExFreePoolWi
    4FD0: 74 68 54 61 67 00 41 00 45 78 41 6C 6C 6F 63 61  // thTag.A.ExAlloca
    4FE0: 74 65 50 6F 6F 6C 57 69 74 68 54 61 67 00 63 01  // tePoolWithTag.c.
    4FF0: 49 6F 46 72 65 65 57 6F 72 6B 49 74 65 6D 00 00  // IoFreeWorkItem..
    5000: 91 01 49 6F 51 75 65 75 65 57 6F 72 6B 49 74 65  // ..IoQueueWorkIte
    5010: 6D 00 26 01 49 6F 41 6C 6C 6F 63 61 74 65 57 6F  // m.&.IoAllocateWo
    5020: 72 6B 49 74 65 6D 00 00 36 03 50 6F 43 61 6C 6C  // rkItem..6.PoCall
    5030: 44 72 69 76 65 72 00 00 42 03 50 6F 53 74 61 72  // Driver..B.PoStar
    5040: 74 4E 65 78 74 50 6F 77 65 72 49 72 70 00 98 05  // tNextPowerIrp...
    5050: 5F 77 63 73 6E 69 63 6D 70 00 7E 01 49 6F 49 6E  // _wcsnicmp.~.IoIn
    5060: 69 74 69 61 6C 69 7A 65 52 65 6D 6F 76 65 4C 6F  // itializeRemoveLo
    5070: 63 6B 45 78 00 00 4F 01 49 6F 44 65 6C 65 74 65  // ckEx..O.IoDelete
    5080: 44 65 76 69 63 65 00 00 2B 01 49 6F 41 74 74 61  // Device..+.IoAtta
    5090: 63 68 44 65 76 69 63 65 54 6F 44 65 76 69 63 65  // chDeviceToDevice
    50A0: 53 74 61 63 6B 00 3E 01 49 6F 43 72 65 61 74 65  // Stack.>.IoCreate
    50B0: 44 65 76 69 63 65 00 00 30 03 4F 62 66 44 65 72  // Device..0.ObfDer
    50C0: 65 66 65 72 65 6E 63 65 4F 62 6A 65 63 74 00 00  // eferenceObject..
    50D0: 65 01 49 6F 47 65 74 41 74 74 61 63 68 65 64 44  // e.IoGetAttachedD
    50E0: 65 76 69 63 65 52 65 66 65 72 65 6E 63 65 00 00  // eviceReference..
    50F0: 52 01 49 6F 44 65 74 61 63 68 44 65 76 69 63 65  // R.IoDetachDevice
    5100: 00 00 A2 01 49 6F 52 65 6C 65 61 73 65 52 65 6D  // ....IoReleaseRem
    5110: 6F 76 65 4C 6F 63 6B 41 6E 64 57 61 69 74 45 78  // oveLockAndWaitEx
    5120: 00 00 99 01 49 6F 52 65 67 69 73 74 65 72 42 6F  // ....IoRegisterBo
    5130: 6F 74 44 72 69 76 65 72 52 65 69 6E 69 74 69 61  // otDriverReinitia
    5140: 6C 69 7A 61 74 69 6F 6E 00 00 47 01 49 6F 43 72  // lization..G.IoCr
    5150: 65 61 74 65 53 79 6D 62 6F 6C 69 63 4C 69 6E 6B  // eateSymbolicLink
    5160: 00 00 61 01 49 6F 46 72 65 65 49 72 70 00 24 01  // ..a.IoFreeIrp.$.
    5170: 49 6F 41 6C 6C 6F 63 61 74 65 49 72 70 00 2E 01  // IoAllocateIrp...
    5180: 49 6F 42 75 69 6C 64 44 65 76 69 63 65 49 6F 43  // IoBuildDeviceIoC
    5190: 6F 6E 74 72 6F 6C 52 65 71 75 65 73 74 00 75 01  // ontrolRequest.u.
    51A0: 49 6F 47 65 74 4C 6F 77 65 72 44 65 76 69 63 65  // IoGetLowerDevice
    51B0: 4F 62 6A 65 63 74 00 00 2C 01 49 6F 41 74 74 61  // Object..,.IoAtta
    51C0: 63 68 44 65 76 69 63 65 54 6F 44 65 76 69 63 65  // chDeviceToDevice
    51D0: 53 74 61 63 6B 53 61 66 65 00 BD 03 52 74 6C 43  // StackSafe...RtlC
    51E0: 6F 6D 70 61 72 65 55 6E 69 63 6F 64 65 53 74 72  // ompareUnicodeStr
    51F0: 69 6E 67 00 6D 01 49 6F 47 65 74 44 65 76 69 63  // ing.m.IoGetDevic
    5200: 65 4F 62 6A 65 63 74 50 6F 69 6E 74 65 72 00 00  // eObjectPointer..
    5210: 9D 01 49 6F 52 65 67 69 73 74 65 72 46 73 52 65  // ..IoRegisterFsRe
    5220: 67 69 73 74 72 61 74 69 6F 6E 43 68 61 6E 67 65  // gistrationChange
    5230: 00 00 57 00 45 78 49 6E 69 74 69 61 6C 69 7A 65  // ..W.ExInitialize
    5240: 52 65 73 6F 75 72 63 65 4C 69 74 65 00 00 31 05  // ResourceLite..1.
    5250: 5A 77 4F 70 65 6E 4B 65 79 00 0B 05 5A 77 43 6C  // ZwOpenKey...ZwCl
    5260: 6F 73 65 00 51 05 5A 77 51 75 65 72 79 56 61 6C  // ose.Q.ZwQueryVal
    5270: 75 65 4B 65 79 00 12 05 5A 77 43 72 65 61 74 65  // ueKey...ZwCreate
    5280: 4B 65 79 00 A7 05 6D 65 6D 63 70 79 00 00 69 05  // Key...memcpy..i.
    5290: 5A 77 53 65 74 56 61 6C 75 65 4B 65 79 00 B4 05  // ZwSetValueKey...
    52A0: 73 74 72 6E 63 6D 70 00 CC 02 4D 6D 55 6E 6D 61  // strncmp...MmUnma
    52B0: 70 49 6F 53 70 61 63 65 00 00 AE 02 4D 6D 4D 61  // pIoSpace....MmMa
    52C0: 70 49 6F 53 70 61 63 65 00 00 6E 01 49 6F 47 65  // pIoSpace..n.IoGe
    52D0: 74 44 65 76 69 63 65 50 72 6F 70 65 72 74 79 00  // tDeviceProperty.
    52E0: 66 02 4B 65 54 69 63 6B 43 6F 75 6E 74 00 F6 01  // f.KeTickCount...
    52F0: 4B 65 42 75 67 43 68 65 63 6B 45 78 00 00 6E 74  // KeBugCheckEx..nt
    5300: 6F 73 6B 72 6E 6C 2E 65 78 65 00 00 40 00 4B 65  // oskrnl.exe..@.Ke
    5310: 47 65 74 43 75 72 72 65 6E 74 49 72 71 6C 00 00  // GetCurrentIrql..
    5320: 48 41 4C 2E 64 6C 6C 00 00 00 00 00 00 00 00 00  // HAL.dll.........
    5330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5350: 00 00 00 00 00 00 00 00 01 00 10 00 00 00 18 00  // ................
    5360: 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5370: 01 00 01 00 00 00 30 00 00 80 00 00 00 00 00 00  // ......0.........
    5380: 00 00 00 00 00 00 00 00 01 00 09 04 00 00 48 00  // ..............H.
    5390: 00 00 E0 46 00 00 DC 02 00 00 00 00 00 00 00 00  // ...F............
    53A0: 00 00 00 00 00 00 00 00 00 00 DC 02 34 00 00 00  // ............4...
    53B0: 56 00 53 00 5F 00 56 00 45 00 52 00 53 00 49 00  // V.S._.V.E.R.S.I.
    53C0: 4F 00 4E 00 5F 00 49 00 4E 00 46 00 4F 00 00 00  // O.N._.I.N.F.O...
    53D0: 00 00 BD 04 EF FE 00 00 01 00 00 00 01 00 0F 00  // ................
    53E0: 01 00 01 00 06 00 01 40 B0 1D 3F 00 00 00 08 00  // .......@..?.....
    53F0: 00 00 04 00 04 00 03 00 00 00 07 00 00 00 00 00  // ................
    5400: 00 00 00 00 00 00 3A 02 00 00 01 00 53 00 74 00  // ......:.....S.t.
    5410: 72 00 69 00 6E 00 67 00 46 00 69 00 6C 00 65 00  // r.i.n.g.F.i.l.e.
    5420: 49 00 6E 00 66 00 6F 00 00 00 16 02 00 00 01 00  // I.n.f.o.........
    5430: 30 00 34 00 30 00 39 00 30 00 34 00 42 00 30 00  // 0.4.0.9.0.4.B.0.
    5440: 00 00 2E 00 07 00 01 00 43 00 6F 00 6D 00 70 00  // ........C.o.m.p.
    5450: 61 00 6E 00 79 00 4E 00 61 00 6D 00 65 00 00 00  // a.n.y.N.a.m.e...
    5460: 00 00 4C 00 65 00 6E 00 6F 00 76 00 6F 00 00 00  // ..L.e.n.o.v.o...
    5470: 00 00 3E 00 0B 00 01 00 46 00 69 00 6C 00 65 00  // ..>.....F.i.l.e.
    5480: 44 00 65 00 73 00 63 00 72 00 69 00 70 00 74 00  // D.e.s.c.r.i.p.t.
    5490: 69 00 6F 00 6E 00 00 00 00 00 55 00 73 00 62 00  // i.o.n.....U.s.b.
    54A0: 20 00 46 00 69 00 6C 00 74 00 65 00 72 00 00 00  //  .F.i.l.t.e.r...
    54B0: 00 00 54 00 1A 00 01 00 46 00 69 00 6C 00 65 00  // ..T.....F.i.l.e.
    54C0: 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00  // V.e.r.s.i.o.n...
    54D0: 00 00 31 00 2C 00 30 00 2C 00 31 00 2C 00 31 00  // ..1.,.0.,.1.,.1.
    54E0: 35 00 20 00 62 00 75 00 69 00 6C 00 74 00 20 00  // 5. .b.u.i.l.t. .
    54F0: 62 00 79 00 3A 00 20 00 57 00 69 00 6E 00 44 00  // b.y.:. .W.i.n.D.
    5500: 44 00 4B 00 00 00 34 00 0A 00 01 00 49 00 6E 00  // D.K...4.....I.n.
    5510: 74 00 65 00 72 00 6E 00 61 00 6C 00 4E 00 61 00  // t.e.r.n.a.l.N.a.
    5520: 6D 00 65 00 00 00 55 00 73 00 62 00 46 00 69 00  // m.e...U.s.b.F.i.
    5530: 6C 00 74 00 65 00 72 00 00 00 54 00 18 00 01 00  // l.t.e.r...T.....
    5540: 4C 00 65 00 67 00 61 00 6C 00 43 00 6F 00 70 00  // L.e.g.a.l.C.o.p.
    5550: 79 00 72 00 69 00 67 00 68 00 74 00 00 00 43 00  // y.r.i.g.h.t...C.
    5560: 6F 00 70 00 79 00 72 00 69 00 67 00 68 00 74 00  // o.p.y.r.i.g.h.t.
    5570: 20 00 28 00 43 00 29 00 20 00 32 00 30 00 31 00  //  .(.C.). .2.0.1.
    5580: 33 00 2D 00 32 00 30 00 31 00 34 00 00 00 44 00  // 3.-.2.0.1.4...D.
    5590: 0E 00 01 00 4F 00 72 00 69 00 67 00 69 00 6E 00  // ....O.r.i.g.i.n.
    55A0: 61 00 6C 00 46 00 69 00 6C 00 65 00 6E 00 61 00  // a.l.F.i.l.e.n.a.
    55B0: 6D 00 65 00 00 00 55 00 73 00 62 00 46 00 69 00  // m.e...U.s.b.F.i.
    55C0: 6C 00 74 00 65 00 72 00 2E 00 73 00 79 00 73 00  // l.t.e.r...s.y.s.
    55D0: 00 00 36 00 0B 00 01 00 50 00 72 00 6F 00 64 00  // ..6.....P.r.o.d.
    55E0: 75 00 63 00 74 00 4E 00 61 00 6D 00 65 00 00 00  // u.c.t.N.a.m.e...
    55F0: 00 00 55 00 73 00 62 00 20 00 46 00 69 00 6C 00  // ..U.s.b. .F.i.l.
    5600: 74 00 65 00 72 00 00 00 00 00 36 00 09 00 01 00  // t.e.r.....6.....
    5610: 50 00 72 00 6F 00 64 00 75 00 63 00 74 00 56 00  // P.r.o.d.u.c.t.V.
    5620: 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 31 00  // e.r.s.i.o.n...1.
    5630: 2C 00 30 00 2C 00 31 00 2C 00 31 00 35 00 00 00  // ,.0.,.1.,.1.5...
    5640: 00 00 44 00 00 00 01 00 56 00 61 00 72 00 46 00  // ..D.....V.a.r.F.
    5650: 69 00 6C 00 65 00 49 00 6E 00 66 00 6F 00 00 00  // i.l.e.I.n.f.o...
    5660: 00 00 24 00 04 00 00 00 54 00 72 00 61 00 6E 00  // ..$.....T.r.a.n.
    5670: 73 00 6C 00 61 00 74 00 69 00 6F 00 6E 00 00 00  // s.l.a.t.i.o.n...
    5680: 00 00 09 04 B0 04 00 00 00 00 00 00 00 00 00 00  // ................
    5690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    56A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    56B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    56C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 B8 00  // ................
    56D0: 00 00 D4 34 DA 34 E6 34 F7 34 0F 35 56 35 60 35  // ...4.4.4.4.5V5`5
    56E0: 6A 35 99 35 B0 35 B9 35 CF 35 FD 35 49 36 66 36  // j5.5.5.5.5.5I6f6
    56F0: 74 36 7E 36 8D 36 99 36 9F 36 B6 36 D4 36 12 37  // t6~6.6.6.6.6.6.7
    5700: 20 37 2E 37 36 37 48 37 50 37 81 37 8C 37 97 37  //  7.767H7P7.7.7.7
    5710: 9D 37 A4 37 AF 37 E8 37 0D 38 35 38 62 38 77 38  // .7.7.7.7.858b8w8
    5720: 8E 38 B8 38 C3 38 D7 38 EE 38 FA 38 39 39 83 39  // .8.8.8.8.8.899.9
    5730: F0 39 02 3A 46 3A 89 3A B3 3A EE 3A FE 3A 10 3B  // .9.:F:.:.:.:.:.;
    5740: 22 3B 52 3B 83 3B C9 3B 43 3C 75 3C 9D 3C B4 3C  // ";R;.;.;C<u<.<.<
    5750: C0 3C C7 3C EA 3C F5 3C 05 3D 0F 3D 17 3D 2F 3D  // .<.<.<.<.=.=.=/=
    5760: 38 3D 4C 3D 5B 3D 93 3D CF 3D D8 3D 0D 3E 33 3E  // 8=L=[=.=.=.=.>3>
    5770: 62 3E 73 3E D0 3E 47 3F 59 3F 65 3F 7C 3F D9 3F  // b>s>.>G?Y?e?|?.?
    5780: E9 3F 00 10 00 00 B4 00 00 00 2A 30 38 30 D7 30  // .?........*080.0
    5790: E8 30 FE 30 80 31 8E 31 A3 31 C3 31 CA 31 DA 31  // .0.0.1.1.1.1.1.1
    57A0: 2F 32 55 32 61 32 E2 32 F3 32 36 33 73 33 BB 33  // /2U2a2.2.263s3.3
    57B0: C7 33 81 34 D3 34 00 35 0B 35 10 35 30 35 61 35  // .3.4.4.5.5.505a5
    57C0: 75 35 84 35 91 35 A0 35 A8 35 B4 35 BB 35 EE 35  // u5.5.5.5.5.5.5.5
    57D0: 11 36 95 36 A2 36 38 37 60 37 D6 37 EA 37 F1 37  // .6.6.687`7.7.7.7
    57E0: FF 37 09 38 34 38 7A 38 81 38 9C 38 A5 38 BC 38  // .7.848z8.8.8.8.8
    57F0: 38 39 45 39 B0 39 C2 39 82 3A 81 3B E4 3B F7 3B  // 89E9.9.9.:.;.;.;
    5800: 4C 3C 64 3C 9A 3C E9 3C FB 3C 13 3D 35 3D 51 3D  // L<d<.<.<.<.=5=Q=
    5810: 5E 3D 75 3D CA 3D E4 3D 13 3E 22 3E 62 3E 6C 3E  // ^=u=.=.=.>">b>l>
    5820: 84 3E 8E 3E D2 3E EB 3E F6 3E 0C 3F 25 3F 4E 3F  // .>.>.>.>.>.?%?N?
    5830: 6F 3F 92 3F 00 00 00 20 00 00 A0 00 00 00 20 30  // o?.?... ...... 0
    5840: AA 30 C2 30 E1 30 E7 30 F6 30 05 31 4A 31 55 31  // .0.0.0.0.0.1J1U1
    5850: 62 31 72 31 82 31 90 31 9F 31 AE 31 DB 31 01 32  // b1r1.1.1.1.1.1.2
    5860: 1F 32 37 32 8F 32 D1 32 7A 33 8F 33 A7 33 D8 33  // .272.2.2z3.3.3.3
    5870: 0B 34 43 34 B7 34 DF 34 E5 34 FC 34 81 35 9F 35  // .4C4.4.4.4.4.5.5
    5880: DE 35 05 36 17 36 21 36 38 36 52 36 5D 36 6A 36  // .5.6.6!686R6]6j6
    5890: BC 36 D5 36 E1 36 E8 36 EF 36 11 37 2F 37 85 37  // .6.6.6.6.6.7/7.7
    58A0: 8B 37 DE 37 ED 37 1F 38 39 38 46 38 5B 38 CD 38  // .7.7.7.898F8[8.8
    58B0: 01 39 1B 39 49 39 4F 39 55 39 5C 39 67 39 6F 39  // .9.9I9O9U9\9g9o9
    58C0: 75 39 7E 39 88 39 9F 39 B6 39 89 3A 26 3D 70 3D  // u9~9.9.9.9.:&=p=
    58D0: BF 3D C6 3D 00 00 00 30 00 00 90 00 00 00 56 31  // .=.=...0......V1
    58E0: 6D 31 90 32 AB 32 E1 32 FF 32 2E 33 48 33 67 33  // m1.2.2.2.2.3H3g3
    58F0: 8A 33 FF 33 18 34 37 34 53 34 D1 34 47 35 5A 35  // .3.3.474S4.4G5Z5
    5900: 7D 35 98 35 AF 35 E2 35 F9 35 62 36 CA 36 D1 36  // }5.5.5.5.5b6.6.6
    5910: 10 37 5A 37 74 37 7B 37 9F 37 B9 37 D1 37 FC 37  // .7Z7t7{7.7.7.7.7
    5920: 37 38 70 38 90 38 96 38 A4 38 B0 38 BC 38 84 3F  // 78p8.8.8.8.8.8.?
    5930: 88 3F 8C 3F 90 3F 94 3F 98 3F 9C 3F A0 3F A4 3F  // .?.?.?.?.?.?.?.?
    5940: A8 3F AC 3F B0 3F B4 3F B8 3F BC 3F C0 3F C4 3F  // .?.?.?.?.?.?.?.?
    5950: C8 3F CC 3F D0 3F D4 3F D8 3F DC 3F E0 3F E4 3F  // .?.?.?.?.?.?.?.?
    5960: E8 3F EC 3F 00 00 00 40 00 00 14 00 00 00 86 30  // .?.?...@.......0
    5970: 98 30 9F 30 A4 30 AD 30 B4 30 00 00 00 00 00 00  // .0.0.0.0.0......
    5980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    59F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5AC0: 00 00 00 00 00 00 00 00 00 00 F8 22 00 00 00 02  // ..........."....
    5AD0: 02 00 30 82 22 E8 06 09 2A 86 48 86 F7 0D 01 07  // ..0."...*.H.....
    5AE0: 02 A0 82 22 D9 30 82 22 D5 02 01 01 31 0B 30 09  // ...".0."....1.0.
    5AF0: 06 05 2B 0E 03 02 1A 05 00 30 68 06 0A 2B 06 01  // ..+......0h..+..
    5B00: 04 01 82 37 02 01 04 A0 5A 30 58 30 33 06 0A 2B  // ...7....Z0X03..+
    5B10: 06 01 04 01 82 37 02 01 0F 30 25 03 01 00 A0 20  // .....7...0%.... 
    5B20: A2 1E 80 1C 00 3C 00 3C 00 3C 00 4F 00 62 00 73  // .....<.<.<.O.b.s
    5B30: 00 6F 00 6C 00 65 00 74 00 65 00 3E 00 3E 00 3E  // .o.l.e.t.e.>.>.>
    5B40: 30 21 30 09 06 05 2B 0E 03 02 1A 05 00 04 14 B5  // 0!0...+.........
    5B50: 60 D7 55 EC 76 EF 4A 43 8D 80 53 90 4F B8 50 F4  // `.U.v.JC..S.O.P.
    5B60: EA 41 36 A0 82 1D E1 30 82 03 EE 30 82 03 57 A0  // .A6....0...0..W.
    5B70: 03 02 01 02 02 10 7E 93 EB FB 7C C6 4E 59 EA 4B  // ......~...|.NY.K
    5B80: 9A 77 D4 06 FC 3B 30 0D 06 09 2A 86 48 86 F7 0D  // .w...;0...*.H...
    5B90: 01 01 05 05 00 30 81 8B 31 0B 30 09 06 03 55 04  // .....0..1.0...U.
    5BA0: 06 13 02 5A 41 31 15 30 13 06 03 55 04 08 13 0C  // ...ZA1.0...U....
    5BB0: 57 65 73 74 65 72 6E 20 43 61 70 65 31 14 30 12  // Western Cape1.0.
    5BC0: 06 03 55 04 07 13 0B 44 75 72 62 61 6E 76 69 6C  // ..U....Durbanvil
    5BD0: 6C 65 31 0F 30 0D 06 03 55 04 0A 13 06 54 68 61  // le1.0...U....Tha
    5BE0: 77 74 65 31 1D 30 1B 06 03 55 04 0B 13 14 54 68  // wte1.0...U....Th
    5BF0: 61 77 74 65 20 43 65 72 74 69 66 69 63 61 74 69  // awte Certificati
    5C00: 6F 6E 31 1F 30 1D 06 03 55 04 03 13 16 54 68 61  // on1.0...U....Tha
    5C10: 77 74 65 20 54 69 6D 65 73 74 61 6D 70 69 6E 67  // wte Timestamping
    5C20: 20 43 41 30 1E 17 0D 31 32 31 32 32 31 30 30 30  //  CA0...121221000
    5C30: 30 30 30 5A 17 0D 32 30 31 32 33 30 32 33 35 39  // 000Z..2012302359
    5C40: 35 39 5A 30 5E 31 0B 30 09 06 03 55 04 06 13 02  // 59Z0^1.0...U....
    5C50: 55 53 31 1D 30 1B 06 03 55 04 0A 13 14 53 79 6D  // US1.0...U....Sym
    5C60: 61 6E 74 65 63 20 43 6F 72 70 6F 72 61 74 69 6F  // antec Corporatio
    5C70: 6E 31 30 30 2E 06 03 55 04 03 13 27 53 79 6D 61  // n100...U...'Syma
    5C80: 6E 74 65 63 20 54 69 6D 65 20 53 74 61 6D 70 69  // ntec Time Stampi
    5C90: 6E 67 20 53 65 72 76 69 63 65 73 20 43 41 20 2D  // ng Services CA -
    5CA0: 20 47 32 30 82 01 22 30 0D 06 09 2A 86 48 86 F7  //  G20.."0...*.H..
    5CB0: 0D 01 01 01 05 00 03 82 01 0F 00 30 82 01 0A 02  // ...........0....
    5CC0: 82 01 01 00 B1 AC B3 49 54 4B 97 1C 12 0A D8 25  // .......ITK.....%
    5CD0: 79 91 22 57 2A 6F DC B8 26 C4 43 73 6B C2 BF 2E  // y."W*o..&.Csk...
    5CE0: 50 5A FB 14 C2 76 8E 43 01 25 43 B4 A1 E2 45 F4  // PZ...v.C.%C...E.
    5CF0: E8 B7 7B C3 74 CC 22 D7 B4 94 00 02 F7 4D ED BF  // ..{.t."......M..
    5D00: B4 B7 44 24 6B CD 5F 45 3B D1 44 CE 43 12 73 17  // ..D$k._E;.D.C.s.
    5D10: 82 8B 69 B4 2B CB 99 1E AC 72 1B 26 4D 71 1F B1  // ..i.+....r.&Mq..
    5D20: 31 DD FB 51 61 02 53 A6 AA F5 49 2C 05 78 45 A5  // 1..Qa.S...I,.xE.
    5D30: 2F 89 CE E7 99 E7 FE 8C E2 57 3F 3D C6 92 DC 4A  // /........W?=...J
    5D40: F8 7B 33 E4 79 0A FB F0 75 88 41 9C FF C5 03 51  // .{3.y...u.A....Q
    5D50: 99 AA D7 6C 9F 93 69 87 65 29 83 85 C2 60 14 C4  // ...l..i.e)...`..
    5D60: C8 C9 3B 14 DA C0 81 F0 1F 0D 74 DE 92 22 AB CA  // ..;.......t.."..
    5D70: F7 FB 74 7C 27 E6 F7 4A 1B 7F A7 C3 9E 2D AE 8A  // ..t|'..J.....-..
    5D80: EA A6 E6 AA 27 16 7D 61 F7 98 71 11 BC E2 50 A1  // ....'.}a..q...P.
    5D90: 4B E5 5D FA E5 0E A7 2C 9F AA 65 20 D3 D8 96 E8  // K.]....,..e ....
    5DA0: C8 7C A5 4E 48 44 FF 19 E2 44 07 92 0B D7 68 84  // .|.NHD...D....h.
    5DB0: 80 5D 6A 78 64 45 CD 60 46 7E 54 C1 13 7C C5 79  // .]jxdE.`F~T..|.y
    5DC0: F1 C9 C1 71 02 03 01 00 01 A3 81 FA 30 81 F7 30  // ...q........0..0
    5DD0: 1D 06 03 55 1D 0E 04 16 04 14 5F 9A F5 6E 5C CC  // ...U......_..n\.
    5DE0: CC 74 9A D4 DD 7D EF 3F DB EC 4C 80 2E DD 30 32  // .t...}.?..L...02
    5DF0: 06 08 2B 06 01 05 05 07 01 01 04 26 30 24 30 22  // ..+........&0$0"
    5E00: 06 08 2B 06 01 05 05 07 30 01 86 16 68 74 74 70  // ..+.....0...http
    5E10: 3A 2F 2F 6F 63 73 70 2E 74 68 61 77 74 65 2E 63  // ://ocsp.thawte.c
    5E20: 6F 6D 30 12 06 03 55 1D 13 01 01 FF 04 08 30 06  // om0...U.......0.
    5E30: 01 01 FF 02 01 00 30 3F 06 03 55 1D 1F 04 38 30  // ......0?..U...80
    5E40: 36 30 34 A0 32 A0 30 86 2E 68 74 74 70 3A 2F 2F  // 604.2.0..http://
    5E50: 63 72 6C 2E 74 68 61 77 74 65 2E 63 6F 6D 2F 54  // crl.thawte.com/T
    5E60: 68 61 77 74 65 54 69 6D 65 73 74 61 6D 70 69 6E  // hawteTimestampin
    5E70: 67 43 41 2E 63 72 6C 30 13 06 03 55 1D 25 04 0C  // gCA.crl0...U.%..
    5E80: 30 0A 06 08 2B 06 01 05 05 07 03 08 30 0E 06 03  // 0...+.......0...
    5E90: 55 1D 0F 01 01 FF 04 04 03 02 01 06 30 28 06 03  // U...........0(..
    5EA0: 55 1D 11 04 21 30 1F A4 1D 30 1B 31 19 30 17 06  // U...!0...0.1.0..
    5EB0: 03 55 04 03 13 10 54 69 6D 65 53 74 61 6D 70 2D  // .U....TimeStamp-
    5EC0: 32 30 34 38 2D 31 30 0D 06 09 2A 86 48 86 F7 0D  // 2048-10...*.H...
    5ED0: 01 01 05 05 00 03 81 81 00 03 09 9B 8F 79 EF 7F  // .............y..
    5EE0: 59 30 AA EF 68 B5 FA E3 09 1D BB 4F 82 06 5D 37  // Y0..h......O..]7
    5EF0: 5F A6 52 9F 16 8D EA 1C 92 09 44 6E F5 6D EB 58  // _.R.......Dn.m.X
    5F00: 7C 30 E8 F9 69 8D 23 73 0B 12 6F 47 A9 AE 39 11  // |0..i.#s..oG..9.
    5F10: F8 2A B1 9B B0 1A C3 8E EB 59 96 00 AD CE 0C 4D  // .*.......Y.....M
    5F20: B2 D0 31 A6 08 5C 2A 7A FC E2 7A 1D 57 4C A8 65  // ..1..\*z..z.WL.e
    5F30: 18 E9 79 40 62 25 96 6E C7 C7 37 6A 83 21 08 8E  // ..y@b%.n..7j.!..
    5F40: 41 EA DD D9 57 3F 1D 77 49 87 2A 16 06 5E A6 38  // A...W?.wI.*..^.8
    5F50: 6A 22 12 A3 51 19 83 7E B6 30 82 04 A3 30 82 03  // j"..Q..~.0...0..
    5F60: 8B A0 03 02 01 02 02 10 0E CF F4 38 C8 FE BF 35  // ...........8...5
    5F70: 6E 04 D8 6A 98 1B 1A 50 30 0D 06 09 2A 86 48 86  // n..j...P0...*.H.
    5F80: F7 0D 01 01 05 05 00 30 5E 31 0B 30 09 06 03 55  // .......0^1.0...U
    5F90: 04 06 13 02 55 53 31 1D 30 1B 06 03 55 04 0A 13  // ....US1.0...U...
    5FA0: 14 53 79 6D 61 6E 74 65 63 20 43 6F 72 70 6F 72  // .Symantec Corpor
    5FB0: 61 74 69 6F 6E 31 30 30 2E 06 03 55 04 03 13 27  // ation100...U...'
    5FC0: 53 79 6D 61 6E 74 65 63 20 54 69 6D 65 20 53 74  // Symantec Time St
    5FD0: 61 6D 70 69 6E 67 20 53 65 72 76 69 63 65 73 20  // amping Services 
    5FE0: 43 41 20 2D 20 47 32 30 1E 17 0D 31 32 31 30 31  // CA - G20...12101
    5FF0: 38 30 30 30 30 30 30 5A 17 0D 32 30 31 32 32 39  // 8000000Z..201229
    6000: 32 33 35 39 35 39 5A 30 62 31 0B 30 09 06 03 55  // 235959Z0b1.0...U
    6010: 04 06 13 02 55 53 31 1D 30 1B 06 03 55 04 0A 13  // ....US1.0...U...
    6020: 14 53 79 6D 61 6E 74 65 63 20 43 6F 72 70 6F 72  // .Symantec Corpor
    6030: 61 74 69 6F 6E 31 34 30 32 06 03 55 04 03 13 2B  // ation1402..U...+
    6040: 53 79 6D 61 6E 74 65 63 20 54 69 6D 65 20 53 74  // Symantec Time St
    6050: 61 6D 70 69 6E 67 20 53 65 72 76 69 63 65 73 20  // amping Services 
    6060: 53 69 67 6E 65 72 20 2D 20 47 34 30 82 01 22 30  // Signer - G40.."0
    6070: 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82  // ...*.H..........
    6080: 01 0F 00 30 82 01 0A 02 82 01 01 00 A2 63 0B 39  // ...0.........c.9
    6090: 44 B8 BB 23 A7 44 49 BB 0E FF A1 F0 61 0A 53 93  // D..#.DI.....a.S.
    60A0: B0 98 DB AD 2C 0F 4A C5 6E FF 86 3C 53 55 0F 15  // ....,.J.n..<SU..
    60B0: CE 04 3F 2B FD A9 96 96 D9 BE 61 79 0B 5B C9 4C  // ..?+......ay.[.L
    60C0: 86 76 E5 E0 43 4B 22 95 EE C2 2B 43 C1 9F D8 68  // .v..CK"...+C...h
    60D0: B4 8E 40 4F EE 85 38 B9 11 C5 23 F2 64 58 F0 15  // ..@O..8...#.dX..
    60E0: 32 6F 4E 57 A1 AE 88 A4 02 D7 2A 1E CD 4B E1 DD  // 2oNW......*..K..
    60F0: 63 D5 17 89 32 5B B0 5E 99 5A A8 9D 28 50 0E 17  // c...2[.^.Z..(P..
    6100: EE 96 DB 61 3B 45 51 1D CF 12 56 0B 92 47 FC AB  // ...a;EQ...V..G..
    6110: AE F6 66 3D 47 AC 70 72 E7 92 E7 5F CD 10 B9 C4  // ..f=G.pr..._....
    6120: 83 64 94 19 BD 25 80 E1 E8 D2 22 A5 D0 BA 02 7A  // .d...%...."....z
    6130: A1 77 93 5B 65 C3 EE 17 74 BC 41 86 2A DC 08 4C  // .w.[e...t.A.*..L
    6140: 8C 92 8C 91 2D 9E 77 44 1F 68 D6 A8 74 77 DB 0E  // ....-.wD.h..tw..
    6150: 5B 32 8B 56 8B 33 BD D9 63 C8 49 9D 3A C5 C5 EA  // [2.V.3..c.I.:...
    6160: 33 0B D2 F1 A3 1B F4 8B BE D9 B3 57 8B 3B DE 04  // 3..........W.;..
    6170: A7 7A 22 B2 24 AE 2E C7 70 C5 BE 4E 83 26 08 FB  // .z".$...p..N.&..
    6180: 0B BD A9 4F 99 08 E1 10 28 72 AA CD 02 03 01 00  // ...O....(r......
    6190: 01 A3 82 01 57 30 82 01 53 30 0C 06 03 55 1D 13  // ....W0..S0...U..
    61A0: 01 01 FF 04 02 30 00 30 16 06 03 55 1D 25 01 01  // .....0.0...U.%..
    61B0: FF 04 0C 30 0A 06 08 2B 06 01 05 05 07 03 08 30  // ...0...+.......0
    61C0: 0E 06 03 55 1D 0F 01 01 FF 04 04 03 02 07 80 30  // ...U...........0
    61D0: 73 06 08 2B 06 01 05 05 07 01 01 04 67 30 65 30  // s..+........g0e0
    61E0: 2A 06 08 2B 06 01 05 05 07 30 01 86 1E 68 74 74  // *..+.....0...htt
    61F0: 70 3A 2F 2F 74 73 2D 6F 63 73 70 2E 77 73 2E 73  // p://ts-ocsp.ws.s
    6200: 79 6D 61 6E 74 65 63 2E 63 6F 6D 30 37 06 08 2B  // ymantec.com07..+
    6210: 06 01 05 05 07 30 02 86 2B 68 74 74 70 3A 2F 2F  // .....0..+http://
    6220: 74 73 2D 61 69 61 2E 77 73 2E 73 79 6D 61 6E 74  // ts-aia.ws.symant
    6230: 65 63 2E 63 6F 6D 2F 74 73 73 2D 63 61 2D 67 32  // ec.com/tss-ca-g2
    6240: 2E 63 65 72 30 3C 06 03 55 1D 1F 04 35 30 33 30  // .cer0<..U...5030
    6250: 31 A0 2F A0 2D 86 2B 68 74 74 70 3A 2F 2F 74 73  // 1./.-.+http://ts
    6260: 2D 63 72 6C 2E 77 73 2E 73 79 6D 61 6E 74 65 63  // -crl.ws.symantec
    6270: 2E 63 6F 6D 2F 74 73 73 2D 63 61 2D 67 32 2E 63  // .com/tss-ca-g2.c
    6280: 72 6C 30 28 06 03 55 1D 11 04 21 30 1F A4 1D 30  // rl0(..U...!0...0
    6290: 1B 31 19 30 17 06 03 55 04 03 13 10 54 69 6D 65  // .1.0...U....Time
    62A0: 53 74 61 6D 70 2D 32 30 34 38 2D 32 30 1D 06 03  // Stamp-2048-20...
    62B0: 55 1D 0E 04 16 04 14 46 C6 69 A3 0E 4A 14 1E D5  // U......F.i..J...
    62C0: 4C DA 52 63 17 3F 5E 36 BC 0D E6 30 1F 06 03 55  // L.Rc.?^6...0...U
    62D0: 1D 23 04 18 30 16 80 14 5F 9A F5 6E 5C CC CC 74  // .#..0..._..n\..t
    62E0: 9A D4 DD 7D EF 3F DB EC 4C 80 2E DD 30 0D 06 09  // ...}.?..L...0...
    62F0: 2A 86 48 86 F7 0D 01 01 05 05 00 03 82 01 01 00  // *.H.............
    6300: 78 3B B4 91 2A 00 4C F0 8F 62 30 37 78 A3 84 27  // x;..*.L..b07x..'
    6310: 07 6F 18 B2 DE 25 DC A0 D4 94 03 AA 86 4E 25 9F  // .o...%.......N%.
    6320: 9A 40 03 1C DD CE E3 79 CB 21 68 06 DA B6 32 B4  // .@.....y.!h...2.
    6330: 6D BF F4 2C 26 63 33 E4 49 64 6D 0D E6 C3 67 0E  // m..,&c3.Idm...g.
    6340: F7 05 A4 35 6C 7C 89 16 C6 E9 B2 DF B2 E9 DD 20  // ...5l|......... 
    6350: C6 71 0F CD 95 74 DC B6 5C DE BD 37 1F 43 78 E6  // .q...t..\..7.Cx.
    6360: 78 B5 CD 28 04 20 A3 AA F1 4B C4 88 29 91 0E 80  // x..(. ...K..)...
    6370: D1 11 FC DD 5C 76 6E 4F 5E 0E 45 46 41 6E 0D B0  // ....\vnO^.EFAn..
    6380: EA 38 9A B1 3A DA 09 71 10 FC 1C 79 B4 80 7B AC  // .8..:..q...y..{.
    6390: 69 F4 FD 9C B6 0C 16 2B F1 7F 5B 09 3D 9B 5B E2  // i......+..[.=.[.
    63A0: 16 CA 13 81 6D 00 2E 38 0D A8 29 8F 2C E1 B2 F4  // ....m..8..).,...
    63B0: 5A A9 01 AF 15 9C 2C 2F 49 1B DB 22 BB C3 FE 78  // Z.....,/I.."...x
    63C0: 94 51 C3 86 B1 82 88 5D F0 3D B4 51 A1 79 33 2B  // .Q.....].=.Q.y3+
    63D0: 2E 7B B9 DC 20 09 13 71 EB 6A 19 5B CF E8 A5 30  // .{.. ..q.j.[...0
    63E0: 57 2C 89 49 3F B9 CF 7F C9 BF 3E 22 68 63 53 9A  // W,.I?.....>"hcS.
    63F0: BD 69 74 AC C5 1D 3C 7F 92 E0 C3 BC 1C D8 04 75  // .it...<........u
    6400: 30 82 04 D0 30 82 04 39 A0 03 02 01 02 02 10 25  // 0...0..9.......%
    6410: 0C E8 E0 30 61 2E 9F 2B 89 F7 05 4D 7C F8 FD 30  // ...0a..+...M|..0
    6420: 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 30 5F  // ...*.H........0_
    6430: 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 17 30  // 1.0...U....US1.0
    6440: 15 06 03 55 04 0A 13 0E 56 65 72 69 53 69 67 6E  // ...U....VeriSign
    6450: 2C 20 49 6E 63 2E 31 37 30 35 06 03 55 04 0B 13  // , Inc.1705..U...
    6460: 2E 43 6C 61 73 73 20 33 20 50 75 62 6C 69 63 20  // .Class 3 Public 
    6470: 50 72 69 6D 61 72 79 20 43 65 72 74 69 66 69 63  // Primary Certific
    6480: 61 74 69 6F 6E 20 41 75 74 68 6F 72 69 74 79 30  // ation Authority0
    6490: 1E 17 0D 30 36 31 31 30 38 30 30 30 30 30 30 5A  // ...061108000000Z
    64A0: 17 0D 32 31 31 31 30 37 32 33 35 39 35 39 5A 30  // ..211107235959Z0
    64B0: 81 CA 31 0B 30 09 06 03 55 04 06 13 02 55 53 31  // ..1.0...U....US1
    64C0: 17 30 15 06 03 55 04 0A 13 0E 56 65 72 69 53 69  // .0...U....VeriSi
    64D0: 67 6E 2C 20 49 6E 63 2E 31 1F 30 1D 06 03 55 04  // gn, Inc.1.0...U.
    64E0: 0B 13 16 56 65 72 69 53 69 67 6E 20 54 72 75 73  // ...VeriSign Trus
    64F0: 74 20 4E 65 74 77 6F 72 6B 31 3A 30 38 06 03 55  // t Network1:08..U
    6500: 04 0B 13 31 28 63 29 20 32 30 30 36 20 56 65 72  // ...1(c) 2006 Ver
    6510: 69 53 69 67 6E 2C 20 49 6E 63 2E 20 2D 20 46 6F  // iSign, Inc. - Fo
    6520: 72 20 61 75 74 68 6F 72 69 7A 65 64 20 75 73 65  // r authorized use
    6530: 20 6F 6E 6C 79 31 45 30 43 06 03 55 04 03 13 3C  //  only1E0C..U...<
    6540: 56 65 72 69 53 69 67 6E 20 43 6C 61 73 73 20 33  // VeriSign Class 3
    6550: 20 50 75 62 6C 69 63 20 50 72 69 6D 61 72 79 20  //  Public Primary 
    6560: 43 65 72 74 69 66 69 63 61 74 69 6F 6E 20 41 75  // Certification Au
    6570: 74 68 6F 72 69 74 79 20 2D 20 47 35 30 82 01 22  // thority - G50.."
    6580: 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03  // 0...*.H.........
    6590: 82 01 0F 00 30 82 01 0A 02 82 01 01 00 AF 24 08  // ....0.........$.
    65A0: 08 29 7A 35 9E 60 0C AA E7 4B 3B 4E DC 7C BC 3C  // .)z5.`...K;N.|.<
    65B0: 45 1C BB 2B E0 FE 29 02 F9 57 08 A3 64 85 15 27  // E..+..)..W..d..'
    65C0: F5 F1 AD C8 31 89 5D 22 E8 2A AA A6 42 B3 8F F8  // ....1.]".*..B...
    65D0: B9 55 B7 B1 B7 4B B3 FE 8F 7E 07 57 EC EF 43 DB  // .U...K...~.W..C.
    65E0: 66 62 15 61 CF 60 0D A4 D8 DE F8 E0 C3 62 08 3D  // fb.a.`.......b.=
    65F0: 54 13 EB 49 CA 59 54 85 26 E5 2B 8F 1B 9F EB F5  // T..I.YT.&.+.....
    6600: A1 91 C2 33 49 D8 43 63 6A 52 4B D2 8F E8 70 51  // ...3I.CcjRK...pQ
    6610: 4D D1 89 69 7B C7 70 F6 B3 DC 12 74 DB 7B 5D 4B  // M..i{.p....t.{]K
    6620: 56 D3 96 BF 15 77 A1 B0 F4 A2 25 F2 AF 1C 92 67  // V....w....%....g
    6630: 18 E5 F4 06 04 EF 90 B9 E4 00 E4 DD 3A B5 19 FF  // ............:...
    6640: 02 BA F4 3C EE E0 8B EB 37 8B EC F4 D7 AC F2 F6  // ...<....7.......
    6650: F0 3D AF DD 75 91 33 19 1D 1C 40 CB 74 24 19 21  // .=..u.3...@.t$.!
    6660: 93 D9 14 FE AC 2A 52 C7 8F D5 04 49 E4 8D 63 47  // .....*R....I..cG
    6670: 88 3C 69 83 CB FE 47 BD 2B 7E 4F C5 95 AE 0E 9D  // .<i...G.+~O.....
    6680: D4 D1 43 C0 67 73 E3 14 08 7E E5 3F 9F 73 B8 33  // ..C.gs...~.?.s.3
    6690: 0A CF 5D 3F 34 87 96 8A EE 53 E8 25 15 02 03 01  // ..]?4....S.%....
    66A0: 00 01 A3 82 01 9B 30 82 01 97 30 0F 06 03 55 1D  // ......0...0...U.
    66B0: 13 01 01 FF 04 05 30 03 01 01 FF 30 31 06 03 55  // ......0....01..U
    66C0: 1D 1F 04 2A 30 28 30 26 A0 24 A0 22 86 20 68 74  // ...*0(0&.$.". ht
    66D0: 74 70 3A 2F 2F 63 72 6C 2E 76 65 72 69 73 69 67  // tp://crl.verisig
    66E0: 6E 2E 63 6F 6D 2F 70 63 61 33 2E 63 72 6C 30 0E  // n.com/pca3.crl0.
    66F0: 06 03 55 1D 0F 01 01 FF 04 04 03 02 01 06 30 3D  // ..U...........0=
    6700: 06 03 55 1D 20 04 36 30 34 30 32 06 04 55 1D 20  // ..U. .60402..U. 
    6710: 00 30 2A 30 28 06 08 2B 06 01 05 05 07 02 01 16  // .0*0(..+........
    6720: 1C 68 74 74 70 73 3A 2F 2F 77 77 77 2E 76 65 72  // .https://www.ver
    6730: 69 73 69 67 6E 2E 63 6F 6D 2F 63 70 73 30 1D 06  // isign.com/cps0..
    6740: 03 55 1D 0E 04 16 04 14 7F D3 65 A7 C2 DD EC BB  // .U........e.....
    6750: F0 30 09 F3 43 39 FA 02 AF 33 31 33 30 6D 06 08  // .0..C9...3130m..
    6760: 2B 06 01 05 05 07 01 0C 04 61 30 5F A1 5D A0 5B  // +........a0_.].[
    6770: 30 59 30 57 30 55 16 09 69 6D 61 67 65 2F 67 69  // 0Y0W0U..image/gi
    6780: 66 30 21 30 1F 30 07 06 05 2B 0E 03 02 1A 04 14  // f0!0.0...+......
    6790: 8F E5 D3 1A 86 AC 8D 8E 6B C3 CF 80 6A D4 48 18  // ........k...j.H.
    67A0: 2C 7B 19 2E 30 25 16 23 68 74 74 70 3A 2F 2F 6C  // ,{..0%.#http://l
    67B0: 6F 67 6F 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D  // ogo.verisign.com
    67C0: 2F 76 73 6C 6F 67 6F 2E 67 69 66 30 34 06 08 2B  // /vslogo.gif04..+
    67D0: 06 01 05 05 07 01 01 04 28 30 26 30 24 06 08 2B  // ........(0&0$..+
    67E0: 06 01 05 05 07 30 01 86 18 68 74 74 70 3A 2F 2F  // .....0...http://
    67F0: 6F 63 73 70 2E 76 65 72 69 73 69 67 6E 2E 63 6F  // ocsp.verisign.co
    6800: 6D 30 3E 06 03 55 1D 25 04 37 30 35 06 08 2B 06  // m0>..U.%.705..+.
    6810: 01 05 05 07 03 01 06 08 2B 06 01 05 05 07 03 02  // ........+.......
    6820: 06 08 2B 06 01 05 05 07 03 03 06 09 60 86 48 01  // ..+.........`.H.
    6830: 86 F8 42 04 01 06 0A 60 86 48 01 86 F8 45 01 08  // ..B....`.H...E..
    6840: 01 30 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05 00  // .0...*.H........
    6850: 03 81 81 00 13 02 DD F8 E8 86 00 F2 5A F8 F8 20  // ............Z.. 
    6860: 0C 59 88 62 07 CE CE F7 4E F9 BB 59 A1 98 E5 E1  // .Y.b....N..Y....
    6870: 38 DD 4E BC 66 18 D3 AD EB 18 F2 0D C9 6D 3E 4A  // 8.N.f........m>J
    6880: 94 20 C3 3C BA BD 65 54 C6 AF 44 B3 10 AD 2C 6B  // . .<..eT..D...,k
    6890: 3E AB D7 07 B6 B8 81 63 C5 F9 5E 2E E5 2A 67 CE  // >......c..^..*g.
    68A0: CD 33 0C 2A D7 89 56 03 23 1F B3 BE E8 3A 08 59  // .3.*..V.#....:.Y
    68B0: B4 EC 45 35 F7 8A 5B FF 66 CF 50 AF C6 6D 57 8D  // ..E5..[.f.P..mW.
    68C0: 19 78 B7 B9 A2 D1 57 EA 1F 9A 4B AF BA C9 8E 12  // .x....W...K.....
    68D0: 7E C6 BD FF 30 82 05 03 30 82 02 EB A0 03 02 01  // ~...0...0.......
    68E0: 02 02 0A 61 0C 12 06 00 00 00 00 00 1B 30 0D 06  // ...a.........0..
    68F0: 09 2A 86 48 86 F7 0D 01 01 05 05 00 30 7F 31 0B  // .*.H........0.1.
    6900: 30 09 06 03 55 04 06 13 02 55 53 31 13 30 11 06  // 0...U....US1.0..
    6910: 03 55 04 08 13 0A 57 61 73 68 69 6E 67 74 6F 6E  // .U....Washington
    6920: 31 10 30 0E 06 03 55 04 07 13 07 52 65 64 6D 6F  // 1.0...U....Redmo
    6930: 6E 64 31 1E 30 1C 06 03 55 04 0A 13 15 4D 69 63  // nd1.0...U....Mic
    6940: 72 6F 73 6F 66 74 20 43 6F 72 70 6F 72 61 74 69  // rosoft Corporati
    6950: 6F 6E 31 29 30 27 06 03 55 04 03 13 20 4D 69 63  // on1)0'..U... Mic
    6960: 72 6F 73 6F 66 74 20 43 6F 64 65 20 56 65 72 69  // rosoft Code Veri
    6970: 66 69 63 61 74 69 6F 6E 20 52 6F 6F 74 30 1E 17  // fication Root0..
    6980: 0D 30 36 30 35 32 33 31 37 30 31 32 39 5A 17 0D  // .060523170129Z..
    6990: 31 36 30 35 32 33 31 37 31 31 32 39 5A 30 5F 31  // 160523171129Z0_1
    69A0: 0B 30 09 06 03 55 04 06 13 02 55 53 31 17 30 15  // .0...U....US1.0.
    69B0: 06 03 55 04 0A 13 0E 56 65 72 69 53 69 67 6E 2C  // ..U....VeriSign,
    69C0: 20 49 6E 63 2E 31 37 30 35 06 03 55 04 0B 13 2E  //  Inc.1705..U....
    69D0: 43 6C 61 73 73 20 33 20 50 75 62 6C 69 63 20 50  // Class 3 Public P
    69E0: 72 69 6D 61 72 79 20 43 65 72 74 69 66 69 63 61  // rimary Certifica
    69F0: 74 69 6F 6E 20 41 75 74 68 6F 72 69 74 79 30 81  // tion Authority0.
    6A00: 9F 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00  // .0...*.H........
    6A10: 03 81 8D 00 30 81 89 02 81 81 00 C9 5C 59 9E F2  // ....0.......\Y..
    6A20: 1B 8A 01 14 B4 10 DF 04 40 DB E3 57 AF 6A 45 40  // ........@..W.jE@
    6A30: 8F 84 0C 0B D1 33 D9 D9 11 CF EE 02 58 1F 25 F7  // .....3......X.%.
    6A40: 2A A8 44 05 AA EC 03 1F 78 7F 9E 93 B9 9A 00 AA  // *.D.....x.......
    6A50: 23 7D D6 AC 85 A2 63 45 C7 72 27 CC F4 4C C6 75  // #}....cE.r'..L.u
    6A60: 71 D2 39 EF 4F 42 F0 75 DF 0A 90 C6 8E 20 6F 98  // q.9.OB.u..... o.
    6A70: 0F F8 AC 23 5F 70 29 36 A4 C9 86 E7 B1 9A 20 CB  // ...#_p)6...... .
    6A80: 53 A5 85 E7 3D BE 7D 9A FE 24 45 33 DC 76 15 ED  // S...=.}..$E3.v..
    6A90: 0F A2 71 64 4C 65 2E 81 68 45 A7 02 03 01 00 01  // ..qdLe..hE......
    6AA0: A3 82 01 23 30 82 01 1F 30 11 06 03 55 1D 20 04  // ...#0...0...U. .
    6AB0: 0A 30 08 30 06 06 04 55 1D 20 00 30 36 06 09 2B  // .0.0...U. .06..+
    6AC0: 06 01 04 01 82 37 15 07 04 29 30 27 06 1F 2B 06  // .....7...)0'..+.
    6AD0: 01 04 01 82 37 15 08 8D E0 D1 89 4E 84 D7 9C C3  // ....7......N....
    6AE0: 07 86 A6 86 FB 1C 8F D3 BF A6 15 01 19 02 01 6E  // ...............n
    6AF0: 02 01 00 30 0B 06 03 55 1D 0F 04 04 03 02 01 86  // ...0...U........
    6B00: 30 0F 06 03 55 1D 13 01 01 FF 04 05 30 03 01 01  // 0...U.......0...
    6B10: FF 30 1D 06 03 55 1D 0E 04 16 04 14 E2 7F 7B D8  // .0...U........{.
    6B20: 77 D5 DF 9E 0A 3F 9E B4 CB 0E 2E A9 EF DB 69 77  // w....?........iw
    6B30: 30 1D 06 09 2B 06 01 04 01 82 37 14 02 04 10 1E  // 0...+.....7.....
    6B40: 0E 00 43 00 72 00 6F 00 73 00 73 00 43 00 41 30  // ..C.r.o.s.s.C.A0
    6B50: 1F 06 03 55 1D 23 04 18 30 16 80 14 62 FB 0A 21  // ...U.#..0...b..!
    6B60: 5B 7F 43 6E 11 DA 09 54 50 6B F5 D2 96 71 F1 9E  // [.Cn...TPk...q..
    6B70: 30 55 06 03 55 1D 1F 04 4E 30 4C 30 4A A0 48 A0  // 0U..U...N0L0J.H.
    6B80: 46 86 44 68 74 74 70 3A 2F 2F 63 72 6C 2E 6D 69  // F.Dhttp://crl.mi
    6B90: 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 70 6B 69 2F  // crosoft.com/pki/
    6BA0: 63 72 6C 2F 70 72 6F 64 75 63 74 73 2F 4D 69 63  // crl/products/Mic
    6BB0: 72 6F 73 6F 66 74 43 6F 64 65 56 65 72 69 66 52  // rosoftCodeVerifR
    6BC0: 6F 6F 74 2E 63 72 6C 30 0D 06 09 2A 86 48 86 F7  // oot.crl0...*.H..
    6BD0: 0D 01 01 05 05 00 03 82 02 01 00 01 E4 46 B3 3B  // .............F.;
    6BE0: 45 7F 75 13 87 7E 5F 43 DE 46 8E CB 8A BD B6 47  // E.u..~_C.F.....G
    6BF0: 41 BC CC CC 74 91 D8 CE 39 51 95 A4 A6 B5 47 C0  // A...t...9Q....G.
    6C00: EF D2 DA 7B 8F 57 11 F4 32 8C 7C CD 3F EE 42 DA  // ...{.W..2.|.?.B.
    6C10: 04 21 4A F7 C8 43 88 4A 6F 5C CA 14 FC 4B D1 9F  // .!J..C.Jo\...K..
    6C20: 4C BD D4 55 6E CC 02 BE 0D A6 88 8F 86 09 BA A4  // L..Un...........
    6C30: 25 BD E8 B0 F0 FA 8B 71 4E 67 B0 CB 82 A8 D7 8E  // %......qNg......
    6C40: 55 F7 37 EB F0 3E 88 EF E4 E0 8A FD 1C 6E 2E 61  // U.7..>.......n.a
    6C50: 41 48 75 B4 B0 2C 1D 28 D8 49 0F D7 15 F0 24 73  // AHu..,.(.I....$s
    6C60: 25 3C CC 88 0C DE 28 4C 65 54 FE 5E AE 8C EA 19  // %<....(LeT.^....
    6C70: AD 2C 51 B2 9B 3A 47 F5 3C 80 35 01 17 E2 49 87  // .,Q..:G.<.5...I.
    6C80: D6 54 4A FB 4B AB 07 BC BF 7D 79 CF BF 35 00 5C  // .TJ.K....}y..5.\
    6C90: BB 9E CF FC 82 89 1B 39 A0 51 97 B6 DE C0 B3 07  // .......9.Q......
    6CA0: FF 44 96 44 C0 34 2A 19 5C AB EE F0 3B EC 29 4E  // .D.D.4*.\...;.)N
    6CB0: B5 13 C5 37 85 7E 75 D5 B4 D6 0D 06 6E B5 D2 6C  // ...7.~u.....n..l
    6CC0: 23 71 67 EA F1 71 8E AF 4E 74 AA 0C F9 EC BF 4C  // #qg..q..Nt.....L
    6CD0: 58 FA 5E 90 9B 6D 39 CB 86 88 3F 8B 1C A8 16 32  // X.^..m9...?....2
    6CE0: D5 FE 6D B9 F1 F8 B3 EA D7 91 F6 36 47 78 C0 27  // ..m........6Gx.'
    6CF0: 2A 15 C7 68 D6 F4 C5 FC 4F 4E C8 67 3F 10 2D 40  // *..h....ON.g?.-@
    6D00: 9F F1 1E C9 61 48 E7 A7 03 FC 31 73 0C F0 46 88  // ....aH....1s..F.
    6D10: FE 56 DA 49 29 95 EF 09 DA A3 E5 BE EF 60 EC D9  // .V.I)........`..
    6D20: 54 A0 59 9C 28 BD 54 EF 66 15 7F 87 4C 84 DB A6  // T.Y.(.T.f...L...
    6D30: 0E 95 67 2E 51 7B 34 39 B6 41 C2 8C 84 68 26 DC  // ..g.Q{49.A...h&.
    6D40: 24 02 09 E7 81 8E 0A 97 2D EF EE A7 B9 98 A6 0F  // $.......-.......
    6D50: 81 8D C7 10 B5 E1 ED 98 2F 48 6F 53 85 49 64 78  // ......../HoS.Idx
    6D60: 9B EC 5D AC 97 0B 55 26 C3 EF BA 8D C8 D1 A5 2F  // ..]...U&......./
    6D70: 5A 7F 93 6B 61 1A 33 9B 18 B8 A2 62 10 DE 24 EA  // Z..ka.3....b..$.
    6D80: 76 E1 2F 43 EB EC DD 7C 12 34 24 89 DA 28 55 AE  // v./C...|.4$..(U.
    6D90: E5 75 4E 31 2B 67 63 B6 A8 D7 AB 73 0A 03 CE C5  // .uN1+gc....s....
    6DA0: EA 59 3F C7 EB 2A 45 AE A8 62 5B 2F 00 99 39 AB  // .Y?..*E..b[/..9.
    6DB0: B4 5F 73 C3 08 EC 80 11 8F 47 0E 8F 2A 13 43 E1  // ._s......G..*.C.
    6DC0: 91 06 62 55 BB FF BA 3D A9 A9 3D 26 0F AE CA 7D  // ..bU...=..=&...}
    6DD0: 62 8B 15 55 89 D6 94 34 4D D6 65 30 82 05 5B 30  // b..U...4M.e0..[0
    6DE0: 82 04 43 A0 03 02 01 02 02 10 51 B8 04 3B 2D ED  // ..C.......Q..;-.
    6DF0: 31 42 A7 C3 8F 95 BC D7 65 F0 30 0D 06 09 2A 86  // 1B......e.0...*.
    6E00: 48 86 F7 0D 01 01 05 05 00 30 81 B4 31 0B 30 09  // H........0..1.0.
    6E10: 06 03 55 04 06 13 02 55 53 31 17 30 15 06 03 55  // ..U....US1.0...U
    6E20: 04 0A 13 0E 56 65 72 69 53 69 67 6E 2C 20 49 6E  // ....VeriSign, In
    6E30: 63 2E 31 1F 30 1D 06 03 55 04 0B 13 16 56 65 72  // c.1.0...U....Ver
    6E40: 69 53 69 67 6E 20 54 72 75 73 74 20 4E 65 74 77  // iSign Trust Netw
    6E50: 6F 72 6B 31 3B 30 39 06 03 55 04 0B 13 32 54 65  // ork1;09..U...2Te
    6E60: 72 6D 73 20 6F 66 20 75 73 65 20 61 74 20 68 74  // rms of use at ht
    6E70: 74 70 73 3A 2F 2F 77 77 77 2E 76 65 72 69 73 69  // tps://www.verisi
    6E80: 67 6E 2E 63 6F 6D 2F 72 70 61 20 28 63 29 31 30  // gn.com/rpa (c)10
    6E90: 31 2E 30 2C 06 03 55 04 03 13 25 56 65 72 69 53  // 1.0,..U...%VeriS
    6EA0: 69 67 6E 20 43 6C 61 73 73 20 33 20 43 6F 64 65  // ign Class 3 Code
    6EB0: 20 53 69 67 6E 69 6E 67 20 32 30 31 30 20 43 41  //  Signing 2010 CA
    6EC0: 30 1E 17 0D 31 34 30 33 30 33 30 30 30 30 30 30  // 0...140303000000
    6ED0: 5A 17 0D 31 37 30 33 30 32 32 33 35 39 35 39 5A  // Z..170302235959Z
    6EE0: 30 81 9E 31 0B 30 09 06 03 55 04 06 13 02 55 53  // 0..1.0...U....US
    6EF0: 31 17 30 15 06 03 55 04 08 13 0E 4E 6F 72 74 68  // 1.0...U....North
    6F00: 20 43 61 72 6F 6C 69 6E 61 31 14 30 12 06 03 55  //  Carolina1.0...U
    6F10: 04 07 13 0B 4D 6F 72 72 69 73 76 69 6C 6C 65 31  // ....Morrisville1
    6F20: 0F 30 0D 06 03 55 04 0A 14 06 4C 45 4E 4F 56 4F  // .0...U....LENOVO
    6F30: 31 3E 30 3C 06 03 55 04 0B 13 35 44 69 67 69 74  // 1>0<..U...5Digit
    6F40: 61 6C 20 49 44 20 43 6C 61 73 73 20 33 20 2D 20  // al ID Class 3 - 
    6F50: 4D 69 63 72 6F 73 6F 66 74 20 53 6F 66 74 77 61  // Microsoft Softwa
    6F60: 72 65 20 56 61 6C 69 64 61 74 69 6F 6E 20 76 32  // re Validation v2
    6F70: 31 0F 30 0D 06 03 55 04 03 14 06 4C 45 4E 4F 56  // 1.0...U....LENOV
    6F80: 4F 30 82 01 22 30 0D 06 09 2A 86 48 86 F7 0D 01  // O0.."0...*.H....
    6F90: 01 01 05 00 03 82 01 0F 00 30 82 01 0A 02 82 01  // .........0......
    6FA0: 01 00 BE 61 8D 78 A6 40 CE CC 4C 4F BF 00 EE 94  // ...a.x.@..LO....
    6FB0: F5 0C 9A AB AF 62 97 80 D9 EE D3 99 D7 B7 CD 63  // .....b.........c
    6FC0: D6 79 80 2C 71 0E D0 10 F0 39 2E 52 85 92 45 BB  // .y.,q....9.R..E.
    6FD0: 4E EF C0 A2 3A 53 52 CE 69 C4 10 C6 D4 71 2C 6B  // N...:SR.i....q,k
    6FE0: E6 EF 7F B0 89 02 92 51 6A 8F C0 B4 AD 83 69 99  // .......Qj.....i.
    6FF0: 01 EA A5 D0 89 07 F7 A3 E2 EA 8D EF 34 37 5B F3  // ............47[.
    7000: 0B A8 BD 67 43 44 4C 0D A2 2E A3 00 67 31 13 CB  // ...gCDL.....g1..
    7010: 67 04 AB 2B 7D 9C 6D FA 9A 1A 28 E2 62 4C 40 1D  // g..+}.m...(.bL@.
    7020: 08 9D 87 4C 30 4A 3B 6F A8 DB 66 93 EF 8E 04 F1  // ...L0J;o..f.....
    7030: E6 65 82 08 90 CC 11 25 C5 F4 19 5D B0 E7 6D B1  // .e.....%...]..m.
    7040: C6 44 E4 B7 98 73 2E AD D8 36 28 D5 98 CE B8 F1  // .D...s...6(.....
    7050: 2B CD C3 E5 5F 7B 44 EA EC CC 9F 72 DA 5C 4D 79  // +..._{D....r.\My
    7060: 97 87 70 28 C5 C4 9C A4 1F E3 75 EA B8 E6 99 8B  // ..p(......u.....
    7070: B2 A2 C9 CE A9 3E FF 46 48 E7 3F 13 5B 22 07 1B  // .....>.FH.?.["..
    7080: 8F 8F E4 BA DB D2 70 68 52 0F DF 34 83 31 61 8B  // ......phR..4.1a.
    7090: 2F 9B 66 D1 E4 E2 31 66 BB E0 19 3E C2 59 57 0F  // /.f...1f...>.YW.
    70A0: 29 03 02 03 01 00 01 A3 82 01 7B 30 82 01 77 30  // ).........{0..w0
    70B0: 09 06 03 55 1D 13 04 02 30 00 30 0E 06 03 55 1D  // ...U....0.0...U.
    70C0: 0F 01 01 FF 04 04 03 02 07 80 30 40 06 03 55 1D  // ..........0@..U.
    70D0: 1F 04 39 30 37 30 35 A0 33 A0 31 86 2F 68 74 74  // ..90705.3.1./htt
    70E0: 70 3A 2F 2F 63 73 63 33 2D 32 30 31 30 2D 63 72  // p://csc3-2010-cr
    70F0: 6C 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 43  // l.verisign.com/C
    7100: 53 43 33 2D 32 30 31 30 2E 63 72 6C 30 44 06 03  // SC3-2010.crl0D..
    7110: 55 1D 20 04 3D 30 3B 30 39 06 0B 60 86 48 01 86  // U. .=0;09..`.H..
    7120: F8 45 01 07 17 03 30 2A 30 28 06 08 2B 06 01 05  // .E....0*0(..+...
    7130: 05 07 02 01 16 1C 68 74 74 70 73 3A 2F 2F 77 77  // ......https://ww
    7140: 77 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 72  // w.verisign.com/r
    7150: 70 61 30 13 06 03 55 1D 25 04 0C 30 0A 06 08 2B  // pa0...U.%..0...+
    7160: 06 01 05 05 07 03 03 30 71 06 08 2B 06 01 05 05  // .......0q..+....
    7170: 07 01 01 04 65 30 63 30 24 06 08 2B 06 01 05 05  // ....e0c0$..+....
    7180: 07 30 01 86 18 68 74 74 70 3A 2F 2F 6F 63 73 70  // .0...http://ocsp
    7190: 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D 30 3B 06  // .verisign.com0;.
    71A0: 08 2B 06 01 05 05 07 30 02 86 2F 68 74 74 70 3A  // .+.....0../http:
    71B0: 2F 2F 63 73 63 33 2D 32 30 31 30 2D 61 69 61 2E  // //csc3-2010-aia.
    71C0: 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 43 53 43  // verisign.com/CSC
    71D0: 33 2D 32 30 31 30 2E 63 65 72 30 1F 06 03 55 1D  // 3-2010.cer0...U.
    71E0: 23 04 18 30 16 80 14 CF 99 A9 EA 7B 26 F4 4B C9  // #..0.......{&.K.
    71F0: 8E 8F D7 F0 05 26 EF E3 D2 A7 9D 30 11 06 09 60  // .....&.....0...`
    7200: 86 48 01 86 F8 42 01 01 04 04 03 02 04 10 30 16  // .H...B........0.
    7210: 06 0A 2B 06 01 04 01 82 37 02 01 1B 04 08 30 06  // ..+.....7.....0.
    7220: 01 01 00 01 01 FF 30 0D 06 09 2A 86 48 86 F7 0D  // ......0...*.H...
    7230: 01 01 05 05 00 03 82 01 01 00 6D 2F 45 F0 A6 E4  // ..........m/E...
    7240: 1F 1B 30 E3 50 8E 87 83 83 B3 5C 20 55 78 9C D5  // ..0.P.....\ Ux..
    7250: 84 FC F0 DB BC 7C 68 F4 97 C9 20 50 09 E7 68 49  // .....|h... P..hI
    7260: 71 DE DE 83 CB 67 D9 11 A5 32 33 03 B0 05 29 4D  // q....g...23...)M
    7270: 7B 38 0C B3 34 DA EE 0E 12 99 0A DB 43 C2 FC 22  // {8..4.......C.."
    7280: EE 20 C5 DC 7B 08 0A 26 68 FB ED 71 F2 02 6C E5  // . ..{..&h..q..l.
    7290: F7 9C E3 8A 0A 24 F5 BB 2E BB 2B B0 ED 56 6E E1  // .....$....+..Vn.
    72A0: 36 50 00 9C 5C 61 22 6A B6 86 2D 46 96 16 25 AB  // 6P..\a"j..-F..%.
    72B0: 67 4E 2E B5 A1 97 3E 60 23 6D 2D F3 00 EF A3 20  // gN....>`#m-.... 
    72C0: 62 44 BF F5 A1 D7 DE 8E 18 75 55 26 97 13 CA 82  // bD.......uU&....
    72D0: 5C A7 3B 76 17 43 3E AB 9E 6D 57 19 5E B2 B3 A3  // \.;v.C>..mW.^...
    72E0: 93 CC 3C D1 D3 3B D1 E8 21 98 5C 8C 55 61 17 52  // ..<..;..!.\.Ua.R
    72F0: 82 D0 68 CB BB 95 C5 71 45 C2 7C C7 D8 D5 93 01  // ..h....qE.|.....
    7300: ED F3 35 32 5C 03 E3 8D AD 98 13 C6 40 72 EC 3C  // ..52\.......@r.<
    7310: DF 78 A5 CF E7 C9 90 EA 35 5F 85 A2 98 7C 05 C3  // .x......5_...|..
    7320: 00 53 C8 1D 23 C5 B1 D4 8E 9D 95 89 E9 70 C3 6F  // .S..#........p.o
    7330: B5 EF 57 AE 08 35 EB 33 4C 74 30 82 06 0A 30 82  // ..W..5.3Lt0...0.
    7340: 04 F2 A0 03 02 01 02 02 10 52 00 E5 AA 25 56 FC  // .........R...%V.
    7350: 1A 86 ED 96 C9 D4 4B 33 C7 30 0D 06 09 2A 86 48  // ......K3.0...*.H
    7360: 86 F7 0D 01 01 05 05 00 30 81 CA 31 0B 30 09 06  // ........0..1.0..
    7370: 03 55 04 06 13 02 55 53 31 17 30 15 06 03 55 04  // .U....US1.0...U.
    7380: 0A 13 0E 56 65 72 69 53 69 67 6E 2C 20 49 6E 63  // ...VeriSign, Inc
    7390: 2E 31 1F 30 1D 06 03 55 04 0B 13 16 56 65 72 69  // .1.0...U....Veri
    73A0: 53 69 67 6E 20 54 72 75 73 74 20 4E 65 74 77 6F  // Sign Trust Netwo
    73B0: 72 6B 31 3A 30 38 06 03 55 04 0B 13 31 28 63 29  // rk1:08..U...1(c)
    73C0: 20 32 30 30 36 20 56 65 72 69 53 69 67 6E 2C 20  //  2006 VeriSign, 
    73D0: 49 6E 63 2E 20 2D 20 46 6F 72 20 61 75 74 68 6F  // Inc. - For autho
    73E0: 72 69 7A 65 64 20 75 73 65 20 6F 6E 6C 79 31 45  // rized use only1E
    73F0: 30 43 06 03 55 04 03 13 3C 56 65 72 69 53 69 67  // 0C..U...<VeriSig
    7400: 6E 20 43 6C 61 73 73 20 33 20 50 75 62 6C 69 63  // n Class 3 Public
    7410: 20 50 72 69 6D 61 72 79 20 43 65 72 74 69 66 69  //  Primary Certifi
    7420: 63 61 74 69 6F 6E 20 41 75 74 68 6F 72 69 74 79  // cation Authority
    7430: 20 2D 20 47 35 30 1E 17 0D 31 30 30 32 30 38 30  //  - G50...1002080
    7440: 30 30 30 30 30 5A 17 0D 32 30 30 32 30 37 32 33  // 00000Z..20020723
    7450: 35 39 35 39 5A 30 81 B4 31 0B 30 09 06 03 55 04  // 5959Z0..1.0...U.
    7460: 06 13 02 55 53 31 17 30 15 06 03 55 04 0A 13 0E  // ...US1.0...U....
    7470: 56 65 72 69 53 69 67 6E 2C 20 49 6E 63 2E 31 1F  // VeriSign, Inc.1.
    7480: 30 1D 06 03 55 04 0B 13 16 56 65 72 69 53 69 67  // 0...U....VeriSig
    7490: 6E 20 54 72 75 73 74 20 4E 65 74 77 6F 72 6B 31  // n Trust Network1
    74A0: 3B 30 39 06 03 55 04 0B 13 32 54 65 72 6D 73 20  // ;09..U...2Terms 
    74B0: 6F 66 20 75 73 65 20 61 74 20 68 74 74 70 73 3A  // of use at https:
    74C0: 2F 2F 77 77 77 2E 76 65 72 69 73 69 67 6E 2E 63  // //www.verisign.c
    74D0: 6F 6D 2F 72 70 61 20 28 63 29 31 30 31 2E 30 2C  // om/rpa (c)101.0,
    74E0: 06 03 55 04 03 13 25 56 65 72 69 53 69 67 6E 20  // ..U...%VeriSign 
    74F0: 43 6C 61 73 73 20 33 20 43 6F 64 65 20 53 69 67  // Class 3 Code Sig
    7500: 6E 69 6E 67 20 32 30 31 30 20 43 41 30 82 01 22  // ning 2010 CA0.."
    7510: 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03  // 0...*.H.........
    7520: 82 01 0F 00 30 82 01 0A 02 82 01 01 00 F5 23 4B  // ....0.........#K
    7530: 5E A5 D7 8A BB 32 E9 D4 57 F7 EF E4 C7 26 7E AD  // ^....2..W....&~.
    7540: 19 98 FE A8 9D 7D 94 F6 36 6B 10 D7 75 81 30 7F  // .....}..6k..u.0.
    7550: 04 68 7F CB 2B 75 1E CD 1D 08 8C DF 69 94 A7 37  // .h..+u......i..7
    7560: A3 9C 7B 80 E0 99 E1 EE 37 4D 5F CE 3B 14 EE 86  // ..{.....7M_.;...
    7570: D4 D0 F5 27 35 BC 25 0B 38 A7 8C 63 9D 17 A3 08  // ...'5.%.8..c....
    7580: A5 AB B0 FB CD 6A 62 82 4C D5 21 DA 1B D9 F1 E3  // .....jb.L.!.....
    7590: 84 3B 8A 2A 4F 85 5B 90 01 4F C9 A7 76 10 7F 27  // .;.*O.[..O..v..'
    75A0: 03 7C BE AE 7E 7D C1 DD F9 05 BC 1B 48 9C 69 E7  // .|..~}......H.i.
    75B0: C0 A4 3C 3C 41 00 3E DF 96 E5 C5 E4 94 71 D6 55  // ..<<A.>......q.U
    75C0: 01 C7 00 26 4A 40 3C B5 A1 26 A9 0C A7 6D 80 8E  // ...&J@<..&...m..
    75D0: 90 25 7B CF BF 3F 1C EB 2F 96 FA E5 87 77 C6 B5  // .%{..?../....w..
    75E0: 56 B2 7A 3B 54 30 53 1B DF 62 34 FF 1E D1 F4 5A  // V.z;T0S..b4....Z
    75F0: 93 28 85 E5 4C 17 4E 7E 5B FD A4 93 99 7F DF CD  // .(..L.N~[.......
    7600: EF A4 75 EF EF 15 F6 47 E7 F8 19 72 D8 2E 34 1A  // ..u....G...r..4.
    7610: A6 B4 A7 4C 7E BD BB 4F 0C 3D 57 F1 30 D6 A6 36  // ...L~..O.=W.0..6
    7620: 8E D6 80 76 D7 19 2E A5 CD 7E 34 2D 89 02 03 01  // ...v.....~4-....
    7630: 00 01 A3 82 01 FE 30 82 01 FA 30 12 06 03 55 1D  // ......0...0...U.
    7640: 13 01 01 FF 04 08 30 06 01 01 FF 02 01 00 30 70  // ......0.......0p
    7650: 06 03 55 1D 20 04 69 30 67 30 65 06 0B 60 86 48  // ..U. .i0g0e..`.H
    7660: 01 86 F8 45 01 07 17 03 30 56 30 28 06 08 2B 06  // ...E....0V0(..+.
    7670: 01 05 05 07 02 01 16 1C 68 74 74 70 73 3A 2F 2F  // ........https://
    7680: 77 77 77 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D  // www.verisign.com
    7690: 2F 63 70 73 30 2A 06 08 2B 06 01 05 05 07 02 02  // /cps0*..+.......
    76A0: 30 1E 1A 1C 68 74 74 70 73 3A 2F 2F 77 77 77 2E  // 0...https://www.
    76B0: 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 72 70 61  // verisign.com/rpa
    76C0: 30 0E 06 03 55 1D 0F 01 01 FF 04 04 03 02 01 06  // 0...U...........
    76D0: 30 6D 06 08 2B 06 01 05 05 07 01 0C 04 61 30 5F  // 0m..+........a0_
    76E0: A1 5D A0 5B 30 59 30 57 30 55 16 09 69 6D 61 67  // .].[0Y0W0U..imag
    76F0: 65 2F 67 69 66 30 21 30 1F 30 07 06 05 2B 0E 03  // e/gif0!0.0...+..
    7700: 02 1A 04 14 8F E5 D3 1A 86 AC 8D 8E 6B C3 CF 80  // ............k...
    7710: 6A D4 48 18 2C 7B 19 2E 30 25 16 23 68 74 74 70  // j.H.,{..0%.#http
    7720: 3A 2F 2F 6C 6F 67 6F 2E 76 65 72 69 73 69 67 6E  // ://logo.verisign
    7730: 2E 63 6F 6D 2F 76 73 6C 6F 67 6F 2E 67 69 66 30  // .com/vslogo.gif0
    7740: 34 06 03 55 1D 1F 04 2D 30 2B 30 29 A0 27 A0 25  // 4..U...-0+0).'.%
    7750: 86 23 68 74 74 70 3A 2F 2F 63 72 6C 2E 76 65 72  // .#http://crl.ver
    7760: 69 73 69 67 6E 2E 63 6F 6D 2F 70 63 61 33 2D 67  // isign.com/pca3-g
    7770: 35 2E 63 72 6C 30 34 06 08 2B 06 01 05 05 07 01  // 5.crl04..+......
    7780: 01 04 28 30 26 30 24 06 08 2B 06 01 05 05 07 30  // ..(0&0$..+.....0
    7790: 01 86 18 68 74 74 70 3A 2F 2F 6F 63 73 70 2E 76  // ...http://ocsp.v
    77A0: 65 72 69 73 69 67 6E 2E 63 6F 6D 30 1D 06 03 55  // erisign.com0...U
    77B0: 1D 25 04 16 30 14 06 08 2B 06 01 05 05 07 03 02  // .%..0...+.......
    77C0: 06 08 2B 06 01 05 05 07 03 03 30 28 06 03 55 1D  // ..+.......0(..U.
    77D0: 11 04 21 30 1F A4 1D 30 1B 31 19 30 17 06 03 55  // ..!0...0.1.0...U
    77E0: 04 03 13 10 56 65 72 69 53 69 67 6E 4D 50 4B 49  // ....VeriSignMPKI
    77F0: 2D 32 2D 38 30 1D 06 03 55 1D 0E 04 16 04 14 CF  // -2-80...U.......
    7800: 99 A9 EA 7B 26 F4 4B C9 8E 8F D7 F0 05 26 EF E3  // ...{&.K......&..
    7810: D2 A7 9D 30 1F 06 03 55 1D 23 04 18 30 16 80 14  // ...0...U.#..0...
    7820: 7F D3 65 A7 C2 DD EC BB F0 30 09 F3 43 39 FA 02  // ..e......0..C9..
    7830: AF 33 31 33 30 0D 06 09 2A 86 48 86 F7 0D 01 01  // .3130...*.H.....
    7840: 05 05 00 03 82 01 01 00 56 22 E6 34 A4 C4 61 CB  // ........V".4..a.
    7850: 48 B9 01 AD 56 A8 64 0F D9 8C 91 C4 BB CC 0C E5  // H...V.d.........
    7860: AD 7A A0 22 7F DF 47 38 4A 2D 6C D1 7F 71 1A 7C  // .z."..G8J-l..q.|
    7870: EC 70 A9 B1 F0 4F E4 0F 0C 53 FA 15 5E FE 74 98  // .p...O...S..^.t.
    7880: 49 24 85 81 26 1C 91 14 47 B0 4C 63 8C BB A1 34  // I$..&...G.Lc...4
    7890: D4 C6 45 E8 0D 85 26 73 03 D0 A9 8C 64 6D DC 71  // ..E...&s....dm.q
    78A0: 92 E6 45 05 60 15 59 51 39 FC 58 14 6B FE D4 A4  // ..E.`.YQ9.X.k...
    78B0: ED 79 6B 08 0C 41 72 E7 37 22 06 09 BE 23 E9 3F  // .yk..Ar.7"...#.?
    78C0: 44 9A 1E E9 61 9D CC B1 90 5C FC 3D D2 8D AC 42  // D...a....\.=...B
    78D0: 3D 65 36 D4 B4 3D 40 28 8F 9B 10 CF 23 26 CC 4B  // =e6..=@(....#&.K
    78E0: 20 CB 90 1F 5D 8C 4C 34 CA 3C D8 E5 37 D6 6F A5  //  ...].L4.<..7.o.
    78F0: 20 BD 34 EB 26 D9 AE 0D E7 C5 9A F7 A1 B4 21 91  //  .4.&.........!.
    7900: 33 6F 86 E8 58 BB 25 7C 74 0E 58 FE 75 1B 63 3F  // 3o..X.%|t.X.u.c?
    7910: CE 31 7C 9B 8F 1B 96 9E C5 53 76 84 5B 9C AD 91  // .1|......Sv.[...
    7920: FA AC ED 93 BA 5D C8 21 53 C2 82 53 63 AF 12 0D  // .....].!S..Sc...
    7930: 50 87 11 1B 3D 54 52 96 8A 2C 9C 3D 92 1A 08 9A  // P...=TR..,.=....
    7940: 05 2E C7 93 A5 48 91 D3 31 82 04 72 30 82 04 6E  // .....H..1..r0..n
    7950: 02 01 01 30 81 C9 30 81 B4 31 0B 30 09 06 03 55  // ...0..0..1.0...U
    7960: 04 06 13 02 55 53 31 17 30 15 06 03 55 04 0A 13  // ....US1.0...U...
    7970: 0E 56 65 72 69 53 69 67 6E 2C 20 49 6E 63 2E 31  // .VeriSign, Inc.1
    7980: 1F 30 1D 06 03 55 04 0B 13 16 56 65 72 69 53 69  // .0...U....VeriSi
    7990: 67 6E 20 54 72 75 73 74 20 4E 65 74 77 6F 72 6B  // gn Trust Network
    79A0: 31 3B 30 39 06 03 55 04 0B 13 32 54 65 72 6D 73  // 1;09..U...2Terms
    79B0: 20 6F 66 20 75 73 65 20 61 74 20 68 74 74 70 73  //  of use at https
    79C0: 3A 2F 2F 77 77 77 2E 76 65 72 69 73 69 67 6E 2E  // ://www.verisign.
    79D0: 63 6F 6D 2F 72 70 61 20 28 63 29 31 30 31 2E 30  // com/rpa (c)101.0
    79E0: 2C 06 03 55 04 03 13 25 56 65 72 69 53 69 67 6E  // ,..U...%VeriSign
    79F0: 20 43 6C 61 73 73 20 33 20 43 6F 64 65 20 53 69  //  Class 3 Code Si
    7A00: 67 6E 69 6E 67 20 32 30 31 30 20 43 41 02 10 51  // gning 2010 CA..Q
    7A10: B8 04 3B 2D ED 31 42 A7 C3 8F 95 BC D7 65 F0 30  // ..;-.1B......e.0
    7A20: 09 06 05 2B 0E 03 02 1A 05 00 A0 70 30 10 06 0A  // ...+.......p0...
    7A30: 2B 06 01 04 01 82 37 02 01 0C 31 02 30 00 30 19  // +.....7...1.0.0.
    7A40: 06 09 2A 86 48 86 F7 0D 01 09 03 31 0C 06 0A 2B  // ..*.H......1...+
    7A50: 06 01 04 01 82 37 02 01 04 30 1C 06 0A 2B 06 01  // .....7...0...+..
    7A60: 04 01 82 37 02 01 0B 31 0E 30 0C 06 0A 2B 06 01  // ...7...1.0...+..
    7A70: 04 01 82 37 02 01 15 30 23 06 09 2A 86 48 86 F7  // ...7...0#..*.H..
    7A80: 0D 01 09 04 31 16 04 14 ED 75 04 8C A4 B3 79 AB  // ....1....u....y.
    7A90: EE 30 89 12 B2 74 75 3B 69 37 FD 3D 30 0D 06 09  // .0...tu;i7.=0...
    7AA0: 2A 86 48 86 F7 0D 01 01 01 05 00 04 82 01 00 09  // *.H.............
    7AB0: 71 B1 66 C5 0B B0 F9 BA 19 AA 59 88 35 C2 34 0F  // q.f.......Y.5.4.
    7AC0: 83 B8 76 3C C1 0F F7 B6 A7 2C 0C 84 DE D9 9B AB  // ..v<.....,......
    7AD0: 3C 20 6D A6 C1 36 BF 58 1C EF D3 E9 52 46 E1 1D  // < m..6.X....RF..
    7AE0: 86 23 15 69 CA 56 F5 0A 5E 37 0B 82 32 C7 0C 66  // .#.i.V..^7..2..f
    7AF0: 66 61 7A 15 90 AE EB 62 14 B0 59 20 25 F5 70 84  // faz....b..Y %.p.
    7B00: 6D 76 75 58 68 1F 67 F5 84 5B 81 F9 A6 E4 B8 5E  // mvuXh.g..[.....^
    7B10: 47 59 F0 EA A1 9C CD BF 1E 83 9C 8D 3B F6 8E 2A  // GY..........;..*
    7B20: 85 C8 96 2F 7E 62 C5 B6 D4 9E 43 BE 36 AA 73 1B  // .../~b....C.6.s.
    7B30: 7E BE E9 62 3E FB 7C A3 65 F4 48 48 2C 1B B0 40  // ~..b>.|.e.HH,..@
    7B40: 8D BB C2 BB 6C C3 4F 55 F9 D0 D1 65 51 CB A7 9F  // ....l.OU...eQ...
    7B50: 5F 9F FD B7 47 05 D0 02 89 CA F4 94 C9 EF D2 DF  // _...G...........
    7B60: C6 FF 8D 26 A9 A8 2E 74 44 67 0D A3 FF A7 3A FD  // ...&...tDg....:.
    7B70: BB CD C5 FA BC FD 21 F6 62 EE D1 39 95 5C 85 36  // ......!.b..9.\.6
    7B80: 5D 71 A9 36 C2 00 17 60 6D 62 84 F1 CE B2 A7 89  // ]q.6...`mb......
    7B90: 4E FC BC 70 8D EA 7D BE E6 50 48 90 2B B3 FE D6  // N..p..}..PH.+...
    7BA0: 0E 4F 06 13 39 89 31 C8 C8 5B E1 65 2E 11 3E A1  // .O..9.1..[.e..>.
    7BB0: 82 02 0B 30 82 02 07 06 09 2A 86 48 86 F7 0D 01  // ...0.....*.H....
    7BC0: 09 06 31 82 01 F8 30 82 01 F4 02 01 01 30 72 30  // ..1...0......0r0
    7BD0: 5E 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 1D  // ^1.0...U....US1.
    7BE0: 30 1B 06 03 55 04 0A 13 14 53 79 6D 61 6E 74 65  // 0...U....Symante
    7BF0: 63 20 43 6F 72 70 6F 72 61 74 69 6F 6E 31 30 30  // c Corporation100
    7C00: 2E 06 03 55 04 03 13 27 53 79 6D 61 6E 74 65 63  // ...U...'Symantec
    7C10: 20 54 69 6D 65 20 53 74 61 6D 70 69 6E 67 20 53  //  Time Stamping S
    7C20: 65 72 76 69 63 65 73 20 43 41 20 2D 20 47 32 02  // ervices CA - G2.
    7C30: 10 0E CF F4 38 C8 FE BF 35 6E 04 D8 6A 98 1B 1A  // ....8...5n..j...
    7C40: 50 30 09 06 05 2B 0E 03 02 1A 05 00 A0 5D 30 18  // P0...+.......]0.
    7C50: 06 09 2A 86 48 86 F7 0D 01 09 03 31 0B 06 09 2A  // ..*.H......1...*
    7C60: 86 48 86 F7 0D 01 07 01 30 1C 06 09 2A 86 48 86  // .H......0...*.H.
    7C70: F7 0D 01 09 05 31 0F 17 0D 31 35 30 39 31 31 30  // .....1...1509110
    7C80: 36 35 30 32 35 5A 30 23 06 09 2A 86 48 86 F7 0D  // 65025Z0#..*.H...
    7C90: 01 09 04 31 16 04 14 35 9A 25 AF 79 77 F4 B7 E2  // ...1...5.%.yw...
    7CA0: 92 D2 84 B2 73 48 BA 50 C7 03 79 30 0D 06 09 2A  // ....sH.P..y0...*
    7CB0: 86 48 86 F7 0D 01 01 01 05 00 04 82 01 00 19 0B  // .H..............
    7CC0: 1E 55 A0 79 42 E2 E4 8A 26 A9 F9 2B 4D 10 01 27  // .U.yB...&..+M..'
    7CD0: 3B AD A5 86 A4 C0 C2 C6 B7 41 C2 42 6F D8 98 1F  // ;........A.Bo...
    7CE0: B1 55 C1 E7 C9 E7 51 3F FB DC 98 4B 5C 28 BC 21  // .U....Q?...K\(.!
    7CF0: 7B F2 B2 00 EA 0F 6E 31 47 18 E7 18 5F 36 D2 EC  // {.....n1G..._6..
    7D00: 0B 45 E4 1B 92 AB E1 18 28 17 01 55 50 D7 5E D0  // .E......(..UP.^.
    7D10: FE FE 4C C2 27 71 12 C5 52 51 BB C5 4C 21 43 1A  // ..L.'q..RQ..L!C.
    7D20: C6 DA 55 63 6D C9 B1 70 62 0E C9 E3 2F A2 C3 84  // ..Ucm..pb.../...
    7D30: 66 E2 DF 01 C4 4F 8A B4 65 0D D1 D0 CC 8D 60 1F  // f....O..e.....`.
    7D40: 0F A2 95 90 13 C4 1C 53 2B 44 1F 3A 73 69 CE 9E  // .......S+D.:si..
    7D50: 6D 81 2E B2 2D 3D 9D 85 D9 CC 94 F6 2A 4A 90 6D  // m...-=......*J.m
    7D60: 10 9F 0F BF AD 1F 5A 3D C6 AF 52 A2 0E 11 54 06  // ......Z=..R...T.
    7D70: 7B BC 5E 56 9A 3B 46 FD DD D6 CC 01 2F 8E 79 A8  // {.^V.;F...../.y.
    7D80: 77 6D 69 C6 5F E1 65 04 8D 2C 9F 69 93 70 66 EB  // wmi._.e..,.i.pf.
    7D90: 3B E9 A8 34 D1 27 6A 07 81 8B 2A 5B 43 79 21 C4  // ;..4.'j...*[Cy!.
    7DA0: 0E E7 49 9E 10 C3 EB 4A F5 21 23 66 A5 8D 23 E6  // ..I....J.!#f..#.
    7DB0: 22 36 9C DB 03 08 DD 0E B3 9E 15 82 DC 68 00 00  // "6...........h..
    7DC0: 00 00 4D 5A 90 00 03 00 00 00 04 00 00 00 FF FF  // ..MZ............
    7DD0: 00 00 B8 00 00 00 00 00 00 00 40 00 00 00 00 00  // ..........@.....
    7DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8 00  // ................
    7E00: 00 00 0E 1F BA 0E 00 B4 09 CD 21 B8 01 4C CD 21  // ..........!..L.!
    7E10: 54 68 69 73 20 70 72 6F 67 72 61 6D 20 63 61 6E  // This program can
    7E20: 6E 6F 74 20 62 65 20 72 75 6E 20 69 6E 20 44 4F  // not be run in DO
    7E30: 53 20 6D 6F 64 65 2E 0D 0D 0A 24 00 00 00 00 00  // S mode....$.....
    7E40: 00 00 A1 E4 7E B1 E5 85 10 E2 E5 85 10 E2 E5 85  // ....~...........
    7E50: 10 E2 19 F2 AE E2 E4 85 10 E2 E5 85 11 E2 DA 85  // ................
    7E60: 10 E2 93 18 6B E2 E6 85 10 E2 93 18 6D E2 E7 85  // ....k.......m...
    7E70: 10 E2 EC FD 93 E2 E1 85 10 E2 93 18 7D E2 E4 85  // ............}...
    7E80: 10 E2 EC FD 85 E2 E7 85 10 E2 EC FD 99 E2 E2 85  // ................
    7E90: 10 E2 EC FD 84 E2 E4 85 10 E2 EC FD 81 E2 E4 85  // ................
    7EA0: 10 E2 52 69 63 68 E5 85 10 E2 00 00 00 00 00 00  // ..Rich..........
    7EB0: 00 00 00 00 00 00 00 00 00 00 50 45 00 00 64 86  // ..........PE..d.
    7EC0: 08 00 3B 77 F2 55 00 00 00 00 00 00 00 00 F0 00  // ..;w.U..........
    7ED0: 22 00 0B 02 09 00 00 54 00 00 00 14 00 00 00 00  // "......T........
    7EE0: 00 00 64 A0 00 00 00 10 00 00 00 00 01 00 00 00  // ..d.............
    7EF0: 00 00 00 10 00 00 00 02 00 00 06 00 01 00 06 00  // ................
    7F00: 01 00 05 00 02 00 00 00 00 00 00 D0 00 00 00 04  // ................
    7F10: 00 00 5B A2 00 00 01 00 00 00 00 00 04 00 00 00  // ..[.............
    7F20: 00 00 00 10 00 00 00 00 00 00 00 00 10 00 00 00  // ................
    7F30: 00 00 00 10 00 00 00 00 00 00 00 00 00 00 10 00  // ................
    7F40: 00 00 00 00 00 00 00 00 00 00 84 A0 00 00 28 00  // ..............(.
    7F50: 00 00 00 B0 00 00 40 03 00 00 00 80 00 00 84 03  // ......@.........
    7F60: 00 00 00 6A 00 00 F8 22 00 00 00 C0 00 00 4C 00  // ...j..."......L.
    7F70: 00 00 B0 61 00 00 1C 00 00 00 00 00 00 00 00 00  // ...a............
    7F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7FA0: 00 00 00 60 00 00 A8 01 00 00 00 00 00 00 00 00  // ...`............
    7FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7FC0: 00 00 2E 74 65 78 74 00 00 00 65 49 00 00 00 10  // ...text...eI....
    7FD0: 00 00 00 4A 00 00 00 04 00 00 00 00 00 00 00 00  // ...J............
    7FE0: 00 00 00 00 00 00 20 00 00 68 2E 72 64 61 74 61  // ...... ..h.rdata
    7FF0: 00 00 D8 04 00 00 00 60 00 00 00 06 00 00 00 4E  // .......`.......N
    8000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    8010: 00 48 2E 64 61 74 61 00 00 00 D0 02 00 00 00 70  // .H.data........p
    8020: 00 00 00 02 00 00 00 54 00 00 00 00 00 00 00 00  // .......T........
    8030: 00 00 00 00 00 00 40 00 00 C8 2E 70 64 61 74 61  // ......@....pdata
    8040: 00 00 84 03 00 00 00 80 00 00 00 04 00 00 00 56  // ...............V
    8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    8060: 00 48 50 41 47 45 00 00 00 00 4C 01 00 00 00 90  // .HPAGE....L.....
    8070: 00 00 00 02 00 00 00 5A 00 00 00 00 00 00 00 00  // .......Z........
    8080: 00 00 00 00 00 00 20 00 00 60 49 4E 49 54 00 00  // ...... ..`INIT..
    8090: 00 00 DA 06 00 00 00 A0 00 00 00 08 00 00 00 5C  // ...............\
    80A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00  // .............. .
    80B0: 00 E2 2E 72 73 72 63 00 00 00 40 03 00 00 00 B0  // ...rsrc...@.....
    80C0: 00 00 00 04 00 00 00 64 00 00 00 00 00 00 00 00  // .......d........
    80D0: 00 00 00 00 00 00 40 00 00 42 2E 72 65 6C 6F 63  // ......@..B.reloc
    80E0: 00 00 A6 00 00 00 00 C0 00 00 00 02 00 00 00 68  // ...............h
    80F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00  // ..............@.
    8100: 00 42 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .B..............
    8110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    81A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    81B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    81C0: 00 00 00 00 00 00 00 00 00 00 48 89 5C 24 08 48  // ..........H.\$.H
    81D0: 89 74 24 10 57 48 83 EC 20 48 8B F2 48 8B F9 48  // .t$.WH.. H..H..H
    81E0: 8D 15 7C 43 00 00 49 8B C8 49 8B D8 FF 15 F8 4F  // ..|C..I..I.....O
    81F0: 00 00 48 8B CB FF 15 0F 50 00 00 48 8B D8 48 85  // ..H.....P..H..H.
    8200: C0 74 2D FF 15 C9 4F 00 00 48 8D 4C 24 48 48 89  // .t-...O..H.L$HH.
    8210: 44 24 48 FF D6 48 83 7C 24 48 01 74 13 B9 01 00  // D$H..H.|$H.t....
    8220: 00 00 FF D3 48 85 FF 74 03 48 89 07 B0 01 EB 02  // ....H..t.H......
    8230: 32 C0 48 8B 5C 24 30 48 8B 74 24 38 48 83 C4 20  // 2.H.\$0H.t$8H.. 
    8240: 5F C3 CC CC CC CC CC CC CC CC 4C 8B DC 49 89 5B  // _.........L..I.[
    8250: 10 57 48 83 EC 50 33 C0 C6 44 24 30 00 33 DB F6  // .WH..P3..D$0.3..
    8260: 05 74 61 00 00 03 49 89 43 D9 49 89 43 E1 49 89  // .ta...I.C.I.C.I.
    8270: 43 E9 49 89 5B 08 66 89 44 24 49 88 44 24 4B 0F  // C.I.[.f.D$I.D$K.
    8280: 84 B1 00 00 00 38 05 52 61 00 00 0F 84 A5 00 00  // .....8.Ra.......
    8290: 00 38 05 47 61 00 00 0F 85 99 00 00 00 48 8D 15  // .8.Ga........H..
    82A0: 7E 42 00 00 49 8D 4B C8 FF 15 3C 4F 00 00 48 8D  // ~B..I.K...<O..H.
    82B0: 4C 24 20 FF 15 51 4F 00 00 48 85 C0 75 05 40 32  // L$ ..QO..H..u.@2
    82C0: FF EB 1A 4C 8D 44 24 20 48 8D 4C 24 60 48 8B D0  // ...L.D$ H.L$`H..
    82D0: E8 F5 FE FF FF 48 8B 5C 24 60 40 8A F8 8B 0D FF  // .....H.\$`@.....
    82E0: 60 00 00 C7 44 24 30 40 0A 4D 53 C7 44 24 34 02  // `...D$0@.MS.D$4.
    82F0: 00 00 00 89 4C 24 3C 48 8D 4C 24 30 E8 81 3C 00  // ....L$<H.L$0..<.
    8300: 00 40 84 FF 74 27 48 8D 15 95 42 00 00 48 8D 4C  // .@..t'H...B..H.L
    8310: 24 20 FF 15 D2 4E 00 00 48 8D 4C 24 20 FF 15 E7  // $ ...N..H.L$ ...
    8320: 4E 00 00 48 85 C0 74 05 48 8B CB FF D0 C6 05 AA  // N..H..t.H.......
    8330: 60 00 00 01 B0 01 48 8B 5C 24 68 48 83 C4 50 5F  // `.....H.\$hH..P_
    8340: C3 CC CC CC CC CC CC CC CC CC 48 8B C4 48 89 58  // ..........H..H.X
    8350: 08 48 89 68 10 48 89 70 18 48 89 78 20 41 54 41  // .H.h.H.p.H.x ATA
    8360: 55 41 57 48 81 EC A0 01 00 00 48 8B 05 51 5F 00  // UAWH......H..Q_.
    8370: 00 48 33 C4 48 89 84 24 90 01 00 00 33 D2 48 8D  // .H3.H..$....3.H.
    8380: 0D 4D 60 00 00 44 8D 42 30 E8 A4 40 00 00 FF 15  // .M`..D.B0..@....
    8390: B6 4E 00 00 44 8B D8 89 05 55 60 00 00 85 C0 74  // .N..D....U`....t
    83A0: 12 33 D2 B8 80 96 98 00 41 F7 F3 89 05 45 60 00  // .3......A....E`.
    83B0: 00 EB 0A C7 05 39 60 00 00 01 00 00 00 BB 14 01  // .....9`.........
    83C0: 00 00 48 8D 4C 24 70 33 D2 4C 8B C3 E8 61 40 00  // ..H.L$p3.L...a@.
    83D0: 00 48 8D 4C 24 70 89 5C 24 70 FF 15 3A 4E 00 00  // .H.L$p.\$p..:N..
    83E0: 44 8B 5C 24 74 8B 44 24 78 8D 6B 9E BB 00 00 0E  // D.\$t.D$x.k.....
    83F0: 00 45 33 C0 BA 00 00 02 00 48 8B CB 44 89 1D CF  // .E3......H..D...
    8400: 5F 00 00 89 05 CD 5F 00 00 C6 05 CA 5F 00 00 00  // _....._....._...
    8410: C6 05 C5 5F 00 00 0F 45 32 ED FF 15 12 4F 00 00  // ..._...E2....O..
    8420: 41 BF 00 02 00 00 4C 8B E0 48 85 C0 0F 84 F0 00  // A.....L..H......
    8430: 00 00 33 F6 48 8B F8 48 8D 15 C4 46 00 00 41 B8  // ..3.H..H...F..A.
    8440: 08 00 00 00 48 8B CF FF 15 D5 4E 00 00 85 C0 75  // ....H.....N....u
    8450: 21 32 C9 48 85 FF 74 33 48 8D 57 14 48 8B C7 48  // !2.H..t3H.W.H..H
    8460: 3B FA 73 1F 02 08 48 FF C0 48 3B C2 72 F6 84 C9  // ;.s...H..H;.r...
    8470: 74 11 83 C6 10 48 83 C7 10 81 FE 00 00 02 00 72  // t....H.........r
    8480: B6 33 FF 48 85 FF 74 03 8B 5F 10 BA 00 00 02 00  // .3.H..t.._......
    8490: 49 8B CC FF 15 91 4E 00 00 48 85 FF 0F 84 80 00  // I.....N..H......
    84A0: 00 00 45 33 C0 49 8B D7 48 8B CB FF 15 81 4E 00  // ..E3.I..H.....N.
    84B0: 00 48 8D 15 5A 46 00 00 41 B8 04 00 00 00 48 8B  // .H..ZF..A.....H.
    84C0: C8 48 8B F8 FF 15 58 4E 00 00 85 C0 75 06 8B 5F  // .H....XN....u.._
    84D0: 24 41 B5 01 49 8B D7 48 8B CF FF 15 4A 4E 00 00  // $A..I..H....JN..
    84E0: 45 84 ED 74 3D 45 33 C0 49 8B D7 48 8B CB FF 15  // E..t=E3.I..H....
    84F0: 3E 4E 00 00 48 8D 15 27 46 00 00 41 B8 04 00 00  // >N..H..'F..A....
    8500: 00 48 8B C8 48 8B D8 FF 15 15 4E 00 00 85 C0 75  // .H..H.....N....u
    8510: 03 8B 6B 30 49 8B D7 48 8B CB FF 15 0A 4E 00 00  // ..k0I..H.....N..
    8520: EB 4C E8 8F 7D 00 00 BF 55 53 42 46 49 8B D7 44  // .L..}...USBFI..D
    8530: 8B C7 33 C9 FF 15 88 4C 00 00 45 8B CF BA 46 41  // ..3....L..E...FA
    8540: 43 50 48 8B D8 48 8D 44 24 50 B9 49 50 43 41 4C  // CPH..H.D$P.IPCAL
    8550: 8B C3 48 89 44 24 20 E8 6E 7C 00 00 85 C0 78 03  // ..H.D$ .n|....x.
    8560: 8B 6B 30 8B D7 48 8B CB FF 15 6C 4C 00 00 33 C0  // .k0..H....lL..3.
    8570: 48 8D 15 AB 3F 00 00 48 8D 4C 24 58 33 DB 89 2D  // H...?..H.L$X3..-
    8580: 5E 5E 00 00 C6 44 24 30 00 48 89 44 24 31 48 89  // ^^...D$0.H.D$1H.
    8590: 44 24 39 48 89 44 24 41 66 89 44 24 49 88 44 24  // D$9H.D$Af.D$I.D$
    85A0: 4B 48 89 5C 24 50 FF 15 3E 4C 00 00 48 8D 4C 24  // KH.\$P..>L..H.L$
    85B0: 58 FF 15 53 4C 00 00 48 85 C0 75 05 40 32 FF EB  // X..SL..H..u.@2..
    85C0: 1A 4C 8D 44 24 58 48 8D 4C 24 50 48 8B D0 E8 F7  // .L.D$XH.L$PH....
    85D0: FB FF FF 48 8B 5C 24 50 40 8A F8 8B 0D 01 5E 00  // ...H.\$P@.....^.
    85E0: 00 83 64 24 34 00 BE 40 0A 4D 53 89 4C 24 3C 48  // ..d$4..@.MS.L$<H
    85F0: 8D 4C 24 30 89 74 24 30 E8 85 39 00 00 44 8B 5C  // .L$0.t$0..9..D.\
    8600: 24 30 41 0F BA E3 1F 44 89 1D D8 5D 00 00 0F 82  // $0A....D...]....
    8610: 9E 00 00 00 44 3B DE 0F 84 95 00 00 00 C6 05 B9  // ....D;..........
    8620: 5D 00 00 01 41 F6 C3 08 75 09 C6 05 AB 5D 00 00  // ]...A...u....]..
    8630: 00 EB 22 8A 05 A1 5D 00 00 41 F6 C3 10 74 08 0C  // .."...]..A...t..
    8640: 01 88 05 93 5D 00 00 41 F6 C3 20 74 08 0C 02 88  // ....]..A.. t....
    8650: 05 85 5D 00 00 8B 05 87 5D 00 00 48 8D 4C 24 30  // ..].....]..H.L$0
    8660: 89 74 24 30 89 44 24 3C C7 44 24 34 01 00 00 00  // .t$0.D$<.D$4....
    8670: E8 0D 39 00 00 44 8A 1D 5E 5D 00 00 41 F6 C3 02  // ..9..D..^]..A...
    8680: 74 0A C7 44 24 34 04 00 00 00 EB 0E 41 F6 C3 01  // t..D$4......A...
    8690: 74 20 C7 44 24 34 03 00 00 00 8B 05 42 5D 00 00  // t .D$4......B]..
    86A0: 48 8D 4C 24 30 89 74 24 30 89 44 24 3C E8 D0 38  // H.L$0.t$0.D$<..8
    86B0: 00 00 40 84 FF 74 27 48 8D 15 E4 3E 00 00 48 8D  // ..@..t'H...>..H.
    86C0: 4C 24 58 FF 15 21 4B 00 00 48 8D 4C 24 58 FF 15  // L$X..!K..H.L$X..
    86D0: 36 4B 00 00 48 85 C0 74 05 48 8B CB FF D0 33 C0  // 6K..H..t.H....3.
    86E0: 48 8B 8C 24 90 01 00 00 48 33 CC E8 F2 38 00 00  // H..$....H3...8..
    86F0: 4C 8D 9C 24 A0 01 00 00 49 8B 5B 20 49 8B 6B 28  // L..$....I.[ I.k(
    8700: 49 8B 73 30 49 8B 7B 38 49 8B E3 41 5F 41 5D 41  // I.s0I.{8I..A_A]A
    8710: 5C C3 CC CC CC CC CC CC CC CC 48 83 EC 28 80 7A  // \.........H..(.z
    8720: 41 01 49 8B C0 75 0E 45 33 C0 33 D2 48 8B C8 FF  // A.I..u.E3.3.H...
    8730: 15 C5 4A 00 00 B8 16 00 00 C0 48 83 C4 28 C3 CC  // ..J.......H..(..
    8740: CC CC CC CC CC CC 48 89 5C 24 08 48 89 74 24 10  // ......H.\$.H.t$.
    8750: 57 48 83 EC 50 48 8B D9 48 8B F2 48 8D 4C 24 30  // WH..PH..H..H.L$0
    8760: 45 33 C0 33 D2 FF 15 A7 4A 00 00 48 8B 96 B8 00  // E3.3....J..H....
    8770: 00 00 48 8B 7B 40 48 8D 5A B8 41 B8 38 00 00 00  // ..H.{@H.Z.A.8...
    8780: 48 8B CB E8 5A 39 00 00 C6 43 03 00 48 8B 86 B8  // H...Z9...C..H...
    8790: 00 00 00 48 8D 0D 80 FF FF FF C6 40 BB E0 48 8B  // ...H.......@..H.
    87A0: D6 48 89 48 F0 48 8D 4C 24 30 48 89 48 F8 48 8B  // .H.H.H.L$0H.H.H.
    87B0: 4F 08 FF 15 F2 4A 00 00 3D 03 01 00 00 75 1C 48  // O....J..=....u.H
    87C0: 83 64 24 20 00 48 8D 4C 24 30 45 33 C9 45 33 C0  // .d$ .H.L$0E3.E3.
    87D0: 33 D2 FF 15 8A 4A 00 00 8B 46 30 48 8B 5C 24 60  // 3....J...F0H.\$`
    87E0: 48 8B 74 24 68 48 83 C4 50 5F C3 CC CC CC CC CC  // H.t$hH..P_......
    87F0: CC CC 48 8B C4 48 89 58 08 48 89 68 10 48 89 70  // ..H..H.X.H.h.H.p
    8800: 18 57 48 83 EC 30 48 8B 71 40 4C 8D 05 D1 3D 00  // .WH..0H.q@L...=.
    8810: 00 41 B9 01 00 00 00 48 8D 4E 18 48 8B FA C7 40  // .A.....H.N.H...@
    8820: E8 20 00 00 00 FF 15 9F 49 00 00 8B D8 85 C0 79  // . ......I......y
    8830: 10 33 D2 48 8B CF 89 47 30 FF 15 13 4A 00 00 EB  // .3.H...G0...J...
    8840: 2D FE 47 43 48 83 87 B8 00 00 00 48 48 8B 4E 08  // -.GCH......HH.N.
    8850: 48 8B D7 FF 15 51 4A 00 00 48 8D 4E 18 41 B8 20  // H....QJ..H.N.A. 
    8860: 00 00 00 48 8B D7 8B D8 FF 15 B4 49 00 00 48 8B  // ...H.......I..H.
    8870: 6C 24 48 48 8B 74 24 50 8B C3 48 8B 5C 24 40 48  // l$HH.t$P..H.\$@H
    8880: 83 C4 30 5F C3 CC CC CC CC CC CC CC CC CC 80 7A  // ..0_...........z
    8890: 41 00 74 0B 48 8B 82 B8 00 00 00 80 48 03 01 8B  // A.t.H.......H...
    88A0: 42 30 C3 CC CC CC CC CC CC CC 48 89 5C 24 08 48  // B0........H.\$.H
    88B0: 89 74 24 10 57 48 83 EC 20 44 8A 05 1A 5B 00 00  // .t$.WH.. D...[..
    88C0: 48 8B 71 40 48 8B FA 45 84 C0 74 7E 8A 46 5F 3C  // H.q@H..E..t~.F_<
    88D0: 12 74 10 3C 06 74 0C 3C 08 74 08 3C 07 74 04 3C  // .t.<.t.<.t.<.t.<
    88E0: 60 75 67 4C 8B 8A B8 00 00 00 49 8B 51 08 3C 60  // `ugL......I.Q.<`
    88F0: 75 1C 48 83 67 38 00 BB 22 00 00 C0 33 D2 48 8B  // u.H.g8.."...3.H.
    8900: CF 89 5F 30 FF 15 48 49 00 00 8B C3 EB 44 41 81  // .._0..HI.....DA.
    8910: 79 18 03 00 22 00 75 32 3C 08 75 10 41 80 F8 01  // y...".u2<.u.A...
    8920: 75 0A 48 8B D7 E8 2C 16 00 00 EB 26 48 81 FA FF  // u.H...,....&H...
    8930: FF FF 7F 72 15 66 83 7A 02 0B 74 26 66 83 7A 02  // ...r.f.z..t&f.z.
    8940: 28 74 1F 66 83 7A 02 09 74 A8 48 8B D7 E8 A0 FE  // (t.f.z..t.H.....
    8950: FF FF 48 8B 5C 24 30 48 8B 74 24 38 48 83 C4 20  // ..H.\$0H.t$8H.. 
    8960: 5F C3 49 8D 59 B8 49 8B D1 41 B8 38 00 00 00 48  // _.I.Y.I..A.8...H
    8970: 8B CB E8 6B 37 00 00 C6 43 03 00 48 8B 87 B8 00  // ...k7...C..H....
    8980: 00 00 48 83 60 F8 00 48 8D 0D 00 FF FF FF C6 40  // ..H.`..H.......@
    8990: BB E0 48 89 48 F0 48 8B 4E 08 48 8B D7 FF 15 07  // ..H.H.H.N.H.....
    89A0: 49 00 00 EB AD CC CC CC CC CC CC CC CC CC 48 83  // I.............H.
    89B0: EC 28 80 7A 41 00 4C 8B 41 40 74 0B 48 8B 82 B8  // .(.zA.L.A@t.H...
    89C0: 00 00 00 80 48 03 01 49 8B 40 08 0F BA 60 30 0D  // ....H..I.@...`0.
    89D0: 72 05 0F BA 71 30 0D 49 8D 48 18 41 B8 20 00 00  // r...q0.I.H.A. ..
    89E0: 00 FF 15 3B 48 00 00 33 C0 48 83 C4 28 C3 CC CC  // ...;H..3.H..(...
    89F0: CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20  // ......H.\$.WH.. 
    8A00: 83 7A 30 00 48 8B 79 40 48 8B DA 7C 39 48 8B 4A  // .z0.H.y@H..|9H.J
    8A10: 38 48 85 C9 74 30 48 8B 82 B8 00 00 00 83 78 08  // 8H..t0H.......x.
    8A20: 01 74 06 83 78 08 02 75 1D 83 78 08 02 75 17 4C  // .t..x..u..x..u.L
    8A30: 8D 05 BC 3B 00 00 33 D2 E8 95 34 00 00 48 85 C0  // ...;..3...4..H..
    8A40: 74 04 C6 47 5F 12 80 7B 41 00 74 0B 48 8B 83 B8  // t..G_..{A.t.H...
    8A50: 00 00 00 80 48 03 01 48 8D 4F 18 41 B8 20 00 00  // ....H..H.O.A. ..
    8A60: 00 48 8B D3 FF 15 B8 47 00 00 8B 43 30 48 8B 5C  // .H.....G...C0H.\
    8A70: 24 30 48 83 C4 20 5F C3 CC CC CC CC CC CC 48 89  // $0H.. _.......H.
    8A80: 5C 24 08 57 48 83 EC 20 83 7A 30 00 48 8B 79 40  // \$.WH.. .z0.H.y@
    8A90: 48 8B DA 7C 78 48 8B 4A 38 48 85 C9 74 6F 48 8B  // H..|xH.J8H..toH.
    8AA0: 82 B8 00 00 00 83 78 08 00 75 62 4C 8D 05 50 3B  // ......x..ubL..P;
    8AB0: 00 00 33 D2 E8 19 34 00 00 48 85 C0 75 4B 48 8B  // ..3...4..H..uKH.
    8AC0: 4B 38 4C 8D 05 49 3B 00 00 33 D2 E8 02 34 00 00  // K8L..I;..3...4..
    8AD0: 48 85 C0 75 34 48 8B 4B 38 4C 8D 05 42 3B 00 00  // H..u4H.K8L..B;..
    8AE0: 33 D2 E8 EB 33 00 00 48 85 C0 75 17 48 8B 4B 38  // 3...3..H..u.H.K8
    8AF0: 4C 8D 05 3B 3B 00 00 33 D2 E8 D4 33 00 00 48 85  // L..;;..3...3..H.
    8B00: C0 74 0A C6 47 5F 03 EB 04 C6 47 5F 60 80 7B 41  // .t..G_....G_`.{A
    8B10: 00 74 0B 48 8B 83 B8 00 00 00 80 48 03 01 48 8D  // .t.H.......H..H.
    8B20: 4F 18 41 B8 20 00 00 00 48 8B D3 FF 15 F1 46 00  // O.A. ...H.....F.
    8B30: 00 8B 43 30 48 8B 5C 24 30 48 83 C4 20 5F C3 CC  // ..C0H.\$0H.. _..
    8B40: CC CC CC CC CC CC 48 89 5C 24 08 48 89 6C 24 18  // ......H.\$.H.l$.
    8B50: 48 89 74 24 20 57 41 54 41 55 48 83 EC 30 48 8B  // H.t$ WATAUH..0H.
    8B60: D9 BD 00 10 00 00 45 33 ED 41 B8 55 53 42 46 33  // ......E3.A.USBF3
    8B70: C9 48 8B D5 45 8B E5 FF 15 45 46 00 00 48 8B F0  // .H..E....EF..H..
    8B80: 49 3B C5 0F 84 49 01 00 00 48 8B 7B 10 4C 8B C5  // I;...I...H.{.L..
    8B90: 33 D2 48 8B C8 44 89 6C 24 58 E8 93 38 00 00 4C  // 3.H..D.l$X..8..L
    8BA0: 8D 5C 24 58 41 8D 55 02 4C 8B CE 41 B8 00 04 00  // .\$XA.U.L..A....
    8BB0: 00 48 8B CF 4C 89 5C 24 20 FF 15 7B 47 00 00 44  // .H..L.\$ ..{G..D
    8BC0: 8B E0 41 3B C5 75 22 48 8B D6 66 44 39 2E 74 19  // ..A;.u"H..fD9.t.
    8BD0: 48 83 C9 FF 33 C0 48 8B FA 66 F2 AF 48 F7 D1 48  // H...3.H..f..H..H
    8BE0: 8D 14 4A 66 44 39 2A 75 E7 45 3B E5 0F 8C D2 00  // ..JfD9*u.E;.....
    8BF0: 00 00 48 8B EE 66 44 39 2E 0F 84 C1 00 00 00 48  // ..H..fD9.......H
    8C00: 83 C9 FF 33 C0 48 8B FD 66 F2 AF 4C 8D 05 40 3A  // ...3.H..f..L..@:
    8C10: 00 00 48 F7 D1 8D 51 FF 48 8D 79 FF 48 8B CD E8  // ..H...Q.H.y.H...
    8C20: AE 32 00 00 49 3B C5 74 68 66 83 78 0C 30 75 77  // .2..I;.thf.x.0uw
    8C30: 66 83 78 0E 31 75 06 C6 43 5F 01 EB 4C 66 83 78  // f.x.1u..C_..Lf.x
    8C40: 0E 32 75 06 C6 43 5F 02 EB 3F 66 83 78 0E 33 75  // .2u..C_..?f.x.3u
    8C50: 06 C6 43 5F 03 EB 32 66 83 78 0E 36 75 06 C6 43  // ..C_..2f.x.6u..C
    8C60: 5F 06 EB 25 66 83 78 0E 37 75 06 C6 43 5F 07 EB  // _..%f.x.7u..C_..
    8C70: 18 66 83 78 0E 38 75 06 C6 43 5F 08 EB 0B 66 83  // .f.x.8u..C_...f.
    8C80: 78 0E 39 75 04 C6 43 5F 09 80 7B 5F 80 72 31 EB  // x.9u..C_..{_.r1.
    8C90: 16 4C 8D 05 CA 39 00 00 8B D7 48 8B CD E8 30 32  // .L...9....H...02
    8CA0: 00 00 49 3B C5 75 15 8D 47 01 48 8D 6C 45 00 66  // ..I;.u..G.H.lE.f
    8CB0: 44 39 6D 00 0F 85 45 FF FF FF EB 04 C6 43 5F 10  // D9m...E......C_.
    8CC0: C6 43 5D 01 BA 55 53 42 46 48 8B CE FF 15 08 45  // .C]..USBFH.....E
    8CD0: 00 00 48 8B 5C 24 50 48 8B 6C 24 60 48 8B 74 24  // ..H.\$PH.l$`H.t$
    8CE0: 68 41 8B C4 48 83 C4 30 41 5D 41 5C 5F C3 CC CC  // hA..H..0A]A\_...
    8CF0: CC CC CC CC CC CC 40 53 48 83 EC 20 48 8B 49 40  // ......@SH.. H.I@
    8D00: 48 8B DA E8 3E FE FF FF 48 8B CB 48 83 C4 20 5B  // H...>...H..H.. [
    8D10: 48 FF 25 EB 44 00 00 CC CC CC CC CC CC CC 48 8B  // H.%.D.........H.
    8D20: C4 48 89 58 08 48 89 68 10 48 89 70 18 57 41 54  // .H.X.H.h.H.p.WAT
    8D30: 41 55 41 56 41 57 48 83 EC 30 48 8B 79 40 4C 8B  // AUAVAWH..0H.y@L.
    8D40: A2 B8 00 00 00 48 8B E9 4C 8D 6F 18 41 BF 01 00  // .....H..L.o.A...
    8D50: 00 00 4C 8D 05 89 38 00 00 49 8B CD 45 8B CF 48  // ..L...8..I..E..H
    8D60: 8B F2 C7 40 C8 20 00 00 00 FF 15 5B 44 00 00 45  // ...@. .....[D..E
    8D70: 33 F6 41 3B C6 8B D8 7D 13 89 46 30 33 D2 48 8B  // 3.A;...}..F03.H.
    8D80: CE FF 15 CB 44 00 00 E9 83 00 00 00 41 0F B6 4C  // ....D.......A..L
    8D90: 24 01 83 F9 06 0F 8F 83 01 00 00 0F 84 68 01 00  // $............h..
    8DA0: 00 41 3B CE 0F 84 EF 00 00 00 41 2B CF 0F 84 D7  // .A;.......A+....
    8DB0: 00 00 00 41 2B CF 0F 84 87 00 00 00 41 2B CF 74  // ...A+.......A+.t
    8DC0: 79 41 2B CF 74 68 41 3B CF 0F 85 70 01 00 00 8B  // yA+.thA;...p....
    8DD0: 47 54 C7 47 54 02 00 00 00 89 47 58 41 8B DE 44  // GT.GT.....GXA..D
    8DE0: 00 7E 43 48 83 86 B8 00 00 00 48 89 5E 30 48 8B  // .~CH......H.^0H.
    8DF0: 4F 08 48 8B D6 FF 15 AF 44 00 00 8B D8 41 B8 20  // O.H.....D....A. 
    8E00: 00 00 00 48 8B D6 49 8B CD FF 15 13 44 00 00 8B  // ...H..I.....D...
    8E10: C3 48 8B 5C 24 60 48 8B 6C 24 68 48 8B 74 24 70  // .H.\$`H.l$hH.t$p
    8E20: 48 83 C4 30 41 5F 41 5E 41 5D 41 5C 5F C3 8B 47  // H..0A_A^A]A\_..G
    8E30: 54 C7 47 54 03 00 00 00 EB 9F 83 7F 54 04 E9 CA  // T.GT........T...
    8E40: 00 00 00 41 B8 20 00 00 00 48 8B D6 49 8B CD FF  // ...A. ...H..I...
    8E50: 15 05 44 00 00 48 8B D6 48 8B CD E8 E6 F8 FF FF  // ..D..H..H.......
    8E60: 8B 57 54 48 8B 4F 08 89 57 58 8B D8 C7 47 54 06  // .WTH.O..WX...GT.
    8E70: 00 00 00 FF 15 B1 43 00 00 48 8B CD FF 15 70 43  // ......C..H....pC
    8E80: 00 00 89 5E 30 E9 F2 FE FF FF 8B 47 54 C7 47 54  // ...^0......GT.GT
    8E90: 04 00 00 00 E9 40 FF FF FF 48 8B D6 48 8B CD E8  // .....@...H..H...
    8EA0: A2 F8 FF FF 41 3B C6 8B D8 7C 18 8B 4F 54 44 89  // ....A;...|..OTD.
    8EB0: 7F 54 89 4F 58 48 8B 4F 08 44 84 79 34 74 04 44  // .T.OXH.O.D.y4t.D
    8EC0: 09 7D 34 80 7F 5F FF 75 12 48 8B CF E8 75 FC FF  // .}4.._.u.H...u..
    8ED0: FF 80 7F 5F FF 75 04 C6 47 5F 80 44 38 35 F8 54  // ..._.u..G_.D85.T
    8EE0: 00 00 74 12 44 38 77 5C 75 0C 80 7F 5F 07 B8 22  // ..t.D8w\u..._.."
    8EF0: 00 00 C0 0F 44 D8 33 D2 48 8B CE 89 5E 30 FF 15  // ....D.3.H...^0..
    8F00: 4E 43 00 00 E9 F4 FE FF FF 83 7F 54 02 0F 85 C9  // NC.........T....
    8F10: FE FF FF 8B 47 58 89 47 54 E9 BE FE FF FF 83 E9  // ....GX.GT.......
    8F20: 07 0F 84 09 01 00 00 83 E9 05 0F 84 C1 00 00 00  // ................
    8F30: 83 E9 07 74 7F 83 E9 03 74 1C 41 3B CF 74 08 8B  // ...t....t.A;.t..
    8F40: 5E 30 E9 98 FE FF FF 8B 47 54 C7 47 54 05 00 00  // ^0......GT.GT...
    8F50: 00 E9 83 FE FF FF 48 8B 45 18 49 3B C6 74 07 0F  // ......H.E.I;.t..
    8F60: BA 60 30 0D 73 05 0F BA 6D 30 0D 48 8B 96 B8 00  // .`0.s...m0.H....
    8F70: 00 00 41 B8 38 00 00 00 48 8D 5A B8 48 8B CB E8  // ..A.8...H.Z.H...
    8F80: 5E 31 00 00 48 8D 0D 23 FA FF FF 44 88 73 03 48  // ^1..H..#...D.s.H
    8F90: 8B 86 B8 00 00 00 48 8B D6 48 89 48 F0 4C 89 70  // ......H..H.H.L.p
    8FA0: F8 C6 40 BB E0 48 8B 4F 08 FF 15 FB 42 00 00 E9  // ..@..H.O....B...
    8FB0: 5D FE FF FF 8A 47 5F 3C 80 73 08 3C 10 0F 85 1C  // ]....G_<.s.<....
    8FC0: FE FF FF 41 83 7C 24 08 02 0F 85 10 FE FF FF 48  // ...A.|$........H
    8FD0: 8B 96 B8 00 00 00 41 B8 38 00 00 00 48 8D 5A B8  // ......A.8...H.Z.
    8FE0: 48 8B CB E8 FA 30 00 00 48 8D 0D 07 FA FF FF EB  // H....0..H.......
    8FF0: 9A 8A 47 5F 3C 80 73 08 3C 10 0F 85 DF FD FF FF  // ..G_<.s.<.......
    9000: 45 39 74 24 08 0F 85 D4 FD FF FF 48 8B 96 B8 00  // E9t$.......H....
    9010: 00 00 41 B8 38 00 00 00 48 8D 5A B8 48 8B CB E8  // ..A.8...H.Z.H...
    9020: BE 30 00 00 48 8D 0D 53 FA FF FF E9 5B FF FF FF  // .0..H..S....[...
    9030: 45 39 74 24 08 0F 85 A4 FD FF FF 8A 47 5F 3C 09  // E9t$........G_<.
    9040: 74 10 3C 10 74 0C 3C FF 74 08 3C 80 0F 85 8D FD  // t.<.t.<.t.<.....
    9050: FF FF 48 8B D6 48 8B CD E8 E9 F6 FF FF 41 3B C6  // ..H..H.......A;.
    9060: 8B D8 0F 8C 8E FE FF FF 48 8B 5E 38 49 3B DE 74  // ........H.^8I;.t
    9070: 23 44 39 33 74 1E 41 8B EE 76 19 48 8D 7B 08 48  // #D93t.A..v.H.{.H
    9080: 8B 17 33 C9 E8 B1 02 00 00 41 03 EF 48 83 C7 08  // ..3......A..H...
    9090: 3B 2B 72 EB 41 8B DE E9 5A FE FF FF CC CC CC CC  // ;+r.A...Z.......
    90A0: CC CC 48 89 5C 24 08 48 89 74 24 10 57 48 83 EC  // ..H.\$.H.t$.WH..
    90B0: 30 48 8B F1 48 8B 49 40 4C 8D 05 23 35 00 00 41  // 0H..H.I@L..#5..A
    90C0: B9 01 00 00 00 48 83 C1 18 48 8B DA C7 44 24 20  // .....H...H...D$ 
    90D0: 20 00 00 00 FF 15 F0 40 00 00 8B F8 85 C0 79 1B  //  ......@......y.
    90E0: 48 8B CB 89 43 30 FF 15 56 41 00 00 33 D2 48 8B  // H...C0..VA..3.H.
    90F0: CB FF 15 5B 41 00 00 8B C7 EB 63 83 3D D0 52 00  // ...[A.....c.=.R.
    9100: 00 06 72 1E FE 43 43 48 83 83 B8 00 00 00 48 48  // ..r..CCH......HH
    9110: 8B 7E 40 48 8B 4F 08 48 8B D3 FF 15 8A 41 00 00  // .~@H.O.H.....A..
    9120: EB 25 48 8B CB FF 15 17 41 00 00 FE 43 43 48 83  // .%H.....A...CCH.
    9130: 83 B8 00 00 00 48 48 8B 7E 40 48 8B D3 48 8B 4F  // .....HH.~@H..H.O
    9140: 08 FF 15 33 41 00 00 48 8D 4F 18 41 B8 20 00 00  // ...3A..H.O.A. ..
    9150: 00 48 8B D3 8B F0 FF 15 C6 40 00 00 8B C6 48 8B  // .H.......@....H.
    9160: 5C 24 40 48 8B 74 24 48 48 83 C4 30 5F C3 CC CC  // \$@H.t$HH..0_...
    9170: CC CC CC CC CC CC 40 53 48 83 EC 20 4C 8B C9 48  // ......@SH.. L..H
    9180: 8B 49 40 33 DB 49 8B 41 18 4C 8B C2 48 3B C3 74  // .I@3.I.A.L..H;.t
    9190: 1C 8B 40 48 83 F8 02 74 0A 83 F8 07 74 5A 83 F8  // ..@H...t....tZ..
    91A0: 33 75 0A 41 89 41 48 C7 01 04 00 00 00 49 8B 49  // 3u.A.AH......I.I
    91B0: 40 8B 01 3B C3 0F 84 FA 00 00 00 83 E8 01 0F 84  // @..;............
    91C0: DB 00 00 00 83 E8 01 74 62 83 E8 01 74 50 83 E8  // .......tb...tP..
    91D0: 01 74 3E 83 F8 01 74 2C C7 42 30 10 00 00 C0 48  // .t>...t,.B0....H
    91E0: 89 5A 38 49 8B C8 33 D2 FF 15 64 40 00 00 B8 10  // .Z8I..3...d@....
    91F0: 00 00 C0 E9 D2 00 00 00 41 89 41 48 C7 01 03 00  // ........A.AH....
    9200: 00 00 EB A9 49 8B C9 E8 D2 1B 00 00 E9 B9 00 00  // ....I...........
    9210: 00 49 8B C9 E8 1D 0E 00 00 E9 AC 00 00 00 49 8B  // .I............I.
    9220: C9 E8 90 09 00 00 E9 9F 00 00 00 48 8B 92 B8 00  // ...........H....
    9230: 00 00 0F B6 0A 83 E9 0E 74 30 83 E9 01 49 8B D0  // ........t0...I..
    9240: 74 1E 83 E9 07 74 0F 83 F9 05 49 8B C9 75 45 E8  // t....t....I..uE.
    9250: CA FA FF FF EB 43 49 8B C9 E8 44 FE FF FF EB 39  // .....CI...D....9
    9260: 49 8B C9 E8 42 F6 FF FF EB 2F 81 7A 18 00 20 28  // I...B..../.z.. (
    9270: A0 75 1B 49 8B 40 18 33 D2 49 8B C8 C7 00 BB 55  // .u.I.@.3.I.....U
    9280: 00 00 41 89 58 30 FF 15 C6 3F 00 00 EB 0D 49 8B  // ..A.X0...?....I.
    9290: D0 49 8B C9 E8 59 F5 FF FF 8B D8 8B C3 EB 2B 89  // .I...Y........+.
    92A0: 5A 30 48 89 5A 38 49 8B C8 33 D2 FF 15 A1 3F 00  // Z0H.Z8I..3....?.
    92B0: 00 33 C0 EB 15 FE 42 43 48 83 82 B8 00 00 00 48  // .3....BCH......H
    92C0: 48 8B 49 08 FF 15 E0 3F 00 00 48 83 C4 20 5B C3  // H.I....?..H.. [.
    92D0: CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20  // ......H.\$.WH.. 
    92E0: 48 8B D9 33 FF 48 85 DB 74 36 48 8B 4B 08 48 85  // H..3.H..t6H.K.H.
    92F0: C9 74 2D 66 83 79 38 1E 72 1B 48 8B 49 40 48 8D  // .t-f.y8.r.H.I@H.
    9300: 15 7D 33 00 00 41 B8 0F 00 00 00 FF 15 D1 3E 00  // .}3..A........>.
    9310: 00 85 C0 74 18 48 8B 5B 18 FF C7 83 FF 03 7C C5  // ...t.H.[......|.
    9320: 32 C0 48 8B 5C 24 30 48 83 C4 20 5F C3 B0 01 EB  // 2.H.\$0H.. _....
    9330: F1 CC CC CC CC CC CC CC CC CC 48 89 5C 24 18 55  // ..........H.\$.U
    9340: 56 57 41 54 41 56 48 83 EC 70 48 8B 05 71 4F 00  // VWATAVH..pH..qO.
    9350: 00 48 33 C4 48 89 44 24 60 48 83 64 24 40 00 48  // .H3.H.D$`H.d$@.H
    9360: 8B F2 4C 8B E1 48 8B C2 48 85 D2 74 1A 48 8B 15  // ..L..H..H..t.H..
    9370: 8E 50 00 00 48 39 50 08 0F 84 A1 02 00 00 48 8B  // .P..H9P.......H.
    9380: 40 18 48 85 C0 75 ED 48 8B CE FF 15 DA 3E 00 00  // @.H..u.H.....>..
    9390: 48 89 44 24 40 48 8B C8 8B 78 48 FF 15 E9 3E 00  // H.D$@H...xH...>.
    93A0: 00 41 BE 08 00 00 00 83 FF 07 74 23 83 FF 02 74  // .A........t#...t
    93B0: 1E 83 FF 33 74 19 83 FF 2D 74 14 48 8B CE 40 B5  // ...3t...-t.H..@.
    93C0: FF E8 10 FF FF FF 84 C0 74 21 41 8A EE EB 1C 48  // ........t!A....H
    93D0: 8B CE E8 FF FE FF FF 84 C0 0F 84 40 02 00 00 BD  // ...........@....
    93E0: 11 00 00 00 83 FF 07 41 0F 44 EE BA 00 10 00 00  // .......A.D......
    93F0: 33 C9 41 B8 55 53 42 46 FF 15 C4 3D 00 00 48 8B  // 3.A.USBF...=..H.
    9400: D8 48 85 C0 0F 84 15 02 00 00 4D 85 E4 0F 84 AD  // .H........M.....
    9410: 00 00 00 40 80 FD FF 0F 85 A3 00 00 00 83 64 24  // ...@..........d$
    9420: 48 00 BA 0C 00 00 00 48 8D 44 24 48 44 8D 42 04  // H......H.D$HD.B.
    9430: 4C 8B CB 48 8B CE 48 89 44 24 20 FF 15 F9 3E 00  // L..H..H.D$ ...>.
    9440: 00 85 C0 78 7B 48 8B 13 B8 5D C8 00 00 48 8D 4C  // ...x{H...]...H.L
    9450: 24 50 66 89 44 24 54 B8 D1 11 00 00 C7 44 24 50  // $Pf.D$T......D$P
    9460: BC EB 7D 9D C6 44 24 58 9E C6 44 24 59 B4 C6 44  // ..}..D$X..D$Y..D
    9470: 24 5A 00 66 89 44 24 56 C6 44 24 5B 60 44 88 74  // $Z.f.D$V.D$[`D.t
    9480: 24 5C C6 44 24 5D C3 C6 44 24 5E A1 C6 44 24 5F  // $\.D$]..D$^..D$_
    9490: 9A 48 3B 11 75 0E 4A 8B 14 33 4A 3B 14 31 75 04  // .H;.u.J..3J;.1u.
    94A0: 33 C0 EB 05 1B C0 83 D8 FF 85 C0 74 13 BA 55 53  // 3..........t..US
    94B0: 42 46 48 8B CB FF 15 1F 3D 00 00 E9 5F 01 00 00  // BFH.....=..._...
    94C0: BA 55 53 42 46 48 8B CB FF 15 0C 3D 00 00 48 8B  // .USBFH.....=..H.
    94D0: 0D 2D 4F 00 00 48 8D 44 24 40 48 89 44 24 30 4D  // .-O..H.D$@H.D$0M
    94E0: 85 E4 41 BE 88 00 00 00 49 0F 45 CC 45 33 C0 44  // ..A.....I.E.E3.D
    94F0: 8B CF 41 8B D6 C6 44 24 28 00 C7 44 24 20 00 01  // ..A...D$(..D$ ..
    9500: 00 00 FF 15 92 3D 00 00 85 C0 0F 88 11 01 00 00  // .....=..........
    9510: 48 8B 44 24 40 4D 8B C6 33 D2 48 8B 58 40 48 8B  // H.D$@M..3.H.X@H.
    9520: CB E8 0C 2F 00 00 83 FF 07 75 08 C7 03 03 00 00  // .../.....u......
    9530: 00 EB 18 83 FF 02 74 0D 83 FF 33 74 08 C7 03 02  // ......t...3t....
    9540: 00 00 00 EB 06 C7 03 04 00 00 00 4D 85 E4 75 06  // ...........M..u.
    9550: C7 03 02 00 00 00 40 88 6B 5F C6 43 5C 00 48 8B  // ......@.k_.C\.H.
    9560: 4C 24 40 48 8B D6 FF 15 06 3D 00 00 48 89 43 08  // L$@H.....=..H.C.
    9570: 48 85 C0 75 15 48 8B 4C 24 40 FF 15 72 3C 00 00  // H..u.H.L$@..r<..
    9580: B8 0E 00 00 C0 E9 97 00 00 00 48 89 73 10 8B 40  // ..........H.s..@
    9590: 30 48 8B 4C 24 40 25 14 20 00 00 45 33 C9 45 33  // 0H.L$@%. ..E3.E3
    95A0: C0 09 41 30 48 8B 43 08 BA 55 53 42 46 8B 48 48  // ..A0H.C..USBF.HH
    95B0: 48 8B 44 24 40 C7 44 24 20 20 00 00 00 89 48 48  // H.D$@.D$  ....HH
    95C0: 48 8B 43 08 8B 48 34 48 8B 44 24 40 89 48 34 48  // H.C..H4H.D$@.H4H
    95D0: 8D 4B 18 FF 15 B9 3C 00 00 48 8D 4B 38 41 B0 01  // .K....<..H.K8A..
    95E0: 33 D2 FF 15 2A 3C 00 00 4C 8B 5C 24 40 41 0F BA  // 3...*<..L.\$@A..
    95F0: 73 30 07 40 80 FD FF 75 26 48 8B 4C 24 40 FF 15  // s0.@...u&H.L$@..
    9600: 36 3C 00 00 48 85 C0 74 16 48 8D 15 E6 F6 FF FF  // 6<..H..t.H......
    9610: 4C 8B C8 45 33 C0 48 8B C8 FF 15 83 3C 00 00 33  // L..E3.H.....<..3
    9620: C0 48 8B 4C 24 60 48 33 CC E8 B4 29 00 00 48 8B  // .H.L$`H3...)..H.
    9630: 9C 24 B0 00 00 00 48 83 C4 70 41 5E 41 5C 5F 5E  // .$....H..pA^A\_^
    9640: 5D C3 CC CC CC CC CC CC CC CC C2 00 00 CC CC CC  // ]...............
    9650: CC CC CC CC CC CC 40 53 56 57 48 83 EC 70 48 8B  // ......@SVWH..pH.
    9660: D9 48 89 0D 9A 4D 00 00 48 8B CA E8 DA EC FF FF  // .H...M..H.......
    9670: 48 8D 15 2B 30 00 00 48 8D 4C 24 40 FF 15 68 3B  // H..+0..H.L$@..h;
    9680: 00 00 48 8D 94 24 90 00 00 00 BE 88 00 00 00 48  // ..H..$.........H
    9690: 89 54 24 30 4C 8D 44 24 40 41 B9 08 96 00 00 8B  // .T$0L.D$@A......
    96A0: D6 48 8B CB C6 44 24 28 00 83 64 24 20 00 FF 15  // .H...D$(..d$ ...
    96B0: E6 3B 00 00 85 C0 0F 88 39 01 00 00 48 8B 84 24  // .;......9...H..$
    96C0: 90 00 00 00 4C 8B C6 33 D2 48 8B 78 40 48 8B CF  // ....L..3.H.x@H..
    96D0: E8 5D 2D 00 00 C7 07 01 00 00 00 48 8B 84 24 90  // .]-........H..$.
    96E0: 00 00 00 0F BA 70 30 07 48 8D 15 D3 2F 00 00 48  // .....p0.H.../..H
    96F0: 8D 4C 24 50 FF 15 F0 3A 00 00 48 8D 54 24 40 48  // .L$P...:..H.T$@H
    9700: 8D 4C 24 50 FF 15 78 3B 00 00 8B F0 85 C0 79 13  // .L$P..x;......y.
    9710: 48 8B 8C 24 90 00 00 00 FF 15 D4 3A 00 00 E9 D0  // H..$.......:....
    9720: 00 00 00 48 8D 05 4C FA FF FF 48 8D 7B 70 B9 1C  // ...H..L...H.{p..
    9730: 00 00 00 F3 48 AB 48 8B 43 30 48 8D 0D F9 FB FF  // ....H.H.C0H.....
    9740: FF 48 89 48 08 48 8D 05 FE FE FF FF 48 8D 0D CF  // .H.H.H......H...
    9750: 4C 00 00 48 89 43 68 FF 15 8D 3B 00 00 48 83 25  // L..H.Ch...;..H.%
    9760: 25 4D 00 00 00 F6 05 70 4C 00 00 04 74 72 48 8D  // %M.....pL...trH.
    9770: 05 5D 4B 00 00 48 8D 15 EA 15 00 00 48 8B CB 48  // .]K..H......H..H
    9780: 89 43 50 FF 15 69 3B 00 00 85 C0 78 53 48 8D 15  // .CP..i;....xSH..
    9790: 4E 33 00 00 48 8D 4C 24 60 FF 15 4B 3A 00 00 4C  // N3..H.L$`..K:..L
    97A0: 8D 8C 24 A0 00 00 00 4C 8D 84 24 A8 00 00 00 48  // ..$....L..$....H
    97B0: 8D 4C 24 60 BA 80 00 00 00 FF 15 0B 3B 00 00 85  // .L$`........;...
    97C0: C0 78 1D 48 8B 8C 24 A0 00 00 00 B2 01 E8 94 15  // .x.H..$.........
    97D0: 00 00 48 8B 8C 24 A8 00 00 00 FF 15 AA 3A 00 00  // ..H..$.......:..
    97E0: 48 8D 15 63 FE FF FF 45 33 C0 48 8B CB FF 15 3F  // H..c...E3.H....?
    97F0: 3A 00 00 8B C6 48 83 C4 70 5F 5E 5B C3 CC CC CC  // :....H..p_^[....
    9800: CC CC CC CC CC CC 83 7A 30 00 7C 12 48 8B 41 40  // .......z0.|.H.A@
    9810: 4C 8B 40 08 41 8B 40 34 83 E0 07 09 41 34 80 7A  // L.@.A.@4....A4.z
    9820: 41 00 74 0B 48 8B 82 B8 00 00 00 80 48 03 01 8B  // A.t.H.......H...
    9830: 42 30 C3 CC CC CC CC CC CC CC 48 8B C4 48 89 58  // B0........H..H.X
    9840: 08 48 89 68 10 48 89 70 18 48 89 78 20 41 54 41  // .H.h.H.p.H.x ATA
    9850: 55 41 56 48 83 EC 30 4C 8B A2 B8 00 00 00 48 8B  // UAVH..0L......H.
    9860: 71 40 33 DB 41 8A 44 24 01 48 8B EA 48 8B F9 84  // q@3.A.D$.H..H...
    9870: C0 0F 84 05 01 00 00 3C 02 0F 84 D1 00 00 00 3C  // .......<.......<
    9880: 16 0F 85 B5 00 00 00 41 83 7C 24 10 01 0F 85 A9  // .......A.|$.....
    9890: 00 00 00 E8 D2 0A 00 00 85 C0 74 17 38 1D 38 4B  // ..........t.8.8K
    98A0: 00 00 74 0F 38 5E 5C 75 0A 0F BA 77 30 0D E9 B7  // ..t.8^\u...w0...
    98B0: 00 00 00 48 21 5C 24 20 48 8D 4E 38 45 33 C9 45  // ...H!\$ H.N8E3.E
    98C0: 33 C0 33 D2 FF 15 98 39 00 00 45 32 ED 41 38 5C  // 3.3....9..E2.A8\
    98D0: 24 08 75 19 83 7E 50 01 75 13 8B 47 30 0F BA E0  // $.u..~P.u..G0...
    98E0: 0E 72 0A 0F BA E8 0D 41 B5 01 89 47 30 48 8B D5  // .r.....A...G0H..
    98F0: 48 8B CF E8 4E EE FF FF 8B D8 85 C0 78 22 41 80  // H...N.......x"A.
    9900: 7C 24 08 00 74 07 F0 83 46 50 01 EB 05 F0 83 46  // |$..t...FP.....F
    9910: 50 FF 41 80 7C 24 08 00 74 11 83 7E 50 01 EB 04  // P.A.|$..t..~P...
    9920: 41 80 FD 01 75 05 0F BA 77 30 0D 48 8D 4E 38 45  // A...u...w0.H.N8E
    9930: 33 C0 33 D2 FF 15 C0 38 00 00 EB 2E FE 42 43 49  // 3.3....8.....BCI
    9940: 8D 44 24 48 48 89 82 B8 00 00 00 E9 98 00 00 00  // .D$HH...........
    9950: E8 F1 ED FF FF 48 8B 4E 08 8B D8 FF 15 C9 38 00  // .....H.N......8.
    9960: 00 48 8B CF FF 15 88 38 00 00 33 D2 48 8B CD 89  // .H.....8..3.H...
    9970: 5D 30 FF 15 DA 38 00 00 8B C3 EB 76 F6 05 57 4A  // ]0...8.....v..WJ
    9980: 00 00 02 74 2E 38 5E 5C 75 29 48 8B 41 08 48 8B  // ...t.8^\u)H.A.H.
    9990: 48 08 48 85 C9 74 1C 48 3B CF 74 0A 48 8B 41 40  // H.H..t.H;.t.H.A@
    99A0: 80 78 5F 08 74 06 48 8B 49 10 EB E6 BB 22 00 00  // .x_.t.H.I...."..
    99B0: C0 EB B7 49 8D 4C 24 B8 49 8B D4 41 B8 38 00 00  // ...I.L$.I..A.8..
    99C0: 00 E8 1C 27 00 00 41 88 5C 24 BB 48 8B 85 B8 00  // ...'..A.\$.H....
    99D0: 00 00 48 21 58 F8 48 8D 0D 29 FE FF FF 48 8B D5  // ..H!X.H..)...H..
    99E0: 48 89 48 F0 C6 40 BB E0 48 8B 4E 08 FF 15 B8 38  // H.H..@..H.N....8
    99F0: 00 00 48 8B 5C 24 50 48 8B 6C 24 58 48 8B 74 24  // ..H.\$PH.l$XH.t$
    9A00: 60 48 8B 7C 24 68 48 83 C4 30 41 5E 41 5D 41 5C  // `H.|$hH..0A^A]A\
    9A10: C3 CC CC CC CC CC CC CC CC CC 83 7A 30 00 7C 08  // ...........z0.|.
    9A20: 48 8B 42 18 C6 40 06 01 80 7A 41 00 74 0B 48 8B  // H.B..@...zA.t.H.
    9A30: 82 B8 00 00 00 80 48 03 01 8B 42 30 C3 CC CC CC  // ......H...B0....
    9A40: CC CC CC CC CC CC 48 8B C4 48 89 58 08 48 89 68  // ......H..H.X.H.h
    9A50: 10 48 89 70 18 48 89 78 20 41 54 48 83 EC 20 48  // .H.p.H.x ATH.. H
    9A60: 8B 9A B8 00 00 00 48 8B 69 40 33 F6 81 7B 18 00  // ......H.i@3..{..
    9A70: 20 28 A0 48 8B FA 4C 8B E1 75 1F 48 8B 4A 18 48  //  (.H..L..u.H.J.H
    9A80: 3B CE 74 0E 81 39 AA 55 00 00 75 06 0F B6 45 5C  // ;.t..9.U..u...E\
    9A90: 89 01 89 72 30 E9 CF 00 00 00 40 38 35 39 49 00  // ...r0.....@859I.
    9AA0: 00 0F 84 D1 00 00 00 40 38 75 5C 0F 85 C7 00 00  // .......@8u\.....
    9AB0: 00 E8 B4 08 00 00 3B C6 0F 84 BA 00 00 00 8B 43  // ......;........C
    9AC0: 18 2D 04 D0 04 00 74 65 83 E8 04 74 60 83 E8 0C  // .-....te...t`...
    9AD0: 74 5B 83 E8 14 74 56 2D FC 2F 02 00 74 48 3D F0  // t[...tV-./..tH=.
    9AE0: 0B 26 00 0F 85 8F 00 00 00 48 8B 97 B8 00 00 00  // .&.......H......
    9AF0: 41 B8 38 00 00 00 48 8D 5A B8 48 8B CB E8 E0 25  // A.8...H.Z.H....%
    9B00: 00 00 40 88 73 03 48 8B 87 B8 00 00 00 48 8D 0D  // ..@.s.H......H..
    9B10: 06 FF FF FF 48 89 70 F8 C6 40 BB E0 48 89 48 F0  // ....H.p..@..H.H.
    9B20: 48 8B 4D 08 EB 66 B8 A2 00 00 C0 EB 33 48 8B 47  // H.M..f......3H.G
    9B30: 18 80 78 24 0A 74 24 80 78 24 2A 74 1E 80 78 24  // ..x$.t$.x$*t..x$
    9B40: AA 74 18 80 78 24 8A 74 12 80 78 24 10 74 0C 80  // .t..x$.t..x$.t..
    9B50: 78 24 2E 74 06 80 78 24 04 75 1D B8 22 00 00 C0  // x$.t..x$.u.."...
    9B60: 48 89 77 38 89 47 30 8B F0 33 D2 48 8B CF FF 15  // H.w8.G0..3.H....
    9B70: DE 36 00 00 8B C6 EB 1D 49 8B 4C 24 40 FE 47 43  // .6......I.L$@.GC
    9B80: 48 83 87 B8 00 00 00 48 48 8B 49 08 48 8B D7 FF  // H......HH.I.H...
    9B90: 15 15 37 00 00 48 8B 5C 24 30 48 8B 6C 24 38 48  // ..7..H.\$0H.l$8H
    9BA0: 8B 74 24 40 48 8B 7C 24 48 48 83 C4 20 41 5C C3  // .t$@H.|$HH.. A\.
    9BB0: CC CC CC CC CC CC 48 89 5C 24 08 48 89 74 24 10  // ......H.\$.H.t$.
    9BC0: 57 48 83 EC 20 48 8B DA 48 8B 92 B8 00 00 00 33  // WH.. H..H......3
    9BD0: F6 48 8B F9 40 38 32 0F 84 39 01 00 00 B1 02 38  // .H..@82..9.....8
    9BE0: 0A 0F 86 0E 01 00 00 80 3A 04 0F 86 A4 00 00 00  // ........:.......
    9BF0: 80 3A 0E 0F 84 8B 00 00 00 80 3A 16 74 19 80 3A  // .:........:.t..:
    9C00: 1B 0F 85 EE 00 00 00 48 8B D3 48 8B CF E8 28 FC  // .......H..H...(.
    9C10: FF FF E9 13 01 00 00 38 4A 01 75 21 83 7A 18 05  // .......8J.u!.z..
    9C20: 75 07 E8 23 E6 FF FF EB 14 0F B6 05 AE 47 00 00  // u..#.........G..
    9C30: 83 7A 18 01 0F 44 C6 88 05 A1 47 00 00 83 3D 8E  // .z...D....G...=.
    9C40: 47 00 00 06 72 14 FE 43 43 48 83 83 B8 00 00 00  // G...r..CCH......
    9C50: 48 48 8B 4F 40 E9 AD 00 00 00 48 8B CB FF 15 DF  // HH.O@.....H.....
    9C60: 35 00 00 FE 43 43 48 83 83 B8 00 00 00 48 48 8B  // 5...CCH......HH.
    9C70: 4F 40 48 8B D3 48 8B 49 08 FF 15 FB 35 00 00 E9  // O@H..H.I....5...
    9C80: A6 00 00 00 48 8B D3 48 8B CF E8 B7 FD FF FF E9  // ....H..H........
    9C90: 96 00 00 00 75 3D 48 8B 47 40 40 38 70 5C 75 33  // ....u=H.G@@8p\u3
    9CA0: 8A 05 34 47 00 00 84 C1 75 04 A8 01 74 25 48 8B  // ..4G....u...t%H.
    9CB0: CF E8 B4 06 00 00 3B C6 74 19 BF 22 00 00 C0 33  // ......;.t.."...3
    9CC0: D2 48 8B CB 89 7B 30 48 89 73 38 FF 15 81 35 00  // .H...{0H.s8...5.
    9CD0: 00 EB 1E 48 8B 4F 40 FE 43 43 48 83 83 B8 00 00  // ...H.O@.CCH.....
    9CE0: 00 48 48 8B 49 08 48 8B D3 FF 15 BB 35 00 00 8B  // .HH.I.H.....5...
    9CF0: F8 8B C7 EB 35 48 8B 4F 40 FE 43 43 48 8D 42 48  // ....5H.O@.CCH.BH
    9D00: 48 89 83 B8 00 00 00 48 8B 49 08 48 8B D3 FF 15  // H......H.I.H....
    9D10: 96 35 00 00 EB 14 33 D2 48 8B CB 89 73 30 48 89  // .5....3.H...s0H.
    9D20: 73 38 FF 15 2A 35 00 00 33 C0 48 8B 5C 24 30 48  // s8..*5..3.H.\$0H
    9D30: 8B 74 24 38 48 83 C4 20 5F C3 CC CC CC CC CC CC  // .t$8H.. _.......
    9D40: CC CC 8B 4A 30 48 8B 82 B8 00 00 00 85 C9 79 10  // ...J0H........y.
    9D50: 81 F9 3C 00 00 C0 74 08 81 F9 05 00 00 80 75 76  // ..<...t.......uv
    9D60: 80 38 0F 75 0E 48 8B 40 08 44 8B 50 10 4C 8D 48  // .8.u.H.@.D.P.L.H
    9D70: 48 EB 2B 81 78 18 04 D0 04 00 75 16 48 8B 4A 18  // H.+.x.....u.H.J.
    9D80: 48 8B 41 18 44 8B 51 0C 4C 8D 49 24 4C 8D 04 01  // H.A.D.Q.L.I$L...
    9D90: EB 10 48 8B 42 18 44 8B 50 0C 4C 8D 48 24 4C 8B  // ..H.B.D.P.L.H$L.
    9DA0: 40 18 41 80 39 1A B8 08 00 00 00 8D 48 FC 0F 44  // @.A.9.......H..D
    9DB0: C1 44 8B C8 48 8D 48 18 41 8B C2 48 3B C1 72 16  // .D..H.H.A..H;.r.
    9DC0: 43 8A 04 01 24 3F 3C 2A 75 0C 43 80 64 01 03 C8  // C...$?<*u.C.d...
    9DD0: 43 80 64 01 05 F3 80 7A 41 00 74 0B 48 8B 82 B8  // C.d....zA.t.H...
    9DE0: 00 00 00 80 48 03 01 8B 42 30 C3 CC CC CC CC CC  // ....H...B0......
    9DF0: CC CC 45 33 C9 44 39 4A 30 7C 23 4C 8B 42 18 41  // ..E3.D9J0|#L.B.A
    9E00: 8B C9 45 39 48 04 76 16 49 8D 40 24 C7 00 04 00  // ..E9H.v.I.@$....
    9E10: 00 00 FF C1 48 83 C0 20 41 3B 48 04 72 EE 44 38  // ....H.. A;H.r.D8
    9E20: 4A 41 74 0B 48 8B 82 B8 00 00 00 80 48 03 01 8B  // JAt.H.......H...
    9E30: 42 30 C3 CC CC CC CC CC CC CC 48 89 5C 24 08 48  // B0........H.\$.H
    9E40: 89 74 24 10 57 48 83 EC 20 80 3D 8A 45 00 00 00  // .t$.WH.. .=.E...
    9E50: 48 8B 71 40 48 8B FA 0F 84 CB 00 00 00 80 7E 5C  // H.q@H.........~\
    9E60: 00 0F 85 C1 00 00 00 48 8B 92 B8 00 00 00 8B 42  // .......H.......B
    9E70: 18 2D 28 40 02 00 0F 84 90 00 00 00 2D DC 8F 02  // .-(@........-...
    9E80: 00 74 43 83 E8 10 74 3E 3D F0 3B 28 00 0F 85 95  // .tC...t>=.;(....
    9E90: 00 00 00 48 8D 5A B8 41 B8 38 00 00 00 48 8B CB  // ...H.Z.A.8...H..
    9EA0: E8 3D 22 00 00 48 8D 0D 46 FF FF FF C6 43 03 00  // .="..H..F....C..
    9EB0: 48 8B 87 B8 00 00 00 48 89 48 F0 48 83 60 F8 00  // H......H.H.H.`..
    9EC0: C6 40 BB E0 EB 6D 48 8B 4F 18 8A 41 24 3C 0A 74  // .@...mH.O..A$<.t
    9ED0: 3B 3C 2A 74 37 3C AA 74 33 3C 8A 74 2F 3C 5A 75  // ;<*t7<.t3<.t/<Zu
    9EE0: 47 8A 41 26 24 3F 3C 05 75 07 BB 10 00 00 C0 EB  // G.A&$?<.u.......
    9EF0: 20 48 8D 5A B8 41 B8 38 00 00 00 48 8B CB E8 DF  //  H.Z.A.8...H....
    9F00: 21 00 00 48 8D 0D 38 FE FF FF EB A0 BB 22 00 00  // !..H..8......"..
    9F10: C0 48 83 67 38 00 33 D2 48 8B CF 89 5F 30 FF 15  // .H.g8.3.H..._0..
    9F20: 2E 33 00 00 8B C3 EB 18 FE 47 43 48 83 87 B8 00  // .3.......GCH....
    9F30: 00 00 48 48 8B 4E 08 48 8B D7 FF 15 6A 33 00 00  // ..HH.N.H....j3..
    9F40: 48 8B 5C 24 30 48 8B 74 24 38 48 83 C4 20 5F C3  // H.\$0H.t$8H.. _.
    9F50: CC CC CC CC CC CC 48 89 5C 24 08 48 89 74 24 10  // ......H.\$.H.t$.
    9F60: 57 48 83 EC 20 80 3D 6E 44 00 00 00 48 8B 71 40  // WH.. .=nD...H.q@
    9F70: 48 8B FA 48 8B 92 B8 00 00 00 0F 84 84 00 00 00  // H..H............
    9F80: 80 7E 5C 00 75 7E 48 8B 42 08 48 3D FF FF FF 7F  // .~\.u~H.B.H=....
    9F90: 72 72 80 78 02 00 75 6C 8A 40 48 3C 0A 74 49 3C  // rr.x..ul.@H<.tI<
    9FA0: 2A 74 45 3C AA 74 41 3C 8A 74 3D 8A C8 3C 1A 74  // *tE<.tA<.t=..<.t
    9FB0: 04 3C 5A 75 4F 48 8D 5A B8 41 B8 38 00 00 00 48  // .<ZuOH.Z.A.8...H
    9FC0: 8B CB E8 1B 21 00 00 C6 43 03 00 48 8B 87 B8 00  // ....!...C..H....
    9FD0: 00 00 48 83 60 F8 00 48 8D 0D 64 FD FF FF C6 40  // ..H.`..H..d....@
    9FE0: BB E0 48 89 48 F0 EB 2A 48 83 67 38 00 BB 22 00  // ..H.H..*H.g8..".
    9FF0: 00 C0 33 D2 48 8B CF 89 5F 30 FF 15 52 32 00 00  // ..3.H..._0..R2..
    A000: 8B C3 EB 1B FE 47 43 48 8D 42 48 48 89 87 B8 00  // .....GCH.BHH....
    A010: 00 00 48 8B 4E 08 48 8B D7 FF 15 8B 32 00 00 48  // ..H.N.H.....2..H
    A020: 8B 5C 24 30 48 8B 74 24 38 48 83 C4 20 5F C3 CC  // .\$0H.t$8H.. _..
    A030: CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20  // ......H.\$.WH.. 
    A040: 4C 8B 82 B8 00 00 00 48 8B DA 48 8B F9 41 0F B6  // L......H..H..A..
    A050: 10 48 8B 49 40 83 EA 04 74 71 83 EA 0A 74 5F 83  // .H.I@...tq...t_.
    A060: EA 01 74 4D 83 FA 07 0F 85 88 00 00 00 83 3D 5E  // ..tM..........=^
    A070: 43 00 00 06 72 14 FE 43 43 49 8D 40 48 48 89 83  // C...r..CCI.@HH..
    A080: B8 00 00 00 48 8B 4F 40 EB 79 48 8B CB FF 15 AF  // ....H.O@.yH.....
    A090: 31 00 00 FE 43 43 48 83 83 B8 00 00 00 48 48 8B  // 1...CCH......HH.
    A0A0: 4F 40 48 8B D3 48 8B 49 08 FF 15 CB 31 00 00 EB  // O@H..H.I....1...
    A0B0: 5F 48 8B D3 48 8B CF E8 9A FE FF FF EB 52 48 8B  // _H..H........RH.
    A0C0: D3 48 8B CF E8 71 FD FF FF EB 45 33 C0 38 05 07  // .H...q....E3.8..
    A0D0: 43 00 00 74 20 38 41 5C 75 1B BF 22 00 00 C0 33  // C..t 8A\u.."...3
    A0E0: D2 48 8B CB 89 7B 30 48 89 43 38 FF 15 61 31 00  // .H...{0H.C8..a1.
    A0F0: 00 8B C7 EB 1B FE 43 43 49 8D 40 48 48 89 83 B8  // ......CCI.@HH...
    A100: 00 00 00 48 8B 49 08 48 8B D3 FF 15 9A 31 00 00  // ...H.I.H.....1..
    A110: 48 8B 5C 24 30 48 83 C4 20 5F C3 CC CC CC CC CC  // H.\$0H.. _......
    A120: CC CC 48 89 5C 24 08 48 89 74 24 10 57 48 83 EC  // ..H.\$.H.t$.WH..
    A130: 50 48 8B F9 49 8B D8 48 8D 4C 24 30 45 33 C0 33  // PH..I..H.L$0E3.3
    A140: D2 FF 15 CB 30 00 00 8A 4F 4C 33 D2 FF 15 90 31  // ....0...OL3....1
    A150: 00 00 48 8D 0D C1 E5 FF FF 48 8B 90 B8 00 00 00  // ..H......H......
    A160: 48 8B F0 B8 04 00 00 00 89 42 C8 89 42 C0 C7 42  // H........B..B..B
    A170: D0 00 20 28 A0 C6 42 B8 0E 48 83 66 08 00 48 89  // .. (..B..H.f..H.
    A180: 46 38 48 8B 86 B8 00 00 00 48 89 5E 18 48 89 5E  // F8H......H.^.H.^
    A190: 70 48 89 48 F0 48 8D 4C 24 30 48 8B D6 48 89 48  // pH.H.H.L$0H..H.H
    A1A0: F8 48 8B CF C6 40 BB E0 FF 15 FC 30 00 00 8B D8  // .H...@.....0....
    A1B0: 3D 03 01 00 00 75 1C 48 83 64 24 20 00 48 8D 4C  // =....u.H.d$ .H.L
    A1C0: 24 30 45 33 C9 45 33 C0 33 D2 FF 15 92 30 00 00  // $0E3.E3.3....0..
    A1D0: 8B 5E 30 48 8B CE FF 15 F6 30 00 00 48 8B 74 24  // .^0H.....0..H.t$
    A1E0: 68 8B C3 48 8B 5C 24 60 48 83 C4 50 5F C3 CC CC  // h..H.\$`H..P_...
    A1F0: CC CC CC CC CC CC 48 89 5C 24 08 57 48 81 EC 80  // ......H.\$.WH...
    A200: 00 00 00 48 8B D9 48 85 C9 75 0A B8 0D 00 00 C0  // ...H..H..u......
    A210: E9 8B 00 00 00 48 8D 44 24 50 45 33 C9 45 33 C0  // .....H.D$PE3.E3.
    A220: 48 89 44 24 40 48 8D 44 24 60 48 89 44 24 38 C6  // H.D$@H.D$`H.D$8.
    A230: 44 24 30 00 C7 44 24 28 08 00 00 00 48 89 54 24  // D$0..D$(....H.T$
    A240: 20 48 8B D1 B9 14 0C 2D 00 FF 15 6B 30 00 00 48  //  H.....-...k0..H
    A250: 8B F8 48 85 C0 75 07 B8 9A 00 00 C0 EB 42 48 8D  // ..H..u.......BH.
    A260: 4C 24 60 45 33 C0 33 D2 FF 15 A4 2F 00 00 48 8B  // L$`E3.3..../..H.
    A270: D7 48 8B CB FF 15 30 30 00 00 3D 03 01 00 00 75  // .H....00..=....u
    A280: 1F 48 83 64 24 20 00 45 33 C9 48 8D 4C 24 60 41  // .H.d$ .E3.H.L$`A
    A290: 8D 51 05 45 33 C0 FF 15 C6 2F 00 00 8B 44 24 50  // .Q.E3..../...D$P
    A2A0: 48 8B 9C 24 90 00 00 00 48 81 C4 80 00 00 00 5F  // H..$....H......_
    A2B0: C3 CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57  // ..........H.\$.W
    A2C0: 48 83 EC 20 48 8B D9 44 0F 20 C0 84 C0 74 07 33  // H.. H..D. ...t.3
    A2D0: C0 E9 81 00 00 00 48 85 C9 74 F4 BA 00 10 00 00  // ......H..t......
    A2E0: 33 C9 41 B8 55 53 42 46 FF 15 D4 2E 00 00 48 8B  // 3.A.USBF......H.
    A2F0: CB 48 8B D0 48 8B F8 E8 FA FE FF FF 85 C0 78 3A  // .H..H.........x:
    A300: 80 7F 05 00 75 06 80 7F 06 00 74 2E BA 55 53 42  // ....u.....t..USB
    A310: 46 48 8B CF FF 15 C0 2E 00 00 83 7B 48 03 74 13  // FH.........{H.t.
    A320: 83 7B 48 02 74 0D 83 7B 48 33 74 07 B8 08 00 00  // .{H.t..{H3t.....
    A330: 00 EB 24 B8 11 00 00 00 EB 1D BA 55 53 42 46 48  // ..$........USBFH
    A340: 8B CF FF 15 92 2E 00 00 48 8B CB E8 86 EF FF FF  // ........H.......
    A350: F6 D8 1B C0 83 E0 08 48 8B 5C 24 30 48 83 C4 20  // .......H.\$0H.. 
    A360: 5F C3 CC CC CC CC CC CC CC CC 40 53 48 83 EC 20  // _.........@SH.. 
    A370: 48 8B 59 40 48 85 DB 75 04 33 C0 EB 36 80 7B 5F  // H.Y@H..u.3..6.{_
    A380: FF 75 11 48 8B 4B 10 48 85 C9 74 ED E8 29 FF FF  // .u.H.K.H..t..)..
    A390: FF 88 43 5F 8A 43 5F 3C 01 75 05 83 3B 05 74 10  // ..C_.C_<.u..;.t.
    A3A0: 3C 11 74 0C 3C 12 74 08 3C 07 74 04 3C 08 75 C9  // <.t.<.t.<.t.<.u.
    A3B0: 0F B6 C0 48 83 C4 20 5B C3 CC CC CC CC CC CC CC  // ...H.. [........
    A3C0: CC CC 48 89 5C 24 08 48 89 74 24 10 57 48 83 EC  // ..H.\$.H.t$.WH..
    A3D0: 20 48 8B 71 40 48 8B FA 48 8B 92 B8 00 00 00 48  //  H.q@H..H......H
    A3E0: 8B 4A 08 8B 41 10 0F BA E0 1E 72 71 A8 02 75 6D  // .J..A.....rq..um
    A3F0: 0F BA E0 08 72 67 0F BA E0 10 72 61 0F B6 42 13  // ....rg....ra..B.
    A400: 83 F8 03 74 1E 85 C0 74 1A 83 F8 05 74 15 83 F8  // ...t...t....t...
    A410: 02 74 10 FE 47 43 48 8D 42 48 48 89 87 B8 00 00  // .t..GCH.BHH.....
    A420: 00 EB 2B 0F BA 71 10 10 0F BA 72 10 0C C6 42 13  // ..+..q....r...B.
    A430: 01 48 8B 97 B8 00 00 00 41 B8 38 00 00 00 48 8D  // .H......A.8...H.
    A440: 5A B8 48 8B CB E8 98 1C 00 00 C6 43 03 00 48 8B  // Z.H........C..H.
    A450: 4E 08 48 8B D7 FF 15 4F 2E 00 00 EB 1A 48 83 67  // N.H....O.....H.g
    A460: 38 00 BB 22 00 00 C0 33 D2 48 8B CF 89 5F 30 FF  // 8.."...3.H..._0.
    A470: 15 DD 2D 00 00 8B C3 48 8B 5C 24 30 48 8B 74 24  // ..-....H.\$0H.t$
    A480: 38 48 83 C4 20 5F C3 CC CC CC CC CC CC CC 4C 8B  // 8H.. _........L.
    A490: DC 49 89 5B 08 49 89 6B 10 49 89 73 18 57 41 54  // .I.[.I.k.I.s.WAT
    A4A0: 41 55 48 81 EC A0 03 00 00 48 8B 05 12 3E 00 00  // AUH......H...>..
    A4B0: 48 33 C4 48 89 84 24 90 03 00 00 BF C0 00 00 00  // H3.H..$.........
    A4C0: 49 8D 8B 98 FD FF FF 48 8D 15 24 22 00 00 4C 8B  // I......H..$"..L.
    A4D0: C7 E8 0C 1C 00 00 48 8D 8C 24 10 02 00 00 48 8D  // ......H..$....H.
    A4E0: 15 CD 22 00 00 4C 8B C7 E8 F5 1B 00 00 48 8D 8C  // .."..L.......H..
    A4F0: 24 D0 02 00 00 48 8D 15 76 23 00 00 4C 8B C7 E8  // $....H..v#..L...
    A500: DE 1B 00 00 48 8D 3D B7 CC FF FF 48 8D 94 24 B0  // ....H.=....H..$.
    A510: 00 00 00 48 8B 87 70 57 00 00 48 8D 8C 24 90 00  // ...H..pW..H..$..
    A520: 00 00 41 B8 72 00 00 00 48 89 02 48 8B 87 78 57  // ..A.r...H..H..xW
    A530: 00 00 48 89 42 08 48 8B 87 80 57 00 00 48 89 42  // ..H.B.H...W..H.B
    A540: 10 0F B7 87 88 57 00 00 66 89 42 18 48 8B 87 90  // .....W..f.B.H...
    A550: 57 00 00 48 8D 15 18 24 00 00 48 89 01 48 8B 87  // W..H...$..H..H..
    A560: 98 57 00 00 48 89 41 08 48 8B 87 A0 57 00 00 48  // .W..H.A.H...W..H
    A570: 89 41 10 0F B7 87 A8 57 00 00 66 89 41 18 48 8D  // .A.....W..f.A.H.
    A580: 8C 24 D0 00 00 00 E8 57 1B 00 00 F6 05 48 3E 00  // .$.....W.....H>.
    A590: 00 03 41 B4 01 75 07 32 C0 E9 10 03 00 00 BA 00  // ..A..u.2........
    A5A0: 10 00 00 33 C9 41 B8 55 53 42 46 FF 15 11 2C 00  // ...3.A.USBF...,.
    A5B0: 00 45 33 ED 48 8B F0 49 3B C5 75 07 B0 01 E9 EB  // .E3.H..I;.u.....
    A5C0: 02 00 00 8A 05 13 3E 00 00 41 8B DD 41 3B DD 75  // ......>..A..A;.u
    A5D0: 12 A8 01 0F 84 0F 01 00 00 48 8D 8C 24 50 01 00  // .........H..$P..
    A5E0: 00 EB 2F 83 FB 01 75 1A A8 02 0F 84 F8 00 00 00  // ../...u.........
    A5F0: 48 8D 8C 24 10 02 00 00 48 8D AC 24 B0 00 00 00  // H..$....H..$....
    A600: EB 18 A8 08 0F 84 DE 00 00 00 48 8D 8C 24 D0 02  // ..........H..$..
    A610: 00 00 48 8D AC 24 90 00 00 00 4C 8D 44 24 48 BA  // ..H..$....L.D$H.
    A620: 1F 00 02 00 E8 2D 15 00 00 41 3B C5 0F 8C B0 00  // .....-...A;.....
    A630: 00 00 48 8B 4C 24 48 4C 8D 4C 24 40 4C 8B C6 48  // ..H.L$HL.L$@L..H
    A640: 8B D5 C7 44 24 40 00 08 00 00 E8 33 16 00 00 41  // ...D$@.....3...A
    A650: 3B C5 8B F8 7C 18 8B 54 24 40 4C 8D 05 91 23 00  // ;...|..T$@L...#.
    A660: 00 48 8B CE E8 69 18 00 00 49 3B C5 75 69 41 3B  // .H...i...I;.uiA;
    A670: FD 48 8B D6 7C 1F 66 44 39 2E 74 19 48 83 C9 FF  // .H..|.fD9.t.H...
    A680: 33 C0 48 8B FA 66 F2 AF 48 F7 D1 48 8D 14 4A 66  // 3.H..f..H..H..Jf
    A690: 44 39 2A 75 E7 48 8B 05 56 23 00 00 48 83 C9 FF  // D9*u.H..V#..H...
    A6A0: 48 8B FA 48 89 02 0F B7 05 4D 23 00 00 4C 8B C6  // H..H.....M#..L..
    A6B0: 66 89 42 08 33 C0 66 F2 AF 48 F7 D1 66 44 89 2C  // f.B.3.f..H..fD.,
    A6C0: 4A 66 44 89 6C 4A 02 48 8B 4C 24 48 48 8B D5 E8  // JfD.lJ.H.L$HH...
    A6D0: 82 16 00 00 45 8A E5 48 8B 4C 24 48 FF 15 30 2C  // ....E..H.L$H..0,
    A6E0: 00 00 8A 05 F4 3C 00 00 FF C3 83 FB 03 0F 82 D9  // .....<..........
    A6F0: FE FF FF 4C 8D 44 24 48 48 8D 8C 24 D0 00 00 00  // ...L.D$HH..$....
    A700: BA 1F 00 02 00 E8 4C 14 00 00 41 3B C5 7D 77 48  // ......L...A;.}wH
    A710: 8D 94 24 D0 00 00 00 48 8D 4C 24 50 FF 15 C8 2A  // ..$....H.L$P...*
    A720: 00 00 48 8D 44 24 50 4C 8D 44 24 60 48 89 44 24  // ..H.D$PL.D$`H.D$
    A730: 70 48 8D 44 24 40 48 8D 4C 24 48 48 89 44 24 30  // pH.D$@H.L$HH.D$0
    A740: 45 33 C9 BA 1F 00 02 00 44 89 6C 24 28 C7 44 24  // E3......D.l$(.D$
    A750: 60 30 00 00 00 4C 89 6C 24 68 4C 89 6C 24 20 C7  // `0...L.l$hL.l$ .
    A760: 44 24 78 40 02 00 00 4C 89 AC 24 80 00 00 00 4C  // D$x@...L..$....L
    A770: 89 AC 24 88 00 00 00 FF 15 7D 2B 00 00 41 3B C5  // ..$......}+..A;.
    A780: 0F 8C 17 01 00 00 48 8B 4C 24 48 48 8D 15 70 22  // ......H.L$HH..p"
    A790: 00 00 41 B9 00 02 00 00 4C 8B C6 E8 1A 14 00 00  // ..A.....L.......
    A7A0: 41 3B C5 7D 50 48 8B 5C 24 48 48 83 C9 FF 33 C0  // A;.}PH.\$HH...3.
    A7B0: 48 8D 2D 5B 22 00 00 48 8D 15 44 22 00 00 48 8B  // H.-["..H..D"..H.
    A7C0: FD 66 F2 AF 48 F7 D1 8D 3C 09 48 8D 4C 24 50 FF  // .f..H...<.H.L$P.
    A7D0: 15 15 2A 00 00 48 8D 54 24 50 41 B9 01 00 00 00  // ..*..H.T$PA.....
    A7E0: 45 33 C0 48 8B CB 89 7C 24 28 48 89 6C 24 20 FF  // E3.H...|$(H.l$ .
    A7F0: 15 0D 2B 00 00 48 8B 4C 24 48 4C 8D 44 24 40 48  // ..+..H.L$HL.D$@H
    A800: 8D 15 1C 22 00 00 E8 FB 15 00 00 41 3B C5 7C 07  // ...".......A;.|.
    A810: 44 39 6C 24 40 74 14 48 8B 4C 24 48 48 8D 15 FF  // D9l$@t.H.L$HH...
    A820: 21 00 00 45 33 C0 E8 5B 16 00 00 48 8B 4C 24 48  // !..E3..[...H.L$H
    A830: 4C 8D 44 24 40 48 8D 15 F6 21 00 00 E8 C5 15 00  // L.D$@H...!......
    A840: 00 41 3B C5 7C 07 83 7C 24 40 01 74 17 48 8B 4C  // .A;.|..|$@.t.H.L
    A850: 24 48 48 8D 15 D9 21 00 00 41 B8 01 00 00 00 E8  // $HH...!..A......
    A860: 22 16 00 00 48 8B 4C 24 48 4C 8D 44 24 40 48 8D  // "...H.L$HL.D$@H.
    A870: 15 CD 21 00 00 E8 8C 15 00 00 41 3B C5 7C 07 83  // ..!.......A;.|..
    A880: 7C 24 40 01 74 17 48 8B 4C 24 48 48 8D 15 B0 21  // |$@.t.H.L$HH...!
    A890: 00 00 41 B8 01 00 00 00 E8 E9 15 00 00 BA 55 53  // ..A...........US
    A8A0: 42 46 48 8B CE FF 15 2F 29 00 00 41 8A C4 48 8B  // BFH..../)..A..H.
    A8B0: 8C 24 90 03 00 00 48 33 CC E8 24 17 00 00 4C 8D  // .$....H3..$...L.
    A8C0: 9C 24 A0 03 00 00 49 8B 5B 20 49 8B 6B 28 49 8B  // .$....I.[ I.k(I.
    A8D0: 73 30 49 8B E3 41 5D 41 5C 5F C3 CC CC CC CC CC  // s0I..A]A\_......
    A8E0: CC CC 48 89 5C 24 08 55 56 57 41 54 41 55 48 83  // ..H.\$.UVWATAUH.
    A8F0: EC 40 48 8B AA B8 00 00 00 48 8B FA 48 8B F1 E8  // .@H......H..H...
    A900: 8A FB FF FF 48 8B 4D 08 48 8B 49 10 E8 A9 F9 FF  // ....H.M.H.I.....
    A910: FF 45 33 ED 8B D8 41 3A C5 0F 84 B8 01 00 00 48  // .E3...A:.......H
    A920: 8B 4D 08 C7 44 24 78 AA 55 00 00 45 8D 4D 04 48  // .M..D$x.U..E.M.H
    A930: 8B 49 10 4C 8D 44 24 78 BA 00 20 28 A0 E8 E0 F7  // .I.L.D$x.. (....
    A940: FF FF 41 3B C5 7C 0C 83 7C 24 78 01 0F B6 DB 41  // ..A;.|..|$x....A
    A950: 0F 44 DD 44 38 2D 80 3A 00 00 0F 84 77 01 00 00  // .D.D8-.:....w...
    A960: 41 3A DD 0F 84 6E 01 00 00 44 8B 4E 48 48 8B 0D  // A:...n...D.NHH..
    A970: 8E 3A 00 00 48 8D 84 24 80 00 00 00 48 89 44 24  // .:..H..$....H.D$
    A980: 30 41 BC 88 00 00 00 45 33 C0 41 8B D4 44 88 6C  // 0A.....E3.A..D.l
    A990: 24 28 44 89 6C 24 20 FF 15 FD 28 00 00 33 D2 41  // $(D.l$ ...(..3.A
    A9A0: 3B C5 8B D8 7D 17 4C 89 6F 38 89 47 30 48 8B CF  // ;...}.L.o8.G0H..
    A9B0: FF 15 9C 28 00 00 8B C3 E9 36 01 00 00 48 8B 8C  // ...(.....6...H..
    A9C0: 24 80 00 00 00 4D 8B C4 48 8B 49 40 E8 61 1A 00  // $....M..H.I@.a..
    A9D0: 00 4C 8B 9C 24 80 00 00 00 48 8B 45 08 48 8B 48  // .L..$....H.E.H.H
    A9E0: 10 4D 8B 63 40 48 8B D7 49 89 4C 24 10 48 8B CE  // .M.c@H..I.L$.H..
    A9F0: 41 C7 04 24 05 00 00 00 41 C6 44 24 5F 01 E8 43  // A..$....A.D$_..C
    AA00: DD FF FF 44 39 6F 30 4D 8B 5C 24 10 49 8B 6B 38  // ...D9o0M.\$.I.k8
    AA10: 0F 8C A9 00 00 00 48 8B 4D 08 FF 15 4A 28 00 00  // ......H.M...J(..
    AA20: 48 8B F0 49 3B F5 74 13 48 8B 0D D3 39 00 00 48  // H..I;.t.H...9..H
    AA30: 39 4E 08 75 06 4C 39 6E 40 75 7B 48 8B CE FF 15  // 9N.u.L9n@u{H....
    AA40: 6E 28 00 00 48 8B CE 48 8B D8 FF 15 3A 28 00 00  // n(..H..H....:(..
    AA50: 48 8B F3 49 3B DD 75 CB 48 8B 45 08 F6 40 30 04  // H..I;.u.H.E..@0.
    AA60: 74 0C 48 8B 84 24 80 00 00 00 83 48 30 04 48 8B  // t.H..$.....H0.H.
    AA70: 45 08 F6 40 30 10 74 0C 48 8B 84 24 80 00 00 00  // E..@0.t.H..$....
    AA80: 83 48 30 10 48 8B 55 08 48 8B 8C 24 80 00 00 00  // .H0.H.U.H..$....
    AA90: 4D 8D 44 24 08 FF 15 27 28 00 00 41 3B C5 7C 1F  // M.D$...'(..A;.|.
    AAA0: 4D 39 6C 24 08 74 18 48 8B 84 24 80 00 00 00 0F  // M9l$.t.H..$.....
    AAB0: BA 70 30 07 EB 17 48 8B CE FF 15 CB 27 00 00 48  // .p0...H.....'..H
    AAC0: 8B 8C 24 80 00 00 00 FF 15 25 27 00 00 8B 5F 30  // ..$......%'..._0
    AAD0: 33 D2 E9 D6 FE FF FF FE 47 43 48 83 87 B8 00 00  // 3.......GCH.....
    AAE0: 00 48 48 8B 4E 40 48 8B 49 08 48 8B D7 FF 15 B7  // .HH.N@H.I.H.....
    AAF0: 27 00 00 48 8B 5C 24 70 48 83 C4 40 41 5D 41 5C  // '..H.\$pH..@A]A\
    AB00: 5F 5E 5D C3 CC CC CC CC CC CC 48 8B C4 48 89 58  // _^].......H..H.X
    AB10: 08 48 89 68 10 48 89 70 18 57 48 83 EC 50 48 8B  // .H.h.H.p.WH..PH.
    AB20: 79 40 48 8B E9 48 8B F2 48 8D 48 D8 45 33 C0 33  // y@H..H..H.H.E3.3
    AB30: D2 FF 15 DB 26 00 00 48 8B 96 B8 00 00 00 41 B8  // ....&..H......A.
    AB40: 38 00 00 00 48 8D 5A B8 48 8B CB E8 92 15 00 00  // 8...H.Z.H.......
    AB50: C6 43 03 00 48 8B 86 B8 00 00 00 48 8D 0D B8 DB  // .C..H......H....
    AB60: FF FF C6 40 BB E0 48 89 48 F0 48 8D 4C 24 30 48  // ...@..H.H.H.L$0H
    AB70: 89 48 F8 48 8B 4F 08 FF 15 AD 26 00 00 48 8B 4F  // .H.H.O....&..H.O
    AB80: 08 48 8B D6 FF 15 20 27 00 00 3D 03 01 00 00 75  // .H.... '..=....u
    AB90: 19 48 83 64 24 20 00 48 8D 4C 24 30 45 33 C9 45  // .H.d$ .H.L$0E3.E
    ABA0: 33 C0 33 D2 FF 15 B8 26 00 00 83 7E 30 00 7D 1C  // 3.3....&...~0.}.
    ABB0: 81 7E 30 0E 01 00 C0 74 13 48 8B 57 08 4C 8D 47  // .~0....t.H.W.L.G
    ABC0: 08 48 8B CD FF 15 F8 26 00 00 EB 09 48 8B CD FF  // .H.....&....H...
    ABD0: 15 1D 26 00 00 8B 5E 30 33 D2 48 8B CE FF 15 6F  // ..&...^03.H....o
    ABE0: 26 00 00 48 8B 6C 24 68 48 8B 74 24 70 8B C3 48  // &..H.l$hH.t$p..H
    ABF0: 8B 5C 24 60 48 83 C4 50 5F C3 CC CC CC CC CC CC  // .\$`H..P_.......
    AC00: CC CC 48 89 5C 24 08 57 48 83 EC 50 80 3D C7 37  // ..H.\$.WH..P.=.7
    AC10: 00 00 00 48 8B D9 75 58 48 8D 15 33 1E 00 00 48  // ...H..uXH..3...H
    AC20: 8D 4C 24 40 FF 15 C0 25 00 00 48 8B 53 08 48 8D  // .L$@...%..H.S.H.
    AC30: 4C 24 40 48 83 C2 38 41 B0 01 FF 15 9A 26 00 00  // L$@H..8A.....&..
    AC40: 85 C0 74 58 48 8D 15 37 1E 00 00 48 8D 4C 24 40  // ..tXH..7...H.L$@
    AC50: FF 15 94 25 00 00 48 8B 53 08 48 8D 4C 24 40 48  // ...%..H.S.H.L$@H
    AC60: 83 C2 38 41 B0 01 FF 15 6E 26 00 00 85 C0 74 2C  // ..8A....n&....t,
    AC70: 48 8D 15 3B 1E 00 00 48 8D 4C 24 40 FF 15 68 25  // H..;...H.L$@..h%
    AC80: 00 00 48 8B 53 08 48 8D 4C 24 40 48 83 C2 38 41  // ..H.S.H.L$@H..8A
    AC90: B0 01 FF 15 42 26 00 00 85 C0 75 07 33 C0 E9 B1  // ....B&....u.3...
    ACA0: 00 00 00 48 8B 0D 58 37 00 00 48 8D 44 24 68 41  // ...H..X7..H.D$hA
    ACB0: B9 08 00 00 00 48 89 44 24 30 45 33 C0 BA 88 00  // .....H.D$0E3....
    ACC0: 00 00 C6 44 24 28 00 83 64 24 20 00 FF 15 C8 25  // ...D$(..d$ ....%
    ACD0: 00 00 8B F8 85 C0 78 7A F6 43 30 04 74 09 48 8B  // ......xz.C0.t.H.
    ACE0: 44 24 68 83 48 30 04 F6 43 30 10 74 09 48 8B 44  // D$h.H0..C0.t.H.D
    ACF0: 24 68 83 48 30 10 48 8B 44 24 68 33 D2 41 B8 88  // $h.H0.H.D$h3.A..
    AD00: 00 00 00 48 8B 78 40 48 8B CF E8 23 17 00 00 C7  // ...H.x@H...#....
    AD10: 07 05 00 00 00 C6 47 5F 00 83 7B 48 03 75 04 C6  // ......G_..{H.u..
    AD20: 47 5F 11 48 8B 4C 24 68 4C 8D 47 08 48 8B D3 FF  // G_.H.L$hL.G.H...
    AD30: 15 8D 25 00 00 8B F8 85 C0 79 0D 48 8B 4C 24 68  // ..%......y.H.L$h
    AD40: FF 15 AC 24 00 00 EB 0A 48 8B 44 24 68 0F BA 70  // ...$....H.D$h..p
    AD50: 30 07 8B C7 48 8B 5C 24 60 48 83 C4 50 5F C3 CC  // 0...H.\$`H..P_..
    AD60: CC CC CC CC CC CC 40 53 48 83 EC 20 F6 05 69 36  // ......@SH.. ..i6
    AD70: 00 00 04 74 5D 83 79 48 08 74 06 83 79 48 03 75  // ...t].yH.t..yH.u
    AD80: 51 84 D2 74 07 E8 78 FE FF FF EB 46 48 8B 59 18  // Q..t..x....FH.Y.
    AD90: 48 85 DB 74 3D 48 8B 05 66 36 00 00 48 85 DB 74  // H..t=H..f6..H..t
    ADA0: 0D 48 39 43 08 75 07 48 83 7B 40 00 75 0E 48 8B  // .H9C.u.H.{@.u.H.
    ADB0: CB 48 8B 5B 18 48 85 DB 74 18 EB E0 FF 15 68 24  // .H.[.H..t.....h$
    ADC0: 00 00 48 83 7B 18 00 75 09 48 8B CB FF 15 20 24  // ..H.{..u.H.... $
    ADD0: 00 00 48 83 C4 20 5B C3 CC CC CC CC CC CC 48 89  // ..H.. [.......H.
    ADE0: 5C 24 08 48 89 74 24 10 57 48 83 EC 20 48 8B B2  // \$.H.t$.WH.. H..
    ADF0: B8 00 00 00 48 8B F9 48 8B 49 40 80 3E 00 48 8B  // ....H..H.I@.>.H.
    AE00: DA 0F 84 93 00 00 00 80 3E 04 0F 84 8A 00 00 00  // ........>.......
    AE10: 80 3E 0D 74 56 80 3E 10 74 4A 80 3E 16 75 19 80  // .>.tV.>.tJ.>.u..
    AE20: 7E 01 02 75 13 83 7E 18 05 74 39 83 7E 18 01 75  // ~..u..~..t9.~..u
    AE30: 07 C6 05 A6 35 00 00 00 FE 43 43 48 83 83 B8 00  // ....5....CCH....
    AE40: 00 00 48 48 8B 4F 40 48 8B D3 48 8B 49 08 FF 15  // ..HH.O@H..H.I...
    AE50: 56 24 00 00 48 8B 5C 24 30 48 8B 74 24 38 48 83  // V$..H.\$0H.t$8H.
    AE60: C4 20 5F C3 E8 E1 D3 FF FF EB CD 8A 46 01 3C 01  // . _.........F.<.
    AE70: 75 0A 48 8B CF E8 68 FA FF FF EB D8 3C 03 75 0A  // u.H...h.....<.u.
    AE80: 48 8B CF E8 82 FC FF FF EB CA FE 42 43 48 8D 46  // H..........BCH.F
    AE90: 48 48 89 82 B8 00 00 00 EB B0 80 79 5C 00 75 98  // HH.........y\.u.
    AEA0: 48 8B CF E8 C2 F4 FF FF 84 C0 74 8C 8A 05 28 35  // H.........t...(5
    AEB0: 00 00 A8 02 74 1C 48 83 63 38 00 BF 22 00 00 C0  // ....t.H.c8.."...
    AEC0: 33 D2 48 8B CB 89 7B 30 FF 15 84 23 00 00 8B C7  // 3.H...{0...#....
    AED0: EB 82 A8 01 0F 84 5E FF FF FF 8A 06 3C 04 74 D6  // ......^.....<.t.
    AEE0: 84 C0 0F 85 50 FF FF FF 48 8B D3 48 8B CF E8 CF  // ....P...H..H....
    AEF0: F4 FF FF E9 5C FF FF FF CC CC CC CC CC CC 40 53  // ....\.........@S
    AF00: 48 83 EC 40 4C 8B 94 24 88 00 00 00 4C 8B DA 48  // H..@L..$....L..H
    AF10: 8B D9 4D 85 D2 74 0E 49 8B 42 40 48 85 C0 74 05  // ..M..t.I.B@H..t.
    AF20: 83 38 05 75 4B 49 8B 42 40 48 8B 50 08 48 8B 42  // .8.uKI.B@H.P.H.B
    AF30: 08 48 8B 48 50 48 85 C9 74 36 4C 8B 51 08 4D 85  // .H.HPH..t6L.Q.M.
    AF40: D2 74 2D 48 8B 84 24 80 00 00 00 48 89 54 24 38  // .t-H..$....H.T$8
    AF50: 48 8B CB 48 89 44 24 30 8A 44 24 78 49 8B D3 88  // H..H.D$0.D$xI...
    AF60: 44 24 28 8B 44 24 70 89 44 24 20 41 FF D2 EB 02  // D$(.D$p.D$ A....
    AF70: 32 C0 48 83 C4 40 5B C3 CC CC CC CC CC CC 40 53  // 2.H..@[.......@S
    AF80: 48 83 EC 40 4C 8B 94 24 88 00 00 00 4C 8B DA 48  // H..@L..$....L..H
    AF90: 8B D9 4D 85 D2 74 0E 49 8B 42 40 48 85 C0 74 05  // ..M..t.I.B@H..t.
    AFA0: 83 38 05 75 4D 49 8B 42 40 48 8B 50 08 48 8B 42  // .8.uMI.B@H.P.H.B
    AFB0: 08 48 8B 48 50 48 85 C9 74 38 4C 8B 51 10 4D 85  // .H.HPH..t8L.Q.M.
    AFC0: D2 74 2F 48 8B 84 24 80 00 00 00 48 89 54 24 38  // .t/H..$....H.T$8
    AFD0: 48 8B CB 48 89 44 24 30 48 8B 44 24 78 49 8B D3  // H..H.D$0H.D$xI..
    AFE0: 48 89 44 24 28 8B 44 24 70 89 44 24 20 41 FF D2  // H.D$(.D$p.D$ A..
    AFF0: EB 02 32 C0 48 83 C4 40 5B C3 CC CC CC CC CC CC  // ..2.H..@[.......
    B000: CC CC 48 8B C4 48 89 58 08 48 89 68 10 48 89 70  // ..H..H.X.H.h.H.p
    B010: 18 48 89 78 20 41 54 48 83 EC 40 48 8B 9C 24 88  // .H.x ATH..@H..$.
    B020: 00 00 00 41 8A F9 41 8B F0 48 8B EA 4C 8B E1 48  // ...A..A..H..L..H
    B030: 85 DB 74 0E 48 8B 43 40 48 85 C0 74 05 83 38 05  // ..t.H.C@H..t..8.
    B040: 75 72 F6 05 91 33 00 00 01 74 16 48 8B 43 40 80  // ur...3...t.H.C@.
    B050: 78 5C 00 75 0C 48 8B CB E8 0D F3 FF FF 85 C0 75  // x\.u.H.........u
    B060: 53 48 8B 43 40 48 8B 50 08 48 8B 42 08 48 8B 48  // SH.C@H.P.H.B.H.H
    B070: 50 48 85 C9 74 3E 4C 8B 51 18 4D 85 D2 74 35 48  // PH..t>L.Q.M..t5H
    B080: 8B 84 24 80 00 00 00 48 89 54 24 38 44 8A CF 48  // ..$....H.T$8D..H
    B090: 89 44 24 30 48 8B 44 24 78 44 8B C6 48 89 44 24  // .D$0H.D$xD..H.D$
    B0A0: 28 8B 44 24 70 48 8B D5 49 8B CC 89 44 24 20 41  // (.D$pH..I...D$ A
    B0B0: FF D2 EB 02 32 C0 48 8B 5C 24 50 48 8B 6C 24 58  // ....2.H.\$PH.l$X
    B0C0: 48 8B 74 24 60 48 8B 7C 24 68 48 83 C4 40 41 5C  // H.t$`H.|$hH..@A\
    B0D0: C3 CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 30  // ..........@SH..0
    B0E0: 4C 8B 54 24 60 44 8A DA 48 8B D9 4D 85 D2 74 0E  // L.T$`D..H..M..t.
    B0F0: 49 8B 42 40 48 85 C0 74 05 83 38 05 75 2D 49 8B  // I.B@H..t..8.u-I.
    B100: 42 40 48 8B 50 08 48 8B 42 08 48 8B 48 50 48 85  // B@H.P.H.B.H.HPH.
    B110: C9 74 18 48 8B 41 20 48 85 C0 74 0F 48 89 54 24  // .t.H.A H..t.H.T$
    B120: 20 48 8B CB 41 8A D3 FF D0 EB 02 32 C0 48 83 C4  //  H..A......2.H..
    B130: 30 5B C3 CC CC CC CC CC CC CC 40 53 48 83 EC 30  // 0[........@SH..0
    B140: 4C 8B 54 24 60 44 8A DA 48 8B D9 4D 85 D2 74 0E  // L.T$`D..H..M..t.
    B150: 49 8B 42 40 48 85 C0 74 05 83 38 05 75 2D 49 8B  // I.B@H..t..8.u-I.
    B160: 42 40 48 8B 50 08 48 8B 42 08 48 8B 48 50 48 85  // B@H.P.H.B.H.HPH.
    B170: C9 74 18 48 8B 41 28 48 85 C0 74 0F 48 89 54 24  // .t.H.A(H..t.H.T$
    B180: 20 48 8B CB 41 8A D3 FF D0 EB 02 32 C0 48 83 C4  //  H..A......2.H..
    B190: 30 5B C3 CC CC CC CC CC CC CC 40 53 48 83 EC 50  // 0[........@SH..P
    B1A0: 48 8B 84 24 A0 00 00 00 4C 8B DA 48 8B D9 48 85  // H..$....L..H..H.
    B1B0: C0 74 0F 4C 8B 50 40 4D 85 D2 74 06 41 83 3A 05  // .t.L.P@M..t.A.:.
    B1C0: 75 5C 48 8B 40 40 48 8B 50 08 48 8B 42 08 48 8B  // u\H.@@H.P.H.B.H.
    B1D0: 48 50 48 85 C9 74 47 4C 8B 51 30 4D 85 D2 74 3E  // HPH..tGL.Q0M..t>
    B1E0: 48 8B 84 24 98 00 00 00 48 89 54 24 40 48 8B CB  // H..$....H.T$@H..
    B1F0: 48 89 44 24 38 8A 84 24 90 00 00 00 49 8B D3 88  // H.D$8..$....I...
    B200: 44 24 30 8A 84 24 88 00 00 00 88 44 24 28 8B 84  // D$0..$.....D$(..
    B210: 24 80 00 00 00 89 44 24 20 41 FF D2 EB 02 32 C0  // $.....D$ A....2.
    B220: 48 83 C4 50 5B C3 CC CC CC CC CC CC CC CC 40 53  // H..P[.........@S
    B230: 48 83 EC 40 4C 8B 94 24 80 00 00 00 4C 8B DA 48  // H..@L..$....L..H
    B240: 8B D9 4D 85 D2 74 0E 49 8B 42 40 48 85 C0 74 05  // ..M..t.I.B@H..t.
    B250: 83 38 05 75 40 49 8B 42 40 48 8B 50 08 48 8B 42  // .8.u@I.B@H.P.H.B
    B260: 08 48 8B 48 50 48 85 C9 74 2B 4C 8B 51 38 4D 85  // .H.HPH..t+L.Q8M.
    B270: D2 74 22 48 8B 44 24 78 48 89 54 24 30 48 8B CB  // .t"H.D$xH.T$0H..
    B280: 48 89 44 24 28 8B 44 24 70 49 8B D3 89 44 24 20  // H.D$(.D$pI...D$ 
    B290: 41 FF D2 EB 02 32 C0 48 83 C4 40 5B C3 CC CC CC  // A....2.H..@[....
    B2A0: CC CC CC CC CC CC 48 83 EC 28 4C 8B D1 4D 85 C9  // ......H..(L..M..
    B2B0: 74 0E 49 8B 41 40 48 85 C0 74 05 83 38 05 75 25  // t.I.A@H..t..8.u%
    B2C0: 49 8B 41 40 4C 8B 48 08 49 8B 41 08 48 8B 48 50  // I.A@L.H.I.A.H.HP
    B2D0: 48 85 C9 74 10 48 8B 41 40 48 85 C0 74 07 49 8B  // H..t.H.A@H..t.I.
    B2E0: CA FF D0 EB 02 32 C0 48 83 C4 28 C3 CC CC CC CC  // .....2.H..(.....
    B2F0: CC CC 40 53 48 83 EC 30 4C 8B 54 24 60 4C 8B DA  // ..@SH..0L.T$`L..
    B300: 48 8B D9 4D 85 D2 74 0E 49 8B 42 40 48 85 C0 74  // H..M..t.I.B@H..t
    B310: 05 83 38 05 75 2D 49 8B 42 40 48 8B 50 08 48 8B  // ..8.u-I.B@H.P.H.
    B320: 42 08 48 8B 48 50 48 85 C9 74 18 48 8B 41 48 48  // B.H.HPH..t.H.AHH
    B330: 85 C0 74 0F 48 89 54 24 20 48 8B CB 49 8B D3 FF  // ..t.H.T$ H..I...
    B340: D0 EB 02 32 C0 48 83 C4 30 5B C3 CC CC CC CC CC  // ...2.H..0[......
    B350: CC CC 40 53 48 83 EC 50 48 8B 84 24 A0 00 00 00  // ..@SH..PH..$....
    B360: 44 8A DA 48 8B D9 48 85 C0 74 0F 4C 8B 50 40 4D  // D..H..H..t.L.P@M
    B370: 85 D2 74 06 41 83 3A 05 75 5E 48 8B 40 40 48 8B  // ..t.A.:.u^H.@@H.
    B380: 50 08 48 8B 42 08 48 8B 48 50 48 85 C9 74 49 4C  // P.H.B.H.HPH..tIL
    B390: 8B 51 50 4D 85 D2 74 40 48 8B 84 24 98 00 00 00  // .QPM..t@H..$....
    B3A0: 48 89 54 24 40 48 8B CB 48 89 44 24 38 8B 84 24  // H.T$@H..H.D$8..$
    B3B0: 90 00 00 00 41 8A D3 89 44 24 30 8B 84 24 88 00  // ....A...D$0..$..
    B3C0: 00 00 89 44 24 28 48 8B 84 24 80 00 00 00 48 89  // ...D$(H..$....H.
    B3D0: 44 24 20 41 FF D2 EB 02 32 C0 48 83 C4 50 5B C3  // D$ A....2.H..P[.
    B3E0: CC CC CC CC CC CC 48 83 EC 28 48 8B 41 08 4C 8B  // ......H..(H.A.L.
    B3F0: C1 48 8B 50 38 48 8B 42 08 48 85 C0 74 3B 48 8B  // .H.P8H.B.H..t;H.
    B400: 15 FD 2F 00 00 48 39 50 08 74 0B 48 8B 40 18 48  // ../..H9P.t.H.@.H
    B410: 85 C0 75 F1 EB 23 48 8B 40 40 48 8B 48 08 48 8B  // ..u..#H.@@H.H.H.
    B420: 41 08 48 8B 40 50 48 85 C0 74 0E 48 8B 40 58 48  // A.H.@PH..t.H.@XH
    B430: 85 C0 74 05 49 8B C8 FF D0 48 83 C4 28 C3 CC CC  // ..t.I....H..(...
    B440: CC CC CC CC CC CC 48 83 EC 28 48 8B 41 08 4C 8B  // ......H..(H.A.L.
    B450: C1 48 8B 50 38 48 8B 42 08 48 85 C0 74 3B 48 8B  // .H.P8H.B.H..t;H.
    B460: 15 9D 2F 00 00 48 39 50 08 74 0B 48 8B 40 18 48  // ../..H9P.t.H.@.H
    B470: 85 C0 75 F1 EB 23 48 8B 40 40 48 8B 48 08 48 8B  // ..u..#H.@@H.H.H.
    B480: 41 08 48 8B 40 50 48 85 C0 74 0E 48 8B 40 60 48  // A.H.@PH..t.H.@`H
    B490: 85 C0 74 05 49 8B C8 FF D0 48 83 C4 28 C3 CC CC  // ..t.I....H..(...
    B4A0: CC CC CC CC CC CC 40 53 48 83 EC 20 48 8B 41 40  // ......@SH.. H.A@
    B4B0: 48 8B D9 83 38 05 74 05 83 38 04 75 12 48 8B CA  // H...8.t..8.u.H..
    B4C0: FF 15 64 1D 00 00 48 8B CB FF 15 23 1D 00 00 48  // ..d...H....#...H
    B4D0: 83 C4 20 5B C3 CC CC CC CC CC CC CC CC CC 40 53  // .. [..........@S
    B4E0: 48 83 EC 30 4C 8B 54 24 60 44 8A DA 48 8B D9 4D  // H..0L.T$`D..H..M
    B4F0: 85 D2 74 0E 49 8B 42 40 48 85 C0 74 05 83 38 05  // ..t.I.B@H..t..8.
    B500: 75 32 49 8B 42 40 48 8B 50 08 48 8B 42 08 48 8B  // u2I.B@H.P.H.B.H.
    B510: 48 50 48 85 C9 74 1D 83 39 70 76 18 48 8B 41 70  // HPH..t..9pv.H.Ap
    B520: 48 85 C0 74 0F 48 89 54 24 20 48 8B CB 41 8A D3  // H..t.H.T$ H..A..
    B530: FF D0 EB 02 32 C0 48 83 C4 30 5B C3 CC CC CC CC  // ....2.H..0[.....
    B540: CC CC 48 83 EC 28 4C 8B D1 4D 85 C9 74 0E 49 8B  // ..H..(L..M..t.I.
    B550: 41 40 48 85 C0 74 05 83 38 05 75 2A 49 8B 41 40  // A@H..t..8.u*I.A@
    B560: 48 8B 48 08 48 8B 41 08 48 8B 48 50 48 85 C9 74  // H.H.H.A.H.HPH..t
    B570: 15 83 39 78 76 10 48 8B 41 78 48 85 C0 74 07 49  // ..9xv.H.AxH..t.I
    B580: 8B CA FF D0 EB 05 B8 02 00 00 C0 48 83 C4 28 C3  // ...........H..(.
    B590: CC CC CC CC CC CC 40 53 48 83 EC 40 4C 8B 94 24  // ......@SH..@L..$
    B5A0: 80 00 00 00 4C 8B DA 48 8B D9 4D 85 D2 74 0E 49  // ....L..H..M..t.I
    B5B0: 8B 42 40 48 85 C0 74 05 83 38 05 75 4D 49 8B 42  // .B@H..t..8.uMI.B
    B5C0: 40 48 8B 50 08 48 8B 42 08 48 8B 48 50 48 85 C9  // @H.P.H.B.H.HPH..
    B5D0: 74 38 81 39 80 00 00 00 76 30 4C 8B 91 80 00 00  // t8.9....v0L.....
    B5E0: 00 4D 85 D2 74 24 48 8B 44 24 78 48 89 54 24 30  // .M..t$H.D$xH.T$0
    B5F0: 48 8B CB 48 89 44 24 28 48 8B 44 24 70 49 8B D3  // H..H.D$(H.D$pI..
    B600: 48 89 44 24 20 41 FF D2 EB 02 32 C0 48 83 C4 40  // H.D$ A....2.H..@
    B610: 5B C3 CC CC CC CC CC CC CC CC 48 83 EC 28 4C 8B  // [.........H..(L.
    B620: C9 4D 85 C0 74 0E 49 8B 40 40 48 85 C0 74 05 83  // .M..t.I.@@H..t..
    B630: 38 05 75 30 49 8B 40 40 4C 8B 40 08 49 8B 40 08  // 8.u0I.@@L.@.I.@.
    B640: 48 8B 48 50 48 85 C9 74 1B 81 39 88 00 00 00 76  // H.HPH..t..9....v
    B650: 13 48 8B 81 88 00 00 00 48 85 C0 74 07 49 8B C9  // .H......H..t.I..
    B660: FF D0 EB 02 32 C0 48 83 C4 28 C3 CC CC CC CC CC  // ....2.H..(......
    B670: CC CC 40 53 48 83 EC 40 4C 8B 94 24 80 00 00 00  // ..@SH..@L..$....
    B680: 4C 8B DA 48 8B D9 4D 85 D2 74 0E 49 8B 42 40 48  // L..H..M..t.I.B@H
    B690: 85 C0 74 05 83 38 05 75 4D 49 8B 42 40 48 8B 50  // ..t..8.uMI.B@H.P
    B6A0: 08 48 8B 42 08 48 8B 48 50 48 85 C9 74 38 81 39  // .H.B.H.HPH..t8.9
    B6B0: 90 00 00 00 76 30 4C 8B 91 90 00 00 00 4D 85 D2  // ....v0L......M..
    B6C0: 74 24 48 8B 44 24 78 48 89 54 24 30 48 8B CB 48  // t$H.D$xH.T$0H..H
    B6D0: 89 44 24 28 48 8B 44 24 70 49 8B D3 48 89 44 24  // .D$(H.D$pI..H.D$
    B6E0: 20 41 FF D2 EB 02 32 C0 48 83 C4 40 5B C3 CC CC  //  A....2.H..@[...
    B6F0: CC CC CC CC CC CC 48 83 EC 28 4C 8B D1 4D 85 C9  // ......H..(L..M..
    B700: 74 0E 49 8B 41 40 48 85 C0 74 05 83 38 05 75 30  // t.I.A@H..t..8.u0
    B710: 49 8B 41 40 4C 8B 48 08 49 8B 41 08 48 8B 48 50  // I.A@L.H.I.A.H.HP
    B720: 48 85 C9 74 1B 81 39 98 00 00 00 76 13 48 8B 81  // H..t..9....v.H..
    B730: 98 00 00 00 48 85 C0 74 07 49 8B CA FF D0 EB 02  // ....H..t.I......
    B740: 32 C0 48 83 C4 28 C3 CC CC CC CC CC CC CC 40 53  // 2.H..(........@S
    B750: 48 83 EC 50 48 8B 84 24 A8 00 00 00 4C 8B DA 48  // H..PH..$....L..H
    B760: 8B D9 48 85 C0 74 0F 4C 8B 50 40 4D 85 D2 74 06  // ..H..t.L.P@M..t.
    B770: 41 83 3A 05 75 78 48 8B 40 40 48 8B 50 08 48 8B  // A.:.uxH.@@H.P.H.
    B780: 42 08 48 8B 48 50 48 85 C9 74 63 81 39 A0 00 00  // B.H.HPH..tc.9...
    B790: 00 76 5B 4C 8B 91 A0 00 00 00 4D 85 D2 74 4F 8B  // .v[L......M..tO.
    B7A0: 84 24 A0 00 00 00 48 89 54 24 48 48 8B CB 89 44  // .$....H.T$HH...D
    B7B0: 24 40 48 8B 84 24 98 00 00 00 49 8B D3 48 89 44  // $@H..$....I..H.D
    B7C0: 24 38 48 8B 84 24 90 00 00 00 48 89 44 24 30 48  // $8H..$....H.D$0H
    B7D0: 8B 84 24 88 00 00 00 48 89 44 24 28 48 8B 84 24  // ..$....H.D$(H..$
    B7E0: 80 00 00 00 48 89 44 24 20 41 FF D2 EB 02 32 C0  // ....H.D$ A....2.
    B7F0: 48 83 C4 50 5B C3 CC CC CC CC CC CC CC CC 40 53  // H..P[.........@S
    B800: 48 83 EC 50 48 8B 84 24 A8 00 00 00 4C 8B DA 48  // H..PH..$....L..H
    B810: 8B D9 48 85 C0 74 0F 4C 8B 50 40 4D 85 D2 74 06  // ..H..t.L.P@M..t.
    B820: 41 83 3A 05 75 78 48 8B 40 40 48 8B 50 08 48 8B  // A.:.uxH.@@H.P.H.
    B830: 42 08 48 8B 48 50 48 85 C9 74 63 81 39 A8 00 00  // B.H.HPH..tc.9...
    B840: 00 76 5B 4C 8B 91 A8 00 00 00 4D 85 D2 74 4F 8B  // .v[L......M..tO.
    B850: 84 24 A0 00 00 00 48 89 54 24 48 48 8B CB 89 44  // .$....H.T$HH...D
    B860: 24 40 48 8B 84 24 98 00 00 00 49 8B D3 48 89 44  // $@H..$....I..H.D
    B870: 24 38 48 8B 84 24 90 00 00 00 48 89 44 24 30 48  // $8H..$....H.D$0H
    B880: 8B 84 24 88 00 00 00 48 89 44 24 28 48 8B 84 24  // ..$....H.D$(H..$
    B890: 80 00 00 00 48 89 44 24 20 41 FF D2 EB 02 32 C0  // ....H.D$ A....2.
    B8A0: 48 83 C4 50 5B C3 CC CC CC CC CC CC CC CC 48 83  // H..P[.........H.
    B8B0: EC 28 4C 8B C9 4D 85 C0 74 0E 49 8B 40 40 48 85  // .(L..M..t.I.@@H.
    B8C0: C0 74 05 83 38 05 75 30 49 8B 40 40 4C 8B 40 08  // .t..8.u0I.@@L.@.
    B8D0: 49 8B 40 08 48 8B 48 50 48 85 C9 74 1B 81 39 B0  // I.@.H.HPH..t..9.
    B8E0: 00 00 00 76 13 48 8B 81 B0 00 00 00 48 85 C0 74  // ...v.H......H..t
    B8F0: 07 49 8B C9 FF D0 EB 02 32 C0 48 83 C4 28 C3 CC  // .I......2.H..(..
    B900: CC CC CC CC CC CC 48 83 EC 28 4C 8B D1 4D 85 C9  // ......H..(L..M..
    B910: 74 0E 49 8B 41 40 48 85 C0 74 05 83 38 05 75 30  // t.I.A@H..t..8.u0
    B920: 49 8B 41 40 4C 8B 48 08 49 8B 41 08 48 8B 48 50  // I.A@L.H.I.A.H.HP
    B930: 48 85 C9 74 1B 81 39 B8 00 00 00 76 13 48 8B 81  // H..t..9....v.H..
    B940: B8 00 00 00 48 85 C0 74 07 49 8B CA FF D0 EB 02  // ....H..t.I......
    B950: 32 C0 48 83 C4 28 C3 CC CC CC CC CC CC CC 48 89  // 2.H..(........H.
    B960: 5C 24 08 48 89 6C 24 10 48 89 74 24 18 57 41 54  // \$.H.l$.H.t$.WAT
    B970: 41 55 48 83 EC 20 49 8B D8 4C 8B EA 4C 8B E1 4D  // AUH.. I..L..L..M
    B980: 85 C0 74 12 49 8B 40 40 48 85 C0 74 09 83 38 05  // ..t.I.@@H..t..8.
    B990: 0F 85 8A 00 00 00 49 8B 48 40 48 8B 69 08 48 8B  // ......I.H@H.i.H.
    B9A0: 45 08 48 8B 78 50 48 85 FF 74 75 81 3F C0 00 00  // E.H.xPH..tu.?...
    B9B0: 00 76 6D 48 83 BF C0 00 00 00 00 74 63 49 8B B4  // .vmH.......tcI..
    B9C0: 24 B8 00 00 00 48 89 6E 28 80 3D 0A 2A 00 00 00  // $....H.n(.=.*...
    B9D0: 74 39 80 79 5C 00 75 33 48 8B CB E8 8A E9 FF FF  // t9.y\.u3H.......
    B9E0: 85 C0 74 27 F6 05 EF 29 00 00 02 75 33 48 8B 46  // ..t'...)...u3H.F
    B9F0: 08 8B 48 10 0F BA E1 1E 72 26 F6 C1 02 75 21 0F  // ..H.....r&...u!.
    BA00: BA E1 08 72 1B 0F BA E1 10 72 15 4C 8B C5 49 8B  // ...r.....r.L..I.
    BA10: D5 49 8B CC FF 97 C0 00 00 00 48 89 5E 28 EB 02  // .I........H.^(..
    BA20: 32 C0 48 8B 5C 24 40 48 8B 6C 24 48 48 8B 74 24  // 2.H.\$@H.l$HH.t$
    BA30: 50 48 83 C4 20 41 5D 41 5C 5F C3 CC CC CC CC CC  // PH.. A]A\_......
    BA40: CC CC 48 83 EC 28 4C 8B C9 4D 85 C0 74 0E 49 8B  // ..H..(L..M..t.I.
    BA50: 40 40 48 85 C0 74 05 83 38 05 75 30 49 8B 40 40  // @@H..t..8.u0I.@@
    BA60: 48 8B 48 08 48 8B 41 08 48 8B 48 50 48 85 C9 74  // H.H.H.A.H.HPH..t
    BA70: 1B 81 39 C8 00 00 00 76 13 48 8B 81 C8 00 00 00  // ..9....v.H......
    BA80: 48 85 C0 74 07 49 8B C9 FF D0 EB 05 B8 02 00 00  // H..t.I..........
    BA90: C0 48 83 C4 28 C3 CC CC CC CC CC CC CC CC 48 83  // .H..(.........H.
    BAA0: EC 28 4C 8B C1 48 85 D2 74 0E 48 8B 42 40 48 85  // .(L..H..t.H.B@H.
    BAB0: C0 74 05 83 38 05 75 30 48 8B 42 40 48 8B 48 08  // .t..8.u0H.B@H.H.
    BAC0: 48 8B 41 08 48 8B 48 50 48 85 C9 74 1B 81 39 D0  // H.A.H.HPH..t..9.
    BAD0: 00 00 00 76 13 48 8B 81 D0 00 00 00 48 85 C0 74  // ...v.H......H..t
    BAE0: 07 49 8B C8 FF D0 EB 05 B8 02 00 00 C0 48 83 C4  // .I...........H..
    BAF0: 28 C3 CC CC CC CC CC CC CC CC 48 83 EC 28 4C 8B  // (.........H..(L.
    BB00: C1 48 85 D2 74 0E 48 8B 42 40 48 85 C0 74 05 83  // .H..t.H.B@H..t..
    BB10: 38 05 75 30 48 8B 42 40 48 8B 48 08 48 8B 41 08  // 8.u0H.B@H.H.H.A.
    BB20: 48 8B 48 50 48 85 C9 74 1B 81 39 D8 00 00 00 76  // H.HPH..t..9....v
    BB30: 13 48 8B 81 D8 00 00 00 48 85 C0 74 07 49 8B C8  // .H......H..t.I..
    BB40: FF D0 EB 05 B8 02 00 00 C0 48 83 C4 28 C3 CC CC  // .........H..(...
    BB50: CC CC CC CC CC CC 40 53 48 83 EC 60 48 8B D1 48  // ......@SH..`H..H
    BB60: 8D 4C 24 20 49 8B D8 FF 15 7D 16 00 00 33 C9 48  // .L$ I....}...3.H
    BB70: 8D 44 24 20 48 89 4C 24 38 48 89 4C 24 50 48 89  // .D$ H.L$8H.L$PH.
    BB80: 4C 24 58 4C 8D 44 24 30 48 8B CB BA 1F 00 02 00  // L$XL.D$0H.......
    BB90: C7 44 24 30 30 00 00 00 C7 44 24 48 40 02 00 00  // .D$00....D$H@...
    BBA0: 48 89 44 24 40 FF 15 6F 17 00 00 48 83 C4 60 5B  // H.D$@..o...H..`[
    BBB0: C3 CC CC CC CC CC CC CC CC CC 48 89 5C 24 10 56  // ..........H.\$.V
    BBC0: 57 41 54 48 81 EC 60 08 00 00 48 8B 05 F1 26 00  // WATH..`...H...&.
    BBD0: 00 48 33 C4 48 89 84 24 50 08 00 00 48 8B D9 48  // .H3.H..$P...H..H
    BBE0: 8D 15 1C 0E 00 00 48 8D 4C 24 38 49 8B F0 FF 15  // ......H.L$8I....
    BBF0: F6 15 00 00 4C 8D 5C 24 30 4C 89 5C 24 28 4C 8D  // ....L.\$0L.\$(L.
    BC00: 4C 24 50 48 8D 54 24 38 41 B8 02 00 00 00 48 8B  // L$PH.T$8A.....H.
    BC10: CB C7 44 24 20 00 02 00 00 FF 15 EB 16 00 00 45  // ..D$ ..........E
    BC20: 33 E4 41 3B C4 8B F8 7C 2D 81 7C 24 58 00 02 00  // 3.A;...|-.|$X...
    BC30: 00 76 07 BF 23 00 00 C0 EB 1C 8B 5C 24 58 48 8D  // .v..#......\$XH.
    BC40: 54 24 5C 48 8B CE 4C 8B C3 E8 94 04 00 00 48 D1  // T$\H..L.......H.
    BC50: EB 66 44 89 24 5E 8B C7 48 8B 8C 24 50 08 00 00  // .fD.$^..H..$P...
    BC60: 48 33 CC E8 7A 03 00 00 48 8B 9C 24 88 08 00 00  // H3..z...H..$....
    BC70: 48 81 C4 60 08 00 00 41 5C 5F 5E C3 CC CC CC CC  // H..`...A\_^.....
    BC80: CC CC 48 89 5C 24 08 48 89 74 24 10 57 48 83 EC  // ..H.\$.H.t$.WH..
    BC90: 40 48 8B D9 48 8D 4C 24 30 49 8B F1 49 8B F8 FF  // @H..H.L$0I..I...
    BCA0: 15 45 15 00 00 8B 06 4C 8D 5C 24 60 48 8D 54 24  // .E.....L.\$`H.T$
    BCB0: 30 4C 8B CF 4C 89 5C 24 28 41 B8 02 00 00 00 48  // 0L..L.\$(A.....H
    BCC0: 8B CB 89 44 24 20 FF 15 3E 16 00 00 45 33 D2 41  // ...D$ ..>...E3.A
    BCD0: 3B C2 44 8B D8 7C 65 8B 4F 08 48 8D 57 0C 45 8B  // ;.D..|e.O.H.W.E.
    BCE0: C2 89 4C 24 60 44 88 54 39 0C 8B 4C 24 60 FF C1  // ..L$`D.T9..L$`..
    BCF0: 44 88 54 39 0C 44 8B 4C 24 60 48 8B CF 41 D1 E9  // D.T9.D.L$`H..A..
    BD00: 74 23 0F B7 02 66 89 01 48 83 C1 02 66 44 39 12  // t#...f..H...fD9.
    BD10: 75 07 66 44 39 52 02 74 0C 41 FF C0 48 83 C2 02  // u.fD9R.t.A..H...
    BD20: 45 3B C1 72 DD 48 8D 41 02 66 44 89 11 66 44 89  // E;.r.H.A.fD..fD.
    BD30: 51 02 48 2B C7 48 D1 F8 03 C0 89 06 48 8B 5C 24  // Q.H+.H......H.\$
    BD40: 50 48 8B 74 24 58 41 8B C3 48 83 C4 40 5F C3 CC  // PH.t$XA..H..@_..
    BD50: CC CC CC CC CC CC 48 89 5C 24 20 55 56 57 48 83  // ......H.\$ UVWH.
    BD60: EC 50 48 8B 05 59 25 00 00 48 33 C4 48 89 44 24  // .PH..Y%..H3.H.D$
    BD70: 48 45 33 C9 49 8B F0 48 8B E9 4D 3B C1 75 11 33  // HE3.I..H..M;.u.3
    BD80: C0 48 8D 74 24 40 8D 58 04 48 89 44 24 40 EB 28  // .H.t$@.X.H.D$@.(
    BD90: 41 8B D9 66 44 39 0E 74 1C 48 83 C9 FF 33 C0 49  // A..fD9.t.H...3.I
    BDA0: 8B F8 66 F2 AF 48 F7 D1 4D 8D 04 48 8D 1C 4B 66  // ..f..H..M..H..Kf
    BDB0: 45 39 08 75 E4 83 C3 02 48 8D 4C 24 30 FF 15 27  // E9.u....H.L$0..'
    BDC0: 14 00 00 48 8D 54 24 30 41 B9 07 00 00 00 45 33  // ...H.T$0A.....E3
    BDD0: C0 48 8B CD 89 5C 24 28 48 89 74 24 20 FF 15 1F  // .H...\$(H.t$ ...
    BDE0: 15 00 00 48 8B 4C 24 48 48 33 CC E8 F2 01 00 00  // ...H.L$HH3......
    BDF0: 48 8B 9C 24 88 00 00 00 48 83 C4 50 5F 5E 5D C3  // H..$....H..P_^].
    BE00: CC CC CC CC CC CC 48 89 5C 24 20 57 48 83 EC 70  // ......H.\$ WH..p
    BE10: 48 8B 05 AB 24 00 00 48 33 C4 48 89 44 24 68 48  // H...$..H3.H.D$hH
    BE20: 8B D9 48 8D 4C 24 38 49 8B F8 FF 15 BA 13 00 00  // ..H.L$8I........
    BE30: 4C 8D 5C 24 30 4C 8D 4C 24 48 4C 89 5C 24 28 48  // L.\$0L.L$HL.\$(H
    BE40: 8D 54 24 38 41 B8 02 00 00 00 48 8B CB C7 44 24  // .T$8A.....H...D$
    BE50: 20 20 00 00 00 FF 15 AF 14 00 00 85 C0 78 06 8B  //   ...........x..
    BE60: 4C 24 54 89 0F 48 8B 4C 24 68 48 33 CC E8 70 01  // L$T..H.L$hH3..p.
    BE70: 00 00 48 8B 9C 24 98 00 00 00 48 83 C4 70 5F C3  // ..H..$....H..p_.
    BE80: CC CC CC CC CC CC 44 89 44 24 18 53 48 83 EC 40  // ......D.D$.SH..@
    BE90: 48 8B D9 48 8D 4C 24 30 FF 15 4C 13 00 00 48 8D  // H..H.L$0..L...H.
    BEA0: 44 24 60 41 B9 04 00 00 00 44 89 4C 24 28 48 8D  // D$`A.....D.L$(H.
    BEB0: 54 24 30 45 33 C0 48 8B CB 48 89 44 24 20 FF 15  // T$0E3.H..H.D$ ..
    BEC0: 3E 14 00 00 48 83 C4 40 5B C3 CC CC CC CC CC CC  // >...H..@[.......
    BED0: CC CC 48 8B C4 48 89 58 08 48 89 68 10 48 89 70  // ..H..H.X.H.h.H.p
    BEE0: 18 48 89 78 20 41 54 48 83 EC 20 48 8B F1 4D 8B  // .H.x ATH.. H..M.
    BEF0: E0 49 83 C8 FF 33 C0 49 8B C8 49 8B FC 66 F2 AF  // .I...3.I..I..f..
    BF00: 8B DA 48 F7 D1 48 8D 51 FF 48 85 F6 74 3F 85 DB  // ..H..H.Q.H..t?..
    BF10: 75 10 49 8B C8 48 8B FE 66 F2 AF 48 F7 D1 48 8D  // u.I..H..f..H..H.
    BF20: 59 FF 3B DA 72 25 33 FF 2B DA 78 1F 8B EA 48 63  // Y.;.r%3.+.x...Hc
    BF30: C7 4C 8B C5 49 8B D4 48 8D 0C 46 FF 15 A1 12 00  // .L..I..H..F.....
    BF40: 00 85 C0 74 23 FF C7 3B FB 7E E3 33 C0 48 8B 5C  // ...t#..;.~.3.H.\
    BF50: 24 30 48 8B 6C 24 38 48 8B 74 24 40 48 8B 7C 24  // $0H.l$8H.t$@H.|$
    BF60: 48 48 83 C4 20 41 5C C3 48 63 C7 48 8D 04 46 EB  // HH.. A\.Hc.H..F.
    BF70: DC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC  // ................
    BF80: CC CC 50 53 51 52 56 57 4C 8B C1 41 8B 00 41 8B  // ..PSQRVWL..A..A.
    BF90: 58 04 41 8B 48 08 41 8B 50 0C 41 8B 70 10 41 8B  // X.A.H.A.P.A.p.A.
    BFA0: 78 14 41 50 EE E6 EB E6 ED E6 EB E6 ED 41 58 41  // x.AP.........AXA
    BFB0: 89 00 41 89 58 04 41 89 48 08 41 89 50 0C 41 89  // ..A.X.A.H.A.P.A.
    BFC0: 70 10 41 89 78 14 5F 5E 5A 59 5B 58 C3 CC CC CC  // p.A.x._^ZY[X....
    BFD0: CC CC CC CC CC CC CC CC 66 66 0F 1F 84 00 00 00  // ........ff......
    BFE0: 00 00 48 3B 0D D9 22 00 00 75 12 48 C1 C1 10 66  // ..H;.."..u.H...f
    BFF0: F7 C1 FF FF 75 03 C2 00 00 48 C1 C9 10 E9 08 00  // ....u....H......
    C000: 00 00 CC CC CC CC CC CC CC CC 48 83 EC 38 4C 8B  // ..........H..8L.
    C010: 0D B5 22 00 00 4C 8B 05 A6 22 00 00 48 83 64 24  // .."..L..."..H.d$
    C020: 20 00 48 8B D1 B9 F7 00 00 00 FF 15 12 13 00 00  //  .H.............
    C030: CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 20  // ..........@SH.. 
    C040: 45 8B 18 48 8B DA 4C 8B C9 41 83 E3 F8 41 F6 00  // E..H..L..A...A..
    C050: 04 4C 8B D1 74 13 41 8B 40 08 4D 63 50 04 F7 D8  // .L..t.A.@.McP...
    C060: 4C 03 D1 48 63 C8 4C 23 D1 49 63 C3 4A 8B 14 10  // L..Hc.L#.Ic.J...
    C070: 48 8B 43 10 8B 48 08 48 03 4B 08 F6 41 03 0F 74  // H.C..H.H.K..A..t
    C080: 0C 0F B6 41 03 83 E0 F0 48 98 4C 03 C8 4C 33 CA  // ...A....H.L..L3.
    C090: 49 8B C9 48 83 C4 20 5B E9 45 FF FF FF CC CC CC  // I..H.. [.E......
    C0A0: CC CC CC CC CC CC 48 83 EC 28 4D 8B 41 38 48 8B  // ......H..(M.A8H.
    C0B0: CA 49 8B D1 E8 81 FF FF FF B8 01 00 00 00 48 83  // .I............H.
    C0C0: C4 28 C3 CC CC CC CC CC CC CC CC CC CC CC CC CC  // .(..............
    C0D0: CC CC CC CC CC CC CC CC 66 66 66 90 66 66 66 90  // ........fff.fff.
    C0E0: 66 90 4C 8B D9 48 2B D1 0F 86 9C 01 00 00 49 83  // f.L..H+.......I.
    C0F0: F8 08 72 62 F6 C1 07 74 37 F6 C1 01 74 0C 8A 04  // ..rb...t7...t...
    C100: 0A 49 FF C8 88 01 48 83 C1 01 F6 C1 02 74 0F 66  // .I....H......t.f
    C110: 8B 04 0A 49 83 E8 02 66 89 01 48 83 C1 02 F6 C1  // ...I...f..H.....
    C120: 04 74 0D 8B 04 0A 49 83 E8 04 89 01 48 83 C1 04  // .t....I.....H...
    C130: 4D 8B C8 49 C1 E9 05 75 50 4D 8B C8 49 C1 E9 03  // M..I...uPM..I...
    C140: 74 14 48 8B 04 0A 48 89 01 48 83 C1 08 49 FF C9  // t.H...H..H...I..
    C150: 75 F0 49 83 E0 07 4D 85 C0 75 07 49 8B C3 C3 66  // u.I...M..u.I...f
    C160: 66 90 8A 04 0A 88 01 48 FF C1 49 FF C8 75 F3 49  // f......H..I..u.I
    C170: 8B C3 C3 66 66 66 90 66 66 66 90 66 66 66 90 66  // ...fff.fff.fff.f
    C180: 66 90 66 66 66 90 66 66 90 49 81 F9 00 08 00 00  // f.fff.ff.I......
    C190: 73 42 48 8B 04 0A 4C 8B 54 0A 08 48 83 C1 20 48  // sBH...L.T..H.. H
    C1A0: 89 41 E0 4C 89 51 E8 48 8B 44 0A F0 4C 8B 54 0A  // .A.L.Q.H.D..L.T.
    C1B0: F8 49 FF C9 48 89 41 F0 4C 89 51 F8 75 D4 49 83  // .I..H.A.L.Q.u.I.
    C1C0: E0 1F E9 72 FF FF FF 66 66 66 90 66 66 66 90 66  // ...r...fff.fff.f
    C1D0: 66 90 66 90 48 81 FA 00 10 00 00 72 B5 B8 20 00  // f.f.H......r.. .
    C1E0: 00 00 0F 18 04 0A 0F 18 44 0A 40 48 81 C1 80 00  // ........D.@H....
    C1F0: 00 00 FF C8 75 EC 48 81 E9 00 10 00 00 B8 40 00  // ....u.H.......@.
    C200: 00 00 4C 8B 0C 0A 4C 8B 54 0A 08 4C 0F C3 09 4C  // ..L...L.T..L...L
    C210: 0F C3 51 08 4C 8B 4C 0A 10 4C 8B 54 0A 18 4C 0F  // ..Q.L.L..L.T..L.
    C220: C3 49 10 4C 0F C3 51 18 4C 8B 4C 0A 20 4C 8B 54  // .I.L..Q.L.L. L.T
    C230: 0A 28 48 83 C1 40 4C 0F C3 49 E0 4C 0F C3 51 E8  // .(H..@L..I.L..Q.
    C240: 4C 8B 4C 0A F0 4C 8B 54 0A F8 FF C8 4C 0F C3 49  // L.L..L.T....L..I
    C250: F0 4C 0F C3 51 F8 75 AA 49 81 E8 00 10 00 00 49  // .L..Q.u.I......I
    C260: 81 F8 00 10 00 00 0F 83 71 FF FF FF F0 80 0C 24  // ........q......$
    C270: 00 E9 BA FE FF FF 66 66 66 90 66 66 66 90 66 66  // ......fff.fff.ff
    C280: 66 90 66 66 66 90 66 66 66 90 74 6F 49 03 C8 49  // f.fff.fff.toI..I
    C290: 83 F8 08 72 61 F6 C1 07 74 36 F6 C1 01 74 0B 48  // ...ra...t6...t.H
    C2A0: FF C9 8A 04 0A 49 FF C8 88 01 F6 C1 02 74 0F 48  // .....I.......t.H
    C2B0: 83 E9 02 66 8B 04 0A 49 83 E8 02 66 89 01 F6 C1  // ...f...I...f....
    C2C0: 04 74 0D 48 83 E9 04 8B 04 0A 49 83 E8 04 89 01  // .t.H......I.....
    C2D0: 4D 8B C8 49 C1 E9 05 75 50 4D 8B C8 49 C1 E9 03  // M..I...uPM..I...
    C2E0: 74 14 48 83 E9 08 48 8B 04 0A 49 FF C9 48 89 01  // t.H...H...I..H..
    C2F0: 75 F0 49 83 E0 07 4D 85 C0 75 07 49 8B C3 C3 66  // u.I...M..u.I...f
    C300: 66 90 48 FF C9 8A 04 0A 49 FF C8 88 01 75 F3 49  // f.H.....I....u.I
    C310: 8B C3 C3 66 66 66 90 66 66 66 90 66 66 66 90 66  // ...fff.fff.fff.f
    C320: 66 90 66 66 66 90 66 66 90 49 81 F9 00 08 00 00  // f.fff.ff.I......
    C330: 73 42 48 8B 44 0A F8 4C 8B 54 0A F0 48 83 E9 20  // sBH.D..L.T..H.. 
    C340: 48 89 41 18 4C 89 51 10 48 8B 44 0A 08 4C 8B 14  // H.A.L.Q.H.D..L..
    C350: 0A 49 FF C9 48 89 41 08 4C 89 11 75 D5 49 83 E0  // .I..H.A.L..u.I..
    C360: 1F E9 73 FF FF FF 66 66 66 90 66 66 66 90 66 66  // ..s...fff.fff.ff
    C370: 66 90 66 90 48 81 FA 00 F0 FF FF 77 B5 B8 20 00  // f.f.H......w.. .
    C380: 00 00 48 81 E9 80 00 00 00 0F 18 04 0A 0F 18 44  // ..H............D
    C390: 0A 40 FF C8 75 EC 48 81 C1 00 10 00 00 B8 40 00  // .@..u.H.......@.
    C3A0: 00 00 4C 8B 4C 0A F8 4C 8B 54 0A F0 4C 0F C3 49  // ..L.L..L.T..L..I
    C3B0: F8 4C 0F C3 51 F0 4C 8B 4C 0A E8 4C 8B 54 0A E0  // .L..Q.L.L..L.T..
    C3C0: 4C 0F C3 49 E8 4C 0F C3 51 E0 4C 8B 4C 0A D8 4C  // L..I.L..Q.L.L..L
    C3D0: 8B 54 0A D0 48 83 E9 40 4C 0F C3 49 18 4C 0F C3  // .T..H..@L..I.L..
    C3E0: 51 10 4C 8B 4C 0A 08 4C 8B 14 0A FF C8 4C 0F C3  // Q.L.L..L.....L..
    C3F0: 49 08 4C 0F C3 11 75 AA 49 81 E8 00 10 00 00 49  // I.L...u.I......I
    C400: 81 F8 00 10 00 00 0F 83 71 FF FF FF F0 80 0C 24  // ........q......$
    C410: 00 E9 BA FE FF FF CC CC CC CC CC CC CC CC CC CC  // ................
    C420: CC CC CC CC CC CC CC CC 66 66 66 90 66 66 66 90  // ........fff.fff.
    C430: 66 90 48 8B C1 49 83 F8 08 72 53 0F B6 D2 49 B9  // f.H..I...rS...I.
    C440: 01 01 01 01 01 01 01 01 49 0F AF D1 49 83 F8 40  // ........I...I..@
    C450: 72 1E 48 F7 D9 83 E1 07 74 06 4C 2B C1 48 89 10  // r.H.....t.L+.H..
    C460: 48 03 C8 4D 8B C8 49 83 E0 3F 49 C1 E9 06 75 39  // H..M..I..?I...u9
    C470: 4D 8B C8 49 83 E0 07 49 C1 E9 03 74 11 66 66 66  // M..I...I...t.fff
    C480: 90 90 48 89 11 48 83 C1 08 49 FF C9 75 F4 4D 85  // ..H..H...I..u.M.
    C490: C0 74 0A 88 11 48 FF C1 49 FF C8 75 F6 C3 66 66  // .t...H..I..u..ff
    C4A0: 66 90 66 66 66 90 66 66 90 49 81 F9 00 04 00 00  // f.fff.ff.I......
    C4B0: 73 30 48 89 11 48 89 51 08 48 89 51 10 48 83 C1  // s0H..H.Q.H.Q.H..
    C4C0: 40 48 89 51 D8 48 89 51 E0 49 FF C9 48 89 51 E8  // @H.Q.H.Q.I..H.Q.
    C4D0: 48 89 51 F0 48 89 51 F8 75 D8 EB 94 66 66 90 66  // H.Q.H.Q.u...ff.f
    C4E0: 66 90 48 0F C3 11 48 0F C3 51 08 48 0F C3 51 10  // f.H...H..Q.H..Q.
    C4F0: 48 83 C1 40 48 0F C3 51 D8 48 0F C3 51 E0 49 FF  // H..@H..Q.H..Q.I.
    C500: C9 48 0F C3 51 E8 48 0F C3 51 F0 48 0F C3 51 F8  // .H..Q.H..Q.H..Q.
    C510: 75 D0 F0 80 0C 24 00 E9 54 FF FF FF CC CC CC CC  // u....$..T.......
    C520: CC CC 4B 00 65 00 51 00 75 00 65 00 72 00 79 00  // ..K.e.Q.u.e.r.y.
    C530: 41 00 63 00 74 00 69 00 76 00 65 00 50 00 72 00  // A.c.t.i.v.e.P.r.
    C540: 6F 00 63 00 65 00 73 00 73 00 6F 00 72 00 43 00  // o.c.e.s.s.o.r.C.
    C550: 6F 00 75 00 6E 00 74 00 00 00 CC CC CC CC CC CC  // o.u.n.t.........
    C560: CC CC 4B 00 65 00 53 00 65 00 74 00 53 00 79 00  // ..K.e.S.e.t.S.y.
    C570: 73 00 74 00 65 00 6D 00 41 00 66 00 66 00 69 00  // s.t.e.m.A.f.f.i.
    C580: 6E 00 69 00 74 00 79 00 54 00 68 00 72 00 65 00  // n.i.t.y.T.h.r.e.
    C590: 61 00 64 00 45 00 78 00 00 00 CC CC CC CC CC CC  // a.d.E.x.........
    C5A0: CC CC 4B 00 65 00 52 00 65 00 76 00 65 00 72 00  // ..K.e.R.e.v.e.r.
    C5B0: 74 00 54 00 6F 00 55 00 73 00 65 00 72 00 41 00  // t.T.o.U.s.e.r.A.
    C5C0: 66 00 66 00 69 00 6E 00 69 00 74 00 79 00 54 00  // f.f.i.n.i.t.y.T.
    C5D0: 68 00 72 00 65 00 61 00 64 00 45 00 78 00 00 00  // h.r.e.a.d.E.x...
    C5E0: CC CC 00 CC CC CC CC CC CC CC CC CC CC CC CC CC  // ................
    C5F0: CC CC 5F 00 4D 00 54 00 50 00 00 00 CC CC CC CC  // .._.M.T.P.......
    C600: CC CC 69 00 50 00 68 00 6F 00 6E 00 65 00 00 00  // ..i.P.h.o.n.e...
    C610: CC CC 69 00 50 00 61 00 64 00 00 00 CC CC CC CC  // ..i.P.a.d.......
    C620: CC CC 6D 00 6F 00 75 00 73 00 65 00 00 00 CC CC  // ..m.o.u.s.e.....
    C630: CC CC 4B 00 65 00 79 00 62 00 6F 00 61 00 72 00  // ..K.e.y.b.o.a.r.
    C640: 64 00 00 00 CC CC CC CC CC CC CC CC CC CC CC CC  // d...............
    C650: CC CC 43 00 6C 00 61 00 73 00 73 00 5F 00 00 00  // ..C.l.a.s.s._...
    C660: CC CC 43 00 4F 00 4D 00 50 00 4F 00 53 00 49 00  // ..C.O.M.P.O.S.I.
    C670: 54 00 45 00 00 00 CC CC CC CC CC CC CC CC CC CC  // T.E.............
    C680: CC CC 5C 00 44 00 72 00 69 00 76 00 65 00 72 00  // ..\.D.r.i.v.e.r.
    C690: 5C 00 55 00 53 00 42 00 53 00 54 00 4F 00 52 00  // \.U.S.B.S.T.O.R.
    C6A0: 00 00 5C 00 44 00 65 00 76 00 69 00 63 00 65 00  // ..\.D.e.v.i.c.e.
    C6B0: 5C 00 55 00 53 00 42 00 46 00 00 00 CC CC CC CC  // \.U.S.B.F.......
    C6C0: CC CC 5C 00 44 00 6F 00 73 00 44 00 65 00 76 00  // ..\.D.o.s.D.e.v.
    C6D0: 69 00 63 00 65 00 73 00 5C 00 55 00 53 00 42 00  // i.c.e.s.\.U.S.B.
    C6E0: 46 00 00 00 CC CC CC CC CC CC CC CC CC CC CC CC  // F...............
    C6F0: CC CC 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
    C700: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
    C710: 6E 00 65 00 5C 00 53 00 79 00 73 00 74 00 65 00  // n.e.\.S.y.s.t.e.
    C720: 6D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // m.\.C.u.r.r.e.n.
    C730: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
    C740: 53 00 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00  // S.e.t.\.C.o.n.t.
    C750: 72 00 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00  // r.o.l.\.C.l.a.s.
    C760: 73 00 5C 00 7B 00 33 00 36 00 46 00 43 00 39 00  // s.\.{.3.6.F.C.9.
    C770: 45 00 36 00 30 00 2D 00 43 00 34 00 36 00 35 00  // E.6.0.-.C.4.6.5.
    C780: 2D 00 31 00 31 00 43 00 46 00 2D 00 38 00 30 00  // -.1.1.C.F.-.8.0.
    C790: 35 00 36 00 2D 00 34 00 34 00 34 00 35 00 35 00  // 5.6.-.4.4.4.5.5.
    C7A0: 33 00 35 00 34 00 30 00 30 00 30 00 30 00 7D 00  // 3.5.4.0.0.0.0.}.
    C7B0: 00 00 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
    C7C0: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
    C7D0: 6E 00 65 00 5C 00 53 00 79 00 73 00 74 00 65 00  // n.e.\.S.y.s.t.e.
    C7E0: 6D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // m.\.C.u.r.r.e.n.
    C7F0: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
    C800: 53 00 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00  // S.e.t.\.C.o.n.t.
    C810: 72 00 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00  // r.o.l.\.C.l.a.s.
    C820: 73 00 5C 00 7B 00 34 00 44 00 33 00 36 00 45 00  // s.\.{.4.D.3.6.E.
    C830: 39 00 36 00 37 00 2D 00 45 00 33 00 32 00 35 00  // 9.6.7.-.E.3.2.5.
    C840: 2D 00 31 00 31 00 43 00 45 00 2D 00 42 00 46 00  // -.1.1.C.E.-.B.F.
    C850: 43 00 31 00 2D 00 30 00 38 00 30 00 30 00 32 00  // C.1.-.0.8.0.0.2.
    C860: 42 00 45 00 31 00 30 00 33 00 31 00 38 00 7D 00  // B.E.1.0.3.1.8.}.
    C870: 00 00 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
    C880: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
    C890: 6E 00 65 00 5C 00 53 00 79 00 73 00 74 00 65 00  // n.e.\.S.y.s.t.e.
    C8A0: 6D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // m.\.C.u.r.r.e.n.
    C8B0: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
    C8C0: 53 00 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00  // S.e.t.\.C.o.n.t.
    C8D0: 72 00 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00  // r.o.l.\.C.l.a.s.
    C8E0: 73 00 5C 00 7B 00 34 00 44 00 33 00 36 00 45 00  // s.\.{.4.D.3.6.E.
    C8F0: 39 00 36 00 35 00 2D 00 45 00 33 00 32 00 35 00  // 9.6.5.-.E.3.2.5.
    C900: 2D 00 31 00 31 00 43 00 45 00 2D 00 42 00 46 00  // -.1.1.C.E.-.B.F.
    C910: 43 00 31 00 2D 00 30 00 38 00 30 00 30 00 32 00  // C.1.-.0.8.0.0.2.
    C920: 42 00 45 00 31 00 30 00 33 00 31 00 38 00 7D 00  // B.E.1.0.3.1.8.}.
    C930: 00 00 55 00 70 00 70 00 65 00 72 00 46 00 69 00  // ..U.p.p.e.r.F.i.
    C940: 6C 00 74 00 65 00 72 00 73 00 00 00 CC CC CC CC  // l.t.e.r.s.......
    C950: CC CC 4C 00 6F 00 77 00 65 00 72 00 46 00 69 00  // ..L.o.w.e.r.F.i.
    C960: 6C 00 74 00 65 00 72 00 73 00 00 00 CC CC CC CC  // l.t.e.r.s.......
    C970: CC CC 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
    C980: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
    C990: 6E 00 65 00 5C 00 53 00 79 00 73 00 74 00 65 00  // n.e.\.S.y.s.t.e.
    C9A0: 6D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // m.\.C.u.r.r.e.n.
    C9B0: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
    C9C0: 53 00 65 00 74 00 5C 00 53 00 65 00 72 00 76 00  // S.e.t.\.S.e.r.v.
    C9D0: 69 00 63 00 65 00 73 00 5C 00 55 00 53 00 42 00  // i.c.e.s.\.U.S.B.
    C9E0: 46 00 00 00 CC CC CC CC CC CC CC CC CC CC CC CC  // F...............
    C9F0: CC CC 55 00 53 00 42 00 46 00 00 00 CC CC CC CC  // ..U.S.B.F.......
    CA00: CC CC 47 00 72 00 6F 00 75 00 70 00 00 00 CC CC  // ..G.r.o.u.p.....
    CA10: CC CC 46 00 69 00 6C 00 74 00 65 00 72 00 00 00  // ..F.i.l.t.e.r...
    CA20: CC CC 53 00 74 00 61 00 72 00 74 00 00 00 CC CC  // ..S.t.a.r.t.....
    CA30: CC CC 54 00 79 00 70 00 65 00 00 00 CC CC CC CC  // ..T.y.p.e.......
    CA40: CC CC 54 00 61 00 67 00 00 00 CC CC CC CC CC CC  // ..T.a.g.........
    CA50: CC CC 5C 00 46 00 69 00 6C 00 65 00 53 00 79 00  // ..\.F.i.l.e.S.y.
    CA60: 73 00 74 00 65 00 6D 00 5C 00 75 00 64 00 66 00  // s.t.e.m.\.u.d.f.
    CA70: 73 00 00 00 CC CC CC CC CC CC CC CC CC CC CC CC  // s...............
    CA80: CC CC 5C 00 46 00 69 00 6C 00 65 00 53 00 79 00  // ..\.F.i.l.e.S.y.
    CA90: 73 00 74 00 65 00 6D 00 5C 00 63 00 64 00 66 00  // s.t.e.m.\.c.d.f.
    CAA0: 73 00 00 00 CC CC CC CC CC CC CC CC CC CC CC CC  // s...............
    CAB0: CC CC 5C 00 46 00 69 00 6C 00 65 00 53 00 79 00  // ..\.F.i.l.e.S.y.
    CAC0: 73 00 74 00 65 00 6D 00 5C 00 46 00 73 00 5F 00  // s.t.e.m.\.F.s._.
    CAD0: 52 00 65 00 63 00 00 00 CC CC CC CC CC CC CC CC  // R.e.c...........
    CAE0: CC CC 5C 00 44 00 65 00 76 00 69 00 63 00 65 00  // ..\.D.e.v.i.c.e.
    CAF0: 5C 00 52 00 61 00 77 00 44 00 69 00 73 00 6B 00  // \.R.a.w.D.i.s.k.
    CB00: 00 00 52 53 44 20 50 54 52 20 00 CC CC CC CC CC  // ..RSD PTR ......
    CB10: CC CC 52 53 44 54 00 CC CC CC CC CC CC CC CC CC  // ..RSDT..........
    CB20: CC CC 46 41 43 50 00 00 00 00 00 00 00 00 00 00  // ..FACP..........
    CB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CBC0: 00 00 58 A2 00 00 00 00 00 00 70 A2 00 00 00 00  // ..X.......p.....
    CBD0: 00 00 88 A2 00 00 00 00 00 00 A2 A2 00 00 00 00  // ................
    CBE0: 00 00 B6 A2 00 00 00 00 00 00 C2 A2 00 00 00 00  // ................
    CBF0: 00 00 DA A2 00 00 00 00 00 00 EC A2 00 00 00 00  // ................
    CC00: 00 00 FA A2 00 00 00 00 00 00 0C A3 00 00 00 00  // ................
    CC10: 00 00 28 A3 00 00 00 00 00 00 3C A3 00 00 00 00  // ..(.......<.....
    CC20: 00 00 4C A3 00 00 00 00 00 00 64 A3 00 00 00 00  // ..L.......d.....
    CC30: 00 00 76 A3 00 00 00 00 00 00 9E A3 00 00 00 00  // ..v.............
    CC40: 00 00 B4 A3 00 00 00 00 00 00 CA A3 00 00 00 00  // ................
    CC50: 00 00 E2 A3 00 00 00 00 00 00 F8 A3 00 00 00 00  // ................
    CC60: 00 00 18 A4 00 00 00 00 00 00 30 A4 00 00 00 00  // ..........0.....
    CC70: 00 00 50 A4 00 00 00 00 00 00 6E A4 00 00 00 00  // ..P.......n.....
    CC80: 00 00 7E A4 00 00 00 00 00 00 96 A4 00 00 00 00  // ..~.............
    CC90: 00 00 AE A4 00 00 00 00 00 00 CA A4 00 00 00 00  // ................
    CCA0: 00 00 DC A4 00 00 00 00 00 00 EE A4 00 00 00 00  // ................
    CCB0: 00 00 FE A4 00 00 00 00 00 00 18 A5 00 00 00 00  // ................
    CCC0: 00 00 38 A5 00 00 00 00 00 00 5A A5 00 00 00 00  // ..8.......Z.....
    CCD0: 00 00 76 A5 00 00 00 00 00 00 82 A5 00 00 00 00  // ..v.............
    CCE0: 00 00 9C A5 00 00 00 00 00 00 AC A5 00 00 00 00  // ................
    CCF0: 00 00 C8 A5 00 00 00 00 00 00 EA A5 00 00 00 00  // ................
    CD00: 00 00 F8 A5 00 00 00 00 00 00 08 A6 00 00 00 00  // ................
    CD10: 00 00 1A A6 00 00 00 00 00 00 24 A6 00 00 00 00  // ..........$.....
    CD20: 00 00 30 A6 00 00 00 00 00 00 3A A6 00 00 00 00  // ..0.......:.....
    CD30: 00 00 4C A6 00 00 00 00 00 00 5C A6 00 00 00 00  // ..L.......\.....
    CD40: 00 00 72 A6 00 00 00 00 00 00 90 A6 00 00 00 00  // ..r.............
    CD50: 00 00 AE A6 00 00 00 00 00 00 BE A6 00 00 00 00  // ................
    CD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CD70: 00 00 00 00 00 00 3B 77 F2 55 00 00 00 00 02 00  // ......;w.U......
    CD80: 00 00 57 00 00 00 18 62 00 00 18 50 00 00 00 00  // ..W....b...P....
    CD90: 00 00 52 00 74 00 6C 00 51 00 75 00 65 00 72 00  // ..R.t.l.Q.u.e.r.
    CDA0: 79 00 4D 00 6F 00 64 00 75 00 6C 00 65 00 49 00  // y.M.o.d.u.l.e.I.
    CDB0: 6E 00 66 00 6F 00 72 00 6D 00 61 00 74 00 69 00  // n.f.o.r.m.a.t.i.
    CDC0: 6F 00 6E 00 00 00 00 00 00 00 32 00 34 00 00 00  // o.n.......2.4...
    CDD0: 00 00 D0 61 01 00 00 00 00 00 52 53 44 53 07 AE  // ...a......RSDS..
    CDE0: CF A4 52 04 AE 4B 97 71 3F 42 6D 06 D3 BE 01 00  // ..R..K.q?Bm.....
    CDF0: 00 00 67 3A 5C 6C 65 6E 6F 76 6F 5C 75 73 62 66  // ..g:\lenovo\usbf
    CE00: 69 6C 74 65 72 5C 74 72 75 6E 6B 5C 73 79 73 5C  // ilter\trunk\sys\
    CE10: 6F 62 6A 66 72 65 5F 77 6E 65 74 5F 61 6D 64 36  // objfre_wnet_amd6
    CE20: 34 5C 61 6D 64 36 34 5C 55 73 62 46 2E 70 64 62  // 4\amd64\UsbF.pdb
    CE30: 00 00 01 04 01 00 04 42 00 00 01 04 01 00 04 62  // .......B.......b
    CE40: 00 00 02 18 0C 00 06 16 00 06 18 64 0B 00 18 54  // ...........d...T
    CE50: 09 00 18 34 08 00 18 32 14 F0 12 E0 10 70 02 06  // ...4...2.....p..
    CE60: 04 00 02 16 00 06 06 32 02 30 01 06 02 00 06 32  // .......2.0.....2
    CE70: 02 30 01 19 0A 00 19 74 09 00 19 64 08 00 19 54  // .0.....t...d...T
    CE80: 07 00 19 34 06 00 19 32 15 C0 01 0A 02 00 0A 72  // ...4...2.......r
    CE90: 06 30 19 19 04 00 0A 34 13 00 0A D2 06 70 E4 4E  // .0.....4.....p.N
    CEA0: 00 00 68 00 00 00 19 1B 06 00 0C 34 11 00 0C 92  // ..h........4....
    CEB0: 08 70 07 60 06 50 E4 4E 00 00 48 00 00 00 01 0F  // .p.`.P.N..H.....
    CEC0: 06 00 0F 64 0B 00 0F 34 0A 00 0F 72 0B 70 19 22  // ...d...4...r.p."
    CED0: 07 00 10 34 11 01 10 01 0C 01 09 C0 07 70 06 60  // ...4.........p.`
    CEE0: 00 00 E4 4E 00 00 50 08 00 00 01 06 02 00 06 B2  // ...N..P.........
    CEF0: 02 30 01 06 02 00 06 92 02 30 01 06 02 00 06 72  // .0.......0.....r
    CF00: 02 30 01 06 02 00 06 52 02 30 19 2D 0B 00 1B 64  // .0.....R.0.-...d
    CF10: 7A 00 1B 54 79 00 1B 34 78 00 1B 01 74 00 14 D0  // z..Ty..4x...t...
    CF20: 12 C0 10 70 00 00 E4 4E 00 00 90 03 00 00 01 0D  // ...p...N........
    CF30: 04 00 0D 34 12 00 0D F2 06 70 01 18 0A 00 18 64  // ...4.....p.....d
    CF40: 0D 00 18 54 0C 00 18 34 0A 00 18 52 14 D0 12 C0  // ...T...4...R....
    CF50: 10 70 01 0A 04 00 0A 34 0C 00 0A 92 06 70 01 0F  // .p.....4.....p..
    CF60: 06 00 0F 64 09 00 0F 34 08 00 0F 52 0B 70 01 14  // ...d...4...R.p..
    CF70: 08 00 14 64 0A 00 14 54 09 00 14 34 08 00 14 52  // ...d...T...4...R
    CF80: 10 70 01 0C 04 00 0C 34 0D 00 0C 92 08 70 01 14  // .p.....4.....p..
    CF90: 08 00 14 64 0E 00 14 54 0D 00 14 34 0C 00 14 92  // ...d...T...4....
    CFA0: 10 70 01 0F 06 00 0F 64 0D 00 0F 34 0C 00 0F 92  // .p.....d...4....
    CFB0: 0B 70 01 0A 04 00 0A 34 06 00 0A 32 06 70 19 32  // .p.....4...2.p.2
    CFC0: 0D 00 20 74 3B 00 20 64 3A 00 20 54 39 00 20 34  // .. t;. d:. T9. 4
    CFD0: 38 00 20 01 34 00 19 F0 17 D0 15 C0 00 00 E4 4E  // 8. .4..........N
    CFE0: 00 00 90 01 00 00 01 18 0A 00 18 64 0A 00 18 54  // ...........d...T
    CFF0: 09 00 18 34 08 00 18 32 14 D0 12 C0 10 70 01 19  // ...4...2.....p..
    D000: 0A 00 19 74 0D 00 19 64 0C 00 19 54 0B 00 19 34  // ...t...d...T...4
    D010: 0A 00 19 72 15 C0 01 10 08 00 10 34 0E 00 10 72  // ...r.......4...r
    D020: 0C D0 0A C0 08 70 07 60 06 50 19 1F 08 00 10 34  // .....p.`.P.....4
    D030: 16 00 10 D2 0C E0 0A C0 08 70 07 60 06 50 E4 4E  // .........p.`.P.N
    D040: 00 00 60 00 00 00 01 1D 0C 00 1D 74 0D 00 1D 64  // ..`........t...d
    D050: 0C 00 1D 54 0B 00 1D 34 0A 00 1D 52 19 E0 17 D0  // ...T...4...R....
    D060: 15 C0 01 1C 0C 00 1C 64 0E 00 1C 54 0D 00 1C 34  // .......d...T...4
    D070: 0C 00 1C 52 18 F0 16 E0 14 D0 12 C0 10 70 01 0F  // ...R.........p..
    D080: 06 00 0F 64 07 00 0F 34 06 00 0F 32 0B 70 01 08  // ...d...4...2.p..
    D090: 04 00 08 D2 04 70 03 60 02 30 00 00 00 00 00 00  // .....p.`.0......
    D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1C0: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00  // ................
    D1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D2C0: 00 00 32 A2 DF 2D 99 2B 00 00 CD 5D 20 D2 66 D4  // ..2..-.+...] .f.
    D2D0: FF FF E0 00 00 00 00 00 00 00 3C 3D 01 00 00 00  // ..........<=....
    D2E0: 00 00 BC 3D 01 00 00 00 00 00 40 3E 01 00 00 00  // ...=......@>....
    D2F0: 00 00 18 3F 01 00 00 00 00 00 78 3F 01 00 00 00  // ...?......x?....
    D300: 00 00 D8 3F 01 00 00 00 00 00 6C 40 01 00 00 00  // ...?......l@....
    D310: 00 00 E4 40 01 00 00 00 00 00 30 41 01 00 00 00  // ...@......0A....
    D320: 00 00 90 41 01 00 00 00 00 00 24 42 01 00 00 00  // ...A......$B....
    D330: 00 00 84 42 01 00 00 00 00 00 E4 42 01 00 00 00  // ...B.......B....
    D340: 00 00 1C 43 01 00 00 00 00 00 80 43 01 00 00 00  // ...C.......C....
    D350: 00 00 D4 43 01 00 00 00 00 00 58 44 01 00 00 00  // ...C......XD....
    D360: 00 00 B0 44 01 00 00 00 00 00 34 45 01 00 00 00  // ...D......4E....
    D370: 00 00 8C 45 01 00 00 00 00 00 3C 46 01 00 00 00  // ...E......<F....
    D380: 00 00 EC 46 01 00 00 00 00 00 44 47 01 00 00 00  // ...F......DG....
    D390: 00 00 9C 47 01 00 00 00 00 00 80 48 01 00 00 00  // ...G.......H....
    D3A0: 00 00 DC 48 01 00 00 00 00 00 38 49 01 00 00 00  // ...H......8I....
    D3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D3C0: 00 00 08 10 00 00 80 10 00 00 BC 64 00 00 88 10  // ...........d....
    D3D0: 00 00 7F 11 00 00 C0 63 00 00 88 11 00 00 50 15  // .......c......P.
    D3E0: 00 00 FC 63 00 00 58 15 00 00 7D 15 00 00 70 62  // ...c..X...}...pb
    D3F0: 00 00 84 15 00 00 29 16 00 00 E0 63 00 00 30 16  // ......)....c..0.
    D400: 00 00 C3 16 00 00 AC 63 00 00 E8 16 00 00 E3 17  // .......c........
    D410: 00 00 BC 64 00 00 EC 17 00 00 2C 18 00 00 70 62  // ...d......,...pb
    D420: 00 00 34 18 00 00 B6 18 00 00 F0 63 00 00 BC 18  // ..4........c....
    D430: 00 00 7D 19 00 00 F0 63 00 00 84 19 00 00 2C 1B  // ..}....c......,.
    D440: 00 00 78 63 00 00 34 1B 00 00 55 1B 00 00 A8 62  // ..xc..4...U....b
    D450: 00 00 5C 1B 00 00 DA 1E 00 00 A0 64 00 00 E0 1E  // ..\........d....
    D460: 00 00 AC 1F 00 00 9C 63 00 00 B4 1F 00 00 0E 21  // .......c.......!
    D470: 00 00 A8 62 00 00 14 21 00 00 6F 21 00 00 F0 63  // ...b...!..o!...c
    D480: 00 00 78 21 00 00 80 24 00 00 68 64 00 00 94 24  // ..x!...$..hd...$
    D490: 00 00 3B 26 00 00 CC 64 00 00 78 26 00 00 4F 28  // ..;&...d..x&..O(
    D4A0: 00 00 84 64 00 00 84 28 00 00 EE 29 00 00 B0 62  // ...d...(...)...b
    D4B0: 00 00 F4 29 00 00 78 2B 00 00 BC 64 00 00 78 2C  // ...)..x+...d..x,
    D4C0: 00 00 8E 2D 00 00 BC 64 00 00 94 2D 00 00 6D 2E  // ...-...d...-..m.
    D4D0: 00 00 BC 64 00 00 74 2E 00 00 59 2F 00 00 F0 63  // ...d..t...Y/...c
    D4E0: 00 00 60 2F 00 00 2C 30 00 00 E0 63 00 00 34 30  // ..`/..,0...c..40
    D4F0: 00 00 EF 30 00 00 6C 63 00 00 F8 30 00 00 A0 31  // ...0..lc...0...1
    D500: 00 00 F0 63 00 00 A8 31 00 00 F7 31 00 00 A8 62  // ...c...1...1...b
    D510: 00 00 00 32 00 00 C5 32 00 00 BC 64 00 00 CC 32  // ...2...2...d...2
    D520: 00 00 19 37 00 00 48 63 00 00 20 37 00 00 42 39  // ...7..Hc.. 7..B9
    D530: 00 00 54 64 00 00 48 39 00 00 38 3A 00 00 CC 63  // ..Td..H9..8:...c
    D540: 00 00 40 3A 00 00 9D 3B 00 00 90 63 00 00 A4 3B  // ..@:...;...c...;
    D550: 00 00 16 3C 00 00 A8 62 00 00 1C 3C 00 00 36 3D  // ...<...b...<..6=
    D560: 00 00 BC 64 00 00 3C 3D 00 00 B6 3D 00 00 38 63  // ...d..<=...=..8c
    D570: 00 00 BC 3D 00 00 38 3E 00 00 38 63 00 00 40 3E  // ...=..8>..8c..@>
    D580: 00 00 0F 3F 00 00 3C 64 00 00 18 3F 00 00 71 3F  // ...?..<d...?..q?
    D590: 00 00 40 63 00 00 78 3F 00 00 D1 3F 00 00 40 63  // ..@c..x?...?..@c
    D5A0: 00 00 D8 3F 00 00 64 40 00 00 30 63 00 00 6C 40  // ...?..d@..0c..l@
    D5B0: 00 00 DB 40 00 00 38 63 00 00 E4 40 00 00 2A 41  // ...@..8c...@..*A
    D5C0: 00 00 70 62 00 00 30 41 00 00 89 41 00 00 40 63  // ..pb..0A...A..@c
    D5D0: 00 00 90 41 00 00 1E 42 00 00 30 63 00 00 24 42  // ...A...B..0c..$B
    D5E0: 00 00 7C 42 00 00 70 62 00 00 84 42 00 00 DC 42  // ..|B..pb...B...B
    D5F0: 00 00 70 62 00 00 E4 42 00 00 13 43 00 00 A8 62  // ..pb...B...C...b
    D600: 00 00 1C 43 00 00 7A 43 00 00 40 63 00 00 80 43  // ...C..zC..@c...C
    D610: 00 00 CE 43 00 00 70 62 00 00 D4 43 00 00 50 44  // ...C..pb...C..PD
    D620: 00 00 38 63 00 00 58 44 00 00 A9 44 00 00 70 62  // ..8c..XD...D..pb
    D630: 00 00 B0 44 00 00 2C 45 00 00 38 63 00 00 34 45  // ...D..,E..8c..4E
    D640: 00 00 85 45 00 00 70 62 00 00 8C 45 00 00 34 46  // ...E..pb...E..4F
    D650: 00 00 30 63 00 00 3C 46 00 00 E4 46 00 00 30 63  // ..0c..<F...F..0c
    D660: 00 00 EC 46 00 00 3D 47 00 00 70 62 00 00 44 47  // ...F..=G..pb..DG
    D670: 00 00 95 47 00 00 70 62 00 00 9C 47 00 00 79 48  // ...G..pb...G..yH
    D680: 00 00 24 64 00 00 80 48 00 00 D4 48 00 00 70 62  // ..$d...H...H..pb
    D690: 00 00 DC 48 00 00 30 49 00 00 70 62 00 00 38 49  // ...H..0I..pb..8I
    D6A0: 00 00 8C 49 00 00 70 62 00 00 94 49 00 00 EF 49  // ...I..pb...I...I
    D6B0: 00 00 28 63 00 00 F8 49 00 00 BA 4A 00 00 0C 63  // ..(c...I...J...c
    D6C0: 00 00 C0 4A 00 00 8D 4B 00 00 FC 62 00 00 94 4B  // ...J...K...b...K
    D6D0: 00 00 3E 4C 00 00 E4 62 00 00 44 4C 00 00 BE 4C  // ..>L...b..DL...L
    D6E0: 00 00 D0 62 00 00 C4 4C 00 00 08 4D 00 00 C8 62  // ...b...L...M...b
    D6F0: 00 00 10 4D 00 00 AF 4D 00 00 B0 62 00 00 48 4E  // ...M...M...b..HN
    D700: 00 00 6F 4E 00 00 78 62 00 00 78 4E 00 00 DB 4E  // ..oN..xb..xN...N
    D710: 00 00 A8 62 00 00 E4 4E 00 00 01 4F 00 00 70 62  // ...b...N...O..pb
    D720: 00 00 08 90 00 00 ED 90 00 00 80 62 00 00 F4 90  // ...........b....
    D730: 00 00 4C 91 00 00 9C 62 00 00 64 A0 00 00 82 A0  // ..L....b..d.....
    D740: 00 00 70 62 00 00 00 00 00 00 00 00 00 00 00 00  // ..pb............
    D750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D7C0: 00 00 00 00 00 00 00 00 00 00 48 89 5C 24 08 48  // ..........H.\$.H
    D7D0: 89 6C 24 10 48 89 74 24 20 57 41 56 41 57 48 83  // .l$.H.t$ WAVAWH.
    D7E0: EC 20 41 8B F9 49 8B F0 44 8B F2 44 8B F9 4D 85  // . A..I..D..D..M.
    D7F0: C0 75 0F 45 85 C9 74 0A B8 0D 00 00 C0 E9 94 00  // .u.E..t.........
    D800: 00 00 41 8D 69 10 B9 01 00 00 00 41 B8 41 75 78  // ..A.i......A.Aux
    D810: 4B 8B D5 FF 15 31 D1 FF FF 48 8B D8 48 85 C0 74  // K....1...H..H..t
    D820: 6E 4C 8D 4C 24 50 44 8B C5 48 8B D0 B9 4C 00 00  // nL.L$PD..H...L..
    D830: 00 89 78 0C 44 89 38 C7 40 04 01 00 00 00 44 89  // ..x.D.8.@.....D.
    D840: 70 08 FF 15 12 D1 FF FF 8B F8 85 C0 79 07 3D 23  // p...........y.=#
    D850: 00 00 C0 75 0F 48 8B 44 24 60 48 85 C0 74 05 8B  // ...u.H.D$`H..t..
    D860: 4B 0C 89 08 85 FF 78 1A 48 85 F6 74 15 44 8B 44  // K.....x.H..t.D.D
    D870: 24 50 48 8D 53 10 48 8B CE 41 83 C0 F0 E8 60 BE  // $PH.S.H..A....`.
    D880: FF FF 33 D2 48 8B CB FF 15 4D CF FF FF EB 05 BF  // ..3.H....M......
    D890: 9A 00 00 C0 8B C7 48 8B 5C 24 40 48 8B 6C 24 48  // ......H.\$@H.l$H
    D8A0: 48 8B 74 24 58 48 83 C4 20 41 5F 41 5E 5F C3 CC  // H.t$XH.. A_A^_..
    D8B0: CC CC CC CC CC CC 40 53 48 83 EC 20 33 DB 39 1D  // ......@SH.. 3.9.
    D8C0: FE E0 FF FF 75 40 48 8D 4C 24 30 45 33 C9 45 33  // ....u@H.L$0E3.E3
    D8D0: C0 33 D2 FF 15 79 D0 FF FF 83 7C 24 30 05 73 07  // .3...y....|$0.s.
    D8E0: BB BB 00 00 C0 EB 1F 48 8D 0D DC D0 FF FF FF 15  // .......H........
    D8F0: 16 CF FF FF B9 01 00 00 00 48 89 05 CA E0 FF FF  // .........H......
    D900: 87 0D BC E0 FF FF 8B C3 48 83 C4 20 5B C3 00 00  // ........H.. [...
    D910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D9C0: 00 00 00 00 00 00 00 00 00 00 48 8B 05 F1 D0 FF  // ..........H.....
    D9D0: FF 48 BA 32 A2 DF 2D 99 2B 00 00 48 85 C0 74 05  // .H.2..-.+..H..t.
    D9E0: 48 3B C2 75 2F 48 8D 0D D6 D0 FF FF 48 B8 20 03  // H;.u/H......H. .
    D9F0: 00 00 80 F7 FF FF 48 8B 00 48 33 C1 48 B9 FF FF  // ......H..H3.H...
    DA00: FF FF FF FF 00 00 48 23 C1 48 0F 44 C2 48 89 05  // ......H#.H.D.H..
    DA10: AE D0 FF FF 48 F7 D0 48 89 05 AC D0 FF FF C3 CC  // ....H..H........
    DA20: CC CC CC CC CC CC 48 83 EC 28 4C 8B C2 4C 8B C9  // ......H..(L..L..
    DA30: E8 95 FF FF FF 49 8B D0 49 8B C9 48 83 C4 28 E9  // .....I..I..H..(.
    DA40: 12 84 FF FF CC CC B0 A0 00 00 00 00 00 00 00 00  // ................
    DA50: 00 00 82 A6 00 00 00 60 00 00 00 00 00 00 00 00  // .......`........
    DA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    DA70: 00 00 58 A2 00 00 00 00 00 00 70 A2 00 00 00 00  // ..X.......p.....
    DA80: 00 00 88 A2 00 00 00 00 00 00 A2 A2 00 00 00 00  // ................
    DA90: 00 00 B6 A2 00 00 00 00 00 00 C2 A2 00 00 00 00  // ................
    DAA0: 00 00 DA A2 00 00 00 00 00 00 EC A2 00 00 00 00  // ................
    DAB0: 00 00 FA A2 00 00 00 00 00 00 0C A3 00 00 00 00  // ................
    DAC0: 00 00 28 A3 00 00 00 00 00 00 3C A3 00 00 00 00  // ..(.......<.....
    DAD0: 00 00 4C A3 00 00 00 00 00 00 64 A3 00 00 00 00  // ..L.......d.....
    DAE0: 00 00 76 A3 00 00 00 00 00 00 9E A3 00 00 00 00  // ..v.............
    DAF0: 00 00 B4 A3 00 00 00 00 00 00 CA A3 00 00 00 00  // ................
    DB00: 00 00 E2 A3 00 00 00 00 00 00 F8 A3 00 00 00 00  // ................
    DB10: 00 00 18 A4 00 00 00 00 00 00 30 A4 00 00 00 00  // ..........0.....
    DB20: 00 00 50 A4 00 00 00 00 00 00 6E A4 00 00 00 00  // ..P.......n.....
    DB30: 00 00 7E A4 00 00 00 00 00 00 96 A4 00 00 00 00  // ..~.............
    DB40: 00 00 AE A4 00 00 00 00 00 00 CA A4 00 00 00 00  // ................
    DB50: 00 00 DC A4 00 00 00 00 00 00 EE A4 00 00 00 00  // ................
    DB60: 00 00 FE A4 00 00 00 00 00 00 18 A5 00 00 00 00  // ................
    DB70: 00 00 38 A5 00 00 00 00 00 00 5A A5 00 00 00 00  // ..8.......Z.....
    DB80: 00 00 76 A5 00 00 00 00 00 00 82 A5 00 00 00 00  // ..v.............
    DB90: 00 00 9C A5 00 00 00 00 00 00 AC A5 00 00 00 00  // ................
    DBA0: 00 00 C8 A5 00 00 00 00 00 00 EA A5 00 00 00 00  // ................
    DBB0: 00 00 F8 A5 00 00 00 00 00 00 08 A6 00 00 00 00  // ................
    DBC0: 00 00 1A A6 00 00 00 00 00 00 24 A6 00 00 00 00  // ..........$.....
    DBD0: 00 00 30 A6 00 00 00 00 00 00 3A A6 00 00 00 00  // ..0.......:.....
    DBE0: 00 00 4C A6 00 00 00 00 00 00 5C A6 00 00 00 00  // ..L.......\.....
    DBF0: 00 00 72 A6 00 00 00 00 00 00 90 A6 00 00 00 00  // ..r.............
    DC00: 00 00 AE A6 00 00 00 00 00 00 BE A6 00 00 00 00  // ................
    DC10: 00 00 00 00 00 00 00 00 00 00 46 00 45 78 41 6C  // ..........F.ExAl
    DC20: 6C 6F 63 61 74 65 50 6F 6F 6C 57 69 74 68 54 61  // locatePoolWithTa
    DC30: 67 00 2B 01 49 6F 41 63 71 75 69 72 65 52 65 6D  // g.+.IoAcquireRem
    DC40: 6F 76 65 4C 6F 63 6B 45 78 00 4A 02 4B 65 51 75  // oveLockEx.J.KeQu
    DC50: 65 72 79 41 63 74 69 76 65 50 72 6F 63 65 73 73  // eryActiveProcess
    DC60: 6F 72 73 00 58 00 45 78 46 72 65 65 50 6F 6F 6C  // ors.X.ExFreePool
    DC70: 57 69 74 68 54 61 67 00 AC 05 5F 77 63 73 6E 69  // WithTag..._wcsni
    DC80: 63 6D 70 00 3E 04 52 74 6C 49 6E 69 74 55 6E 69  // cmp.>.RtlInitUni
    DC90: 63 6F 64 65 53 74 72 69 6E 67 00 00 5F 01 49 6F  // codeString.._.Io
    DCA0: 44 65 6C 65 74 65 44 65 76 69 63 65 00 00 78 02  // DeleteDevice..x.
    DCB0: 4B 65 53 65 74 45 76 65 6E 74 00 00 73 01 49 6F  // KeSetEvent..s.Io
    DCC0: 46 72 65 65 57 6F 72 6B 49 74 65 6D 00 00 C2 02  // FreeWorkItem....
    DCD0: 4D 6D 47 65 74 53 79 73 74 65 6D 52 6F 75 74 69  // MmGetSystemRouti
    DCE0: 6E 65 41 64 64 72 65 73 73 00 2E 02 4B 65 49 6E  // neAddress...KeIn
    DCF0: 69 74 69 61 6C 69 7A 65 45 76 65 6E 74 00 36 04  // itializeEvent.6.
    DD00: 52 74 6C 47 65 74 56 65 72 73 69 6F 6E 00 B4 01  // RtlGetVersion...
    DD10: 49 6F 52 65 6C 65 61 73 65 52 65 6D 6F 76 65 4C  // IoReleaseRemoveL
    DD20: 6F 63 6B 45 78 00 62 01 49 6F 44 65 74 61 63 68  // ockEx.b.IoDetach
    DD30: 44 65 76 69 63 65 00 00 AA 01 49 6F 52 65 67 69  // Device....IoRegi
    DD40: 73 74 65 72 42 6F 6F 74 44 72 69 76 65 72 52 65  // sterBootDriverRe
    DD50: 69 6E 69 74 69 61 6C 69 7A 61 74 69 6F 6E 00 00  // initialization..
    DD60: 34 01 49 6F 41 6C 6C 6F 63 61 74 65 57 6F 72 6B  // 4.IoAllocateWork
    DD70: 49 74 65 6D 00 00 64 03 50 6F 53 74 61 72 74 4E  // Item..d.PoStartN
    DD80: 65 78 74 50 6F 77 65 72 49 72 70 00 4F 02 4B 65  // extPowerIrp.O.Ke
    DD90: 51 75 65 72 79 54 69 6D 65 49 6E 63 72 65 6D 65  // QueryTimeIncreme
    DDA0: 6E 74 00 00 F6 01 49 6F 66 43 6F 6D 70 6C 65 74  // nt....IofComplet
    DDB0: 65 52 65 71 75 65 73 74 00 00 B3 01 49 6F 52 65  // eRequest....IoRe
    DDC0: 6C 65 61 73 65 52 65 6D 6F 76 65 4C 6F 63 6B 41  // leaseRemoveLockA
    DDD0: 6E 64 57 61 69 74 45 78 00 00 94 02 4B 65 57 61  // ndWaitEx....KeWa
    DDE0: 69 74 46 6F 72 53 69 6E 67 6C 65 4F 62 6A 65 63  // itForSingleObjec
    DDF0: 74 00 75 01 49 6F 47 65 74 41 74 74 61 63 68 65  // t.u.IoGetAttache
    DE00: 64 44 65 76 69 63 65 52 65 66 65 72 65 6E 63 65  // dDeviceReference
    DE10: 00 00 39 01 49 6F 41 74 74 61 63 68 44 65 76 69  // ..9.IoAttachDevi
    DE20: 63 65 54 6F 44 65 76 69 63 65 53 74 61 63 6B 00  // ceToDeviceStack.
    DE30: 58 03 50 6F 43 61 6C 6C 44 72 69 76 65 72 00 00  // X.PoCallDriver..
    DE40: 55 01 49 6F 43 72 65 61 74 65 53 79 6D 62 6F 6C  // U.IoCreateSymbol
    DE50: 69 63 4C 69 6E 6B 00 00 52 03 4F 62 66 44 65 72  // icLink..R.ObfDer
    DE60: 65 66 65 72 65 6E 63 65 4F 62 6A 65 63 74 00 00  // eferenceObject..
    DE70: 8E 01 49 6F 49 6E 69 74 69 61 6C 69 7A 65 52 65  // ..IoInitializeRe
    DE80: 6D 6F 76 65 4C 6F 63 6B 45 78 00 00 4C 01 49 6F  // moveLockEx..L.Io
    DE90: 43 72 65 61 74 65 44 65 76 69 63 65 00 00 A2 01  // CreateDevice....
    DEA0: 49 6F 51 75 65 75 65 57 6F 72 6B 49 74 65 6D 00  // IoQueueWorkItem.
    DEB0: F5 01 49 6F 66 43 61 6C 6C 44 72 69 76 65 72 00  // ..IofCallDriver.
    DEC0: 85 01 49 6F 47 65 74 4C 6F 77 65 72 44 65 76 69  // ..IoGetLowerDevi
    DED0: 63 65 4F 62 6A 65 63 74 00 00 3C 01 49 6F 42 75  // ceObject..<.IoBu
    DEE0: 69 6C 64 44 65 76 69 63 65 49 6F 43 6F 6E 74 72  // ildDeviceIoContr
    DEF0: 6F 6C 52 65 71 75 65 73 74 00 3A 01 49 6F 41 74  // olRequest.:.IoAt
    DF00: 74 61 63 68 44 65 76 69 63 65 54 6F 44 65 76 69  // tachDeviceToDevi
    DF10: 63 65 53 74 61 63 6B 53 61 66 65 00 7D 01 49 6F  // ceStackSafe.}.Io
    DF20: 47 65 74 44 65 76 69 63 65 4F 62 6A 65 63 74 50  // GetDeviceObjectP
    DF30: 6F 69 6E 74 65 72 00 00 71 01 49 6F 46 72 65 65  // ointer..q.IoFree
    DF40: 49 72 70 00 E4 03 52 74 6C 43 6F 6D 70 61 72 65  // Irp...RtlCompare
    DF50: 55 6E 69 63 6F 64 65 53 74 72 69 6E 67 00 32 01  // UnicodeString.2.
    DF60: 49 6F 41 6C 6C 6F 63 61 74 65 49 72 70 00 61 00  // IoAllocateIrp.a.
    DF70: 45 78 49 6E 69 74 69 61 6C 69 7A 65 52 65 73 6F  // ExInitializeReso
    DF80: 75 72 63 65 4C 69 74 65 00 00 AE 01 49 6F 52 65  // urceLite....IoRe
    DF90: 67 69 73 74 65 72 46 73 52 65 67 69 73 74 72 61  // gisterFsRegistra
    DFA0: 74 69 6F 6E 43 68 61 6E 67 65 00 00 2C 05 5A 77  // tionChange..,.Zw
    DFB0: 43 72 65 61 74 65 4B 65 79 00 8A 05 5A 77 53 65  // CreateKey...ZwSe
    DFC0: 74 56 61 6C 75 65 4B 65 79 00 70 05 5A 77 51 75  // tValueKey.p.ZwQu
    DFD0: 65 72 79 56 61 6C 75 65 4B 65 79 00 25 05 5A 77  // eryValueKey.%.Zw
    DFE0: 43 6C 6F 73 65 00 4F 05 5A 77 4F 70 65 6E 4B 65  // Close.O.ZwOpenKe
    DFF0: 79 00 CA 05 73 74 72 6E 63 6D 70 00 EE 02 4D 6D  // y...strncmp...Mm
    E000: 55 6E 6D 61 70 49 6F 53 70 61 63 65 00 00 D0 02  // UnmapIoSpace....
    E010: 4D 6D 4D 61 70 49 6F 53 70 61 63 65 00 00 7E 01  // MmMapIoSpace..~.
    E020: 49 6F 47 65 74 44 65 76 69 63 65 50 72 6F 70 65  // IoGetDevicePrope
    E030: 72 74 79 00 13 02 4B 65 42 75 67 43 68 65 63 6B  // rty...KeBugCheck
    E040: 45 78 00 00 6E 74 6F 73 6B 72 6E 6C 2E 65 78 65  // Ex..ntoskrnl.exe
    E050: 00 00 45 00 45 78 41 6C 6C 6F 63 61 74 65 50 6F  // ..E.ExAllocatePo
    E060: 6F 6C 57 69 74 68 51 75 6F 74 61 54 61 67 00 00  // olWithQuotaTag..
    E070: A0 03 50 73 47 65 74 56 65 72 73 69 6F 6E 00 00  // ..PsGetVersion..
    E080: 6F 05 5A 77 51 75 65 72 79 53 79 73 74 65 6D 49  // o.ZwQuerySystemI
    E090: 6E 66 6F 72 6D 61 74 69 6F 6E 00 00 00 00 00 00  // nformation......
    E0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E1D0: 01 00 10 00 00 00 18 00 00 80 00 00 00 00 00 00  // ................
    E1E0: 00 00 00 00 00 00 00 00 01 00 01 00 00 00 30 00  // ..............0.
    E1F0: 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E200: 01 00 09 04 00 00 48 00 00 00 60 B0 00 00 DC 02  // ......H...`.....
    E210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E220: 00 00 DC 02 34 00 00 00 56 00 53 00 5F 00 56 00  // ....4...V.S._.V.
    E230: 45 00 52 00 53 00 49 00 4F 00 4E 00 5F 00 49 00  // E.R.S.I.O.N._.I.
    E240: 4E 00 46 00 4F 00 00 00 00 00 BD 04 EF FE 00 00  // N.F.O...........
    E250: 01 00 00 00 01 00 0F 00 01 00 01 00 06 00 01 40  // ...............@
    E260: B0 1D 3F 00 00 00 08 00 00 00 04 00 04 00 03 00  // ..?.............
    E270: 00 00 07 00 00 00 00 00 00 00 00 00 00 00 3A 02  // ..............:.
    E280: 00 00 01 00 53 00 74 00 72 00 69 00 6E 00 67 00  // ....S.t.r.i.n.g.
    E290: 46 00 69 00 6C 00 65 00 49 00 6E 00 66 00 6F 00  // F.i.l.e.I.n.f.o.
    E2A0: 00 00 16 02 00 00 01 00 30 00 34 00 30 00 39 00  // ........0.4.0.9.
    E2B0: 30 00 34 00 42 00 30 00 00 00 2E 00 07 00 01 00  // 0.4.B.0.........
    E2C0: 43 00 6F 00 6D 00 70 00 61 00 6E 00 79 00 4E 00  // C.o.m.p.a.n.y.N.
    E2D0: 61 00 6D 00 65 00 00 00 00 00 4C 00 65 00 6E 00  // a.m.e.....L.e.n.
    E2E0: 6F 00 76 00 6F 00 00 00 00 00 3E 00 0B 00 01 00  // o.v.o.....>.....
    E2F0: 46 00 69 00 6C 00 65 00 44 00 65 00 73 00 63 00  // F.i.l.e.D.e.s.c.
    E300: 72 00 69 00 70 00 74 00 69 00 6F 00 6E 00 00 00  // r.i.p.t.i.o.n...
    E310: 00 00 55 00 73 00 62 00 20 00 46 00 69 00 6C 00  // ..U.s.b. .F.i.l.
    E320: 74 00 65 00 72 00 00 00 00 00 54 00 1A 00 01 00  // t.e.r.....T.....
    E330: 46 00 69 00 6C 00 65 00 56 00 65 00 72 00 73 00  // F.i.l.e.V.e.r.s.
    E340: 69 00 6F 00 6E 00 00 00 00 00 31 00 2C 00 30 00  // i.o.n.....1.,.0.
    E350: 2C 00 31 00 2C 00 31 00 35 00 20 00 62 00 75 00  // ,.1.,.1.5. .b.u.
    E360: 69 00 6C 00 74 00 20 00 62 00 79 00 3A 00 20 00  // i.l.t. .b.y.:. .
    E370: 57 00 69 00 6E 00 44 00 44 00 4B 00 00 00 34 00  // W.i.n.D.D.K...4.
    E380: 0A 00 01 00 49 00 6E 00 74 00 65 00 72 00 6E 00  // ....I.n.t.e.r.n.
    E390: 61 00 6C 00 4E 00 61 00 6D 00 65 00 00 00 55 00  // a.l.N.a.m.e...U.
    E3A0: 73 00 62 00 46 00 69 00 6C 00 74 00 65 00 72 00  // s.b.F.i.l.t.e.r.
    E3B0: 00 00 54 00 18 00 01 00 4C 00 65 00 67 00 61 00  // ..T.....L.e.g.a.
    E3C0: 6C 00 43 00 6F 00 70 00 79 00 72 00 69 00 67 00  // l.C.o.p.y.r.i.g.
    E3D0: 68 00 74 00 00 00 43 00 6F 00 70 00 79 00 72 00  // h.t...C.o.p.y.r.
    E3E0: 69 00 67 00 68 00 74 00 20 00 28 00 43 00 29 00  // i.g.h.t. .(.C.).
    E3F0: 20 00 32 00 30 00 31 00 33 00 2D 00 32 00 30 00  //  .2.0.1.3.-.2.0.
    E400: 31 00 34 00 00 00 44 00 0E 00 01 00 4F 00 72 00  // 1.4...D.....O.r.
    E410: 69 00 67 00 69 00 6E 00 61 00 6C 00 46 00 69 00  // i.g.i.n.a.l.F.i.
    E420: 6C 00 65 00 6E 00 61 00 6D 00 65 00 00 00 55 00  // l.e.n.a.m.e...U.
    E430: 73 00 62 00 46 00 69 00 6C 00 74 00 65 00 72 00  // s.b.F.i.l.t.e.r.
    E440: 2E 00 73 00 79 00 73 00 00 00 36 00 0B 00 01 00  // ..s.y.s...6.....
    E450: 50 00 72 00 6F 00 64 00 75 00 63 00 74 00 4E 00  // P.r.o.d.u.c.t.N.
    E460: 61 00 6D 00 65 00 00 00 00 00 55 00 73 00 62 00  // a.m.e.....U.s.b.
    E470: 20 00 46 00 69 00 6C 00 74 00 65 00 72 00 00 00  //  .F.i.l.t.e.r...
    E480: 00 00 36 00 09 00 01 00 50 00 72 00 6F 00 64 00  // ..6.....P.r.o.d.
    E490: 75 00 63 00 74 00 56 00 65 00 72 00 73 00 69 00  // u.c.t.V.e.r.s.i.
    E4A0: 6F 00 6E 00 00 00 31 00 2C 00 30 00 2C 00 31 00  // o.n...1.,.0.,.1.
    E4B0: 2C 00 31 00 35 00 00 00 00 00 44 00 00 00 01 00  // ,.1.5.....D.....
    E4C0: 56 00 61 00 72 00 46 00 69 00 6C 00 65 00 49 00  // V.a.r.F.i.l.e.I.
    E4D0: 6E 00 66 00 6F 00 00 00 00 00 24 00 04 00 00 00  // n.f.o.....$.....
    E4E0: 54 00 72 00 61 00 6E 00 73 00 6C 00 61 00 74 00  // T.r.a.n.s.l.a.t.
    E4F0: 69 00 6F 00 6E 00 00 00 00 00 09 04 B0 04 00 00  // i.o.n...........
    E500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E5C0: 00 00 00 60 00 00 0C 00 00 00 10 A2 00 00 00 70  // ...`...........p
    E5D0: 00 00 40 00 00 00 18 A1 20 A1 28 A1 30 A1 38 A1  // ..@..... .(.0.8.
    E5E0: 40 A1 48 A1 50 A1 58 A1 60 A1 68 A1 70 A1 78 A1  // @.H.P.X.`.h.p.x.
    E5F0: 80 A1 88 A1 90 A1 98 A1 A0 A1 A8 A1 B0 A1 B8 A1  // ................
    E600: C0 A1 C8 A1 D0 A1 D8 A1 E0 A1 E8 A1 00 00 00 00  // ................
    E610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    E7C0: 00 00 F8 22 00 00 00 02 02 00 30 82 22 E8 06 09  // ..."......0."...
    E7D0: 2A 86 48 86 F7 0D 01 07 02 A0 82 22 D9 30 82 22  // *.H........".0."
    E7E0: D5 02 01 01 31 0B 30 09 06 05 2B 0E 03 02 1A 05  // ....1.0...+.....
    E7F0: 00 30 68 06 0A 2B 06 01 04 01 82 37 02 01 04 A0  // .0h..+.....7....
    E800: 5A 30 58 30 33 06 0A 2B 06 01 04 01 82 37 02 01  // Z0X03..+.....7..
    E810: 0F 30 25 03 01 00 A0 20 A2 1E 80 1C 00 3C 00 3C  // .0%.... .....<.<
    E820: 00 3C 00 4F 00 62 00 73 00 6F 00 6C 00 65 00 74  // .<.O.b.s.o.l.e.t
    E830: 00 65 00 3E 00 3E 00 3E 30 21 30 09 06 05 2B 0E  // .e.>.>.>0!0...+.
    E840: 03 02 1A 05 00 04 14 BD EA 98 89 A1 CD 81 9C 6C  // ...............l
    E850: C1 21 4F 33 DE 8C 70 87 6D 71 A9 A0 82 1D E1 30  // .!O3..p.mq.....0
    E860: 82 03 EE 30 82 03 57 A0 03 02 01 02 02 10 7E 93  // ...0..W.......~.
    E870: EB FB 7C C6 4E 59 EA 4B 9A 77 D4 06 FC 3B 30 0D  // ..|.NY.K.w...;0.
    E880: 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 30 81 8B  // ..*.H........0..
    E890: 31 0B 30 09 06 03 55 04 06 13 02 5A 41 31 15 30  // 1.0...U....ZA1.0
    E8A0: 13 06 03 55 04 08 13 0C 57 65 73 74 65 72 6E 20  // ...U....Western 
    E8B0: 43 61 70 65 31 14 30 12 06 03 55 04 07 13 0B 44  // Cape1.0...U....D
    E8C0: 75 72 62 61 6E 76 69 6C 6C 65 31 0F 30 0D 06 03  // urbanville1.0...
    E8D0: 55 04 0A 13 06 54 68 61 77 74 65 31 1D 30 1B 06  // U....Thawte1.0..
    E8E0: 03 55 04 0B 13 14 54 68 61 77 74 65 20 43 65 72  // .U....Thawte Cer
    E8F0: 74 69 66 69 63 61 74 69 6F 6E 31 1F 30 1D 06 03  // tification1.0...
    E900: 55 04 03 13 16 54 68 61 77 74 65 20 54 69 6D 65  // U....Thawte Time
    E910: 73 74 61 6D 70 69 6E 67 20 43 41 30 1E 17 0D 31  // stamping CA0...1
    E920: 32 31 32 32 31 30 30 30 30 30 30 5A 17 0D 32 30  // 21221000000Z..20
    E930: 31 32 33 30 32 33 35 39 35 39 5A 30 5E 31 0B 30  // 1230235959Z0^1.0
    E940: 09 06 03 55 04 06 13 02 55 53 31 1D 30 1B 06 03  // ...U....US1.0...
    E950: 55 04 0A 13 14 53 79 6D 61 6E 74 65 63 20 43 6F  // U....Symantec Co
    E960: 72 70 6F 72 61 74 69 6F 6E 31 30 30 2E 06 03 55  // rporation100...U
    E970: 04 03 13 27 53 79 6D 61 6E 74 65 63 20 54 69 6D  // ...'Symantec Tim
    E980: 65 20 53 74 61 6D 70 69 6E 67 20 53 65 72 76 69  // e Stamping Servi
    E990: 63 65 73 20 43 41 20 2D 20 47 32 30 82 01 22 30  // ces CA - G20.."0
    E9A0: 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82  // ...*.H..........
    E9B0: 01 0F 00 30 82 01 0A 02 82 01 01 00 B1 AC B3 49  // ...0...........I
    E9C0: 54 4B 97 1C 12 0A D8 25 79 91 22 57 2A 6F DC B8  // TK.....%y."W*o..
    E9D0: 26 C4 43 73 6B C2 BF 2E 50 5A FB 14 C2 76 8E 43  // &.Csk...PZ...v.C
    E9E0: 01 25 43 B4 A1 E2 45 F4 E8 B7 7B C3 74 CC 22 D7  // .%C...E...{.t.".
    E9F0: B4 94 00 02 F7 4D ED BF B4 B7 44 24 6B CD 5F 45  // .....M....D$k._E
    EA00: 3B D1 44 CE 43 12 73 17 82 8B 69 B4 2B CB 99 1E  // ;.D.C.s...i.+...
    EA10: AC 72 1B 26 4D 71 1F B1 31 DD FB 51 61 02 53 A6  // .r.&Mq..1..Qa.S.
    EA20: AA F5 49 2C 05 78 45 A5 2F 89 CE E7 99 E7 FE 8C  // ..I,.xE./.......
    EA30: E2 57 3F 3D C6 92 DC 4A F8 7B 33 E4 79 0A FB F0  // .W?=...J.{3.y...
    EA40: 75 88 41 9C FF C5 03 51 99 AA D7 6C 9F 93 69 87  // u.A....Q...l..i.
    EA50: 65 29 83 85 C2 60 14 C4 C8 C9 3B 14 DA C0 81 F0  // e)...`....;.....
    EA60: 1F 0D 74 DE 92 22 AB CA F7 FB 74 7C 27 E6 F7 4A  // ..t.."....t|'..J
    EA70: 1B 7F A7 C3 9E 2D AE 8A EA A6 E6 AA 27 16 7D 61  // .....-......'.}a
    EA80: F7 98 71 11 BC E2 50 A1 4B E5 5D FA E5 0E A7 2C  // ..q...P.K.]....,
    EA90: 9F AA 65 20 D3 D8 96 E8 C8 7C A5 4E 48 44 FF 19  // ..e .....|.NHD..
    EAA0: E2 44 07 92 0B D7 68 84 80 5D 6A 78 64 45 CD 60  // .D....h..]jxdE.`
    EAB0: 46 7E 54 C1 13 7C C5 79 F1 C9 C1 71 02 03 01 00  // F~T..|.y...q....
    EAC0: 01 A3 81 FA 30 81 F7 30 1D 06 03 55 1D 0E 04 16  // ....0..0...U....
    EAD0: 04 14 5F 9A F5 6E 5C CC CC 74 9A D4 DD 7D EF 3F  // .._..n\..t...}.?
    EAE0: DB EC 4C 80 2E DD 30 32 06 08 2B 06 01 05 05 07  // ..L...02..+.....
    EAF0: 01 01 04 26 30 24 30 22 06 08 2B 06 01 05 05 07  // ...&0$0"..+.....
    EB00: 30 01 86 16 68 74 74 70 3A 2F 2F 6F 63 73 70 2E  // 0...http://ocsp.
    EB10: 74 68 61 77 74 65 2E 63 6F 6D 30 12 06 03 55 1D  // thawte.com0...U.
    EB20: 13 01 01 FF 04 08 30 06 01 01 FF 02 01 00 30 3F  // ......0.......0?
    EB30: 06 03 55 1D 1F 04 38 30 36 30 34 A0 32 A0 30 86  // ..U...80604.2.0.
    EB40: 2E 68 74 74 70 3A 2F 2F 63 72 6C 2E 74 68 61 77  // .http://crl.thaw
    EB50: 74 65 2E 63 6F 6D 2F 54 68 61 77 74 65 54 69 6D  // te.com/ThawteTim
    EB60: 65 73 74 61 6D 70 69 6E 67 43 41 2E 63 72 6C 30  // estampingCA.crl0
    EB70: 13 06 03 55 1D 25 04 0C 30 0A 06 08 2B 06 01 05  // ...U.%..0...+...
    EB80: 05 07 03 08 30 0E 06 03 55 1D 0F 01 01 FF 04 04  // ....0...U.......
    EB90: 03 02 01 06 30 28 06 03 55 1D 11 04 21 30 1F A4  // ....0(..U...!0..
    EBA0: 1D 30 1B 31 19 30 17 06 03 55 04 03 13 10 54 69  // .0.1.0...U....Ti
    EBB0: 6D 65 53 74 61 6D 70 2D 32 30 34 38 2D 31 30 0D  // meStamp-2048-10.
    EBC0: 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 03 81 81  // ..*.H...........
    EBD0: 00 03 09 9B 8F 79 EF 7F 59 30 AA EF 68 B5 FA E3  // .....y..Y0..h...
    EBE0: 09 1D BB 4F 82 06 5D 37 5F A6 52 9F 16 8D EA 1C  // ...O..]7_.R.....
    EBF0: 92 09 44 6E F5 6D EB 58 7C 30 E8 F9 69 8D 23 73  // ..Dn.m.X|0..i.#s
    EC00: 0B 12 6F 47 A9 AE 39 11 F8 2A B1 9B B0 1A C3 8E  // ..oG..9..*......
    EC10: EB 59 96 00 AD CE 0C 4D B2 D0 31 A6 08 5C 2A 7A  // .Y.....M..1..\*z
    EC20: FC E2 7A 1D 57 4C A8 65 18 E9 79 40 62 25 96 6E  // ..z.WL.e..y@b%.n
    EC30: C7 C7 37 6A 83 21 08 8E 41 EA DD D9 57 3F 1D 77  // ..7j.!..A...W?.w
    EC40: 49 87 2A 16 06 5E A6 38 6A 22 12 A3 51 19 83 7E  // I.*..^.8j"..Q..~
    EC50: B6 30 82 04 A3 30 82 03 8B A0 03 02 01 02 02 10  // .0...0..........
    EC60: 0E CF F4 38 C8 FE BF 35 6E 04 D8 6A 98 1B 1A 50  // ...8...5n..j...P
    EC70: 30 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 30  // 0...*.H........0
    EC80: 5E 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 1D  // ^1.0...U....US1.
    EC90: 30 1B 06 03 55 04 0A 13 14 53 79 6D 61 6E 74 65  // 0...U....Symante
    ECA0: 63 20 43 6F 72 70 6F 72 61 74 69 6F 6E 31 30 30  // c Corporation100
    ECB0: 2E 06 03 55 04 03 13 27 53 79 6D 61 6E 74 65 63  // ...U...'Symantec
    ECC0: 20 54 69 6D 65 20 53 74 61 6D 70 69 6E 67 20 53  //  Time Stamping S
    ECD0: 65 72 76 69 63 65 73 20 43 41 20 2D 20 47 32 30  // ervices CA - G20
    ECE0: 1E 17 0D 31 32 31 30 31 38 30 30 30 30 30 30 5A  // ...121018000000Z
    ECF0: 17 0D 32 30 31 32 32 39 32 33 35 39 35 39 5A 30  // ..201229235959Z0
    ED00: 62 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 1D  // b1.0...U....US1.
    ED10: 30 1B 06 03 55 04 0A 13 14 53 79 6D 61 6E 74 65  // 0...U....Symante
    ED20: 63 20 43 6F 72 70 6F 72 61 74 69 6F 6E 31 34 30  // c Corporation140
    ED30: 32 06 03 55 04 03 13 2B 53 79 6D 61 6E 74 65 63  // 2..U...+Symantec
    ED40: 20 54 69 6D 65 20 53 74 61 6D 70 69 6E 67 20 53  //  Time Stamping S
    ED50: 65 72 76 69 63 65 73 20 53 69 67 6E 65 72 20 2D  // ervices Signer -
    ED60: 20 47 34 30 82 01 22 30 0D 06 09 2A 86 48 86 F7  //  G40.."0...*.H..
    ED70: 0D 01 01 01 05 00 03 82 01 0F 00 30 82 01 0A 02  // ...........0....
    ED80: 82 01 01 00 A2 63 0B 39 44 B8 BB 23 A7 44 49 BB  // .....c.9D..#.DI.
    ED90: 0E FF A1 F0 61 0A 53 93 B0 98 DB AD 2C 0F 4A C5  // ....a.S.....,.J.
    EDA0: 6E FF 86 3C 53 55 0F 15 CE 04 3F 2B FD A9 96 96  // n..<SU....?+....
    EDB0: D9 BE 61 79 0B 5B C9 4C 86 76 E5 E0 43 4B 22 95  // ..ay.[.L.v..CK".
    EDC0: EE C2 2B 43 C1 9F D8 68 B4 8E 40 4F EE 85 38 B9  // ..+C...h..@O..8.
    EDD0: 11 C5 23 F2 64 58 F0 15 32 6F 4E 57 A1 AE 88 A4  // ..#.dX..2oNW....
    EDE0: 02 D7 2A 1E CD 4B E1 DD 63 D5 17 89 32 5B B0 5E  // ..*..K..c...2[.^
    EDF0: 99 5A A8 9D 28 50 0E 17 EE 96 DB 61 3B 45 51 1D  // .Z..(P.....a;EQ.
    EE00: CF 12 56 0B 92 47 FC AB AE F6 66 3D 47 AC 70 72  // ..V..G....f=G.pr
    EE10: E7 92 E7 5F CD 10 B9 C4 83 64 94 19 BD 25 80 E1  // ..._.....d...%..
    EE20: E8 D2 22 A5 D0 BA 02 7A A1 77 93 5B 65 C3 EE 17  // .."....z.w.[e...
    EE30: 74 BC 41 86 2A DC 08 4C 8C 92 8C 91 2D 9E 77 44  // t.A.*..L....-.wD
    EE40: 1F 68 D6 A8 74 77 DB 0E 5B 32 8B 56 8B 33 BD D9  // .h..tw..[2.V.3..
    EE50: 63 C8 49 9D 3A C5 C5 EA 33 0B D2 F1 A3 1B F4 8B  // c.I.:...3.......
    EE60: BE D9 B3 57 8B 3B DE 04 A7 7A 22 B2 24 AE 2E C7  // ...W.;...z".$...
    EE70: 70 C5 BE 4E 83 26 08 FB 0B BD A9 4F 99 08 E1 10  // p..N.&.....O....
    EE80: 28 72 AA CD 02 03 01 00 01 A3 82 01 57 30 82 01  // (r..........W0..
    EE90: 53 30 0C 06 03 55 1D 13 01 01 FF 04 02 30 00 30  // S0...U.......0.0
    EEA0: 16 06 03 55 1D 25 01 01 FF 04 0C 30 0A 06 08 2B  // ...U.%.....0...+
    EEB0: 06 01 05 05 07 03 08 30 0E 06 03 55 1D 0F 01 01  // .......0...U....
    EEC0: FF 04 04 03 02 07 80 30 73 06 08 2B 06 01 05 05  // .......0s..+....
    EED0: 07 01 01 04 67 30 65 30 2A 06 08 2B 06 01 05 05  // ....g0e0*..+....
    EEE0: 07 30 01 86 1E 68 74 74 70 3A 2F 2F 74 73 2D 6F  // .0...http://ts-o
    EEF0: 63 73 70 2E 77 73 2E 73 79 6D 61 6E 74 65 63 2E  // csp.ws.symantec.
    EF00: 63 6F 6D 30 37 06 08 2B 06 01 05 05 07 30 02 86  // com07..+.....0..
    EF10: 2B 68 74 74 70 3A 2F 2F 74 73 2D 61 69 61 2E 77  // +http://ts-aia.w
    EF20: 73 2E 73 79 6D 61 6E 74 65 63 2E 63 6F 6D 2F 74  // s.symantec.com/t
    EF30: 73 73 2D 63 61 2D 67 32 2E 63 65 72 30 3C 06 03  // ss-ca-g2.cer0<..
    EF40: 55 1D 1F 04 35 30 33 30 31 A0 2F A0 2D 86 2B 68  // U...50301./.-.+h
    EF50: 74 74 70 3A 2F 2F 74 73 2D 63 72 6C 2E 77 73 2E  // ttp://ts-crl.ws.
    EF60: 73 79 6D 61 6E 74 65 63 2E 63 6F 6D 2F 74 73 73  // symantec.com/tss
    EF70: 2D 63 61 2D 67 32 2E 63 72 6C 30 28 06 03 55 1D  // -ca-g2.crl0(..U.
    EF80: 11 04 21 30 1F A4 1D 30 1B 31 19 30 17 06 03 55  // ..!0...0.1.0...U
    EF90: 04 03 13 10 54 69 6D 65 53 74 61 6D 70 2D 32 30  // ....TimeStamp-20
    EFA0: 34 38 2D 32 30 1D 06 03 55 1D 0E 04 16 04 14 46  // 48-20...U......F
    EFB0: C6 69 A3 0E 4A 14 1E D5 4C DA 52 63 17 3F 5E 36  // .i..J...L.Rc.?^6
    EFC0: BC 0D E6 30 1F 06 03 55 1D 23 04 18 30 16 80 14  // ...0...U.#..0...
    EFD0: 5F 9A F5 6E 5C CC CC 74 9A D4 DD 7D EF 3F DB EC  // _..n\..t...}.?..
    EFE0: 4C 80 2E DD 30 0D 06 09 2A 86 48 86 F7 0D 01 01  // L...0...*.H.....
    EFF0: 05 05 00 03 82 01 01 00 78 3B B4 91 2A 00 4C F0  // ........x;..*.L.
    F000: 8F 62 30 37 78 A3 84 27 07 6F 18 B2 DE 25 DC A0  // .b07x..'.o...%..
    F010: D4 94 03 AA 86 4E 25 9F 9A 40 03 1C DD CE E3 79  // .....N%..@.....y
    F020: CB 21 68 06 DA B6 32 B4 6D BF F4 2C 26 63 33 E4  // .!h...2.m..,&c3.
    F030: 49 64 6D 0D E6 C3 67 0E F7 05 A4 35 6C 7C 89 16  // Idm...g....5l|..
    F040: C6 E9 B2 DF B2 E9 DD 20 C6 71 0F CD 95 74 DC B6  // ....... .q...t..
    F050: 5C DE BD 37 1F 43 78 E6 78 B5 CD 28 04 20 A3 AA  // \..7.Cx.x..(. ..
    F060: F1 4B C4 88 29 91 0E 80 D1 11 FC DD 5C 76 6E 4F  // .K..).......\vnO
    F070: 5E 0E 45 46 41 6E 0D B0 EA 38 9A B1 3A DA 09 71  // ^.EFAn...8..:..q
    F080: 10 FC 1C 79 B4 80 7B AC 69 F4 FD 9C B6 0C 16 2B  // ...y..{.i......+
    F090: F1 7F 5B 09 3D 9B 5B E2 16 CA 13 81 6D 00 2E 38  // ..[.=.[.....m..8
    F0A0: 0D A8 29 8F 2C E1 B2 F4 5A A9 01 AF 15 9C 2C 2F  // ..).,...Z.....,/
    F0B0: 49 1B DB 22 BB C3 FE 78 94 51 C3 86 B1 82 88 5D  // I.."...x.Q.....]
    F0C0: F0 3D B4 51 A1 79 33 2B 2E 7B B9 DC 20 09 13 71  // .=.Q.y3+.{.. ..q
    F0D0: EB 6A 19 5B CF E8 A5 30 57 2C 89 49 3F B9 CF 7F  // .j.[...0W,.I?...
    F0E0: C9 BF 3E 22 68 63 53 9A BD 69 74 AC C5 1D 3C 7F  // ..>"hcS..it...<.
    F0F0: 92 E0 C3 BC 1C D8 04 75 30 82 04 D0 30 82 04 39  // .......u0...0..9
    F100: A0 03 02 01 02 02 10 25 0C E8 E0 30 61 2E 9F 2B  // .......%...0a..+
    F110: 89 F7 05 4D 7C F8 FD 30 0D 06 09 2A 86 48 86 F7  // ...M|..0...*.H..
    F120: 0D 01 01 05 05 00 30 5F 31 0B 30 09 06 03 55 04  // ......0_1.0...U.
    F130: 06 13 02 55 53 31 17 30 15 06 03 55 04 0A 13 0E  // ...US1.0...U....
    F140: 56 65 72 69 53 69 67 6E 2C 20 49 6E 63 2E 31 37  // VeriSign, Inc.17
    F150: 30 35 06 03 55 04 0B 13 2E 43 6C 61 73 73 20 33  // 05..U....Class 3
    F160: 20 50 75 62 6C 69 63 20 50 72 69 6D 61 72 79 20  //  Public Primary 
    F170: 43 65 72 74 69 66 69 63 61 74 69 6F 6E 20 41 75  // Certification Au
    F180: 74 68 6F 72 69 74 79 30 1E 17 0D 30 36 31 31 30  // thority0...06110
    F190: 38 30 30 30 30 30 30 5A 17 0D 32 31 31 31 30 37  // 8000000Z..211107
    F1A0: 32 33 35 39 35 39 5A 30 81 CA 31 0B 30 09 06 03  // 235959Z0..1.0...
    F1B0: 55 04 06 13 02 55 53 31 17 30 15 06 03 55 04 0A  // U....US1.0...U..
    F1C0: 13 0E 56 65 72 69 53 69 67 6E 2C 20 49 6E 63 2E  // ..VeriSign, Inc.
    F1D0: 31 1F 30 1D 06 03 55 04 0B 13 16 56 65 72 69 53  // 1.0...U....VeriS
    F1E0: 69 67 6E 20 54 72 75 73 74 20 4E 65 74 77 6F 72  // ign Trust Networ
    F1F0: 6B 31 3A 30 38 06 03 55 04 0B 13 31 28 63 29 20  // k1:08..U...1(c) 
    F200: 32 30 30 36 20 56 65 72 69 53 69 67 6E 2C 20 49  // 2006 VeriSign, I
    F210: 6E 63 2E 20 2D 20 46 6F 72 20 61 75 74 68 6F 72  // nc. - For author
    F220: 69 7A 65 64 20 75 73 65 20 6F 6E 6C 79 31 45 30  // ized use only1E0
    F230: 43 06 03 55 04 03 13 3C 56 65 72 69 53 69 67 6E  // C..U...<VeriSign
    F240: 20 43 6C 61 73 73 20 33 20 50 75 62 6C 69 63 20  //  Class 3 Public 
    F250: 50 72 69 6D 61 72 79 20 43 65 72 74 69 66 69 63  // Primary Certific
    F260: 61 74 69 6F 6E 20 41 75 74 68 6F 72 69 74 79 20  // ation Authority 
    F270: 2D 20 47 35 30 82 01 22 30 0D 06 09 2A 86 48 86  // - G50.."0...*.H.
    F280: F7 0D 01 01 01 05 00 03 82 01 0F 00 30 82 01 0A  // ............0...
    F290: 02 82 01 01 00 AF 24 08 08 29 7A 35 9E 60 0C AA  // ......$..)z5.`..
    F2A0: E7 4B 3B 4E DC 7C BC 3C 45 1C BB 2B E0 FE 29 02  // .K;N.|.<E..+..).
    F2B0: F9 57 08 A3 64 85 15 27 F5 F1 AD C8 31 89 5D 22  // .W..d..'....1.]"
    F2C0: E8 2A AA A6 42 B3 8F F8 B9 55 B7 B1 B7 4B B3 FE  // .*..B....U...K..
    F2D0: 8F 7E 07 57 EC EF 43 DB 66 62 15 61 CF 60 0D A4  // .~.W..C.fb.a.`..
    F2E0: D8 DE F8 E0 C3 62 08 3D 54 13 EB 49 CA 59 54 85  // .....b.=T..I.YT.
    F2F0: 26 E5 2B 8F 1B 9F EB F5 A1 91 C2 33 49 D8 43 63  // &.+........3I.Cc
    F300: 6A 52 4B D2 8F E8 70 51 4D D1 89 69 7B C7 70 F6  // jRK...pQM..i{.p.
    F310: B3 DC 12 74 DB 7B 5D 4B 56 D3 96 BF 15 77 A1 B0  // ...t.{]KV....w..
    F320: F4 A2 25 F2 AF 1C 92 67 18 E5 F4 06 04 EF 90 B9  // ..%....g........
    F330: E4 00 E4 DD 3A B5 19 FF 02 BA F4 3C EE E0 8B EB  // ....:......<....
    F340: 37 8B EC F4 D7 AC F2 F6 F0 3D AF DD 75 91 33 19  // 7........=..u.3.
    F350: 1D 1C 40 CB 74 24 19 21 93 D9 14 FE AC 2A 52 C7  // ..@.t$.!.....*R.
    F360: 8F D5 04 49 E4 8D 63 47 88 3C 69 83 CB FE 47 BD  // ...I..cG.<i...G.
    F370: 2B 7E 4F C5 95 AE 0E 9D D4 D1 43 C0 67 73 E3 14  // +~O.......C.gs..
    F380: 08 7E E5 3F 9F 73 B8 33 0A CF 5D 3F 34 87 96 8A  // .~.?.s.3..]?4...
    F390: EE 53 E8 25 15 02 03 01 00 01 A3 82 01 9B 30 82  // .S.%..........0.
    F3A0: 01 97 30 0F 06 03 55 1D 13 01 01 FF 04 05 30 03  // ..0...U.......0.
    F3B0: 01 01 FF 30 31 06 03 55 1D 1F 04 2A 30 28 30 26  // ...01..U...*0(0&
    F3C0: A0 24 A0 22 86 20 68 74 74 70 3A 2F 2F 63 72 6C  // .$.". http://crl
    F3D0: 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 70 63  // .verisign.com/pc
    F3E0: 61 33 2E 63 72 6C 30 0E 06 03 55 1D 0F 01 01 FF  // a3.crl0...U.....
    F3F0: 04 04 03 02 01 06 30 3D 06 03 55 1D 20 04 36 30  // ......0=..U. .60
    F400: 34 30 32 06 04 55 1D 20 00 30 2A 30 28 06 08 2B  // 402..U. .0*0(..+
    F410: 06 01 05 05 07 02 01 16 1C 68 74 74 70 73 3A 2F  // .........https:/
    F420: 2F 77 77 77 2E 76 65 72 69 73 69 67 6E 2E 63 6F  // /www.verisign.co
    F430: 6D 2F 63 70 73 30 1D 06 03 55 1D 0E 04 16 04 14  // m/cps0...U......
    F440: 7F D3 65 A7 C2 DD EC BB F0 30 09 F3 43 39 FA 02  // ..e......0..C9..
    F450: AF 33 31 33 30 6D 06 08 2B 06 01 05 05 07 01 0C  // .3130m..+.......
    F460: 04 61 30 5F A1 5D A0 5B 30 59 30 57 30 55 16 09  // .a0_.].[0Y0W0U..
    F470: 69 6D 61 67 65 2F 67 69 66 30 21 30 1F 30 07 06  // image/gif0!0.0..
    F480: 05 2B 0E 03 02 1A 04 14 8F E5 D3 1A 86 AC 8D 8E  // .+..............
    F490: 6B C3 CF 80 6A D4 48 18 2C 7B 19 2E 30 25 16 23  // k...j.H.,{..0%.#
    F4A0: 68 74 74 70 3A 2F 2F 6C 6F 67 6F 2E 76 65 72 69  // http://logo.veri
    F4B0: 73 69 67 6E 2E 63 6F 6D 2F 76 73 6C 6F 67 6F 2E  // sign.com/vslogo.
    F4C0: 67 69 66 30 34 06 08 2B 06 01 05 05 07 01 01 04  // gif04..+........
    F4D0: 28 30 26 30 24 06 08 2B 06 01 05 05 07 30 01 86  // (0&0$..+.....0..
    F4E0: 18 68 74 74 70 3A 2F 2F 6F 63 73 70 2E 76 65 72  // .http://ocsp.ver
    F4F0: 69 73 69 67 6E 2E 63 6F 6D 30 3E 06 03 55 1D 25  // isign.com0>..U.%
    F500: 04 37 30 35 06 08 2B 06 01 05 05 07 03 01 06 08  // .705..+.........
    F510: 2B 06 01 05 05 07 03 02 06 08 2B 06 01 05 05 07  // +.........+.....
    F520: 03 03 06 09 60 86 48 01 86 F8 42 04 01 06 0A 60  // ....`.H...B....`
    F530: 86 48 01 86 F8 45 01 08 01 30 0D 06 09 2A 86 48  // .H...E...0...*.H
    F540: 86 F7 0D 01 01 05 05 00 03 81 81 00 13 02 DD F8  // ................
    F550: E8 86 00 F2 5A F8 F8 20 0C 59 88 62 07 CE CE F7  // ....Z.. .Y.b....
    F560: 4E F9 BB 59 A1 98 E5 E1 38 DD 4E BC 66 18 D3 AD  // N..Y....8.N.f...
    F570: EB 18 F2 0D C9 6D 3E 4A 94 20 C3 3C BA BD 65 54  // .....m>J. .<..eT
    F580: C6 AF 44 B3 10 AD 2C 6B 3E AB D7 07 B6 B8 81 63  // ..D...,k>......c
    F590: C5 F9 5E 2E E5 2A 67 CE CD 33 0C 2A D7 89 56 03  // ..^..*g..3.*..V.
    F5A0: 23 1F B3 BE E8 3A 08 59 B4 EC 45 35 F7 8A 5B FF  // #....:.Y..E5..[.
    F5B0: 66 CF 50 AF C6 6D 57 8D 19 78 B7 B9 A2 D1 57 EA  // f.P..mW..x....W.
    F5C0: 1F 9A 4B AF BA C9 8E 12 7E C6 BD FF 30 82 05 03  // ..K.....~...0...
    F5D0: 30 82 02 EB A0 03 02 01 02 02 0A 61 0C 12 06 00  // 0..........a....
    F5E0: 00 00 00 00 1B 30 0D 06 09 2A 86 48 86 F7 0D 01  // .....0...*.H....
    F5F0: 01 05 05 00 30 7F 31 0B 30 09 06 03 55 04 06 13  // ....0.1.0...U...
    F600: 02 55 53 31 13 30 11 06 03 55 04 08 13 0A 57 61  // .US1.0...U....Wa
    F610: 73 68 69 6E 67 74 6F 6E 31 10 30 0E 06 03 55 04  // shington1.0...U.
    F620: 07 13 07 52 65 64 6D 6F 6E 64 31 1E 30 1C 06 03  // ...Redmond1.0...
    F630: 55 04 0A 13 15 4D 69 63 72 6F 73 6F 66 74 20 43  // U....Microsoft C
    F640: 6F 72 70 6F 72 61 74 69 6F 6E 31 29 30 27 06 03  // orporation1)0'..
    F650: 55 04 03 13 20 4D 69 63 72 6F 73 6F 66 74 20 43  // U... Microsoft C
    F660: 6F 64 65 20 56 65 72 69 66 69 63 61 74 69 6F 6E  // ode Verification
    F670: 20 52 6F 6F 74 30 1E 17 0D 30 36 30 35 32 33 31  //  Root0...0605231
    F680: 37 30 31 32 39 5A 17 0D 31 36 30 35 32 33 31 37  // 70129Z..16052317
    F690: 31 31 32 39 5A 30 5F 31 0B 30 09 06 03 55 04 06  // 1129Z0_1.0...U..
    F6A0: 13 02 55 53 31 17 30 15 06 03 55 04 0A 13 0E 56  // ..US1.0...U....V
    F6B0: 65 72 69 53 69 67 6E 2C 20 49 6E 63 2E 31 37 30  // eriSign, Inc.170
    F6C0: 35 06 03 55 04 0B 13 2E 43 6C 61 73 73 20 33 20  // 5..U....Class 3 
    F6D0: 50 75 62 6C 69 63 20 50 72 69 6D 61 72 79 20 43  // Public Primary C
    F6E0: 65 72 74 69 66 69 63 61 74 69 6F 6E 20 41 75 74  // ertification Aut
    F6F0: 68 6F 72 69 74 79 30 81 9F 30 0D 06 09 2A 86 48  // hority0..0...*.H
    F700: 86 F7 0D 01 01 01 05 00 03 81 8D 00 30 81 89 02  // ............0...
    F710: 81 81 00 C9 5C 59 9E F2 1B 8A 01 14 B4 10 DF 04  // ....\Y..........
    F720: 40 DB E3 57 AF 6A 45 40 8F 84 0C 0B D1 33 D9 D9  // @..W.jE@.....3..
    F730: 11 CF EE 02 58 1F 25 F7 2A A8 44 05 AA EC 03 1F  // ....X.%.*.D.....
    F740: 78 7F 9E 93 B9 9A 00 AA 23 7D D6 AC 85 A2 63 45  // x.......#}....cE
    F750: C7 72 27 CC F4 4C C6 75 71 D2 39 EF 4F 42 F0 75  // .r'..L.uq.9.OB.u
    F760: DF 0A 90 C6 8E 20 6F 98 0F F8 AC 23 5F 70 29 36  // ..... o....#_p)6
    F770: A4 C9 86 E7 B1 9A 20 CB 53 A5 85 E7 3D BE 7D 9A  // ...... .S...=.}.
    F780: FE 24 45 33 DC 76 15 ED 0F A2 71 64 4C 65 2E 81  // .$E3.v....qdLe..
    F790: 68 45 A7 02 03 01 00 01 A3 82 01 23 30 82 01 1F  // hE.........#0...
    F7A0: 30 11 06 03 55 1D 20 04 0A 30 08 30 06 06 04 55  // 0...U. ..0.0...U
    F7B0: 1D 20 00 30 36 06 09 2B 06 01 04 01 82 37 15 07  // . .06..+.....7..
    F7C0: 04 29 30 27 06 1F 2B 06 01 04 01 82 37 15 08 8D  // .)0'..+.....7...
    F7D0: E0 D1 89 4E 84 D7 9C C3 07 86 A6 86 FB 1C 8F D3  // ...N............
    F7E0: BF A6 15 01 19 02 01 6E 02 01 00 30 0B 06 03 55  // .......n...0...U
    F7F0: 1D 0F 04 04 03 02 01 86 30 0F 06 03 55 1D 13 01  // ........0...U...
    F800: 01 FF 04 05 30 03 01 01 FF 30 1D 06 03 55 1D 0E  // ....0....0...U..
    F810: 04 16 04 14 E2 7F 7B D8 77 D5 DF 9E 0A 3F 9E B4  // ......{.w....?..
    F820: CB 0E 2E A9 EF DB 69 77 30 1D 06 09 2B 06 01 04  // ......iw0...+...
    F830: 01 82 37 14 02 04 10 1E 0E 00 43 00 72 00 6F 00  // ..7.......C.r.o.
    F840: 73 00 73 00 43 00 41 30 1F 06 03 55 1D 23 04 18  // s.s.C.A0...U.#..
    F850: 30 16 80 14 62 FB 0A 21 5B 7F 43 6E 11 DA 09 54  // 0...b..![.Cn...T
    F860: 50 6B F5 D2 96 71 F1 9E 30 55 06 03 55 1D 1F 04  // Pk...q..0U..U...
    F870: 4E 30 4C 30 4A A0 48 A0 46 86 44 68 74 74 70 3A  // N0L0J.H.F.Dhttp:
    F880: 2F 2F 63 72 6C 2E 6D 69 63 72 6F 73 6F 66 74 2E  // //crl.microsoft.
    F890: 63 6F 6D 2F 70 6B 69 2F 63 72 6C 2F 70 72 6F 64  // com/pki/crl/prod
    F8A0: 75 63 74 73 2F 4D 69 63 72 6F 73 6F 66 74 43 6F  // ucts/MicrosoftCo
    F8B0: 64 65 56 65 72 69 66 52 6F 6F 74 2E 63 72 6C 30  // deVerifRoot.crl0
    F8C0: 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 03 82  // ...*.H..........
    F8D0: 02 01 00 01 E4 46 B3 3B 45 7F 75 13 87 7E 5F 43  // .....F.;E.u..~_C
    F8E0: DE 46 8E CB 8A BD B6 47 41 BC CC CC 74 91 D8 CE  // .F.....GA...t...
    F8F0: 39 51 95 A4 A6 B5 47 C0 EF D2 DA 7B 8F 57 11 F4  // 9Q....G....{.W..
    F900: 32 8C 7C CD 3F EE 42 DA 04 21 4A F7 C8 43 88 4A  // 2.|.?.B..!J..C.J
    F910: 6F 5C CA 14 FC 4B D1 9F 4C BD D4 55 6E CC 02 BE  // o\...K..L..Un...
    F920: 0D A6 88 8F 86 09 BA A4 25 BD E8 B0 F0 FA 8B 71  // ........%......q
    F930: 4E 67 B0 CB 82 A8 D7 8E 55 F7 37 EB F0 3E 88 EF  // Ng......U.7..>..
    F940: E4 E0 8A FD 1C 6E 2E 61 41 48 75 B4 B0 2C 1D 28  // .....n.aAHu..,.(
    F950: D8 49 0F D7 15 F0 24 73 25 3C CC 88 0C DE 28 4C  // .I....$s%<....(L
    F960: 65 54 FE 5E AE 8C EA 19 AD 2C 51 B2 9B 3A 47 F5  // eT.^.....,Q..:G.
    F970: 3C 80 35 01 17 E2 49 87 D6 54 4A FB 4B AB 07 BC  // <.5...I..TJ.K...
    F980: BF 7D 79 CF BF 35 00 5C BB 9E CF FC 82 89 1B 39  // .}y..5.\.......9
    F990: A0 51 97 B6 DE C0 B3 07 FF 44 96 44 C0 34 2A 19  // .Q.......D.D.4*.
    F9A0: 5C AB EE F0 3B EC 29 4E B5 13 C5 37 85 7E 75 D5  // \...;.)N...7.~u.
    F9B0: B4 D6 0D 06 6E B5 D2 6C 23 71 67 EA F1 71 8E AF  // ....n..l#qg..q..
    F9C0: 4E 74 AA 0C F9 EC BF 4C 58 FA 5E 90 9B 6D 39 CB  // Nt.....LX.^..m9.
    F9D0: 86 88 3F 8B 1C A8 16 32 D5 FE 6D B9 F1 F8 B3 EA  // ..?....2..m.....
    F9E0: D7 91 F6 36 47 78 C0 27 2A 15 C7 68 D6 F4 C5 FC  // ...6Gx.'*..h....
    F9F0: 4F 4E C8 67 3F 10 2D 40 9F F1 1E C9 61 48 E7 A7  // ON.g?.-@....aH..
    FA00: 03 FC 31 73 0C F0 46 88 FE 56 DA 49 29 95 EF 09  // ..1s..F..V.I)...
    FA10: DA A3 E5 BE EF 60 EC D9 54 A0 59 9C 28 BD 54 EF  // .....`..T.Y.(.T.
    FA20: 66 15 7F 87 4C 84 DB A6 0E 95 67 2E 51 7B 34 39  // f...L.....g.Q{49
    FA30: B6 41 C2 8C 84 68 26 DC 24 02 09 E7 81 8E 0A 97  // .A...h&.$.......
    FA40: 2D EF EE A7 B9 98 A6 0F 81 8D C7 10 B5 E1 ED 98  // -...............
    FA50: 2F 48 6F 53 85 49 64 78 9B EC 5D AC 97 0B 55 26  // /HoS.Idx..]...U&
    FA60: C3 EF BA 8D C8 D1 A5 2F 5A 7F 93 6B 61 1A 33 9B  // ......./Z..ka.3.
    FA70: 18 B8 A2 62 10 DE 24 EA 76 E1 2F 43 EB EC DD 7C  // ...b..$.v./C...|
    FA80: 12 34 24 89 DA 28 55 AE E5 75 4E 31 2B 67 63 B6  // .4$..(U..uN1+gc.
    FA90: A8 D7 AB 73 0A 03 CE C5 EA 59 3F C7 EB 2A 45 AE  // ...s.....Y?..*E.
    FAA0: A8 62 5B 2F 00 99 39 AB B4 5F 73 C3 08 EC 80 11  // .b[/..9.._s.....
    FAB0: 8F 47 0E 8F 2A 13 43 E1 91 06 62 55 BB FF BA 3D  // .G..*.C...bU...=
    FAC0: A9 A9 3D 26 0F AE CA 7D 62 8B 15 55 89 D6 94 34  // ..=&...}b..U...4
    FAD0: 4D D6 65 30 82 05 5B 30 82 04 43 A0 03 02 01 02  // M.e0..[0..C.....
    FAE0: 02 10 51 B8 04 3B 2D ED 31 42 A7 C3 8F 95 BC D7  // ..Q..;-.1B......
    FAF0: 65 F0 30 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05  // e.0...*.H.......
    FB00: 00 30 81 B4 31 0B 30 09 06 03 55 04 06 13 02 55  // .0..1.0...U....U
    FB10: 53 31 17 30 15 06 03 55 04 0A 13 0E 56 65 72 69  // S1.0...U....Veri
    FB20: 53 69 67 6E 2C 20 49 6E 63 2E 31 1F 30 1D 06 03  // Sign, Inc.1.0...
    FB30: 55 04 0B 13 16 56 65 72 69 53 69 67 6E 20 54 72  // U....VeriSign Tr
    FB40: 75 73 74 20 4E 65 74 77 6F 72 6B 31 3B 30 39 06  // ust Network1;09.
    FB50: 03 55 04 0B 13 32 54 65 72 6D 73 20 6F 66 20 75  // .U...2Terms of u
    FB60: 73 65 20 61 74 20 68 74 74 70 73 3A 2F 2F 77 77  // se at https://ww
    FB70: 77 2E 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 72  // w.verisign.com/r
    FB80: 70 61 20 28 63 29 31 30 31 2E 30 2C 06 03 55 04  // pa (c)101.0,..U.
    FB90: 03 13 25 56 65 72 69 53 69 67 6E 20 43 6C 61 73  // ..%VeriSign Clas
    FBA0: 73 20 33 20 43 6F 64 65 20 53 69 67 6E 69 6E 67  // s 3 Code Signing
    FBB0: 20 32 30 31 30 20 43 41 30 1E 17 0D 31 34 30 33  //  2010 CA0...1403
    FBC0: 30 33 30 30 30 30 30 30 5A 17 0D 31 37 30 33 30  // 03000000Z..17030
    FBD0: 32 32 33 35 39 35 39 5A 30 81 9E 31 0B 30 09 06  // 2235959Z0..1.0..
    FBE0: 03 55 04 06 13 02 55 53 31 17 30 15 06 03 55 04  // .U....US1.0...U.
    FBF0: 08 13 0E 4E 6F 72 74 68 20 43 61 72 6F 6C 69 6E  // ...North Carolin
    FC00: 61 31 14 30 12 06 03 55 04 07 13 0B 4D 6F 72 72  // a1.0...U....Morr
    FC10: 69 73 76 69 6C 6C 65 31 0F 30 0D 06 03 55 04 0A  // isville1.0...U..
    FC20: 14 06 4C 45 4E 4F 56 4F 31 3E 30 3C 06 03 55 04  // ..LENOVO1>0<..U.
    FC30: 0B 13 35 44 69 67 69 74 61 6C 20 49 44 20 43 6C  // ..5Digital ID Cl
    FC40: 61 73 73 20 33 20 2D 20 4D 69 63 72 6F 73 6F 66  // ass 3 - Microsof
    FC50: 74 20 53 6F 66 74 77 61 72 65 20 56 61 6C 69 64  // t Software Valid
    FC60: 61 74 69 6F 6E 20 76 32 31 0F 30 0D 06 03 55 04  // ation v21.0...U.
    FC70: 03 14 06 4C 45 4E 4F 56 4F 30 82 01 22 30 0D 06  // ...LENOVO0.."0..
    FC80: 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82 01 0F  // .*.H............
    FC90: 00 30 82 01 0A 02 82 01 01 00 BE 61 8D 78 A6 40  // .0.........a.x.@
    FCA0: CE CC 4C 4F BF 00 EE 94 F5 0C 9A AB AF 62 97 80  // ..LO.........b..
    FCB0: D9 EE D3 99 D7 B7 CD 63 D6 79 80 2C 71 0E D0 10  // .......c.y.,q...
    FCC0: F0 39 2E 52 85 92 45 BB 4E EF C0 A2 3A 53 52 CE  // .9.R..E.N...:SR.
    FCD0: 69 C4 10 C6 D4 71 2C 6B E6 EF 7F B0 89 02 92 51  // i....q,k.......Q
    FCE0: 6A 8F C0 B4 AD 83 69 99 01 EA A5 D0 89 07 F7 A3  // j.....i.........
    FCF0: E2 EA 8D EF 34 37 5B F3 0B A8 BD 67 43 44 4C 0D  // ....47[....gCDL.
    FD00: A2 2E A3 00 67 31 13 CB 67 04 AB 2B 7D 9C 6D FA  // ....g1..g..+}.m.
    FD10: 9A 1A 28 E2 62 4C 40 1D 08 9D 87 4C 30 4A 3B 6F  // ..(.bL@....L0J;o
    FD20: A8 DB 66 93 EF 8E 04 F1 E6 65 82 08 90 CC 11 25  // ..f......e.....%
    FD30: C5 F4 19 5D B0 E7 6D B1 C6 44 E4 B7 98 73 2E AD  // ...]..m..D...s..
    FD40: D8 36 28 D5 98 CE B8 F1 2B CD C3 E5 5F 7B 44 EA  // .6(.....+..._{D.
    FD50: EC CC 9F 72 DA 5C 4D 79 97 87 70 28 C5 C4 9C A4  // ...r.\My..p(....
    FD60: 1F E3 75 EA B8 E6 99 8B B2 A2 C9 CE A9 3E FF 46  // ..u..........>.F
    FD70: 48 E7 3F 13 5B 22 07 1B 8F 8F E4 BA DB D2 70 68  // H.?.["........ph
    FD80: 52 0F DF 34 83 31 61 8B 2F 9B 66 D1 E4 E2 31 66  // R..4.1a./.f...1f
    FD90: BB E0 19 3E C2 59 57 0F 29 03 02 03 01 00 01 A3  // ...>.YW.).......
    FDA0: 82 01 7B 30 82 01 77 30 09 06 03 55 1D 13 04 02  // ..{0..w0...U....
    FDB0: 30 00 30 0E 06 03 55 1D 0F 01 01 FF 04 04 03 02  // 0.0...U.........
    FDC0: 07 80 30 40 06 03 55 1D 1F 04 39 30 37 30 35 A0  // ..0@..U...90705.
    FDD0: 33 A0 31 86 2F 68 74 74 70 3A 2F 2F 63 73 63 33  // 3.1./http://csc3
    FDE0: 2D 32 30 31 30 2D 63 72 6C 2E 76 65 72 69 73 69  // -2010-crl.verisi
    FDF0: 67 6E 2E 63 6F 6D 2F 43 53 43 33 2D 32 30 31 30  // gn.com/CSC3-2010
    FE00: 2E 63 72 6C 30 44 06 03 55 1D 20 04 3D 30 3B 30  // .crl0D..U. .=0;0
    FE10: 39 06 0B 60 86 48 01 86 F8 45 01 07 17 03 30 2A  // 9..`.H...E....0*
    FE20: 30 28 06 08 2B 06 01 05 05 07 02 01 16 1C 68 74  // 0(..+.........ht
    FE30: 74 70 73 3A 2F 2F 77 77 77 2E 76 65 72 69 73 69  // tps://www.verisi
    FE40: 67 6E 2E 63 6F 6D 2F 72 70 61 30 13 06 03 55 1D  // gn.com/rpa0...U.
    FE50: 25 04 0C 30 0A 06 08 2B 06 01 05 05 07 03 03 30  // %..0...+.......0
    FE60: 71 06 08 2B 06 01 05 05 07 01 01 04 65 30 63 30  // q..+........e0c0
    FE70: 24 06 08 2B 06 01 05 05 07 30 01 86 18 68 74 74  // $..+.....0...htt
    FE80: 70 3A 2F 2F 6F 63 73 70 2E 76 65 72 69 73 69 67  // p://ocsp.verisig
    FE90: 6E 2E 63 6F 6D 30 3B 06 08 2B 06 01 05 05 07 30  // n.com0;..+.....0
    FEA0: 02 86 2F 68 74 74 70 3A 2F 2F 63 73 63 33 2D 32  // ../http://csc3-2
    FEB0: 30 31 30 2D 61 69 61 2E 76 65 72 69 73 69 67 6E  // 010-aia.verisign
    FEC0: 2E 63 6F 6D 2F 43 53 43 33 2D 32 30 31 30 2E 63  // .com/CSC3-2010.c
    FED0: 65 72 30 1F 06 03 55 1D 23 04 18 30 16 80 14 CF  // er0...U.#..0....
    FEE0: 99 A9 EA 7B 26 F4 4B C9 8E 8F D7 F0 05 26 EF E3  // ...{&.K......&..
    FEF0: D2 A7 9D 30 11 06 09 60 86 48 01 86 F8 42 01 01  // ...0...`.H...B..
    FF00: 04 04 03 02 04 10 30 16 06 0A 2B 06 01 04 01 82  // ......0...+.....
    FF10: 37 02 01 1B 04 08 30 06 01 01 00 01 01 FF 30 0D  // 7.....0.......0.
    FF20: 06 09 2A 86 48 86 F7 0D 01 01 05 05 00 03 82 01  // ..*.H...........
    FF30: 01 00 6D 2F 45 F0 A6 E4 1F 1B 30 E3 50 8E 87 83  // ..m/E.....0.P...
    FF40: 83 B3 5C 20 55 78 9C D5 84 FC F0 DB BC 7C 68 F4  // ..\ Ux.......|h.
    FF50: 97 C9 20 50 09 E7 68 49 71 DE DE 83 CB 67 D9 11  // .. P..hIq....g..
    FF60: A5 32 33 03 B0 05 29 4D 7B 38 0C B3 34 DA EE 0E  // .23...)M{8..4...
    FF70: 12 99 0A DB 43 C2 FC 22 EE 20 C5 DC 7B 08 0A 26  // ....C..". ..{..&
    FF80: 68 FB ED 71 F2 02 6C E5 F7 9C E3 8A 0A 24 F5 BB  // h..q..l......$..
    FF90: 2E BB 2B B0 ED 56 6E E1 36 50 00 9C 5C 61 22 6A  // ..+..Vn.6P..\a"j
    FFA0: B6 86 2D 46 96 16 25 AB 67 4E 2E B5 A1 97 3E 60  // ..-F..%.gN....>`
    FFB0: 23 6D 2D F3 00 EF A3 20 62 44 BF F5 A1 D7 DE 8E  // #m-.... bD......
    FFC0: 18 75 55 26 97 13 CA 82 5C A7 3B 76 17 43 3E AB  // .uU&....\.;v.C>.
    FFD0: 9E 6D 57 19 5E B2 B3 A3 93 CC 3C D1 D3 3B D1 E8  // .mW.^.....<..;..
    FFE0: 21 98 5C 8C 55 61 17 52 82 D0 68 CB BB 95 C5 71  // !.\.Ua.R..h....q
    FFF0: 45 C2 7C C7 D8 D5 93 01 ED F3 35 32 5C 03 E3 8D  // E.|.......52\...
   10000: AD 98 13 C6 40 72 EC 3C DF 78 A5 CF E7 C9 90 EA  // ....@r.<.x......
   10010: 35 5F 85 A2 98 7C 05 C3 00 53 C8 1D 23 C5 B1 D4  // 5_...|...S..#...
   10020: 8E 9D 95 89 E9 70 C3 6F B5 EF 57 AE 08 35 EB 33  // .....p.o..W..5.3
   10030: 4C 74 30 82 06 0A 30 82 04 F2 A0 03 02 01 02 02  // Lt0...0.........
   10040: 10 52 00 E5 AA 25 56 FC 1A 86 ED 96 C9 D4 4B 33  // .R...%V.......K3
   10050: C7 30 0D 06 09 2A 86 48 86 F7 0D 01 01 05 05 00  // .0...*.H........
   10060: 30 81 CA 31 0B 30 09 06 03 55 04 06 13 02 55 53  // 0..1.0...U....US
   10070: 31 17 30 15 06 03 55 04 0A 13 0E 56 65 72 69 53  // 1.0...U....VeriS
   10080: 69 67 6E 2C 20 49 6E 63 2E 31 1F 30 1D 06 03 55  // ign, Inc.1.0...U
   10090: 04 0B 13 16 56 65 72 69 53 69 67 6E 20 54 72 75  // ....VeriSign Tru
   100A0: 73 74 20 4E 65 74 77 6F 72 6B 31 3A 30 38 06 03  // st Network1:08..
   100B0: 55 04 0B 13 31 28 63 29 20 32 30 30 36 20 56 65  // U...1(c) 2006 Ve
   100C0: 72 69 53 69 67 6E 2C 20 49 6E 63 2E 20 2D 20 46  // riSign, Inc. - F
   100D0: 6F 72 20 61 75 74 68 6F 72 69 7A 65 64 20 75 73  // or authorized us
   100E0: 65 20 6F 6E 6C 79 31 45 30 43 06 03 55 04 03 13  // e only1E0C..U...
   100F0: 3C 56 65 72 69 53 69 67 6E 20 43 6C 61 73 73 20  // <VeriSign Class 
   10100: 33 20 50 75 62 6C 69 63 20 50 72 69 6D 61 72 79  // 3 Public Primary
   10110: 20 43 65 72 74 69 66 69 63 61 74 69 6F 6E 20 41  //  Certification A
   10120: 75 74 68 6F 72 69 74 79 20 2D 20 47 35 30 1E 17  // uthority - G50..
   10130: 0D 31 30 30 32 30 38 30 30 30 30 30 30 5A 17 0D  // .100208000000Z..
   10140: 32 30 30 32 30 37 32 33 35 39 35 39 5A 30 81 B4  // 200207235959Z0..
   10150: 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 17 30  // 1.0...U....US1.0
   10160: 15 06 03 55 04 0A 13 0E 56 65 72 69 53 69 67 6E  // ...U....VeriSign
   10170: 2C 20 49 6E 63 2E 31 1F 30 1D 06 03 55 04 0B 13  // , Inc.1.0...U...
   10180: 16 56 65 72 69 53 69 67 6E 20 54 72 75 73 74 20  // .VeriSign Trust 
   10190: 4E 65 74 77 6F 72 6B 31 3B 30 39 06 03 55 04 0B  // Network1;09..U..
   101A0: 13 32 54 65 72 6D 73 20 6F 66 20 75 73 65 20 61  // .2Terms of use a
   101B0: 74 20 68 74 74 70 73 3A 2F 2F 77 77 77 2E 76 65  // t https://www.ve
   101C0: 72 69 73 69 67 6E 2E 63 6F 6D 2F 72 70 61 20 28  // risign.com/rpa (
   101D0: 63 29 31 30 31 2E 30 2C 06 03 55 04 03 13 25 56  // c)101.0,..U...%V
   101E0: 65 72 69 53 69 67 6E 20 43 6C 61 73 73 20 33 20  // eriSign Class 3 
   101F0: 43 6F 64 65 20 53 69 67 6E 69 6E 67 20 32 30 31  // Code Signing 201
   10200: 30 20 43 41 30 82 01 22 30 0D 06 09 2A 86 48 86  // 0 CA0.."0...*.H.
   10210: F7 0D 01 01 01 05 00 03 82 01 0F 00 30 82 01 0A  // ............0...
   10220: 02 82 01 01 00 F5 23 4B 5E A5 D7 8A BB 32 E9 D4  // ......#K^....2..
   10230: 57 F7 EF E4 C7 26 7E AD 19 98 FE A8 9D 7D 94 F6  // W....&~......}..
   10240: 36 6B 10 D7 75 81 30 7F 04 68 7F CB 2B 75 1E CD  // 6k..u.0..h..+u..
   10250: 1D 08 8C DF 69 94 A7 37 A3 9C 7B 80 E0 99 E1 EE  // ....i..7..{.....
   10260: 37 4D 5F CE 3B 14 EE 86 D4 D0 F5 27 35 BC 25 0B  // 7M_.;......'5.%.
   10270: 38 A7 8C 63 9D 17 A3 08 A5 AB B0 FB CD 6A 62 82  // 8..c.........jb.
   10280: 4C D5 21 DA 1B D9 F1 E3 84 3B 8A 2A 4F 85 5B 90  // L.!......;.*O.[.
   10290: 01 4F C9 A7 76 10 7F 27 03 7C BE AE 7E 7D C1 DD  // .O..v..'.|..~}..
   102A0: F9 05 BC 1B 48 9C 69 E7 C0 A4 3C 3C 41 00 3E DF  // ....H.i...<<A.>.
   102B0: 96 E5 C5 E4 94 71 D6 55 01 C7 00 26 4A 40 3C B5  // .....q.U...&J@<.
   102C0: A1 26 A9 0C A7 6D 80 8E 90 25 7B CF BF 3F 1C EB  // .&...m...%{..?..
   102D0: 2F 96 FA E5 87 77 C6 B5 56 B2 7A 3B 54 30 53 1B  // /....w..V.z;T0S.
   102E0: DF 62 34 FF 1E D1 F4 5A 93 28 85 E5 4C 17 4E 7E  // .b4....Z.(..L.N~
   102F0: 5B FD A4 93 99 7F DF CD EF A4 75 EF EF 15 F6 47  // [.........u....G
   10300: E7 F8 19 72 D8 2E 34 1A A6 B4 A7 4C 7E BD BB 4F  // ...r..4....L~..O
   10310: 0C 3D 57 F1 30 D6 A6 36 8E D6 80 76 D7 19 2E A5  // .=W.0..6...v....
   10320: CD 7E 34 2D 89 02 03 01 00 01 A3 82 01 FE 30 82  // .~4-..........0.
   10330: 01 FA 30 12 06 03 55 1D 13 01 01 FF 04 08 30 06  // ..0...U.......0.
   10340: 01 01 FF 02 01 00 30 70 06 03 55 1D 20 04 69 30  // ......0p..U. .i0
   10350: 67 30 65 06 0B 60 86 48 01 86 F8 45 01 07 17 03  // g0e..`.H...E....
   10360: 30 56 30 28 06 08 2B 06 01 05 05 07 02 01 16 1C  // 0V0(..+.........
   10370: 68 74 74 70 73 3A 2F 2F 77 77 77 2E 76 65 72 69  // https://www.veri
   10380: 73 69 67 6E 2E 63 6F 6D 2F 63 70 73 30 2A 06 08  // sign.com/cps0*..
   10390: 2B 06 01 05 05 07 02 02 30 1E 1A 1C 68 74 74 70  // +.......0...http
   103A0: 73 3A 2F 2F 77 77 77 2E 76 65 72 69 73 69 67 6E  // s://www.verisign
   103B0: 2E 63 6F 6D 2F 72 70 61 30 0E 06 03 55 1D 0F 01  // .com/rpa0...U...
   103C0: 01 FF 04 04 03 02 01 06 30 6D 06 08 2B 06 01 05  // ........0m..+...
   103D0: 05 07 01 0C 04 61 30 5F A1 5D A0 5B 30 59 30 57  // .....a0_.].[0Y0W
   103E0: 30 55 16 09 69 6D 61 67 65 2F 67 69 66 30 21 30  // 0U..image/gif0!0
   103F0: 1F 30 07 06 05 2B 0E 03 02 1A 04 14 8F E5 D3 1A  // .0...+..........
   10400: 86 AC 8D 8E 6B C3 CF 80 6A D4 48 18 2C 7B 19 2E  // ....k...j.H.,{..
   10410: 30 25 16 23 68 74 74 70 3A 2F 2F 6C 6F 67 6F 2E  // 0%.#http://logo.
   10420: 76 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 76 73 6C  // verisign.com/vsl
   10430: 6F 67 6F 2E 67 69 66 30 34 06 03 55 1D 1F 04 2D  // ogo.gif04..U...-
   10440: 30 2B 30 29 A0 27 A0 25 86 23 68 74 74 70 3A 2F  // 0+0).'.%.#http:/
   10450: 2F 63 72 6C 2E 76 65 72 69 73 69 67 6E 2E 63 6F  // /crl.verisign.co
   10460: 6D 2F 70 63 61 33 2D 67 35 2E 63 72 6C 30 34 06  // m/pca3-g5.crl04.
   10470: 08 2B 06 01 05 05 07 01 01 04 28 30 26 30 24 06  // .+........(0&0$.
   10480: 08 2B 06 01 05 05 07 30 01 86 18 68 74 74 70 3A  // .+.....0...http:
   10490: 2F 2F 6F 63 73 70 2E 76 65 72 69 73 69 67 6E 2E  // //ocsp.verisign.
   104A0: 63 6F 6D 30 1D 06 03 55 1D 25 04 16 30 14 06 08  // com0...U.%..0...
   104B0: 2B 06 01 05 05 07 03 02 06 08 2B 06 01 05 05 07  // +.........+.....
   104C0: 03 03 30 28 06 03 55 1D 11 04 21 30 1F A4 1D 30  // ..0(..U...!0...0
   104D0: 1B 31 19 30 17 06 03 55 04 03 13 10 56 65 72 69  // .1.0...U....Veri
   104E0: 53 69 67 6E 4D 50 4B 49 2D 32 2D 38 30 1D 06 03  // SignMPKI-2-80...
   104F0: 55 1D 0E 04 16 04 14 CF 99 A9 EA 7B 26 F4 4B C9  // U..........{&.K.
   10500: 8E 8F D7 F0 05 26 EF E3 D2 A7 9D 30 1F 06 03 55  // .....&.....0...U
   10510: 1D 23 04 18 30 16 80 14 7F D3 65 A7 C2 DD EC BB  // .#..0.....e.....
   10520: F0 30 09 F3 43 39 FA 02 AF 33 31 33 30 0D 06 09  // .0..C9...3130...
   10530: 2A 86 48 86 F7 0D 01 01 05 05 00 03 82 01 01 00  // *.H.............
   10540: 56 22 E6 34 A4 C4 61 CB 48 B9 01 AD 56 A8 64 0F  // V".4..a.H...V.d.
   10550: D9 8C 91 C4 BB CC 0C E5 AD 7A A0 22 7F DF 47 38  // .........z."..G8
   10560: 4A 2D 6C D1 7F 71 1A 7C EC 70 A9 B1 F0 4F E4 0F  // J-l..q.|.p...O..
   10570: 0C 53 FA 15 5E FE 74 98 49 24 85 81 26 1C 91 14  // .S..^.t.I$..&...
   10580: 47 B0 4C 63 8C BB A1 34 D4 C6 45 E8 0D 85 26 73  // G.Lc...4..E...&s
   10590: 03 D0 A9 8C 64 6D DC 71 92 E6 45 05 60 15 59 51  // ....dm.q..E.`.YQ
   105A0: 39 FC 58 14 6B FE D4 A4 ED 79 6B 08 0C 41 72 E7  // 9.X.k....yk..Ar.
   105B0: 37 22 06 09 BE 23 E9 3F 44 9A 1E E9 61 9D CC B1  // 7"...#.?D...a...
   105C0: 90 5C FC 3D D2 8D AC 42 3D 65 36 D4 B4 3D 40 28  // .\.=...B=e6..=@(
   105D0: 8F 9B 10 CF 23 26 CC 4B 20 CB 90 1F 5D 8C 4C 34  // ....#&.K ...].L4
   105E0: CA 3C D8 E5 37 D6 6F A5 20 BD 34 EB 26 D9 AE 0D  // .<..7.o. .4.&...
   105F0: E7 C5 9A F7 A1 B4 21 91 33 6F 86 E8 58 BB 25 7C  // ......!.3o..X.%|
   10600: 74 0E 58 FE 75 1B 63 3F CE 31 7C 9B 8F 1B 96 9E  // t.X.u.c?.1|.....
   10610: C5 53 76 84 5B 9C AD 91 FA AC ED 93 BA 5D C8 21  // .Sv.[........].!
   10620: 53 C2 82 53 63 AF 12 0D 50 87 11 1B 3D 54 52 96  // S..Sc...P...=TR.
   10630: 8A 2C 9C 3D 92 1A 08 9A 05 2E C7 93 A5 48 91 D3  // .,.=.........H..
   10640: 31 82 04 72 30 82 04 6E 02 01 01 30 81 C9 30 81  // 1..r0..n...0..0.
   10650: B4 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 17  // .1.0...U....US1.
   10660: 30 15 06 03 55 04 0A 13 0E 56 65 72 69 53 69 67  // 0...U....VeriSig
   10670: 6E 2C 20 49 6E 63 2E 31 1F 30 1D 06 03 55 04 0B  // n, Inc.1.0...U..
   10680: 13 16 56 65 72 69 53 69 67 6E 20 54 72 75 73 74  // ..VeriSign Trust
   10690: 20 4E 65 74 77 6F 72 6B 31 3B 30 39 06 03 55 04  //  Network1;09..U.
   106A0: 0B 13 32 54 65 72 6D 73 20 6F 66 20 75 73 65 20  // ..2Terms of use 
   106B0: 61 74 20 68 74 74 70 73 3A 2F 2F 77 77 77 2E 76  // at https://www.v
   106C0: 65 72 69 73 69 67 6E 2E 63 6F 6D 2F 72 70 61 20  // erisign.com/rpa 
   106D0: 28 63 29 31 30 31 2E 30 2C 06 03 55 04 03 13 25  // (c)101.0,..U...%
   106E0: 56 65 72 69 53 69 67 6E 20 43 6C 61 73 73 20 33  // VeriSign Class 3
   106F0: 20 43 6F 64 65 20 53 69 67 6E 69 6E 67 20 32 30  //  Code Signing 20
   10700: 31 30 20 43 41 02 10 51 B8 04 3B 2D ED 31 42 A7  // 10 CA..Q..;-.1B.
   10710: C3 8F 95 BC D7 65 F0 30 09 06 05 2B 0E 03 02 1A  // .....e.0...+....
   10720: 05 00 A0 70 30 10 06 0A 2B 06 01 04 01 82 37 02  // ...p0...+.....7.
   10730: 01 0C 31 02 30 00 30 19 06 09 2A 86 48 86 F7 0D  // ..1.0.0...*.H...
   10740: 01 09 03 31 0C 06 0A 2B 06 01 04 01 82 37 02 01  // ...1...+.....7..
   10750: 04 30 1C 06 0A 2B 06 01 04 01 82 37 02 01 0B 31  // .0...+.....7...1
   10760: 0E 30 0C 06 0A 2B 06 01 04 01 82 37 02 01 15 30  // .0...+.....7...0
   10770: 23 06 09 2A 86 48 86 F7 0D 01 09 04 31 16 04 14  // #..*.H......1...
   10780: BC 96 31 26 DD 04 9C D0 BE D4 14 6B B2 61 06 83  // ..1&.......k.a..
   10790: 24 45 D0 B4 30 0D 06 09 2A 86 48 86 F7 0D 01 01  // $E..0...*.H.....
   107A0: 01 05 00 04 82 01 00 1E 8D 07 96 6C B6 BB D7 07  // ...........l....
   107B0: B6 B7 98 A5 61 5E 38 4F B7 96 39 F3 31 C5 5B E2  // ....a^8O..9.1.[.
   107C0: 0D AD C2 1E 82 AE 2D B1 2C 1F 73 14 52 D5 53 BA  // ......-.,.s.R.S.
   107D0: 7E B4 CF 3E 12 4D B8 3C F6 D5 44 B2 EA 88 6C CE  // ~..>.M.<..D...l.
   107E0: 51 A4 8E B0 2D 14 F8 CD A9 67 FE C6 8F 93 1D 53  // Q...-....g.....S
   107F0: BE 50 A5 57 E8 88 94 96 EC 34 9D 25 7F 7A C5 6E  // .P.W.....4.%.z.n
   10800: F2 03 02 51 5B 7F 36 F4 06 BB 1E A8 9A 79 6F A7  // ...Q[.6......yo.
   10810: F8 62 6C 65 25 F9 E5 0F 98 10 B3 94 F8 1D 3D 55  // .ble%.........=U
   10820: 41 59 F3 0B 72 54 4E D2 40 51 F5 7D 12 38 5B C5  // AY..rTN.@Q.}.8[.
   10830: 29 51 15 FE 7F 3D 8B E5 52 B2 6E 6E 5F D3 22 13  // )Q...=..R.nn_.".
   10840: 45 71 80 18 94 19 64 86 A1 42 33 47 FC 16 C7 E7  // Eq....d..B3G....
   10850: CE AF B5 1D B6 B7 40 AA 97 F2 39 A3 A7 8A 2B 61  // ......@...9...+a
   10860: 85 76 DE 58 83 DD A7 F8 CC CD A3 53 4E 78 8E 55  // .v.X.......SNx.U
   10870: 04 7E C4 91 78 18 FE C3 94 51 53 98 2D BC D6 43  // .~..x....QS.-..C
   10880: 10 0A 20 D2 D9 93 03 6A 5A 4A 50 5C 8B 59 42 6B  // .. ....jZJP\.YBk
   10890: 98 43 79 E4 D3 C6 83 68 92 95 EB CC A0 09 21 C0  // .Cy....h......!.
   108A0: B4 65 35 12 CD 75 CA A1 82 02 0B 30 82 02 07 06  // .e5..u.....0....
   108B0: 09 2A 86 48 86 F7 0D 01 09 06 31 82 01 F8 30 82  // .*.H......1...0.
   108C0: 01 F4 02 01 01 30 72 30 5E 31 0B 30 09 06 03 55  // .....0r0^1.0...U
   108D0: 04 06 13 02 55 53 31 1D 30 1B 06 03 55 04 0A 13  // ....US1.0...U...
   108E0: 14 53 79 6D 61 6E 74 65 63 20 43 6F 72 70 6F 72  // .Symantec Corpor
   108F0: 61 74 69 6F 6E 31 30 30 2E 06 03 55 04 03 13 27  // ation100...U...'
   10900: 53 79 6D 61 6E 74 65 63 20 54 69 6D 65 20 53 74  // Symantec Time St
   10910: 61 6D 70 69 6E 67 20 53 65 72 76 69 63 65 73 20  // amping Services 
   10920: 43 41 20 2D 20 47 32 02 10 0E CF F4 38 C8 FE BF  // CA - G2.....8...
   10930: 35 6E 04 D8 6A 98 1B 1A 50 30 09 06 05 2B 0E 03  // 5n..j...P0...+..
   10940: 02 1A 05 00 A0 5D 30 18 06 09 2A 86 48 86 F7 0D  // .....]0...*.H...
   10950: 01 09 03 31 0B 06 09 2A 86 48 86 F7 0D 01 07 01  // ...1...*.H......
   10960: 30 1C 06 09 2A 86 48 86 F7 0D 01 09 05 31 0F 17  // 0...*.H......1..
   10970: 0D 31 35 30 39 31 31 30 36 35 30 32 36 5A 30 23  // .150911065026Z0#
   10980: 06 09 2A 86 48 86 F7 0D 01 09 04 31 16 04 14 B2  // ..*.H......1....
   10990: A4 44 0C DD CC 76 01 F7 26 91 5E 98 EE 1C 99 CF  // .D...v..&.^.....
   109A0: A9 B5 F8 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01  // ...0...*.H......
   109B0: 05 00 04 82 01 00 55 FF C8 34 29 A6 E3 E2 15 A2  // ......U..4).....
   109C0: 60 1F D8 51 BD 86 B5 C3 A6 2B 63 9B 3A 7F C3 9F  // `..Q.....+c.:...
   109D0: 32 C5 3A 7A 99 D6 A2 7E F3 B6 3A CF 3D C1 BE BD  // 2.:z...~..:.=...
   109E0: 0C EE 0D 58 B2 FC BF 26 7A 30 16 16 DB 6E 24 78  // ...X...&z0...n$x
   109F0: BB 03 48 B1 9E 99 19 E0 4A FD 40 6A 90 5B 87 4B  // ..H.....J.@j.[.K
   10A00: F8 E5 53 3D B3 4F 69 DD 43 0B 7C 47 23 A5 36 8F  // ..S=.Oi.C.|G#.6.
   10A10: 8B BC 10 F6 ED D6 39 2B 9B 09 77 8C 98 B9 46 12  // ......9+..w...F.
   10A20: FF 5A 5A C8 AD AB F5 3F D5 B7 21 30 D6 67 AE D8  // .ZZ....?..!0.g..
   10A30: 0A 78 0E C4 CA DD B5 21 8E A2 01 85 7C FA D2 A5  // .x.....!....|...
   10A40: FB 04 B5 1C B0 A0 EA 50 4B EA B0 58 81 4F C0 A2  // .......PK..X.O..
   10A50: 5C 00 C2 B2 B9 66 C0 75 6E 9B 1B 8E B2 89 46 3B  // \....f.un.....F;
   10A60: EC E0 C0 42 8E 6D 9C 0D DB 23 E4 F1 5A 16 6B E9  // ...B.m...#..Z.k.
   10A70: 5A 05 06 1B 5A E2 ED 8D AD 17 48 46 C0 54 C0 33  // Z...Z.....HF.T.3
   10A80: 25 1A A5 2B 2F D2 27 76 46 45 4C D1 05 49 94 63  // %..+/.'vFEL..I.c
   10A90: E8 AB E6 6A 5E 48 90 D4 D2 24 A1 99 B9 53 35 EC  // ...j^H...$...S5.
   10AA0: 99 2B 97 99 5A 0E 7F 6E 11 9E 15 15 3A 73 09 C8  // .+..Z..n....:s..
   10AB0: 01 FD 83 0C F7 C0 00 00 00 00 00 00 00 00 00 00  // ................
   10AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   10FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   110F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   111F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   112F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   113F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   114F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   115F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   116F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   117F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   118F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   119F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   11FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   120F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   121F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   122F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   123F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   124F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   125F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   126F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   127F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   128F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   129F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   12FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   130F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   131F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   132F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   133F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   134F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   135F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   136F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   137F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   138F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   139F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   13FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   140F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   141F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   142F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   143F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   144F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   145F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   146F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   147F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   148F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   149F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   14FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   150F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   151F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   152F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   153F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   154F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   155F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   156F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   157F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   158F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   159F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   15FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   160F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   161F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   162F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   163F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   164F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   165F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   166F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   167F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   168F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   169F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   16FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   170F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   171F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   172F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   173F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   174F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   175F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   176F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   177F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   178F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   179F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   17FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   180F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   181F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   182F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   183F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   184F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   185F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   186F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   187F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   188F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   189F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   18FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   190F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   191F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   192F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   193F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   194F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   195F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   196F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   197F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   198F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   199F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   19FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1A9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ABF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ACF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ADF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1AFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1B9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1BFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1C9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1CFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1D9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1DFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1E9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ECF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1ED90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1EFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1F9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   1FFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   200F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   201F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   202F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   203F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   204F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   205F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   206F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   207F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   208F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   209F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   20FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   210F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   211F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   212F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   213F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   214F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   215F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   216F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   217F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   218F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   219F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   21FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   220F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   221F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   222F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   223F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   224F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   225F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   226F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   227F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   228F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   229F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   22FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   230F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   231F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   232F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   233F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   234F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   235F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   236F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   237F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   238F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   239F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   23FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   240F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   241F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   242F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   243F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   244F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   245F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   246F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   247F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   248F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   249F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   24FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   250F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   251F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   252F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   253F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   254F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   255F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   256F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   257F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   258F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   259F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   25FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   260F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   261F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   262F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   263F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   264F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   265F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   266F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   267F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   268F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   269F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   26FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   270F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   271F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   272F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   273F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   274F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   275F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   276F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   277F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   278F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   279F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   27FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   280F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   281F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   282F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   283F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   284F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   285F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   286F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   287F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   288F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   289F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   28FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   290F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   291F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   292F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   293F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   294F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   295F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   296F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   297F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   298F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   299F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   29FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2A9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ABF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ACF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ADF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2AFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2B9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2BFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2C9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2CFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2D9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2DFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2E9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ECF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2ED90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2EFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F2F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F3F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F6F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F7F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F8F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2F9F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FBF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FCF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FD90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FDF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FE90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FEC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FEE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FEF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FF90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   2FFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   300F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   301F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   302F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   303F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   304F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   305F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   306F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   307F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   308F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   309F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   30FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   310F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   311F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   312F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   313F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   314F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   315F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   316F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   317F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   318F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   319F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   31FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   320F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   321F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   322F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   323F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   324F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   325F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   326F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   327F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   328F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   329A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   329B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   329C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   329D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   329E0: 00 00 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
   329F0: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
   32A00: 6E 00 65 00 5C 00 53 00 59 00 53 00 54 00 45 00  // n.e.\.S.Y.S.T.E.
   32A10: 4D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // M.\.C.u.r.r.e.n.
   32A20: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
   32A30: 53 00 65 00 74 00 5C 00 73 00 65 00 72 00 76 00  // S.e.t.\.s.e.r.v.
   32A40: 69 00 63 00 65 00 73 00 5C 00 55 00 53 00 42 00  // i.c.e.s.\.U.S.B.
   32A50: 46 00 00 00 44 00 69 00 73 00 70 00 6C 00 61 00  // F...D.i.s.p.l.a.
   32A60: 79 00 4E 00 61 00 6D 00 65 00 00 00 55 00 53 00  // y.N.a.m.e...U.S.
   32A70: 42 00 46 00 00 00 47 00 72 00 6F 00 75 00 70 00  // B.F...G.r.o.u.p.
   32A80: 00 00 46 00 69 00 6C 00 74 00 65 00 72 00 00 00  // ..F.i.l.t.e.r...
   32A90: 53 00 74 00 61 00 72 00 74 00 00 00 54 00 79 00  // S.t.a.r.t...T.y.
   32AA0: 70 00 65 00 00 00 54 00 61 00 67 00 00 00 5C 00  // p.e...T.a.g...\.
   32AB0: 52 00 65 00 67 00 69 00 73 00 74 00 72 00 79 00  // R.e.g.i.s.t.r.y.
   32AC0: 5C 00 4D 00 61 00 63 00 68 00 69 00 6E 00 65 00  // \.M.a.c.h.i.n.e.
   32AD0: 5C 00 53 00 59 00 53 00 54 00 45 00 4D 00 5C 00  // \.S.Y.S.T.E.M.\.
   32AE0: 43 00 75 00 72 00 72 00 65 00 6E 00 74 00 43 00  // C.u.r.r.e.n.t.C.
   32AF0: 6F 00 6E 00 74 00 72 00 6F 00 6C 00 53 00 65 00  // o.n.t.r.o.l.S.e.
   32B00: 74 00 5C 00 43 00 6F 00 6E 00 74 00 72 00 6F 00  // t.\.C.o.n.t.r.o.
   32B10: 6C 00 5C 00 43 00 6C 00 61 00 73 00 73 00 5C 00  // l.\.C.l.a.s.s.\.
   32B20: 7B 00 34 00 44 00 33 00 36 00 45 00 39 00 36 00  // {.4.D.3.6.E.9.6.
   32B30: 37 00 2D 00 45 00 33 00 32 00 35 00 2D 00 31 00  // 7.-.E.3.2.5.-.1.
   32B40: 31 00 43 00 45 00 2D 00 42 00 46 00 43 00 31 00  // 1.C.E.-.B.F.C.1.
   32B50: 2D 00 30 00 38 00 30 00 30 00 32 00 42 00 45 00  // -.0.8.0.0.2.B.E.
   32B60: 31 00 30 00 33 00 31 00 38 00 7D 00 00 00 55 00  // 1.0.3.1.8.}...U.
   32B70: 70 00 70 00 65 00 72 00 46 00 69 00 6C 00 74 00  // p.p.e.r.F.i.l.t.
   32B80: 65 00 72 00 73 00 00 00 5C 00 52 00 65 00 67 00  // e.r.s...\.R.e.g.
   32B90: 69 00 73 00 74 00 72 00 79 00 5C 00 4D 00 61 00  // i.s.t.r.y.\.M.a.
   32BA0: 63 00 68 00 69 00 6E 00 65 00 5C 00 53 00 59 00  // c.h.i.n.e.\.S.Y.
   32BB0: 53 00 54 00 45 00 4D 00 5C 00 43 00 75 00 72 00  // S.T.E.M.\.C.u.r.
   32BC0: 72 00 65 00 6E 00 74 00 43 00 6F 00 6E 00 74 00  // r.e.n.t.C.o.n.t.
   32BD0: 72 00 6F 00 6C 00 53 00 65 00 74 00 5C 00 43 00  // r.o.l.S.e.t.\.C.
   32BE0: 6F 00 6E 00 74 00 72 00 6F 00 6C 00 5C 00 43 00  // o.n.t.r.o.l.\.C.
   32BF0: 6C 00 61 00 73 00 73 00 5C 00 7B 00 33 00 36 00  // l.a.s.s.\.{.3.6.
   32C00: 46 00 43 00 39 00 45 00 36 00 30 00 2D 00 43 00  // F.C.9.E.6.0.-.C.
   32C10: 34 00 36 00 35 00 2D 00 31 00 31 00 43 00 46 00  // 4.6.5.-.1.1.C.F.
   32C20: 2D 00 38 00 30 00 35 00 36 00 2D 00 34 00 34 00  // -.8.0.5.6.-.4.4.
   32C30: 34 00 35 00 35 00 33 00 35 00 34 00 30 00 30 00  // 4.5.5.3.5.4.0.0.
   32C40: 30 00 30 00 7D 00 00 00 4C 00 6F 00 77 00 65 00  // 0.0.}...L.o.w.e.
   32C50: 72 00 46 00 69 00 6C 00 74 00 65 00 72 00 73 00  // r.F.i.l.t.e.r.s.
   32C60: 00 00 5C 00 52 00 65 00 67 00 69 00 73 00 74 00  // ..\.R.e.g.i.s.t.
   32C70: 72 00 79 00 5C 00 4D 00 61 00 63 00 68 00 69 00  // r.y.\.M.a.c.h.i.
   32C80: 6E 00 65 00 5C 00 53 00 59 00 53 00 54 00 45 00  // n.e.\.S.Y.S.T.E.
   32C90: 4D 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00  // M.\.C.u.r.r.e.n.
   32CA0: 74 00 43 00 6F 00 6E 00 74 00 72 00 6F 00 6C 00  // t.C.o.n.t.r.o.l.
   32CB0: 53 00 65 00 74 00 5C 00 43 00 6F 00 6E 00 74 00  // S.e.t.\.C.o.n.t.
   32CC0: 72 00 6F 00 6C 00 5C 00 43 00 6C 00 61 00 73 00  // r.o.l.\.C.l.a.s.
   32CD0: 73 00 5C 00 7B 00 34 00 44 00 33 00 36 00 45 00  // s.\.{.4.D.3.6.E.
   32CE0: 39 00 36 00 35 00 2D 00 45 00 33 00 32 00 35 00  // 9.6.5.-.E.3.2.5.
   32CF0: 2D 00 31 00 31 00 43 00 45 00 2D 00 42 00 46 00  // -.1.1.C.E.-.B.F.
   32D00: 43 00 31 00 2D 00 30 00 38 00 30 00 30 00 32 00  // C.1.-.0.8.0.0.2.
   32D10: 42 00 45 00 31 00 30 00 33 00 31 00 38 00 7D 00  // B.E.1.0.3.1.8.}.
   32D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   32FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   330F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   331F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   332F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   333F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   334F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   335F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   336F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   337F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   338F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   339F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33A90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33BF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33D90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   33FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   340F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   341F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   342F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   343F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   344F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   345F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   346F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   347F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   348F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   34990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   349A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   349B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   349C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   349D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
   349E0: 00 00                                            // ..


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 77
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 77 4C 45 4E 4F 56 4F  // MCFG<....wLENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 97 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000   4]                    Signature : "MSDM"    [Microsoft Data Management Table]
[004h 0004   4]                 Table Length : 00000055
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 43
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036  49] Software Licensing Structure : 4D 53 44 4D 55 00 00 00 03 43 4C 45 4E 4F 56 4F /* MSDMU....CLENOVO */\
/* 034h 0052  16 */                            54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20 /* TC-M1A  ....AMI  */\
/* 044h 0068  16 */                            13 00 01 00 01 00 00 00 00 00 00 00 01 00 00 00 /* ................ */\
/* 054h 0084   1 */                            00                                              /* . */\

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 43 4C 45 4E 4F 56 4F  // MSDMU....CLENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 4E 54 50 44 59 2D 4A 33  // ........NTPDY-J3
    0040: 4D 58 57 2D 57 34 42 59 36 2D 59 46 33 38 4D 2D  // MXW-W4BY6-YF38M-
    0050: 58 42 54 36 50                                   // XBT6P


SLIC
----
[000h 0000   4]                    Signature : "SLIC"    [Software Licensing Description Table]
[004h 0004   4]                 Table Length : 00000176
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 81
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00010013

[024h 0036 338] Software Licensing Structure : 53 4C 49 43 76 01 00 00 01 81 4C 45 4E 4F 56 4F /* SLICv.....LENOVO */\
/* 034h 0052  16 */                            54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20 /* TC-M1A  ....AMI  */\
/* 044h 0068  16 */                            13 00 01 00 00 00 00 00 9C 00 00 00 06 02 00 00 /* ................ */\
/* 054h 0084  16 */                            00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 /* .$..RSA1........ */\
/* 064h 0100  16 */                            69 16 4A 9F B1 4B 3A FB 80 20 AA AF C4 F9 3E C1 /* i.J..K:.. ....>. */\
/* 074h 0116  16 */                            80 49 EE 6A 65 26 72 1E CD BF 5F 2F 96 D6 C0 0A /* .I.je&r..._/.... */\
/* 084h 0132  16 */                            92 F5 06 B5 00 B2 3B 29 02 E2 4C 8D C2 F2 BC 41 /* ......;)..L....A */\
/* 094h 0148  16 */                            77 9C 70 F0 F3 1B 09 D2 63 5A DC A8 83 F8 5E C9 /* w.p.....cZ....^. */\
/* 0A4h 0164  16 */                            15 95 F9 FA FD DC 05 B7 4D 67 7F 2D B3 84 33 20 /* ........Mg.-..3  */\
/* 0B4h 0180  16 */                            E1 D1 79 2A A7 6A 77 D1 B6 20 2A 76 42 C5 D5 E9 /* ..y*.jw.. *vB... */\
/* 0C4h 0196  16 */                            B6 43 40 55 44 C3 C9 37 99 5F 41 97 70 F3 D1 F6 /* .C@UD..7._A.p... */\
/* 0D4h 0212  16 */                            07 EC 7B 1A 29 A1 C1 F1 91 FD 48 86 6E 3E CE CB /* ..{.).....H.n>.. */\
/* 0E4h 0228  16 */                            01 00 00 00 B6 00 00 00 00 00 02 00 4C 45 4E 4F /* ............LENO */\
/* 0F4h 0244  16 */                            56 4F 54 43 2D 4D 31 41 20 20 57 49 4E 44 4F 57 /* VOTC-M1A  WINDOW */\
/* 104h 0260  16 */                            53 20 01 00 02 00 00 00 00 00 00 00 00 00 00 00 /* S .............. */\
/* 114h 0276  16 */                            00 00 00 00 00 00 9D 13 9A 40 AB 78 F7 92 C1 23 /* .........@.x...# */\
/* 124h 0292  16 */                            2D C2 33 D8 89 08 FF 73 20 27 9E 25 67 3E 79 83 /* -.3....s '.%g>y. */\
/* 134h 0308  16 */                            65 60 6E 5D D8 60 66 68 39 B8 3E 92 2F CA 2F 6E /* e`n].`fh9.>././n */\
/* 144h 0324  16 */                            E7 E7 55 47 C0 3E FA 7B 66 C1 83 E7 92 CB 1D A7 /* ..UG.>.{f....... */\
/* 154h 0340  16 */                            24 9A D8 8F A4 6E FE AF 13 F3 BD A0 61 1B BC 31 /* $....n......a..1 */\
/* 164h 0356  16 */                            86 68 25 91 15 1D 3D AC 83 45 D5 38 28 54 3B DB /* .h%...=..E.8(T;. */\
/* 174h 0372   2 */                            45 BC                                           /* E. */\

Raw Table Data: Length 374 (0x176)

    0000: 53 4C 49 43 76 01 00 00 01 81 4C 45 4E 4F 56 4F  // SLICv.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 13 00 01 00 00 00 00 00 9C 00 00 00 06 02 00 00  // ................
    0030: 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00  // .$..RSA1........
    0040: 69 16 4A 9F B1 4B 3A FB 80 20 AA AF C4 F9 3E C1  // i.J..K:.. ....>.
    0050: 80 49 EE 6A 65 26 72 1E CD BF 5F 2F 96 D6 C0 0A  // .I.je&r..._/....
    0060: 92 F5 06 B5 00 B2 3B 29 02 E2 4C 8D C2 F2 BC 41  // ......;)..L....A
    0070: 77 9C 70 F0 F3 1B 09 D2 63 5A DC A8 83 F8 5E C9  // w.p.....cZ....^.
    0080: 15 95 F9 FA FD DC 05 B7 4D 67 7F 2D B3 84 33 20  // ........Mg.-..3 
    0090: E1 D1 79 2A A7 6A 77 D1 B6 20 2A 76 42 C5 D5 E9  // ..y*.jw.. *vB...
    00A0: B6 43 40 55 44 C3 C9 37 99 5F 41 97 70 F3 D1 F6  // .C@UD..7._A.p...
    00B0: 07 EC 7B 1A 29 A1 C1 F1 91 FD 48 86 6E 3E CE CB  // ..{.).....H.n>..
    00C0: 01 00 00 00 B6 00 00 00 00 00 02 00 4C 45 4E 4F  // ............LENO
    00D0: 56 4F 54 43 2D 4D 31 41 20 20 57 49 4E 44 4F 57  // VOTC-M1A  WINDOW
    00E0: 53 20 01 00 02 00 00 00 00 00 00 00 00 00 00 00  // S ..............
    00F0: 00 00 00 00 00 00 9D 13 9A 40 AB 78 F7 92 C1 23  // .........@.x...#
    0100: 2D C2 33 D8 89 08 FF 73 20 27 9E 25 67 3E 79 83  // -.3....s '.%g>y.
    0110: 65 60 6E 5D D8 60 66 68 39 B8 3E 92 2F CA 2F 6E  // e`n].`fh9.>././n
    0120: E7 E7 55 47 C0 3E FA 7B 66 C1 83 E7 92 CB 1D A7  // ..UG.>.{f.......
    0130: 24 9A D8 8F A4 6E FE AF 13 F3 BD A0 61 1B BC 31  // $....n......a..1
    0140: 86 68 25 91 15 1D 3D AC 83 45 D5 38 28 54 3B DB  // .h%...=..E.8(T;.
    0150: 45 BC 85 2E CB 16 71 52 7E F7 C3 63 31 77 5E D1  // E.....qR~..c1w^.
    0160: 38 A9 D2 2A 0D 24 14 3D 06 AA 90 B9 BE 02 A4 6F  // 8..*.$.=.......o
    0170: 1F D5 A7 E7 C7 BE                                // ......


SSDT1
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_SB_.PCI0.XDCI, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS01, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS02, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS03, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS04, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS05, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS06, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS07, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS08, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS09, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS10, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS11, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS12, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS13, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.HS14, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS01, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS02, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS03, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS04, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS05, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS06, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS07, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS08, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS09, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.SS10, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.USR1, DeviceObj)
    External (_SB_.PCI0.XHC_.RHUB.USR2, DeviceObj)
    External (BDID, UnknownObj)
    External (BRDT, UnknownObj)
    External (BTDT, UnknownObj)
    External (CABL, UnknownObj)
    External (CRDT, UnknownObj)
    External (PCHV, MethodObj)    // 0 Arguments
    External (SPTH, UnknownObj)

    Scope (\_SB.PCI0.XHC.RHUB)
    {
        Method (GPLD, 2, Serialized)
        {
            Name (PCKG, Package (0x01)
            {
                Buffer (0x10){}
            })
            CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
            REV = One
            CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
            VISI = Arg0
            CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
            GPOS = Arg1
            Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.GPLD.PCKG */
        }

        Method (TPLD, 2, Serialized)
        {
            Name (PCKG, Package (0x01)
            {
                Buffer (0x10){}
            })
            CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
            REV = One
            CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
            VISI = Arg0
            CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
            GPOS = Arg1
            CreateField (DerefOf (PCKG [Zero]), 0x4A, 0x04, SHAP)
            SHAP = One
            CreateField (DerefOf (PCKG [Zero]), 0x20, 0x10, WID)
            WID = 0x08
            CreateField (DerefOf (PCKG [Zero]), 0x30, 0x10, HGT)
            HGT = 0x03
            Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.TPLD.PCKG */
        }

        Method (GUPC, 1, Serialized)
        {
            Name (PCKG, Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })
            PCKG [Zero] = Arg0
            Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.GUPC.PCKG */
        }

        Method (TUPC, 1, Serialized)
        {
            Name (PCKG, Package (0x04)
            {
                One, 
                Zero, 
                Zero, 
                Zero
            })
            PCKG [One] = Arg0
            Return (PCKG) /* \_SB_.PCI0.XHC_.RHUB.TUPC.PCKG */
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS01)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            If (((CABL == Zero) && (BRDT == One)))
            {
                Return (GUPC (Zero))
            }

            If (((BDID == 0x30) || ((BDID == 0x31) || (BDID == 0x32))))
            {
                Return (TUPC (0x09))
            }
            ElseIf (((BDID == 0x33) || ((BDID == 0x34) || (BDID == 
                0x35))))
            {
                Return (TUPC (0x08))
            }
            Else
            {
                Return (GUPC (One))
            }
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            If (((CABL == Zero) && (BRDT == One)))
            {
                Return (GPLD (Zero, Zero))
            }

            If (((BDID == 0x30) || ((BDID == 0x31) || (BDID == 0x32))))
            {
                TPLD (One, One)
            }
            ElseIf (((BDID == 0x33) || ((BDID == 0x34) || (BDID == 
                0x35))))
            {
                TPLD (One, One)
            }
            Else
            {
                Return (GPLD (One, One))
            }
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS02)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x02))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS03)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (Zero, 0x03))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS04)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            If (BRDT)
            {
                Return (GPLD (One, 0x04))
            }
            ElseIf (((BTDT == 0x04) || (CRDT == 0x04)))
            {
                Return (GPLD (Zero, 0x04))
            }
            Else
            {
                Return (GPLD (One, 0x04))
            }
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS05)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x05))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS06)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x06))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS07)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x07))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS08)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x08))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS09)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            If (BRDT)
            {
                Return (GPLD (One, 0x09))
            }
            ElseIf (((BTDT == 0x09) || (CRDT == 0x09)))
            {
                Return (GPLD (Zero, 0x09))
            }
            Else
            {
                Return (GPLD (One, 0x09))
            }
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.HS10)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            If (BRDT)
            {
                Return (GPLD (One, 0x0A))
            }
            ElseIf (((BTDT == 0x0A) || (CRDT == 0x0A)))
            {
                Return (GPLD (Zero, 0x0A))
            }
            Else
            {
                Return (GPLD (One, 0x0A))
            }
        }
    }

    If ((PCHV () == SPTH))
    {
        Scope (\_SB.PCI0.XHC.RHUB.HS11)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (One))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (GPLD (One, 0x0B))
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.HS12)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (One))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (GPLD (One, 0x0C))
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.HS13)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (One))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (GPLD (One, 0x0D))
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.HS14)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (One))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                If (BRDT)
                {
                    Return (GPLD (One, 0x0E))
                }
                ElseIf (((BTDT == 0x0E) || (CRDT == 0x0E)))
                {
                    Return (GPLD (Zero, 0x0E))
                }
                Else
                {
                    Return (GPLD (One, 0x0E))
                }
            }
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.USR1)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (Zero))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (Zero, Zero))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.USR2)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (Zero))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (Zero, Zero))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS01)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x05))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS02)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x06))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS03)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x07))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS04)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x08))
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS05)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            If (BRDT)
            {
                Return (GPLD (One, 0x0C))
            }
            Else
            {
                Return (GPLD (One, 0x0D))
            }
        }
    }

    Scope (\_SB.PCI0.XHC.RHUB.SS06)
    {
        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
        {
            Return (GUPC (One))
        }

        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
        {
            Return (GPLD (One, 0x0B))
        }
    }

    If ((PCHV () == SPTH))
    {
        Scope (\_SB.PCI0.XHC.RHUB.SS07)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                If (((CABL == Zero) && (BRDT == One)))
                {
                    Return (GUPC (Zero))
                }
                ElseIf (((BDID == 0x30) || ((BDID == 0x31) || (BDID == 
                    0x32))))
                {
                    Return (TUPC (0x09))
                }
                Else
                {
                    Return (GUPC (One))
                }
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                If (((CABL == Zero) && (BRDT == One)))
                {
                    Return (GPLD (Zero, Zero))
                }
                ElseIf (((BDID == 0x30) || ((BDID == 0x31) || (BDID == 
                    0x32))))
                {
                    Return (TPLD (One, One))
                }
                Else
                {
                    Return (GPLD (One, One))
                }
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.SS08)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                If (BRDT)
                {
                    Return (GUPC (Zero))
                }
                Else
                {
                    Return (GUPC (One))
                }
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                If (BRDT)
                {
                    Return (GPLD (Zero, Zero))
                }
                Else
                {
                    Return (GPLD (One, 0x02))
                }
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.SS09)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (One))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (GPLD (Zero, Zero))
            }
        }

        Scope (\_SB.PCI0.XHC.RHUB.SS10)
        {
            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (GUPC (Zero))
            }

            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (GPLD (Zero, Zero))
            }
        }

        Scope (\_SB.PCI0.XDCI)
        {
            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
            {
                Return (\_SB.PCI0.XHC.RHUB.TPLD (One, 0x0E))
            }

            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
            {
                Return (\_SB.PCI0.XHC.RHUB.TUPC (0x08))
            }
        }
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApCst", 0x00003000)
{
    External (_PR_.CPU0._CST, UnknownObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)

    Scope (\_PR.CPU1)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApIst", 0x00003000)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU0._PCT, MethodObj)    // 0 Arguments
    External (_PR_.CPU0._PPC, MethodObj)    // 0 Arguments
    External (_PR_.CPU0._PSS, MethodObj)    // 0 Arguments
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (PDC0, IntObj)
    External (TCNT, FieldUnitObj)

    Scope (\_PR.CPU1)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU1.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU1.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU2)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU2.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU2.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU3)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU3.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU3.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU4)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU4.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU4.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU5)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU5.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU5.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU6)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU6.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU6.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }

    Scope (\_PR.CPU7)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }

        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU7.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU7.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }
}



SSDT12
------
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApHwp", 0x00003000)
{
    External (_PR_.CPU0, ProcessorObj)
    External (_PR_.CPU0._CPC, MethodObj)    // 0 Arguments
    External (_PR_.CPU1, ProcessorObj)
    External (_PR_.CPU2, ProcessorObj)
    External (_PR_.CPU3, ProcessorObj)
    External (_PR_.CPU4, ProcessorObj)
    External (_PR_.CPU5, ProcessorObj)
    External (_PR_.CPU6, ProcessorObj)
    External (_PR_.CPU7, ProcessorObj)

    Scope (\_PR.CPU1)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_CPC, 0, NotSerialized)  // _CPC: Continuous Performance Control
        {
            Return (\_PR.CPU0._CPC ())
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.B0D3, DeviceObj)
    External (_SB_.PCI0.GFX0, DeviceObj)
    External (_SB_.PCI0.GFX0.HDOS, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GFX0.HNOT, MethodObj)    // 1 Arguments
    External (CPSC, UnknownObj)
    External (DSEN, UnknownObj)
    External (ECON, IntObj)
    External (GUAM, MethodObj)    // 1 Arguments
    External (OSYS, IntObj)
    External (PNHM, IntObj)
    External (S0ID, UnknownObj)

    OperationRegion (SANV, SystemMemory, 0xD2A90898, 0x01F7)
    Field (SANV, AnyAcc, Lock, Preserve)
    {
        ASLB,   32, 
        IMON,   8, 
        IGDS,   8, 
        IBTT,   8, 
        IPAT,   8, 
        IPSC,   8, 
        IBIA,   8, 
        ISSC,   8, 
        IDMS,   8, 
        IF1E,   8, 
        HVCO,   8, 
        GSMI,   8, 
        PAVP,   8, 
        CADL,   8, 
        CSTE,   16, 
        NSTE,   16, 
        NDID,   8, 
        DID1,   32, 
        DID2,   32, 
        DID3,   32, 
        DID4,   32, 
        DID5,   32, 
        DID6,   32, 
        DID7,   32, 
        DID8,   32, 
        DID9,   32, 
        DIDA,   32, 
        DIDB,   32, 
        DIDC,   32, 
        DIDD,   32, 
        DIDE,   32, 
        DIDF,   32, 
        DIDX,   32, 
        NXD1,   32, 
        NXD2,   32, 
        NXD3,   32, 
        NXD4,   32, 
        NXD5,   32, 
        NXD6,   32, 
        NXD7,   32, 
        NXD8,   32, 
        NXDX,   32, 
        LIDS,   8, 
        KSV0,   32, 
        KSV1,   8, 
        BRTL,   8, 
        ALSE,   8, 
        ALAF,   8, 
        LLOW,   8, 
        LHIH,   8, 
        ALFP,   8, 
        IMTP,   8, 
        EDPV,   8, 
        SGMD,   8, 
        SGFL,   8, 
        SGGP,   8, 
        HRE0,   8, 
        HRG0,   32, 
        HRA0,   8, 
        PWE0,   8, 
        PWG0,   32, 
        PWA0,   8, 
        P1GP,   8, 
        HRE1,   8, 
        HRG1,   32, 
        HRA1,   8, 
        PWE1,   8, 
        PWG1,   32, 
        PWA1,   8, 
        P2GP,   8, 
        HRE2,   8, 
        HRG2,   32, 
        HRA2,   8, 
        PWE2,   8, 
        PWG2,   32, 
        PWA2,   8, 
        DLPW,   16, 
        DLHR,   16, 
        EECP,   8, 
        XBAS,   32, 
        GBAS,   16, 
        NVGA,   32, 
        NVHA,   32, 
        AMDA,   32, 
        LTRX,   8, 
        OBFX,   8, 
        LTRY,   8, 
        OBFY,   8, 
        LTRZ,   8, 
        OBFZ,   8, 
        SMSL,   16, 
        SNSL,   16, 
        P0UB,   8, 
        P1UB,   8, 
        P2UB,   8, 
        PCSL,   8, 
        PBGE,   8, 
        M64B,   64, 
        M64L,   64, 
        CPEX,   32, 
        EEC1,   8, 
        EEC2,   8, 
        SBN0,   8, 
        SBN1,   8, 
        SBN2,   8, 
        M32B,   32, 
        M32L,   32, 
        P0WK,   32, 
        P1WK,   32, 
        P2WK,   32, 
        MXD1,   32, 
        MXD2,   32, 
        MXD3,   32, 
        MXD4,   32, 
        MXD5,   32, 
        MXD6,   32, 
        MXD7,   32, 
        MXD8,   32, 
        PXFD,   8, 
        EBAS,   32, 
        DGVS,   32, 
        DGVB,   32, 
        HYSS,   32, 
        NVAF,   8, 
        Offset (0x1F4), 
        Offset (0x1F7)
    }

    Scope (\_SB.PCI0.GFX0)
    {
        Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
        {
            DSEN = (Arg0 & 0x07)
            If (((Arg0 & 0x03) == Zero))
            {
                If (CondRefOf (HDOS))
                {
                    HDOS ()
                }
            }
        }

        Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
        {
            If ((IMTP == One))
            {
                NDID = One
            }
            Else
            {
                NDID = Zero
            }

            If ((DIDL != Zero))
            {
                DID1 = SDDL (DIDL)
            }

            If ((DDL2 != Zero))
            {
                DID2 = SDDL (DDL2)
            }

            If ((DDL3 != Zero))
            {
                DID3 = SDDL (DDL3)
            }

            If ((DDL4 != Zero))
            {
                DID4 = SDDL (DDL4)
            }

            If ((DDL5 != Zero))
            {
                DID5 = SDDL (DDL5)
            }

            If ((DDL6 != Zero))
            {
                DID6 = SDDL (DDL6)
            }

            If ((DDL7 != Zero))
            {
                DID7 = SDDL (DDL7)
            }

            If ((DDL8 != Zero))
            {
                DID8 = SDDL (DDL8)
            }

            If ((DDL9 != Zero))
            {
                DID9 = SDDL (DDL9)
            }

            If ((DD10 != Zero))
            {
                DIDA = SDDL (DD10)
            }

            If ((DD11 != Zero))
            {
                DIDB = SDDL (DD11)
            }

            If ((DD12 != Zero))
            {
                DIDC = SDDL (DD12)
            }

            If ((DD13 != Zero))
            {
                DIDD = SDDL (DD13)
            }

            If ((DD14 != Zero))
            {
                DIDE = SDDL (DD14)
            }

            If ((DD15 != Zero))
            {
                DIDF = SDDL (DD15)
            }

            If ((NDID == One))
            {
                Name (TMP1, Package (0x01)
                {
                    0xFFFFFFFF
                })
                If ((IMTP == One))
                {
                    TMP1 [Zero] = 0x0002CA00
                }
                Else
                {
                    TMP1 [Zero] = (0x00010000 | DID1)
                }

                Return (TMP1) /* \_SB_.PCI0.GFX0._DOD.TMP1 */
            }

            If ((NDID == 0x02))
            {
                Name (TMP2, Package (0x02)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP2 [Zero] = (0x00010000 | DID1)
                If ((IMTP == One))
                {
                    TMP2 [One] = 0x0002CA00
                }
                Else
                {
                    TMP2 [One] = (0x00010000 | DID2)
                }

                Return (TMP2) /* \_SB_.PCI0.GFX0._DOD.TMP2 */
            }

            If ((NDID == 0x03))
            {
                Name (TMP3, Package (0x03)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP3 [Zero] = (0x00010000 | DID1)
                TMP3 [One] = (0x00010000 | DID2)
                If ((IMTP == One))
                {
                    TMP3 [0x02] = 0x0002CA00
                }
                Else
                {
                    TMP3 [0x02] = (0x00010000 | DID3)
                }

                Return (TMP3) /* \_SB_.PCI0.GFX0._DOD.TMP3 */
            }

            If ((NDID == 0x04))
            {
                Name (TMP4, Package (0x04)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP4 [Zero] = (0x00010000 | DID1)
                TMP4 [One] = (0x00010000 | DID2)
                TMP4 [0x02] = (0x00010000 | DID3)
                If ((IMTP == One))
                {
                    TMP4 [0x03] = 0x0002CA00
                }
                Else
                {
                    TMP4 [0x03] = (0x00010000 | DID4)
                }

                Return (TMP4) /* \_SB_.PCI0.GFX0._DOD.TMP4 */
            }

            If ((NDID == 0x05))
            {
                Name (TMP5, Package (0x05)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP5 [Zero] = (0x00010000 | DID1)
                TMP5 [One] = (0x00010000 | DID2)
                TMP5 [0x02] = (0x00010000 | DID3)
                TMP5 [0x03] = (0x00010000 | DID4)
                If ((IMTP == One))
                {
                    TMP5 [0x04] = 0x0002CA00
                }
                Else
                {
                    TMP5 [0x04] = (0x00010000 | DID5)
                }

                Return (TMP5) /* \_SB_.PCI0.GFX0._DOD.TMP5 */
            }

            If ((NDID == 0x06))
            {
                Name (TMP6, Package (0x06)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP6 [Zero] = (0x00010000 | DID1)
                TMP6 [One] = (0x00010000 | DID2)
                TMP6 [0x02] = (0x00010000 | DID3)
                TMP6 [0x03] = (0x00010000 | DID4)
                TMP6 [0x04] = (0x00010000 | DID5)
                If ((IMTP == One))
                {
                    TMP6 [0x05] = 0x0002CA00
                }
                Else
                {
                    TMP6 [0x05] = (0x00010000 | DID6)
                }

                Return (TMP6) /* \_SB_.PCI0.GFX0._DOD.TMP6 */
            }

            If ((NDID == 0x07))
            {
                Name (TMP7, Package (0x07)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP7 [Zero] = (0x00010000 | DID1)
                TMP7 [One] = (0x00010000 | DID2)
                TMP7 [0x02] = (0x00010000 | DID3)
                TMP7 [0x03] = (0x00010000 | DID4)
                TMP7 [0x04] = (0x00010000 | DID5)
                TMP7 [0x05] = (0x00010000 | DID6)
                If ((IMTP == One))
                {
                    TMP7 [0x06] = 0x0002CA00
                }
                Else
                {
                    TMP7 [0x06] = (0x00010000 | DID7)
                }

                Return (TMP7) /* \_SB_.PCI0.GFX0._DOD.TMP7 */
            }

            If ((NDID == 0x08))
            {
                Name (TMP8, Package (0x08)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP8 [Zero] = (0x00010000 | DID1)
                TMP8 [One] = (0x00010000 | DID2)
                TMP8 [0x02] = (0x00010000 | DID3)
                TMP8 [0x03] = (0x00010000 | DID4)
                TMP8 [0x04] = (0x00010000 | DID5)
                TMP8 [0x05] = (0x00010000 | DID6)
                TMP8 [0x06] = (0x00010000 | DID7)
                If ((IMTP == One))
                {
                    TMP8 [0x07] = 0x0002CA00
                }
                Else
                {
                    TMP8 [0x07] = (0x00010000 | DID8)
                }

                Return (TMP8) /* \_SB_.PCI0.GFX0._DOD.TMP8 */
            }

            If ((NDID == 0x09))
            {
                Name (TMP9, Package (0x09)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMP9 [Zero] = (0x00010000 | DID1)
                TMP9 [One] = (0x00010000 | DID2)
                TMP9 [0x02] = (0x00010000 | DID3)
                TMP9 [0x03] = (0x00010000 | DID4)
                TMP9 [0x04] = (0x00010000 | DID5)
                TMP9 [0x05] = (0x00010000 | DID6)
                TMP9 [0x06] = (0x00010000 | DID7)
                TMP9 [0x07] = (0x00010000 | DID8)
                If ((IMTP == One))
                {
                    TMP9 [0x08] = 0x0002CA00
                }
                Else
                {
                    TMP9 [0x08] = (0x00010000 | DID9)
                }

                Return (TMP9) /* \_SB_.PCI0.GFX0._DOD.TMP9 */
            }

            If ((NDID == 0x0A))
            {
                Name (TMPA, Package (0x0A)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPA [Zero] = (0x00010000 | DID1)
                TMPA [One] = (0x00010000 | DID2)
                TMPA [0x02] = (0x00010000 | DID3)
                TMPA [0x03] = (0x00010000 | DID4)
                TMPA [0x04] = (0x00010000 | DID5)
                TMPA [0x05] = (0x00010000 | DID6)
                TMPA [0x06] = (0x00010000 | DID7)
                TMPA [0x07] = (0x00010000 | DID8)
                TMPA [0x08] = (0x00010000 | DID9)
                If ((IMTP == One))
                {
                    TMPA [0x09] = 0x0002CA00
                }
                Else
                {
                    TMPA [0x09] = (0x00010000 | DIDA)
                }

                Return (TMPA) /* \_SB_.PCI0.GFX0._DOD.TMPA */
            }

            If ((NDID == 0x0B))
            {
                Name (TMPB, Package (0x0B)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPB [Zero] = (0x00010000 | DID1)
                TMPB [One] = (0x00010000 | DID2)
                TMPB [0x02] = (0x00010000 | DID3)
                TMPB [0x03] = (0x00010000 | DID4)
                TMPB [0x04] = (0x00010000 | DID5)
                TMPB [0x05] = (0x00010000 | DID6)
                TMPB [0x06] = (0x00010000 | DID7)
                TMPB [0x07] = (0x00010000 | DID8)
                TMPB [0x08] = (0x00010000 | DID9)
                TMPB [0x09] = (0x00010000 | DIDA)
                If ((IMTP == One))
                {
                    TMPB [0x0A] = 0x0002CA00
                }
                Else
                {
                    TMPB [0x0A] = (0x00010000 | DIDB)
                }

                Return (TMPB) /* \_SB_.PCI0.GFX0._DOD.TMPB */
            }

            If ((NDID == 0x0C))
            {
                Name (TMPC, Package (0x0C)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPC [Zero] = (0x00010000 | DID1)
                TMPC [One] = (0x00010000 | DID2)
                TMPC [0x02] = (0x00010000 | DID3)
                TMPC [0x03] = (0x00010000 | DID4)
                TMPC [0x04] = (0x00010000 | DID5)
                TMPC [0x05] = (0x00010000 | DID6)
                TMPC [0x06] = (0x00010000 | DID7)
                TMPC [0x07] = (0x00010000 | DID8)
                TMPC [0x08] = (0x00010000 | DID9)
                TMPC [0x09] = (0x00010000 | DIDA)
                TMPC [0x0A] = (0x00010000 | DIDB)
                If ((IMTP == One))
                {
                    TMPC [0x0B] = 0x0002CA00
                }
                Else
                {
                    TMPC [0x0B] = (0x00010000 | DIDC)
                }

                Return (TMPC) /* \_SB_.PCI0.GFX0._DOD.TMPC */
            }

            If ((NDID == 0x0D))
            {
                Name (TMPD, Package (0x0D)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPD [Zero] = (0x00010000 | DID1)
                TMPD [One] = (0x00010000 | DID2)
                TMPD [0x02] = (0x00010000 | DID3)
                TMPD [0x03] = (0x00010000 | DID4)
                TMPD [0x04] = (0x00010000 | DID5)
                TMPD [0x05] = (0x00010000 | DID6)
                TMPD [0x06] = (0x00010000 | DID7)
                TMPD [0x07] = (0x00010000 | DID8)
                TMPD [0x08] = (0x00010000 | DID9)
                TMPD [0x09] = (0x00010000 | DIDA)
                TMPD [0x0A] = (0x00010000 | DIDB)
                TMPD [0x0B] = (0x00010000 | DIDC)
                If ((IMTP == One))
                {
                    TMPD [0x0C] = 0x0002CA00
                }
                Else
                {
                    TMPD [0x0C] = (0x00010000 | DIDD)
                }

                Return (TMPD) /* \_SB_.PCI0.GFX0._DOD.TMPD */
            }

            If ((NDID == 0x0E))
            {
                Name (TMPE, Package (0x0E)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPE [Zero] = (0x00010000 | DID1)
                TMPE [One] = (0x00010000 | DID2)
                TMPE [0x02] = (0x00010000 | DID3)
                TMPE [0x03] = (0x00010000 | DID4)
                TMPE [0x04] = (0x00010000 | DID5)
                TMPE [0x05] = (0x00010000 | DID6)
                TMPE [0x06] = (0x00010000 | DID7)
                TMPE [0x07] = (0x00010000 | DID8)
                TMPE [0x08] = (0x00010000 | DID9)
                TMPE [0x09] = (0x00010000 | DIDA)
                TMPE [0x0A] = (0x00010000 | DIDB)
                TMPE [0x0B] = (0x00010000 | DIDC)
                TMPE [0x0C] = (0x00010000 | DIDD)
                If ((IMTP == One))
                {
                    TMPE [0x0D] = 0x0002CA00
                }
                Else
                {
                    TMPE [0x0D] = (0x00010000 | DIDE)
                }

                Return (TMPE) /* \_SB_.PCI0.GFX0._DOD.TMPE */
            }

            If ((NDID == 0x0F))
            {
                Name (TMPF, Package (0x0F)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPF [Zero] = (0x00010000 | DID1)
                TMPF [One] = (0x00010000 | DID2)
                TMPF [0x02] = (0x00010000 | DID3)
                TMPF [0x03] = (0x00010000 | DID4)
                TMPF [0x04] = (0x00010000 | DID5)
                TMPF [0x05] = (0x00010000 | DID6)
                TMPF [0x06] = (0x00010000 | DID7)
                TMPF [0x07] = (0x00010000 | DID8)
                TMPF [0x08] = (0x00010000 | DID9)
                TMPF [0x09] = (0x00010000 | DIDA)
                TMPF [0x0A] = (0x00010000 | DIDB)
                TMPF [0x0B] = (0x00010000 | DIDC)
                TMPF [0x0C] = (0x00010000 | DIDD)
                TMPF [0x0D] = (0x00010000 | DIDE)
                If ((IMTP == One))
                {
                    TMPF [0x0E] = 0x0002CA00
                }
                Else
                {
                    TMPF [0x0E] = (0x00010000 | DIDF)
                }

                Return (TMPF) /* \_SB_.PCI0.GFX0._DOD.TMPF */
            }

            If ((NDID == 0x10))
            {
                Name (TMPG, Package (0x10)
                {
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF, 
                    0xFFFFFFFF
                })
                TMPG [Zero] = (0x00010000 | DID1)
                TMPG [One] = (0x00010000 | DID2)
                TMPG [0x02] = (0x00010000 | DID3)
                TMPG [0x03] = (0x00010000 | DID4)
                TMPG [0x04] = (0x00010000 | DID5)
                TMPG [0x05] = (0x00010000 | DID6)
                TMPG [0x06] = (0x00010000 | DID7)
                TMPG [0x07] = (0x00010000 | DID8)
                TMPG [0x08] = (0x00010000 | DID9)
                TMPG [0x09] = (0x00010000 | DIDA)
                TMPG [0x0A] = (0x00010000 | DIDB)
                TMPG [0x0B] = (0x00010000 | DIDC)
                TMPG [0x0C] = (0x00010000 | DIDD)
                TMPG [0x0D] = (0x00010000 | DIDE)
                TMPG [0x0E] = (0x00010000 | DIDF)
                TMPG [0x0F] = 0x0002CA00
                Return (TMPG) /* \_SB_.PCI0.GFX0._DOD.TMPG */
            }

            Return (Package (0x01)
            {
                0x0400
            })
        }

        Device (DD01)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID1) == 0x0400))
                {
                    EDPV = One
                    NXDX = NXD1 /* \NXD1 */
                    DIDX = DID1 /* \DID1 */
                    Return (One)
                }

                If ((DID1 == Zero))
                {
                    Return (One)
                }
                Else
                {
                    Return ((0xFFFF & DID1))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Return (CDDS (DID1))
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD1) /* \NXD1 */
                }

                Return (NDDS (DID1))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD02)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID2) == 0x0400))
                {
                    EDPV = 0x02
                    NXDX = NXD2 /* \NXD2 */
                    DIDX = DID2 /* \DID2 */
                    Return (0x02)
                }

                If ((DID2 == Zero))
                {
                    Return (0x02)
                }
                Else
                {
                    Return ((0xFFFF & DID2))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((LIDS == Zero))
                {
                    Return (Zero)
                }

                Return (CDDS (DID2))
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD2) /* \NXD2 */
                }

                Return (NDDS (DID2))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD03)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID3) == 0x0400))
                {
                    EDPV = 0x03
                    NXDX = NXD3 /* \NXD3 */
                    DIDX = DID3 /* \DID3 */
                    Return (0x03)
                }

                If ((DID3 == Zero))
                {
                    Return (0x03)
                }
                Else
                {
                    Return ((0xFFFF & DID3))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID3 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID3))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD3) /* \NXD3 */
                }

                Return (NDDS (DID3))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD04)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID4) == 0x0400))
                {
                    EDPV = 0x04
                    NXDX = NXD4 /* \NXD4 */
                    DIDX = DID4 /* \DID4 */
                    Return (0x04)
                }

                If ((DID4 == Zero))
                {
                    Return (0x04)
                }
                Else
                {
                    Return ((0xFFFF & DID4))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID4 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID4))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD4) /* \NXD4 */
                }

                Return (NDDS (DID4))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD05)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID5) == 0x0400))
                {
                    EDPV = 0x05
                    NXDX = NXD5 /* \NXD5 */
                    DIDX = DID5 /* \DID5 */
                    Return (0x05)
                }

                If ((DID5 == Zero))
                {
                    Return (0x05)
                }
                Else
                {
                    Return ((0xFFFF & DID5))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID5 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID5))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD5) /* \NXD5 */
                }

                Return (NDDS (DID5))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD06)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID6) == 0x0400))
                {
                    EDPV = 0x06
                    NXDX = NXD6 /* \NXD6 */
                    DIDX = DID6 /* \DID6 */
                    Return (0x06)
                }

                If ((DID6 == Zero))
                {
                    Return (0x06)
                }
                Else
                {
                    Return ((0xFFFF & DID6))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID6 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID6))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD6) /* \NXD6 */
                }

                Return (NDDS (DID6))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD07)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID7) == 0x0400))
                {
                    EDPV = 0x07
                    NXDX = NXD7 /* \NXD7 */
                    DIDX = DID7 /* \DID7 */
                    Return (0x07)
                }

                If ((DID7 == Zero))
                {
                    Return (0x07)
                }
                Else
                {
                    Return ((0xFFFF & DID7))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID7 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID7))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD7) /* \NXD7 */
                }

                Return (NDDS (DID7))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD08)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID8) == 0x0400))
                {
                    EDPV = 0x08
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DID8 /* \DID8 */
                    Return (0x08)
                }

                If ((DID8 == Zero))
                {
                    Return (0x08)
                }
                Else
                {
                    Return ((0xFFFF & DID8))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID8 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID8))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DID8))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD09)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID9) == 0x0400))
                {
                    EDPV = 0x09
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DID9 /* \DID9 */
                    Return (0x09)
                }

                If ((DID9 == Zero))
                {
                    Return (0x09)
                }
                Else
                {
                    Return ((0xFFFF & DID9))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID9 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID9))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DID9))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0A)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDA) == 0x0400))
                {
                    EDPV = 0x0A
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDA /* \DIDA */
                    Return (0x0A)
                }

                If ((DIDA == Zero))
                {
                    Return (0x0A)
                }
                Else
                {
                    Return ((0xFFFF & DIDA))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDA == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DIDA))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDA))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0B)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDB) == 0x0400))
                {
                    EDPV = 0x0B
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDB /* \DIDB */
                    Return (0x0B)
                }

                If ((DIDB == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return ((0xFFFF & DIDB))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDB == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DIDB))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDB))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0C)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDC) == 0x0400))
                {
                    EDPV = 0x0C
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDC /* \DIDC */
                    Return (0x0C)
                }

                If ((DIDC == Zero))
                {
                    Return (0x0C)
                }
                Else
                {
                    Return ((0xFFFF & DIDC))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDC == Zero))
                {
                    Return (0x0C)
                }
                Else
                {
                    Return (CDDS (DIDC))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDC))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0D)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDD) == 0x0400))
                {
                    EDPV = 0x0D
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDD /* \DIDD */
                    Return (0x0D)
                }

                If ((DIDD == Zero))
                {
                    Return (0x0D)
                }
                Else
                {
                    Return ((0xFFFF & DIDD))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDD == Zero))
                {
                    Return (0x0D)
                }
                Else
                {
                    Return (CDDS (DIDD))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDD))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0E)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDE) == 0x0400))
                {
                    EDPV = 0x0E
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDE /* \DIDE */
                    Return (0x0E)
                }

                If ((DIDE == Zero))
                {
                    Return (0x0E)
                }
                Else
                {
                    Return ((0xFFFF & DIDE))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDE == Zero))
                {
                    Return (0x0E)
                }
                Else
                {
                    Return (CDDS (DIDE))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDE))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0F)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDF) == 0x0400))
                {
                    EDPV = 0x0F
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDF /* \DIDF */
                    Return (0x0F)
                }

                If ((DIDF == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return ((0xFFFF & DIDF))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDC == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (CDDS (DIDF))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDF))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD1F)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If ((EDPV == Zero))
                {
                    Return (0x1F)
                }
                Else
                {
                    Return ((0xFFFF & DIDX))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((EDPV == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (CDDS (DIDX))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXDX) /* \NXDX */
                }

                Return (NDDS (DIDX))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }

            Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
            {
                Return (Package (0x67)
                {
                    0x50, 
                    0x32, 
                    Zero, 
                    One, 
                    0x02, 
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07, 
                    0x08, 
                    0x09, 
                    0x0A, 
                    0x0B, 
                    0x0C, 
                    0x0D, 
                    0x0E, 
                    0x0F, 
                    0x10, 
                    0x11, 
                    0x12, 
                    0x13, 
                    0x14, 
                    0x15, 
                    0x16, 
                    0x17, 
                    0x18, 
                    0x19, 
                    0x1A, 
                    0x1B, 
                    0x1C, 
                    0x1D, 
                    0x1E, 
                    0x1F, 
                    0x20, 
                    0x21, 
                    0x22, 
                    0x23, 
                    0x24, 
                    0x25, 
                    0x26, 
                    0x27, 
                    0x28, 
                    0x29, 
                    0x2A, 
                    0x2B, 
                    0x2C, 
                    0x2D, 
                    0x2E, 
                    0x2F, 
                    0x30, 
                    0x31, 
                    0x32, 
                    0x33, 
                    0x34, 
                    0x35, 
                    0x36, 
                    0x37, 
                    0x38, 
                    0x39, 
                    0x3A, 
                    0x3B, 
                    0x3C, 
                    0x3D, 
                    0x3E, 
                    0x3F, 
                    0x40, 
                    0x41, 
                    0x42, 
                    0x43, 
                    0x44, 
                    0x45, 
                    0x46, 
                    0x47, 
                    0x48, 
                    0x49, 
                    0x4A, 
                    0x4B, 
                    0x4C, 
                    0x4D, 
                    0x4E, 
                    0x4F, 
                    0x50, 
                    0x51, 
                    0x52, 
                    0x53, 
                    0x54, 
                    0x55, 
                    0x56, 
                    0x57, 
                    0x58, 
                    0x59, 
                    0x5A, 
                    0x5B, 
                    0x5C, 
                    0x5D, 
                    0x5E, 
                    0x5F, 
                    0x60, 
                    0x61, 
                    0x62, 
                    0x63, 
                    0x64
                })
            }

            Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
            {
                If (((Arg0 >= Zero) && (Arg0 <= 0x64)))
                {
                    \_SB.PCI0.GFX0.AINT (One, Arg0)
                    BRTL = Arg0
                }
            }

            Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
            {
                Return (BRTL) /* \BRTL */
            }
        }

        Method (SDDL, 1, NotSerialized)
        {
            NDID++
            Local0 = (Arg0 & 0x0F0F)
            Local1 = (0x80000000 | Local0)
            If ((DIDL == Local0))
            {
                Return (Local1)
            }

            If ((DDL2 == Local0))
            {
                Return (Local1)
            }

            If ((DDL3 == Local0))
            {
                Return (Local1)
            }

            If ((DDL4 == Local0))
            {
                Return (Local1)
            }

            If ((DDL5 == Local0))
            {
                Return (Local1)
            }

            If ((DDL6 == Local0))
            {
                Return (Local1)
            }

            If ((DDL7 == Local0))
            {
                Return (Local1)
            }

            If ((DDL8 == Local0))
            {
                Return (Local1)
            }

            If ((DDL9 == Local0))
            {
                Return (Local1)
            }

            If ((DD10 == Local0))
            {
                Return (Local1)
            }

            If ((DD11 == Local0))
            {
                Return (Local1)
            }

            If ((DD12 == Local0))
            {
                Return (Local1)
            }

            If ((DD13 == Local0))
            {
                Return (Local1)
            }

            If ((DD14 == Local0))
            {
                Return (Local1)
            }

            If ((DD15 == Local0))
            {
                Return (Local1)
            }

            Return (Zero)
        }

        Method (CDDS, 1, NotSerialized)
        {
            Local0 = (Arg0 & 0x0F0F)
            If ((Zero == Local0))
            {
                Return (0x1D)
            }

            If ((CADL == Local0))
            {
                Return (0x1F)
            }

            If ((CAL2 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL3 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL4 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL5 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL6 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL7 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL8 == Local0))
            {
                Return (0x1F)
            }

            Return (0x1D)
        }

        Method (NDDS, 1, NotSerialized)
        {
            Local0 = (Arg0 & 0x0F0F)
            If ((Zero == Local0))
            {
                Return (Zero)
            }

            If ((NADL == Local0))
            {
                Return (One)
            }

            If ((NDL2 == Local0))
            {
                Return (One)
            }

            If ((NDL3 == Local0))
            {
                Return (One)
            }

            If ((NDL4 == Local0))
            {
                Return (One)
            }

            If ((NDL5 == Local0))
            {
                Return (One)
            }

            If ((NDL6 == Local0))
            {
                Return (One)
            }

            If ((NDL7 == Local0))
            {
                Return (One)
            }

            If ((NDL8 == Local0))
            {
                Return (One)
            }

            Return (Zero)
        }

        Method (DSST, 1, NotSerialized)
        {
            If (((Arg0 & 0xC0000000) == 0xC0000000))
            {
                CSTE = NSTE /* \NSTE */
            }
        }

        Scope (\_SB.PCI0)
        {
            OperationRegion (MCHP, PCI_Config, 0x40, 0xC0)
            Field (MCHP, AnyAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                AUDE,   8, 
                Offset (0x60), 
                TASM,   10, 
                Offset (0x62)
            }
        }

        OperationRegion (IGDP, PCI_Config, 0x40, 0xC0)
        Field (IGDP, AnyAcc, NoLock, Preserve)
        {
            Offset (0x10), 
                ,   1, 
            GIVD,   1, 
                ,   2, 
            GUMA,   3, 
            Offset (0x12), 
            Offset (0x14), 
                ,   4, 
            GMFN,   1, 
            Offset (0x18), 
            Offset (0xA4), 
            ASLE,   8, 
            Offset (0xA8), 
            GSSE,   1, 
            GSSB,   14, 
            GSES,   1, 
            Offset (0xB0), 
                ,   12, 
            CDVL,   1, 
            Offset (0xB2), 
            Offset (0xB5), 
            LBPC,   8, 
            Offset (0xBC), 
            ASLS,   32
        }

        OperationRegion (IGDM, SystemMemory, ASLB, 0x2000)
        Field (IGDM, AnyAcc, NoLock, Preserve)
        {
            SIGN,   128, 
            SIZE,   32, 
            OVER,   32, 
            SVER,   256, 
            VVER,   128, 
            GVER,   128, 
            MBOX,   32, 
            DMOD,   32, 
            PCON,   32, 
            DVER,   64, 
            Offset (0x100), 
            DRDY,   32, 
            CSTS,   32, 
            CEVT,   32, 
            Offset (0x120), 
            DIDL,   32, 
            DDL2,   32, 
            DDL3,   32, 
            DDL4,   32, 
            DDL5,   32, 
            DDL6,   32, 
            DDL7,   32, 
            DDL8,   32, 
            CPDL,   32, 
            CPL2,   32, 
            CPL3,   32, 
            CPL4,   32, 
            CPL5,   32, 
            CPL6,   32, 
            CPL7,   32, 
            CPL8,   32, 
            CADL,   32, 
            CAL2,   32, 
            CAL3,   32, 
            CAL4,   32, 
            CAL5,   32, 
            CAL6,   32, 
            CAL7,   32, 
            CAL8,   32, 
            NADL,   32, 
            NDL2,   32, 
            NDL3,   32, 
            NDL4,   32, 
            NDL5,   32, 
            NDL6,   32, 
            NDL7,   32, 
            NDL8,   32, 
            ASLP,   32, 
            TIDX,   32, 
            CHPD,   32, 
            CLID,   32, 
            CDCK,   32, 
            SXSW,   32, 
            EVTS,   32, 
            CNOT,   32, 
            NRDY,   32, 
            DDL9,   32, 
            DD10,   32, 
            DD11,   32, 
            DD12,   32, 
            DD13,   32, 
            DD14,   32, 
            DD15,   32, 
            CPL9,   32, 
            CP10,   32, 
            CP11,   32, 
            CP12,   32, 
            CP13,   32, 
            CP14,   32, 
            CP15,   32, 
            Offset (0x200), 
            SCIE,   1, 
            GEFC,   4, 
            GXFC,   3, 
            GESF,   8, 
            Offset (0x204), 
            PARM,   32, 
            DSLP,   32, 
            Offset (0x300), 
            ARDY,   32, 
            ASLC,   32, 
            TCHE,   32, 
            ALSI,   32, 
            BCLP,   32, 
            PFIT,   32, 
            CBLV,   32, 
            BCLM,   320, 
            CPFM,   32, 
            EPFM,   32, 
            PLUT,   592, 
            PFMB,   32, 
            CCDV,   32, 
            PCFT,   32, 
            SROT,   32, 
            IUER,   32, 
            FDSP,   64, 
            FDSS,   32, 
            STAT,   32, 
            Offset (0x400), 
            GVD1,   49152, 
            PHED,   32, 
            BDDC,   2048
        }

        Name (DBTB, Package (0x15)
        {
            Zero, 
            0x07, 
            0x38, 
            0x01C0, 
            0x0E00, 
            0x3F, 
            0x01C7, 
            0x0E07, 
            0x01F8, 
            0x0E38, 
            0x0FC0, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            0x7000, 
            0x7007, 
            0x7038, 
            0x71C0, 
            0x7E00
        })
        Name (CDCT, Package (0x05)
        {
            Package (0x02)
            {
                0xE4, 
                0x0140
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }, 

            Package (0x02)
            {
                Zero, 
                Zero
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }
        })
        Name (SUCC, One)
        Name (NVLD, 0x02)
        Name (CRIT, 0x04)
        Name (NCRT, 0x06)
        Method (GSCI, 0, Serialized)
        {
            Method (GBDA, 0, Serialized)
            {
                If ((GESF == Zero))
                {
                    PARM = 0x0659
                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == One))
                {
                    PARM = 0x00300482
                    If ((S0ID == One))
                    {
                        PARM |= 0x0100
                    }

                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x04))
                {
                    PARM &= 0xEFFF0000
                    PARM &= (DerefOf (DBTB [IBTT]) << 0x10)
                    PARM |= IBTT /* \_SB_.PCI0.GFX0.PARM */
                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x05))
                {
                    PARM = IPSC /* \IPSC */
                    PARM |= (IPAT << 0x08)
                    PARM += 0x0100
                    PARM |= (LIDS << 0x10)
                    PARM += 0x00010000
                    PARM |= (IBIA << 0x14)
                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x07))
                {
                    PARM = GIVD /* \_SB_.PCI0.GFX0.GIVD */
                    PARM ^= One
                    PARM |= (GMFN << One)
                    PARM |= 0x1800
                    PARM |= (IDMS << 0x11)
                    PARM |= (DerefOf (DerefOf (CDCT [HVCO]) [CDVL]) << 
                        0x15) /* \_SB_.PCI0.GFX0.PARM */
                    GESF = One
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x0A))
                {
                    PARM = Zero
                    If (ISSC)
                    {
                        PARM |= 0x03
                    }

                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x0B))
                {
                    PARM = KSV0 /* \KSV0 */
                    GESF = KSV1 /* \KSV1 */
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                GESF = Zero
                Return (CRIT) /* \_SB_.PCI0.GFX0.CRIT */
            }

            Method (SBCB, 0, Serialized)
            {
                If ((GESF == Zero))
                {
                    PARM = Zero
                    PARM = 0x000F87DD
                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == One))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x03))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x04))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x05))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x07))
                {
                    If (((S0ID == One) && (OSYS < 0x07DF)))
                    {
                        If (((PARM & 0xFF) == One))
                        {
                            \GUAM (One)
                        }

                        If (((PARM & 0xFF) == Zero))
                        {
                            \GUAM (Zero)
                        }
                    }

                    If ((PARM == Zero))
                    {
                        Local0 = CLID /* \_SB_.PCI0.GFX0.CLID */
                        If ((0x80000000 & Local0))
                        {
                            CLID &= 0x0F
                            GLID (CLID)
                        }
                    }

                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x08))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x09))
                {
                    IBTT = (PARM & 0xFF)
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x0A))
                {
                    IPSC = (PARM & 0xFF)
                    If (((PARM >> 0x08) & 0xFF))
                    {
                        IPAT = ((PARM >> 0x08) & 0xFF)
                        IPAT--
                    }

                    IBIA = ((PARM >> 0x14) & 0x07)
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x0B))
                {
                    IF1E = ((PARM >> One) & One)
                    If ((PARM & 0x0001E000))
                    {
                        IDMS = ((PARM >> 0x0D) & 0x0F)
                    }
                    Else
                    {
                        IDMS = ((PARM >> 0x11) & 0x0F)
                    }

                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x10))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x11))
                {
                    PARM = (LIDS << 0x08)
                    PARM += 0x0100
                    GESF = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x12))
                {
                    If ((PARM & One))
                    {
                        If (((PARM >> One) == One))
                        {
                            ISSC = One
                        }
                        Else
                        {
                            GESF = Zero
                            Return (CRIT) /* \_SB_.PCI0.GFX0.CRIT */
                        }
                    }
                    Else
                    {
                        ISSC = Zero
                    }

                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x13))
                {
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                If ((GESF == 0x14))
                {
                    PAVP = (PARM & 0x0F)
                    GESF = Zero
                    PARM = Zero
                    Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
                }

                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
            }

            If ((GEFC == 0x04))
            {
                GXFC = GBDA ()
            }

            If ((GEFC == 0x06))
            {
                GXFC = SBCB ()
            }

            GEFC = Zero
            CPSC = One
            GSSE = Zero
            SCIE = Zero
            Return (Zero)
        }

        Method (PDRD, 0, NotSerialized)
        {
            Return (!DRDY)
        }

        Method (PSTS, 0, NotSerialized)
        {
            If ((CSTS > 0x02))
            {
                Sleep (ASLP)
            }

            Return ((CSTS == 0x03))
        }

        Method (GNOT, 2, NotSerialized)
        {
            If (PDRD ())
            {
                Return (One)
            }

            CEVT = Arg0
            CSTS = 0x03
            If (((CHPD == Zero) && (Arg1 == Zero)))
            {
                Notify (\_SB.PCI0.GFX0, Arg1)
            }

            If (CondRefOf (HNOT))
            {
                HNOT (Arg0)
            }
            Else
            {
                Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
            }

            Return (Zero)
        }

        Method (GHDS, 1, NotSerialized)
        {
            TIDX = Arg0
            Return (GNOT (One, Zero))
        }

        Method (GLID, 1, NotSerialized)
        {
            If ((Arg0 == One))
            {
                CLID = 0x03
            }
            Else
            {
                CLID = Arg0
            }

            If (GNOT (0x02, Zero))
            {
                CLID |= 0x80000000
                Return (One)
            }

            Return (Zero)
        }

        Method (GDCK, 1, NotSerialized)
        {
            CDCK = Arg0
            Return (GNOT (0x04, Zero))
        }

        Method (PARD, 0, NotSerialized)
        {
            If (!ARDY)
            {
                Sleep (ASLP)
            }

            Return (!ARDY)
        }

        Method (IUEH, 1, Serialized)
        {
            IUER &= 0xC0
            IUER ^= (One << Arg0)
            If ((Arg0 <= 0x04))
            {
                Return (AINT (0x05, Zero))
            }
            Else
            {
                Return (AINT (Arg0, Zero))
            }
        }

        Method (AINT, 2, NotSerialized)
        {
            If (!(TCHE & (One << Arg0)))
            {
                Return (One)
            }

            If (PARD ())
            {
                Return (One)
            }

            If (((Arg0 >= 0x05) && (Arg0 <= 0x07)))
            {
                ASLC = (One << Arg0)
                ASLE = One
                Local2 = Zero
                While (((Local2 < 0xFA) && (ASLC != Zero)))
                {
                    Sleep (0x04)
                    Local2++
                }

                Return (Zero)
            }

            If ((Arg0 == 0x02))
            {
                If (CPFM)
                {
                    Local0 = (CPFM & 0x0F)
                    Local1 = (EPFM & 0x0F)
                    If ((Local0 == One))
                    {
                        If ((Local1 & 0x06))
                        {
                            PFIT = 0x06
                        }
                        ElseIf ((Local1 & 0x08))
                        {
                            PFIT = 0x08
                        }
                        Else
                        {
                            PFIT = One
                        }
                    }

                    If ((Local0 == 0x06))
                    {
                        If ((Local1 & 0x08))
                        {
                            PFIT = 0x08
                        }
                        ElseIf ((Local1 & One))
                        {
                            PFIT = One
                        }
                        Else
                        {
                            PFIT = 0x06
                        }
                    }

                    If ((Local0 == 0x08))
                    {
                        If ((Local1 & One))
                        {
                            PFIT = One
                        }
                        ElseIf ((Local1 & 0x06))
                        {
                            PFIT = 0x06
                        }
                        Else
                        {
                            PFIT = 0x08
                        }
                    }
                }
                Else
                {
                    PFIT ^= 0x07
                }

                PFIT |= 0x80000000
                ASLC = 0x04
            }
            ElseIf ((Arg0 == One))
            {
                BCLP = ((Arg1 * 0xFF) / 0x64)
                BCLP |= 0x80000000
                ASLC = 0x02
            }
            ElseIf ((Arg0 == Zero))
            {
                ALSI = Arg1
                ASLC = One
            }
            Else
            {
                Return (One)
            }

            ASLE = One
            Return (Zero)
        }

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3e5b41c6-eb1d-4260-9d15-c71fbadae414") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "iGfx Supported Functions Bitmap "
                            Return (0x0001E7FF)
                        }
                    }
                    Case (One)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = " Adapter Power State Notification "
                            If (((S0ID == One) && (OSYS < 0x07DF)))
                            {
                                If (((DerefOf (Arg3 [Zero]) & 0xFF) == One))
                                {
                                    \GUAM (One)
                                }

                                Local0 = (DerefOf (Arg3 [One]) & 0xFF)
                                If ((Local0 == Zero))
                                {
                                    \GUAM (Zero)
                                }
                            }

                            If ((DerefOf (Arg3 [Zero]) == Zero))
                            {
                                Local0 = CLID /* \_SB_.PCI0.GFX0.CLID */
                                If ((0x80000000 & Local0))
                                {
                                    CLID &= 0x0F
                                    GLID (CLID)
                                }
                            }

                            Return (One)
                        }
                    }
                    Case (0x02)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Display Power State Notification "
                            Return (One)
                        }
                    }
                    Case (0x03)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "BIOS POST Completion Notification "
                            Return (One)
                        }
                    }
                    Case (0x04)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Pre-Hires Set Mode "
                            Return (One)
                        }
                    }
                    Case (0x05)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Post-Hires Set Mode "
                            Return (One)
                        }
                    }
                    Case (0x06)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetDisplayDeviceNotification"
                            Return (One)
                        }
                    }
                    Case (0x07)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetBootDevicePreference "
                            IBTT = (DerefOf (Arg3 [Zero]) & 0xFF)
                            Return (One)
                        }
                    }
                    Case (0x08)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetPanelPreference "
                            IPSC = (DerefOf (Arg3 [Zero]) & 0xFF)
                            If ((DerefOf (Arg3 [One]) & 0xFF))
                            {
                                IPAT = (DerefOf (Arg3 [One]) & 0xFF)
                                IPAT--
                            }

                            IBIA = ((DerefOf (Arg3 [0x02]) >> 0x04) & 0x07)
                            Return (One)
                        }
                    }
                    Case (0x09)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "FullScreenDOS "
                            Return (One)
                        }
                    }
                    Case (0x0A)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "APM Complete "
                            Local0 = (LIDS << 0x08)
                            Local0 += 0x0100
                            Return (Local0)
                        }
                    }
                    Case (0x0D)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetBootDisplayPreference "
                            Local0 = ((DerefOf (Arg3 [0x03]) << 0x18) | (DerefOf (
                                Arg3 [0x02]) << 0x10))
                            Local0 &= 0xEFFF0000
                            Local0 &= (DerefOf (DBTB [IBTT]) << 0x10)
                            Local0 |= IBTT
                            Return (Local0)
                        }
                    }
                    Case (0x0E)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetPanelDetails "
                            Local0 = IPSC /* \IPSC */
                            Local0 |= (IPAT << 0x08)
                            Local0 += 0x0100
                            Local0 |= (LIDS << 0x10)
                            Local0 += 0x00010000
                            Local0 |= (IBIA << 0x14)
                            Return (Local0)
                        }
                    }
                    Case (0x0F)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetInternalGraphics "
                            Local0 = GIVD /* \_SB_.PCI0.GFX0.GIVD */
                            Local0 ^= One
                            Local0 |= (GMFN << One)
                            Local0 |= 0x1800
                            Local0 |= (IDMS << 0x11)
                            Local0 |= (DerefOf (DerefOf (CDCT [HVCO]) [CDVL]) << 
                                0x15)
                            Return (Local0)
                        }
                    }
                    Case (0x10)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetAKSV "
                            Name (KSVP, Package (0x02)
                            {
                                0x80000000, 
                                0x8000
                            })
                            KSVP [Zero] = KSV0 /* \KSV0 */
                            KSVP [One] = KSV1 /* \KSV1 */
                            Return (KSVP) /* \_SB_.PCI0.GFX0._DSM.KSVP */
                        }
                    }

                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (\_SB)
    {
        Device (SKC0)
        {
            Name (_HID, "INT3470")  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IMTP == 0x02))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (\_SB.PCI0.GFX0)
    {
        Device (SKC0)
        {
            Name (_ADR, 0xCA00)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IMTP == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_PR_.DTS1, UnknownObj)
    External (_PR_.DTS2, UnknownObj)
    External (_PR_.DTS3, UnknownObj)
    External (_PR_.DTS4, UnknownObj)
    External (_PR_.PDTS, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1CI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1DC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1DI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1FC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1FV, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B1RC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2CI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2DI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2FC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2FV, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2MH, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2ML, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.B2RC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.BMAX, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.CFS2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.CFSP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.CMDR, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.CPAP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.CPUP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.ECAV, IntObj)
    External (_SB_.PCI0.LPCB.H_EC.ECMD, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.LPCB.H_EC.ECRD, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.LPCB.H_EC.ECWT, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.LPCB.H_EC.GTVR, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MCPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MCTD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MDT0, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MFSP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MGPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MGTD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MMPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MMTL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.MPOL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NCPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NCTD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NGPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NGTD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NMTL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.NPOL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PCAD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PDT0, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PDT1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PDT2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PDT3, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEC0, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEC1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEC2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEC3, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PECC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PECD, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PECH, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PECI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEHI, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PENV, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEPM, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PEWL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PLAP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PMAX, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PPDT, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PPWR, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRCS, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRFC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRS0, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRS1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRS2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRS3, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PRS4, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PWFC, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.PWRL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER3, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER4, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER5, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TER6, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TMPL, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR2, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR3, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR4, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR5, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR6, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.TSR7, UnknownObj)
    External (_TZ_.TZ00._TMP, UnknownObj)
    External (_TZ_.TZ01._TMP, UnknownObj)
    External (PAMT, UnknownObj)
    External (TSDB, UnknownObj)

    Scope (\_SB)
    {
        Device (PTID)
        {
            Name (_HID, EisaId ("INT340E") /* Motherboard Resources */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID
            Name (IVER, 0x00030000)
            Name (_STA, 0x0F)  // _STA: Status
            Method (TSDL, 0, NotSerialized)
            {
                If ((TSDB == One))
                {
                    Return (TSD2) /* \_SB_.PTID.TSD2 */
                }

                Return (TSD1) /* \_SB_.PTID.TSD1 */
            }

            Name (TSD1, Package (0x28)
            {
                Zero, 
                "CPU Core 0 DTS", 
                Zero, 
                "CPU Core 1 DTS", 
                Zero, 
                "CPU Core 2 DTS", 
                Zero, 
                "CPU Core 3 DTS", 
                Zero, 
                "CPU Core Package DTS", 
                0x03, 
                "DIMM0_hotspot_U4C1", 
                0x03, 
                "DIMM1_hotspot_Q4D1", 
                0x03, 
                "IMVP_conn_Q7C1", 
                0x03, 
                "board_hotspot1_U3G3", 
                0x03, 
                "board_hotspot2_Q3G1", 
                Zero, 
                "CPU Package Temperature", 
                0x05, 
                "PCH DTS Temperature from PCH", 
                Zero, 
                "CPU PECI reading", 
                0x05, 
                "SA DTS Temperature from PCH", 
                0x02, 
                "TZ00 _TMP", 
                0x02, 
                "TZ01 _TMP", 
                0x03, 
                "SDRAM_hotspot_RT5B1", 
                0x03, 
                "NGFF_slot_RT6G1", 
                0x03, 
                "IMVP_conn_RT7D1", 
                0x03, 
                "board_hotspot3_RT8F1"
            })
            Name (TSD2, Package (0x26)
            {
                Zero, 
                "CPU Core 0 DTS", 
                Zero, 
                "CPU Core 1 DTS", 
                Zero, 
                "CPU Core 2 DTS", 
                Zero, 
                "CPU Core 3 DTS", 
                Zero, 
                "CPU Core Package DTS", 
                0x03, 
                "A-Skin Hotspot U21", 
                0x03, 
                "A-Skin Hotspot U21 IR", 
                0x03, 
                "B-Skin Hotspot U1", 
                0x03, 
                "B-Skin Hotspot U1 IR", 
                Zero, 
                "CPU Package Temperature", 
                0x05, 
                "PCH DTS Temperature from PCH", 
                Zero, 
                "CPU PECI reading", 
                0x05, 
                "SA DTS Temperature from PCH", 
                0x02, 
                "TZ00 _TMP", 
                0x03, 
                "SoC VR Thermsitor RT11", 
                0x03, 
                "Memory Thermistor RT9", 
                0x03, 
                "GNSS Board Ambient Thermistor R4", 
                0x03, 
                "System VR Thermistor RT10", 
                0x03, 
                "A-Skin Skycam Thermistor RT8"
            })
            Name (PSDL, Package (0x22)
            {
                0x0B, 
                "Cpu Power (mW)", 
                0x0B, 
                "Platform Power (mW)", 
                0x0B, 
                "Cpu Average Power (mW)", 
                0x0B, 
                "Platform Average Power (mW)", 
                0x0C, 
                "Battery 1 Design Capacity (mWh)", 
                0x0C, 
                "Battery 1 Remaining Capacity (mWh)", 
                0x0C, 
                "Battery 1 Full Charge Capacity (mWh)", 
                0x0C, 
                "Battery 1 Full Resolution Voltage (mV)", 
                0x0C, 
                "Battery 1 Full Resolution Discharge Current (mA)", 
                0x0C, 
                "Battery 1 Full Resolution Charge Current (mA)", 
                0x0C, 
                "Battery 2 Remaining Capacity (mWh)", 
                0x0C, 
                "Battery 2 Full Charge Capacity (mWh)", 
                0x0C, 
                "Battery 2 Full Resolution Voltage (mV)", 
                0x0C, 
                "Battery 2 Full Resolution Discharge Current (mA)", 
                0x0C, 
                "Battery 2 Full Resolution Charge Current (mA)", 
                0x0C, 
                "Battery Pack 1 maximum power (mW)", 
                0x0C, 
                "Battery Pack 2 maximum power (mW)"
            })
            Method (OSDL, 0, NotSerialized)
            {
                If ((TSDB == One))
                {
                    Return (OSD2) /* \_SB_.PTID.OSD2 */
                }

                Return (OSD1) /* \_SB_.PTID.OSD1 */
            }

            Name (OSD1, Package (0x15)
            {
                0x04, 
                "CPU Fan Duty Cycle", 
                "RAW", 
                0x04, 
                "CPU Fan #1 Speed", 
                "RPM", 
                0x03, 
                "Skin Temp 0", 
                "RAW", 
                0x03, 
                "Thermistor 1 ", 
                "RAW", 
                0x03, 
                "Thermistor 2 ", 
                "RAW", 
                0x03, 
                "Thermistor 3 ", 
                "RAW", 
                0x03, 
                "Thermistor 4 ", 
                "RAW"
            })
            Name (OSD2, Package (0x18)
            {
                0x04, 
                "CPU Fan Duty Cycle", 
                "RAW", 
                0x04, 
                "CPU Fan #1 Speed", 
                "RPM", 
                0x03, 
                "Skin Temp 0", 
                "RAW", 
                0x03, 
                "Thermistor 1 ", 
                "RAW", 
                0x03, 
                "Thermistor 2 ", 
                "RAW", 
                0x03, 
                "Thermistor 3 ", 
                "RAW", 
                0x03, 
                "Thermistor 4 ", 
                "RAW", 
                0x03, 
                "Thermistor 5 ", 
                "RAW"
            })
            Method (XLAT, 1, Serialized)
            {
                If ((Arg0 >= 0x03AC))
                {
                    Return (0x0A47)
                }

                If ((Arg0 >= 0x0394))
                {
                    Return (0x0A79)
                }

                If ((Arg0 >= 0x0374))
                {
                    Return (0x0AAB)
                }

                If ((Arg0 >= 0x0354))
                {
                    Return (0x0ADD)
                }

                If ((Arg0 >= 0x032C))
                {
                    Return (0x0B0F)
                }

                If ((Arg0 >= 0x0300))
                {
                    Return (0x0B41)
                }

                If ((Arg0 >= 0x02D0))
                {
                    Return (0x0B73)
                }

                If ((Arg0 >= 0x029C))
                {
                    Return (0x0BA5)
                }

                If ((Arg0 >= 0x0264))
                {
                    Return (0x0BD7)
                }

                If ((Arg0 >= 0x0230))
                {
                    Return (0x0C09)
                }

                If ((Arg0 >= 0x01FC))
                {
                    Return (0x0C3B)
                }

                If ((Arg0 >= 0x01C8))
                {
                    Return (0x0C6D)
                }

                If ((Arg0 >= 0x0194))
                {
                    Return (0x0C9F)
                }

                If ((Arg0 >= 0x0164))
                {
                    Return (0x0CD1)
                }

                If ((Arg0 >= 0x0138))
                {
                    Return (0x0D03)
                }

                If ((Arg0 >= 0x0114))
                {
                    Return (0x0D35)
                }

                If ((Arg0 >= 0xF0))
                {
                    Return (0x0D67)
                }

                If ((Arg0 >= 0xD4))
                {
                    Return (0x0D99)
                }

                If ((Arg0 >= 0xB8))
                {
                    Return (0x0DCB)
                }

                If ((Arg0 >= 0xA0))
                {
                    Return (0x0DFD)
                }

                If ((Arg0 >= 0x8C))
                {
                    Return (0x0E2F)
                }

                If ((Arg0 >= 0x7C))
                {
                    Return (0x0E61)
                }

                If ((Arg0 >= 0x68))
                {
                    Return (0x0E93)
                }

                If ((Arg0 >= 0x58))
                {
                    Return (0x0EC5)
                }

                Return (0x0EC5)
            }

            Method (XSDS, 1, Serialized)
            {
                If ((Arg0 >= 0x02F0))
                {
                    Return (0x0A47)
                }

                If ((Arg0 >= 0x02DC))
                {
                    Return (0x0A79)
                }

                If ((Arg0 >= 0x02C4))
                {
                    Return (0x0AAB)
                }

                If ((Arg0 >= 0x02A8))
                {
                    Return (0x0ADD)
                }

                If ((Arg0 >= 0x0288))
                {
                    Return (0x0B0F)
                }

                If ((Arg0 >= 0x0264))
                {
                    Return (0x0B41)
                }

                If ((Arg0 >= 0x0240))
                {
                    Return (0x0B73)
                }

                If ((Arg0 >= 0x0214))
                {
                    Return (0x0BA5)
                }

                If ((Arg0 >= 0x01EC))
                {
                    Return (0x0BD7)
                }

                If ((Arg0 >= 0x01C0))
                {
                    Return (0x0C09)
                }

                If ((Arg0 >= 0x0194))
                {
                    Return (0x0C3B)
                }

                If ((Arg0 >= 0x016C))
                {
                    Return (0x0C6D)
                }

                If ((Arg0 >= 0x0144))
                {
                    Return (0x0C9F)
                }

                If ((Arg0 >= 0x011C))
                {
                    Return (0x0CD1)
                }

                If ((Arg0 >= 0xFC))
                {
                    Return (0x0D03)
                }

                If ((Arg0 >= 0xDC))
                {
                    Return (0x0D35)
                }

                If ((Arg0 >= 0xC0))
                {
                    Return (0x0D67)
                }

                If ((Arg0 >= 0xA8))
                {
                    Return (0x0D99)
                }

                If ((Arg0 >= 0x94))
                {
                    Return (0x0DCB)
                }

                If ((Arg0 >= 0x80))
                {
                    Return (0x0DFD)
                }

                If ((Arg0 >= 0x70))
                {
                    Return (0x0E2F)
                }

                If ((Arg0 >= 0x60))
                {
                    Return (0x0E61)
                }

                If ((Arg0 >= 0x54))
                {
                    Return (0x0E93)
                }

                If ((Arg0 >= 0x48))
                {
                    Return (0x0EC5)
                }

                Return (0x0EC5)
            }

            Method (TSDD, 0, Serialized)
            {
                If ((TSDB == One))
                {
                    Name (TMPX, Package (0x13)
                    {
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000
                    })
                    TMPX [Zero] = ((\_PR.DTS1 * 0x0A) + 0x0AAC)
                    TMPX [One] = ((\_PR.DTS2 * 0x0A) + 0x0AAC)
                    TMPX [0x02] = ((\_PR.DTS3 * 0x0A) + 0x0AAC)
                    TMPX [0x03] = ((\_PR.DTS4 * 0x0A) + 0x0AAC)
                    TMPX [0x04] = ((\_PR.PDTS * 0x0A) + 0x0AAC)
                    If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                    {
                        TMPX [0x05] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR1)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x06] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR2)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x07] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR3)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x08] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR4)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x09] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PMAX)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x0A] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PPDT)) * 0x0A) + 
                            0x0AAC)
                        TMPX [0x0B] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECH)) * 0x0A) + 
                            0x0AAC)
                    }

                    TMPX [0x0D] = \_TZ.TZ00._TMP /* External reference */
                    If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                    {
                        TMPX [0x0E] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER1)) << 0x02))
                        TMPX [0x0F] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER2)) << 0x02))
                        TMPX [0x10] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER3)) << 0x02))
                        TMPX [0x11] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER4)) << 0x02))
                        TMPX [0x12] = XSDS ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER5)) << 0x02))
                    }

                    Return (TMPX) /* \_SB_.PTID.TSDD.TMPX */
                }

                Name (TMPV, Package (0x14)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                })
                TMPV [Zero] = ((\_PR.DTS1 * 0x0A) + 0x0AAC)
                TMPV [One] = ((\_PR.DTS2 * 0x0A) + 0x0AAC)
                TMPV [0x02] = ((\_PR.DTS3 * 0x0A) + 0x0AAC)
                TMPV [0x03] = ((\_PR.DTS4 * 0x0A) + 0x0AAC)
                TMPV [0x04] = ((\_PR.PDTS * 0x0A) + 0x0AAC)
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    TMPV [0x05] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR1)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x06] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR2)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x07] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR3)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x08] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR4)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x09] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR5)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x0A] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PMAX)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x0B] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PPDT)) * 0x0A) + 
                        0x0AAC)
                    TMPV [0x0C] = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECH)) * 0x0A) + 
                        0x0AAC)
                }

                TMPV [0x0E] = \_TZ.TZ00._TMP /* External reference */
                TMPV [0x0F] = \_TZ.TZ01._TMP /* External reference */
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    TMPV [0x10] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER1)) << 0x02))
                    TMPV [0x11] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER2)) << 0x02))
                    TMPV [0x12] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER3)) << 0x02))
                    TMPV [0x13] = XLAT ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER4)) << 0x02))
                }

                Return (TMPV) /* \_SB_.PTID.TSDD.TMPV */
            }

            Method (PSDD, 0, Serialized)
            {
                Name (PWRV, Package (0x11)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                })
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    PWRV [Zero] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.CPUP))
                    PWRV [One] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PPWR)) * 0x0A)
                    PWRV [0x02] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.CPAP))
                    PWRV [0x03] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PLAP)) * 0x0A)
                    PWRV [0x04] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1DC))
                    PWRV [0x05] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1RC))
                    PWRV [0x06] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1FC))
                    PWRV [0x07] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1FV))
                    PWRV [0x08] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1DI))
                    PWRV [0x09] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B1CI))
                    PWRV [0x0A] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2RC))
                    PWRV [0x0B] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2FC))
                    PWRV [0x0C] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2FV))
                    PWRV [0x0D] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2DI))
                    PWRV [0x0E] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2CI))
                    Local0 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.BMAX))
                    If (Local0)
                    {
                        Local0 = ~Local0 |= 0xFFFF0000
                        Local0 = (Local0 += One * 0x0A)
                    }

                    PWRV [0x0F] = Local0
                    Local0 = ((\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2MH)) << 0x08) + \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.B2ML)))
                    If (Local0)
                    {
                        Local0 = ~Local0 |= 0xFFFF0000
                        Local0 = (Local0 += One * 0x0A)
                    }

                    PWRV [0x10] = Local0
                }

                Return (PWRV) /* \_SB_.PTID.PSDD.PWRV */
            }

            Method (OSDD, 0, Serialized)
            {
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    If ((TSDB == One))
                    {
                        Name (OSD2, Package (0x08)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000, 
                            0x80000000, 
                            0x80000000, 
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        })
                        OSD2 [Zero] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PENV))
                        OSD2 [One] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.CFSP))
                        OSD2 [0x02] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR3))
                        OSD2 [0x03] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER1)) << 0x02)
                        OSD2 [0x04] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER2)) << 0x02)
                        OSD2 [0x05] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER3)) << 0x02)
                        OSD2 [0x06] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER4)) << 0x02)
                        OSD2 [0x07] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER5)) << 0x02)
                        Return (OSD2) /* \_SB_.PTID.OSDD.OSD2 */
                    }

                    Name (OSD1, Package (0x07)
                    {
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000, 
                        0x80000000
                    })
                    OSD1 [Zero] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PENV))
                    OSD1 [One] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.CFSP))
                    OSD1 [0x02] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TSR3))
                    OSD1 [0x03] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER1)) << 0x02)
                    OSD1 [0x04] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER2)) << 0x02)
                    OSD1 [0x05] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER3)) << 0x02)
                    OSD1 [0x06] = (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.TER4)) << 0x02)
                    Return (OSD1) /* \_SB_.PTID.OSDD.OSD1 */
                }

                Return (Package (0x00){})
            }

            Method (SDSP, 0, NotSerialized)
            {
                Return (0x0A)
            }

            Name (PADA, Package (0x0A)
            {
                One, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0x1A, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0xFFFFFFFF
            })
            Name (PADD, Package (0x0A)
            {
                0x02, 
                0x06A4, 
                0x06A0, 
                0x1A, 
                0x62, 
                0x63, 
                0x60, 
                0x61, 
                0x65, 
                0x64
            })
            Method (PADT, 0, NotSerialized)
            {
                If (PAMT)
                {
                    Return (PADA) /* \_SB_.PTID.PADA */
                }

                Return (PADD) /* \_SB_.PTID.PADD */
            }

            Method (RPMD, 0, Serialized)
            {
                Name (MTMP, Buffer (0x1A){})
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    MTMP [0x06] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PCAD))
                    MTMP [0x07] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEWL))
                    MTMP [0x08] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PWRL))
                    MTMP [0x09] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECD))
                    MTMP [0x0A] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEHI))
                    MTMP [0x0B] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECI))
                    MTMP [0x0C] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEPL))
                    MTMP [0x0D] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEPM))
                    MTMP [0x0E] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PWFC))
                    MTMP [0x0F] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECC))
                    MTMP [0x10] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PDT0))
                    MTMP [0x11] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PDT1))
                    MTMP [0x12] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PDT2))
                    MTMP [0x13] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PDT3))
                    MTMP [0x14] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRFC))
                    MTMP [0x15] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRS0))
                    MTMP [0x16] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRS1))
                    MTMP [0x17] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRS2))
                    MTMP [0x18] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRS3))
                    MTMP [0x19] = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRS4))
                }

                Return (MTMP) /* \_SB_.PTID.RPMD.MTMP */
            }

            Method (WPMD, 1, NotSerialized)
            {
                If ((SizeOf (Arg0) != 0x1A))
                {
                    Return (0xFFFFFFFF)
                }

                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x06]), RefOf (\_SB.PCI0.LPCB.H_EC.PCAD))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x07]), RefOf (\_SB.PCI0.LPCB.H_EC.PEWL))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x08]), RefOf (\_SB.PCI0.LPCB.H_EC.PWRL))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x09]), RefOf (\_SB.PCI0.LPCB.H_EC.PECD))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0A]), RefOf (\_SB.PCI0.LPCB.H_EC.PEHI))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0B]), RefOf (\_SB.PCI0.LPCB.H_EC.PECI))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0C]), RefOf (\_SB.PCI0.LPCB.H_EC.PEPL))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0D]), RefOf (\_SB.PCI0.LPCB.H_EC.PEPM))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0E]), RefOf (\_SB.PCI0.LPCB.H_EC.PWFC))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x0F]), RefOf (\_SB.PCI0.LPCB.H_EC.PECC))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x10]), RefOf (\_SB.PCI0.LPCB.H_EC.PDT0))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x11]), RefOf (\_SB.PCI0.LPCB.H_EC.PDT1))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x12]), RefOf (\_SB.PCI0.LPCB.H_EC.PDT2))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x13]), RefOf (\_SB.PCI0.LPCB.H_EC.PDT3))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x14]), RefOf (\_SB.PCI0.LPCB.H_EC.PRFC))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x15]), RefOf (\_SB.PCI0.LPCB.H_EC.PRS0))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x16]), RefOf (\_SB.PCI0.LPCB.H_EC.PRS1))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x17]), RefOf (\_SB.PCI0.LPCB.H_EC.PRS2))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x18]), RefOf (\_SB.PCI0.LPCB.H_EC.PRS3))
                    \_SB.PCI0.LPCB.H_EC.ECWT (DerefOf (Arg0 [0x19]), RefOf (\_SB.PCI0.LPCB.H_EC.PRS4))
                    \_SB.PCI0.LPCB.H_EC.ECMD (0x67)
                }

                Return (Zero)
            }

            Method (ISPC, 0, NotSerialized)
            {
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    \_SB.PCI0.LPCB.H_EC.ECMD (0x65)
                }

                Return (Zero)
            }

            Method (ENPC, 0, NotSerialized)
            {
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    \_SB.PCI0.LPCB.H_EC.ECMD (0x66)
                }

                Return (Zero)
            }

            Method (RPCS, 0, NotSerialized)
            {
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    Local0 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PRCS))
                }

                Return (Local0)
            }

            Method (RPEC, 0, NotSerialized)
            {
                Local0 = Zero
                If ((\_SB.PCI0.LPCB.H_EC.ECAV == One))
                {
                    Local1 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEC0))
                    Local0 |= Local1
                    Local1 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEC1))
                    Local0 |= (Local1 << 0x08)
                    Local1 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEC2))
                    Local0 |= (Local1 << 0x10)
                    Local1 = \_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PEC3))
                    Local0 |= (Local1 << 0x18)
                }

                Return (Local0)
            }
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_SB_.OSCP, IntObj)
    External (OSYS, UnknownObj)

    Scope (\)
    {
        Name (SSDT, Package (0x15)
        {
            "CPU0IST ", 
            0xD2220398, 
            0x00000630, 
            "APIST   ", 
            0xD15DC218, 
            0x0000065C, 
            "CPU0CST ", 
            0xD15DCA98, 
            0x000003FF, 
            "APCST   ", 
            0xD15DB018, 
            0x0000018A, 
            "CPU0HWP ", 
            0xD2220C18, 
            0x00000115, 
            "APHWP   ", 
            0xD15DB218, 
            0x00000197, 
            "HWPLVT  ", 
            0xD15DC018, 
            0x000001A4
        })
        Name (\PDC0, 0x80000000)
        Name (\PDC1, 0x80000000)
        Name (\PDC2, 0x80000000)
        Name (\PDC3, 0x80000000)
        Name (\PDC4, 0x80000000)
        Name (\PDC5, 0x80000000)
        Name (\PDC6, 0x80000000)
        Name (\PDC7, 0x80000000)
        Name (\SDTL, Zero)
    }

    Scope (\_PR)
    {
        Name (CTPC, Zero)
        OperationRegion (PNVS, SystemMemory, 0xCAB21000, 0x006C)
        Field (PNVS, AnyAcc, Lock, Preserve)
        {
            PGRV,   8, 
            CFGD,   32, 
            Offset (0x06), 
            ACRT,   8, 
            APSV,   8, 
            AAC0,   8, 
            CPID,   32, 
            CPPC,   8, 
            CLVL,   8, 
            CBMI,   8, 
            PL10,   16, 
            PL20,   16, 
            PLW0,   8, 
            CTC0,   8, 
            TAR0,   8, 
            PPC0,   8, 
            PL11,   16, 
            PL21,   16, 
            PLW1,   8, 
            CTC1,   8, 
            TAR1,   8, 
            PPC1,   8, 
            PL12,   16, 
            PL22,   16, 
            PLW2,   8, 
            CTC2,   8, 
            TAR2,   8, 
            PPC2,   8, 
            C3MW,   8, 
            C6MW,   8, 
            C7MW,   8, 
            CDMW,   8, 
            C3LT,   16, 
            C6LT,   16, 
            C7LT,   16, 
            CDLT,   16, 
            CDLV,   16, 
            CDPW,   16, 
            MPMF,   8, 
            DTSE,   8, 
            DTS1,   8, 
            DTS2,   8, 
            DTSF,   8, 
            PDTS,   8, 
            PKGA,   8, 
            DTS3,   8, 
            DTS4,   8, 
            BGMA,   64, 
            BGMS,   8, 
            BGIA,   16, 
            BGIL,   16, 
            DSIA,   16, 
            DSIL,   8, 
            DSAE,   8, 
            EPCS,   8, 
            EMNA,   64, 
            ELNG,   64, 
            HWPV,   8, 
            HWPA,   16, 
            HWPL,   16, 
            POWS,   8, 
            HDCE,   8, 
            HWPI,   8, 
            DTSI,   8
        }

        OperationRegion (IO_D, SystemIO, \_PR.DSIA, \_PR.DSIL)
        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }

        OperationRegion (IO_P, SystemIO, \_PR.BGIA, \_PR.BGIL)
        Field (IO_P, ByteAcc, NoLock, Preserve)
        {
            TRPF,   8
        }
    }

    Scope (\_PR.CPU0)
    {
        Name (HI0, Zero)
        Name (HC0, Zero)
        Name (HW0, Zero)
        Name (HW2, Zero)
        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            Local0 = COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Name (STS0, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Method (CPDC, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Concatenate (STS0, TEMP, Local2)
            Return (COSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2))
        }

        Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
        OperationRegion (SMIP, SystemIO, 0xB2, One)
        Field (SMIP, ByteAcc, NoLock, Preserve)
        {
            IOB2,   8
        }

        Method (COSC, 4, Serialized)
        {
            CreateDWordField (Arg3, Zero, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, Zero, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            CreateDWordField (UID0, Zero, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 = 0x06
                Return (Arg3)
            }

            If ((Arg1 != One))
            {
                STS0 = 0x0A
                Return (Arg3)
            }

            If (!(Arg2 >= 0x02))
            {
                STS0 = 0x02
                Return (Arg3)
            }

            If (~(STS0 & One))
            {
                If ((CAP0 & 0x2000))
                {
                    \_PR.HDCE = Zero
                }
                Else
                {
                    IOB2 = 0x28
                }
            }

            Return (Arg3)
        }

        Method (GCAP, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, STS0)
            CreateDWordField (Arg0, 0x04, CAP0)
            If (((STS0 == 0x06) || (STS0 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS0 & One))
            {
                CAP0 &= 0x0BFF
                Return (Zero)
            }

            PDC0 = ((PDC0 & 0x7FFFFFFF) | CAP0) /* \_PR_.CPU0.GCAP.CAP0 */
            If ((CFGD & 0x7A))
            {
                If ((((CFGD & 0x0200) && (PDC0 & 0x18)) && !
                    (SDTL & 0x02)))
                {
                    SDTL |= 0x02
                    OperationRegion (CST0, SystemMemory, DerefOf (SSDT [0x07]), DerefOf (SSDT [0x08]))
                    Load (CST0, HC0) /* \_PR_.CPU0.HC0_ */
                }
            }

            If (((CFGD & One) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                OperationRegion (IST0, SystemMemory, DerefOf (SSDT [One]), DerefOf (SSDT [0x02]))
                Load (IST0, HI0) /* \_PR_.CPU0.HI0_ */
            }

            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x40)))
                {
                    If ((\_SB.OSCP & 0x40))
                    {
                        SDTL |= 0x40
                        OperationRegion (HWP0, SystemMemory, DerefOf (SSDT [0x0D]), DerefOf (SSDT [0x0E]))
                        Load (HWP0, HW0) /* \_PR_.CPU0.HW0_ */
                        If ((CFGD & 0x00800000))
                        {
                            OperationRegion (HWPL, SystemMemory, DerefOf (SSDT [0x13]), DerefOf (SSDT [0x14]))
                            Load (HWPL, HW2) /* \_PR_.CPU0.HW2_ */
                        }
                    }

                    If ((\_SB.OSCP & 0x20))
                    {
                        If (!(\_SB.OSCP & 0x40))
                        {
                            HWPV = Zero
                        }
                    }

                    If ((\_SB.OSCP & 0x40))
                    {
                        HWPV = 0x02
                    }
                }
            }

            If (!(PDC0 & 0x1000))
            {
                IOB2 = 0x27
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPU1)
    {
        Name (HI1, Zero)
        Name (HC1, Zero)
        Name (HW1, Zero)
        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, STS1)
            CreateDWordField (Arg0, 0x04, CAP1)
            If (((STS1 == 0x06) || (STS1 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS1 & One))
            {
                CAP1 &= 0x0BFF
                Return (Zero)
            }

            PDC1 = ((PDC1 & 0x7FFFFFFF) | CAP1) /* \_PR_.CPU1.GCAP.CAP1 */
            If (((PDC1 & 0x09) == 0x09))
            {
                APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                HWPT ()
            }

            If ((PDC1 & 0x18))
            {
                APCT ()
            }

            PDC0 = PDC1 /* \PDC1 */
            Return (Zero)
        }

        Method (APCT, 0, Serialized)
        {
            If (((CFGD & 0x7A) && !(SDTL & 0x20)))
            {
                SDTL |= 0x20
                OperationRegion (CST1, SystemMemory, DerefOf (SSDT [0x0A]), DerefOf (SSDT [0x0B]))
                Load (CST1, HC1) /* \_PR_.CPU1.HC1_ */
            }
        }

        Method (APPT, 0, Serialized)
        {
            If (((CFGD & One) && !(SDTL & 0x10)))
            {
                SDTL |= 0x10
                OperationRegion (IST1, SystemMemory, DerefOf (SSDT [0x04]), DerefOf (SSDT [0x05]))
                Load (IST1, HI1) /* \_PR_.CPU1.HI1_ */
            }
        }

        Method (HWPT, 0, Serialized)
        {
            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x80)))
                {
                    SDTL |= 0x80
                    OperationRegion (HWP1, SystemMemory, DerefOf (SSDT [0x10]), DerefOf (SSDT [0x11]))
                    Load (HWP1, HW1) /* \_PR_.CPU1.HW1_ */
                }
            }
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS2)
            CreateDWordField (Arg0, 0x04, CAP2)
            If (((STS2 == 0x06) || (STS2 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS2 & One))
            {
                CAP2 &= 0x0BFF
                Return (Zero)
            }

            PDC2 = ((PDC2 & 0x7FFFFFFF) | CAP2) /* \_PR_.CPU2.GCAP.CAP2 */
            If (((PDC2 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC2 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC2 /* \PDC2 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS3)
            CreateDWordField (Arg0, 0x04, CAP3)
            If (((STS3 == 0x06) || (STS3 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS3 & One))
            {
                CAP3 &= 0x0BFF
                Return (Zero)
            }

            PDC3 = ((PDC3 & 0x7FFFFFFF) | CAP3) /* \_PR_.CPU3.GCAP.CAP3 */
            If (((PDC3 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC3 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC3 /* \PDC3 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS4)
            CreateDWordField (Arg0, 0x04, CAP4)
            If (((STS4 == 0x06) || (STS4 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS4 & One))
            {
                CAP4 &= 0x0BFF
                Return (Zero)
            }

            PDC4 = ((PDC4 & 0x7FFFFFFF) | CAP4) /* \_PR_.CPU4.GCAP.CAP4 */
            If (((PDC4 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC4 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC4 /* \PDC4 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS5)
            CreateDWordField (Arg0, 0x04, CAP5)
            If (((STS5 == 0x06) || (STS5 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS5 & One))
            {
                CAP5 &= 0x0BFF
                Return (Zero)
            }

            PDC5 = ((PDC5 & 0x7FFFFFFF) | CAP5) /* \_PR_.CPU5.GCAP.CAP5 */
            If (((PDC5 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC5 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC5 /* \PDC5 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS6)
            CreateDWordField (Arg0, 0x04, CAP6)
            If (((STS6 == 0x06) || (STS6 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS6 & One))
            {
                CAP6 &= 0x0BFF
                Return (Zero)
            }

            PDC6 = ((PDC6 & 0x7FFFFFFF) | CAP6) /* \_PR_.CPU6.GCAP.CAP6 */
            If (((PDC6 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC6 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC6 /* \PDC6 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, STS7)
            CreateDWordField (Arg0, 0x04, CAP7)
            If (((STS7 == 0x06) || (STS7 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS7 & One))
            {
                CAP7 &= 0x0BFF
                Return (Zero)
            }

            PDC7 = ((PDC7 & 0x7FFFFFFF) | CAP7) /* \_PR_.CPU7.GCAP.CAP7 */
            If (((PDC7 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_SB.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((PDC7 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PDC0 = PDC7 /* \PDC7 */
            Return (Zero)
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_SB_.CAGS, MethodObj)    // 1 Arguments
    External (_SB_.GGOV, MethodObj)    // 1 Arguments
    External (_SB_.ISME, MethodObj)    // 1 Arguments
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.PEG0, DeviceObj)
    External (_SB_.PCI0.PEG0.PEGP, DeviceObj)
    External (_SB_.PCI0.PEG1, DeviceObj)
    External (_SB_.PCI0.PEG1.PEGP, DeviceObj)
    External (_SB_.PCI0.PEG2, DeviceObj)
    External (_SB_.PCI0.PEG2.PEGP, DeviceObj)
    External (_SB_.PCI0.PEGS, MethodObj)    // 0 Arguments
    External (_SB_.SGOV, MethodObj)    // 2 Arguments
    External (_SB_.SHPO, MethodObj)    // 2 Arguments
    External (AR02, UnknownObj)
    External (AR0A, UnknownObj)
    External (AR0B, UnknownObj)
    External (CPEX, UnknownObj)
    External (DLHR, UnknownObj)
    External (DLPW, UnknownObj)
    External (EBAS, UnknownObj)
    External (ECR1, UnknownObj)
    External (EEC1, UnknownObj)
    External (EEC2, UnknownObj)
    External (EECP, UnknownObj)
    External (GBAS, UnknownObj)
    External (GPRW, MethodObj)    // 2 Arguments
    External (HRA0, UnknownObj)
    External (HRA1, UnknownObj)
    External (HRA2, UnknownObj)
    External (HRE0, UnknownObj)
    External (HRE1, UnknownObj)
    External (HRE2, UnknownObj)
    External (HRG0, UnknownObj)
    External (HRG1, UnknownObj)
    External (HRG2, UnknownObj)
    External (HYSS, UnknownObj)
    External (LTRX, UnknownObj)
    External (LTRY, UnknownObj)
    External (LTRZ, UnknownObj)
    External (NVAF, UnknownObj)
    External (OBFX, UnknownObj)
    External (OBFY, UnknownObj)
    External (OBFZ, UnknownObj)
    External (OSYS, UnknownObj)
    External (P0UB, UnknownObj)
    External (P0WK, UnknownObj)
    External (P1GP, UnknownObj)
    External (P1UB, UnknownObj)
    External (P1WK, UnknownObj)
    External (P2GP, UnknownObj)
    External (P2UB, UnknownObj)
    External (P2WK, UnknownObj)
    External (PBGE, UnknownObj)
    External (PCRA, MethodObj)    // 3 Arguments
    External (PCRO, MethodObj)    // 3 Arguments
    External (PCSL, UnknownObj)
    External (PICM, UnknownObj)
    External (PR02, UnknownObj)
    External (PR0A, UnknownObj)
    External (PR0B, UnknownObj)
    External (PWA0, UnknownObj)
    External (PWA1, UnknownObj)
    External (PWA2, UnknownObj)
    External (PWE0, UnknownObj)
    External (PWE1, UnknownObj)
    External (PWE2, UnknownObj)
    External (PWG0, UnknownObj)
    External (PWG1, UnknownObj)
    External (PWG2, UnknownObj)
    External (SBN0, UnknownObj)
    External (SBN1, UnknownObj)
    External (SBN2, UnknownObj)
    External (SGGP, UnknownObj)
    External (SGMD, UnknownObj)
    External (SMSL, UnknownObj)
    External (SNSL, UnknownObj)
    External (XBAS, UnknownObj)

    Scope (\_GPE)
    {
        Method (P0L6, 0, NotSerialized)
        {
            If (\_SB.ISME (P0WK))
            {
                \_SB.SHPO (P0WK, One)
                Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake
                \_SB.CAGS (P0WK)
            }
        }

        Method (P1L6, 0, NotSerialized)
        {
            If (\_SB.ISME (P1WK))
            {
                \_SB.SHPO (P1WK, One)
                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
                \_SB.CAGS (P1WK)
            }
        }

        Method (P2L6, 0, NotSerialized)
        {
            If (\_SB.ISME (P2WK))
            {
                \_SB.SHPO (P2WK, One)
                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
                \_SB.CAGS (P2WK)
            }
        }
    }

    Scope (\_SB.PCI0.PEG0)
    {
        Name (WKEN, Zero)
        OperationRegion (PEGR, PCI_Config, 0xC0, 0x30)
        Field (PEGR, DWordAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            PSTS,   1, 
            Offset (0x2C), 
            GENG,   1, 
                ,   1, 
            PMEG,   1
        }

        OperationRegion (MSID, SystemMemory, EBAS, 0x0500)
        Field (MSID, DWordAcc, Lock, Preserve)
        {
            VEID,   16, 
            Offset (0x40), 
            NVID,   32, 
            Offset (0x4C), 
            ATID,   32, 
            Offset (0x48B), 
                ,   1, 
            NHDA,   1
        }

        OperationRegion (RPCX, SystemMemory, ((\XBAS + 0x8000) + Zero), 0x1000)
        Field (RPCX, ByteAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            CMDR,   8, 
            Offset (0x19), 
            PRBN,   8, 
            Offset (0x84), 
            D0ST,   2, 
            Offset (0xAA), 
            CEDR,   1, 
            Offset (0xB0), 
            ASPM,   2, 
                ,   2, 
            LNKD,   1, 
            Offset (0xC9), 
                ,   2, 
            LREN,   1, 
            Offset (0x216), 
            LNKS,   4
        }

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {
            Return (GPRW (0x69, 0x04))
        }

        Method (HPME, 0, Serialized)
        {
            PSTS = One
        }

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            LTRS = LTRX /* External reference */
            OBFS = OBFX /* External reference */
        }

        Name (LTRV, Package (0x04)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero
        })
        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Local0 = Zero
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                Local0 |= 0x40
                            }

                            If (OBFS)
                            {
                                Local0 |= 0x10
                            }
                        }

                        If ((Arg1 >= 0x03))
                        {
                            If (ECR1)
                            {
                                Local0 |= 0x0100
                            }

                            If (ECR1)
                            {
                                Local0 |= 0x0200
                            }
                        }

                        If ((Local0 != Zero))
                        {
                            Local0 |= One
                        }

                        Return (Local0)
                    }
                    Case (0x04)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (OBFS)
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                            Else
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                        }
                    }
                    Case (0x06)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                LTRV [Zero] = ((SMSL >> 0x0A) & 0x07)
                                LTRV [One] = (SMSL & 0x03FF)
                                LTRV [0x02] = ((SNSL >> 0x0A) & 0x07)
                                LTRV [0x03] = (SNSL & 0x03FF)
                                Return (LTRV) /* \_SB_.PCI0.PEG0.LTRV */
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (One)
                            }
                        }
                    }
                    Case (0x09)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }
                    }

                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        PowerResource (PG00, 0x00, 0x0000)
        {
            Name (_STA, One)  // _STA: Status
            Method (_ON, 0, Serialized)  // _ON_: Power On
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGON (Zero)
                    CMDR |= 0x07
                    D0ST = Zero
                    If ((VEID == 0x10DE))
                    {
                        NVID = HYSS /* External reference */
                        If ((NVAF == One))
                        {
                            NHDA = One
                        }
                        Else
                        {
                            NHDA = Zero
                        }
                    }

                    If ((VEID == 0x1002))
                    {
                        ATID = HYSS /* External reference */
                    }

                    _STA = One
                }
            }

            Method (_OFF, 0, Serialized)  // _OFF: Power Off
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGOF (Zero)
                    _STA = Zero
                }
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            PG00
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            PG00
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            PG00
        })
        Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
        {
            If (Arg1)
            {
                WKEN = Zero
            }
            ElseIf ((Arg0 && Arg2))
            {
                WKEN = One
            }
            Else
            {
                WKEN = Zero
            }
        }

        Method (P0EW, 0, NotSerialized)
        {
            If (WKEN)
            {
                If ((SGGP != Zero))
                {
                    If ((SGGP == One))
                    {
                        \_SB.SGOV (P0WK, One)
                        \_SB.SHPO (P0WK, Zero)
                    }
                }
            }
        }

        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            Return (0x04)
        }
    }

    If (CondRefOf (\_SB.PCI0.PEG0.PEGP))
    {
        Scope (\_SB.PCI0.PEG0.PEGP)
        {
            Name (LTRE, Zero)
            OperationRegion (PCIS, PCI_Config, Zero, 0x0100)
            Field (PCIS, AnyAcc, NoLock, Preserve)
            {
                PVID,   16, 
                PDID,   16
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x69, 0x04))
            }
        }
    }

    Scope (\_SB.PCI0.PEG1)
    {
        Name (WKEN, Zero)
        OperationRegion (PEGR, PCI_Config, 0xC0, 0x30)
        Field (PEGR, DWordAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            PSTS,   1, 
            Offset (0x2C), 
            GENG,   1, 
                ,   1, 
            PMEG,   1
        }

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {
            Return (GPRW (0x69, 0x04))
        }

        Method (HPME, 0, Serialized)
        {
            PSTS = One
        }

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            LTRS = LTRY /* External reference */
            OBFS = OBFY /* External reference */
        }

        Name (LTRV, Package (0x04)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero
        })
        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Local0 = Zero
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                Local0 |= 0x40
                            }

                            If (OBFS)
                            {
                                Local0 |= 0x10
                            }
                        }

                        If ((Arg1 >= 0x03))
                        {
                            If (ECR1)
                            {
                                Local0 |= 0x0100
                            }

                            If (ECR1)
                            {
                                Local0 |= 0x0200
                            }
                        }

                        If ((Local0 != Zero))
                        {
                            Local0 |= One
                        }

                        Return (Local0)
                    }
                    Case (0x04)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (OBFS)
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                            Else
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                        }
                    }
                    Case (0x06)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                LTRV [Zero] = ((SMSL >> 0x0A) & 0x07)
                                LTRV [One] = (SMSL & 0x03FF)
                                LTRV [0x02] = ((SNSL >> 0x0A) & 0x07)
                                LTRV [0x03] = (SNSL & 0x03FF)
                                Return (LTRV) /* \_SB_.PCI0.PEG1.LTRV */
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (One)
                            }
                        }
                    }
                    Case (0x09)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }
                    }

                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        PowerResource (PG01, 0x00, 0x0000)
        {
            Name (_STA, One)  // _STA: Status
            Method (_ON, 0, Serialized)  // _ON_: Power On
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGON (One)
                    _STA = One
                }
            }

            Method (_OFF, 0, Serialized)  // _OFF: Power Off
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGOF (One)
                    _STA = Zero
                }
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            PG01
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            PG01
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            PG01
        })
        Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
        {
            If (Arg1)
            {
                WKEN = Zero
            }
            ElseIf ((Arg0 && Arg2))
            {
                WKEN = One
            }
            Else
            {
                WKEN = Zero
            }
        }

        Method (P1EW, 0, NotSerialized)
        {
            If (WKEN)
            {
                If ((P1GP != Zero))
                {
                    If ((P1GP == One))
                    {
                        \_SB.SGOV (P1WK, One)
                        \_SB.SHPO (P1WK, Zero)
                    }
                }
            }
        }

        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            Return (0x04)
        }
    }

    If (CondRefOf (\_SB.PCI0.PEG1.PEGP))
    {
        Scope (\_SB.PCI0.PEG1.PEGP)
        {
            OperationRegion (PCIS, PCI_Config, Zero, 0x0100)
            Field (PCIS, AnyAcc, NoLock, Preserve)
            {
                PVID,   16, 
                PDID,   16
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x69, 0x04))
            }
        }
    }

    Scope (\_SB.PCI0.PEG2)
    {
        Name (WKEN, Zero)
        OperationRegion (PEGR, PCI_Config, 0xC0, 0x30)
        Field (PEGR, DWordAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            PSTS,   1, 
            Offset (0x2C), 
            GENG,   1, 
                ,   1, 
            PMEG,   1
        }

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {
            Return (GPRW (0x69, 0x04))
        }

        Method (HPME, 0, Serialized)
        {
            PSTS = One
        }

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            LTRS = LTRZ /* External reference */
            OBFS = OBFZ /* External reference */
        }

        Name (LTRV, Package (0x04)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero
        })
        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        Local0 = Zero
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                Local0 |= 0x40
                            }

                            If (OBFS)
                            {
                                Local0 |= 0x10
                            }
                        }

                        If ((Arg1 >= 0x03))
                        {
                            If (ECR1)
                            {
                                Local0 |= 0x0100
                            }

                            If (ECR1)
                            {
                                Local0 |= 0x0200
                            }
                        }

                        If ((Local0 != Zero))
                        {
                            Local0 |= One
                        }

                        Return (Local0)
                    }
                    Case (0x04)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (OBFS)
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                            Else
                            {
                                Return (Buffer (0x10)
                                {
                                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                })
                            }
                        }
                    }
                    Case (0x06)
                    {
                        If ((Arg1 >= 0x02))
                        {
                            If (LTRS)
                            {
                                LTRV [Zero] = ((SMSL >> 0x0A) & 0x07)
                                LTRV [One] = (SMSL & 0x03FF)
                                LTRV [0x02] = ((SNSL >> 0x0A) & 0x07)
                                LTRV [0x03] = (SNSL & 0x03FF)
                                Return (LTRV) /* \_SB_.PCI0.PEG2.LTRV */
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (One)
                            }
                        }
                    }
                    Case (0x09)
                    {
                        If ((ECR1 == One))
                        {
                            If ((Arg1 >= 0x03))
                            {
                                Return (Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }
                    }

                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        PowerResource (PG02, 0x00, 0x0000)
        {
            Name (_STA, One)  // _STA: Status
            Method (_ON, 0, Serialized)  // _ON_: Power On
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGON (0x02)
                    _STA = One
                }
            }

            Method (_OFF, 0, Serialized)  // _OFF: Power Off
            {
                If (((OSYS > 0x07D9) && PEGS ()))
                {
                    PGOF (0x02)
                    _STA = Zero
                }
            }
        }

        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            PG02
        })
        Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
        {
            PG02
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            PG02
        })
        Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
        {
            If (Arg1)
            {
                WKEN = Zero
            }
            ElseIf ((Arg0 && Arg2))
            {
                WKEN = One
            }
            Else
            {
                WKEN = Zero
            }
        }

        Method (P2EW, 0, NotSerialized)
        {
            If (WKEN)
            {
                If ((P2GP != Zero))
                {
                    If ((P2GP == One))
                    {
                        \_SB.SGOV (P2WK, One)
                        \_SB.SHPO (P2WK, Zero)
                    }
                }
            }
        }

        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            Return (0x04)
        }
    }

    If (CondRefOf (\_SB.PCI0.PEG2.PEGP))
    {
        Scope (\_SB.PCI0.PEG2.PEGP)
        {
            OperationRegion (PCIS, PCI_Config, Zero, 0x0100)
            Field (PCIS, AnyAcc, NoLock, Preserve)
            {
                PVID,   16, 
                PDID,   16
            }

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                Return (GPRW (0x69, 0x04))
            }
        }
    }

    Scope (\_SB.PCI0)
    {
        Name (HBRB, Zero)
        Name (HBRD, Zero)
        Name (HBRF, Zero)
        Name (IVID, 0xFFFF)
        Name (PEBA, Zero)
        Name (PION, Zero)
        Name (PIOF, Zero)
        Name (PBUS, Zero)
        Name (PDEV, Zero)
        Name (PFUN, Zero)
        Name (EBUS, Zero)
        Name (EDEV, Zero)
        Name (EFN0, Zero)
        Name (EFN1, One)
        Name (LTRS, Zero)
        Name (OBFS, Zero)
        Name (INDX, Zero)
        Name (POFF, Zero)
        Name (PLEN, Zero)
        Name (VIOF, Zero)
        Name (DSOF, 0x06)
        Name (CPOF, 0x34)
        Name (SBOF, 0x19)
        Name (ELC0, Zero)
        Name (ECP0, 0xFFFFFFFF)
        Name (H0VI, Zero)
        Name (H0DI, Zero)
        Name (ELC1, Zero)
        Name (ECP1, 0xFFFFFFFF)
        Name (H1VI, Zero)
        Name (H1DI, Zero)
        Name (ELC2, Zero)
        Name (ECP2, 0xFFFFFFFF)
        Name (H2VI, Zero)
        Name (H2DI, Zero)
        Name (TIDX, Zero)
        Name (OTSD, Zero)
        Name (MXPG, 0x03)
        Name (FBDL, Zero)
        Name (CBDL, Zero)
        Name (MBDL, Zero)
        Name (HSTR, Zero)
        Name (LREV, Zero)
        Name (TCNT, Zero)
        Name (LDLY, 0x012C)
        OperationRegion (OPG0, SystemMemory, (XBAS + 0x8000), 0x1000)
        Field (OPG0, AnyAcc, NoLock, Preserve)
        {
            P0VI,   16, 
            P0DI,   16, 
            Offset (0x06), 
            DSO0,   16, 
            Offset (0x34), 
            CPO0,   8, 
            Offset (0xB0), 
                ,   4, 
            P0LD,   1, 
            Offset (0xBC), 
                ,   5, 
            P0L2,   1, 
            P0L0,   1, 
            Offset (0x11A), 
                ,   1, 
            P0VC,   1, 
            Offset (0x214), 
            Offset (0x216), 
            P0LS,   4, 
            Offset (0x248), 
                ,   7, 
            Q0L2,   1, 
            Q0L0,   1, 
            Offset (0x504), 
            HST0,   32, 
            P0TR,   1, 
            Offset (0x91C), 
                ,   31, 
            BSP1,   1, 
            Offset (0x93C), 
                ,   31, 
            BSP2,   1, 
            Offset (0x95C), 
                ,   31, 
            BSP3,   1, 
            Offset (0x97C), 
                ,   31, 
            BSP4,   1, 
            Offset (0x99C), 
                ,   31, 
            BSP5,   1, 
            Offset (0x9BC), 
                ,   31, 
            BSP6,   1, 
            Offset (0x9DC), 
                ,   31, 
            BSP7,   1, 
            Offset (0x9FC), 
                ,   31, 
            BSP8,   1, 
            Offset (0xC20), 
                ,   4, 
            P0AP,   2, 
            Offset (0xC38), 
                ,   3, 
            P0RM,   1, 
            Offset (0xC74), 
            P0LT,   4, 
            Offset (0xD0C), 
            LRV0,   32
        }

        OperationRegion (PCS0, SystemMemory, (XBAS + (SBN0 << 0x14)), 0xF0)
        Field (PCS0, DWordAcc, Lock, Preserve)
        {
            D0VI,   16, 
            Offset (0x2C), 
            S0VI,   16, 
            S0DI,   16
        }

        OperationRegion (CAP0, SystemMemory, ((XBAS + (SBN0 << 0x14)) + EECP), 0x14)
        Field (CAP0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x0C), 
            LCP0,   32, 
            LCT0,   16
        }

        OperationRegion (OPG1, SystemMemory, (XBAS + 0x9000), 0x1000)
        Field (OPG1, AnyAcc, NoLock, Preserve)
        {
            P1VI,   16, 
            P1DI,   16, 
            Offset (0x06), 
            DSO1,   16, 
            Offset (0x34), 
            CPO1,   8, 
            Offset (0xB0), 
                ,   4, 
            P1LD,   1, 
            Offset (0xBC), 
                ,   5, 
            P1L2,   1, 
            P1L0,   1, 
            Offset (0x11A), 
                ,   1, 
            P1VC,   1, 
            Offset (0x214), 
            Offset (0x216), 
            P1LS,   4, 
            Offset (0x248), 
                ,   7, 
            Q1L2,   1, 
            Q1L0,   1, 
            Offset (0x504), 
            HST1,   32, 
            P1TR,   1, 
            Offset (0xC20), 
                ,   4, 
            P1AP,   2, 
            Offset (0xC38), 
                ,   3, 
            P1RM,   1, 
            Offset (0xC74), 
            P1LT,   4, 
            Offset (0xD0C), 
            LRV1,   32
        }

        OperationRegion (PCS1, SystemMemory, (XBAS + (SBN1 << 0x14)), 0xF0)
        Field (PCS1, DWordAcc, Lock, Preserve)
        {
            D1VI,   16, 
            Offset (0x2C), 
            S1VI,   16, 
            S1DI,   16
        }

        OperationRegion (CAP1, SystemMemory, ((XBAS + (SBN1 << 0x14)) + EEC1), 0x14)
        Field (CAP1, DWordAcc, NoLock, Preserve)
        {
            Offset (0x0C), 
            LCP1,   32, 
            LCT1,   16
        }

        OperationRegion (OPG2, SystemMemory, (XBAS + 0xA000), 0x1000)
        Field (OPG2, AnyAcc, NoLock, Preserve)
        {
            P2VI,   16, 
            P2DI,   16, 
            Offset (0x06), 
            DSO2,   16, 
            Offset (0x34), 
            CPO2,   8, 
            Offset (0xB0), 
                ,   4, 
            P2LD,   1, 
            Offset (0xBC), 
                ,   5, 
            P2L2,   1, 
            P2L0,   1, 
            Offset (0x11A), 
                ,   1, 
            P2VC,   1, 
            Offset (0x214), 
            Offset (0x216), 
            P2LS,   4, 
            Offset (0x248), 
                ,   7, 
            Q2L2,   1, 
            Q2L0,   1, 
            Offset (0x504), 
            HST2,   32, 
            P2TR,   1, 
            Offset (0xC20), 
                ,   4, 
            P2AP,   2, 
            Offset (0xC38), 
                ,   3, 
            P2RM,   1, 
            Offset (0xC74), 
            P2LT,   4, 
            Offset (0xD0C), 
            LRV2,   32
        }

        OperationRegion (PCS2, SystemMemory, (XBAS + (SBN2 << 0x14)), 0xF0)
        Field (PCS2, DWordAcc, Lock, Preserve)
        {
            D2VI,   16, 
            Offset (0x2C), 
            S2VI,   16, 
            S2DI,   16
        }

        OperationRegion (CAP2, SystemMemory, ((XBAS + (SBN2 << 0x14)) + EEC2), 0x14)
        Field (CAP2, DWordAcc, NoLock, Preserve)
        {
            Offset (0x0C), 
            LCP2,   32, 
            LCT2,   16
        }

        OperationRegion (MCD0, SystemMemory, XBAS, 0xF0)
        Field (MCD0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            MODI,   16
        }

        Method (PEGS, 0, Serialized)
        {
            Local0 = Zero
            If ((((CPEX & 0x0FFF0FF0) == 0x000506E0) || ((CPEX & 0x0FFF0FF0
                ) == 0x000906E0)))
            {
                If (((MODI & 0x06) != 0x04))
                {
                    Local0 = One
                }
            }

            Return (Local0)
        }

        Method (PGON, 1, Serialized)
        {
            PION = Arg0
            If ((PION == Zero))
            {
                If ((SGGP == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((PION == One))
            {
                If ((P1GP == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((PION == 0x02))
            {
                If ((P2GP == Zero))
                {
                    Return (Zero)
                }
            }

            PEBA = \XBAS /* External reference */
            PDEV = GDEV (PION)
            PFUN = GFUN (PION)
            Name (SCLK, Package (0x03)
            {
                One, 
                0x0100, 
                Zero
            })
            If ((DerefOf (SCLK [Zero]) != Zero))
            {
                PCRA (0xDC, 0x100C, ~DerefOf (SCLK [One]))
                Sleep (0x10)
            }

            If ((CCHK (PION, One) == Zero))
            {
                Return (Zero)
            }

            GPPR (PION, One)
            If ((OSYS == 0x07D9))
            {
                If ((PION == Zero))
                {
                    P0AP = Zero
                    P0RM = Zero
                }
                ElseIf ((PION == One))
                {
                    P1AP = Zero
                    P1RM = Zero
                }
                ElseIf ((PION == 0x02))
                {
                    P2AP = Zero
                    P2RM = Zero
                }

                If ((PBGE != Zero))
                {
                    If (SBDL (PION))
                    {
                        PUAB (PION)
                        CBDL = GUBC (PION)
                        MBDL = GMXB (PION)
                        If ((CBDL > MBDL))
                        {
                            CBDL = MBDL /* \_SB_.PCI0.MBDL */
                        }

                        PDUB (PION, CBDL)
                    }
                }

                If ((PION == Zero))
                {
                    P0LD = Zero
                    P0TR = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P0VC == Zero))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }
                }
                ElseIf ((PION == One))
                {
                    P1LD = Zero
                    P1TR = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P1VC == Zero))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }
                }
                ElseIf ((PION == 0x02))
                {
                    P2LD = Zero
                    P2TR = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P2VC == Zero))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }
                }
            }
            Else
            {
                LKEN (PION)
            }

            \_SB.PCI0.PEG0.LREN = \_SB.PCI0.PEG0.PEGP.LTRE
            \_SB.PCI0.PEG0.CEDR = One
            If ((PION == Zero))
            {
                S0VI = H0VI /* \_SB_.PCI0.H0VI */
                S0DI = H0DI /* \_SB_.PCI0.H0DI */
                LCT0 = ((ELC0 & 0x43) | (LCT0 & 0xFFBC))
            }
            ElseIf ((PION == One))
            {
                S1VI = H1VI /* \_SB_.PCI0.H1VI */
                S1DI = H1DI /* \_SB_.PCI0.H1DI */
                LCT1 = ((ELC1 & 0x43) | (LCT1 & 0xFFBC))
            }
            ElseIf ((PION == 0x02))
            {
                S2VI = H2VI /* \_SB_.PCI0.H2VI */
                S2DI = H2DI /* \_SB_.PCI0.H2DI */
                LCT2 = ((ELC2 & 0x43) | (LCT2 & 0xFFBC))
            }

            Return (Zero)
        }

        Method (PGOF, 1, Serialized)
        {
            PIOF = Arg0
            If ((PIOF == Zero))
            {
                If ((SGGP == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((PIOF == One))
            {
                If ((P1GP == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((PIOF == 0x02))
            {
                If ((P2GP == Zero))
                {
                    Return (Zero)
                }
            }

            PEBA = \XBAS /* External reference */
            PDEV = GDEV (PIOF)
            PFUN = GFUN (PIOF)
            Name (SCLK, Package (0x03)
            {
                One, 
                0x0100, 
                Zero
            })
            If ((CCHK (PIOF, Zero) == Zero))
            {
                Return (Zero)
            }

            \_SB.PCI0.PEG0.PEGP.LTRE = \_SB.PCI0.PEG0.LREN
            If ((Arg0 == Zero))
            {
                ELC0 = LCT0 /* \_SB_.PCI0.LCT0 */
                H0VI = S0VI /* \_SB_.PCI0.S0VI */
                H0DI = S0DI /* \_SB_.PCI0.S0DI */
                ECP0 = LCP0 /* \_SB_.PCI0.LCP0 */
            }
            ElseIf ((Arg0 == One))
            {
                ELC1 = LCT1 /* \_SB_.PCI0.LCT1 */
                H1VI = S1VI /* \_SB_.PCI0.S1VI */
                H1DI = S1DI /* \_SB_.PCI0.S1DI */
                ECP1 = LCP1 /* \_SB_.PCI0.LCP1 */
            }
            ElseIf ((Arg0 == 0x02))
            {
                ELC2 = LCT2 /* \_SB_.PCI0.LCT2 */
                H2VI = S2VI /* \_SB_.PCI0.S2VI */
                H2DI = S2DI /* \_SB_.PCI0.S2DI */
                ECP2 = LCP2 /* \_SB_.PCI0.LCP2 */
            }

            If ((OSYS == 0x07D9))
            {
                If ((PIOF == Zero))
                {
                    P0LD = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P0LT == 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }

                    P0RM = One
                    P0AP = 0x03
                }
                ElseIf ((PIOF == One))
                {
                    P1LD = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P1LT == 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }

                    P1RM = One
                    P1AP = 0x03
                }
                ElseIf ((PIOF == 0x02))
                {
                    P2LD = One
                    TCNT = Zero
                    While ((TCNT < LDLY))
                    {
                        If ((P2LT == 0x08))
                        {
                            Break
                        }

                        Sleep (0x10)
                        TCNT += 0x10
                    }

                    P2RM = One
                    P2AP = 0x03
                }

                If ((PBGE != Zero))
                {
                    If (SBDL (PIOF))
                    {
                        MBDL = GMXB (PIOF)
                        PDUB (PIOF, MBDL)
                    }
                }
            }
            Else
            {
                LKDS (PIOF)
            }

            If ((DerefOf (SCLK [Zero]) != Zero))
            {
                PCRO (0xDC, 0x100C, DerefOf (SCLK [One]))
                Sleep (0x10)
            }

            GPPR (PIOF, Zero)
            If ((OSYS != 0x07D9))
            {
                DIWK (PIOF)
            }

            Return (Zero)
        }

        Method (MMRB, 5, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, One)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            Return (TEMP) /* \_SB_.PCI0.MMRB.TEMP */
        }

        Method (MMWB, 6, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, One)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }

            TEMP = Arg5
        }

        Method (MMRW, 5, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x02)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            Return (TEMP) /* \_SB_.PCI0.MMRW.TEMP */
        }

        Method (MMWW, 6, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x02)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }

            TEMP = Arg5
        }

        Method (MMRD, 5, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x04)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.PCI0.MMRD.TEMP */
        }

        Method (MMWD, 6, NotSerialized)
        {
            Local7 = Arg0
            Local7 |= (Arg1 << 0x14)
            Local7 |= (Arg2 << 0x0F)
            Local7 |= (Arg3 << 0x0C)
            Local7 |= Arg4
            OperationRegion (PCI0, SystemMemory, Local7, 0x04)
            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg5
        }

        Method (GULC, 1, NotSerialized)
        {
            Local7 = MMRD (PEBA, PBUS, PDEV, PFUN, 0xAC)
            Local7 >>= 0x04
            Local7 &= 0x3F
            Local6 = Arg0
            Local6 >>= 0x04
            Local6 &= 0x3F
            If ((Local7 > Local6))
            {
                Local0 = (Local7 - Local6)
            }
            Else
            {
                Local0 = Zero
            }

            Return (Local0)
        }

        Method (GMXB, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                HSTR = HST0 /* \_SB_.PCI0.HST0 */
            }
            ElseIf ((Arg0 == One))
            {
                HSTR = HST1 /* \_SB_.PCI0.HST1 */
            }
            ElseIf ((Arg0 == 0x02))
            {
                HSTR = HST2 /* \_SB_.PCI0.HST2 */
            }

            HSTR >>= 0x10
            HSTR &= 0x03
            If ((Arg0 == Zero))
            {
                If ((HSTR == 0x03))
                {
                    Local0 = 0x08
                }
                Else
                {
                    Local0 = 0x04
                }
            }
            ElseIf ((Arg0 == One))
            {
                If ((HSTR == 0x02))
                {
                    Local0 = 0x04
                }
                ElseIf ((HSTR == Zero))
                {
                    Local0 = 0x02
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If ((HSTR == Zero))
                {
                    Local0 = 0x02
                }
            }

            Return (Local0)
        }

        Method (PUAB, 1, NotSerialized)
        {
            FBDL = Zero
            CBDL = Zero
            If ((Arg0 == Zero))
            {
                HSTR = HST0 /* \_SB_.PCI0.HST0 */
                LREV = LRV0 /* \_SB_.PCI0.LRV0 */
            }
            ElseIf ((Arg0 == One))
            {
                HSTR = HST1 /* \_SB_.PCI0.HST1 */
                LREV = LRV1 /* \_SB_.PCI0.LRV1 */
            }
            ElseIf ((Arg0 == 0x02))
            {
                HSTR = HST2 /* \_SB_.PCI0.HST2 */
                LREV = LRV2 /* \_SB_.PCI0.LRV2 */
            }

            HSTR >>= 0x10
            HSTR &= 0x03
            LREV >>= 0x14
            LREV &= One
            If ((Arg0 == Zero))
            {
                If ((HSTR == 0x03))
                {
                    FBDL = Zero
                    CBDL = 0x08
                }
                ElseIf ((LREV == Zero))
                {
                    FBDL = Zero
                    CBDL = 0x04
                }
                Else
                {
                    FBDL = 0x04
                    CBDL = 0x04
                }
            }
            ElseIf ((Arg0 == One))
            {
                If ((HSTR == 0x02))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = 0x04
                        CBDL = 0x04
                    }
                    Else
                    {
                        FBDL = Zero
                        CBDL = 0x04
                    }
                }
                ElseIf ((HSTR == Zero))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = 0x04
                        CBDL = 0x02
                    }
                    Else
                    {
                        FBDL = 0x02
                        CBDL = 0x02
                    }
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If ((HSTR == Zero))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = 0x06
                        CBDL = 0x02
                    }
                    Else
                    {
                        FBDL = Zero
                        CBDL = 0x02
                    }
                }
            }

            INDX = One
            If ((CBDL != Zero))
            {
                While ((INDX <= CBDL))
                {
                    If ((P0VI == IVID)){}
                    ElseIf ((P0VI != IVID))
                    {
                        If ((FBDL == Zero))
                        {
                            BSP1 = Zero
                        }

                        If ((FBDL == One))
                        {
                            BSP2 = Zero
                        }

                        If ((FBDL == 0x02))
                        {
                            BSP3 = Zero
                        }

                        If ((FBDL == 0x03))
                        {
                            BSP4 = Zero
                        }

                        If ((FBDL == 0x04))
                        {
                            BSP5 = Zero
                        }

                        If ((FBDL == 0x05))
                        {
                            BSP6 = Zero
                        }

                        If ((FBDL == 0x06))
                        {
                            BSP7 = Zero
                        }

                        If ((FBDL == 0x07))
                        {
                            BSP8 = Zero
                        }
                    }

                    FBDL++
                    INDX++
                }
            }
        }

        Method (PDUB, 2, NotSerialized)
        {
            FBDL = Zero
            CBDL = Arg1
            If ((CBDL == Zero))
            {
                Return (Zero)
            }

            If ((Arg0 == Zero))
            {
                HSTR = HST0 /* \_SB_.PCI0.HST0 */
                LREV = LRV0 /* \_SB_.PCI0.LRV0 */
            }
            ElseIf ((Arg0 == One))
            {
                HSTR = HST1 /* \_SB_.PCI0.HST1 */
                LREV = LRV1 /* \_SB_.PCI0.LRV1 */
            }
            ElseIf ((Arg0 == 0x02))
            {
                HSTR = HST2 /* \_SB_.PCI0.HST2 */
                LREV = LRV2 /* \_SB_.PCI0.LRV2 */
            }

            HSTR >>= 0x10
            HSTR &= 0x03
            LREV >>= 0x14
            LREV &= One
            If ((Arg0 == Zero))
            {
                If ((HSTR == 0x03))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = (0x08 - CBDL)
                    }
                    Else
                    {
                        FBDL = Zero
                    }
                }
                ElseIf ((LREV == Zero))
                {
                    FBDL = (0x04 - CBDL)
                }
                Else
                {
                    FBDL = 0x04
                }
            }
            ElseIf ((Arg0 == One))
            {
                If ((HSTR == 0x02))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = (0x08 - CBDL)
                    }
                    Else
                    {
                        FBDL = Zero
                    }
                }
                ElseIf ((HSTR == Zero))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = (0x06 - CBDL)
                    }
                    Else
                    {
                        FBDL = 0x02
                    }
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If ((HSTR == Zero))
                {
                    If ((LREV == Zero))
                    {
                        FBDL = (0x08 - CBDL)
                    }
                    Else
                    {
                        FBDL = Zero
                    }
                }
            }

            INDX = One
            While ((INDX <= CBDL))
            {
                If ((P0VI == IVID)){}
                ElseIf ((P0VI != IVID))
                {
                    If ((FBDL == Zero))
                    {
                        BSP1 = One
                    }

                    If ((FBDL == One))
                    {
                        BSP2 = One
                    }

                    If ((FBDL == 0x02))
                    {
                        BSP3 = One
                    }

                    If ((FBDL == 0x03))
                    {
                        BSP4 = One
                    }

                    If ((FBDL == 0x04))
                    {
                        BSP5 = One
                    }

                    If ((FBDL == 0x05))
                    {
                        BSP6 = One
                    }

                    If ((FBDL == 0x06))
                    {
                        BSP7 = One
                    }

                    If ((FBDL == 0x07))
                    {
                        BSP8 = One
                    }
                }

                FBDL++
                INDX++
            }
        }

        Method (SBDL, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                If ((P0UB == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((Arg0 == One))
            {
                If ((P1UB == Zero))
                {
                    Return (Zero)
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If ((P2UB == Zero))
                {
                    Return (Zero)
                }
            }
            Else
            {
                Return (Zero)
            }

            Return (One)
        }

        Method (GUBC, 1, NotSerialized)
        {
            Local7 = Zero
            If ((Arg0 == Zero))
            {
                Local6 = LCP0 /* \_SB_.PCI0.LCP0 */
            }
            ElseIf ((Arg0 == One))
            {
                Local6 = LCP1 /* \_SB_.PCI0.LCP1 */
            }
            ElseIf ((Arg0 == 0x02))
            {
                Local6 = LCP2 /* \_SB_.PCI0.LCP2 */
            }

            If ((Arg0 == Zero))
            {
                If ((P0UB == 0xFF))
                {
                    Local5 = GULC (Local6)
                    Local7 = (Local5 / 0x02)
                }
                ElseIf ((P0UB != Zero))
                {
                    Local7 = P0UB /* External reference */
                }
            }
            ElseIf ((Arg0 == One))
            {
                If ((P1UB == 0xFF))
                {
                    Local5 = GULC (Local6)
                    Local7 = (Local5 / 0x02)
                }
                ElseIf ((P1UB != Zero))
                {
                    Local7 = P1UB /* External reference */
                }
            }
            ElseIf ((Arg0 == 0x02))
            {
                If ((P2UB == 0xFF))
                {
                    Local5 = GULC (Local6)
                    Local7 = (Local5 / 0x02)
                }
                ElseIf ((P2UB != Zero))
                {
                    Local7 = P2UB /* External reference */
                }
            }

            Return (Local7)
        }

        Method (LKEN, 1, NotSerialized)
        {
            Local3 = (CPEX & 0x0F)
            If ((Local3 == Zero))
            {
                If ((Arg0 == Zero))
                {
                    P0L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P0L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == One))
                {
                    P1L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P0L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == 0x02))
                {
                    P2L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P0L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
            }
            ElseIf ((Local3 != Zero))
            {
                If ((Arg0 == Zero))
                {
                    Q0L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q0L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == One))
                {
                    Q1L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q1L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == 0x02))
                {
                    Q2L0 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q2L0)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
            }
        }

        Method (LKDS, 1, NotSerialized)
        {
            Local3 = (CPEX & 0x0F)
            If ((Local3 == Zero))
            {
                If ((Arg0 == Zero))
                {
                    P0L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P0L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == One))
                {
                    P1L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P1L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == 0x02))
                {
                    P2L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (P2L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
            }
            ElseIf ((Local3 != Zero))
            {
                If ((Arg0 == Zero))
                {
                    Q0L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q0L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == One))
                {
                    Q1L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q1L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
                ElseIf ((Arg0 == 0x02))
                {
                    Q2L2 = One
                    Sleep (0x10)
                    Local0 = Zero
                    While (Q2L2)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (0x10)
                        Local0++
                    }
                }
            }
        }

        Method (DIWK, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                \_SB.PCI0.PEG0.P0EW ()
            }
            ElseIf ((Arg0 == One))
            {
                \_SB.PCI0.PEG1.P1EW ()
            }
            ElseIf ((Arg0 == 0x02))
            {
                \_SB.PCI0.PEG2.P2EW ()
            }
        }

        Method (GDEV, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                Local0 = One
            }
            ElseIf ((Arg0 == One))
            {
                Local0 = One
            }

            If ((Arg0 == 0x02))
            {
                Local0 = One
            }

            Return (Local0)
        }

        Method (GFUN, 1, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                Local0 = Zero
            }
            ElseIf ((Arg0 == One))
            {
                Local0 = One
            }

            If ((Arg0 == 0x02))
            {
                Local0 = 0x02
            }

            Return (Local0)
        }

        Method (CCHK, 2, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                Local7 = P0VI /* \_SB_.PCI0.P0VI */
            }
            ElseIf ((Arg0 == One))
            {
                Local7 = P1VI /* \_SB_.PCI0.P1VI */
            }
            ElseIf ((Arg0 == 0x02))
            {
                Local7 = P2VI /* \_SB_.PCI0.P2VI */
            }

            If ((Local7 == IVID))
            {
                Return (Zero)
            }

            If ((Arg0 != Zero))
            {
                Local7 = P0VI /* \_SB_.PCI0.P0VI */
                If ((Local7 == IVID))
                {
                    Return (Zero)
                }
            }

            If ((Arg1 == Zero))
            {
                If ((Arg0 == Zero))
                {
                    If ((SGPI (SGGP, PWE0, PWG0, PWA0) == Zero))
                    {
                        Return (Zero)
                    }
                }

                If ((Arg0 == One))
                {
                    If ((SGPI (P1GP, PWE1, PWG1, PWA1) == Zero))
                    {
                        Return (Zero)
                    }
                }

                If ((Arg0 == 0x02))
                {
                    If ((SGPI (P2GP, PWE2, PWG2, PWA2) == Zero))
                    {
                        Return (Zero)
                    }
                }
            }
            ElseIf ((Arg1 == One))
            {
                If ((Arg0 == Zero))
                {
                    If ((SGPI (SGGP, PWE0, PWG0, PWA0) == One))
                    {
                        Return (Zero)
                    }
                }

                If ((Arg0 == One))
                {
                    If ((SGPI (P1GP, PWE1, PWG1, PWA1) == One))
                    {
                        Return (Zero)
                    }
                }

                If ((Arg0 == 0x02))
                {
                    If ((SGPI (P2GP, PWE2, PWG2, PWA2) == One))
                    {
                        Return (Zero)
                    }
                }
            }

            Return (One)
        }

        Method (NTFY, 2, NotSerialized)
        {
            If ((Arg0 == Zero))
            {
                Notify (\_SB.PCI0.PEG0, Arg1)
            }
            ElseIf ((Arg0 == One))
            {
                Notify (\_SB.PCI0.PEG1, Arg1)
            }
            ElseIf ((Arg0 == 0x02))
            {
                Notify (\_SB.PCI0.PEG2, Arg1)
            }
        }

        Method (GPPR, 2, NotSerialized)
        {
            If ((Arg1 == Zero))
            {
                If ((Arg0 == Zero))
                {
                    SGPO (SGGP, HRE0, HRG0, HRA0, One)
                    SGPO (SGGP, PWE0, PWG0, PWA0, Zero)
                }

                If ((Arg0 == One))
                {
                    SGPO (P1GP, HRE1, HRG1, HRA1, One)
                    SGPO (P1GP, PWE1, PWG1, PWA1, Zero)
                }

                If ((Arg0 == 0x02))
                {
                    SGPO (P2GP, HRE2, HRG2, HRA2, One)
                    SGPO (P2GP, PWE2, PWG2, PWA2, Zero)
                }
            }
            ElseIf ((Arg1 == One))
            {
                If ((Arg0 == Zero))
                {
                    SGPO (SGGP, HRE0, HRG0, HRA0, One)
                    SGPO (SGGP, PWE0, PWG0, PWA0, One)
                    Sleep (DLPW)
                    SGPO (SGGP, HRE0, HRG0, HRA0, Zero)
                    Sleep (DLHR)
                }

                If ((Arg0 == One))
                {
                    SGPO (P1GP, HRE1, HRG1, HRA1, One)
                    SGPO (P1GP, PWE1, PWG1, PWA1, One)
                    Sleep (DLPW)
                    SGPO (P1GP, HRE1, HRG1, HRA1, Zero)
                    Sleep (DLHR)
                }

                If ((Arg0 == 0x02))
                {
                    SGPO (P2GP, HRE2, HRG2, HRA2, One)
                    SGPO (P2GP, PWE2, PWG2, PWA2, One)
                    Sleep (DLPW)
                    SGPO (P2GP, HRE2, HRG2, HRA2, Zero)
                    Sleep (DLHR)
                }
            }
        }

        Method (SGPO, 5, Serialized)
        {
            If ((Arg3 == Zero))
            {
                Arg4 = ~Arg4
                Arg4 &= One
            }

            If ((Arg0 == One))
            {
                If (CondRefOf (\_SB.SGOV))
                {
                    \_SB.SGOV (Arg2, Arg4)
                }
            }
        }

        Method (SGPI, 4, Serialized)
        {
            If ((Arg0 == One))
            {
                If (CondRefOf (\_SB.GGOV))
                {
                    Local0 = \_SB.GGOV (Arg2)
                }
            }

            If ((Arg3 == Zero))
            {
                Local0 = ~Local0
                Local0 &= One
            }

            Return (Local0)
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_SB_.PCI0.SAT0, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT0, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT1, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT2, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT3, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT4, DeviceObj)
    External (_SB_.PCI0.SAT0.PRT5, DeviceObj)
    External (DSSP, IntObj)

    Scope (\)
    {
        Name (STFE, Buffer (0x07)
        {
             0x10, 0x06, 0x00, 0x00, 0x00, 0x00, 0xEF         // .......
        })
        Name (STFD, Buffer (0x07)
        {
             0x90, 0x06, 0x00, 0x00, 0x00, 0x00, 0xEF         // .......
        })
        Name (FZTF, Buffer (0x07)
        {
             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF5         // .......
        })
        Name (DCFL, Buffer (0x07)
        {
             0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB1         // .......
        })
        Name (SCBF, Buffer (0x15){})
        Name (CMDC, Zero)
        Method (GTFB, 2, Serialized)
        {
            Local0 = (CMDC * 0x38)
            CreateField (SCBF, Local0, 0x38, CMDX)
            Local0 = (CMDC * 0x07)
            CreateByteField (SCBF, (Local0 + One), A001)
            CMDX = Arg0
            A001 = Arg1
            CMDC++
        }
    }

    Scope (\_SB.PCI0.SAT0)
    {
        Name (REGF, One)
        Method (_REG, 2, NotSerialized)  // _REG: Region Availability
        {
            If ((Arg0 == 0x02))
            {
                REGF = Arg1
            }
        }

        Name (TMD0, Buffer (0x14){})
        CreateDWordField (TMD0, Zero, PIO0)
        CreateDWordField (TMD0, 0x04, DMA0)
        CreateDWordField (TMD0, 0x08, PIO1)
        CreateDWordField (TMD0, 0x0C, DMA1)
        CreateDWordField (TMD0, 0x10, CHNF)
        Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
        {
            PIO0 = 0x78
            DMA0 = 0x14
            PIO1 = 0x78
            DMA1 = 0x14
            CHNF |= 0x05
            Return (TMD0) /* \_SB_.PCI0.SAT0.TMD0 */
        }

        Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
        {
        }

        Scope (PRT0)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }

        Scope (PRT1)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }

        Scope (PRT2)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }

        Scope (PRT3)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }

        Scope (PRT4)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }

        Scope (PRT5)
        {
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                CMDC = Zero
                If ((DSSP == One))
                {
                    GTFB (STFD, 0x06)
                }
                Else
                {
                    GTFB (STFE, 0x06)
                }

                GTFB (FZTF, Zero)
                GTFB (DCFL, Zero)
                Return (SCBF) /* \SCBF */
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Ist", 0x00003000)
{
    External (_PR_.CFGD, FieldUnitObj)
    External (_PR_.CPPC, FieldUnitObj)
    External (_PR_.CPU0, DeviceObj)
    External (_SB_.OSCP, IntObj)
    External (PDC0, IntObj)
    External (TCNT, FieldUnitObj)

    Scope (\_PR.CPU0)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPPC) /* External reference */
        }

        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            If ((\_SB.OSCP & 0x0400))
            {
                Return (TPSS) /* \_PR_.CPU0.TPSS */
            }
            Else
            {
                Return (LPSS) /* \_PR_.CPU0.LPSS */
            }
        }

        Name (LPSS, Package (0x10)
        {
            Package (0x06)
            {
                0x00000A8D, 
                0x000088B8, 
                0x0000000A, 
                0x0000000A, 
                0x00002100, 
                0x00002100
            }, 

            Package (0x06)
            {
                0x00000A8C, 
                0x000088B8, 
                0x0000000A, 
                0x0000000A, 
                0x00001B00, 
                0x00001B00
            }, 

            Package (0x06)
            {
                0x00000A28, 
                0x000081C2, 
                0x0000000A, 
                0x0000000A, 
                0x00001A00, 
                0x00001A00
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x0000743B, 
                0x0000000A, 
                0x0000000A, 
                0x00001800, 
                0x00001800
            }, 

            Package (0x06)
            {
                0x000008FC, 
                0x00006EF8, 
                0x0000000A, 
                0x0000000A, 
                0x00001700, 
                0x00001700
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x00006885, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x000007D0, 
                0x00005D47, 
                0x0000000A, 
                0x0000000A, 
                0x00001400, 
                0x00001400
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00005731, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x00004B64, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000046E5, 
                0x0000000A, 
                0x0000000A, 
                0x00001000, 
                0x00001000
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00004149, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x00003797, 
                0x0000000A, 
                0x0000000A, 
                0x00000D00, 
                0x00000D00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00003254, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x00002D2F, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x0000245B, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x00001F8B, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
        Name (TPSS, Package (0x15)
        {
            Package (0x06)
            {
                0x00000A8D, 
                0x000088B8, 
                0x0000000A, 
                0x0000000A, 
                0x00002100, 
                0x00002100
            }, 

            Package (0x06)
            {
                0x00000A8C, 
                0x000088B8, 
                0x0000000A, 
                0x0000000A, 
                0x00001B00, 
                0x00001B00
            }, 

            Package (0x06)
            {
                0x00000A28, 
                0x000081C2, 
                0x0000000A, 
                0x0000000A, 
                0x00001A00, 
                0x00001A00
            }, 

            Package (0x06)
            {
                0x000009C4, 
                0x00007AEE, 
                0x0000000A, 
                0x0000000A, 
                0x00001900, 
                0x00001900
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x0000743B, 
                0x0000000A, 
                0x0000000A, 
                0x00001800, 
                0x00001800
            }, 

            Package (0x06)
            {
                0x000008FC, 
                0x00006EF8, 
                0x0000000A, 
                0x0000000A, 
                0x00001700, 
                0x00001700
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x00006885, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x00000834, 
                0x00006237, 
                0x0000000A, 
                0x0000000A, 
                0x00001500, 
                0x00001500
            }, 

            Package (0x06)
            {
                0x000007D0, 
                0x00005D47, 
                0x0000000A, 
                0x0000000A, 
                0x00001400, 
                0x00001400
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00005731, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x00000708, 
                0x0000513B, 
                0x0000000A, 
                0x0000000A, 
                0x00001200, 
                0x00001200
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x00004B64, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x000046E5, 
                0x0000000A, 
                0x0000000A, 
                0x00001000, 
                0x00001000
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00004149, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00003BCD, 
                0x0000000A, 
                0x0000000A, 
                0x00000E00, 
                0x00000E00
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x00003797, 
                0x0000000A, 
                0x0000000A, 
                0x00000D00, 
                0x00000D00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00003254, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x00002D2F, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x00002948, 
                0x0000000A, 
                0x0000000A, 
                0x00000A00, 
                0x00000A00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x0000245B, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x00001F8B, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
        Name (PSDF, Zero)
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If (!PSDF)
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
                PSDF = Ones
            }

            If ((PDC0 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU0.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU0.SPSD */
        }

        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "TC-M1A  ", 0x00001180)
{
    External (_SB_.GGOV, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.I2C0.DFUD, DeviceObj)
    External (_SB_.SGOV, MethodObj)    // 2 Arguments
    External (GPBS, UnknownObj)
    External (SDS0, UnknownObj)
    External (SHAP, UnknownObj)
    External (USBH, UnknownObj)

    Scope (\)
    {
        Device (SHAD)
        {
            Name (_HID, EisaId ("INT33D0"))  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID
            Method (_STA, 0, Serialized)  // _STA: Status
            {
                If (((SDS0 & One) || (USBH & One)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                Name (PGCE, Zero)
                Name (PGCD, Zero)
                Name (PGCG, 0x2E)
                Name (DFUE, Zero)
                Name (DFUD, Zero)
                Name (OLDV, Zero)
                Name (PGCV, Zero)
                Name (DFUV, Zero)
                If ((Arg0 == ToUUID ("03c868d5-563f-42a8-9f57-9a18d949b7cb") /* Unknown UUID */))
                {
                    If ((SHAP == One))
                    {
                        PGCG = 0x3A
                    }

                    If ((ToInteger (Arg1) >= One))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (Zero)
                            {
                                Return (Buffer (One)
                                {
                                     0x0F                                             // .
                                })
                            }
                            Case (One)
                            {
                                PGCE = DerefOf (Arg3 [Zero])
                                PGCD = DerefOf (Arg3 [One])
                                OLDV = \_SB.GGOV (0x02010016)
                                \_SB.SGOV (0x02010016, PGCE)
                                If ((PGCD > Zero))
                                {
                                    Sleep (PGCD)
                                    \_SB.GGOV (0x02010016)
                                    OLDV
                                }

                                If ((\_SB.GGOV (0x02010016) == One))
                                {
                                    Sleep (0x96)
                                    If ((\_SB.GGOV (0x02010014) == One)){}
                                    Else
                                    {
                                        Notify (\_SB.PCI0.I2C0.DFUD, One) // Device Check
                                    }
                                }

                                Return (Zero)
                            }
                            Case (0x02)
                            {
                                DFUE = DerefOf (Arg3 [Zero])
                                DFUD = DerefOf (Arg3 [One])
                                OLDV = \_SB.GGOV (0x02010014)
                                \_SB.GGOV (0x02010014)
                                DFUE
                                If ((DFUD > Zero))
                                {
                                    Sleep (DFUD)
                                    \_SB.GGOV (0x02010014)
                                    OLDV
                                }

                                Return (Zero)
                            }
                            Case (0x03)
                            {
                                DFUV = \_SB.GGOV (0x02010014)
                                PGCV = \_SB.GGOV (0x02010016)
                                Return (Package (0x02)
                                {
                                    PGCV, 
                                    DFUV
                                })
                            }

                        }

                        Return (Zero)
                    }

                    Return (Zero)
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Cst", 0x00003001)
{
    External (_PR_.CPU0, DeviceObj)
    External (C3LT, UnknownObj)
    External (C3MW, UnknownObj)
    External (C6LT, UnknownObj)
    External (C6MW, UnknownObj)
    External (C7LT, UnknownObj)
    External (C7MW, UnknownObj)
    External (CDLT, UnknownObj)
    External (CDLV, UnknownObj)
    External (CDMW, UnknownObj)
    External (CDPW, UnknownObj)
    External (CFGD, UnknownObj)
    External (FEMD, UnknownObj)
    External (FMBL, UnknownObj)
    External (PDC0, UnknownObj)
    External (PFLV, UnknownObj)

    Scope (\_PR.CPU0)
    {
        Name (C1TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            One, 
            One, 
            0x03E8
        })
        Name (C3TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001814, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x01F4
        })
        Name (C6TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001815, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x015E
        })
        Name (C7TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0xC8
        })
        Name (CDTM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x03, 
            Zero, 
            Zero
        })
        Name (MWES, ResourceTemplate ()
        {
            Register (FFixedHW, 
                0x01,               // Bit Width
                0x02,               // Bit Offset
                0x0000000000000000, // Address
                0x01,               // Access Size
                )
        })
        Name (AC2V, Zero)
        Name (AC3V, Zero)
        Name (C3ST, Package (0x04)
        {
            0x03, 
            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }
        })
        Name (C2ST, Package (0x03)
        {
            0x02, 
            Package (0x01)
            {
                Zero
            }, 

            Package (0x01)
            {
                Zero
            }
        })
        Name (C1ST, Package (0x02)
        {
            One, 
            Package (0x01)
            {
                Zero
            }
        })
        Name (CSTF, Zero)
        Method (_CST, 0, Serialized)  // _CST: C-States
        {
            If (!CSTF)
            {
                C3TM [0x02] = C3LT /* External reference */
                C6TM [0x02] = C6LT /* External reference */
                C7TM [0x02] = C7LT /* External reference */
                CDTM [0x02] = CDLT /* External reference */
                CDTM [0x03] = CDPW /* External reference */
                DerefOf (CDTM [Zero]) [0x07] = CDLV /* External reference */
                If (((CFGD & 0x0800) && (PDC0 & 0x0200)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C3TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C6TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C7TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    CDTM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    DerefOf (C3TM [Zero]) [0x07] = C3MW /* External reference */
                    DerefOf (C6TM [Zero]) [0x07] = C6MW /* External reference */
                    DerefOf (C7TM [Zero]) [0x07] = C7MW /* External reference */
                    DerefOf (CDTM [Zero]) [0x07] = CDMW /* External reference */
                }
                ElseIf (((CFGD & 0x0800) && (PDC0 & 0x0100)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                }

                CSTF = Ones
            }

            AC2V = Zero
            AC3V = Zero
            C3ST [One] = C1TM /* \_PR_.CPU0.C1TM */
            If ((CFGD & 0x20))
            {
                C3ST [0x02] = C7TM /* \_PR_.CPU0.C7TM */
                AC2V = Ones
            }
            ElseIf ((CFGD & 0x10))
            {
                C3ST [0x02] = C6TM /* \_PR_.CPU0.C6TM */
                AC2V = Ones
            }
            ElseIf ((CFGD & 0x08))
            {
                C3ST [0x02] = C3TM /* \_PR_.CPU0.C3TM */
                AC2V = Ones
            }

            If ((CFGD & 0x4000))
            {
                C3ST [0x03] = CDTM /* \_PR_.CPU0.CDTM */
                AC3V = Ones
            }

            If ((AC2V && AC3V))
            {
                Return (C3ST) /* \_PR_.CPU0.C3ST */
            }
            ElseIf (AC2V)
            {
                C2ST [One] = DerefOf (C3ST [One])
                C2ST [0x02] = DerefOf (C3ST [0x02])
                Return (C2ST) /* \_PR_.CPU0.C2ST */
            }
            ElseIf (AC3V)
            {
                C2ST [One] = DerefOf (C3ST [One])
                C2ST [0x02] = DerefOf (C3ST [0x03])
                DerefOf (C2ST [0x02]) [One] = 0x02
                Return (C2ST) /* \_PR_.CPU0.C2ST */
            }
            Else
            {
                C1ST [One] = DerefOf (C3ST [One])
                Return (C1ST) /* \_PR_.CPU0.C1ST */
            }
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 82
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "AMI "
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   4]                     Reserved : 00000000
[028h 0040   8]              Control Address : 0000000000000000
[030h 0048   4]                 Start Method : 00000006

Raw Table Data: Length 52 (0x34)

    0000: 54 50 4D 32 34 00 00 00 03 82 4C 45 4E 4F 56 4F  // TPM24.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 41 4D 49 20  // TC-M1A  ....AMI 
    0020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 06 00 00 00                                      // ....


UEFI
----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000042
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 48
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "    "
[020h 0032   4]        Asl Compiler Revision : 01000013

[024h 0036  16]              UUID Identifier : C68ED8E2-9DC6-4CBD-9D94-DB65ACC5C332
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 66 (0x42)

    0000: 55 45 46 49 42 00 00 00 01 48 4C 45 4E 4F 56 4F  // UEFIB....HLENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 20 20 20 20  // TC-M1A  ....    
    0020: 13 00 00 01 E2 D8 8E C6 C6 9D BD 4C 9D 94 DB 65  // ...........L...e
    0030: AC C5 C3 32 36 00 01 00 00 00 00 90 A7 D2 00 00  // ...26...........
    0040: 00 00                                            // ..


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : CC
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "TC-M1A  "
[018h 0024   4]                 Oem Revision : 00001180
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]             Protection Flags : 00000000
                          FIXED_COMM_BUFFERS : 0
           COMM_BUFFER_NESTED_PTR_PROTECTION : 0
                  SYSTEM_RESOURCE_PROTECTION : 0

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 CC 4C 45 4E 4F 56 4F  // WSMT(.....LENOVO
    0010: 54 43 2D 4D 31 41 20 20 80 11 00 00 4D 53 46 54  // TC-M1A  ....MSFT
    0020: 5F 00 00 00 00 00 00 00                          // _.......


